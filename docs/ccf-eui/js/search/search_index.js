var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.21,1,3.122]],["body/modules/AppModule.html",[1,6.493,2,1.331,3,1.765,4,4.089,5,4.089,6,4.089,7,2.474,8,0.011,9,2.388,10,5.437,11,5.437,12,5.12,13,5.437,14,5.437,15,5.437,16,5.437,17,5.437,18,1.923,19,1.409,20,1.188,21,0.115,22,0.141,23,0.115,24,0.103,25,4.66,26,2.166,27,6.18,28,1.981,29,1.156,30,6.934,31,0.922,32,4.66,33,1.004,34,1.332,35,0.341,36,4.254,37,4.089,38,1.295,39,3.432,40,4.089,41,4.924,42,3.208,43,4.66,44,4.089,45,6.18,46,4.534,47,1.923,48,0.28,49,3.037,50,2.124,51,6.18,52,4.089,53,3.713,54,4.924,55,3.713,56,5.423,57,4.007,58,2.485,59,5.423,60,4.089,61,6.18,62,6.18,63,6.18,64,6.18,65,0.822,66,1.633,67,4.552,68,4.66,69,4.66,70,4.66,71,4.089,72,3.208,73,4.66,74,4.66,75,2.485,76,4.66,77,4.66,78,4.552,79,4.66,80,4.66,81,4.089,82,3.208,83,4.089,84,4.66,85,3.432,86,4.66,87,4.66,88,3.021,89,3.208,90,4.66,91,2.597,92,4.552,93,3.713,94,3.208,95,3.021,96,4.089,97,4.089,98,0.141,99,0.078,100,1.793,101,2.597,102,0.798,103,0.896,104,6.18,105,4.66,106,4.089,107,4.66,108,3.208,109,0.006,110,0.008,111,0.006]],["title/interfaces/AppOptions.html",[112,0.664,113,3.377]],["body/interfaces/AppOptions.html",[7,0.877,8,0.011,19,0.877,21,0.072,22,0.088,23,0.072,24,0.048,29,1.093,34,1.453,35,0.316,36,3.034,37,2.545,38,1.117,39,2.136,40,2.545,46,3.655,48,0.174,52,2.545,53,2.311,58,3.175,65,1.129,66,1.017,71,2.545,72,1.997,88,1.88,95,4.889,96,4.677,98,0.088,99,0.048,100,1.116,102,1.418,103,0.848,109,0.004,110,0.005,111,0.008,112,0.454,113,3.512,114,1.017,115,2.545,116,1.872,117,4.677,118,0.522,119,0.649,120,1.217,121,4.371,122,5.102,123,5.954,124,5.102,125,1.646,126,0.707,127,1.274,128,0.957,129,2.857,130,0.906,131,3.034,132,3.867,133,2.311,134,4.407,135,3.246,136,1.191,137,2.706,138,3.034,139,2.901,140,5.33,141,2.545,142,1.88,143,3.415,144,2.136,145,1.017,146,1.616,147,1.616,148,2.901,149,1.191,150,4.407,151,2.901,152,2.901,153,2.311,154,1.88,155,1.88,156,4.641,157,2.545,158,3.034,159,2.857,160,2.901,161,2.311,162,2.456,163,2.545,164,2.97,165,2.901,166,1.781,167,2.136,168,2.35,169,2.901,170,1.295,171,2.545,172,1.566,173,2.901,174,2.311,175,1.483,176,1.518,177,2.901,178,2.311,179,1.438,180,2.901,181,1.88,182,0.828,183,0.986,184,2.901,185,0.986,186,2.901,187,0.957,188,0.957,189,2.901,190,1.276,191,1.759,192,2.901,193,0.805,194,3.867,195,3.034,196,1.124,197,2.521,198,4.744,199,2.545,200,2.901,201,3.456,202,2.901,203,4.247,204,2.901,205,1.545,206,2.254,207,2.311,208,3.318,209,2.901,210,1.455,211,2.136,212,3.318,213,2.35,214,2.706,215,2.901,216,1.708,217,2.901,218,2.901,219,0.94,220,2.901,221,2.901,222,2.901,223,2.311,224,2.901,225,2.901,226,1.46,227,2.901,228,1.547,229,1.88,230,2.857,231,0.903,232,2.901,233,2.901,234,2.901,235,2.901,236,2.225,237,2.545,238,2.901,239,2.901,240,3.669,241,4.247,242,2.901,243,2.901,244,2.901,245,2.136,246,2.901,247,2.901,248,2.901,249,2.311,250,2.901,251,1.333,252,0.852,253,1.777,254,1.881,255,0.68,256,2.545,257,2.311,258,1.781,259,4.407,260,2.901,261,0.782,262,2.311,263,1.88,264,2.901,265,2.901,266,2.901,267,2.901,268,2.901,269,2.901,270,2.901,271,2.901,272,2.901,273,2.901,274,2.901,275,2.901,276,2.901,277,2.901,278,3.926,279,2.901,280,1.997,281,2.901,282,2.901,283,2.901,284,2.901,285,2.901,286,2.901,287,2.545,288,2.901,289,2.901,290,2.901,291,2.136,292,2.901,293,1.372,294,2.901,295,2.901,296,2.901,297,1.547,298,2.545,299,2.901,300,2.706,301,4.407,302,4.407,303,1.81,304,5.33,305,2.901,306,2.901,307,4.407,308,2.545,309,1.872,310,2.901,311,2.901,312,2.901,313,5.33,314,2.136,315,1.616,316,1.872,317,0.625,318,2.118,319,3.045,320,3.512,321,5.916,322,4.247,323,2.051,324,4.407,325,2.901,326,2.311,327,2.901,328,2.901,329,2.901,330,2.901,331,2.901,332,2.901,333,4.407,334,2.901,335,2.901,336,2.001,337,2.901,338,2.901,339,2.901,340,2.545,341,2.901,342,2.545,343,1.781,344,1.781,345,2.901,346,2.136,347,1.997,348,2.901,349,2.901,350,2.311,351,2.545,352,1.997,353,1.997,354,1.425,355,1.997,356,1.939,357,2.574,358,2.901,359,1.081,360,3.867,361,3.867,362,5.33,363,4.407,364,4.407,365,6.742,366,4.407,367,6.742,368,5.954,369,2.901,370,2.901,371,0.957,372,1.88,373,2.009,374,2.901,375,4.407,376,1.153,377,2.901,378,4.407,379,2.901,380,2.901,381,2.901,382,2.136,383,2.901,384,2.311,385,2.901,386,2.901,387,2.901,388,4.407,389,1.88,390,2.901,391,2.901,392,2.901,393,2.901,394,1.425,395,2.901,396,1.694,397,2.545,398,2.901,399,2.545,400,2.706,401,2.545,402,2.901,403,2.901]],["title/injectables/AppRootOverlayContainer.html",[36,2.918,404,1.022]],["body/injectables/AppRootOverlayContainer.html",[8,0.011,21,0.133,22,0.163,23,0.133,24,0.137,29,1.681,31,1.591,33,1.6,34,1.769,35,0.263,36,4.668,38,1.823,39,6.045,41,5.917,42,3.703,48,0.323,98,0.163,99,0.089,109,0.007,110,0.008,111,0.007,116,2.881,118,0.526,119,0.998,120,0.868,126,0.664,131,5.65,191,2.451,210,1.775,226,1.226,256,5.95,261,2.295,317,1.159,404,1.635,405,2.643,406,7.202,407,4.72,408,7.427,409,7.427,410,5.47,411,7.798,412,7.798,413,6.781,414,5.379,415,5.379,416,6.781,417,5.379,418,1.226,419,0.868,420,1.159,421,5.379,422,5.379,423,2.998,424,7.427,425,5.379,426,6.781,427,5.379,428,3.303,429,5.379,430,4.286,431,5.379,432,2.544,433,6.781,434,2.643,435,2.643,436,2.544,437,2.209,438,2.751,439,3.487,440,3.487,441,5.379,442,5.379,443,5.379]],["title/components/AppWebComponent.html",[9,1.281,130,0.532]],["body/components/AppWebComponent.html",[7,1.134,8,0.011,9,2.037,21,0.093,22,0.114,23,0.093,24,0.14,31,1.656,35,0.262,38,1.297,48,0.226,65,1.543,66,1.315,89,5.791,95,4.014,98,0.114,99,0.062,103,1.191,109,0.005,110,0.007,111,0.007,116,2.263,118,0.367,119,0.784,120,0.605,121,4.369,122,4.933,124,4.933,125,1.771,126,0.819,127,1.457,128,1.238,129,4.369,130,0.777,138,4.639,154,2.433,155,2.433,170,1.102,172,1.102,176,1.579,179,1.67,182,2.49,187,1.758,188,1.758,196,1.579,216,1.202,219,0.662,226,1.214,231,1.168,249,5.369,254,1.102,255,1.249,263,4.369,394,1.844,418,0.855,419,0.999,420,1.148,444,1.276,445,1.134,446,6.703,447,2.99,448,6.191,449,1.238,450,5.326,451,1.61,452,3.45,453,2.263,454,6.739,455,6.191,456,6.191,457,6.191,458,6.191,459,6.191,460,4.933,461,5.369,462,3.752,463,5.326,464,5.326,465,3.752,466,3.752,467,3.752,468,3.752,469,3.752,470,3.752,471,3.752,472,3.752,473,3.752,474,3.752,475,3.752,476,3.752,477,3.752,478,3.415,479,3.752,480,3.752,481,3.752,482,3.292,483,2.723,484,3.752,485,7.116,486,3.922,487,3.752,488,3.752,489,3.752,490,4.673,491,3.752,492,3.752,493,3.752,494,2.99,495,3.752,496,2.433,497,3.752,498,3.752,499,2.763,500,3.752,501,3.752,502,3.752,503,3.752,504,3.752,505,2.99,506,6.191,507,1.276,508,1.61,509,1.61,510,1.276,511,2.291,512,1.276,513,1.276,514,1.276,515,1.134,516,1.276,517,1.134,518,1.276,519,1.134,520,1.811,521,1.134,522,1.168,523,1.276,524,1.276,525,1.134,526,1.276,527,1.134,528,1.238,529,1.276,530,1.134,531,1.61,532,1.276,533,1.134,534,1.276,535,1.134,536,1.811,537,1.134,538,1.276,539,1.168,540,1.276,541,1.134,542,1.276,543,1.134,544,1.202,545,1.764,546,1.134,547,1.494,548,0.984,549,1.811,550,1.134,551,1.276,552,1.134,553,1.071,554,1.134,555,1.276,556,1.134,557,1.276,558,1.134,559,1.238,560,1.276,561,1.134,562,1.134,563,1.134,564,1.276,565,1.134,566,1.041,567,1.276,568,1.134,569,1.276,570,1.276]],["title/components/CheckboxComponent.html",[130,0.532,515,1.281]],["body/components/CheckboxComponent.html",[7,1.045,8,0.011,9,1.045,21,0.085,22,0.105,23,0.085,24,0.126,29,1.245,31,1.469,33,0.745,34,1.082,35,0.23,38,0.724,48,0.208,65,1.527,98,0.105,99,0.058,101,1.926,102,0.86,103,0.665,109,0.004,110,0.006,111,0.006,118,0.338,120,0.81,125,1.145,126,0.726,127,1.288,128,1.141,130,0.931,158,5.232,170,1.015,172,1.015,176,1.28,179,1.595,182,2.473,183,1.707,185,1.707,187,1.657,188,1.657,193,1.393,196,1.508,197,3.595,205,1.76,213,2.678,216,1.108,219,0.61,228,2.678,229,3.255,231,1.076,251,1.962,252,1.475,253,1.641,255,0.81,300,3.083,309,3.055,316,2.512,317,1.082,323,1.33,350,4.001,354,3.189,371,1.141,372,3.255,382,3.698,418,1.145,419,1.047,420,1.398,444,1.175,445,1.045,449,1.141,451,1.045,453,2.133,478,2.831,507,1.175,508,1.518,509,1.518,510,1.175,511,2.207,512,1.175,513,1.175,514,1.175,515,1.962,516,1.175,517,1.045,518,1.175,519,1.045,520,1.707,521,1.045,522,1.076,523,1.175,524,1.175,525,1.045,526,1.175,527,1.045,528,1.141,529,1.175,530,1.045,531,1.518,532,1.175,533,1.045,534,1.175,535,1.045,536,1.707,537,1.045,538,1.175,539,1.076,540,1.175,541,1.045,542,1.175,543,1.045,544,1.108,545,1.709,546,1.045,547,1.438,548,0.907,549,1.707,550,1.045,551,1.175,552,1.045,553,0.987,554,1.045,555,1.175,556,1.045,557,1.175,558,1.045,559,1.141,560,1.175,561,1.045,562,1.045,563,1.045,564,1.175,565,1.045,566,0.959,567,1.175,568,1.045,569,1.175,570,1.175,571,1.175,572,3.033,573,1.274,574,5.021,575,4.406,576,7.191,577,2.678,578,5.021,579,7.295,580,5.913,581,5.021,582,5.021,583,6.893,584,3.79,585,2.289,586,4.711,587,2.379,588,3.616,589,5.021,590,3.295,591,3.024,592,1.393,593,1.788,594,4.406,595,3.457,596,3.457,597,5.021,598,4.001,599,5.021,600,5.021,601,3.457,602,4.001,603,5.171,604,4.001,605,3.457,606,6.906,607,4.001,608,6.49,609,2.601,610,4.406,611,3.083,612,3.698,613,5.021,614,6.49,615,5.647,616,3.457,617,3.698,618,3.255,619,5.021,620,4.406,621,4.467,622,3.069,623,3.255,624,5.021,625,5.021,626,2.208,627,2.754,628,1.843,629,1.768,630,3.457,631,4.711,632,3.457,633,5.021,634,3.457,635,3.457,636,3.033,637,1.926,638,1.843,639,3.024,640,3.457,641,3.033,642,3.457,643,2.546,644,3.457,645,3.033,646,2.379,647,3.457,648,2.289,649,1.872,650,1.635,651,1.768,652,2.546,653,2.018,654,2.122,655,2.546,656,2.512,657,1.926,658,2.546,659,5.021,660,3.457,661,1.657,662,2.754,663,3.457,664,3.033]],["title/modules/CheckboxModule.html",[0,1.21,665,2.918]],["body/modules/CheckboxModule.html",[2,1.794,3,2.129,8,0.011,18,2.321,19,1.9,20,1.603,21,0.155,22,0.19,23,0.155,24,0.105,26,2.614,28,2.014,35,0.32,47,2.321,48,0.378,98,0.19,99,0.105,109,0.008,110,0.009,111,0.008,515,2.671,627,5.007,665,5.925,666,5.515,667,5.515,668,5.515,669,6.285,670,2.536,671,2.695,672,2.137,673,6.545,674,6.285]],["title/interfaces/Color.html",[112,0.664,303,1.741]],["body/interfaces/Color.html",[8,0.011,21,0.108,22,0.132,23,0.108,24,0.073,34,0.94,35,0.313,48,0.262,98,0.218,99,0.073,102,1.232,103,1.383,109,0.005,110,0.007,111,0.005,112,0.926,114,1.529,116,1.854,118,0.427,119,0.871,126,0.657,127,1.318,145,1.529,147,2.432,149,1.792,175,2.232,191,1.44,214,3.631,219,0.77,226,1.713,236,2.214,261,1.177,303,3.58,336,1.246,359,1.627,373,1.989,376,1.734,404,1.426,419,0.704,593,2.583,675,3.004,676,2.327,677,3.004,678,5.073,679,5.707,680,4.349,681,3.214,682,3.577,683,1.792,684,3.154,685,2.797,686,2.327,687,3.631,688,2.327,689,1.854,690,3.477,691,3.214,692,3.214,693,3.154,694,4.119,695,3.004,696,3.214,697,3.214,698,3.214,699,3.214,700,3.214,701,3.214,702,3.214,703,3.214,704,3.214,705,3.214,706,3.214,707,3.214,708,3.004,709,3.214,710,2.829,711,3.214,712,3.004,713,4.712,714,6.511,715,5.119,716,2.679,717,6.643,718,4.95,719,3.477,720,2.679,721,2.327,722,4.712,723,2.232,724,4.712,725,3.477,726,3.477,727,3.477,728,3.477,729,5.345,730,5.345,731,3.477,732,3.477,733,4.712,734,3.477,735,3.477,736,3.477,737,3.477,738,3.477,739,3.477,740,3.477,741,3.477,742,3.477,743,4.071,744,3.477,745,4.712,746,4.712,747,4.712,748,4.712,749,3.631,750,3.477,751,3.477,752,3.477,753,3.477]],["title/injectables/ColorAssignmentState.html",[404,1.022,723,2.168]],["body/injectables/ColorAssignmentState.html",[8,0.011,21,0.097,22,0.119,23,0.097,24,0.131,29,1.364,31,1.525,33,1.368,34,1.185,35,0.305,48,0.236,98,0.208,99,0.065,102,1.414,103,1.323,109,0.005,110,0.007,111,0.005,112,0.861,116,2.337,118,0.385,119,0.81,120,1.024,126,0.621,127,1.36,145,1.377,147,2.189,149,1.614,175,2.009,191,1.816,214,3.378,219,0.97,226,1.65,236,2.27,261,1.713,303,3.507,317,1.56,336,1.122,359,2.051,373,1.791,376,1.561,404,1.326,405,1.931,418,1.447,419,1.11,420,1.56,573,0.847,593,2.189,675,5.411,676,4.192,677,2.704,678,4.73,679,4.675,680,4.694,681,2.894,682,3.861,683,1.614,684,2.934,685,2.602,686,2.095,687,3.898,688,2.095,689,1.669,690,3.13,691,2.894,692,2.894,693,3.385,694,4.445,695,2.704,696,2.894,697,2.894,698,2.894,699,2.894,700,2.894,701,2.894,702,2.894,703,2.894,704,2.894,705,2.894,706,2.894,707,2.894,708,2.704,709,2.894,710,2.547,711,2.894,712,2.704,713,4.383,714,6.364,715,5.107,716,2.412,717,6.628,718,5.303,719,4.383,720,2.412,721,2.095,722,4.383,723,2.814,724,5.978,725,4.383,726,4.383,727,4.383,728,4.383,729,5.058,730,5.058,731,3.13,732,3.13,733,5.48,734,3.13,735,3.13,736,3.13,737,3.13,738,3.13,739,3.13,740,3.13,741,3.13,742,3.13,743,3.787,744,3.13,745,4.383,746,4.383,747,4.383,748,4.383,749,3.378,750,3.13,751,3.13,752,3.13,753,3.13,754,5.501,755,5.501,756,5.501,757,3.929,758,1.988,759,3.929,760,3.929,761,3.929,762,3.929,763,3.929,764,3.929,765,3.929,766,3.929]],["title/interfaces/ColorAssignmentStateModel.html",[112,0.664,712,2.918]],["body/interfaces/ColorAssignmentStateModel.html",[8,0.011,21,0.108,22,0.132,23,0.108,24,0.072,34,0.937,35,0.313,48,0.261,98,0.217,99,0.072,102,1.23,103,1.382,109,0.005,110,0.007,111,0.005,112,0.924,114,1.525,116,1.848,118,0.426,119,0.869,126,0.758,127,1.248,145,1.525,147,2.424,149,1.787,175,2.225,191,1.436,214,3.624,219,0.767,226,1.711,236,2.211,261,1.174,303,3.579,336,1.242,359,1.622,373,1.983,376,1.729,404,1.423,419,0.702,593,2.27,675,2.995,676,2.32,677,2.995,678,4.862,679,4.933,680,4.342,681,3.204,682,3.572,683,1.787,684,3.147,685,2.792,686,2.32,687,3.624,688,2.32,689,1.848,690,3.466,691,3.204,692,3.204,693,3.147,694,4.112,695,2.995,696,3.204,697,3.204,698,3.204,699,3.204,700,3.204,701,3.204,702,3.204,703,3.204,704,3.204,705,3.204,706,3.204,707,3.204,708,2.995,709,3.204,710,2.82,711,3.204,712,4.063,713,5.982,714,6.69,715,5.218,716,4.112,717,6.772,718,4.944,719,3.466,720,2.671,721,2.32,722,4.702,723,2.225,724,4.702,725,3.466,726,3.466,727,3.466,728,3.466,729,5.337,730,5.337,731,3.466,732,3.466,733,4.702,734,3.466,735,3.466,736,3.466,737,3.466,738,3.466,739,3.466,740,3.466,741,3.466,742,3.466,743,4.063,744,3.466,745,4.702,746,4.702,747,4.702,748,4.702,749,3.624,750,3.466,751,3.466,752,3.466,753,3.466,767,4.702]],["title/components/ContainerComponent.html",[130,0.532,517,1.281]],["body/components/ContainerComponent.html",[7,0.887,8,0.011,9,0.887,21,0.072,22,0.089,23,0.072,24,0.134,29,1.102,31,1.576,33,1.516,34,1.29,35,0.263,38,0.614,48,0.176,65,1.517,91,2.477,98,0.089,99,0.113,100,1.71,102,0.919,103,1.152,109,0.004,110,0.006,111,0.006,118,0.435,119,0.654,120,0.717,125,1.365,126,0.74,127,0.488,128,0.968,129,3.882,130,0.964,145,1.028,149,1.205,170,0.861,172,1.759,174,3.541,176,1.727,179,2.184,182,2.434,183,1.511,185,1.511,187,1.467,188,1.467,193,1.233,196,1.368,205,1.558,210,2.322,216,0.94,219,0.946,226,1.365,231,0.913,251,1.344,252,1.306,253,1.662,255,0.687,261,2.265,263,3.882,280,2.019,297,2.37,315,4.215,317,1.156,336,0.837,344,1.8,359,1.657,371,0.968,376,2.133,394,2.184,418,1.013,419,0.966,420,1.156,428,1.8,444,0.997,445,0.887,449,0.968,451,0.887,494,2.337,507,0.997,508,1.945,509,1.344,510,0.997,511,2.036,512,0.997,513,0.997,514,0.997,515,0.887,516,0.997,517,1.81,518,0.997,519,1.81,520,1.511,521,0.887,522,0.913,523,0.997,524,0.997,525,0.887,526,0.997,527,0.887,528,0.968,529,0.997,530,0.887,531,1.344,532,0.997,533,0.887,534,0.997,535,0.887,536,1.511,537,0.887,538,0.997,539,0.913,540,0.997,541,0.887,542,0.997,543,0.887,544,1.72,545,1.595,546,0.887,547,1.327,548,0.769,549,1.511,550,0.887,551,0.997,552,0.887,553,0.837,554,0.887,555,0.997,556,0.887,557,0.997,558,0.887,559,0.968,560,0.997,561,0.887,562,0.887,563,0.887,564,0.997,565,0.887,566,0.814,567,0.997,568,0.887,569,0.997,570,0.997,571,0.997,573,1.156,592,1.233,593,1.344,622,3.203,648,3.662,758,2.164,768,2.337,769,4.276,770,2.99,771,3.9,772,4.444,773,3.078,774,5.366,775,4.444,776,3.162,777,2.862,778,5.366,779,5.366,780,5.181,781,3.541,782,4.771,783,3.337,784,5.987,785,2.273,786,3.059,787,3.662,788,5.366,789,3.9,790,4.444,791,2.102,792,3.043,793,3.193,794,3.273,795,1.888,796,4.444,797,4.444,798,2.889,799,2.932,800,3.9,801,4.444,802,3.273,803,3.059,804,2.932,805,2.634,806,3.9,807,4.444,808,2.932,809,3.059,810,2.932,811,4.444,812,4.444,813,2.538,814,2.932,815,2.881,816,2.184,817,7.034,818,4.444,819,5.987,820,2.932,821,4.121,822,3.9,823,5.987,824,4.444,825,2.932,826,3.059,827,3.9,828,4.444,829,2.932,830,3.952,831,3.273,832,2.932,833,2.932,834,3.9,835,2.932,836,2.932,837,2.932,838,1.441,839,2.932,840,2.573,841,2.573,842,2.16,843,2.337,844,1.8,845,2.573,846,2.83,847,2.573,848,3.541,849,2.932,850,2.573,851,2.932,852,2.573,853,2.99,854,2.99,855,2.337,856,2.932,857,2.932,858,2.932,859,2.932,860,1.901,861,2.337,862,2.573,863,2.16,864,2.932,865,2.932,866,3.9,867,1.8,868,2.37,869,3.9,870,2.932,871,2.932,872,2.16,873,2.932,874,1.712,875,2.932,876,2.932,877,4.444,878,4.444,879,2.932,880,2.932,881,2.932,882,2.932,883,2.932,884,2.932,885,2.932,886,1.441,887,1.712,888,3.059,889,1.712,890,2.932,891,2.573,892,2.573]],["title/components/ContentComponent.html",[130,0.532,519,1.281]],["body/components/ContentComponent.html",[7,0.818,8,0.011,9,0.818,20,0.69,21,0.067,22,0.082,23,0.067,24,0.135,29,1.036,31,1.592,33,1.337,34,1.413,35,0.241,38,0.567,48,0.163,65,1.505,98,0.082,99,0.109,100,1.608,102,0.874,103,1.315,109,0.003,110,0.005,111,0.005,118,0.409,119,0.615,120,0.824,125,1.559,126,0.749,127,0.45,128,0.893,129,3.722,130,0.909,145,0.948,170,0.795,172,1.823,176,1.065,179,2.241,182,2.413,185,1.421,187,1.379,188,1.379,191,2.257,193,1.159,196,1.302,205,2.475,210,2.257,216,0.867,219,0.737,226,1.309,231,0.842,236,1.685,251,1.263,252,1.227,253,1.897,255,0.634,261,2.134,263,3.722,280,1.862,291,1.992,315,3.458,317,1.669,318,2.607,323,2.524,336,1.952,343,1.661,344,1.661,371,0.893,372,2.709,376,1.075,394,1.329,418,1.164,419,1.001,420,1.648,428,1.661,444,0.92,445,0.818,449,0.893,451,1.263,452,1.507,507,0.92,508,1.876,509,1.263,510,0.92,511,1.952,512,0.92,513,0.92,514,0.92,515,0.818,516,0.92,517,0.818,518,0.92,519,1.736,520,1.421,521,0.818,522,0.842,523,0.92,524,0.92,525,0.818,526,0.92,527,0.818,528,0.893,529,0.92,530,0.818,531,1.263,532,0.92,533,0.818,534,0.92,535,0.818,536,1.421,537,0.818,538,0.92,539,0.842,540,0.92,541,0.818,542,0.92,543,0.818,544,1.636,545,1.539,546,0.818,547,1.272,548,0.709,549,1.421,550,0.818,551,0.92,552,0.818,553,0.772,554,0.818,555,0.92,556,0.818,557,0.92,558,0.818,559,0.893,560,0.92,561,0.818,562,0.818,563,0.818,564,0.92,565,0.818,566,0.751,567,0.92,568,0.818,569,0.92,570,0.92,571,0.92,573,1.237,592,1.159,593,2.238,621,1.862,622,3.102,649,3.084,661,2.392,758,2.242,770,2.845,773,2.787,777,2.722,780,5.036,781,3.329,783,3.199,785,2.137,787,3.691,789,3.666,791,1.976,792,2.715,793,3.061,794,3.077,795,1.775,798,2.694,802,3.077,803,2.876,805,1.838,809,2.876,816,2.053,827,3.666,830,3.759,831,3.077,838,1.329,842,1.992,846,2.525,853,3.81,854,3.655,863,1.992,867,1.661,868,1.443,872,1.992,886,1.329,888,1.862,893,2.374,894,4.178,895,6.612,896,2.053,897,4.479,898,5.104,899,6.205,900,5.104,901,5.104,902,5.741,903,4.178,904,4.178,905,4.178,906,5.741,907,5.741,908,5.741,909,4.178,910,2.709,911,4.178,912,4.067,913,4.178,914,4.178,915,3.759,916,4.178,917,4.124,918,4.178,919,3.329,920,2.705,921,3.329,922,3.329,923,2.705,924,2.705,925,4.178,926,3.199,927,2.328,928,4.178,929,4.626,930,2.705,931,4.178,932,2.705,933,2.876,934,3.077,935,4.178,936,5.741,937,2.374,938,3.134,939,2.053,940,2.374,941,2.155,942,2.705,943,2.705,944,1.838,945,2.705,946,2.705,947,2.705,948,2.705,949,2.705,950,2.374,951,2.155,952,2.981,953,4.178,954,2.705,955,4.178,956,2.705,957,1.661,958,1.754,959,2.705,960,2.705,961,2.705,962,5.104,963,2.705,964,2.705,965,4.178,966,2.705,967,2.705,968,4.178,969,2.705,970,2.705,971,2.705,972,1.19,973,1.992,974,2.374,975,1.754,976,2.705,977,2.705,978,2.705,979,1.754]],["title/interfaces/ContentContainerChanged.html",[112,0.664,980,2.602]],["body/interfaces/ContentContainerChanged.html",[8,0.011,21,0.121,22,0.148,23,0.121,24,0.082,35,0.19,98,0.257,99,0.082,103,0.943,109,0.006,110,0.008,111,0.006,112,1.179,114,1.718,118,0.48,119,0.941,125,1.456,126,0.864,130,0.98,176,1.629,179,2.319,181,3.178,193,1.36,205,2.239,208,2.732,219,1.127,236,1.618,309,3.2,315,3.561,359,1.827,434,2.409,435,2.409,436,2.319,437,2.013,438,2.507,439,3.178,440,3.178,452,2.732,483,3.127,566,1.36,573,1.056,592,1.773,593,1.932,648,2.913,649,2.382,661,2.109,683,3.094,773,3.02,776,2.409,787,3.812,791,2.319,792,3.022,795,3.02,798,3.531,813,3.022,867,3.01,868,3.407,929,3.923,933,3.374,957,3.01,980,4.364,981,3.01,982,4.463,983,4.398,984,4.398,985,4.608,986,3.374,987,3.923,988,3.374,989,2.862,990,3.923,991,4.398,992,3.61,993,3.61,994,3.923,995,3.923,996,3.268,997,3.61,998,2.319,999,3.374,1000,4.398,1001,3.01,1002,3.791]],["title/modules/CoreModule.html",[0,1.21,10,2.918]],["body/modules/CoreModule.html",[0,1.963,2,1.569,3,1.963,8,0.011,10,5.981,18,2.139,19,1.662,20,1.402,21,0.136,22,0.166,23,0.136,24,0.091,28,2.203,35,0.334,38,1.152,47,2.139,48,0.33,65,1.323,66,1.927,91,3.063,92,4.049,97,4.824,98,0.166,99,0.091,108,3.784,109,0.007,110,0.009,111,0.007,120,0.887,137,4.221,141,4.824,154,3.564,155,3.564,219,1.212,494,4.38,670,2.338,1003,4.824,1004,4.824,1005,4.824,1006,5.981,1007,5.681,1008,5.681,1009,5.497,1010,6.874,1011,5.497,1012,4.732,1013,6.874,1014,5.497,1015,6.874,1016,5.497,1017,5.497,1018,4.824,1019,5.497,1020,4.732,1021,5.497,1022,3.784,1023,4.38,1024,5.497,1025,5.497,1026,5.497,1027,5.497,1028,5.497,1029,5.497,1030,5.497,1031,5.497,1032,5.497,1033,4.824,1034,7.501,1035,5.497,1036,4.38,1037,5.497]],["title/interfaces/DataStateModel.html",[112,0.664,1038,3.377]],["body/interfaces/DataStateModel.html",[8,0.011,21,0.063,22,0.183,23,0.063,24,0.043,33,1.571,34,1.382,35,0.277,48,0.154,65,0.87,66,0.898,98,0.169,99,0.043,100,0.986,101,1.428,102,1.434,103,0.771,108,1.764,109,0.009,110,0.005,111,0.003,112,0.627,114,0.898,116,1.089,118,0.392,119,0.59,120,0.414,125,0.584,126,0.628,127,0.82,136,2.026,137,2.46,142,2.598,143,3.575,144,1.888,145,0.898,146,1.428,147,1.428,149,1.053,161,3.193,162,1.428,193,1.679,195,2.758,196,1.258,197,1.895,203,3.93,210,0.846,211,1.888,219,1.286,226,1.662,228,1.367,229,1.662,236,2.353,237,2.249,240,1.764,241,2.042,245,4.937,251,0.775,252,0.753,253,2.062,254,2.433,258,2.46,261,2.111,300,1.574,309,1.089,316,3.677,317,0.552,353,2.758,373,2.249,376,1.019,394,3.294,404,0.966,419,0.414,420,0.863,428,2.46,434,1.26,435,1.26,436,2.333,437,1.053,531,0.775,562,1.211,573,0.552,577,4.174,592,1.112,593,0.775,638,1.367,682,2.631,683,1.053,684,2.137,685,1.895,686,1.367,688,1.367,689,1.089,693,4.026,721,1.367,791,1.212,798,1.053,843,3.93,844,1.574,848,3.93,853,1.428,926,1.428,927,2.749,952,1.497,989,2.881,1001,1.574,1038,3.193,1039,1.764,1040,6.989,1041,6.415,1042,5.882,1043,6.415,1044,3.193,1045,3.396,1046,5.251,1047,1.662,1048,2.249,1049,4.007,1050,2.042,1051,2.042,1052,4.007,1053,6.937,1054,4.007,1055,3.516,1056,1.888,1057,4.933,1058,2.563,1059,2.563,1060,4.007,1061,2.249,1062,2.249,1063,1.888,1064,1.764,1065,2.758,1066,3.633,1067,1.311,1068,2.042,1069,2.249,1070,2.249,1071,2.249,1072,2.042,1073,2.042,1074,2.042,1075,1.764,1076,2.249,1077,2.249,1078,2.249,1079,6.393,1080,1.497,1081,2.563,1082,2.042,1083,2.042,1084,4.328,1085,4.725,1086,2.042,1087,4.894,1088,2.042,1089,3.516,1090,2.563,1091,1.497,1092,1.574,1093,2.249,1094,2.249,1095,2.563,1096,3.516,1097,2.249,1098,2.042,1099,2.249,1100,2.249,1101,2.042,1102,6.625,1103,1.574,1104,5.109,1105,3.198,1106,2.042,1107,1.764,1108,2.563,1109,2.563,1110,2.563,1111,2.563,1112,2.563,1113,2.249,1114,2.563,1115,2.563,1116,2.563,1117,4.937,1118,4.007,1119,2.563,1120,4.007,1121,2.563,1122,4.007,1123,2.563,1124,4.007,1125,2.563,1126,4.007,1127,2.563,1128,4.007,1129,2.563,1130,4.007,1131,2.563,1132,4.007,1133,3.516,1134,4.007,1135,4.007,1136,4.007,1137,2.563,1138,4.007,1139,6.703,1140,2.563,1141,2.563,1142,4.007,1143,3.516,1144,2.563,1145,2.563,1146,4.108,1147,5.577,1148,4.007,1149,2.563,1150,2.563,1151,4.007,1152,2.563,1153,2.563,1154,4.007,1155,2.563,1156,2.563,1157,3.516,1158,4.007,1159,2.563,1160,2.563,1161,4.007,1162,4.007,1163,2.563,1164,2.563,1165,2.563,1166,2.563,1167,2.563,1168,2.563,1169,2.563,1170,2.563,1171,2.563,1172,2.563,1173,2.563,1174,2.563,1175,2.563,1176,2.563,1177,2.563,1178,2.563,1179,2.563,1180,2.563,1181,2.563,1182,2.563,1183,2.563,1184,2.563,1185,1.574,1186,2.563,1187,2.563,1188,2.563,1189,2.563,1190,2.563,1191,2.563,1192,2.563,1193,2.563,1194,2.563,1195,2.042,1196,2.563,1197,2.563,1198,2.563,1199,2.563,1200,2.563,1201,2.563,1202,2.563,1203,2.563,1204,2.563,1205,2.563,1206,2.563,1207,2.563,1208,2.042,1209,2.563,1210,2.563,1211,4.007,1212,2.758,1213,2.563,1214,2.563,1215,2.249,1216,2.563,1217,4.007,1218,2.563,1219,1.764,1220,2.563,1221,2.563,1222,1.764,1223,2.563,1224,2.563,1225,4.457,1226,2.563,1227,2.563,1228,6.703,1229,2.563,1230,2.563,1231,2.563,1232,2.563,1233,2.563,1234,2.563,1235,2.563,1236,2.563,1237,2.563,1238,2.563,1239,2.563,1240,2.563,1241,2.563,1242,2.563,1243,2.563,1244,2.563,1245,2.563]],["title/interfaces/DefaultIconDefinition.html",[112,0.664,1246,3.122]],["body/interfaces/DefaultIconDefinition.html",[8,0.011,21,0.086,22,0.106,23,0.086,24,0.058,88,5.725,98,0.153,103,0.672,109,0.004,110,0.006,111,0.004,112,0.547,114,1.224,118,0.342,119,0.745,120,1.23,126,0.638,127,1.343,212,4.951,213,2.698,293,3.414,316,1.484,318,2.751,323,2.663,357,2.04,419,1.432,508,2.251,573,0.753,795,1.484,874,2.955,944,1.537,1222,2.405,1246,4.381,1247,2.405,1248,2.783,1249,2.783,1250,2.783,1251,4.413,1252,3.065,1253,4.031,1254,3.493,1255,3.493,1256,2.405,1257,3.493,1258,3.065,1259,2.783,1260,3.065,1261,6.534,1262,3.726,1263,4.803,1264,5.196,1265,3.726,1266,2.405,1267,2.783,1268,2.405,1269,4.691,1270,3.065,1271,7.71,1272,3.065,1273,3.065,1274,3.065,1275,4.44,1276,3.065,1277,3.065,1278,3.065,1279,3.065,1280,3.065,1281,3.065,1282,5.723,1283,5.723,1284,6.074,1285,6.074,1286,2.573,1287,3.065,1288,4.765,1289,3.065,1290,3.065,1291,3.065,1292,4.44,1293,4.44,1294,4.44,1295,3.065,1296,3.065,1297,6.074,1298,3.065,1299,4.44,1300,3.065,1301,3.065,1302,3.065,1303,3.065,1304,3.065,1305,5.723,1306,3.065,1307,3.065,1308,4.44,1309,3.065,1310,3.065,1311,2.783,1312,3.065,1313,3.065,1314,3.065,1315,3.065,1316,3.065,1317,4.031,1318,4.031,1319,2.783,1320,3.065,1321,2.573,1322,3.065,1323,3.065,1324,3.065,1325,3.065,1326,3.065,1327,5.723,1328,3.065,1329,3.065,1330,5.723,1331,3.065,1332,3.065,1333,2.573,1334,3.065,1335,3.065,1336,6.074,1337,3.065,1338,4.44,1339,3.065,1340,2.783,1341,3.065,1342,2.783,1343,3.065,1344,3.065]],["title/interfaces/DelegateDataSourceOptions.html",[112,0.664,1345,3.122]],["body/interfaces/DelegateDataSourceOptions.html",[8,0.011,21,0.146,22,0.179,23,0.146,24,0.098,35,0.313,38,1.238,48,0.355,65,1.042,66,2.071,98,0.218,99,0.098,103,1.137,109,0.007,110,0.009,111,0.007,112,0.925,114,2.071,116,2.511,118,0.578,119,1.058,120,1.3,125,1.766,126,0.703,127,1.288,154,3.831,155,3.831,226,1.766,254,1.736,359,2.203,404,1.733,410,4.352,423,3.293,460,6.692,461,6.692,486,4.352,548,1.55,1020,4.068,1022,4.068,1023,4.708,1345,5.705,1346,4.068,1347,4.352,1348,6.307,1349,6.307,1350,6.307,1351,5.185,1352,6.307,1353,4.948,1354,5.294,1355,5.185,1356,5.185]],["title/injectables/DelegateDataSourceService.html",[404,1.022,1020,2.918]],["body/injectables/DelegateDataSourceService.html",[8,0.011,21,0.145,22,0.178,23,0.145,24,0.119,29,1.775,31,1.162,33,1.265,35,0.312,38,1.229,48,0.353,65,1.035,66,2.057,98,0.217,99,0.098,103,1.129,109,0.007,110,0.009,111,0.007,112,0.919,116,3.041,118,0.574,120,0.947,125,1.338,126,0.574,127,0.976,154,3.805,155,3.805,226,1.76,254,1.724,359,2.188,404,1.726,405,2.884,410,5.688,418,1.338,419,0.947,423,3.27,460,6.154,461,6.154,486,4.322,548,1.877,1020,4.927,1022,4.927,1023,4.676,1345,5.922,1346,4.927,1347,4.322,1348,6.777,1349,6.281,1350,6.281,1351,5.15,1352,6.777,1353,4.927,1354,5.272,1355,6.281,1356,5.15,1357,7.158,1358,5.869]],["title/components/DonorCardComponent.html",[130,0.532,521,1.281]],["body/components/DonorCardComponent.html",[7,0.7,8,0.011,9,0.7,20,0.59,21,0.152,22,0.07,23,0.057,24,0.127,29,0.916,31,1.498,33,0.994,34,1.323,35,0.179,38,0.485,48,0.139,65,1.484,98,0.07,99,0.102,101,1.289,102,1.051,109,0.003,110,0.005,111,0.005,118,0.226,119,0.544,120,0.596,125,1.052,126,0.72,127,1.071,128,0.764,130,0.937,136,0.95,170,0.68,172,0.68,174,1.844,176,0.942,179,1.245,182,2.368,183,1.257,185,1.257,187,1.22,188,1.22,191,2.127,194,3.243,195,2.544,196,1.177,210,0.764,212,3.421,216,0.741,219,0.929,223,2.944,228,1.971,229,2.396,231,0.72,236,2.277,251,1.117,252,1.086,253,1.025,254,1.086,255,0.542,293,2.904,303,2.647,309,1.57,317,1.389,318,2.44,323,1.775,336,2.1,356,3.035,371,2.026,376,2.094,389,3.415,418,0.842,419,1.04,420,1.323,428,3.769,432,2.724,437,1.518,444,0.787,445,0.7,449,0.764,451,0.7,453,1.57,478,2.522,507,0.787,508,1.741,509,1.741,510,0.787,511,1.791,512,0.787,513,0.787,514,0.787,515,0.7,516,0.787,517,0.7,518,0.787,519,0.7,520,1.257,521,1.593,522,2.516,523,0.787,524,0.787,525,0.7,526,0.787,527,0.7,528,0.764,529,0.787,530,0.7,531,1.117,532,0.787,533,0.7,534,0.787,535,0.7,536,1.257,537,0.7,538,0.787,539,0.72,540,0.787,541,0.7,542,0.787,543,0.7,544,1.478,545,1.428,546,0.7,547,1.168,548,0.607,549,1.257,550,0.7,551,0.787,552,0.7,553,0.661,554,0.7,555,0.787,556,0.7,557,0.787,558,0.7,559,0.764,560,0.787,561,0.7,562,1.948,563,1.395,564,0.787,565,0.7,566,0.642,567,0.787,568,0.7,569,0.787,570,0.787,571,0.787,573,1.241,579,6.34,585,1.685,587,1.593,588,2.936,590,2.571,591,2.36,592,1.025,602,2.944,606,5.053,609,2.533,610,4.623,622,1.748,626,2.029,628,1.234,629,1.183,637,2.571,638,2.46,639,3.14,641,3.243,645,3.243,646,3.627,648,1.055,649,2.742,650,2.492,651,2.36,652,4.929,653,3.763,654,2.833,656,2.931,661,2.385,758,0.836,785,1.89,787,2.402,803,2.544,805,2.317,816,1.816,838,1.137,846,2.029,854,2.059,868,1.971,886,1.137,887,2.158,888,2.544,889,1.351,896,3.017,915,1.704,917,3.363,939,1.137,944,2.317,952,2.158,972,2.834,975,1.5,979,2.991,996,3.619,1051,3.676,1080,1.351,1251,1.971,1340,2.944,1342,2.944,1359,4.702,1360,6.102,1361,5.641,1362,2.03,1363,6.911,1364,3.243,1365,3.243,1366,4.614,1367,3.695,1368,4.048,1369,4.614,1370,5.268,1371,3.695,1372,5.268,1373,5.053,1374,3.398,1375,4.614,1376,3.695,1377,2.314,1378,4.522,1379,3.585,1380,3.98,1381,2.314,1382,2.314,1383,2.314,1384,2.314,1385,2.314,1386,2.314,1387,3.769,1388,3.695,1389,2.314,1390,4.198,1391,2.722,1392,3.695,1393,2.314,1394,3.243,1395,3.243,1396,2.396,1397,3.695,1398,3.695,1399,2.544,1400,2.269,1401,2.314,1402,2.944,1403,2.722,1404,3.695,1405,3.243,1406,6.139,1407,2.314,1408,4.614,1409,4.614,1410,3.695,1411,4.623,1412,2.314,1413,2.314,1414,2.314,1415,3.243,1416,3.695,1417,3.695,1418,5.387,1419,5.268,1420,3.695,1421,3.695,1422,3.695,1423,3.695,1424,3.695,1425,3.695,1426,1.5,1427,1.5,1428,3.017,1429,2.945,1430,3.017,1431,2.396,1432,1.816,1433,1.234,1434,1.844,1435,2.158,1436,2.694,1437,2.46,1438,2.314,1439,2.314,1440,2.314,1441,2.314,1442,2.03,1443,2.314,1444,1.844,1445,2.314,1446,2.314,1447,3.676,1448,2.314,1449,1.593,1450,2.83,1451,2.571,1452,3.676,1453,3.243,1454,1.704,1455,1.844,1456,5.873,1457,1.289,1458,5.053,1459,2.03,1460,3.398,1461,3.676,1462,2.314,1463,3.243,1464,2.314,1465,2.314,1466,2.314,1467,2.314,1468,2.314,1469,2.314,1470,1.234,1471,2.314,1472,2.694,1473,1.5,1474,2.03,1475,2.314,1476,2.833,1477,2.314,1478,2.314,1479,3.695,1480,2.03,1481,2.314,1482,2.944,1483,2.314,1484,2.314,1485,2.03,1486,2.314,1487,2.314,1488,1.704,1489,2.314]],["title/modules/DonorCardModule.html",[0,1.21,1490,2.918]],["body/modules/DonorCardModule.html",[2,1.68,3,2.047,8,0.011,18,2.231,19,1.779,20,1.501,21,0.145,22,0.178,23,0.145,24,0.098,26,2.513,28,2.298,35,0.33,47,2.231,48,0.354,49,3.524,50,2.683,98,0.178,99,0.098,109,0.007,110,0.009,111,0.007,521,2.65,522,1.831,562,1.779,563,2.168,627,4.689,670,2.438,671,2.591,672,2.001,673,6.291,1359,3.613,1360,4.689,1361,4.334,1490,6.009,1491,5.164,1492,5.164,1493,5.164,1494,5.164,1495,5.776,1496,5.776,1497,5.885,1498,5.885,1499,4.051,1500,5.885,1501,5.885,1502,4.334,1503,5.885]],["title/interfaces/DrawerContainersChanged.html",[112,0.664,987,2.602]],["body/interfaces/DrawerContainersChanged.html",[8,0.011,21,0.12,22,0.147,23,0.12,24,0.081,35,0.189,98,0.257,99,0.081,103,0.934,109,0.006,110,0.008,111,0.006,112,1.175,114,1.702,118,0.475,119,0.935,125,1.448,126,0.864,130,0.941,176,1.805,179,2.336,181,3.149,193,1.348,205,2.226,208,2.707,219,0.857,236,1.603,309,3.189,315,4.34,359,2.368,434,2.387,435,2.387,436,2.297,437,1.995,438,2.484,439,3.149,440,3.149,452,2.707,483,3.113,566,1.348,573,1.047,592,1.762,593,1.92,648,2.895,649,2.368,661,2.096,683,3.083,773,3.007,776,2.387,787,3.421,791,2.297,792,3.004,795,2.698,798,3.527,813,3.004,867,2.982,868,3.387,929,3.899,933,4.372,957,2.982,980,3.899,981,2.982,982,4.452,983,4.372,984,4.372,985,4.588,986,3.343,987,4.345,988,4.372,989,3.709,990,3.899,991,4.372,992,3.577,993,3.577,994,3.899,995,3.899,996,3.248,997,3.577,998,2.297,999,3.343,1000,4.372,1001,2.982,1002,3.774]],["title/interfaces/DrawerInitialized.html",[112,0.664,994,2.602]],["body/interfaces/DrawerInitialized.html",[8,0.011,21,0.122,22,0.15,23,0.122,24,0.082,35,0.192,98,0.258,99,0.082,103,0.951,109,0.006,110,0.008,111,0.006,112,1.183,114,1.732,118,0.484,119,0.946,125,1.464,126,0.864,130,0.895,176,1.638,179,2.332,181,3.204,193,1.371,205,2.251,208,2.754,219,0.871,236,1.631,309,3.032,315,3.579,359,1.842,434,2.429,435,2.429,436,2.337,437,2.03,438,2.527,439,3.204,440,3.204,452,2.754,483,3.139,566,1.371,573,1.065,592,1.782,593,1.942,648,2.928,649,2.394,661,2.12,683,3.103,773,3.032,776,2.429,787,3.444,791,2.337,792,3.038,795,2.729,798,3.535,813,3.038,867,3.034,868,3.425,929,3.944,933,3.402,957,3.034,980,3.944,981,3.034,982,4.473,983,4.421,984,4.421,985,4.626,986,3.402,987,3.944,988,3.402,989,2.886,990,3.944,991,4.421,992,4.73,993,4.73,994,4.381,995,3.944,996,3.285,997,3.64,998,2.337,999,3.402,1000,4.421,1001,3.034,1002,3.805]],["title/modules/DrawerModule.html",[0,1.21,11,2.918]],["body/modules/DrawerModule.html",[2,1.592,3,1.98,8,0.011,11,6.069,18,2.159,19,1.686,20,1.422,21,0.138,22,0.169,23,0.138,24,0.093,26,2.431,28,1.787,35,0.332,47,2.159,48,0.335,49,3.409,50,2.542,56,6.086,57,4.497,58,2.974,59,6.086,60,4.893,91,3.108,92,4.107,93,4.443,98,0.169,99,0.093,109,0.007,110,0.009,111,0.007,172,2.557,517,2.632,519,2.632,565,2.632,566,1.547,670,2.358,841,4.893,842,4.107,986,3.839,1504,4.893,1505,4.893,1506,4.893,1507,5.576,1508,4.258,1509,4.258,1510,5.576,1511,4.443,1512,5.576]],["title/interfaces/DrawerToggled.html",[112,0.664,995,2.602]],["body/interfaces/DrawerToggled.html",[8,0.011,21,0.116,22,0.142,23,0.116,24,0.078,35,0.183,98,0.256,99,0.078,103,0.904,109,0.006,110,0.008,111,0.006,112,1.16,114,1.648,118,0.46,119,0.915,125,1.805,126,0.866,130,0.874,176,1.585,179,2.35,181,3.048,193,1.725,205,2.597,208,3.464,219,0.829,236,2.052,309,3.148,315,3.464,359,1.753,434,2.311,435,2.311,436,2.224,437,1.931,438,2.405,439,3.048,440,3.048,452,2.62,483,3.063,566,1.725,573,1.013,592,1.725,593,2.394,648,2.834,649,2.952,661,2.613,683,3.044,773,2.959,776,2.311,787,3.378,791,2.94,792,2.94,795,2.641,798,3.511,813,2.94,867,2.887,868,3.315,929,4.861,933,3.236,957,2.887,980,3.817,981,2.887,982,4.295,983,4.279,984,4.279,985,4.515,986,3.236,987,3.817,988,3.236,989,2.745,990,3.817,991,4.279,992,3.463,993,3.463,994,3.817,995,4.276,996,4.049,997,4.578,998,2.94,999,4.279,1000,4.279,1001,2.887,1002,3.714]],["title/components/DropdownComponent.html",[130,0.532,525,1.281]],["body/components/DropdownComponent.html",[7,0.982,8,0.011,9,0.982,21,0.08,22,0.098,23,0.08,24,0.127,29,1.189,31,1.478,33,1.034,34,1.358,35,0.186,38,0.68,48,0.195,65,1.522,98,0.098,99,0.054,101,1.81,102,0.822,109,0.004,110,0.006,111,0.006,118,0.318,119,0.706,120,0.774,126,0.712,127,1.29,128,1.072,130,0.957,158,4.626,170,0.954,172,0.954,176,1.223,179,1.539,182,2.459,183,1.631,185,1.631,187,1.583,188,1.583,193,1.331,196,1.455,197,3.327,216,1.041,219,1.006,228,2.558,230,2.106,231,1.011,251,1.45,252,1.409,253,1.331,255,0.761,278,2.392,317,0.7,318,2.504,323,1.846,336,1.799,356,3.285,376,1.291,384,2.588,418,1.094,419,1.017,420,1.61,430,3.822,432,2.698,444,1.104,445,0.982,449,1.072,451,0.982,453,2.038,478,2.588,507,1.104,508,1.45,509,1.45,510,1.104,511,2.142,512,1.104,513,1.104,514,1.104,515,0.982,516,1.104,517,0.982,518,1.104,519,0.982,520,1.631,521,0.982,522,1.011,523,1.104,524,1.104,525,1.905,526,1.104,527,0.982,528,1.072,529,1.104,530,0.982,531,1.45,532,1.104,533,0.982,534,1.104,535,0.982,536,1.631,537,0.982,538,1.104,539,1.011,540,1.104,541,0.982,542,1.104,543,0.982,544,1.041,545,1.666,546,0.982,547,1.396,548,0.852,549,1.631,550,0.982,551,1.104,552,0.982,553,0.927,554,0.982,555,1.104,556,0.982,557,1.104,558,0.982,559,1.072,560,1.104,561,0.982,562,0.982,563,0.982,564,1.104,565,0.982,566,0.901,567,1.104,568,0.982,569,1.104,570,1.104,571,1.104,573,1.229,577,2.558,584,3.331,585,2.187,586,4.545,587,2.236,588,3.511,590,3.179,591,2.917,592,1.331,609,2.509,615,5.142,626,2.11,628,1.732,629,1.661,631,2.588,637,3.745,638,3.584,639,3.82,646,3.302,650,2.269,651,3.437,653,3.331,654,1.994,655,2.392,656,1.38,661,2.402,846,1.429,868,2.558,912,5.019,917,2.801,926,2.673,938,1.994,939,1.596,944,2.509,972,2.771,1056,3.533,1080,1.897,1426,2.106,1427,3.698,1430,3.457,1432,3.096,1449,2.236,1450,1.596,1457,1.81,1470,1.732,1472,2.454,1513,2.85,1514,7.121,1515,6.554,1516,5.704,1517,4.797,1518,5.704,1519,4.797,1520,6.3,1521,4.797,1522,3.248,1523,3.822,1524,3.248,1525,4.797,1526,2.945,1527,3.248,1528,3.248,1529,4.797,1530,3.248,1531,3.248,1532,4.797,1533,5.019,1534,5.019,1535,3.822,1536,3.533,1537,3.925,1538,4.797,1539,3.248,1540,3.248,1541,3.248,1542,4.21,1543,4.797,1544,3.248,1545,4.21,1546,4.468,1547,4.249,1548,3.927,1549,5.704,1550,2.588,1551,2.588,1552,3.042,1553,3.11,1554,2.392,1555,4.084,1556,3.822,1557,2.106,1558,4.64,1559,2.236,1560,4.21,1561,2.85,1562,3.248,1563,2.85,1564,2.85,1565,3.533,1566,2.85,1567,3.248,1568,2.588,1569,3.248,1570,1.897,1571,2.106,1572,3.248,1573,2.588,1574,3.248,1575,2.85,1576,2.85,1577,3.248]],["title/modules/DropdownModule.html",[0,1.21,1578,2.918]],["body/modules/DropdownModule.html",[2,1.776,3,2.116,8,0.011,18,2.307,19,1.881,20,1.586,21,0.154,22,0.188,23,0.154,24,0.103,26,2.598,28,1.993,35,0.325,47,2.307,48,0.374,98,0.188,99,0.103,109,0.008,110,0.009,111,0.008,525,2.668,670,2.521,671,2.679,672,2.115,1547,3.632,1578,5.913,1579,5.458,1580,5.458,1581,5.458,1582,6.22,1583,5.907,1584,4.956,1585,5.907,1586,4.956,1587,6.22]],["title/components/DualSliderComponent.html",[130,0.532,527,1.281]],["body/components/DualSliderComponent.html",[7,0.546,8,0.011,9,0.546,21,0.045,22,0.055,23,0.045,24,0.133,29,0.748,31,1.569,33,1.403,34,1.594,35,0.196,38,0.378,42,1.242,48,0.108,53,1.438,65,1.424,82,5.485,98,0.055,99,0.03,100,1.16,102,0.516,103,1.168,109,0.002,110,0.004,111,0.004,118,0.177,119,0.668,120,0.935,126,0.715,127,0.839,130,0.817,131,4.18,133,1.438,158,4.605,170,0.53,172,0.53,176,0.769,179,1.048,182,2.285,183,1.025,185,1.025,190,1.997,191,2.083,193,1.515,196,0.991,197,2.872,198,3.095,205,1.591,210,1.666,216,0.578,219,0.685,226,1.151,228,2.421,230,4.525,231,0.562,251,1.372,252,0.886,253,1.515,255,0.707,261,1.805,278,1.329,308,3.983,309,2.319,317,0.837,318,1.544,323,1.495,326,6.406,336,1.801,343,1.852,346,2.221,352,1.242,356,1.327,359,1.124,371,1.801,373,1.375,376,1.544,418,1.321,419,1.051,420,1.594,430,2.403,432,1.426,434,1.909,435,1.909,437,1.596,444,0.614,445,0.546,449,0.596,451,1.175,452,2.53,453,1.281,478,2.242,507,0.614,508,0.912,509,2.18,510,0.614,511,1.543,512,0.614,513,0.614,514,0.614,515,0.546,516,0.614,517,0.546,518,0.614,519,0.546,520,1.025,521,0.546,522,0.562,523,0.614,524,0.614,525,0.546,526,0.614,527,1.372,528,2.15,529,0.614,530,0.546,531,0.912,532,0.614,533,0.546,534,0.614,535,0.546,536,1.025,537,0.546,538,0.614,539,0.562,540,0.614,541,0.546,542,0.614,543,0.546,544,0.578,545,1.252,546,0.546,547,1.006,548,0.473,549,1.025,550,0.546,551,0.614,552,0.546,553,0.515,554,0.546,555,0.614,556,0.546,557,0.614,558,0.546,559,0.596,560,0.614,561,0.546,562,0.546,563,0.546,564,0.614,565,0.546,566,0.501,567,0.614,568,0.546,569,0.614,570,0.614,571,1.025,573,1.309,577,2.421,584,3.996,585,1.375,586,3.095,588,2.53,590,2.53,591,1.987,592,1.26,593,1.836,604,1.438,607,2.403,609,1.709,622,3.603,626,1.327,628,0.962,629,0.923,631,1.438,636,1.583,637,2.53,638,2.421,639,2.582,646,1.242,649,1.882,650,2.388,651,2.322,653,2.949,654,1.852,655,2.221,656,2.461,657,1.681,661,1.912,718,2.674,758,1.404,770,2.814,783,2.53,786,2.076,787,0.823,793,1.608,795,2.58,805,1.327,809,2.076,846,1.327,853,1.681,854,1.006,868,0.962,874,1.761,889,1.054,892,3.983,896,1.482,912,4.023,917,3.383,926,3.516,939,0.887,944,2.221,972,2.401,989,2.651,998,2.872,1056,2.221,1080,1.054,1219,3.125,1225,2.221,1380,2.943,1387,1.852,1396,2.943,1400,1.852,1426,1.17,1427,1.955,1428,1.909,1429,1.542,1430,2.682,1431,1.17,1432,1.482,1435,1.054,1437,3.567,1450,2.231,1451,1.006,1457,1.006,1470,0.962,1472,1.987,1523,2.403,1533,2.403,1534,2.403,1536,4.02,1537,2.949,1542,2.646,1545,2.646,1546,3.1,1547,2.949,1548,2.076,1550,1.438,1551,2.403,1552,2.421,1553,1.17,1554,1.329,1555,2.943,1556,2.403,1557,1.17,1558,3.343,1559,2.076,1560,2.646,1563,1.583,1564,1.583,1565,2.221,1566,1.583,1568,1.438,1570,1.054,1573,2.403,1575,1.583,1576,1.583,1588,6.348,1589,1.583,1590,2.221,1591,6.281,1592,3.095,1593,3.885,1594,3.016,1595,3.885,1596,6.073,1597,5.458,1598,6.073,1599,6.31,1600,5.793,1601,4.539,1602,4.539,1603,3.016,1604,4.539,1605,2.403,1606,3.016,1607,3.016,1608,5.458,1609,4.539,1610,4.539,1611,3.885,1612,3.016,1613,3.016,1614,3.016,1615,5.049,1616,1.805,1617,3.016,1618,2.646,1619,3.016,1620,2.221,1621,1.805,1622,3.016,1623,1.805,1624,6.31,1625,1.805,1626,2.221,1627,3.016,1628,1.805,1629,2.403,1630,4.431,1631,1.805,1632,4.431,1633,3.885,1634,3.983,1635,4.539,1636,4.539,1637,3.983,1638,4.539,1639,4.539,1640,4.539,1641,4.539,1642,1.805,1643,3.016,1644,3.016,1645,1.805,1646,1.805,1647,1.852,1648,2.403,1649,3.617,1650,1.805,1651,3.016,1652,1.805,1653,3.016,1654,2.646,1655,1.805,1656,5.049,1657,1.805,1658,5.793,1659,3.885,1660,4.539,1661,3.885,1662,3.016,1663,1.805,1664,4.539,1665,1.805,1666,2.646,1667,1.805,1668,3.016,1669,1.805,1670,3.409,1671,1.805,1672,1.805,1673,4.539,1674,2.403,1675,1.805,1676,2.646,1677,1.805,1678,1.805,1679,1.805,1680,3.016,1681,3.016,1682,1.805,1683,2.403,1684,3.885,1685,3.016,1686,1.805,1687,1.805,1688,1.805,1689,3.016,1690,2.646,1691,3.016,1692,1.583,1693,1.583,1694,3.617,1695,1.805,1696,1.805,1697,1.805,1698,1.805,1699,3.016,1700,1.805,1701,1.805,1702,1.805,1703,1.805,1704,1.805,1705,1.805,1706,1.805,1707,1.583,1708,1.805,1709,3.016,1710,1.805,1711,3.016,1712,1.805,1713,1.805,1714,3.016,1715,3.016,1716,1.805,1717,3.885,1718,1.805,1719,1.805,1720,1.805,1721,1.805,1722,1.805,1723,1.805,1724,1.805,1725,1.805,1726,1.805,1727,1.805,1728,3.016,1729,3.885,1730,3.016,1731,3.885,1732,1.805,1733,1.805,1734,1.805,1735,1.805,1736,1.805,1737,1.805,1738,4.539,1739,1.805,1740,1.805,1741,1.805,1742,3.016,1743,3.016,1744,3.016,1745,1.805,1746,1.852,1747,1.805,1748,1.805,1749,2.076,1750,1.805,1751,1.805,1752,1.805,1753,3.016,1754,1.805,1755,1.805,1756,1.805,1757,1.805,1758,1.438,1759,3.016,1760,1.583,1761,1.805,1762,1.805,1763,1.805]],["title/modules/DualSliderModule.html",[0,1.21,12,2.748]],["body/modules/DualSliderModule.html",[2,1.716,3,2.073,8,0.011,12,5.531,18,2.26,19,1.817,20,1.532,21,0.149,22,0.182,23,0.149,24,0.1,26,2.545,28,1.926,35,0.334,42,4.137,47,2.26,48,0.361,82,4.137,98,0.182,99,0.1,109,0.007,110,0.009,111,0.007,527,2.657,528,1.983,670,2.469,671,2.624,672,2.043,1547,3.509,1583,5.786,1584,4.788,1585,5.786,1586,4.788,1588,4.788,1591,4.426,1692,5.273,1694,4.788,1764,5.273,1765,5.273,1766,5.273,1767,6.009,1768,7.261,1769,7.261,1770,7.261,1771,6.009]],["title/components/FiltersContentComponent.html",[130,0.532,530,1.281]],["body/components/FiltersContentComponent.html",[7,0.866,8,0.011,9,0.866,21,0.071,22,0.087,23,0.071,24,0.133,29,1.083,31,1.569,33,1.275,34,1.55,35,0.261,38,0.6,48,0.172,65,1.51,66,1.004,91,2.433,98,0.087,99,0.048,101,1.597,102,1.013,109,0.004,110,0.005,111,0.005,118,0.28,119,0.643,120,0.705,125,0.995,126,0.748,127,1.16,128,0.946,130,0.875,163,2.514,170,0.842,172,0.842,176,1.509,179,1.427,182,2.428,183,1.485,185,1.485,187,1.441,188,1.441,196,1.349,213,2.329,216,0.918,219,1.123,228,3.836,231,0.892,251,1.32,252,1.283,253,1.468,254,1.738,255,0.672,291,3.896,293,2.065,309,1.855,316,3.333,317,0.617,318,1.139,323,2.036,336,1.916,347,3.006,354,3.298,371,2.102,418,0.995,419,0.955,420,1.446,444,0.974,445,0.866,449,0.946,451,0.866,453,1.855,478,2.756,483,1.26,507,0.974,508,1.32,509,1.32,510,0.974,511,2.012,512,0.974,513,0.974,514,0.974,515,0.866,516,0.974,517,0.866,518,0.974,519,0.866,520,1.485,521,0.866,522,0.892,523,0.974,524,0.974,525,0.866,526,0.974,527,0.866,528,1.441,529,0.974,530,1.789,531,2.564,532,0.974,533,0.866,534,0.974,535,0.866,536,1.485,537,0.866,538,0.974,539,0.892,540,0.974,541,0.866,542,0.974,543,0.866,544,0.918,545,1.895,546,1.32,547,1.594,548,1.388,549,1.485,550,0.866,551,0.974,552,0.866,553,0.818,554,0.866,555,0.974,556,0.866,557,0.974,558,0.866,559,0.946,560,0.974,561,0.866,562,0.866,563,0.866,564,0.974,565,0.866,566,0.795,567,0.974,568,0.866,569,0.974,570,0.974,571,0.974,573,1.14,575,2.514,577,2.329,585,1.991,587,1.972,588,3.297,590,2.948,591,2.706,592,1.212,609,3.069,615,1.972,621,1.972,623,2.831,626,2.602,628,1.528,629,1.465,637,1.597,638,1.528,648,1.991,649,2.502,650,2.065,656,2.851,657,1.597,658,2.11,661,2.215,662,3.479,664,2.514,716,2.681,718,4.803,787,3.181,793,2.329,889,3.919,896,2.6,897,4.642,926,2.433,938,2.681,939,3.298,944,2.327,998,3.301,1066,2.11,1075,3.006,1080,1.673,1251,1.528,1365,2.514,1378,3.216,1379,1.673,1380,2.831,1387,2.681,1390,3.479,1428,2.146,1429,2.233,1430,2.146,1431,3.43,1432,3.13,1433,1.528,1435,3.089,1436,1.673,1437,1.528,1450,2.908,1457,1.597,1472,2.233,1488,3.216,1514,2.514,1536,3.216,1537,2.55,1555,1.858,1565,2.11,1570,2.55,1571,2.831,1591,2.11,1772,5.506,1773,5.891,1774,2.514,1775,3.479,1776,4.714,1777,4.367,1778,3.43,1779,5.588,1780,5.917,1781,5.917,1782,5.917,1783,4.367,1784,4.642,1785,4.642,1786,4.642,1787,4.642,1788,4.642,1789,4.642,1790,5.588,1791,4.367,1792,2.865,1793,2.865,1794,2.865,1795,4.367,1796,2.865,1797,3.216,1798,2.865,1799,3.832,1800,2.865,1801,3.832,1802,2.865,1803,3.832,1804,2.865,1805,5.917,1806,2.865,1807,2.865,1808,4.367,1809,4.367,1810,2.865,1811,4.367,1812,5.917,1813,2.865,1814,1.972,1815,2.514,1816,2.11,1817,1.858,1818,2.11,1819,2.865,1820,4.642,1821,2.865,1822,5.291,1823,2.865,1824,4.367,1825,2.865,1826,2.865,1827,2.865,1828,2.865,1829,4.367,1830,4.367,1831,4.367,1832,4.714,1833,4.642,1834,2.865,1835,2.865,1836,2.865,1837,2.11,1838,4.367,1839,2.865,1840,1.972,1841,2.865,1842,2.514,1843,2.11]],["title/modules/FiltersContentModule.html",[0,1.21,1844,2.918]],["body/modules/FiltersContentModule.html",[2,1.609,3,1.993,8,0.011,12,5.383,18,2.173,19,1.704,20,1.437,21,0.139,22,0.171,23,0.139,24,0.094,26,2.447,28,2.237,35,0.335,47,2.173,48,0.339,49,3.431,50,2.569,65,0.994,66,1.975,81,4.945,82,3.879,83,4.945,98,0.171,99,0.094,109,0.007,110,0.009,111,0.007,530,2.635,531,1.704,545,1.731,665,5.716,670,2.374,671,2.523,672,1.916,1578,5.716,1772,3.879,1773,4.15,1844,6.06,1845,4.945,1846,4.945,1847,4.945,1848,4.945,1849,5.716,1850,5.635,1851,4.286,1852,3.46,1853,6.981,1854,5.635,1855,5.635,1856,5.635,1857,4.15,1858,4.49,1859,5.635]],["title/components/FiltersPopoverComponent.html",[130,0.532,170,1.245]],["body/components/FiltersPopoverComponent.html",[7,0.966,8,0.011,9,0.966,20,1.44,21,0.079,22,0.097,23,0.079,24,0.132,29,1.175,31,1.552,33,1.217,34,1.507,35,0.184,38,0.669,48,0.192,65,1.52,66,1.12,72,5.462,91,2.641,98,0.097,99,0.053,102,0.811,109,0.004,110,0.006,111,0.006,118,0.553,119,0.698,120,0.515,125,1.08,126,0.728,127,1.039,128,1.054,130,0.837,170,1.836,172,0.938,176,1.208,179,1.801,182,2.455,183,1.611,185,1.611,187,1.564,188,1.564,191,1.864,195,4.302,196,1.44,201,4.051,205,2.19,213,2.527,216,1.024,219,0.836,228,3.728,231,0.994,253,0.886,254,1.836,291,2.353,293,2.956,316,2.655,317,1.021,318,1.883,323,1.229,326,6.246,336,1.613,344,2.909,346,3.49,354,3.436,355,3.262,376,1.27,394,2.329,396,2.767,418,0.728,419,0.911,420,1.021,444,1.086,445,0.966,449,1.054,451,0.966,453,2.013,478,2.872,499,2.353,507,1.086,508,1.433,509,1.433,510,1.086,511,2.125,512,1.086,513,1.086,514,1.086,515,0.966,516,1.086,517,0.966,518,1.086,519,0.966,520,1.611,521,0.966,522,0.994,523,1.086,524,1.086,525,0.966,526,1.086,527,0.966,528,1.054,529,1.086,530,0.966,531,2.599,532,1.086,533,0.966,534,1.086,535,0.966,536,1.611,537,0.966,538,1.086,539,0.994,540,1.086,541,0.966,542,1.086,543,0.966,544,1.024,545,1.883,546,0.966,547,1.55,548,0.838,549,1.611,550,0.966,551,1.086,552,0.966,553,0.912,554,0.966,555,1.086,556,0.966,557,1.086,558,0.966,559,1.054,560,1.086,561,0.966,562,0.966,563,0.966,564,1.086,565,0.966,566,0.886,567,1.086,568,0.966,569,1.086,570,1.086,571,1.921,573,1.021,577,3.332,585,2.16,609,2.936,618,2.071,626,2.485,646,2.199,648,2.16,649,1.191,650,1.511,652,2.353,661,2.062,716,4.098,793,2.527,846,2.936,874,3.649,887,3.299,889,1.865,939,3.557,944,2.485,972,1.405,979,3.662,996,2.889,1056,3.49,1075,3.262,1080,1.865,1222,3.262,1378,3.49,1379,1.865,1380,3.072,1430,2.776,1432,2.776,1433,1.704,1436,1.865,1437,2.527,1450,2.329,1457,4.232,1470,1.704,1472,2.424,1476,1.961,1482,2.545,1537,3.898,1552,3.332,1555,2.071,1559,3.262,1565,3.49,1570,1.865,1590,2.353,1772,5.462,1775,5.571,1776,3.776,1784,4.957,1785,4.957,1786,4.957,1787,4.158,1788,4.957,1789,4.957,1797,3.49,1803,4.158,1815,2.803,1820,2.803,1833,5.483,1837,2.353,1840,2.199,1860,2.803,1861,5.649,1862,4.739,1863,5.649,1864,6.249,1865,6.249,1866,5.649,1867,3.194,1868,5.483,1869,4.739,1870,3.194,1871,4.158,1872,4.158,1873,4.158,1874,3.194,1875,3.194,1876,3.194,1877,3.194,1878,3.194,1879,4.739,1880,3.194,1881,6.249,1882,3.194,1883,3.194,1884,3.194,1885,5.649,1886,3.194,1887,3.194,1888,4.739,1889,3.194,1890,3.194,1891,3.194,1892,3.194,1893,3.194,1894,3.194,1895,3.194]],["title/modules/FiltersPopoverModule.html",[0,1.21,13,2.918]],["body/modules/FiltersPopoverModule.html",[2,1.743,3,2.093,8,0.011,13,5.98,18,2.281,19,1.846,20,1.557,21,0.151,22,0.185,23,0.151,24,0.102,26,2.569,28,2.349,35,0.324,47,2.281,48,0.367,49,3.602,50,2.783,72,4.202,98,0.185,99,0.102,109,0.008,110,0.009,111,0.008,170,2.586,171,5.356,531,2.216,670,2.493,671,2.649,672,2.076,1772,4.202,1773,4.496,1844,5.826,1896,5.356,1897,6.104,1898,5.356,1899,5.356,1900,6.104,1901,6.104]],["title/classes/FlatNode.html",[99,0.071,1902,3.377]],["body/classes/FlatNode.html",[8,0.011,21,0.116,22,0.142,23,0.116,24,0.136,29,1.536,31,1.596,33,1.593,35,0.182,65,0.825,98,0.142,99,0.078,102,0.801,109,0.006,110,0.008,111,0.006,118,0.458,119,0.912,120,1.321,125,1.686,126,0.789,127,1.03,130,0.777,136,1.921,190,3.055,193,1.719,196,2.088,197,3.639,205,2.171,210,2.044,213,4.216,219,1.357,226,1.583,251,2.236,252,1.82,253,2.052,255,1.096,317,1.335,319,3.168,336,1.335,418,1.412,419,0.999,420,1.335,445,2.476,573,1.497,593,2.53,786,4.264,944,3.055,1537,4.056,1618,5.435,1674,4.935,1902,5.892,1903,2.871,1904,7.185,1905,4.103,1906,4.667,1907,5.534,1908,6.095,1909,4.676,1910,5.228,1911,6.348,1912,4.676,1913,7.342,1914,8.287,1915,4.676,1916,5.435,1917,4.676,1918,4.676,1919,6.194,1920,4.676,1921,6.194,1922,4.676,1923,4.676,1924,6.194,1925,4.676,1926,4.676,1927,6.194,1928,4.935,1929,4.676,1930,4.676,1931,4.676,1932,3.725]],["title/components/HeaderComponent.html",[130,0.532,533,1.281]],["body/components/HeaderComponent.html",[7,1.159,8,0.011,9,1.159,21,0.155,22,0.116,23,0.095,24,0.13,31,1.514,35,0.149,38,0.803,48,0.23,65,1.543,94,2.639,98,0.116,99,0.064,102,0.926,109,0.005,110,0.007,111,0.007,118,0.375,121,4.651,122,4.991,124,4.991,125,1.551,126,0.749,127,1.131,128,1.265,130,0.786,170,1.126,172,1.126,176,1.379,179,1.69,182,2.495,183,1.839,185,1.839,187,1.785,188,1.785,196,1.597,211,5.011,212,3.013,216,1.228,219,0.954,231,1.193,249,4.991,254,1.588,300,3.32,303,1.575,314,3.982,316,3.048,323,1.475,336,1.788,371,2.368,376,1.523,389,3.505,399,4.744,401,5.497,419,0.872,432,2.963,444,1.303,445,1.159,449,1.265,451,1.159,453,2.297,478,3.058,507,1.303,508,1.635,509,1.635,510,1.303,511,2.313,512,1.303,513,1.303,514,1.303,515,1.159,516,1.303,517,1.159,518,1.303,519,1.159,520,1.839,521,1.159,522,1.193,523,1.303,524,1.303,525,1.159,526,1.303,527,1.159,528,1.265,529,1.303,530,1.159,531,2.169,532,1.303,533,2.057,534,1.303,535,1.159,536,1.839,537,1.159,538,1.303,539,1.193,540,1.303,541,1.159,542,1.303,543,1.159,544,1.228,545,1.779,546,1.159,547,1.508,548,1.005,549,1.839,550,1.159,551,1.303,552,1.159,553,1.094,554,1.159,555,1.303,556,1.159,557,1.303,558,1.159,559,1.265,560,1.303,561,1.159,562,1.159,563,1.159,564,1.303,565,1.159,566,1.064,567,1.303,568,1.159,569,1.303,570,1.303,571,1.303,573,0.826,577,3.628,585,2.465,604,3.054,609,3.156,623,3.505,626,2.755,649,2.016,651,2.765,653,3.157,654,2.354,656,3.048,661,2.245,716,3.32,850,4.744,896,3.078,917,2.238,938,2.354,939,1.884,972,3.156,988,2.639,998,3.218,1061,4.744,1379,3.157,1387,4.571,1428,3.078,1429,3.204,1430,2.657,1432,3.078,1433,2.044,1434,3.054,1436,2.238,1437,2.044,1449,2.639,1451,2.136,1454,2.823,1472,1.961,1476,3.846,1526,3.32,1552,2.883,1557,2.485,1570,2.238,1571,2.485,1776,4.308,1832,4.991,1933,3.364,1934,5.97,1935,6.532,1936,6.803,1937,3.722,1938,6.264,1939,5.407,1940,6.264,1941,6.264,1942,3.833,1943,3.833,1944,4.613,1945,3.833,1946,5.407,1947,3.833,1948,3.833,1949,3.833,1950,3.833,1951,5.407,1952,3.364,1953,3.833,1954,3.364,1955,3.833,1956,2.823,1957,3.833,1958,3.833,1959,3.833,1960,3.833,1961,3.054,1962,3.833,1963,3.833,1964,3.833,1965,3.833,1966,3.833,1967,3.833,1968,3.833,1969,2.354]],["title/modules/HeaderModule.html",[0,1.21,1006,2.918]],["body/modules/HeaderModule.html",[2,1.748,3,2.096,8,0.011,18,2.285,19,1.851,20,1.561,21,0.151,22,0.185,23,0.151,24,0.102,26,2.573,28,1.962,35,0.333,47,2.285,48,0.368,49,3.609,50,2.791,54,5.851,55,4.878,98,0.185,99,0.102,109,0.008,110,0.009,111,0.008,533,2.663,670,2.497,671,2.654,672,2.082,1006,5.894,1851,4.508,1852,3.759,1970,5.372,1971,5.372,1972,5.372,1973,6.122,1974,7.343,1975,6.122,1976,6.122]],["title/interfaces/IconDefinition.html",[112,0.664,1977,3.122]],["body/interfaces/IconDefinition.html",[8,0.011,21,0.098,22,0.12,23,0.098,24,0.066,33,1.488,34,0.854,35,0.3,48,0.238,50,1.808,57,2.571,58,2.115,98,0.168,99,0.066,102,0.679,103,1.516,109,0.005,110,0.007,111,0.005,112,0.621,114,1.39,116,1.685,118,0.388,119,0.815,120,1.308,125,1.262,126,0.676,127,1.31,191,2.484,193,1.77,210,2.106,212,4.643,213,2.953,219,0.976,226,1.796,236,2.279,251,1.199,252,1.165,253,2.088,255,0.93,261,1.863,293,3.559,317,1.193,320,3.16,373,1.808,404,1.335,419,1.353,420,0.854,483,3.037,508,2.5,573,0.854,592,1.1,617,5.35,639,2.832,682,2.953,684,2.953,685,2.619,686,2.115,688,2.115,689,1.685,874,3.233,1036,3.16,1044,4.412,1117,2.921,1185,2.435,1247,2.73,1250,6.278,1251,4.638,1256,4.753,1261,6.089,1262,5.35,1263,5.688,1264,5.502,1265,4.078,1266,4.753,1268,3.812,1399,3.812,1400,3.4,1620,2.921,1629,3.16,1977,5.688,1978,2.921,1979,3.16,1980,4.859,1981,6.059,1982,5.502,1983,5.598,1984,4.412,1985,3.48,1986,2.571,1987,6.603,1988,3.48,1989,4.412,1990,3.48,1991,3.48,1992,2.316,1993,3.48,1994,3.16,1995,3.48,1996,3.48,1997,3.48,1998,4.859,1999,4.412,2000,3.48,2001,3.48,2002,3.48,2003,3.48,2004,3.48,2005,4.859,2006,3.48,2007,3.48,2008,3.48,2009,3.48,2010,3.16,2011,3.48,2012,3.48,2013,5.598,2014,3.48,2015,3.16,2016,3.48,2017,3.48,2018,3.48,2019,3.48,2020,3.48,2021,3.48,2022,3.48,2023,3.48,2024,3.48,2025,3.48,2026,3.48,2027,3.48,2028,3.48]],["title/injectables/IconRegistryState.html",[404,1.022,1986,2.748]],["body/injectables/IconRegistryState.html",[8,0.011,21,0.089,22,0.109,23,0.089,24,0.121,29,1.281,31,1.386,33,1.656,34,0.775,35,0.292,48,0.216,50,1.64,57,2.332,58,1.918,98,0.156,99,0.06,102,0.616,103,1.478,109,0.004,110,0.006,111,0.004,112,0.563,116,2.195,118,0.352,120,1.212,125,1.507,126,0.685,127,1.164,191,2.536,193,2.023,210,2.311,212,4.36,213,1.918,219,0.634,226,1.751,236,2.406,251,1.562,252,1.518,253,2.023,255,1.211,261,2.142,293,2.86,317,1.303,320,4.117,373,2.356,404,1.246,405,1.768,418,1.596,419,1.349,420,0.775,483,2.908,508,2.366,573,1.424,592,1.434,617,5.659,639,3.381,682,3.225,684,2.756,685,2.444,686,1.918,688,1.918,689,1.528,758,1.3,874,2.1,1036,4.117,1044,4.818,1117,3.806,1185,2.208,1247,5.018,1250,6.234,1251,4.606,1256,5.289,1261,5.659,1262,4.869,1263,5.659,1264,4.117,1265,2.649,1266,4.55,1268,3.557,1399,4.55,1400,4.059,1620,3.806,1629,4.117,1977,6.082,1978,5.368,1979,2.866,1980,3.156,1981,4.534,1982,4.117,1983,6.396,1984,5.267,1985,3.156,1986,3.35,1987,6.968,1988,4.534,1989,5.267,1990,4.534,1991,4.534,1992,3.531,1993,3.156,1994,2.866,1995,3.156,1996,3.156,1997,4.534,1998,5.801,1999,5.267,2000,4.534,2001,3.156,2002,4.534,2003,5.801,2004,4.534,2005,4.534,2006,3.156,2007,3.156,2008,3.156,2009,3.156,2010,2.866,2011,3.156,2012,3.156,2013,5.307,2014,3.156,2015,2.866,2016,3.156,2017,3.156,2018,3.156,2019,5.307,2020,3.156,2021,3.156,2022,3.156,2023,3.156,2024,3.156,2025,3.156,2026,4.534,2027,5.307,2028,3.156,2029,5.167,2030,3.597,2031,3.597,2032,3.597,2033,3.597,2034,3.597,2035,3.597,2036,3.597,2037,3.597]],["title/classes/InitializationState.html",[99,0.071,2038,3.377]],["body/classes/InitializationState.html",[8,0.011,20,0.914,21,0.055,22,0.067,23,0.055,24,0.106,29,0.888,31,1.194,33,1.3,34,1.616,35,0.219,48,0.134,65,0.632,98,0.067,99,0.075,100,0.857,102,0.967,103,1.345,109,0.003,110,0.004,111,0.003,118,0.218,119,0.528,125,1.659,126,0.591,128,0.735,129,2.323,130,0.757,131,2.467,145,0.78,172,1.321,176,0.568,179,2.261,182,0.636,183,0.757,185,0.757,187,0.735,188,0.735,190,1.978,191,2.178,193,0.994,205,2.224,208,4.18,210,2.358,213,1.911,219,1.119,226,1.782,229,1.444,236,2.619,251,0.673,252,0.654,253,1.761,255,0.522,261,2.209,263,2.323,280,1.533,293,3.38,297,1.911,309,0.946,317,1.11,318,1.424,319,3.087,323,1.379,336,2.112,343,1.367,346,2.639,347,2.467,394,2.21,396,2.093,418,0.817,420,1.217,434,3.578,435,3.578,436,2.127,437,2.99,438,2.3,439,2.915,440,2.915,452,3.148,478,2.117,483,0.979,508,1.083,509,1.918,544,0.714,566,0.618,571,0.757,573,0.48,577,2.398,592,0.618,593,1.083,609,0.979,621,3.547,622,2.438,623,1.444,626,2.791,649,2.831,661,2.506,769,2.855,770,1.997,771,1.954,773,2.19,776,2.21,777,1.187,780,3.312,782,1.774,783,1.241,792,1.695,793,1.911,794,1.64,795,1.522,798,1.847,800,1.954,802,1.64,805,0.979,809,1.533,813,1.695,815,1.444,816,1.094,830,2.639,831,1.64,834,3.144,838,1.094,846,2.267,853,3.678,854,3.678,860,1.444,861,1.774,862,1.954,863,1.64,866,3.144,872,1.64,887,2.093,895,1.954,919,1.774,922,1.774,929,4.387,934,1.64,937,1.954,938,3.896,939,1.761,940,1.954,941,1.774,950,1.954,951,1.774,952,1.3,957,2.2,958,1.444,973,2.639,979,2.323,990,1.367,996,3.783,1085,1.64,1091,1.3,1092,2.2,1103,2.2,1259,1.774,1391,1.64,1411,5.295,1535,1.774,1552,1.187,1556,1.774,1558,4.16,1637,1.954,1647,1.367,1683,1.774,1693,1.954,1903,1.367,2038,3.583,2039,1.64,2040,3.583,2041,4.497,2042,6.345,2043,5.153,2044,5.153,2045,5.153,2046,3.583,2047,4.497,2048,2.227,2049,7.146,2050,4.497,2051,2.227,2052,2.227,2053,2.227,2054,2.227,2055,2.227,2056,4.497,2057,2.227,2058,2.227,2059,1.954,2060,3.946,2061,5.568,2062,5.427,2063,3.946,2064,3.946,2065,5.295,2066,3.946,2067,4.956,2068,3.144,2069,3.946,2070,3.583,2071,4.106,2072,3.144,2073,4.522,2074,3.583,2075,2.227,2076,2.227,2077,2.227,2078,2.227,2079,2.227,2080,2.227,2081,2.227,2082,2.227,2083,3.583,2084,2.227,2085,3.583,2086,2.227,2087,2.227,2088,2.227,2089,1.774,2090,5.648,2091,2.227,2092,2.227,2093,2.227,2094,3.946,2095,1.954,2096,3.144,2097,3.583,2098,2.227,2099,5.153,2100,2.227,2101,3.583,2102,2.227,2103,2.227,2104,2.227,2105,4.497,2106,2.227,2107,2.227,2108,2.227,2109,2.915,2110,2.227,2111,4.497,2112,2.227,2113,2.227,2114,3.144,2115,2.227,2116,2.227,2117,2.227,2118,6.035,2119,3.583,2120,5.153,2121,3.583,2122,3.583,2123,2.227,2124,4.497,2125,3.583,2126,2.227,2127,2.227,2128,2.227,2129,2.227,2130,3.583,2131,3.583,2132,2.227,2133,2.227,2134,4.497,2135,2.227,2136,2.227,2137,2.227,2138,2.227,2139,3.583,2140,2.227,2141,2.227,2142,1.954,2143,2.227,2144,2.227,2145,2.227,2146,4.522,2147,4.497,2148,5.153,2149,3.583,2150,3.583,2151,2.227,2152,2.227,2153,2.227,2154,2.227,2155,2.227,2156,2.227,2157,1.954,2158,1.954,2159,2.227,2160,3.583,2161,2.227,2162,2.227,2163,2.227,2164,2.227,2165,2.227,2166,2.227,2167,2.227,2168,2.227,2169,1.533,2170,2.227,2171,2.227,2172,3.583,2173,2.227,2174,2.227,2175,2.227,2176,2.227,2177,2.227,2178,2.227,2179,3.583,2180,4.497,2181,2.227,2182,2.227,2183,3.583,2184,2.227,2185,2.227,2186,2.227,2187,2.227,2188,2.227,2189,1.774,2190,2.227,2191,2.227,2192,2.227]],["title/interfaces/ListResult.html",[112,0.664,2193,2.748]],["body/interfaces/ListResult.html",[8,0.011,21,0.157,22,0.192,23,0.157,24,0.105,35,0.246,65,1.118,98,0.192,109,0.008,110,0.009,111,0.008,112,0.993,114,2.222,118,0.621,119,1.104,120,1.331,125,1.82,126,0.808,127,1.327,136,2.604,303,3.389,356,3.629,593,2.414,678,5.066,1051,6.574,1374,6.077,2193,4.861,2194,5.564,2195,5.564]],["title/injectables/ListResultsState.html",[164,2.362,404,1.022]],["body/injectables/ListResultsState.html",[8,0.011,21,0.094,22,0.115,23,0.094,24,0.136,29,1.33,31,1.608,33,1.599,34,1.768,35,0.316,46,4.932,48,0.228,65,0.669,66,1.329,98,0.162,99,0.063,100,1.459,102,1.334,103,1.302,109,0.008,110,0.007,111,0.009,112,0.594,116,2.28,118,0.371,119,0.79,120,1.153,126,0.746,127,1.126,137,4.157,142,3.479,145,1.329,146,2.113,147,2.113,149,1.558,162,4.134,164,2.99,166,5.036,191,1.252,193,1.489,210,1.252,226,0.864,236,2.707,251,1.622,252,1.576,253,1.489,254,1.989,255,1.46,258,4.555,261,2.102,297,2.862,303,3.047,317,1.156,354,3.328,356,2.36,359,1.414,371,2.235,404,1.294,405,1.864,418,1.629,419,1.197,420,1.156,573,1.156,592,1.879,676,2.022,678,2.328,682,3.321,683,1.558,684,2.862,685,2.538,686,2.022,687,3.823,688,2.022,689,1.611,694,4.387,715,3.823,720,2.328,721,2.022,723,3.185,743,2.61,749,3.823,758,1.37,927,2.113,1045,5.106,1065,2.61,1105,2.459,1185,2.328,1212,2.61,1374,4.586,1647,3.295,1937,2.61,2193,5.361,2196,6.536,2197,3.022,2198,5.464,2199,5.529,2200,5.366,2201,5.366,2202,5.366,2203,5.366,2204,5.941,2205,3.328,2206,5.366,2207,3.952,2208,4.586,2209,4.287,2210,4.709,2211,3.792,2212,4.709,2213,3.792,2214,2.637,2215,3.792,2216,4.709,2217,3.792,2218,3.792,2219,3.792,2220,3.792,2221,3.952,2222,3.792,2223,4.709,2224,3.792,2225,4.709,2226,3.792,2227,3.694,2228,3.022,2229,2.459,2230,3.328,2231,2.61,2232,2.61,2233,2.793,2234,3.328,2235,3.328,2236,3.328,2237,2.793,2238,2.793,2239,2.459,2240,2.793,2241,2.793,2242,2.61,2243,2.793,2244,2.793,2245,2.793,2246,2.793,2247,3.328,2248,2.793,2249,3.328,2250,3.328,2251,3.328,2252,3.328,2253,3.328,2254,3.328,2255,3.328,2256,3.328,2257,3.328,2258,3.328,2259,3.328,2260,3.328]],["title/interfaces/ListResultsStateModel.html",[112,0.664,2233,3.122]],["body/interfaces/ListResultsStateModel.html",[8,0.011,21,0.113,22,0.138,23,0.113,24,0.076,34,1.692,35,0.326,46,4.688,48,0.275,65,0.806,66,1.602,98,0.185,99,0.076,100,1.759,102,1.255,103,1.409,109,0.008,110,0.008,111,0.009,112,0.716,114,1.602,116,1.942,118,0.447,119,0.898,120,0.984,126,0.597,127,1.218,137,3.746,142,3.955,145,1.602,146,2.547,147,2.547,149,1.877,162,3.827,164,2.547,166,2.806,191,1.508,193,1.268,210,1.508,226,1.042,236,2.647,251,1.382,252,1.343,253,1.693,254,1.792,255,1.43,258,4.216,261,1.977,297,2.437,303,3.136,354,2.998,356,2.683,359,1.704,371,2.013,404,1.471,419,0.737,592,1.693,676,2.437,678,2.806,682,3.253,683,1.877,684,3.253,685,2.886,686,2.437,687,3.746,688,2.437,689,1.942,694,4.216,715,2.806,720,2.806,721,2.437,723,3.12,743,3.146,749,4.216,927,2.547,1045,4.727,1065,3.146,1105,2.963,1185,2.806,1212,3.146,1374,5.058,1647,2.806,1937,3.146,2193,5.348,2196,3.641,2197,3.641,2198,5.906,2199,5.736,2204,4.01,2207,3.366,2208,4.493,2209,4.199,2210,4.01,2212,4.01,2214,2.246,2216,4.01,2221,3.366,2223,4.01,2225,4.01,2227,3.146,2228,3.641,2229,2.963,2230,4.01,2231,3.146,2232,3.146,2233,4.493,2234,4.01,2235,4.01,2236,4.01,2237,3.366,2238,3.366,2239,2.963,2240,3.366,2241,3.366,2242,3.146,2243,3.366,2244,3.366,2245,3.366,2246,3.366,2247,4.01,2248,3.366,2249,4.01,2250,4.01,2251,4.01,2252,4.01,2253,4.01,2254,4.01,2255,4.01,2256,4.01,2257,4.01,2258,4.01,2259,4.01,2260,4.01]],["title/interfaces/Message.html",[112,0.664,798,1.741]],["body/interfaces/Message.html",[8,0.011,21,0.096,22,0.256,23,0.096,24,0.064,33,1.552,34,1.174,35,0.245,38,1.141,48,0.233,98,0.226,99,0.091,100,1.491,102,1.079,103,1.048,109,0.005,110,0.007,111,0.005,112,0.853,114,1.358,118,0.379,119,0.802,120,0.879,125,0.883,126,0.705,143,4.426,145,1.358,149,1.592,190,1.705,193,1.075,205,1.358,210,1.279,219,1.27,226,1.642,251,1.905,252,1.138,253,2.21,254,1.601,255,0.908,261,2.015,316,1.646,317,0.835,319,3.223,336,1.106,400,2.379,404,1.314,423,3.036,451,1.905,483,3.168,496,4.085,548,1.429,573,0.835,584,2.263,592,2.174,593,2.178,611,4.423,683,3.351,693,3.646,770,3.036,773,2.315,776,3.966,783,2.16,791,1.833,792,3.859,798,3.613,805,1.705,813,2.577,815,2.512,844,2.379,860,3.532,910,2.512,958,3.532,982,4.163,1002,2.067,1012,3.751,1064,2.668,1091,2.263,1103,2.379,1107,5.282,1508,2.379,1509,3.345,1992,2.263,2109,4.085,2169,2.668,2214,3.671,2261,2.512,2262,4.706,2263,4.432,2264,3.182,2265,4.013,2266,2.668,2267,3.532,2268,2.854,2269,4.423,2270,3.869,2271,2.854,2272,3.751,2273,2.512,2274,2.668,2275,2.854,2276,3.532,2277,2.854,2278,2.854,2279,2.854,2280,2.854,2281,2.854,2282,2.854,2283,4.013,2284,2.854,2285,2.854,2286,2.854,2287,2.854,2288,3.751,2289,2.854,2290,4.013,2291,2.854,2292,2.854,2293,2.854,2294,2.854,2295,2.854,2296,2.854,2297,2.854,2298,2.854,2299,4.641,2300,2.854,2301,2.854,2302,2.854,2303,2.854,2304,2.668,2305,2.854,2306,2.854,2307,2.854,2308,2.854]],["title/classes/MessageChannel.html",[99,0.071,813,2.005]],["body/classes/MessageChannel.html",[8,0.011,21,0.084,22,0.255,23,0.084,24,0.126,29,1.233,31,1.463,33,1.691,34,1.265,35,0.228,38,1.042,48,0.205,98,0.217,99,0.083,100,1.313,102,1.005,103,0.957,109,0.004,110,0.006,111,0.004,112,0.779,118,0.334,119,0.732,120,1.155,125,0.778,126,0.723,143,4.582,145,1.196,149,1.402,190,2.582,193,1.38,205,1.196,210,1.126,219,1.262,226,1.563,251,2.073,252,1.002,253,2.143,254,1.002,255,1.166,261,2.117,316,1.45,317,1.072,319,3.661,336,1.42,400,2.095,404,1.199,418,1.47,419,1.041,420,0.735,423,2.772,451,1.775,483,3.016,496,4.641,548,1.305,573,1.478,584,1.993,592,2.102,593,2.164,611,4.21,683,3.266,693,3.941,770,2.772,773,2.113,776,3.99,783,1.902,791,2.353,792,3.984,798,3.603,805,1.501,813,2.776,815,2.212,844,2.095,860,3.225,910,3.225,958,3.225,982,4.221,1002,2.652,1012,3.424,1064,2.349,1091,2.905,1103,2.095,1107,5.087,1508,2.095,1509,3.054,1903,2.095,1992,1.993,2109,4.641,2169,3.424,2214,3.17,2261,2.212,2262,4.72,2263,4.445,2264,1.993,2265,2.513,2266,2.349,2267,3.225,2268,2.513,2269,4.21,2270,3.604,2271,2.513,2272,3.424,2273,2.212,2274,2.349,2275,3.663,2276,4.445,2277,3.663,2278,3.663,2279,3.663,2280,3.663,2281,2.513,2282,2.513,2283,3.663,2284,3.663,2285,3.663,2286,4.751,2287,2.513,2288,4.44,2289,3.663,2290,3.663,2291,3.663,2292,3.663,2293,2.513,2294,4.751,2295,2.513,2296,2.513,2297,2.513,2298,2.513,2299,4.323,2300,2.513,2301,2.513,2302,2.513,2303,2.513,2304,2.349,2305,2.513,2306,2.513,2307,2.513,2308,2.513,2309,4.974,2310,4.974,2311,4.974,2312,3.412,2313,4.974,2314,3.412,2315,3.412,2316,3.412,2317,3.412,2318,3.412]],["title/injectables/MessageService.html",[404,1.022,773,1.801]],["body/injectables/MessageService.html",[8,0.011,21,0.09,22,0.252,23,0.09,24,0.122,29,1.292,31,1.392,33,1.624,34,1.312,35,0.236,38,1.092,48,0.219,98,0.222,99,0.087,100,1.401,102,1.043,103,1.002,109,0.005,110,0.006,111,0.005,112,0.816,118,0.356,119,0.767,120,1.072,125,0.83,126,0.688,143,4.412,145,1.276,149,1.495,190,1.601,193,1.01,205,1.276,210,1.201,219,1.329,226,1.603,251,2.01,252,1.531,253,2.178,254,1.069,255,1.222,261,2.148,316,1.546,317,1.123,319,3.114,336,1.039,400,2.235,404,1.256,405,1.789,418,1.188,419,0.841,420,0.784,423,2.904,451,1.841,483,3.094,496,3.947,548,1.597,573,1.312,584,2.125,592,2.259,593,1.841,611,4.732,683,3.166,693,3.751,770,2.904,773,2.988,776,4.066,783,3.704,791,1.722,792,3.914,798,3.606,805,2.292,813,2.88,815,3.379,844,3.2,860,3.379,910,2.36,958,3.379,982,4.078,1002,1.941,1012,3.587,1064,2.506,1091,2.125,1103,3.2,1107,4.842,1508,2.235,1509,3.2,1992,3.555,2109,3.947,2169,2.506,2214,2.992,2261,2.36,2262,4.191,2263,3.947,2264,2.125,2265,2.681,2266,2.506,2267,3.379,2268,2.681,2269,4.493,2270,4.319,2271,2.681,2272,3.587,2273,2.36,2274,2.506,2275,2.681,2276,3.379,2277,2.681,2278,2.681,2279,2.681,2280,2.681,2281,2.681,2282,2.681,2283,3.838,2284,2.681,2285,2.681,2286,2.681,2287,2.681,2288,3.587,2289,2.681,2290,3.838,2291,2.681,2292,2.681,2293,2.681,2294,2.681,2295,2.681,2296,3.838,2297,2.681,2298,2.681,2299,4.484,2300,2.681,2301,2.681,2302,2.681,2303,2.681,2304,3.587,2305,2.681,2306,3.838,2307,3.838,2308,2.681,2319,4.573,2320,3.64,2321,5.212,2322,3.64,2323,3.64,2324,3.64]],["title/interfaces/MessageServiceConfig.html",[112,0.664,2270,2.602]],["body/interfaces/MessageServiceConfig.html",[8,0.011,21,0.097,22,0.252,23,0.097,24,0.065,33,1.559,34,1.184,35,0.246,38,1.151,48,0.236,98,0.227,99,0.091,100,1.509,102,1.086,103,1.057,109,0.005,110,0.007,111,0.005,112,0.86,114,1.374,118,0.384,119,0.809,120,0.887,125,1.446,126,0.673,143,4.435,145,1.374,149,1.611,190,1.725,193,1.088,205,1.926,210,1.294,219,1.276,226,1.649,251,1.917,252,1.152,253,2.216,254,1.152,255,0.919,261,2.023,316,1.666,317,0.845,319,3.244,336,1.12,400,2.408,404,1.325,423,3.062,451,1.917,483,3.182,496,4.111,548,1.441,573,0.845,584,3.208,592,2.216,593,1.917,611,4.604,683,3.227,693,3.665,770,3.062,773,2.334,776,3.924,783,2.185,791,1.855,792,3.903,798,3.596,805,1.725,813,2.599,815,2.542,844,2.408,860,3.562,910,2.542,958,3.562,982,4.032,1002,2.091,1012,3.782,1064,2.699,1091,2.29,1103,2.408,1107,4.98,1508,2.408,1509,3.373,1992,2.29,2109,4.111,2169,2.699,2214,3.117,2261,2.542,2262,4.366,2263,4.111,2264,2.29,2265,2.888,2266,2.699,2267,3.562,2268,2.888,2269,4.604,2270,4.219,2271,4.046,2272,4.98,2273,2.542,2274,2.699,2275,2.888,2276,3.562,2277,2.888,2278,2.888,2279,2.888,2280,2.888,2281,2.888,2282,2.888,2283,4.046,2284,2.888,2285,2.888,2286,2.888,2287,2.888,2288,3.782,2289,2.888,2290,4.046,2291,2.888,2292,2.888,2293,2.888,2294,2.888,2295,2.888,2296,2.888,2297,2.888,2298,2.888,2299,4.671,2300,2.888,2301,2.888,2302,2.888,2303,2.888,2304,2.699,2305,2.888,2306,2.888,2307,2.888,2308,2.888]],["title/modules/OntologyExplorationModule.html",[0,1.21,14,2.918]],["body/modules/OntologyExplorationModule.html",[2,1.682,3,2.049,8,0.011,14,6.055,18,2.233,19,1.782,20,1.503,21,0.146,22,0.178,23,0.146,24,0.098,28,2.299,35,0.321,47,2.233,48,0.354,75,3.143,98,0.178,99,0.098,109,0.007,110,0.009,111,0.007,196,1.973,670,2.44,671,2.593,672,2.004,1858,4.695,2325,5.171,2326,5.171,2327,5.171,2328,5.683,2329,6.034,2330,5.683,2331,3.284,2332,5.893,2333,3.441,2334,4.34,2335,5.893,2336,3.618,2337,5.171]],["title/components/OntologySearchComponent.html",[130,0.532,535,1.281]],["body/components/OntologySearchComponent.html",[7,0.768,8,0.011,9,0.768,21,0.063,22,0.077,23,0.063,24,0.127,29,0.986,31,1.491,33,1.49,34,1.567,35,0.276,38,0.532,48,0.153,65,1.492,75,4.073,98,0.077,99,0.042,100,1.53,102,0.681,103,0.765,109,0.009,110,0.005,111,0.009,118,0.389,119,0.586,120,0.972,126,0.696,127,1.11,128,0.838,130,0.838,132,4.302,136,1.043,143,3.407,145,0.89,146,1.415,149,1.043,170,0.746,172,0.746,176,1.014,179,1.323,182,2.395,183,1.352,185,1.352,187,1.313,188,1.313,191,1.313,196,2.011,197,2.624,208,2.732,216,0.814,219,0.865,226,1.118,228,2.121,231,0.79,251,1.202,252,2.088,253,1.773,255,0.595,261,0.685,287,4.868,300,3.406,316,2.083,317,0.857,318,1.009,319,2.838,322,3.169,336,2.207,356,2.938,357,2.322,371,1.831,376,2.539,394,3.14,396,2.322,418,1.373,419,1.078,420,1.699,432,1.881,444,0.863,445,0.768,449,0.838,451,0.768,453,1.69,478,2.014,486,1.87,507,0.863,508,1.202,509,1.202,510,0.863,511,1.887,512,0.863,513,0.863,514,0.863,515,0.768,516,0.863,517,0.768,518,0.863,519,0.768,520,1.352,521,0.768,522,0.79,523,0.863,524,0.863,525,0.768,526,0.863,527,0.768,528,0.838,529,0.863,530,0.768,531,1.202,532,0.863,533,0.768,534,0.863,535,1.677,536,1.352,537,0.768,538,0.863,539,0.79,540,0.863,541,0.768,542,0.863,543,0.768,544,0.814,545,1.494,546,0.768,547,1.875,548,0.666,549,1.352,550,0.768,551,0.863,552,0.768,553,0.725,554,0.768,555,0.863,556,0.768,557,0.863,558,0.768,559,0.838,560,0.863,561,0.768,562,0.768,563,0.768,564,0.863,565,0.768,566,0.705,567,0.863,568,0.768,569,0.863,570,0.863,571,0.863,573,1.377,585,1.813,588,3.092,590,3.092,591,2.507,592,1.54,593,1.202,603,3.169,609,2.156,615,3.819,622,2.624,626,2.44,628,1.354,629,1.298,637,2.732,638,2.614,639,3.791,648,1.157,649,2.068,650,1.201,651,2.507,656,1.079,661,2.109,840,3.49,853,2.216,854,2.216,888,1.748,952,2.322,972,2.44,975,1.646,1040,3.49,1062,2.228,1091,2.322,1101,3.906,1146,1.87,1333,1.87,1399,2.738,1426,1.646,1427,1.646,1432,3.643,1433,3.213,1450,1.954,1451,1.415,1455,2.023,1472,3.536,1473,2.578,1476,1.559,1526,2.442,1536,2.929,1546,4.625,1547,4.328,1548,1.748,1550,2.023,1552,3.213,1554,1.87,1557,1.646,1568,3.169,1571,1.646,1626,2.929,1654,3.49,1760,2.228,1778,2.578,1837,4.706,1843,1.87,1906,3.213,1910,3.597,1952,2.228,1961,2.023,2189,3.169,2214,1.954,2228,2.023,2229,1.646,2288,2.738,2331,4.256,2333,4.514,2338,2.023,2339,3.977,2340,3.49,2341,4.302,2342,3.49,2343,4.903,2344,4.903,2345,6.914,2346,6.679,2347,3.977,2348,3.977,2349,3.977,2350,3.977,2351,4.302,2352,2.539,2353,3.518,2354,3.977,2355,4.903,2356,4.8,2357,2.539,2358,2.539,2359,3.977,2360,3.49,2361,3.977,2362,5.006,2363,2.539,2364,3.977,2365,3.977,2366,2.228,2367,7.885,2368,3.977,2369,2.539,2370,3.977,2371,3.977,2372,3.169,2373,3.977,2374,6.39,2375,2.539,2376,3.49,2377,3.977,2378,3.977,2379,2.539,2380,5.548,2381,3.977,2382,3.977,2383,2.539,2384,3.977,2385,2.539,2386,4.903,2387,2.539,2388,3.977,2389,3.977,2390,2.539,2391,1.87,2392,2.228,2393,2.228,2394,2.228,2395,2.539,2396,2.539,2397,2.539,2398,2.539,2399,2.539,2400,2.023,2401,2.539,2402,2.539,2403,2.539,2404,2.539,2405,2.539,2406,2.539,2407,2.539,2408,2.539,2409,2.539,2410,2.539,2411,2.539,2412,2.539,2413,2.539,2414,2.539,2415,2.539,2416,2.539,2417,3.977,2418,3.977,2419,3.977,2420,3.977,2421,2.023,2422,2.539,2423,2.539,2424,3.977,2425,2.228]],["title/modules/OntologySearchModule.html",[0,1.21,2328,2.748]],["body/modules/OntologySearchModule.html",[2,1.713,3,2.071,8,0.011,18,2.258,19,1.814,20,1.53,21,0.148,22,0.182,23,0.148,24,0.1,26,2.543,28,1.923,35,0.334,47,2.258,48,0.361,49,3.566,50,2.736,75,3.2,98,0.182,99,0.1,109,0.007,110,0.009,111,0.007,196,1.53,535,2.656,670,2.467,671,2.622,672,2.041,1547,3.504,1583,5.781,1584,4.781,2328,5.529,2331,3.344,2333,3.504,2391,4.42,2392,5.266,2426,5.266,2427,5.266,2428,5.266,2429,5.266,2430,6.366,2431,7.255,2432,7.255,2433,7.255,2434,6.001,2435,5.266]],["title/injectables/OntologySearchService.html",[404,1.022,2353,2.475]],["body/injectables/OntologySearchService.html",[8,0.011,21,0.079,22,0.097,23,0.079,24,0.131,29,1.18,31,1.532,33,1.691,34,1.026,35,0.282,38,0.997,48,0.193,65,0.567,98,0.144,99,0.053,102,1.302,103,1.287,109,0.008,110,0.006,111,0.009,112,0.745,118,0.768,119,0.701,120,1.131,126,0.729,127,1.401,135,5.161,136,1.32,143,3.023,144,2.367,145,1.126,146,2.653,149,1.32,175,1.644,196,2.096,197,3.953,219,1,226,1.525,245,3.506,252,0.944,253,2.066,254,0.944,261,2.052,316,2.022,317,1.222,319,2.434,357,4.688,372,3.086,373,3.194,404,1.511,405,1.579,418,1.597,419,1.131,420,1.442,445,1.895,547,1.898,573,1.51,593,1.714,680,4.063,758,1.161,795,2.022,805,2.094,821,3.276,826,3.276,952,3.66,1046,4.616,1047,2.083,1092,2.922,1146,5.851,1402,2.561,1403,3.506,1451,3.493,1473,2.083,1526,1.973,1546,2.922,1626,4.616,1749,3.276,1778,4.543,1797,3.506,1906,4.353,1910,5.204,1928,5.933,1956,5.484,2229,2.083,2264,1.877,2333,4.584,2353,3.66,2356,2.561,2362,3.902,2372,3.792,2400,3.792,2421,3.792,2436,6.254,2437,2.561,2438,4.177,2439,4.177,2440,4.974,2441,5.933,2442,4.76,2443,4.76,2444,4.76,2445,4.76,2446,4.76,2447,3.214,2448,4.177,2449,7.257,2450,3.214,2451,4.177,2452,4.177,2453,5.499,2454,4.177,2455,4.177,2456,3.214,2457,4.177,2458,4.177,2459,4.177,2460,3.214,2461,4.177,2462,3.214,2463,4.177,2464,4.177,2465,4.177,2466,3.214,2467,5.499,2468,4.177,2469,3.214,2470,4.177,2471,3.214,2472,3.214,2473,3.214,2474,2.82,2475,2.82,2476,4.974,2477,2.82,2478,2.561,2479,2.82,2480,2.82,2481,2.82,2482,2.82,2483,2.82,2484,2.82,2485,4.177,2486,2.82,2487,4.177,2488,4.177,2489,4.177,2490,4.177,2491,2.82,2492,2.82,2493,2.82,2494,2.82,2495,2.82,2496,2.82,2497,4.177,2498,4.177,2499,2.561,2500,2.82,2501,2.82]],["title/interfaces/OntologySelection.html",[112,0.664,156,2.918]],["body/interfaces/OntologySelection.html",[8,0.011,21,0.158,22,0.194,23,0.158,24,0.107,35,0.249,65,1.13,98,0.194,109,0.008,110,0.009,111,0.008,112,1.003,114,2.246,118,0.627,119,1.111,126,0.785,127,1.423,136,2.632,156,5.193,197,3.916,359,2.989,1910,5.367,2214,4.069,2502,5.623,2503,5.623,2504,6.597]],["title/components/OntologySelectionComponent.html",[130,0.532,537,1.281]],["body/components/OntologySelectionComponent.html",[7,1,8,0.011,9,1,21,0.082,22,0.1,23,0.082,24,0.134,29,1.206,31,1.582,33,1.048,34,1.37,35,0.263,38,0.693,48,0.199,65,1.524,75,4.305,88,3.153,91,2.71,98,0.1,99,0.055,100,1.871,102,0.567,103,0.636,109,0.004,110,0.006,111,0.008,118,0.324,119,0.716,120,0.93,121,3.738,125,1.109,126,0.782,127,1.057,128,1.092,130,0.991,133,2.636,135,4.247,136,1.359,156,4.375,157,2.903,158,5.438,170,0.972,172,0.972,176,1.621,179,1.556,182,2.463,183,1.654,185,1.654,187,1.605,188,1.605,190,2.139,191,1.605,193,1.35,196,2.229,198,5.642,199,4.267,216,1.06,219,0.583,231,1.03,251,1.47,252,1.429,253,1.35,254,1.429,255,1.14,309,2.066,316,2.066,350,3.875,354,2.39,355,3.348,356,3.303,357,1.932,371,2.098,418,1.314,419,1.093,444,1.125,445,2.497,449,1.092,451,1,453,2.066,478,3.148,507,1.125,508,1.47,509,1.47,510,1.125,511,2.161,512,1.125,513,1.125,514,1.125,515,1,516,1.125,517,1,518,1.125,519,1,520,1.654,521,1,522,1.03,523,1.125,524,1.125,525,1,526,1.125,527,1,528,1.092,529,1.125,530,1,531,1.47,532,1.125,533,1,534,1.125,535,1,536,1.654,537,1.922,538,1.125,539,1.978,540,1.125,541,1,542,1.125,543,1,544,1.06,545,1.679,546,1,547,1.727,548,0.868,549,1.654,550,1,551,1.125,552,1,553,0.945,554,1,555,1.125,556,1,557,1.125,558,1,559,1.092,560,1.125,561,1,562,1,563,1,564,1.125,565,1,566,0.918,567,1.125,568,1,569,1.125,570,1.125,571,1.125,573,1.243,577,2.593,585,2.217,592,1.6,609,2.536,622,2.3,626,2.139,716,4.61,758,1.196,793,3.39,1133,6.213,1219,3.348,1380,3.153,1395,4.267,1449,3.348,1473,3.153,1592,4.594,1605,3.875,1648,3.875,1649,5.064,1778,3.738,1906,3.611,1910,4.121,2239,3.153,2331,4.498,2333,1.932,2334,5.945,2336,2.031,2340,5.06,2351,5.06,2353,4.667,2393,2.903,2394,2.903,2441,5.064,2478,2.636,2499,2.636,2505,2.903,2506,4.863,2507,5.766,2508,4.863,2509,5.766,2510,5.766,2511,5.766,2512,3.309,2513,4.863,2514,3.309,2515,3.309,2516,4.267,2517,3.309,2518,3.309,2519,3.309,2520,3.309,2521,4.863,2522,4.863,2523,3.309,2524,4.863,2525,3.309,2526,4.863,2527,3.309,2528,4.863,2529,3.309,2530,2.903,2531,3.309,2532,3.309,2533,3.309]],["title/modules/OntologySelectionModule.html",[0,1.21,2329,2.918]],["body/modules/OntologySelectionModule.html",[2,1.697,3,2.059,8,0.011,18,2.245,19,1.797,20,1.515,21,0.147,22,0.18,23,0.147,24,0.099,26,2.528,28,2.311,35,0.321,47,2.245,48,0.357,75,3.169,98,0.18,99,0.099,109,0.007,110,0.009,111,0.007,196,1.98,537,2.67,670,2.452,671,2.606,672,2.021,1858,4.735,2328,5.452,2329,6.017,2330,5.452,2331,3.311,2333,3.47,2334,4.376,2336,3.648,2337,5.214,2353,4.535,2534,5.214,2535,5.214,2536,5.214,2537,5.942,2538,5.214,2539,5.942,2540,5.942]],["title/modules/OntologyTreeModule.html",[0,1.21,2330,2.748]],["body/modules/OntologyTreeModule.html",[2,1.716,3,2.073,8,0.011,18,2.26,19,1.817,20,1.532,21,0.149,22,0.182,23,0.149,24,0.1,26,2.545,28,1.926,35,0.334,47,2.26,48,0.361,49,3.569,50,2.739,54,5.786,55,4.788,65,1.06,66,2.106,75,3.205,98,0.182,99,0.1,109,0.007,110,0.009,111,0.007,196,1.532,539,2.735,670,2.469,671,2.624,672,2.043,1851,4.458,1852,3.69,2330,5.531,2331,3.349,2336,3.69,2530,5.273,2541,5.273,2542,5.273,2543,5.273,2544,6.009,2545,7.261,2546,6.009,2547,7.261]],["title/components/ResultsBrowserComponent.html",[130,0.532,541,1.281]],["body/components/ResultsBrowserComponent.html",[7,0.804,8,0.011,9,0.804,21,0.066,22,0.08,23,0.066,24,0.134,29,1.022,31,1.587,33,1.327,34,1.513,35,0.239,38,0.557,48,0.16,58,4.001,65,1.492,78,6.325,98,0.08,99,0.044,101,1.482,102,1.115,103,0.793,109,0.01,110,0.005,111,0.01,118,0.26,119,0.607,120,0.993,121,3.688,125,1.403,126,0.772,127,1.199,128,0.878,130,0.904,136,1.092,170,0.781,172,0.781,175,1.36,176,1.051,178,3.285,179,1.362,182,2.408,183,1.402,185,1.402,187,1.361,188,1.361,191,1.361,193,1.808,195,2.838,196,1.288,197,2.389,205,2.283,214,1.633,216,1.618,219,1.086,226,0.606,231,0.828,251,1.247,252,1.211,253,1.709,255,0.623,293,1.95,317,0.573,323,1.943,336,1.177,342,2.334,354,3.339,356,3.089,371,2.15,373,1.88,382,3.037,389,4.777,418,1.403,419,1.096,420,0.889,432,1.258,437,1.092,444,0.904,445,0.804,449,0.878,451,0.804,453,1.752,478,3.129,507,0.904,508,1.247,509,1.527,510,0.904,511,1.935,512,0.904,513,0.904,514,0.904,515,0.804,516,0.904,517,0.804,518,0.904,519,0.804,520,1.402,521,0.804,522,0.828,523,0.904,524,0.904,525,0.804,526,0.904,527,0.804,528,0.878,529,0.904,530,0.804,531,1.247,532,0.904,533,0.804,534,0.904,535,0.804,536,1.402,537,0.804,538,0.904,539,0.828,540,0.904,541,1.72,542,0.904,543,0.804,544,0.852,545,1.527,546,0.804,547,1.261,548,0.697,549,1.402,550,0.804,551,0.904,552,0.804,553,0.759,554,0.804,555,0.904,556,0.804,557,0.904,558,0.804,559,0.878,560,0.904,561,0.804,562,0.804,563,0.804,564,0.904,565,0.804,566,0.738,567,0.904,568,0.804,569,0.904,570,0.904,571,0.904,573,1.327,585,1.88,587,1.831,588,3.17,590,2.814,591,2.583,592,1.144,609,3.3,612,3.037,618,1.724,622,3.081,626,3.351,628,1.418,629,1.36,648,2.593,649,1.883,650,1.258,651,3.688,653,2.949,654,2.532,656,2.767,657,2.814,658,3.037,661,1.878,680,4.553,681,1.959,806,3.618,846,1.17,888,1.831,889,2.408,891,3.618,917,1.553,972,2.865,973,1.959,974,2.334,975,1.724,1048,2.334,1143,4.431,1219,2.838,1333,1.959,1359,4.957,1373,4.431,1380,2.673,1387,3.493,1390,3.285,1396,3.688,1426,1.724,1427,2.673,1428,1.307,1430,2.026,1437,1.418,1447,2.119,1450,2.026,1451,1.482,1452,4.024,1453,2.334,1457,1.482,1470,1.418,1476,3.493,1480,2.334,1552,2.199,1553,2.673,1620,3.037,1630,3.618,1707,3.618,1746,2.532,1843,1.959,1868,3.618,1872,3.618,2109,4.223,2193,1.724,2199,3.476,2214,1.307,2425,2.334,2548,2.334,2549,4.123,2550,5.689,2551,5.689,2552,4.123,2553,5.689,2554,4.123,2555,4.123,2556,5.05,2557,4.123,2558,5.05,2559,4.123,2560,4.123,2561,4.123,2562,5.05,2563,4.123,2564,6.157,2565,5.05,2566,5.05,2567,4.431,2568,5.05,2569,5.05,2570,4.123,2571,2.659,2572,2.659,2573,2.659,2574,2.659,2575,2.659,2576,4.123,2577,2.659,2578,2.659,2579,2.659,2580,4.123,2581,4.123,2582,2.659,2583,4.123,2584,2.659,2585,2.659,2586,2.659,2587,4.123,2588,2.659,2589,5.689,2590,4.123,2591,2.659,2592,4.123,2593,4.123,2594,2.659,2595,4.123,2596,5.05,2597,2.659,2598,7.21,2599,4.123,2600,4.123,2601,4.123,2602,3.037,2603,5.05,2604,2.659,2605,2.659,2606,2.659,2607,2.659,2608,2.659,2609,2.659,2610,2.659,2611,4.123,2612,4.123,2613,4.123,2614,4.123,2615,2.659,2616,4.123,2617,4.123,2618,5.689,2619,2.659,2620,2.659,2621,2.334,2622,2.659,2623,4.123,2624,2.659,2625,2.119]],["title/modules/ResultsBrowserModule.html",[0,1.21,15,2.918]],["body/modules/ResultsBrowserModule.html",[2,1.735,3,2.087,8,0.011,15,5.976,18,2.275,19,1.838,20,1.55,21,0.15,22,0.184,23,0.15,24,0.101,26,2.562,28,2.343,35,0.323,47,2.275,48,0.365,78,5.385,98,0.184,99,0.101,109,0.008,110,0.009,111,0.009,522,1.892,541,2.66,670,2.486,671,2.642,672,2.067,1359,3.732,1361,4.476,1490,5.82,2626,5.333,2627,5.333,2628,6.078,2629,5.333,2630,6.078,2631,7.311,2632,6.078,2633,6.078,2634,6.078]],["title/components/RunSpatialSearchComponent.html",[130,0.532,543,1.281]],["body/components/RunSpatialSearchComponent.html",[7,1.314,8,0.011,9,1.314,21,0.107,22,0.132,23,0.107,24,0.119,31,1.325,35,0.169,38,0.91,48,0.261,65,1.563,98,0.132,99,0.129,102,1.229,109,0.005,110,0.007,111,0.007,118,0.425,119,0.868,126,0.655,127,0.723,128,1.434,130,0.84,170,1.277,172,1.277,176,1.504,179,1.806,182,2.519,183,2.005,185,2.005,187,1.947,188,1.947,196,1.707,216,1.393,219,0.766,228,3.145,231,1.353,317,1.271,318,1.727,371,1.434,419,0.952,420,1.271,444,1.478,445,1.314,449,1.434,451,1.314,507,1.478,508,2.269,509,1.783,510,1.478,511,2.441,512,1.478,513,1.478,514,1.478,515,1.314,516,1.478,517,1.314,518,1.478,519,1.314,520,2.005,521,1.314,522,1.353,523,1.478,524,1.478,525,1.314,526,1.478,527,1.314,528,1.434,529,1.478,530,1.314,531,1.783,532,1.478,533,1.314,534,1.478,535,1.314,536,2.005,537,1.314,538,1.478,539,1.353,540,1.478,541,1.314,542,1.478,543,2.171,544,2.737,545,2.19,546,1.314,547,1.893,548,1.756,549,2.005,550,1.314,551,1.478,552,1.314,553,1.241,554,1.314,555,1.478,556,1.314,557,1.478,558,1.314,559,1.434,560,1.478,561,1.314,562,1.314,563,1.314,564,1.478,565,1.314,566,1.206,567,1.478,568,1.314,569,1.478,570,1.478,571,1.478,573,0.937,585,2.689,609,2.945,626,2.594,637,2.422,638,2.318,639,3.016,649,1.62,656,1.847,758,1.571,777,3.57,785,3.016,805,2.594,816,2.898,838,2.136,886,2.136,896,2.136,998,3.661,1251,2.318,1387,3.621,1428,2.136,1429,2.223,1535,4.699,1548,2.992,1857,5.288,2338,3.463,2341,5.874,2342,5.175,2635,5.72,2636,6.694,2637,4.346,2638,5.898,2639,5.898,2640,4.346]],["title/modules/RunSpatialSearchModule.html",[0,1.21,1849,2.918]],["body/modules/RunSpatialSearchModule.html",[2,1.763,3,2.107,8,0.011,18,2.297,19,1.867,20,1.575,21,0.153,22,0.187,23,0.153,24,0.103,26,2.587,28,1.979,35,0.325,47,2.297,48,0.371,49,3.627,50,2.815,98,0.187,99,0.103,109,0.008,110,0.009,111,0.008,543,2.665,544,1.979,545,1.958,670,2.51,671,2.667,672,2.1,1849,5.905,1851,4.532,1852,3.791,1857,4.548,2429,5.419,2435,5.419,2635,4.92,2641,5.419,2642,5.419,2643,5.419]],["title/injectables/SceneState.html",[168,2.26,404,1.022]],["body/injectables/SceneState.html",[8,0.011,21,0.111,22,0.09,23,0.073,24,0.136,29,1.112,31,1.606,33,1.567,34,1.72,35,0.299,46,4.658,48,0.178,65,0.791,66,1.04,98,0.164,99,0.049,100,1.142,102,1.367,103,1.159,109,0.004,110,0.006,111,0.004,112,0.465,116,1.905,118,0.29,119,0.66,120,1.14,125,1.232,126,0.742,127,0.745,137,3.698,142,2.907,145,1.04,146,1.654,147,1.654,149,1.219,162,3.79,164,3.012,166,1.822,167,2.185,168,2.391,182,1.543,190,2.377,191,0.979,193,1.244,201,1.924,206,2.293,219,1.062,226,1.232,236,2.677,240,2.043,251,1.356,252,1.317,253,1.795,254,1.769,255,1.267,258,5.212,261,2.079,297,3.627,303,2.474,309,1.261,317,1.298,336,0.847,352,3.087,354,1.458,356,2.992,371,1.988,404,1.081,405,1.458,418,1.61,419,1.173,420,1.298,483,1.305,553,0.847,573,1.298,592,1.672,593,1.821,598,2.364,622,1.403,643,2.185,676,1.582,682,3.766,683,1.219,684,2.391,685,2.121,686,1.582,687,3.318,688,1.582,689,1.261,694,4.57,710,1.924,715,3.318,720,1.822,721,1.582,723,2.764,749,3.318,758,2.177,795,3.319,915,2.185,927,1.654,944,1.305,1045,4.682,1050,5.93,1063,2.185,1065,2.043,1105,1.924,1185,1.822,1208,2.364,1212,3.087,1222,2.043,1269,4.11,1286,2.185,1288,2.043,1321,2.185,1391,2.185,1396,1.924,1537,1.733,1647,2.753,1906,3.766,1907,2.364,1937,2.043,1969,1.822,2198,3.981,2199,3.72,2205,2.604,2207,3.302,2208,3.981,2209,3.72,2221,3.302,2227,4.146,2231,2.043,2232,2.043,2237,2.185,2238,2.185,2239,1.924,2240,2.185,2241,2.185,2242,3.087,2243,2.185,2244,2.185,2245,2.185,2246,2.185,2248,2.185,2644,2.185,2645,5.285,2646,6.854,2647,6.381,2648,4.743,2649,4.484,2650,5.285,2651,4.484,2652,4.484,2653,4.484,2654,4.484,2655,2.967,2656,3.935,2657,4.436,2658,2.967,2659,5.305,2660,2.967,2661,5.285,2662,2.967,2663,3.935,2664,3.935,2665,3.935,2666,2.967,2667,2.967,2668,2.967,2669,2.967,2670,4.436,2671,2.967,2672,2.967,2673,3.087,2674,2.967,2675,2.967,2676,2.967,2677,2.967,2678,3.935,2679,2.967,2680,3.935,2681,2.967,2682,3.935,2683,2.967,2684,3.935,2685,2.967,2686,3.935,2687,2.185,2688,2.364,2689,3.935,2690,3.935,2691,2.604,2692,2.604,2693,2.604,2694,2.604,2695,2.604,2696,2.604,2697,3.935,2698,3.935,2699,5.285,2700,2.604,2701,4.743,2702,2.604,2703,2.604,2704,2.604,2705,2.604,2706,2.604,2707,2.604,2708,2.604,2709,2.364,2710,2.604,2711,2.604,2712,2.604,2713,2.604,2714,2.604,2715,2.604,2716,2.604,2717,2.604,2718,2.604,2719,2.604,2720,2.604,2721,2.604,2722,2.604,2723,2.604,2724,2.604,2725,2.604,2726,2.604,2727,2.604,2728,2.604,2729,2.604,2730,2.604,2731,2.185,2732,2.604,2733,2.604,2734,2.604,2735,2.604,2736,2.604,2737,2.604,2738,2.604,2739,2.604,2740,2.604,2741,2.604,2742,2.604,2743,2.364,2744,2.604,2745,2.604,2746,2.604,2747,2.604,2748,2.604]],["title/interfaces/SceneStateModel.html",[112,0.664,2657,3.122]],["body/interfaces/SceneStateModel.html",[8,0.011,21,0.127,22,0.108,23,0.088,24,0.059,34,1.614,35,0.312,46,4.285,48,0.214,65,0.906,66,1.25,98,0.182,99,0.059,100,1.372,102,1.245,103,1.267,109,0.004,110,0.006,111,0.004,112,0.558,114,1.25,116,1.515,118,0.349,119,0.756,120,0.829,125,1.372,126,0.75,127,1.095,137,3.153,142,3.33,145,1.25,146,1.988,147,1.988,149,1.465,162,3.354,164,2.862,166,2.19,167,2.627,168,1.902,182,1.466,190,1.569,191,1.177,193,0.99,201,2.312,206,2.627,219,1.161,226,1.372,236,2.577,240,2.455,251,1.078,252,1.048,253,1.937,254,1.509,255,1.204,258,5.201,261,1.883,297,3.21,303,2.472,309,1.515,336,1.018,352,3.535,354,1.753,356,2.896,371,1.695,404,1.238,419,0.575,483,1.569,553,1.018,592,1.425,593,1.991,598,2.842,622,1.687,643,2.627,676,1.902,682,3.512,683,1.465,684,2.739,685,2.429,686,1.902,687,3.153,688,1.902,689,1.515,694,4.285,710,2.312,715,2.19,720,2.19,721,1.902,723,2.627,749,3.695,767,4.092,795,3.182,915,2.627,927,1.988,944,1.569,1045,4.143,1050,5.968,1063,2.627,1065,2.455,1105,2.312,1185,2.19,1208,2.842,1212,3.535,1222,2.455,1269,3.876,1286,2.627,1288,2.455,1321,2.627,1391,2.627,1396,2.312,1537,2.083,1647,2.19,1906,3.722,1907,2.842,1937,2.455,1969,2.19,2198,4.433,2199,2.455,2207,2.627,2208,3.783,2209,3.535,2221,2.627,2227,3.535,2231,2.455,2232,2.455,2237,2.627,2238,2.627,2239,2.312,2240,2.627,2241,2.627,2242,3.535,2243,2.627,2244,2.627,2245,2.627,2246,2.627,2248,2.627,2644,2.627,2645,6.124,2646,6.955,2647,6.727,2648,3.13,2650,3.13,2656,3.13,2657,4.433,2659,5.456,2661,4.507,2663,3.13,2664,3.13,2665,3.13,2670,3.783,2673,2.455,2678,3.13,2680,3.13,2682,3.13,2684,3.13,2686,4.507,2687,2.627,2688,2.842,2689,6.124,2690,6.124,2691,3.13,2692,3.13,2693,3.13,2694,3.13,2695,3.13,2696,3.13,2697,4.507,2698,4.507,2699,5.778,2700,3.13,2701,5.281,2702,3.13,2703,3.13,2704,3.13,2705,3.13,2706,3.13,2707,3.13,2708,3.13,2709,2.842,2710,3.13,2711,3.13,2712,3.13,2713,3.13,2714,3.13,2715,3.13,2716,3.13,2717,3.13,2718,3.13,2719,3.13,2720,3.13,2721,3.13,2722,3.13,2723,3.13,2724,3.13,2725,3.13,2726,3.13,2727,3.13,2728,3.13,2729,3.13,2730,3.13,2731,2.627,2732,3.13,2733,3.13,2734,3.13,2735,3.13,2736,3.13,2737,3.13,2738,3.13,2739,3.13,2740,3.13,2741,3.13,2742,3.13,2743,2.842,2744,3.13,2745,3.13,2746,3.13,2747,3.13,2748,3.13]],["title/interfaces/SearchResult.html",[112,0.664,2362,2.918]],["body/interfaces/SearchResult.html",[8,0.011,21,0.098,22,0.12,23,0.098,24,0.066,33,1.565,34,0.854,35,0.3,38,0.831,48,0.238,65,0.699,98,0.168,99,0.066,102,1.093,103,1.397,109,0.009,110,0.007,111,0.01,112,0.999,114,1.39,118,0.809,119,0.815,126,0.711,127,1.348,135,4.699,136,1.629,143,2.953,144,2.921,145,1.39,146,3.086,149,1.629,175,2.028,196,2.009,197,3.876,219,0.976,226,1.656,245,2.921,252,1.627,253,2.186,254,1.627,261,1.721,319,2.028,357,4.51,372,2.571,373,2.908,404,1.538,420,0.854,445,1.674,547,1.902,573,0.854,593,2.088,680,3.59,795,1.685,805,1.744,821,2.73,826,2.73,952,3.233,1046,4.699,1047,2.571,1092,2.435,1146,5.542,1402,4.412,1403,2.921,1451,3.086,1473,3.59,1526,3.4,1546,2.435,1626,4.078,1749,2.73,1778,3.59,1797,2.921,1906,4.409,1910,5.312,1928,5.502,1956,5.542,2229,2.571,2264,3.233,2333,2.316,2353,3.233,2356,4.412,2362,4.392,2372,3.16,2400,3.16,2421,3.16,2436,3.16,2437,3.16,2438,3.48,2439,3.48,2440,3.48,2441,5.083,2448,3.48,2449,7.19,2451,3.48,2452,3.48,2453,4.859,2454,3.48,2455,3.48,2457,3.48,2458,3.48,2459,3.48,2461,3.48,2463,3.48,2464,3.48,2465,3.48,2467,4.859,2468,3.48,2470,3.48,2474,3.48,2475,4.859,2476,6.603,2477,3.48,2478,3.16,2479,3.48,2480,3.48,2481,3.48,2482,3.48,2483,3.48,2484,3.48,2485,4.859,2486,3.48,2487,4.859,2488,4.859,2489,4.859,2490,4.859,2491,3.48,2492,3.48,2493,3.48,2494,3.48,2495,3.48,2496,3.48,2497,4.859,2498,4.859,2499,3.16,2500,3.48,2501,3.48]],["title/classes/SetOrgan.html",[99,0.071,2749,2.602]],["body/classes/SetOrgan.html",[8,0.011,21,0.15,22,0.183,23,0.15,24,0.13,31,1.445,98,0.221,99,0.121,102,1.392,109,0.008,110,0.009,111,0.008,118,0.593,119,1.075,120,0.978,126,0.827,127,1.351,190,3.576,206,3.733,255,1.421,293,3.704,317,1.306,359,2.92,418,1.382,419,0.978,420,1.306,547,1.873,1067,3.733,1903,3.721,1932,5.815,2749,4.481,2750,5.077,2751,3.849,2752,4.829,2753,6.061,2754,7.299,2755,5.024,2756,5.768,2757,3.721,2758,3.929,2759,4.464]],["title/classes/SetSex.html",[99,0.071,2757,2.602]],["body/classes/SetSex.html",[8,0.011,21,0.15,22,0.183,23,0.15,24,0.13,31,1.445,98,0.221,99,0.121,102,1.392,109,0.008,110,0.009,111,0.008,118,0.593,119,1.075,120,0.978,126,0.827,127,1.213,190,3.576,206,3.1,255,1.421,293,3.704,317,1.306,359,2.259,418,1.382,419,0.978,420,1.306,547,1.873,1067,4.158,1903,3.721,1932,5.815,2749,3.721,2750,5.077,2751,3.849,2752,4.829,2755,4.172,2756,5.768,2757,4.481,2758,5.077,2759,5.768,2760,6.061,2761,7.299]],["title/components/SpatialSearchConfigBehaviorComponent.html",[130,0.532,546,1.281]],["body/components/SpatialSearchConfigBehaviorComponent.html",[7,1.157,8,0.011,9,1.157,21,0.095,22,0.116,23,0.095,24,0.132,29,1.339,31,1.546,33,1.164,34,1.465,35,0.316,38,0.802,48,0.23,65,1.543,66,1.341,98,0.116,99,0.064,102,1.451,109,0.005,110,0.007,111,0.007,118,0.374,119,0.795,120,0.617,126,0.665,128,1.263,130,0.785,143,4.078,145,1.341,170,1.124,172,1.124,176,1.377,179,1.688,182,2.494,183,1.836,185,1.836,187,1.782,188,1.782,196,1.596,216,1.226,231,1.191,255,1.266,261,1.457,317,1.164,396,3.97,418,0.872,419,1.01,420,1.164,444,1.301,445,1.157,449,1.263,451,1.157,507,1.301,508,1.633,509,1.633,510,1.301,511,2.312,512,1.301,513,1.301,514,1.301,515,1.157,516,1.301,517,1.157,518,1.301,519,1.157,520,1.836,521,1.157,522,1.191,523,1.301,524,1.301,525,1.157,526,1.301,527,1.157,528,1.263,529,1.301,530,1.157,531,1.633,532,1.301,533,1.157,534,1.301,535,1.157,536,1.836,537,1.157,538,1.301,539,1.191,540,1.301,541,1.157,542,1.301,543,1.157,544,1.226,545,2.068,546,2.055,547,1.959,548,2.283,549,1.836,550,1.633,551,1.301,552,1.633,553,1.787,554,1.157,555,1.301,556,1.157,557,1.301,558,1.157,559,1.263,560,1.301,561,1.157,562,1.157,563,1.157,564,1.301,565,1.157,566,1.062,567,1.301,568,1.157,569,1.301,570,1.301,571,1.301,685,1.81,689,1.626,758,2.591,1047,2.481,1067,3.477,1269,3.337,1553,2.481,1790,5.965,1814,2.634,1817,5.217,1818,2.818,2659,2.634,2749,2.349,2751,2.654,2757,2.349,2762,4.234,2763,3.049,2764,4.738,2765,6.258,2766,4.738,2767,5.491,2768,5.491,2769,5.491,2770,5.965,2771,3.358,2772,5.965,2773,6.258,2774,5.4,2775,4.738,2776,3.826,2777,3.826,2778,5.4,2779,3.826,2780,5.4,2781,3.826,2782,5.4,2783,3.826,2784,5.4,2785,7.169,2786,5.4,2787,3.826,2788,3.049,2789,3.049,2790,3.826,2791,3.826,2792,5.4,2793,3.049,2794,2.818,2795,3.826,2796,2.132,2797,2.634,2798,3.826,2799,3.826,2800,3.358]],["title/modules/SpatialSearchConfigBehaviorModule.html",[0,1.21,2801,3.122]],["body/modules/SpatialSearchConfigBehaviorModule.html",[2,1.718,3,2.075,8,0.011,18,2.262,19,1.819,20,1.535,21,0.149,22,0.182,23,0.149,24,0.1,26,2.547,28,2.329,35,0.322,47,2.262,48,0.362,98,0.182,99,0.1,109,0.007,110,0.009,111,0.007,545,1.802,546,2.657,547,1.84,548,2.048,670,2.471,671,2.626,672,2.046,1814,4.143,1817,3.901,1818,4.432,2762,3.209,2796,3.354,2801,6.384,2802,5.281,2803,5.281,2804,5.281,2805,5.281,2806,5.807,2807,5.281,2808,6.377,2809,6.018]],["title/components/SpatialSearchConfigComponent.html",[130,0.532,550,1.281]],["body/components/SpatialSearchConfigComponent.html",[7,1.049,8,0.011,9,1.049,21,0.147,22,0.105,23,0.086,24,0.131,31,1.535,35,0.196,38,0.727,48,0.209,65,1.541,66,1.216,98,0.152,99,0.099,102,1.272,109,0.004,110,0.006,111,0.006,118,0.34,119,0.741,121,3.265,126,0.771,127,0.577,128,1.145,130,0.743,170,1.02,172,1.02,176,1.284,179,1.599,182,2.478,183,1.712,185,1.712,187,1.662,188,1.662,196,1.511,197,1.642,206,3.031,216,1.112,219,1.147,231,1.08,317,1.085,318,1.379,323,1.938,336,2.056,347,2.389,371,2.279,396,2.941,419,0.813,420,1.085,432,1.642,444,1.18,445,1.049,449,1.145,451,1.049,453,2.14,478,2.671,507,1.18,508,1.523,509,1.523,510,1.18,511,2.211,512,1.18,513,1.18,514,1.18,515,1.049,516,1.18,517,1.049,518,1.18,519,1.049,520,1.712,521,1.049,522,1.845,523,1.18,524,1.18,525,1.049,526,1.18,527,1.049,528,1.145,529,1.18,530,1.049,531,1.523,532,1.18,533,1.049,534,1.18,535,1.049,536,1.712,537,1.049,538,1.18,539,1.08,540,1.18,541,1.049,542,1.18,543,1.049,544,1.112,545,2.084,546,1.049,547,1.946,548,1.948,549,1.712,550,1.966,551,1.18,552,1.049,553,0.991,554,1.049,555,1.18,556,1.049,557,1.18,558,1.049,559,1.145,560,1.18,561,1.049,562,1.049,563,1.049,564,1.18,565,1.049,566,1.397,567,1.18,568,1.049,569,1.18,570,1.18,571,1.18,585,2.296,609,3.412,618,2.25,626,3.037,637,1.934,638,1.851,639,2.576,649,1.877,650,2.803,651,2.576,653,2.941,656,3.233,657,2.806,658,2.556,661,2.146,758,1.254,777,3.161,785,2.576,787,2.296,816,2.475,838,1.706,853,1.934,886,1.706,896,2.913,917,2.941,938,2.131,939,1.706,944,1.527,972,2.607,998,2.803,1067,3.967,1080,2.941,1269,3.682,1379,2.027,1428,2.913,1429,3.031,1430,3.195,1431,4.215,1432,3.539,1433,3.161,1435,2.941,1436,2.941,1437,3.161,1452,2.765,1457,2.806,1458,4.419,1459,3.045,1460,2.556,1461,4.012,1472,1.775,1482,2.765,1488,2.556,1546,3.092,1547,2.941,1548,2.389,1552,3.467,1553,3.265,1554,2.556,1555,2.25,1557,2.25,1570,2.027,1571,2.25,1746,2.131,1837,2.556,1840,2.389,1954,5.705,1969,2.131,2621,3.045,2659,4.752,2758,3.842,2759,4.365,2762,4.201,2767,5.201,2768,5.201,2769,5.201,2770,5.201,2796,4.39,2810,2.765,2811,5.927,2812,5.036,2813,5.927,2814,3.471,2815,3.471,2816,3.471,2817,3.471,2818,3.471,2819,3.471,2820,3.471,2821,5.036,2822,5.036,2823,5.036,2824,5.927,2825,3.045,2826,3.471,2827,3.471,2828,5.036,2829,3.471,2830,3.471,2831,3.471]],["title/modules/SpatialSearchConfigModule.html",[0,1.21,2806,2.918]],["body/modules/SpatialSearchConfigModule.html",[2,1.713,3,2.071,8,0.011,18,2.258,19,1.814,20,1.53,21,0.148,22,0.182,23,0.148,24,0.1,26,2.543,28,1.923,35,0.334,47,2.258,48,0.361,49,3.566,50,2.736,98,0.182,99,0.1,109,0.007,110,0.009,111,0.007,545,1.488,547,1.728,550,2.656,670,2.467,671,2.622,672,2.041,1585,5.781,1586,4.781,1851,4.455,1852,3.684,2391,4.42,2430,6.366,2762,3.2,2796,3.344,2797,4.131,2806,5.871,2832,5.266,2833,5.266,2834,5.266,2835,6.001,2836,7.255,2837,6.001]],["title/components/SpatialSearchUiBehaviorComponent.html",[130,0.532,552,1.281]],["body/components/SpatialSearchUiBehaviorComponent.html",[7,1.452,8,0.011,9,1.452,21,0.119,22,0.145,23,0.119,24,0.117,29,1.563,31,1.248,33,1.035,34,1.358,35,0.273,38,1.006,48,0.289,65,1.567,98,0.145,99,0.08,102,0.822,109,0.006,110,0.008,111,0.008,118,0.47,120,0.775,126,0.47,128,1.585,130,0.883,153,3.826,170,1.411,172,1.411,176,1.608,179,1.899,182,2.536,183,2.144,187,2.081,188,2.081,196,1.795,216,1.539,231,1.495,255,1.478,261,1.295,396,4.364,418,1.095,419,1.136,444,1.633,445,1.452,449,1.585,451,1.452,507,1.633,508,1.906,509,1.906,510,1.633,511,2.541,512,1.633,513,1.633,514,1.633,515,1.452,516,1.633,517,1.452,518,1.633,519,1.452,520,2.144,521,1.452,522,1.495,523,1.633,524,1.633,525,1.452,526,1.633,527,1.452,528,1.585,529,1.633,530,1.452,531,1.906,532,1.633,533,1.452,534,1.633,535,1.452,536,2.144,537,1.452,538,1.633,539,1.495,540,1.633,541,1.452,542,1.633,543,1.452,544,1.539,545,2.085,546,1.452,547,1.924,548,1.259,549,2.144,550,1.452,551,1.633,552,2.259,553,2.419,554,1.906,555,1.633,556,1.452,557,1.633,558,1.452,559,1.585,560,1.633,561,1.452,562,1.452,563,1.452,564,1.633,565,1.452,566,1.333,567,1.633,568,1.452,569,1.633,570,1.633,1814,3.306,1817,4.562,2751,2.36,2762,3.753,2763,3.826,2764,5.532,2766,5.532,2771,4.214,2772,6.557,2775,5.532,2800,4.214,2838,4.802,2839,4.802]],["title/modules/SpatialSearchUiBehaviorModule.html",[0,1.21,2840,3.122]],["body/modules/SpatialSearchUiBehaviorModule.html",[2,1.718,3,2.075,8,0.011,18,2.262,19,1.819,20,1.535,21,0.149,22,0.182,23,0.149,24,0.1,26,2.547,28,2.329,35,0.322,47,2.262,48,0.362,98,0.182,99,0.1,109,0.007,110,0.009,111,0.007,545,1.802,547,1.84,552,2.657,553,2.229,670,2.471,671,2.626,672,2.046,1814,4.143,1817,3.901,1818,4.432,2751,2.958,2762,3.209,2807,5.281,2808,6.377,2840,6.384,2841,5.281,2842,5.281,2843,5.281,2844,5.281,2845,5.807,2846,6.018]],["title/components/SpatialSearchUiComponent.html",[130,0.532,554,1.281]],["body/components/SpatialSearchUiComponent.html",[7,1.404,8,0.011,9,1.404,21,0.115,22,0.141,23,0.115,24,0.115,31,1.221,35,0.18,38,0.973,48,0.279,65,1.57,98,0.141,99,0.115,102,1.186,109,0.006,110,0.008,111,0.008,118,0.455,119,0.908,126,0.604,127,0.772,128,1.533,130,0.868,170,1.365,172,1.365,176,1.573,179,1.868,182,2.531,183,2.097,185,2.097,187,2.035,188,2.035,196,1.765,216,1.488,231,1.446,317,1.329,371,1.533,419,0.995,420,1.329,444,1.579,445,1.404,449,1.533,451,1.404,507,1.579,508,1.865,509,1.865,510,1.579,511,2.508,512,1.579,513,1.579,514,1.579,515,1.404,516,1.579,517,1.404,518,1.579,519,1.404,520,2.097,521,1.404,522,1.446,523,1.579,524,1.579,525,1.404,526,1.579,527,1.404,528,1.533,529,1.579,530,1.404,531,1.865,532,1.579,533,1.404,534,1.579,535,1.404,536,2.097,537,1.404,538,1.579,539,1.446,540,1.579,541,1.404,542,1.579,543,1.404,544,1.488,545,2.157,546,1.404,547,1.95,548,1.218,549,2.097,550,1.404,551,1.579,552,1.404,553,2.363,554,2.23,555,1.579,556,1.404,557,1.579,558,1.404,559,1.533,560,1.579,561,1.404,562,1.404,563,1.404,564,1.579,565,1.404,566,1.289,567,1.579,568,1.404,569,1.579,570,1.579,571,1.579,650,2.197,656,2.941,657,2.589,661,1.533,758,1.679,777,3.692,785,3.154,816,3.031,838,2.283,853,2.589,886,2.283,972,2.043,1428,2.283,1429,2.376,1430,2.283,1431,3.011,1432,2.283,1433,2.477,1746,2.852,2751,3.402,2762,3.692,2825,4.076,2847,4.076,2848,6.923,2849,6.167,2850,6.167,2851,4.645,2852,4.645,2853,4.645]],["title/interfaces/SpatialSearchUiModel.html",[112,0.664,2854,2.918]],["body/interfaces/SpatialSearchUiModel.html",[8,0.011,21,0.125,22,0.153,23,0.125,24,0.084,34,1.402,35,0.313,48,0.303,98,0.197,99,0.084,102,1.114,103,1.386,109,0.006,110,0.008,111,0.006,112,0.789,114,1.767,118,0.493,119,0.958,120,1.05,125,1.149,126,0.637,127,1.266,168,2.688,193,1.399,206,3.685,226,1.149,236,2.147,255,1.182,261,1.944,297,2.688,353,4.959,356,2.862,359,2.686,404,1.569,419,0.813,434,2.478,435,2.478,436,2.384,437,2.071,438,2.578,545,1.786,547,1.82,573,1.086,588,3.626,590,2.809,591,2.578,623,4.218,628,2.688,629,2.578,689,2.142,721,2.688,926,3.626,1067,4.515,1269,2.688,1816,3.713,2602,3.713,2731,3.713,2749,3.995,2750,3.268,2751,2.478,2755,5.965,2756,5.306,2757,3.995,2758,3.268,2793,4.017,2796,2.809,2797,3.47,2854,4.479,2855,4.017,2856,3.713,2857,6.322,2858,3.713,2859,3.095,2860,4.424,2861,4.424,2862,4.424,2863,4.424,2864,5.709,2865,4.424,2866,4.424,2867,4.424,2868,4.424,2869,5.709,2870,4.424,2871,4.424,2872,4.424,2873,4.424,2874,4.424,2875,4.424,2876,4.424,2877,4.424,2878,4.017,2879,4.017,2880,4.017,2881,4.017,2882,4.017]],["title/modules/SpatialSearchUiModule.html",[0,1.21,2845,2.918]],["body/modules/SpatialSearchUiModule.html",[2,1.789,3,2.126,8,0.011,18,2.317,19,1.894,20,1.598,21,0.155,22,0.19,23,0.155,24,0.104,26,2.609,28,2.008,35,0.309,47,2.317,48,0.377,98,0.19,99,0.104,109,0.008,110,0.009,111,0.008,153,4.993,545,1.554,547,1.761,554,2.67,670,2.532,671,2.691,672,2.131,2751,3.079,2762,3.341,2845,5.922,2883,5.498,2884,5.498,2885,5.498,2886,6.266]],["title/classes/SpatialSearchUiSelectors.html",[99,0.071,2794,3.122]],["body/classes/SpatialSearchUiSelectors.html",[8,0.011,21,0.118,22,0.144,23,0.118,24,0.132,29,1.553,31,1.531,33,1.667,35,0.3,65,0.838,66,1.666,98,0.144,99,0.079,109,0.006,110,0.008,111,0.006,118,0.465,120,1.248,125,1.427,126,0.757,127,1.286,168,2.535,182,1.357,190,3.799,206,3.582,226,1.81,236,2.067,359,3.153,418,1.763,419,1.248,434,2.336,435,2.336,436,2.249,437,1.953,438,2.431,545,1.179,547,1.914,689,2.02,758,2.69,1067,4.448,1269,4.382,1816,3.501,1903,2.919,2214,3.442,2659,5.921,2750,5.149,2751,3.903,2755,4.311,2794,4.612,2796,2.649,2797,3.272,2854,5.574,2858,3.501,2859,2.919,2878,3.788,2879,3.788,2880,3.788,2881,3.788,2882,3.788,2887,4.172,2888,6.262,2889,6.262,2890,6.262,2891,4.754,2892,6.262,2893,6.262,2894,4.754,2895,6.262,2896,4.754,2897,6.262,2898,4.754,2899,6.262,2900,4.754,2901,4.172,2902,6.262,2903,4.754,2904,4.754,2905,4.754,2906,6.262,2907,4.754,2908,4.754,2909,4.754,2910,4.754,2911,4.754]],["title/injectables/SpatialSearchUiState.html",[404,1.022,2859,2.602]],["body/injectables/SpatialSearchUiState.html",[8,0.011,21,0.112,22,0.137,23,0.112,24,0.126,29,1.5,31,1.443,33,1.47,34,1.571,35,0.304,48,0.271,98,0.183,99,0.075,102,1.036,103,1.312,109,0.006,110,0.007,111,0.006,112,0.706,118,0.442,120,1.176,125,1.379,126,0.713,127,1.212,168,2.406,193,1.679,206,3.888,226,1.029,236,1.996,255,1.418,261,2.051,297,3.226,353,5.387,356,3.207,359,2.917,404,1.458,405,2.217,418,1.662,419,1.227,434,2.217,435,2.217,436,2.134,437,1.853,438,2.308,545,1.5,547,1.893,588,4.063,590,3.802,591,2.308,623,2.925,628,2.406,629,2.308,689,1.917,721,2.406,758,2.186,926,4.063,1067,4.481,1269,2.406,1816,3.323,2602,4.455,2731,3.323,2749,4.805,2750,4.928,2751,3.736,2755,5.814,2756,5.599,2757,4.805,2758,2.925,2793,3.595,2796,2.514,2797,3.106,2854,3.106,2855,3.595,2856,3.323,2857,7.014,2858,3.323,2859,3.714,2860,5.308,2861,5.308,2862,5.308,2863,3.959,2864,5.308,2865,3.959,2866,3.959,2867,3.959,2868,3.959,2869,5.308,2870,5.308,2871,5.308,2872,3.959,2873,5.308,2874,5.308,2875,5.308,2876,3.959,2877,3.959,2878,3.595,2879,3.595,2880,3.595,2881,3.595,2882,3.595,2912,6.049,2913,4.512,2914,4.512,2915,4.512,2916,4.512,2917,6.049,2918,4.512]],["title/components/SpinnerOverlayComponent.html",[130,0.532,556,1.281]],["body/components/SpinnerOverlayComponent.html",[7,1.249,8,0.011,9,1.249,20,1.453,21,0.102,22,0.125,23,0.102,24,0.123,31,1.391,35,0.16,38,0.865,48,0.248,65,1.558,85,5.43,98,0.125,99,0.127,102,1.117,109,0.005,110,0.007,111,0.007,118,0.558,119,0.839,120,1.134,125,0.942,126,0.688,127,1.084,128,1.363,130,0.925,170,1.214,172,1.214,176,1.453,179,1.759,182,2.509,183,1.937,185,1.937,187,1.88,188,1.88,191,1.88,196,1.663,205,1.996,216,1.324,230,5.3,231,2.673,317,1.405,336,1.626,344,2.536,371,1.363,376,2.264,419,0.919,420,1.405,432,2.694,444,1.405,445,1.249,449,1.363,451,1.249,453,2.42,478,2.678,507,1.405,508,2.229,509,1.722,510,1.405,511,2.39,512,1.405,513,1.405,514,1.405,515,1.249,516,1.405,517,1.249,518,1.405,519,1.249,520,1.937,521,1.249,522,1.286,523,1.405,524,1.405,525,1.249,526,1.405,527,1.249,528,1.363,529,1.405,530,1.249,531,1.722,532,1.405,533,1.249,534,1.405,535,1.249,536,1.937,537,1.249,538,1.405,539,1.286,540,1.405,541,1.249,542,1.405,543,1.249,544,1.324,545,1.828,546,1.249,547,1.558,548,1.083,549,1.937,550,1.249,551,1.405,552,1.249,553,1.179,554,1.249,555,1.405,556,2.125,557,1.405,558,1.249,559,1.363,560,1.405,561,1.249,562,1.249,563,1.249,564,1.405,565,1.249,566,1.146,567,1.405,568,1.249,569,1.405,570,1.405,571,1.405,573,1.589,618,3.693,639,2.913,649,1.54,650,1.954,651,2.113,656,2.42,657,2.302,661,1.363,758,1.493,777,3.477,785,2.913,787,1.883,816,2.8,838,2.03,846,1.817,886,2.03,889,2.412,896,2.8,939,2.8,944,3.353,972,1.817,975,2.678,979,3.693,1364,4.998,1428,2.03,1429,2.113,1435,2.412,1437,3.038,1451,4.501,1470,2.203,1526,3.497,1537,2.412,1552,2.203,1559,3.921,1670,5.721,1746,2.536,1840,2.844,2673,4.838,2919,5.874,2920,3.625,2921,5.696,2922,6.52,2923,5.696,2924,4.131,2925,5.696,2926,4.131,2927,5.696,2928,5.696,2929,4.131,2930,4.131,2931,4.131]],["title/modules/SpinnerOverlayModule.html",[0,1.21,16,2.918]],["body/modules/SpinnerOverlayModule.html",[2,1.784,3,2.122,8,0.011,16,5.918,18,2.313,19,1.889,20,1.593,21,0.154,22,0.189,23,0.154,24,0.104,26,2.605,28,2.002,35,0.319,47,2.313,48,0.375,85,4.601,98,0.189,99,0.104,109,0.008,110,0.009,111,0.008,231,2.313,556,2.669,670,2.527,671,2.686,672,2.124,2919,4.978,2932,5.482,2933,5.482,2934,5.482,2935,6.248,2936,6.522,2937,5.482,2938,6.248]],["title/modules/StoreModule.html",[0,1.21,1007,2.918]],["body/modules/StoreModule.html",[0,1.592,2,1.592,8,0.011,21,0.138,22,0.169,23,0.138,24,0.093,28,1.787,35,0.339,47,2.159,48,0.335,65,0.983,66,2.431,88,3.615,98,0.21,99,0.093,103,1.073,109,0.007,110,0.009,111,0.007,138,4.774,154,3.615,155,3.615,162,3.865,164,3.865,166,3.424,167,4.107,168,3.699,191,1.84,254,1.638,303,2.29,353,3.839,354,2.74,384,4.443,545,1.383,547,1.537,676,2.974,685,3.281,689,2.369,723,3.547,927,3.108,1007,4.774,1047,3.615,1251,2.974,1969,3.424,1978,4.107,1986,4.497,2231,3.839,2232,3.839,2751,2.74,2788,4.443,2858,4.107,2859,4.258,2901,4.893,2939,4.443,2940,5.576,2941,4.893,2942,5.576,2943,5.576,2944,4.893,2945,6.625,2946,5.576,2947,5.576,2948,4.893,2949,4.443,2950,5.576,2951,5.576,2952,5.576,2953,4.893,2954,5.576,2955,5.576,2956,5.576,2957,5.576,2958,6.936,2959,5.576,2960,5.576,2961,5.576,2962,5.576,2963,5.576,2964,5.576,2965,5.576,2966,5.576,2967,5.576,2968,5.576]],["title/modules/ThemingModule.html",[0,1.21,1008,2.918]],["body/modules/ThemingModule.html",[2,1.829,3,2.154,8,0.011,18,2.348,19,1.937,20,1.634,21,0.158,22,0.194,23,0.158,24,0.107,35,0.293,47,2.348,48,0.385,91,4.204,92,4.719,93,5.105,98,0.194,99,0.107,109,0.008,110,0.009,111,0.008,159,5.547,210,2.115,1008,5.89,2969,5.623,2970,5.623,2971,6.408,2972,7.545,2973,6.408,2974,6.408,2975,6.408]],["title/injectables/ThemingService.html",[159,2.748,404,1.022]],["body/injectables/ThemingService.html",[8,0.011,21,0.093,22,0.113,23,0.093,24,0.136,29,1.318,31,1.604,33,1.592,34,1.726,35,0.206,38,0.784,41,2.982,42,2.576,46,5.189,48,0.225,67,2.756,95,5.681,98,0.161,99,0.137,103,1.493,106,3.284,109,0.005,110,0.007,111,0.005,118,0.366,119,0.783,120,1.253,126,0.773,127,1.39,130,0.926,131,5.084,159,3.446,176,1.356,190,2.719,205,1.863,219,1.09,226,1.534,230,3.446,251,1.607,253,1.973,255,0.877,257,6.053,261,2.256,293,2.514,297,2.835,314,3.915,317,1.673,355,5.345,382,5.718,400,2.298,404,1.282,405,1.839,418,1.621,419,1.147,420,0.806,452,2.085,509,2.297,573,1.45,592,2.05,617,5.236,620,6.481,805,2.338,822,3.284,847,3.284,848,2.982,1033,3.284,1092,3.264,1225,3.915,1450,1.839,1632,3.284,1666,4.664,1911,2.756,1992,3.93,2010,2.982,2266,2.576,2267,2.426,2273,2.426,2504,2.982,2673,5.345,2709,5.363,2976,2.982,2977,5.316,2978,7.597,2979,5.316,2980,6.731,2981,6.731,2982,5.316,2983,3.742,2984,3.742,2985,5.316,2986,3.742,2987,4.664,2988,4.664,2989,7.109,2990,3.742,2991,5.316,2992,6.731,2993,3.742,2994,5.316,2995,5.316,2996,5.316,2997,3.742,2998,5.316,2999,3.742,3000,5.316,3001,3.742,3002,3.742,3003,3.742,3004,3.742,3005,3.742,3006,3.742,3007,3.284,3008,3.742,3009,3.742,3010,3.742,3011,3.742,3012,6.731,3013,3.742,3014,3.742,3015,3.742,3016,3.742,3017,3.742,3018,5.316,3019,3.742,3020,3.742,3021,3.742,3022,3.742,3023,3.742,3024,3.742,3025,3.742,3026,3.742]],["title/components/ThumbnailCarouselComponent.html",[130,0.532,558,1.281]],["body/components/ThumbnailCarouselComponent.html",[7,0.838,8,0.011,9,0.838,20,1.085,21,0.068,22,0.084,23,0.068,24,0.126,29,1.055,31,1.475,33,1.352,35,0.226,38,0.58,48,0.166,65,1.517,98,0.084,99,0.11,102,1.334,103,0.533,109,0.006,110,0.005,111,0.005,118,0.416,119,0.627,120,0.447,126,0.675,127,1.146,128,0.914,130,0.65,136,1.138,170,0.814,172,0.814,175,2.176,176,1.085,179,1.398,182,2.437,183,1.447,185,1.447,187,1.404,188,1.404,191,1.404,196,1.321,207,6.128,210,1.404,214,4.369,216,0.888,219,0.489,226,1.43,231,0.862,252,1.25,253,1.181,254,1.843,317,1.427,318,2.059,323,1.066,336,2.084,343,2.613,344,1.701,371,1.919,376,2.493,389,4.067,418,0.631,419,0.836,420,1.352,432,2.013,436,2.75,437,1.748,444,0.942,445,0.838,449,0.914,451,0.838,453,1.808,478,1.748,499,2.04,507,0.942,508,2.002,509,1.287,510,0.942,511,1.977,512,0.942,513,0.942,514,0.942,515,0.838,516,0.942,517,0.838,518,0.942,519,0.838,520,1.447,521,0.838,522,1.612,523,0.942,524,0.942,525,0.838,526,0.942,527,0.838,528,0.914,529,0.942,530,0.838,531,1.287,532,0.942,533,0.838,534,0.942,535,0.838,536,1.447,537,0.838,538,0.942,539,0.862,540,0.942,541,0.838,542,0.942,543,0.838,544,0.888,545,1.555,546,0.838,547,1.288,548,1.525,549,1.447,550,0.838,551,0.942,552,0.838,553,0.791,554,0.838,555,0.942,556,0.838,557,0.942,558,1.758,559,2.623,560,0.942,561,0.838,562,0.838,563,0.838,564,0.942,565,0.838,566,0.769,567,0.942,568,0.838,569,0.942,570,0.942,571,0.942,573,0.917,585,2.65,593,1.566,609,2.279,618,2.759,626,1.872,637,1.544,638,1.477,651,2.65,653,3.026,654,1.701,655,2.04,656,2.813,657,1.544,661,2.276,758,1.001,777,2.763,785,2.176,786,2.929,787,2.362,816,2.091,838,1.361,846,2.759,874,2.485,886,1.361,887,2.485,896,3.083,917,3.026,938,1.701,939,2.091,944,2.913,952,2.485,972,3.21,973,3.134,975,2.759,979,2.759,996,2.176,998,3.452,1080,1.618,1379,3.026,1387,2.613,1418,3.734,1428,2.546,1429,3.208,1430,2.546,1431,2.759,1432,2.546,1433,1.477,1435,2.485,1436,2.485,1437,2.763,1447,3.39,1450,2.091,1451,1.544,1454,2.04,1456,3.734,1457,2.887,1460,2.04,1461,2.207,1463,2.431,1470,2.763,1472,1.417,1476,3.181,1499,5.218,1533,3.39,1551,2.207,1552,2.763,1557,4.47,1559,2.929,1571,1.796,1590,3.134,1746,1.701,1758,3.39,1873,3.734,1961,2.207,1969,1.701,2214,2.857,2262,4.747,2263,4.47,2269,3.569,2276,3.359,2360,3.734,2567,4.546,2673,1.907,3027,5.583,3028,2.207,3029,3.734,3030,3.734,3031,4.255,3032,5.181,3033,4.255,3034,4.998,3035,5.181,3036,4.255,3037,5.181,3038,5.181,3039,6.622,3040,2.77,3041,2.77,3042,4.255,3043,5.181,3044,4.546,3045,4.255,3046,2.77,3047,4.255,3048,4.255,3049,4.255,3050,5.181,3051,4.255,3052,4.255,3053,5.81,3054,4.255,3055,4.255,3056,4.255,3057,4.255,3058,2.77,3059,5.815,3060,5.181,3061,4.255,3062,4.255,3063,4.255,3064,4.255,3065,3.734,3066,4.255,3067,4.255,3068,4.255,3069,4.255,3070,4.255,3071,4.255,3072,2.77,3073,4.128,3074,2.77,3075,4.255,3076,2.77,3077,2.77,3078,3.734,3079,6.622,3080,2.77,3081,2.77,3082,2.77,3083,4.255,3084,4.255,3085,2.77,3086,4.255,3087,4.255,3088,4.255,3089,4.255,3090,2.77,3091,5.181,3092,2.77,3093,2.77,3094,2.77,3095,2.77,3096,2.77,3097,2.77,3098,2.77,3099,2.77]],["title/modules/ThumbnailCarouselModule.html",[0,1.21,1495,2.918]],["body/modules/ThumbnailCarouselModule.html",[2,2.073,3,2.073,8,0.011,18,2.26,19,1.817,20,1.532,21,0.149,22,0.182,23,0.149,24,0.1,26,2.545,28,1.926,35,0.331,47,2.26,48,0.361,49,3.569,50,2.739,98,0.182,99,0.1,109,0.007,110,0.009,111,0.007,255,1.409,558,2.657,559,1.983,670,2.469,671,2.624,672,2.043,1495,5.872,1499,4.137,1851,4.458,1852,3.69,3027,4.426,3034,4.788,3059,5.786,3100,5.273,3101,5.273,3102,5.273,3103,6.009,3104,7.261,3105,6.009,3106,6.009,3107,6.009,3108,6.009,3109,6.009]],["title/components/TissueSectionVisComponent.html",[130,0.532,561,1.281]],["body/components/TissueSectionVisComponent.html",[7,1.159,8,0.011,9,1.159,21,0.095,22,0.116,23,0.095,24,0.124,29,1.341,31,1.42,33,1.35,35,0.21,38,0.803,48,0.23,65,1.552,98,0.116,99,0.124,102,1.073,109,0.005,110,0.007,111,0.007,118,0.613,119,0.796,120,0.619,125,1.232,126,0.702,127,0.637,128,1.265,130,0.786,136,1.575,170,1.126,172,1.126,176,1.379,179,1.69,182,2.495,183,1.839,185,1.839,187,1.785,188,1.785,191,1.265,193,1.888,196,1.597,197,2.557,205,1.895,210,1.265,216,1.228,226,1.232,231,1.193,254,1.588,303,2.221,317,1.165,318,2.149,323,2.41,336,1.942,340,3.364,343,2.354,344,3.32,371,1.785,373,2.465,376,2.149,418,0.874,419,1.201,420,1.165,432,2.963,437,1.575,444,1.303,445,1.159,449,1.265,451,1.159,453,2.297,478,2.573,507,1.303,508,2.169,509,1.635,510,1.303,511,2.313,512,1.303,513,1.303,514,1.303,515,1.159,516,1.303,517,1.159,518,1.303,519,1.159,520,1.839,521,1.159,522,1.193,523,1.303,524,1.303,525,1.159,526,1.303,527,1.159,528,1.265,529,1.303,530,1.159,531,1.635,532,1.303,533,1.159,534,1.303,535,1.159,536,1.839,537,1.159,538,1.303,539,1.193,540,1.303,541,1.159,542,1.303,543,1.159,544,1.228,545,1.779,546,1.159,547,1.508,548,1.005,549,1.839,550,1.159,551,1.303,552,1.159,553,1.094,554,1.159,555,1.303,556,1.159,557,1.303,558,1.159,559,1.265,560,1.303,561,2.057,562,2.551,563,2.642,564,1.303,565,1.159,566,1.064,567,1.303,568,1.159,569,1.303,570,1.303,571,1.303,593,2.313,648,1.747,649,2.016,650,2.557,656,2.661,661,2.067,758,1.385,785,2.765,787,1.747,816,2.657,838,1.884,846,2.378,854,3.013,886,1.884,887,2.238,972,2.755,1359,4.571,1368,5.497,1430,3.078,1435,2.238,1450,1.884,1454,2.823,1455,3.054,1460,2.823,1470,2.044,1488,2.823,1502,5.483,1570,3.157,1843,4.613,2089,3.054,2602,3.982,3110,5.931,3111,3.364,3112,7.444,3113,6.264,3114,5.407,3115,5.407,3116,6.264,3117,7.174,3118,6.264,3119,3.833,3120,4.744,3121,4.744,3122,3.833,3123,5.407,3124,5.407,3125,5.407,3126,5.407,3127,5.407,3128,3.833,3129,5.407,3130,5.407,3131,5.407,3132,3.833,3133,3.833,3134,3.833,3135,3.833,3136,3.833,3137,3.833,3138,3.833]],["title/modules/TissueSectionVisModule.html",[0,1.21,1496,2.918]],["body/modules/TissueSectionVisModule.html",[2,1.792,3,2.128,8,0.011,18,2.319,19,1.897,20,1.6,21,0.155,22,0.19,23,0.155,24,0.104,26,2.612,28,2.011,35,0.309,47,2.319,48,0.377,98,0.19,99,0.104,109,0.008,110,0.009,111,0.008,561,2.67,562,1.897,563,2.403,670,2.534,671,2.693,672,2.134,1359,3.853,1496,5.923,1502,4.622,3110,5,3139,5.506,3140,5.506,3141,5.506,3142,6.275,3143,6.275]],["title/components/ToggleButtonComponent.html",[130,0.532,565,1.281]],["body/components/ToggleButtonComponent.html",[7,0.875,8,0.011,9,0.875,21,0.072,22,0.088,23,0.072,24,0.132,29,1.091,31,1.556,33,1.509,34,1.452,35,0.231,38,0.606,48,0.174,65,1.521,98,0.088,99,0.112,100,2.289,101,1.613,102,0.912,103,1.024,109,0.004,110,0.005,111,0.005,118,0.283,119,0.648,120,0.71,125,1.458,126,0.659,127,0.885,128,0.955,129,3.856,130,0.927,145,1.014,170,0.85,172,1.879,176,1.122,179,2.313,182,2.43,183,1.496,185,1.496,187,1.452,188,1.452,191,1.757,193,1.221,196,1.358,205,2.242,210,1.757,216,0.928,219,0.776,226,1.356,231,0.901,236,1.452,251,1.33,252,1.293,253,1.65,255,0.679,261,2.033,263,3.856,280,1.993,315,2.452,317,1.379,318,1.749,319,2.251,323,2.289,371,1.757,418,1.003,419,1.087,420,1.379,434,1.423,435,1.423,437,1.189,444,0.984,445,0.875,449,0.955,451,0.875,507,0.984,508,1.934,509,1.33,510,0.984,511,2.022,512,0.984,513,0.984,514,0.984,515,0.875,516,0.984,517,0.875,518,0.984,519,0.875,520,1.496,521,0.875,522,0.901,523,0.984,524,0.984,525,0.875,526,0.984,527,0.875,528,0.955,529,0.984,530,0.875,531,1.33,532,0.984,533,0.875,534,0.984,535,0.875,536,1.496,537,0.875,538,0.984,539,0.901,540,0.984,541,0.875,542,0.984,543,0.875,544,1.706,545,1.586,546,0.875,547,1.318,548,0.759,549,1.496,550,0.875,551,0.984,552,0.875,553,0.826,554,0.875,555,0.984,556,0.875,557,0.984,558,0.875,559,0.955,560,0.984,561,0.875,562,0.875,563,0.875,564,0.984,565,1.798,566,2.326,567,0.984,568,0.875,569,0.984,570,0.984,571,0.984,573,1.147,592,1.221,622,3.187,650,1.369,656,1.23,661,0.955,758,1.046,769,4.242,770,2.967,773,3.066,776,1.423,777,2.839,780,5.157,781,3.506,782,4.739,783,3.314,785,2.251,786,3.029,791,2.081,792,2.518,793,3.172,794,3.241,795,1.87,798,2.767,802,3.241,803,3.029,805,1.936,809,3.029,816,2.163,830,3.921,831,3.241,838,1.423,842,2.132,846,3.315,853,3.314,854,4.329,861,2.306,863,2.132,869,2.54,872,2.132,886,1.423,887,1.69,896,1.423,910,2.853,919,3.506,921,3.506,922,3.506,926,2.452,929,4.299,934,4.962,939,2.163,951,2.306,957,1.777,972,1.273,996,2.251,998,3.872,1251,3.942,1427,1.877,1428,1.423,1429,1.48,1432,2.163,1433,2.347,1436,1.69,1437,1.544,1450,1.423,1470,1.544,1472,3.446,1511,6.328,1555,3.856,1570,1.69,1647,2.702,1840,1.993,2089,2.306,2094,2.54,2095,4.671,2096,4.671,2114,3.861,2142,2.54,2146,3.861,2157,5.912,2158,5.912,3144,6.969,3145,2.54,3146,5.324,3147,4.4,3148,4.4,3149,2.895,3150,4.4,3151,6.737,3152,4.4,3153,4.4,3154,5.324,3155,2.895,3156,2.895,3157,2.895,3158,2.895,3159,2.895,3160,2.895,3161,2.895,3162,2.895,3163,2.895,3164,2.895,3165,2.895,3166,2.895,3167,2.895,3168,2.895,3169,2.895,3170,2.895,3171,2.895,3172,2.895,3173,2.895,3174,4.4,3175,4.4,3176,2.895,3177,2.895]],["title/components/ViewerComponent.html",[130,0.532,568,1.281]],["body/components/ViewerComponent.html",[7,1.114,8,0.011,9,1.114,21,0.091,22,0.112,23,0.091,24,0.133,29,1.303,31,1.558,33,1.133,34,1.44,35,0.204,38,0.772,48,0.221,57,2.388,58,1.965,65,1.543,98,0.112,99,0.102,100,2.023,101,2.053,102,0.9,103,0.709,109,0.005,110,0.007,111,0.007,118,0.361,119,0.774,120,0.848,126,0.74,127,1.019,128,1.216,130,0.769,170,1.082,172,1.082,176,1.34,179,1.653,182,2.486,183,1.787,185,1.787,187,1.735,188,1.735,196,1.563,208,2.929,210,2.023,212,4.309,216,2.478,219,0.65,230,2.388,231,1.636,255,0.864,261,1.653,309,2.233,317,1.523,318,1.464,323,2.358,336,2.098,371,2.023,396,2.151,397,4.613,418,1.198,419,1.078,420,1.523,428,2.262,432,2.899,437,1.513,444,1.253,445,1.114,449,1.216,451,1.114,453,2.233,478,2.159,507,1.253,508,1.589,509,1.589,510,1.253,511,2.273,512,1.253,513,1.253,514,1.253,515,1.114,516,1.253,517,1.114,518,1.253,519,1.114,520,1.787,521,1.114,522,1.147,523,1.253,524,1.253,525,1.114,526,1.253,527,1.114,528,1.216,529,1.253,530,1.114,531,1.589,532,1.253,533,1.114,534,1.253,535,1.114,536,1.787,537,1.114,538,1.253,539,1.147,540,1.253,541,1.114,542,1.253,543,1.114,544,1.181,545,1.752,546,1.114,547,1.481,548,0.966,549,1.787,550,1.114,551,1.253,552,1.114,553,1.052,554,1.114,555,1.253,556,1.114,557,1.253,558,1.114,559,1.216,560,1.253,561,1.114,562,1.853,563,1.114,564,1.253,565,1.114,566,1.022,567,1.253,568,2.021,569,1.253,570,1.253,571,1.253,573,0.794,585,2.396,609,2.696,621,3.618,626,2.312,639,1.884,649,2.285,651,2.689,652,2.713,656,2.839,657,2.053,661,2.023,758,1.331,777,3.268,785,2.689,787,2.396,816,2.583,838,1.81,846,1.62,854,2.053,855,4.188,886,1.81,896,3.012,972,2.696,998,1.742,1042,6.201,1251,1.965,1258,4.613,1400,3.227,1426,2.388,1428,2.583,1429,2.689,1430,1.81,1432,1.81,1433,1.965,1435,3.07,1436,2.151,1444,2.935,1450,1.81,1470,1.965,1472,1.884,1476,3.763,1592,4.883,1605,4.188,1648,4.188,1649,5.325,1746,2.262,1749,3.618,1934,4.613,1944,3.871,1969,2.262,1982,4.883,1984,5.325,1989,4.883,1992,4.127,1994,2.935,2062,4.883,3178,3.233,3179,4.613,3180,6.129,3181,5.257,3182,6.129,3183,6.683,3184,3.684,3185,5.257,3186,3.684,3187,3.684,3188,5.257,3189,3.684,3190,3.684,3191,3.684,3192,4.613,3193,5.257,3194,5.257,3195,5.257,3196,3.684,3197,5.257,3198,3.684,3199,6.129,3200,5.257,3201,4.613,3202,3.684,3203,3.684,3204,3.684]],["title/modules/ViewerModule.html",[0,1.21,17,2.918]],["body/modules/ViewerModule.html",[2,1.755,3,2.102,8,0.011,17,5.899,18,2.291,19,1.859,20,1.568,21,0.152,22,0.186,23,0.152,24,0.102,26,2.58,28,1.97,35,0.329,47,2.291,48,0.37,49,3.618,50,2.803,98,0.186,99,0.102,109,0.008,110,0.009,111,0.008,231,1.914,568,2.664,670,2.503,671,2.66,672,2.091,1851,4.52,1852,3.775,2936,6.46,2937,5.395,3205,5.395,3206,5.395,3207,5.395,3208,6.148,3209,6.148]],["title/injectables/WorkerDataSourceService.html",[404,1.022,1353,2.918]],["body/injectables/WorkerDataSourceService.html",[0,1.545,8,0.011,21,0.134,22,0.164,23,0.134,24,0.13,29,1.688,31,1.474,33,1.467,35,0.304,38,1.134,48,0.325,65,1.201,66,1.897,98,0.164,99,0.09,102,0.927,103,1.433,109,0.007,110,0.008,111,0.007,116,2.893,117,6.858,118,0.53,120,1.202,125,1.698,126,0.788,127,1.132,136,2.223,138,5.38,212,4.151,219,1.314,226,1.698,254,2.296,255,1.596,261,2.108,262,5.425,404,1.641,405,2.66,410,5.486,418,1.698,419,1.202,423,3.017,672,1.841,1346,5.38,1347,3.987,1353,4.687,1354,5.014,3210,6.858,3211,7.448,3212,6.808,3213,6.808,3214,5.413,3215,7.448,3216,7.815,3217,5.413,3218,6.808,3219,5.413,3220,5.413,3221,6.808,3222,5.413,3223,6.808,3224,5.413,3225,5.413,3226,5.413,3227,5.413,3228,5.413,3229,5.413,3230,5.413,3231,5.413,3232,5.413,3233,5.413,3234,5.413,3235,5.413,3236,5.413,3237,5.413]],["title/changelog.html",[3238,2.602,3239,2.602,3240,2.815]],["body/changelog.html",[3,1.354,8,0.008,21,0.148,31,0.383,38,0.406,58,1.705,65,1.438,66,0.678,89,3.89,91,1.079,94,4.461,95,2.073,108,5.57,109,0.002,110,0.004,111,0.008,112,0.936,114,0.678,119,0.285,120,0.312,126,0.189,130,0.595,136,2.156,175,2.684,176,0.815,182,0.913,193,0.887,196,1.703,201,4.201,203,3.778,206,4.081,207,2.547,214,1.189,216,2.077,219,1.177,254,2.331,257,1.542,258,3.838,262,1.542,278,2.355,293,2.243,298,4.959,300,3.838,303,1.948,309,1.735,314,1.426,316,2.014,317,0.417,318,0.769,321,1.699,322,1.542,323,0.745,343,2.911,347,1.333,351,1.699,352,1.333,354,1.571,355,2.811,356,0.852,360,3.584,361,4.161,371,1.732,372,1.255,376,1.271,389,2.073,428,2.507,436,2.828,438,1.635,445,0.585,449,1.565,490,1.699,496,1.255,499,4.162,509,0.585,522,0.995,547,1.517,548,0.508,553,1.955,562,2.189,563,0.967,566,0.887,571,0.658,584,1.867,591,0.99,593,0.585,594,2.805,602,2.547,603,1.542,607,6.052,611,1.189,612,2.355,615,2.201,629,0.99,648,0.882,661,0.639,708,1.333,793,1.032,795,3.076,803,2.201,805,2.486,821,1.333,826,1.333,846,0.852,867,1.189,868,1.705,886,0.951,889,1.13,921,1.542,926,3.149,934,1.426,944,0.852,990,1.189,996,1.635,998,1.512,999,1.333,1002,1.032,1063,1.426,1067,1.635,1068,2.547,1072,2.547,1074,1.542,1075,1.333,1082,1.542,1083,4.182,1086,4.182,1088,1.542,1092,1.963,1098,1.542,1102,1.542,1104,3.866,1117,1.426,1157,2.805,1195,2.547,1219,2.201,1225,2.355,1251,1.032,1252,1.699,1253,1.542,1256,2.811,1259,3.254,1260,1.699,1266,1.333,1267,1.542,1269,3.916,1288,2.811,1311,1.542,1318,1.542,1319,1.542,1363,1.699,1378,1.426,1379,1.13,1394,2.805,1396,1.255,1399,1.333,1400,1.189,1403,1.426,1405,1.699,1442,4.605,1444,1.542,1457,1.782,1473,3.664,1474,1.699,1485,4.161,1515,1.699,1523,2.547,1526,1.963,1534,1.542,1546,1.189,1547,1.13,1553,1.255,1561,1.699,1573,1.542,1590,2.355,1674,2.547,1676,3.584,1683,2.547,1690,2.805,1749,2.201,1758,1.542,1775,1.542,1778,1.255,1779,3.584,1799,1.699,1801,1.699,1832,3.778,1842,1.699,1871,4.161,1911,2.355,1935,2.805,1944,3.866,1956,2.355,2015,2.547,2070,2.547,2189,1.542,2209,3.264,2214,0.951,2227,5.054,2242,1.333,2264,1.13,2269,2.911,2304,1.333,2319,1.699,2376,1.699,2504,2.547,2516,1.699,2625,2.547,2670,3.008,2743,2.547,2953,1.699,2987,2.805,2988,1.699,3029,1.699,3030,2.805,3034,1.542,3053,1.699,3065,4.161,3078,2.805,3120,4.605,3179,4.161,3201,2.805,3239,3.008,3240,2.547,3241,1.699,3242,1.699,3243,1.936,3244,5.249,3245,4.084,3246,4.084,3247,8.753,3248,5.485,3249,1.936,3250,3.197,3251,1.699,3252,1.936,3253,5.485,3254,1.936,3255,4.084,3256,3.584,3257,1.936,3258,1.936,3259,6.846,3260,6.994,3261,3.197,3262,1.936,3263,3.197,3264,3.197,3265,5.651,3266,1.936,3267,1.936,3268,5.651,3269,1.936,3270,3.197,3271,4.404,3272,7.328,3273,1.936,3274,5.979,3275,1.936,3276,1.936,3277,3.197,3278,4.741,3279,1.936,3280,3.197,3281,4.084,3282,1.936,3283,4.084,3284,1.936,3285,1.936,3286,1.936,3287,1.936,3288,1.936,3289,1.936,3290,7.239,3291,1.936,3292,1.936,3293,1.699,3294,1.699,3295,1.699,3296,1.936,3297,3.197,3298,1.699,3299,1.936,3300,3.197,3301,4.741,3302,4.741,3303,4.084,3304,1.936,3305,1.936,3306,1.936,3307,1.936,3308,5.651,3309,4.503,3310,4.605,3311,3.584,3312,1.936,3313,4.605,3314,1.936,3315,3.197,3316,1.936,3317,4.084,3318,5.485,3319,7.124,3320,1.936,3321,1.936,3322,3.197,3323,6.846,3324,3.584,3325,1.936,3326,5.651,3327,5.249,3328,1.936,3329,1.936,3330,1.936,3331,1.936,3332,1.936,3333,1.936,3334,2.805,3335,2.805,3336,5.979,3337,5.485,3338,1.936,3339,1.936,3340,1.936,3341,1.936,3342,4.605,3343,1.936,3344,3.197,3345,1.936,3346,3.197,3347,3.197,3348,3.197,3349,3.197,3350,1.936,3351,1.936,3352,1.936,3353,1.936,3354,3.197,3355,3.197,3356,1.936,3357,3.197,3358,3.197,3359,4.741,3360,1.936,3361,1.936,3362,1.936,3363,1.936,3364,3.197,3365,1.936,3366,1.936,3367,5.651,3368,2.805,3369,1.936,3370,1.936,3371,1.936,3372,4.084,3373,3.197,3374,5.651,3375,2.805,3376,4.741,3377,1.936,3378,1.936,3379,3.197,3380,3.197,3381,1.936,3382,1.936,3383,3.197,3384,1.936,3385,1.936,3386,1.936,3387,1.936,3388,3.197,3389,1.936,3390,1.936,3391,1.936,3392,1.936,3393,1.936,3394,1.936,3395,1.936,3396,1.936,3397,1.936,3398,3.197,3399,1.936,3400,1.936,3401,4.084,3402,4.084,3403,3.197,3404,1.936,3405,1.936,3406,1.936,3407,1.936,3408,1.936,3409,1.936,3410,3.197,3411,3.197,3412,4.084,3413,1.936,3414,1.936,3415,1.936,3416,1.936,3417,1.936,3418,3.197,3419,1.936,3420,1.936,3421,1.936,3422,4.084,3423,3.197,3424,1.936,3425,1.936,3426,4.084,3427,3.197,3428,4.741,3429,1.936,3430,1.936,3431,1.936,3432,3.197,3433,1.936,3434,1.936,3435,1.936,3436,1.936,3437,1.936,3438,1.936,3439,4.084,3440,1.936,3441,4.084,3442,5.249,3443,2.805,3444,3.197,3445,3.197,3446,4.084,3447,4.741,3448,5.249,3449,3.197,3450,4.084,3451,1.936,3452,1.936,3453,5.979,3454,4.084,3455,4.741,3456,1.936,3457,1.936,3458,1.936,3459,1.936,3460,3.197,3461,1.936,3462,1.936,3463,1.936,3464,3.197,3465,1.936,3466,1.936,3467,3.584,3468,3.197,3469,4.084,3470,1.936,3471,1.936,3472,1.936,3473,1.936,3474,1.936,3475,1.936,3476,1.936,3477,1.936,3478,1.936,3479,1.936,3480,1.936,3481,4.741,3482,5.651,3483,4.084,3484,1.936,3485,1.936,3486,4.084,3487,1.936,3488,1.936,3489,1.936,3490,3.197,3491,3.197,3492,4.084,3493,1.936,3494,1.936,3495,1.936,3496,1.936,3497,1.936,3498,1.699,3499,1.936,3500,1.936,3501,1.936,3502,1.936,3503,1.936,3504,1.936,3505,1.936,3506,1.936,3507,1.936,3508,1.936,3509,1.936,3510,1.936,3511,1.936,3512,1.936,3513,6.251,3514,1.936,3515,3.584,3516,6.251,3517,4.084,3518,4.741,3519,3.197,3520,4.084,3521,1.936,3522,1.936,3523,1.936,3524,1.936,3525,3.197,3526,1.936,3527,1.936,3528,1.936,3529,3.197,3530,1.936,3531,1.936,3532,1.936,3533,1.936,3534,1.936,3535,1.936,3536,1.936,3537,1.936,3538,1.936,3539,1.936,3540,1.936,3541,1.936,3542,1.936,3543,1.936,3544,1.936,3545,1.936,3546,1.936,3547,1.936,3548,1.936,3549,1.936,3550,1.936,3551,1.936,3552,1.936,3553,1.936,3554,3.197,3555,1.936,3556,3.197,3557,1.936,3558,3.197,3559,3.197,3560,4.741,3561,4.741,3562,3.197,3563,3.197,3564,1.936,3565,1.936,3566,1.936,3567,1.936,3568,1.699,3569,1.936,3570,1.936,3571,1.936,3572,1.936,3573,1.936,3574,1.936,3575,3.197,3576,6.677,3577,4.084,3578,1.936,3579,3.197,3580,1.936,3581,1.936,3582,1.936,3583,1.936,3584,1.936,3585,1.936,3586,3.197,3587,5.247,3588,3.197,3589,1.936,3590,1.936,3591,1.936,3592,1.936,3593,3.778,3594,1.936,3595,3.197,3596,1.936,3597,1.936,3598,1.936,3599,3.197,3600,1.936,3601,1.936,3602,1.936,3603,3.197,3604,4.084,3605,3.197,3606,1.936,3607,2.805,3608,1.936,3609,1.936,3610,1.936,3611,1.936,3612,1.936,3613,1.936,3614,1.936,3615,1.936,3616,1.936,3617,1.699,3618,1.936,3619,1.936,3620,1.936,3621,1.936,3622,1.936,3623,1.936,3624,1.699,3625,1.936,3626,1.936,3627,3.197,3628,1.936,3629,1.936,3630,1.936,3631,1.936,3632,1.936,3633,1.936,3634,1.936,3635,1.936,3636,1.936,3637,1.936,3638,3.197,3639,1.936,3640,1.936,3641,3.197,3642,1.936,3643,1.936,3644,1.936,3645,1.936,3646,1.936,3647,1.936,3648,1.936,3649,1.936,3650,1.936]],["title/coverage.html",[3593,4.62]],["body/coverage.html",[7,0.969,8,0.011,9,0.969,23,0.079,24,0.149,36,2.206,38,0.995,39,2.36,67,2.36,72,2.206,75,3.564,78,3.498,82,2.206,85,2.36,89,3.269,99,0.116,109,0.004,110,0.006,111,0.004,112,1.308,113,2.553,115,4.167,126,0.314,130,1.074,136,1.316,156,2.206,159,2.077,162,1.786,164,1.786,166,2.916,168,1.709,170,0.941,172,0.941,219,0.565,223,6.45,254,0.941,303,1.316,336,2.423,394,3.44,404,1.914,406,2.811,407,2.811,432,4.141,446,3.784,447,3.784,505,2.553,515,0.969,517,0.969,519,0.969,521,0.969,525,0.969,527,0.969,530,0.969,533,0.969,535,0.969,537,0.969,539,0.997,541,0.969,543,0.969,545,1.178,546,0.969,547,1.842,548,1.246,550,0.969,552,0.969,553,1.356,554,0.969,556,0.969,558,0.969,561,0.969,563,1.436,565,0.969,568,0.969,572,2.811,662,2.553,675,4.308,676,3.337,677,4.308,695,2.206,712,2.206,723,1.639,768,3.784,773,2.018,798,1.316,813,1.515,893,2.811,980,1.967,981,4.103,987,1.967,994,1.967,995,1.967,1020,2.206,1022,3.895,1038,2.553,1039,4.818,1066,2.36,1073,3.784,1106,2.553,1246,2.36,1247,4.308,1248,3.784,1249,3.784,1268,2.206,1345,2.36,1346,4.308,1347,4.168,1353,2.206,1359,3.474,1360,2.553,1361,2.36,1362,2.811,1434,4.509,1499,3.269,1502,2.36,1508,1.967,1509,1.967,1511,2.553,1513,2.811,1588,2.553,1589,2.811,1772,3.269,1773,2.36,1774,2.811,1817,3.079,1857,2.36,1860,2.811,1902,2.553,1904,2.811,1905,2.811,1916,2.811,1933,2.811,1977,2.36,1978,3.498,1979,3.784,1986,2.077,2038,2.553,2039,4.168,2071,2.553,2193,2.077,2194,2.811,2195,2.811,2196,3.784,2197,3.784,2233,2.36,2261,4.538,2263,2.077,2270,1.967,2331,3.724,2333,3.304,2334,2.36,2336,3.474,2338,3.784,2353,1.871,2362,2.206,2436,3.784,2437,3.784,2502,2.811,2503,2.811,2505,2.811,2548,2.811,2625,2.553,2635,2.553,2644,4.168,2657,2.36,2687,2.36,2749,1.967,2750,4.332,2751,3.44,2752,3.784,2757,1.967,2762,3.337,2763,3.784,2789,2.553,2794,2.36,2796,1.786,2810,2.553,2847,2.811,2854,2.206,2855,3.784,2859,1.967,2887,2.811,2919,2.553,2920,2.811,2939,2.553,2949,2.553,2976,3.784,3027,3.498,3028,3.784,3073,2.553,3110,2.553,3111,2.811,3144,2.811,3145,2.811,3178,2.811,3210,2.811,3271,2.36,3309,2.553,3593,2.553,3651,3.204,3652,3.204,3653,6.258,3654,3.204,3655,3.204,3656,5.659,3657,3.204,3658,3.204,3659,3.204,3660,4.749,3661,5.659,3662,3.204,3663,6.999,3664,2.811,3665,8.216,3666,3.204,3667,3.204,3668,5.659,3669,3.204,3670,2.553,3671,2.553,3672,3.204,3673,4.749,3674,3.204,3675,3.204,3676,2.811,3677,2.811,3678,5.659,3679,5.659,3680,3.204,3681,3.204,3682,3.204,3683,3.204,3684,3.204,3685,3.204,3686,3.204,3687,4.749,3688,3.204,3689,4.749,3690,3.204,3691,3.204,3692,3.204,3693,4.509,3694,3.204,3695,2.811,3696,2.811,3697,3.204,3698,3.204,3699,3.204,3700,3.204,3701,3.204,3702,4.749,3703,3.204,3704,2.811,3705,3.204,3706,3.204,3707,3.204,3708,4.749,3709,4.749,3710,4.749,3711,3.204,3712,3.204,3713,3.204,3714,3.204,3715,3.204,3716,3.204]],["title/dependencies.html",[3,1.456,3298,3.1]],["body/dependencies.html",[3,1.424,8,0.011,23,0.123,44,4.377,48,0.3,57,4.189,58,3.446,109,0.006,110,0.008,111,0.006,145,1.748,175,2.551,201,3.234,509,1.954,591,2.551,628,3.446,629,2.551,643,3.674,672,1.696,685,3.056,689,2.119,691,3.674,692,3.674,767,3.974,941,3.974,1046,3.674,1047,4.189,1079,3.974,1263,3.674,1265,3.674,1591,3.674,1634,4.377,1694,3.974,1906,2.66,2229,3.234,2239,3.234,2391,3.674,2788,3.974,2941,4.377,2944,4.377,2945,5.67,3044,4.377,3059,3.974,3251,4.377,3313,4.377,3334,4.377,3368,4.377,3375,4.377,3467,4.377,3515,5.67,3717,4.988,3718,4.988,3719,8.522,3720,4.988,3721,4.988,3722,4.988,3723,4.988,3724,4.988,3725,4.988,3726,4.988,3727,4.988,3728,4.988,3729,4.988,3730,4.988,3731,7.168,3732,4.988,3733,6.462,3734,4.988,3735,4.988,3736,4.988,3737,4.988,3738,7.168,3739,4.988,3740,4.988,3741,4.988,3742,4.988,3743,4.988,3744,4.988,3745,4.988,3746,4.988,3747,4.988,3748,4.988,3749,6.462,3750,4.988,3751,4.988,3752,4.988,3753,4.988,3754,6.462,3755,4.988,3756,4.988,3757,6.462,3758,4.988,3759,4.988,3760,4.988,3761,4.988,3762,4.988,3763,4.988,3764,4.988,3765,4.988,3766,4.988,3767,4.988,3768,4.988,3769,4.988,3770,4.988,3771,4.988,3772,4.377,3773,4.988,3774,4.988,3775,4.988,3776,4.988,3777,4.988,3778,4.988,3779,6.462,3780,4.988,3781,4.988,3782,4.988,3783,4.988,3784,4.988,3785,4.988,3786,4.988,3787,4.988,3788,4.988,3789,4.988,3790,4.988,3791,4.988,3792,4.988,3793,4.988,3794,4.988,3795,4.988,3796,4.988,3797,4.988,3798,4.988,3799,4.988,3800,4.988,3801,4.988,3802,4.988,3803,4.988,3804,4.988,3805,4.988,3806,6.462,3807,4.988,3808,4.988,3809,4.988,3810,4.988,3811,4.988,3812,4.988,3813,4.988,3814,4.988,3815,4.988,3816,4.988,3817,4.988,3818,4.988]],["title/miscellaneous/enumerations.html",[3819,2.063,3820,4.476]],["body/miscellaneous/enumerations.html",[8,0.01,24,0.113,109,0.008,110,0.01,111,0.008,118,0.662,161,6.204,236,2.232,254,1.987,420,1.678,577,3.607,1039,4.656,1079,5.389,1084,6.832,1085,5.735,3819,3.95,3820,5.935,3821,5.389]],["title/miscellaneous/functions.html",[3819,2.063,3822,4.476]],["body/miscellaneous/functions.html",[8,0.011,24,0.131,33,1.779,34,1.188,89,4.74,109,0.007,110,0.009,111,0.007,118,0.539,120,1.352,125,1.256,126,0.674,127,0.916,179,1.857,210,1.819,211,4.059,219,1.214,229,3.573,251,1.666,254,1.619,373,3.423,394,3.979,418,1.882,419,1.332,420,1.188,436,3.257,446,4.391,447,5.486,482,4.836,505,5.486,573,1.745,693,4.005,768,4.391,791,2.607,843,6.267,844,4.611,845,4.836,846,3.029,852,4.836,855,4.391,927,4.185,989,4.021,1001,3.384,1039,3.794,1055,4.836,1085,5.071,1086,4.391,1087,6.042,1088,4.391,1089,4.836,1091,3.218,1092,4.227,1093,4.836,1094,4.836,1096,6.042,1097,4.836,1098,4.391,1099,4.836,1100,4.836,1101,4.391,1102,5.983,1103,3.384,1104,4.059,1105,3.573,1106,5.486,1317,4.391,2366,4.836,2789,5.486,2856,5.531,3670,4.391,3671,5.486,3676,6.042,3677,6.042,3704,6.042,3819,3.218,3821,5.983,3822,4.836,3823,4.836,3824,5.511,3825,5.511,3826,5.511,3827,5.511,3828,5.511,3829,5.511,3830,5.511,3831,5.511,3832,5.511]],["title/index.html",[118,0.346,3238,2.602,3239,2.602]],["body/index.html",[8,0.009,21,0.2,65,1.576,94,5.425,108,5.181,109,0.007,110,0.009,111,0.007,112,1.081,114,1.942,130,0.695,175,2.833,206,3.85,300,4.622,438,2.833,553,1.582,612,5.088,793,2.954,874,3.235,896,2.723,1018,6.915,1082,4.414,1083,5.504,1104,4.08,1113,6.061,1195,5.504,1215,4.861,1256,3.814,1379,3.235,1944,4.08,3240,4.414,3241,6.061,3242,6.061,3253,6.915,3256,6.061,3271,4.08,3272,6.061,3293,4.861,3294,4.861,3295,4.861,3310,7.115,3311,6.915,3318,6.061,3324,4.861,3335,6.061,3337,4.861,3607,4.861,3617,4.861,3833,5.54,3834,5.54,3835,5.54,3836,6.061,3837,5.54,3838,5.54,3839,6.908,3840,6.908,3841,6.908,3842,7.527,3843,5.54,3844,5.54,3845,7.881,3846,7.527,3847,5.54,3848,5.54,3849,6.908,3850,5.54,3851,5.54,3852,5.54,3853,6.908,3854,5.54,3855,5.54,3856,5.54,3857,5.54,3858,5.54,3859,5.54,3860,5.54,3861,5.54,3862,5.54,3863,5.54,3864,5.54,3865,5.54,3866,5.54,3867,5.54,3868,5.54,3869,5.54,3870,5.54,3871,5.54,3872,5.54,3873,5.54]],["title/license.html",[3238,2.602,3239,2.602,3874,3.1]],["body/license.html",[8,0.009,20,1.546,94,4.172,109,0.008,110,0.009,111,0.008,178,4.829,205,2.124,622,2.867,693,3.232,821,4.172,826,5.391,1400,4.481,1415,5.318,1999,4.829,2264,3.539,2856,4.464,3309,4.829,3342,6.405,3498,6.405,3568,5.318,3587,5.318,3624,5.318,3772,5.318,3836,7.614,3874,5.318,3875,6.061,3876,7.832,3877,6.061,3878,6.061,3879,7.299,3880,6.061,3881,6.061,3882,6.061,3883,6.061,3884,7.299,3885,6.061,3886,6.061,3887,6.061,3888,6.061,3889,6.061,3890,6.061,3891,6.061,3892,6.061,3893,6.061,3894,6.061,3895,6.061,3896,6.061,3897,7.299,3898,6.061,3899,6.061,3900,6.061,3901,6.061,3902,6.061,3903,7.299,3904,6.061,3905,6.061,3906,6.061,3907,6.061,3908,6.061,3909,6.061,3910,6.061,3911,6.061,3912,6.061,3913,6.061,3914,6.061,3915,6.061,3916,6.061,3917,6.061,3918,6.061,3919,6.061,3920,6.061,3921,6.061,3922,6.061,3923,6.061,3924,6.061,3925,6.061,3926,6.061]],["title/modules.html",[2,1.655]],["body/modules.html",[1,4.24,2,1.644,8,0.009,10,3.963,11,3.963,12,3.732,13,3.963,14,3.963,15,3.963,16,3.963,17,3.963,58,4.778,109,0.007,110,0.009,111,0.007,665,3.963,1006,3.963,1007,3.963,1008,3.963,1262,6.599,1490,3.963,1495,3.963,1496,3.963,1578,3.963,1844,3.963,1849,3.963,2328,3.732,2329,3.963,2330,3.732,2670,4.24,2801,4.24,2806,3.963,2840,4.24,2845,3.963,3121,5.052,3248,7.862,3927,8.968]],["title/overview.html",[3928,5.088]],["body/overview.html",[1,6.303,2,1.015,3,1.463,4,3.119,5,3.119,6,3.119,7,1.816,8,0.011,9,1.816,10,5.452,11,5.712,12,4.851,13,5.272,14,5.579,15,5.272,16,4.998,17,4.998,18,1.595,19,1.075,20,0.906,109,0.004,110,0.006,111,0.004,114,1.246,159,3.895,170,2.198,172,2.198,176,0.906,405,1.747,515,2.262,517,2.262,519,2.262,521,2.262,525,2.262,527,2.262,530,2.262,533,2.262,535,2.262,537,2.359,539,2.329,541,2.262,543,2.262,546,2.262,550,2.262,552,2.262,554,2.262,556,2.262,558,2.262,561,2.262,565,2.262,568,2.262,665,4.998,666,3.119,667,3.119,668,3.119,1003,3.119,1004,3.119,1005,3.119,1006,5.452,1007,4.135,1008,4.798,1490,5.452,1491,3.119,1492,3.119,1493,3.119,1494,3.119,1495,4.998,1496,4.998,1504,3.119,1505,3.119,1506,3.119,1578,4.998,1579,3.119,1580,3.119,1581,3.119,1764,3.119,1765,3.119,1766,3.119,1844,5.673,1845,3.119,1846,3.119,1847,3.119,1848,3.119,1849,4.998,1896,3.119,1898,3.119,1899,3.119,1903,2.182,1970,3.119,1971,3.119,1972,3.119,2325,3.119,2326,3.119,2327,3.119,2328,5.199,2329,5.673,2330,5.199,2353,3.508,2426,3.119,2427,3.119,2428,3.119,2534,3.119,2535,3.119,2536,3.119,2538,3.119,2541,3.119,2542,3.119,2543,3.119,2626,3.119,2627,3.119,2629,3.119,2641,3.119,2642,3.119,2643,3.119,2801,5.511,2802,3.119,2803,3.119,2804,3.119,2805,3.119,2806,4.998,2832,3.119,2833,3.119,2834,3.119,2840,5.511,2841,3.119,2842,3.119,2843,3.119,2844,3.119,2845,4.998,2883,3.119,2884,3.119,2885,3.119,2932,3.119,2933,3.119,2934,3.119,2969,3.119,2970,3.119,3100,3.119,3101,3.119,3102,3.119,3139,3.119,3140,3.119,3141,3.119,3205,3.119,3206,3.119,3207,3.119,3271,2.618,3443,4.496,3928,3.119,3929,3.555,3930,3.555]],["title/miscellaneous/typealiases.html",[3819,2.063,3931,5.101]],["body/miscellaneous/typealiases.html",[8,0.011,24,0.136,75,3.033,109,0.007,110,0.009,111,0.007,118,0.557,126,0.815,176,1.45,179,2.055,181,3.688,208,4.433,236,2.514,255,1.646,315,3.17,357,3.322,394,3.451,547,1.688,592,1.578,611,3.492,648,2.593,683,3.356,773,2.983,776,2.795,792,3.321,798,3.129,813,3.321,887,3.322,980,3.492,981,3.492,982,3.913,983,3.916,984,3.916,985,3.688,987,3.492,990,4.311,991,5.243,994,3.492,995,3.492,996,2.909,1000,5.243,1001,3.492,1002,4.062,1067,3.591,1449,3.916,1906,3.033,2039,4.189,2059,4.991,2060,6.161,2061,6.161,2062,5.595,2063,4.991,2064,6.161,2065,4.991,2066,6.161,2067,4.991,2068,4.991,2069,4.991,2070,4.532,2331,3.17,2336,3.492,2758,3.688,2759,4.189,2762,3.033,2796,3.17,2810,5.595,3238,4.189,3670,4.532,3671,5.595,3693,5.595,3819,3.322,3823,4.991,3932,5.688,3933,7.303,3934,6.684,3935,7.022,3936,4.991,3937,5.688]],["title/miscellaneous/variables.html",[3819,2.063,3938,4.476]],["body/miscellaneous/variables.html",[8,0.011,24,0.131,38,0.642,66,1.074,67,3.384,75,1.635,88,5.683,95,2.979,99,0.092,103,0.59,109,0.004,110,0.006,111,0.004,118,0.3,126,0.674,136,2.264,138,2.11,162,1.708,164,1.708,168,1.635,210,1.012,212,4.885,213,1.635,219,1.08,226,1.256,240,2.11,241,2.443,303,1.888,316,1.952,317,1.78,318,2.607,323,2.524,336,1.574,357,1.79,373,1.397,376,2.191,394,2.258,400,2.821,418,0.699,419,1.414,420,1.73,423,1.708,531,0.927,592,1.699,649,1.143,661,1.012,675,2.11,676,1.635,677,3.163,678,2.821,679,3.384,695,3.163,696,2.258,697,2.258,698,2.258,699,2.258,700,2.258,701,2.258,702,2.258,703,2.258,704,2.258,705,2.258,706,2.258,707,2.258,708,2.11,709,2.258,710,1.987,711,2.258,723,1.568,773,1.952,795,1.952,798,2.264,927,1.708,944,1.348,981,1.882,985,1.987,989,1.79,1022,2.11,1039,2.11,1066,3.384,1067,1.568,1068,2.443,1069,2.69,1070,2.69,1071,2.69,1072,2.443,1073,2.443,1074,2.443,1075,2.11,1076,2.69,1077,2.69,1078,2.69,1246,2.258,1247,2.11,1248,2.443,1249,3.661,1253,2.443,1261,6.449,1266,2.11,1267,2.443,1268,3.163,1269,4.648,1270,2.69,1271,7.637,1272,2.69,1273,2.69,1274,2.69,1275,4.032,1276,2.69,1277,2.69,1278,2.69,1279,2.69,1280,2.69,1281,2.69,1282,5.373,1283,5.373,1284,5.755,1285,5.755,1286,3.384,1287,2.69,1288,4.74,1289,2.69,1290,2.69,1291,2.69,1292,4.032,1293,4.032,1294,4.032,1295,2.69,1296,2.69,1297,5.755,1298,2.69,1299,4.032,1300,2.69,1301,2.69,1302,2.69,1303,2.69,1304,2.69,1305,5.373,1306,2.69,1307,2.69,1308,4.032,1309,2.69,1310,2.69,1311,2.443,1312,2.69,1313,2.69,1314,2.69,1315,2.69,1316,2.69,1317,3.661,1318,3.661,1319,2.443,1320,2.69,1321,3.384,1322,2.69,1323,2.69,1324,2.69,1325,2.69,1326,2.69,1327,5.373,1328,2.69,1329,2.69,1330,5.373,1331,2.69,1332,2.69,1333,2.258,1334,2.69,1335,2.69,1336,5.755,1337,2.69,1338,4.032,1339,2.69,1340,2.443,1341,2.69,1342,2.443,1343,2.69,1344,2.69,1346,2.11,1354,2.258,1499,2.11,1508,2.821,1509,3.384,1558,2.258,1906,2.451,1908,2.69,1911,2.258,1913,4.032,1986,1.987,2039,2.258,2071,3.661,2072,2.69,2073,2.69,2261,1.987,2267,1.987,2269,3.384,2270,1.882,2272,2.11,2273,2.979,2274,2.11,2276,3.574,2331,1.708,2336,1.882,2644,2.258,2687,3.384,2688,2.443,2859,1.882,2939,2.443,2948,2.69,2949,3.661,2976,2.443,3007,2.69,3027,2.258,3028,3.661,3073,3.661,3192,4.032,3664,4.032,3693,4.392,3695,4.032,3696,4.032,3819,1.79,3821,2.443,3933,2.69,3934,2.69,3936,4.032,3938,2.69,3939,3.066,3940,3.066,3941,3.066,3942,3.066,3943,3.066,3944,4.595,3945,3.066,3946,3.066,3947,3.066,3948,3.066,3949,3.066,3950,3.066]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"components/SpatialSearchUiComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"modules/SpatialSearchUiModule.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":336,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.063rem",{"_index":1574,"title":{},"body":{"components/DropdownComponent.html":{}}}],["0.095rem",{"_index":1761,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["0.1.0",{"_index":3641,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":3818,"title":{},"body":{"dependencies.html":{}}}],["0.12",{"_index":1466,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["0.125rem",{"_index":1557,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["0.12rem",{"_index":1446,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["0.14",{"_index":1464,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["0.15s",{"_index":1469,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["0.16",{"_index":2828,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["0.18.0",{"_index":3761,"title":{},"body":{"dependencies.html":{}}}],["0.1rem",{"_index":1838,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["0.2",{"_index":1462,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["0.2.0",{"_index":3638,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":3780,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":1472,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["0.2rem",{"_index":1565,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["0.2s",{"_index":1833,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["0.3125rem",{"_index":3089,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["0.3s",{"_index":1559,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["0.4",{"_index":345,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["0.4s",{"_index":2931,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["0.5.0",{"_index":3627,"title":{},"body":{"changelog.html":{}}}],["0.5rem",{"_index":652,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ViewerComponent.html":{}}}],["0.5s",{"_index":3177,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["0.6",{"_index":3097,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["0.6.0",{"_index":3607,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.625rem",{"_index":3092,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["0.6s",{"_index":1840,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["0.75rem",{"_index":1447,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["0.875rem",{"_index":1551,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["0.9375rem",{"_index":1759,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["0/1",{"_index":3653,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":3713,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":3652,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":3662,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":3663,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":3661,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":3660,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":3656,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":3683,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":3712,"title":{},"body":{"coverage.html":{}}}],["0000001d",{"_index":1839,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["0000003e",{"_index":1566,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["00000058",{"_index":1892,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["00e5ff",{"_index":705,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["01",{"_index":3314,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":3487,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":3442,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1442,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["05",{"_index":1485,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["06",{"_index":3245,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":3278,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":3588,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":3359,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":1458,"title":{},"body":{"components/DonorCardComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["0rem",{"_index":1555,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["1",{"_index":376,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["1.0",{"_index":3516,"title":{},"body":{"changelog.html":{}}}],["1.0.0",{"_index":3576,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":3756,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":3765,"title":{},"body":{"dependencies.html":{}}}],["1.0.6",{"_index":3813,"title":{},"body":{"dependencies.html":{}}}],["1.0625rem",{"_index":3174,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["1.1.0",{"_index":3554,"title":{},"body":{"changelog.html":{}}}],["1.12rem",{"_index":1445,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["1.16.0",{"_index":3794,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":3758,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":3515,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.3",{"_index":3768,"title":{},"body":{"dependencies.html":{}}}],["1.2.6",{"_index":3795,"title":{},"body":{"dependencies.html":{}}}],["1.25",{"_index":2619,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["1.25rem",{"_index":2621,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["1.2rem",{"_index":1890,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["1.3.5",{"_index":3486,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":3467,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":3782,"title":{},"body":{"dependencies.html":{}}}],["1.48rem",{"_index":1891,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["1.5.0",{"_index":3441,"title":{},"body":{"changelog.html":{}}}],["1.55rem",{"_index":1567,"title":{},"body":{"components/DropdownComponent.html":{}}}],["1.5em",{"_index":1748,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["1.5rem",{"_index":1476,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["1.6.0",{"_index":3428,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":3418,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":3769,"title":{},"body":{"dependencies.html":{}}}],["1.75rem",{"_index":1763,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["1/1",{"_index":3665,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":3686,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":3672,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":499,"title":{},"body":{"components/AppWebComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["10.0.0",{"_index":3778,"title":{},"body":{"dependencies.html":{}}}],["10/12",{"_index":3669,"title":{},"body":{"coverage.html":{}}}],["10/13",{"_index":3692,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":432,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{}}}],["10px",{"_index":1465,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["10x",{"_index":3566,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":3469,"title":{},"body":{"changelog.html":{}}}],["11.2.1",{"_index":3796,"title":{},"body":{"dependencies.html":{}}}],["110",{"_index":1070,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["12",{"_index":3271,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["12.0.1",{"_index":3798,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":3719,"title":{},"body":{"dependencies.html":{}}}],["12.1.3",{"_index":3723,"title":{},"body":{"dependencies.html":{}}}],["12/12",{"_index":3689,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":3690,"title":{},"body":{"coverage.html":{}}}],["12/17",{"_index":3682,"title":{},"body":{"coverage.html":{}}}],["12/18",{"_index":3700,"title":{},"body":{"coverage.html":{}}}],["125rem",{"_index":2831,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["13",{"_index":1072,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["13/13",{"_index":3703,"title":{},"body":{"coverage.html":{}}}],["13/15",{"_index":3688,"title":{},"body":{"coverage.html":{}}}],["136",{"_index":2744,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["14",{"_index":3262,"title":{},"body":{"changelog.html":{}}}],["14/15",{"_index":3698,"title":{},"body":{"coverage.html":{}}}],["14/30",{"_index":3655,"title":{},"body":{"coverage.html":{}}}],["14rem",{"_index":2830,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["15.126.1",{"_index":3718,"title":{},"body":{"dependencies.html":{}}}],["15rem",{"_index":1760,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["16",{"_index":3403,"title":{},"body":{"changelog.html":{}}}],["16.0.0",{"_index":3771,"title":{},"body":{"dependencies.html":{}}}],["16rem",{"_index":1480,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["17",{"_index":3246,"title":{},"body":{"changelog.html":{}}}],["17rem",{"_index":1486,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["18/18",{"_index":3705,"title":{},"body":{"coverage.html":{}}}],["18rem",{"_index":2423,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["19",{"_index":3930,"title":{},"body":{"overview.html":{}}}],["19.5rem",{"_index":1467,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["1].color",{"_index":738,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["1em",{"_index":1549,"title":{},"body":{"components/DropdownComponent.html":{}}}],["1px",{"_index":1570,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["1rem",{"_index":650,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["1rem/1.25rem",{"_index":1965,"title":{},"body":{"components/HeaderComponent.html":{}}}],["1s",{"_index":1960,"title":{},"body":{"components/HeaderComponent.html":{}}}],["2",{"_index":343,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"changelog.html":{}}}],["2.0.0",{"_index":3402,"title":{},"body":{"changelog.html":{}}}],["2.0.5",{"_index":3775,"title":{},"body":{"dependencies.html":{}}}],["2.0625rem",{"_index":3173,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["2.1.0",{"_index":3375,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.2",{"_index":341,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["2.2.0",{"_index":3368,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.3.0",{"_index":3364,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":3358,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":3348,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":3334,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.5rem",{"_index":1455,"title":{},"body":{"components/DonorCardComponent.html":{},"components/OntologySearchComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["2.6.7",{"_index":3799,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":3767,"title":{},"body":{"dependencies.html":{}}}],["2.8125rem",{"_index":3091,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["2/10",{"_index":3714,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":3709,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":3675,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1916,"title":{},"body":{"classes/FlatNode.html":{},"coverage.html":{}}}],["2019",{"_index":3587,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":3518,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":3319,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":3244,"title":{},"body":{"changelog.html":{}}}],["20em",{"_index":1754,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["20rem",{"_index":2624,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["21",{"_index":3419,"title":{},"body":{"changelog.html":{}}}],["21.5rem",{"_index":2827,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["22",{"_index":3578,"title":{},"body":{"changelog.html":{}}}],["229",{"_index":2745,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["23.75rem",{"_index":2424,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["24",{"_index":3628,"title":{},"body":{"changelog.html":{}}}],["24px.svg",{"_index":1336,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["25",{"_index":664,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{}}}],["255",{"_index":710,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["25px",{"_index":2853,"title":{},"body":{"components/SpatialSearchUiComponent.html":{}}}],["25rem",{"_index":1954,"title":{},"body":{"components/HeaderComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["26",{"_index":3443,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["26/26",{"_index":3711,"title":{},"body":{"coverage.html":{}}}],["26th",{"_index":3472,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":3315,"title":{},"body":{"changelog.html":{}}}],["275s",{"_index":1560,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["2979ff",{"_index":697,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["2px",{"_index":1460,"title":{},"body":{"components/DonorCardComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["2rem",{"_index":1431,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["3",{"_index":594,"title":{},"body":{"components/CheckboxComponent.html":{},"changelog.html":{}}}],["3.0.0",{"_index":3313,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.0.12",{"_index":3738,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":3277,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":3270,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":3261,"title":{},"body":{"changelog.html":{}}}],["3.3.0",{"_index":3243,"title":{},"body":{"changelog.html":{}}}],["3.5.5",{"_index":3744,"title":{},"body":{"dependencies.html":{}}}],["3.5.7",{"_index":3746,"title":{},"body":{"dependencies.html":{}}}],["3.5rem",{"_index":3203,"title":{},"body":{"components/ViewerComponent.html":{}}}],["3.6",{"_index":3861,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":3807,"title":{},"body":{"dependencies.html":{}}}],["3.7.1",{"_index":3749,"title":{},"body":{"dependencies.html":{}}}],["3.7.3",{"_index":3751,"title":{},"body":{"dependencies.html":{}}}],["3.75rem",{"_index":3090,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["3/3",{"_index":3708,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":3685,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":3659,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2743,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["30.5rem",{"_index":2826,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["300",{"_index":2622,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["3000",{"_index":295,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["31",{"_index":3555,"title":{},"body":{"changelog.html":{}}}],["32/37",{"_index":3694,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":662,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{},"coverage.html":{}}}],["35rem",{"_index":1893,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["36/39",{"_index":3674,"title":{},"body":{"coverage.html":{}}}],["3d",{"_index":2227,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["3rem",{"_index":1427,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["3s",{"_index":1562,"title":{},"body":{"components/DropdownComponent.html":{}}}],["4",{"_index":3053,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["4.0",{"_index":3840,"title":{},"body":{"index.html":{}}}],["4.0.2",{"_index":3748,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":3773,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":3791,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":3763,"title":{},"body":{"dependencies.html":{}}}],["4.375rem",{"_index":1756,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["4.6.0",{"_index":3784,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":3668,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1964,"title":{},"body":{"components/HeaderComponent.html":{}}}],["42/44",{"_index":3706,"title":{},"body":{"coverage.html":{}}}],["46",{"_index":3654,"title":{},"body":{"coverage.html":{}}}],["4em",{"_index":1889,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["4px",{"_index":1463,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["4rem",{"_index":1952,"title":{},"body":{"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["5",{"_index":1482,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["5.0.0",{"_index":3785,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":3790,"title":{},"body":{"dependencies.html":{}}}],["5.5rem",{"_index":974,"title":{},"body":{"components/ContentComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["5/5",{"_index":3678,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":3701,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1434,"title":{},"body":{"components/DonorCardComponent.html":{},"components/HeaderComponent.html":{},"coverage.html":{}}}],["500",{"_index":1959,"title":{},"body":{"components/HeaderComponent.html":{}}}],["5em",{"_index":1577,"title":{},"body":{"components/DropdownComponent.html":{}}}],["5rem",{"_index":1843,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["5s",{"_index":977,"title":{},"body":{"components/ContentComponent.html":{}}}],["6",{"_index":3929,"title":{},"body":{"overview.html":{}}}],["6.0.1",{"_index":3788,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":3801,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":3747,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":3810,"title":{},"body":{"dependencies.html":{}}}],["6.6.7",{"_index":3808,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":3680,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":3679,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":3658,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":3684,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":1453,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["66",{"_index":3699,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":1459,"title":{},"body":{"components/DonorCardComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["6s",{"_index":1841,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["7.75rem",{"_index":2620,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["7/7",{"_index":3707,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":3681,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":3666,"title":{},"body":{"coverage.html":{}}}],["7323e2",{"_index":701,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["75",{"_index":3657,"title":{},"body":{"coverage.html":{}}}],["75rem",{"_index":1757,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["76",{"_index":3691,"title":{},"body":{"coverage.html":{}}}],["78vw",{"_index":2852,"title":{},"body":{"components/SpatialSearchUiComponent.html":{}}}],["8",{"_index":3423,"title":{},"body":{"changelog.html":{}}}],["8.25rem",{"_index":1958,"title":{},"body":{"components/HeaderComponent.html":{}}}],["8.3.2",{"_index":3816,"title":{},"body":{"dependencies.html":{}}}],["8.5.12",{"_index":3742,"title":{},"body":{"dependencies.html":{}}}],["8.5.7",{"_index":3731,"title":{},"body":{"dependencies.html":{}}}],["8.7.8",{"_index":3734,"title":{},"body":{"dependencies.html":{}}}],["8/11",{"_index":3667,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":3702,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1479,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["82b1ff",{"_index":703,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["83",{"_index":1073,"title":{},"body":{"interfaces/DataStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["85",{"_index":1474,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["86",{"_index":3687,"title":{},"body":{"coverage.html":{}}}],["9.5rem",{"_index":1569,"title":{},"body":{"components/DropdownComponent.html":{}}}],["9.75px",{"_index":2640,"title":{},"body":{"components/RunSpatialSearchComponent.html":{}}}],["9.85rem",{"_index":1544,"title":{},"body":{"components/DropdownComponent.html":{}}}],["9/9",{"_index":3710,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":1842,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["92",{"_index":3673,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":3697,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":2625,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["95vh",{"_index":2851,"title":{},"body":{"components/SpatialSearchUiComponent.html":{}}}],["99",{"_index":2930,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["9th",{"_index":3452,"title":{},"body":{"changelog.html":{}}}],["_aggregatedataquerystatus",{"_index":1121,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_blank",{"_index":392,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["_celltypetermoccurencesdataquerystatus",{"_index":1125,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_config",{"_index":3220,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["_createcontainer",{"_index":411,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["_error",{"_index":2018,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["_expanded",{"_index":2108,"title":{},"body":{"classes/InitializationState.html":{}}}],["_index",{"_index":3048,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["_measuredmargin",{"_index":2138,"title":{},"body":{"classes/InitializationState.html":{}}}],["_measuredwidth",{"_index":2132,"title":{},"body":{"classes/InitializationState.html":{}}}],["_msg",{"_index":801,"title":{},"body":{"components/ContainerComponent.html":{}}}],["_ontologytermoccurencesdataquerystatus",{"_index":1123,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_opened",{"_index":2104,"title":{},"body":{"classes/InitializationState.html":{}}}],["_position",{"_index":2100,"title":{},"body":{"classes/InitializationState.html":{}}}],["_providerfilterquerystatus",{"_index":1131,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_scenedataquerystatus",{"_index":1127,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_technologyfilterquerystatus",{"_index":1129,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["_tissueblockdataquerystatus",{"_index":1119,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["a.color.color",{"_index":753,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["ability",{"_index":3383,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":3624,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["absolute",{"_index":1470,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["acc",{"_index":748,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["acc[item.key",{"_index":746,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["accent",{"_index":641,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{}}}],["acceptable",{"_index":215,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["acceptableviewerdomains",{"_index":221,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["accepting",{"_index":2188,"title":{},"body":{"classes/InitializationState.html":{}}}],["accessors",{"_index":786,"title":{},"body":{"components/ContainerComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["according",{"_index":299,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["accordingly",{"_index":1869,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["accurate",{"_index":3440,"title":{},"body":{"changelog.html":{}}}],["acf32b",{"_index":702,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["action",{"_index":2856,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["action(setorgan",{"_index":2870,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["action(setsex",{"_index":2861,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["actionasfn",{"_index":2789,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["actionasfn(setorgan",{"_index":2784,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["actionasfn(setsex",{"_index":2786,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["actionasfn(type",{"_index":3826,"title":{},"body":{"miscellaneous/functions.html":{}}}],["actions",{"_index":3507,"title":{},"body":{"changelog.html":{}}}],["activate",{"_index":232,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["active",{"_index":2673,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["active/showing",{"_index":2925,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["activeorgans",{"_index":2729,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["activeorgans.has(o.representation_of)).map(o",{"_index":2734,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["activeorgans.has(tag",{"_index":2738,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["actual_component",{"_index":570,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["add",{"_index":382,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/ThemingService.html":{}}}],["addclass",{"_index":3023,"title":{},"body":{"injectables/ThemingService.html":{}}}],["added",{"_index":3247,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":3625,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":3548,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":2987,"title":{},"body":{"injectables/ThemingService.html":{},"changelog.html":{}}}],["addsvgicon",{"_index":2021,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["adjusting",{"_index":3545,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":3466,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":3405,"title":{},"body":{"changelog.html":{}}}],["afterviewinit",{"_index":769,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["again",{"_index":3525,"title":{},"body":{"changelog.html":{}}}],["against",{"_index":2177,"title":{},"body":{"classes/InitializationState.html":{}}}],["age",{"_index":1690,"title":{},"body":{"components/DualSliderComponent.html":{},"changelog.html":{}}}],["agerange",{"_index":1069,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["aggregate",{"_index":1142,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["aggregatedata",{"_index":1143,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/ResultsBrowserComponent.html":{}}}],["aggregatedata(filter",{"_index":1230,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["aggregatedataquerystatus",{"_index":1120,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["aggregateresult",{"_index":1048,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/ResultsBrowserComponent.html":{}}}],["ala",{"_index":3362,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":3932,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1428,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["all_possible_organs",{"_index":2686,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["allcompleted",{"_index":3676,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["allcompleted(states",{"_index":1089,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["allowed",{"_index":3204,"title":{},"body":{"components/ViewerComponent.html":{}}}],["allowing",{"_index":2576,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["allows",{"_index":1378,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"changelog.html":{}}}],["allowtouchmove",{"_index":3051,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["along",{"_index":2521,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["alongside",{"_index":2927,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["alpha",{"_index":3618,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":3599,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":3595,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":3586,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":822,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ThemingService.html":{}}}],["alt",{"_index":3844,"title":{},"body":{"index.html":{}}}],["always",{"_index":850,"title":{},"body":{"components/ContainerComponent.html":{},"components/HeaderComponent.html":{}}}],["analytics",{"_index":591,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{},"changelog.html":{},"dependencies.html":{}}}],["analyticsmodule",{"_index":1014,"title":{},"body":{"modules/CoreModule.html":{}}}],["analyticsmodule.forroot",{"_index":1026,"title":{},"body":{"modules/CoreModule.html":{}}}],["anatomical",{"_index":360,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["anatomicalstructuresettings",{"_index":2690,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["and/or",{"_index":3895,"title":{},"body":{"license.html":{}}}],["angular",{"_index":175,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular's",{"_index":1653,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["angular/animations",{"_index":941,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":3720,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/coercion",{"_index":2058,"title":{},"body":{"classes/InitializationState.html":{}}}],["angular/cdk/overlay",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppRootOverlayContainer.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"injectables/ThemingService.html":{}}}],["angular/cdk/portal",{"_index":1692,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{}}}],["angular/cdk/scrolling",{"_index":2632,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["angular/common",{"_index":672,"title":{},"body":{"modules/CheckboxModule.html":{},"modules/DonorCardModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"modules/SpatialSearchUiModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1011,"title":{},"body":{"modules/CoreModule.html":{}}}],["angular/compiler",{"_index":3721,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"components/SpatialSearchUiComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"modules/SpatialSearchUiModule.html":{},"injectables/SpatialSearchUiState.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":2391,"title":{},"body":{"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"modules/SpatialSearchConfigModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":3722,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":2392,"title":{},"body":{"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{}}}],["angular/material/button",{"_index":1852,"title":{},"body":{"modules/FiltersContentModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/ViewerModule.html":{}}}],["angular/material/checkbox",{"_index":627,"title":{},"body":{"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"modules/DonorCardModule.html":{}}}],["angular/material/dialog",{"_index":1814,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"modules/SpatialSearchUiBehaviorModule.html":{}}}],["angular/material/form",{"_index":1584,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/OntologySearchModule.html":{}}}],["angular/material/icon",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/ViewerModule.html":{}}}],["angular/material/input",{"_index":2434,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["angular/material/progress",{"_index":2937,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"modules/ViewerModule.html":{}}}],["angular/material/radio",{"_index":2837,"title":{},"body":{"modules/SpatialSearchConfigModule.html":{}}}],["angular/material/select",{"_index":1586,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/SpatialSearchConfigModule.html":{}}}],["angular/material/snack",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{}}}],["angular/material/toolbar",{"_index":1975,"title":{},"body":{"modules/HeaderModule.html":{}}}],["angular/material/tooltip",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["angular/material/tree",{"_index":2546,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["angular/platform",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{},"dependencies.html":{}}}],["angular/router",{"_index":3725,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":3726,"title":{},"body":{"dependencies.html":{}}}],["animate",{"_index":937,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["animate('.5s",{"_index":2085,"title":{},"body":{"classes/InitializationState.html":{}}}],["animate('1s",{"_index":947,"title":{},"body":{"components/ContentComponent.html":{}}}],["animate(0",{"_index":2084,"title":{},"body":{"classes/InitializationState.html":{}}}],["animation",{"_index":1558,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["animations",{"_index":895,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["animationsenabled",{"_index":898,"title":{},"body":{"components/ContentComponent.html":{}}}],["api",{"_index":3253,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["api.hubmapconsortium.org",{"_index":3854,"title":{},"body":{"index.html":{}}}],["apiendpointdatasourceservice",{"_index":1349,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["app",{"_index":88,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"components/OntologySelectionComponent.html":{},"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["app.component",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":184,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.component.scss",{"_index":186,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app/core/services/theming/theming.service",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["app_bootstrap_listener",{"_index":2972,"title":{},"body":{"modules/ThemingModule.html":{}}}],["appcomponent",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appear",{"_index":3329,"title":{},"body":{"changelog.html":{}}}],["appearance",{"_index":2420,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["appelement",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["appendtoroot",{"_index":412,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["application",{"_index":3457,"title":{},"body":{"changelog.html":{}}}],["application/javascript",{"_index":3236,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["applied",{"_index":1799,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["apply",{"_index":1805,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["applybuttonclick",{"_index":1780,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["applyfilters",{"_index":1787,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["applyfilters(filters",{"_index":1879,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["applythemeclass",{"_index":2979,"title":{},"body":{"injectables/ThemingService.html":{}}}],["applythemeclass(cls",{"_index":2985,"title":{},"body":{"injectables/ThemingService.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appname",{"_index":1029,"title":{},"body":{"modules/CoreModule.html":{}}}],["appoptions",{"_index":113,"title":{"interfaces/AppOptions.html":{}},"body":{"interfaces/AppOptions.html":{},"coverage.html":{}}}],["approotoverlaycontainer",{"_index":36,"title":{"injectables/AppRootOverlayContainer.html":{}},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"coverage.html":{}}}],["appropriate",{"_index":3297,"title":{},"body":{"changelog.html":{}}}],["appwebcomponent",{"_index":9,"title":{"components/AppWebComponent.html":{}},"body":{"modules/AppModule.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["april",{"_index":3451,"title":{},"body":{"changelog.html":{}}}],["arg",{"_index":2009,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["args",{"_index":2013,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["args.filter(value",{"_index":2028,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["argument",{"_index":2026,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["arguments",{"_index":1629,"title":{},"body":{"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["arising",{"_index":3924,"title":{},"body":{"license.html":{}}}],["array",{"_index":373,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/TissueSectionVisComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["array.from(searchresults.values",{"_index":2493,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["array.isarray(val",{"_index":488,"title":{},"body":{"components/AppWebComponent.html":{}}}],["arrow",{"_index":1575,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["arrow_left",{"_index":3165,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["arrow_right",{"_index":3164,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["asct+b",{"_index":3320,"title":{},"body":{"changelog.html":{}}}],["asking",{"_index":600,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["assays",{"_index":1834,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["assets/icons/expand_less",{"_index":1343,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/expand_more",{"_index":1341,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/filter.svg",{"_index":1344,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/opacity",{"_index":1335,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/organs/ico",{"_index":1271,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assets/icons/visibility",{"_index":1338,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["assigncolor",{"_index":754,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assigncolor(@payload('key",{"_index":731,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["assigncolor(key",{"_index":757,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment",{"_index":719,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["assignment.state",{"_index":2231,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["assignment.state.ts",{"_index":677,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["assignment.state.ts:102",{"_index":762,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:57",{"_index":765,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:59",{"_index":766,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:60",{"_index":763,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:61",{"_index":764,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:63",{"_index":760,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment.state.ts:69",{"_index":759,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["assignment/color",{"_index":676,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["assignment/selection",{"_index":3430,"title":{},"body":{"changelog.html":{}}}],["assignments",{"_index":2221,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["associated",{"_index":2264,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{},"license.html":{}}}],["async",{"_index":2044,"title":{},"body":{"classes/InitializationState.html":{}}}],["at(nodes",{"_index":2500,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["atscrollbottom",{"_index":2558,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["attach",{"_index":3154,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["attached",{"_index":408,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["attempts",{"_index":3351,"title":{},"body":{"changelog.html":{}}}],["authentication",{"_index":1957,"title":{},"body":{"components/HeaderComponent.html":{}}}],["authors",{"_index":3916,"title":{},"body":{"license.html":{}}}],["auto",{"_index":975,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["autocomplete",{"_index":2386,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["autocompleteopen",{"_index":2343,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["automatic",{"_index":3535,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":3493,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":2670,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"modules.html":{}}}],["avoid",{"_index":3393,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":2050,"title":{},"body":{"classes/InitializationState.html":{}}}],["awaited",{"_index":2040,"title":{},"body":{"classes/InitializationState.html":{}}}],["award",{"_index":3872,"title":{},"body":{"index.html":{}}}],["axis",{"_index":3138,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["b92dff",{"_index":699,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["backend",{"_index":3338,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":1379,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{},"index.html":{}}}],["backing",{"_index":2002,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["bar",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{}}}],["base",{"_index":3603,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":372,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["basepath",{"_index":1031,"title":{},"body":{"modules/CoreModule.html":{}}}],["basewebcomponent",{"_index":448,"title":{},"body":{"components/AppWebComponent.html":{}}}],["basic",{"_index":3404,"title":{},"body":{"changelog.html":{}}}],["bbox",{"_index":2126,"title":{},"body":{"classes/InitializationState.html":{}}}],["bbox.left",{"_index":2129,"title":{},"body":{"classes/InitializationState.html":{}}}],["bbox.right",{"_index":2128,"title":{},"body":{"classes/InitializationState.html":{}}}],["before",{"_index":1259,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"classes/InitializationState.html":{},"changelog.html":{}}}],["behavior",{"_index":2764,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{}}}],["behavior'},{'name",{"_index":549,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["behavior.component",{"_index":1818,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchUiBehaviorModule.html":{}}}],["behavior.component.html",{"_index":2766,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{}}}],["behavior.component.scss",{"_index":2765,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts",{"_index":2763,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"coverage.html":{}}}],["behavior.component.ts:12",{"_index":2838,"title":{},"body":{"components/SpatialSearchUiBehaviorComponent.html":{}}}],["behavior.component.ts:18",{"_index":2839,"title":{},"body":{"components/SpatialSearchUiBehaviorComponent.html":{}}}],["behavior.component.ts:24",{"_index":2783,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:27",{"_index":2779,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:30",{"_index":2781,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:33",{"_index":2787,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:36",{"_index":2774,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:43",{"_index":2776,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.component.ts:48",{"_index":2777,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["behavior.module.ts",{"_index":2807,"title":{},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchUiBehaviorModule.html":{}}}],["behavior/spatial",{"_index":1817,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"coverage.html":{}}}],["being",{"_index":2953,"title":{},"body":{"modules/StoreModule.html":{},"changelog.html":{}}}],["beta",{"_index":3318,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":3376,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":347,"title":{},"body":{"interfaces/AppOptions.html":{},"components/FiltersContentComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigComponent.html":{},"changelog.html":{}}}],["bind",{"_index":1046,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"dependencies.html":{}}}],["binds",{"_index":2998,"title":{},"body":{"injectables/ThemingService.html":{}}}],["bladder",{"_index":1270,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bladder.svg",{"_index":1272,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["blob",{"_index":3234,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["block",{"_index":428,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["blocks",{"_index":3281,"title":{},"body":{"changelog.html":{}}}],["blood",{"_index":1273,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["blood.svg",{"_index":1274,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["bmi",{"_index":3345,"title":{},"body":{"changelog.html":{}}}],["bmirange",{"_index":1071,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["board",{"_index":3597,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":201,"title":{},"body":{"interfaces/AppOptions.html":{},"components/FiltersPopoverComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"dependencies.html":{}}}],["bodyui",{"_index":192,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["bodyuicomponent",{"_index":150,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["bodyuimodule",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["bold",{"_index":655,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["bone",{"_index":1275,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["boolean",{"_index":125,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/SpinnerOverlayComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["booleaninput",{"_index":2056,"title":{},"body":{"classes/InitializationState.html":{}}}],["bootstrap",{"_index":2995,"title":{},"body":{"injectables/ThemingService.html":{}}}],["border",{"_index":1432,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["both",{"_index":1068,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["bottom",{"_index":651,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["bound",{"_index":1673,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["box",{"_index":1457,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["brain",{"_index":1278,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["brain.svg",{"_index":1279,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["branch",{"_index":177,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["breaking",{"_index":3413,"title":{},"body":{"changelog.html":{}}}],["breaks",{"_index":2240,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["bringing",{"_index":3424,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":3927,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"modules/DrawerModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ResultsBrowserComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browser'},{'name",{"_index":542,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["browser.component",{"_index":2633,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["browser.component.html",{"_index":2557,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.scss",{"_index":2556,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts",{"_index":2548,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"coverage.html":{}}}],["browser.component.ts:102",{"_index":2597,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:111",{"_index":2586,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:115",{"_index":2594,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:24",{"_index":2574,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:29",{"_index":2571,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:34",{"_index":2575,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:36",{"_index":2573,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:38",{"_index":2572,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:44",{"_index":2579,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:49",{"_index":2584,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:54",{"_index":2582,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:56",{"_index":2577,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:58",{"_index":2578,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:64",{"_index":2570,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:79",{"_index":2591,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.component.ts:93",{"_index":2588,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["browser.module",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["browser.module.ts",{"_index":2630,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["browser/animations",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browser/donor",{"_index":1360,"title":{},"body":{"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"coverage.html":{}}}],["browser/results",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"coverage.html":{}}}],["browser/tissue",{"_index":3110,"title":{},"body":{"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"coverage.html":{}}}],["browseranimationsmodule",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browserify",{"_index":3809,"title":{},"body":{"dependencies.html":{}}}],["browsermodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{}}}],["browsing",{"_index":3645,"title":{},"body":{"changelog.html":{}}}],["bubble_chart",{"_index":1419,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["bug",{"_index":3259,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":3837,"title":{},"body":{"index.html":{}}}],["builds",{"_index":3312,"title":{},"body":{"changelog.html":{}}}],["builtin_parsers",{"_index":479,"title":{},"body":{"components/AppWebComponent.html":{}}}],["builtin_parsers.boolean",{"_index":506,"title":{},"body":{"components/AppWebComponent.html":{}}}],["builtin_parsers.json(value",{"_index":491,"title":{},"body":{"components/AppWebComponent.html":{}}}],["button",{"_index":998,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":567,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["button.component",{"_index":1512,"title":{},"body":{"modules/DrawerModule.html":{}}}],["button.component.html",{"_index":3147,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.scss",{"_index":3146,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts",{"_index":3145,"title":{},"body":{"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:19",{"_index":3152,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:22",{"_index":3153,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:27",{"_index":3163,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:38",{"_index":3160,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:40",{"_index":3159,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:42",{"_index":3150,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:65",{"_index":3156,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:75",{"_index":3157,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:85",{"_index":3155,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button.component.ts:97",{"_index":3158,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["button/toggle",{"_index":1511,"title":{},"body":{"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["buttonclick",{"_index":2636,"title":{},"body":{"components/RunSpatialSearchComponent.html":{}}}],["buttonclicked",{"_index":2770,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["c",{"_index":3877,"title":{},"body":{"license.html":{}}}],["c.color",{"_index":742,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["cache",{"_index":3754,"title":{},"body":{"dependencies.html":{}}}],["cacheable",{"_index":3812,"title":{},"body":{"dependencies.html":{}}}],["cached",{"_index":2130,"title":{},"body":{"classes/InitializationState.html":{}}}],["calc",{"_index":3176,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["calc(100",{"_index":973,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["calc(100vh",{"_index":2623,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["calc(50",{"_index":2089,"title":{},"body":{"classes/InitializationState.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["calculated",{"_index":2122,"title":{},"body":{"classes/InitializationState.html":{}}}],["call",{"_index":320,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["callable",{"_index":3831,"title":{},"body":{"miscellaneous/functions.html":{}}}],["callables",{"_index":3828,"title":{},"body":{"miscellaneous/functions.html":{}}}],["callback",{"_index":2376,"title":{},"body":{"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["called",{"_index":1092,"title":{},"body":{"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["cancelregistration",{"_index":3384,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":3580,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":3759,"title":{},"body":{"dependencies.html":{}}}],["captures",{"_index":350,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["card",{"_index":1363,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["card'},{'name",{"_index":523,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["card.component",{"_index":1501,"title":{},"body":{"modules/DonorCardModule.html":{}}}],["card.component.html",{"_index":1367,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.scss",{"_index":1366,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts",{"_index":1362,"title":{},"body":{"components/DonorCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:17",{"_index":1388,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:20",{"_index":1384,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:23",{"_index":1383,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:26",{"_index":1377,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:29",{"_index":1381,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:31",{"_index":1382,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:34",{"_index":1385,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:37",{"_index":1386,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:40",{"_index":1376,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:52",{"_index":1389,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:62",{"_index":1401,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.component.ts:76",{"_index":1393,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["card.module",{"_index":2634,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["card.module.ts",{"_index":1497,"title":{},"body":{"modules/DonorCardModule.html":{}}}],["card/donor",{"_index":1361,"title":{},"body":{"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"modules/ResultsBrowserModule.html":{},"coverage.html":{}}}],["cards",{"_index":3031,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel",{"_index":207,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["carousel'},{'name",{"_index":560,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["carousel.component",{"_index":3107,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["carousel.component.html",{"_index":3033,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.scss",{"_index":3032,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts",{"_index":3028,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["carousel.component.ts:29",{"_index":3042,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:34",{"_index":3040,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:39",{"_index":3041,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:44",{"_index":3074,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:49",{"_index":3077,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:56",{"_index":3081,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:63",{"_index":3058,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:75",{"_index":3072,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.component.ts:89",{"_index":3046,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["carousel.module",{"_index":1500,"title":{},"body":{"modules/DonorCardModule.html":{}}}],["carousel.module.ts",{"_index":3103,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["carousel/thumbnail",{"_index":1499,"title":{},"body":{"modules/DonorCardModule.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":952,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["cases",{"_index":3553,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":2017,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["cause",{"_index":3193,"title":{},"body":{"components/ViewerComponent.html":{}}}],["ccf",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"classes/SpatialSearchUiSelectors.html":{},"components/SpinnerOverlayComponent.html":{},"modules/StoreModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":3511,"title":{},"body":{"changelog.html":{}}}],["ccfapiconfiguration",{"_index":1015,"title":{},"body":{"modules/CoreModule.html":{}}}],["ccfapimodule",{"_index":1016,"title":{},"body":{"modules/CoreModule.html":{}}}],["ccfapimodule.forroot",{"_index":1030,"title":{},"body":{"modules/CoreModule.html":{}}}],["ccfdatabase",{"_index":3947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ccfdatabasedatasourceservice",{"_index":1350,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["ccfdatabaseoptions",{"_index":117,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/WorkerDataSourceService.html":{}}}],["ccfdrawer",{"_index":2077,"title":{},"body":{"classes/InitializationState.html":{}}}],["ccfdrawercontainer",{"_index":772,"title":{},"body":{"components/ContainerComponent.html":{}}}],["cdk",{"_index":1572,"title":{},"body":{"components/DropdownComponent.html":{}}}],["cdkportal",{"_index":1684,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["cdr",{"_index":263,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["cdr.markforcheck",{"_index":280,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["ceil",{"_index":1717,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["cell",{"_index":203,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"changelog.html":{}}}],["celltypeselectionlabel",{"_index":202,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["celltypetermoccurencesdata",{"_index":1151,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypetermoccurencesdata$.pipe(take(1)).subscribe(celltypetermsfulldata",{"_index":1199,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypetermoccurencesdata(filter",{"_index":1236,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypetermoccurencesdataquerystatus",{"_index":1124,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypetermoccurrences",{"_index":1169,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypeterms",{"_index":241,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["celltypetermsfulldata",{"_index":1136,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["celltypetreemodel",{"_index":242,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["center",{"_index":896,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"index.html":{}}}],["certain",{"_index":2874,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["cff",{"_index":976,"title":{},"body":{"components/ContentComponent.html":{}}}],["change",{"_index":793,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySelectionComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{},"index.html":{}}}],["changed",{"_index":868,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["changedetection",{"_index":187,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["changedetectionstrategy",{"_index":128,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":188,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["changedetectorref",{"_index":129,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["changelog",{"_index":3240,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":309,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"classes/InitializationState.html":{},"components/OntologySelectionComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["changes.selection",{"_index":1706,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["changes.valuerange",{"_index":1704,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["channel",{"_index":776,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["channels",{"_index":2296,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["charge",{"_index":178,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ResultsBrowserComponent.html":{},"license.html":{}}}],["checkbox",{"_index":579,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{}}}],["checkbox'},{'name",{"_index":516,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["checkbox.component",{"_index":674,"title":{},"body":{"modules/CheckboxModule.html":{}}}],["checkbox.component.html",{"_index":581,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.component.scss",{"_index":580,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkbox.mat",{"_index":640,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxcomponent",{"_index":515,"title":{"components/CheckboxComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["checkboxes",{"_index":576,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checkboxmodule",{"_index":665,"title":{"modules/CheckboxModule.html":{}},"body":{"modules/CheckboxModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["checked",{"_index":606,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{}}}],["checked.mat",{"_index":1438,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["checkmark",{"_index":642,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["checks",{"_index":925,"title":{},"body":{"components/ContentComponent.html":{}}}],["checkselected",{"_index":1443,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["child",{"_index":1449,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySelectionComponent.html":{},"miscellaneous/typealiases.html":{}}}],["children",{"_index":1928,"title":{},"body":{"classes/FlatNode.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["choices",{"_index":1525,"title":{},"body":{"components/DropdownComponent.html":{}}}],["choose",{"_index":3531,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":3509,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":3919,"title":{},"body":{"license.html":{}}}],["class",{"_index":99,"title":{"classes/FlatNode.html":{},"classes/InitializationState.html":{},"classes/MessageChannel.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"classes/SpatialSearchUiSelectors.html":{}},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"components/SpatialSearchUiComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"modules/SpatialSearchUiModule.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["class.ccf",{"_index":3148,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["class.cff",{"_index":905,"title":{},"body":{"components/ContentComponent.html":{}}}],["class.hidden]=\"hidden",{"_index":1831,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["class=\"filter",{"_index":1829,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["classend",{"_index":2095,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["classes",{"_index":1903,"title":{},"body":{"classes/FlatNode.html":{},"classes/InitializationState.html":{},"classes/MessageChannel.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"classes/SpatialSearchUiSelectors.html":{},"overview.html":{}}}],["classname",{"_index":777,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["clean",{"_index":2304,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{}}}],["cleans",{"_index":809,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["cleanup",{"_index":3317,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":3200,"title":{},"body":{"components/ViewerComponent.html":{}}}],["click",{"_index":1396,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["clicked",{"_index":1387,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["clicking",{"_index":3411,"title":{},"body":{"changelog.html":{}}}],["clicks",{"_index":2664,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["client",{"_index":1018,"title":{},"body":{"modules/CoreModule.html":{},"index.html":{}}}],["clientheight",{"_index":2611,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["clip",{"_index":3096,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["close",{"_index":396,"title":{},"body":{"interfaces/AppOptions.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/ViewerComponent.html":{}}}],["closed",{"_index":2062,"title":{},"body":{"classes/InitializationState.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["closedialog",{"_index":2813,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["closeexpanded",{"_index":2155,"title":{},"body":{"classes/InitializationState.html":{}}}],["closeiframeviewer",{"_index":398,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["closeopendone",{"_index":2162,"title":{},"body":{"classes/InitializationState.html":{}}}],["closes",{"_index":1637,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/InitializationState.html":{}}}],["closesliderpopover",{"_index":1603,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["closesliderpopover(target",{"_index":1643,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["cls",{"_index":2989,"title":{},"body":{"injectables/ThemingService.html":{}}}],["clsname",{"_index":1368,"title":{},"body":{"components/DonorCardComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["cluster_appmodule",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule",{"_index":666,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule_declarations",{"_index":667,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_checkboxmodule_exports",{"_index":668,"title":{},"body":{"modules/CheckboxModule.html":{},"overview.html":{}}}],["cluster_coremodule",{"_index":1003,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_exports",{"_index":1004,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_coremodule_imports",{"_index":1005,"title":{},"body":{"modules/CoreModule.html":{},"overview.html":{}}}],["cluster_donorcardmodule",{"_index":1491,"title":{},"body":{"modules/DonorCardModule.html":{},"overview.html":{}}}],["cluster_donorcardmodule_declarations",{"_index":1493,"title":{},"body":{"modules/DonorCardModule.html":{},"overview.html":{}}}],["cluster_donorcardmodule_exports",{"_index":1492,"title":{},"body":{"modules/DonorCardModule.html":{},"overview.html":{}}}],["cluster_donorcardmodule_imports",{"_index":1494,"title":{},"body":{"modules/DonorCardModule.html":{},"overview.html":{}}}],["cluster_drawermodule",{"_index":1504,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_declarations",{"_index":1506,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_drawermodule_exports",{"_index":1505,"title":{},"body":{"modules/DrawerModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule",{"_index":1579,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_declarations",{"_index":1581,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dropdownmodule_exports",{"_index":1580,"title":{},"body":{"modules/DropdownModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule",{"_index":1764,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule_declarations",{"_index":1766,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_dualslidermodule_exports",{"_index":1765,"title":{},"body":{"modules/DualSliderModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule",{"_index":1845,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_declarations",{"_index":1848,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_exports",{"_index":1846,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterscontentmodule_imports",{"_index":1847,"title":{},"body":{"modules/FiltersContentModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule",{"_index":1896,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_declarations",{"_index":1899,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_exports",{"_index":1898,"title":{},"body":{"modules/FiltersPopoverModule.html":{},"overview.html":{}}}],["cluster_filterspopovermodule_imports",{"_index":1897,"title":{},"body":{"modules/FiltersPopoverModule.html":{}}}],["cluster_headermodule",{"_index":1970,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_declarations",{"_index":1971,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_headermodule_exports",{"_index":1972,"title":{},"body":{"modules/HeaderModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule",{"_index":2325,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule_exports",{"_index":2326,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologyexplorationmodule_imports",{"_index":2327,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule",{"_index":2426,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule_declarations",{"_index":2428,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologysearchmodule_exports",{"_index":2427,"title":{},"body":{"modules/OntologySearchModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule",{"_index":2534,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_declarations",{"_index":2535,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_exports",{"_index":2536,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologyselectionmodule_imports",{"_index":2537,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["cluster_ontologyselectionmodule_ontologyselectioncomponent_providers",{"_index":2538,"title":{},"body":{"modules/OntologySelectionModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule",{"_index":2541,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule_declarations",{"_index":2542,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_ontologytreemodule_exports",{"_index":2543,"title":{},"body":{"modules/OntologyTreeModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule",{"_index":2626,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_declarations",{"_index":2629,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_exports",{"_index":2627,"title":{},"body":{"modules/ResultsBrowserModule.html":{},"overview.html":{}}}],["cluster_resultsbrowsermodule_imports",{"_index":2628,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["cluster_runspatialsearchmodule",{"_index":2641,"title":{},"body":{"modules/RunSpatialSearchModule.html":{},"overview.html":{}}}],["cluster_runspatialsearchmodule_declarations",{"_index":2642,"title":{},"body":{"modules/RunSpatialSearchModule.html":{},"overview.html":{}}}],["cluster_runspatialsearchmodule_exports",{"_index":2643,"title":{},"body":{"modules/RunSpatialSearchModule.html":{},"overview.html":{}}}],["cluster_spatialsearchconfigbehaviormodule",{"_index":2802,"title":{},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{},"overview.html":{}}}],["cluster_spatialsearchconfigbehaviormodule_declarations",{"_index":2803,"title":{},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{},"overview.html":{}}}],["cluster_spatialsearchconfigbehaviormodule_exports",{"_index":2805,"title":{},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{},"overview.html":{}}}],["cluster_spatialsearchconfigbehaviormodule_imports",{"_index":2804,"title":{},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{},"overview.html":{}}}],["cluster_spatialsearchconfigmodule",{"_index":2832,"title":{},"body":{"modules/SpatialSearchConfigModule.html":{},"overview.html":{}}}],["cluster_spatialsearchconfigmodule_declarations",{"_index":2834,"title":{},"body":{"modules/SpatialSearchConfigModule.html":{},"overview.html":{}}}],["cluster_spatialsearchconfigmodule_exports",{"_index":2833,"title":{},"body":{"modules/SpatialSearchConfigModule.html":{},"overview.html":{}}}],["cluster_spatialsearchuibehaviormodule",{"_index":2841,"title":{},"body":{"modules/SpatialSearchUiBehaviorModule.html":{},"overview.html":{}}}],["cluster_spatialsearchuibehaviormodule_declarations",{"_index":2842,"title":{},"body":{"modules/SpatialSearchUiBehaviorModule.html":{},"overview.html":{}}}],["cluster_spatialsearchuibehaviormodule_exports",{"_index":2843,"title":{},"body":{"modules/SpatialSearchUiBehaviorModule.html":{},"overview.html":{}}}],["cluster_spatialsearchuibehaviormodule_imports",{"_index":2844,"title":{},"body":{"modules/SpatialSearchUiBehaviorModule.html":{},"overview.html":{}}}],["cluster_spatialsearchuimodule",{"_index":2883,"title":{},"body":{"modules/SpatialSearchUiModule.html":{},"overview.html":{}}}],["cluster_spatialsearchuimodule_declarations",{"_index":2885,"title":{},"body":{"modules/SpatialSearchUiModule.html":{},"overview.html":{}}}],["cluster_spatialsearchuimodule_exports",{"_index":2884,"title":{},"body":{"modules/SpatialSearchUiModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule",{"_index":2932,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule_declarations",{"_index":2933,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_spinneroverlaymodule_exports",{"_index":2934,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"overview.html":{}}}],["cluster_themingmodule",{"_index":2969,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_themingmodule_providers",{"_index":2970,"title":{},"body":{"modules/ThemingModule.html":{},"overview.html":{}}}],["cluster_thumbnailcarouselmodule",{"_index":3100,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{},"overview.html":{}}}],["cluster_thumbnailcarouselmodule_declarations",{"_index":3102,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{},"overview.html":{}}}],["cluster_thumbnailcarouselmodule_exports",{"_index":3101,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{},"overview.html":{}}}],["cluster_tissuesectionvismodule",{"_index":3139,"title":{},"body":{"modules/TissueSectionVisModule.html":{},"overview.html":{}}}],["cluster_tissuesectionvismodule_declarations",{"_index":3140,"title":{},"body":{"modules/TissueSectionVisModule.html":{},"overview.html":{}}}],["cluster_tissuesectionvismodule_exports",{"_index":3141,"title":{},"body":{"modules/TissueSectionVisModule.html":{},"overview.html":{}}}],["cluster_viewermodule",{"_index":3205,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["cluster_viewermodule_declarations",{"_index":3206,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["cluster_viewermodule_exports",{"_index":3207,"title":{},"body":{"modules/ViewerModule.html":{},"overview.html":{}}}],["coalescing",{"_index":2880,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{}}}],["code",{"_index":3308,"title":{},"body":{"changelog.html":{}}}],["codebase",{"_index":3521,"title":{},"body":{"changelog.html":{}}}],["codeblob",{"_index":3233,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["codex",{"_index":3565,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":3612,"title":{},"body":{"changelog.html":{}}}],["coercebooleanproperty",{"_index":2057,"title":{},"body":{"classes/InitializationState.html":{}}}],["collaboration",{"_index":3519,"title":{},"body":{"changelog.html":{}}}],["collapse",{"_index":2158,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["collapsed",{"_index":2067,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["collapses",{"_index":2154,"title":{},"body":{"classes/InitializationState.html":{}}}],["collisions",{"_index":3537,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":303,"title":{"interfaces/Color.html":{}},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/DonorCardComponent.html":{},"components/HeaderComponent.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"components/TissueSectionVisComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["color.color",{"_index":743,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["color.rank",{"_index":2255,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["color].concat(colorsavailable",{"_index":751,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignments",{"_index":715,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["colorassignments[key",{"_index":730,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentslist",{"_index":717,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentslist.filter(a",{"_index":752,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentslist.reduce>>((acc",{"_index":745,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentslist.slice(0",{"_index":739,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentslist[colorassignmentslist.length",{"_index":737,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorassignmentstate",{"_index":723,"title":{"injectables/ColorAssignmentState.html":{}},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["colorassignmentstatemodel",{"_index":712,"title":{"interfaces/ColorAssignmentStateModel.html":{}},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"coverage.html":{}}}],["colorizing",{"_index":3573,"title":{},"body":{"changelog.html":{}}}],["colorpalette",{"_index":713,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colors",{"_index":720,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["colors[node['@id']].rgba",{"_index":2746,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["colors[tissueblock.spatialentityid",{"_index":2253,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["colorsavailable",{"_index":714,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorsavailable.filter(c",{"_index":741,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorsavailable.length",{"_index":735,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["colorsavailable[0",{"_index":736,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["column",{"_index":1746,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["columns",{"_index":583,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["combination",{"_index":3532,"title":{},"body":{"changelog.html":{}}}],["combined",{"_index":1001,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["combinelatest",{"_index":142,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["combinelatest([this.theme",{"_index":276,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["combines",{"_index":1097,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["come",{"_index":3569,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":3562,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":3762,"title":{},"body":{"dependencies.html":{}}}],["comma",{"_index":383,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["common",{"_index":1195,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"index.html":{}}}],["commonmodule",{"_index":671,"title":{},"body":{"modules/CheckboxModule.html":{},"modules/DonorCardModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"modules/SpatialSearchUiModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}}}],["compare",{"_index":1223,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["compatibility",{"_index":2963,"title":{},"body":{"modules/StoreModule.html":{}}}],["completed",{"_index":1085,"title":{},"body":{"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["completion",{"_index":2160,"title":{},"body":{"classes/InitializationState.html":{}}}],["complexity",{"_index":3437,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":3306,"title":{},"body":{"changelog.html":{}}}],["componenet",{"_index":2339,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["component",{"_index":130,"title":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["component's",{"_index":1619,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["component.component",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["component.component.ts",{"_index":447,"title":{},"body":{"components/AppWebComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["component.component.ts:31",{"_index":465,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:33",{"_index":469,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:34",{"_index":470,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:35",{"_index":468,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:36",{"_index":472,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:37",{"_index":471,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:39",{"_index":477,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:40",{"_index":475,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:41",{"_index":476,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:42",{"_index":466,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:43",{"_index":467,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:44",{"_index":474,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:45",{"_index":473,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component.component.ts:47",{"_index":463,"title":{},"body":{"components/AppWebComponent.html":{}}}],["component_template",{"_index":512,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["componentref",{"_index":2992,"title":{},"body":{"injectables/ThemingService.html":{}}}],["components",{"_index":176,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["composes",{"_index":2464,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["computations",{"_index":2439,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["computes",{"_index":1689,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["comunica/query",{"_index":3728,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":3764,"title":{},"body":{"dependencies.html":{}}}],["concat(colorassignmentslist",{"_index":744,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["condition",{"_index":2485,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["conditions",{"_index":3902,"title":{},"body":{"license.html":{}}}],["config",{"_index":548,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["config'},{'name",{"_index":551,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["config.component",{"_index":2797,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{}}}],["config.component.html",{"_index":2812,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.scss",{"_index":2811,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts",{"_index":2810,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["config.component.ts:14",{"_index":2821,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts:16",{"_index":2814,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts:18",{"_index":2815,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts:20",{"_index":2816,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts:22",{"_index":2820,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts:24",{"_index":2819,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts:26",{"_index":2817,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.component.ts:28",{"_index":2818,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["config.isolated",{"_index":2298,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["config.module",{"_index":2809,"title":{},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{}}}],["config.module.ts",{"_index":2835,"title":{},"body":{"modules/SpatialSearchConfigModule.html":{}}}],["config/spatial",{"_index":2796,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["configstore",{"_index":464,"title":{},"body":{"components/AppWebComponent.html":{}}}],["configuration",{"_index":2269,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["configurations",{"_index":3382,"title":{},"body":{"changelog.html":{}}}],["configure",{"_index":2822,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["confirmation",{"_index":3350,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":3389,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":2319,"title":{},"body":{"injectables/MessageService.html":{},"changelog.html":{}}}],["connect(source",{"_index":2307,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connected",{"_index":815,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["connectedposition",{"_index":1691,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["connection",{"_index":3925,"title":{},"body":{"license.html":{}}}],["connects",{"_index":2306,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["consentservice",{"_index":140,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["consider",{"_index":2961,"title":{},"body":{"modules/StoreModule.html":{}}}],["consortium",{"_index":3878,"title":{},"body":{"license.html":{}}}],["const",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{},"modules/StoreModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["constantly",{"_index":3195,"title":{},"body":{"components/ViewerComponent.html":{}}}],["construct",{"_index":3829,"title":{},"body":{"miscellaneous/functions.html":{}}}],["constructor",{"_index":255,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{},"injectables/ThemingService.html":{},"modules/ThumbnailCarouselModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/typealiases.html":{}}}],["constructor(@inject(message_service_config",{"_index":2297,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["constructor(@optional",{"_index":1033,"title":{},"body":{"modules/CoreModule.html":{},"injectables/ThemingService.html":{}}}],["constructor(config",{"_index":2320,"title":{},"body":{"injectables/MessageService.html":{}}}],["constructor(configstore",{"_index":462,"title":{},"body":{"components/AppWebComponent.html":{}}}],["constructor(dataservice",{"_index":2205,"title":{},"body":{"injectables/ListResultsState.html":{},"injectables/SceneState.html":{}}}],["constructor(defaulttheme",{"_index":2983,"title":{},"body":{"injectables/ThemingService.html":{}}}],["constructor(dialogref",{"_index":2771,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{}}}],["constructor(drawer",{"_index":3149,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["constructor(ga",{"_index":587,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["constructor(globalconfig",{"_index":3214,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["constructor(messageservice",{"_index":789,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{}}}],["constructor(ontologysearchservice",{"_index":2512,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["constructor(ontologyservice",{"_index":2352,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["constructor(organid",{"_index":2753,"title":{},"body":{"classes/SetOrgan.html":{}}}],["constructor(original",{"_index":1909,"title":{},"body":{"classes/FlatNode.html":{}}}],["constructor(overlay",{"_index":1616,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["constructor(private",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["constructor(public",{"_index":2395,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["constructor(readonly",{"_index":1932,"title":{},"body":{"classes/FlatNode.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{}}}],["constructor(registry",{"_index":2030,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["constructor(sanitizer",{"_index":3184,"title":{},"body":{"components/ViewerComponent.html":{}}}],["constructor(sex",{"_index":2760,"title":{},"body":{"classes/SetSex.html":{}}}],["constructor(source",{"_index":2312,"title":{},"body":{"classes/MessageChannel.html":{}}}],["constructor(store",{"_index":2913,"title":{},"body":{"injectables/SpatialSearchUiState.html":{}}}],["contain",{"_index":988,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/HeaderComponent.html":{}}}],["container",{"_index":648,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/TissueSectionVisComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["container'},{'name",{"_index":518,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["container.component.html",{"_index":775,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container.component.scss",{"_index":774,"title":{},"body":{"components/ContainerComponent.html":{}}}],["container/container.component",{"_index":1510,"title":{},"body":{"modules/DrawerModule.html":{}}}],["containercomponent",{"_index":517,"title":{"components/ContainerComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["containerpayload",{"_index":991,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["containers",{"_index":867,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"changelog.html":{}}}],["containing",{"_index":874,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ThumbnailCarouselComponent.html":{},"index.html":{}}}],["contains",{"_index":623,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["content",{"_index":787,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{}}}],["content'},{'name",{"_index":520,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["content.component",{"_index":1859,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["content.component.html",{"_index":1777,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.scss",{"_index":897,"title":{},"body":{"components/ContentComponent.html":{},"components/FiltersContentComponent.html":{}}}],["content.component.ts",{"_index":1774,"title":{},"body":{"components/FiltersContentComponent.html":{},"coverage.html":{}}}],["content.component.ts:25",{"_index":1793,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:30",{"_index":1792,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:35",{"_index":1798,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:40",{"_index":1794,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:45",{"_index":1796,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:50",{"_index":1800,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:55",{"_index":1802,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:60",{"_index":1791,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:67",{"_index":1813,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:69",{"_index":1806,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:79",{"_index":1810,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:88",{"_index":1804,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.component.ts:96",{"_index":1807,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["content.module",{"_index":1901,"title":{},"body":{"modules/FiltersPopoverModule.html":{}}}],["content.module.ts",{"_index":1850,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["content/content.component",{"_index":841,"title":{},"body":{"components/ContainerComponent.html":{},"modules/DrawerModule.html":{}}}],["content/filters",{"_index":1773,"title":{},"body":{"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"coverage.html":{}}}],["content1",{"_index":778,"title":{},"body":{"components/ContainerComponent.html":{}}}],["content2",{"_index":779,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren",{"_index":837,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren(contentcomponent",{"_index":818,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentchildren(drawercomponent",{"_index":828,"title":{},"body":{"components/ContainerComponent.html":{}}}],["contentcomponent",{"_index":519,"title":{"components/ContentComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["contentcontainerchanged",{"_index":980,"title":{"interfaces/ContentContainerChanged.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["contents",{"_index":430,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["contentsvisible",{"_index":1595,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["continue",{"_index":2824,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["contract",{"_index":3922,"title":{},"body":{"license.html":{}}}],["control",{"_index":322,"title":{},"body":{"interfaces/AppOptions.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["controls",{"_index":1532,"title":{},"body":{"components/DropdownComponent.html":{}}}],["convention",{"_index":440,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{}}}],["coordinate",{"_index":3241,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["copies",{"_index":3897,"title":{},"body":{"license.html":{}}}],["copy",{"_index":3884,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":3876,"title":{},"body":{"license.html":{}}}],["cord",{"_index":1319,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["cord.svg",{"_index":1320,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["core",{"_index":1034,"title":{},"body":{"modules/CoreModule.html":{}}}],["core/core.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["core/models/list",{"_index":2604,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["core/models/ontology",{"_index":157,"title":{},"body":{"interfaces/AppOptions.html":{},"components/OntologySelectionComponent.html":{}}}],["core/services/app",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{}}}],["core/services/ontology",{"_index":2393,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["core/services/theming/theming.service",{"_index":160,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["core/store/action",{"_index":2790,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["core/store/data/data.state",{"_index":163,"title":{},"body":{"interfaces/AppOptions.html":{},"components/FiltersContentComponent.html":{}}}],["core/store/list",{"_index":165,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["core/store/scene/scene.state",{"_index":169,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["core/store/spatial",{"_index":2792,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["coremodule",{"_index":10,"title":{"modules/CoreModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules.html":{},"overview.html":{}}}],["cors",{"_index":3766,"title":{},"body":{"dependencies.html":{}}}],["counter",{"_index":2276,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ThumbnailCarouselComponent.html":{},"miscellaneous/variables.html":{}}}],["cover",{"_index":3094,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["coverage",{"_index":3593,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["create",{"_index":1618,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/FlatNode.html":{}}}],["create(original",{"_index":1919,"title":{},"body":{"classes/FlatNode.html":{}}}],["createcustomelement",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["createcustomelement(appwebcomponent",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["created",{"_index":1674,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"changelog.html":{}}}],["creates",{"_index":251,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/functions.html":{}}}],["createselectionlabel(ontolgyselection",{"_index":374,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["createworker",{"_index":3212,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["createworker(_config",{"_index":3218,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["creating",{"_index":844,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/functions.html":{}}}],["credits",{"_index":3863,"title":{},"body":{"index.html":{}}}],["criteria",{"_index":1622,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["css",{"_index":3044,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"dependencies.html":{}}}],["ctrlclick",{"_index":2697,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["ctx",{"_index":2917,"title":{},"body":{"injectables/SpatialSearchUiState.html":{}}}],["ctx.dispatch(new",{"_index":2866,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["ctx.getstate",{"_index":2863,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["ctx.patchstate",{"_index":2864,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["cuboid",{"_index":3592,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":3591,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":577,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySelectionComponent.html":{},"miscellaneous/enumerations.html":{}}}],["currently",{"_index":355,"title":{},"body":{"interfaces/AppOptions.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySelectionComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["cursor",{"_index":1436,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["customelements.define('ccf",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["cyberinfrastructure",{"_index":3865,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":3445,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":1475,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["da326f",{"_index":700,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["damages",{"_index":3920,"title":{},"body":{"license.html":{}}}],["dark",{"_index":313,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["dark)').addeventlistener('change",{"_index":310,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["dark)').matches",{"_index":305,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["dark/light",{"_index":3385,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":254,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"modules/StoreModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["data.aggregatedata$.subscribe",{"_index":267,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.celltypetermoccurencesdata$.subscribe",{"_index":269,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.filter$.pipe(pluck('celltypeterms",{"_index":284,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.filter$.pipe(pluck('ontologyterms",{"_index":275,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.filter$.subscribe",{"_index":271,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.ontologytermoccurencesdata$.subscribe",{"_index":268,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.providerfilterdata$.subscribe",{"_index":273,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.scenedata$.subscribe",{"_index":270,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.technologyfilterdata$.subscribe",{"_index":272,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data.tissueblockdata$.subscribe",{"_index":266,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["data/data.state",{"_index":2232,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["dataaction",{"_index":682,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["database",{"_index":136,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"classes/FlatNode.html":{},"interfaces/ListResult.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["databaseready",{"_index":1114,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["databasestatus",{"_index":1049,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["dataquerystate",{"_index":161,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["dataquerystate.completed",{"_index":1087,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["dataquerystate.running",{"_index":237,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{}}}],["dataservice",{"_index":2207,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["datasetresult",{"_index":3039,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["datasets",{"_index":3455,"title":{},"body":{"changelog.html":{}}}],["datasource",{"_index":260,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["datasourcelike",{"_index":1351,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["datasources",{"_index":454,"title":{},"body":{"components/AppWebComponent.html":{}}}],["datasourceservice",{"_index":137,"title":{},"body":{"interfaces/AppOptions.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["datastate",{"_index":162,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datastatemodel",{"_index":1038,"title":{"interfaces/DataStateModel.html":{}},"body":{"interfaces/DataStateModel.html":{},"coverage.html":{}}}],["deal",{"_index":3886,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":3926,"title":{},"body":{"license.html":{}}}],["december",{"_index":3526,"title":{},"body":{"changelog.html":{}}}],["decides",{"_index":619,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["deck.gl",{"_index":711,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["deck.gl/core",{"_index":3730,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/geo",{"_index":3732,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":3735,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":3736,"title":{},"body":{"dependencies.html":{}}}],["declarations",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"modules/SpatialSearchUiModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}}}],["decoration",{"_index":1961,"title":{},"body":{"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["decorator",{"_index":1047,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/StoreModule.html":{},"dependencies.html":{}}}],["decorators",{"_index":758,"title":{},"body":{"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["deep",{"_index":638,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["deeply",{"_index":3340,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":317,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_color_palette",{"_index":695,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_color_palette.concat",{"_index":722,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["default_filter",{"_index":1066,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/FiltersContentComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_icons",{"_index":1268,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_selected_organs",{"_index":2687,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_selected_organs.has(organ.organ",{"_index":2721,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["default_theme",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThemingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaulticondefinition",{"_index":1246,"title":{"interfaces/DefaultIconDefinition.html":{}},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":721,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["defaulttheme",{"_index":2978,"title":{},"body":{"injectables/ThemingService.html":{}}}],["defer",{"_index":1052,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["deferred",{"_index":2041,"title":{},"body":{"classes/InitializationState.html":{}}}],["defined",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{}}}],["definition",{"_index":1250,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["definition.html",{"_index":2007,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["definition.url",{"_index":2006,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["delay",{"_index":1056,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["delay(2000",{"_index":1207,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["delegatedatasourceoptions",{"_index":1345,"title":{"interfaces/DelegateDataSourceOptions.html":{}},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"coverage.html":{}}}],["delegatedatasourceservice",{"_index":1020,"title":{"injectables/DelegateDataSourceService.html":{}},"body":{"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"coverage.html":{}}}],["demo",{"_index":3357,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"modules/SpatialSearchUiModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":3417,"title":{},"body":{"changelog.html":{}}}],["descendants",{"_index":819,"title":{},"body":{"components/ContainerComponent.html":{}}}],["describes",{"_index":597,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["description",{"_index":573,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSearchUiModel.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{}}}],["deselect",{"_index":2593,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["deselected",{"_index":2583,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["deselectlistresult",{"_index":2200,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["deselectlistresult(result",{"_index":2210,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["details",{"_index":3626,"title":{},"body":{"changelog.html":{}}}],["detect",{"_index":1707,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["detected",{"_index":1651,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["detection",{"_index":802,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["detector",{"_index":794,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["determine",{"_index":2602,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{},"components/TissueSectionVisComponent.html":{}}}],["determines",{"_index":1536,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{}}}],["developed",{"_index":3864,"title":{},"body":{"index.html":{}}}],["developmentmode",{"_index":2957,"title":{},"body":{"modules/StoreModule.html":{}}}],["developments",{"_index":3617,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":1779,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["dialogref",{"_index":2775,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{}}}],["diff",{"_index":2614,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["different",{"_index":2189,"title":{},"body":{"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["digits",{"_index":3504,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":3635,"title":{},"body":{"changelog.html":{}}}],["directimport",{"_index":3223,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["direction",{"_index":657,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["directive",{"_index":510,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["directives",{"_index":569,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["directly",{"_index":3563,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":435,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/ToggleButtonComponent.html":{}}}],["disabled",{"_index":1969,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/StoreModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["disables",{"_index":2702,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["dispatch",{"_index":2785,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["display",{"_index":371,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["displayed",{"_index":1526,"title":{},"body":{"components/DropdownComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"changelog.html":{}}}],["displayformatter",{"_index":2347,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["displayformatter(option",{"_index":2361,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["displaying",{"_index":3369,"title":{},"body":{"changelog.html":{}}}],["displaylabel",{"_index":2476,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["displays",{"_index":1364,"title":{},"body":{"components/DonorCardComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["distinct",{"_index":1057,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["distinctuntilchanged",{"_index":694,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["distribute",{"_index":3893,"title":{},"body":{"license.html":{}}}],["dobootstrap",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["doc",{"_index":3601,"title":{},"body":{"changelog.html":{}}}],["docs",{"_index":3258,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1634,"title":{},"body":{"components/DualSliderComponent.html":{},"dependencies.html":{}}}],["document:click",{"_index":1613,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["document:click(target",{"_index":1631,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["document:touchstart",{"_index":1614,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["document:touchstart(target",{"_index":1642,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["documentation",{"_index":3309,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["dom",{"_index":444,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["domains",{"_index":217,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["domsanitizer",{"_index":1984,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{}}}],["don't",{"_index":381,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["done",{"_index":3414,"title":{},"body":{"changelog.html":{}}}],["donor",{"_index":522,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["donor_card",{"_index":1408,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["donorcardcomponent",{"_index":521,"title":{"components/DonorCardComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["donorcardmodule",{"_index":1490,"title":{"modules/DonorCardModule.html":{}},"body":{"modules/DonorCardModule.html":{},"modules/ResultsBrowserModule.html":{},"modules.html":{},"overview.html":{}}}],["donors",{"_index":3456,"title":{},"body":{"changelog.html":{}}}],["doreset",{"_index":733,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["dotenv",{"_index":3770,"title":{},"body":{"dependencies.html":{}}}],["down",{"_index":199,"title":{},"body":{"interfaces/AppOptions.html":{},"components/OntologySelectionComponent.html":{}}}],["download",{"_index":1935,"title":{},"body":{"components/HeaderComponent.html":{},"changelog.html":{}}}],["downloadclicked",{"_index":1940,"title":{},"body":{"components/HeaderComponent.html":{}}}],["drawer",{"_index":179,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["drawer'},{'name",{"_index":524,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["drawer.close",{"_index":3171,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.closeexpanded",{"_index":3170,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.component.html",{"_index":2078,"title":{},"body":{"classes/InitializationState.html":{}}}],["drawer.component.scss",{"_index":2079,"title":{},"body":{"classes/InitializationState.html":{}}}],["drawer.open",{"_index":3172,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["drawer.position",{"_index":878,"title":{},"body":{"components/ContainerComponent.html":{}}}],["drawer/drawer.component",{"_index":842,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/DrawerModule.html":{},"components/ToggleButtonComponent.html":{}}}],["drawercomponent",{"_index":172,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["drawercomponent).position",{"_index":959,"title":{},"body":{"components/ContentComponent.html":{}}}],["drawercontainerschanged",{"_index":987,"title":{"interfaces/DrawerContainersChanged.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["drawerexpanded",{"_index":1866,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["drawerinitialized",{"_index":994,"title":{"interfaces/DrawerInitialized.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["drawermodule",{"_index":11,"title":{"modules/DrawerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules.html":{},"overview.html":{}}}],["drawerpayload",{"_index":1000,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["drawers",{"_index":315,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["drawers.filter(drawer",{"_index":877,"title":{},"body":{"components/ContainerComponent.html":{}}}],["drawertoggled",{"_index":995,"title":{"interfaces/DrawerToggled.html":{}},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dropdown",{"_index":1514,"title":{},"body":{"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{}}}],["dropdown'},{'name",{"_index":526,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["dropdown.component",{"_index":1587,"title":{},"body":{"modules/DropdownModule.html":{}}}],["dropdown.component.html",{"_index":1517,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdown.component.scss",{"_index":1516,"title":{},"body":{"components/DropdownComponent.html":{}}}],["dropdowncomponent",{"_index":525,"title":{"components/DropdownComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dropdownmodule",{"_index":1578,"title":{"modules/DropdownModule.html":{}},"body":{"modules/DropdownModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["dual",{"_index":528,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["dual_slider",{"_index":1734,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["dualslidercomponent",{"_index":527,"title":{"components/DualSliderComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dualslidermodule",{"_index":12,"title":{"modules/DualSliderModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules.html":{},"overview.html":{}}}],["duration",{"_index":291,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["during",{"_index":1225,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["dynamic",{"_index":3724,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":3282,"title":{},"body":{"changelog.html":{}}}],["e",{"_index":311,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["e040fb",{"_index":704,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["each",{"_index":2278,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["ease",{"_index":979,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["easier",{"_index":3288,"title":{},"body":{"changelog.html":{}}}],["easily",{"_index":395,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["effect",{"_index":1534,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["efficiency",{"_index":3476,"title":{},"body":{"changelog.html":{}}}],["el",{"_index":256,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{}}}],["element",{"_index":509,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"dependencies.html":{}}}],["element.getboundingclientrect",{"_index":2127,"title":{},"body":{"classes/InitializationState.html":{}}}],["element.nativeelement",{"_index":3020,"title":{},"body":{"injectables/ThemingService.html":{}}}],["element.nativeelement.contains(target",{"_index":1726,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["elementref",{"_index":131,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"injectables/ThemingService.html":{}}}],["elements",{"_index":3063,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["ellipsis",{"_index":1487,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["embedded",{"_index":3380,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":3374,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":3372,"title":{},"body":{"changelog.html":{}}}],["emit",{"_index":610,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{}}}],["emits",{"_index":228,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/RunSpatialSearchComponent.html":{}}}],["emitted",{"_index":211,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"components/HeaderComponent.html":{},"miscellaneous/functions.html":{}}}],["emitter",{"_index":2359,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["emitters",{"_index":2554,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["emitting",{"_index":2109,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ResultsBrowserComponent.html":{}}}],["empty",{"_index":2458,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["enable",{"_index":2365,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["enabled",{"_index":915,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["encapsulates",{"_index":2506,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["end",{"_index":854,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["end?.expanded",{"_index":970,"title":{},"body":{"components/ContentComponent.html":{}}}],["end?.opened",{"_index":969,"title":{},"body":{"components/ContentComponent.html":{}}}],["enddrawers",{"_index":879,"title":{},"body":{"components/ContainerComponent.html":{}}}],["enddrawers.length",{"_index":882,"title":{},"body":{"components/ContainerComponent.html":{}}}],["enddrawers[0",{"_index":885,"title":{},"body":{"components/ContainerComponent.html":{}}}],["endexpanded",{"_index":968,"title":{},"body":{"components/ContentComponent.html":{}}}],["ensures",{"_index":1402,"title":{},"body":{"components/DonorCardComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["enter",{"_index":1660,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["entire",{"_index":2948,"title":{},"body":{"modules/StoreModule.html":{},"miscellaneous/variables.html":{}}}],["entry",{"_index":2367,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entry.displaylabel.join().includes",{"_index":2409,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entry.node.label.tolowercase",{"_index":2410,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["entrycomponents",{"_index":27,"title":{},"body":{"modules/AppModule.html":{}}}],["enum",{"_index":1081,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["enumerations",{"_index":3820,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":154,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"modules/StoreModule.html":{}}}],["environment.acceptableviewerdomains",{"_index":222,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["environment.customization",{"_index":503,"title":{},"body":{"components/AppWebComponent.html":{}}}],["environment.dboptions",{"_index":501,"title":{},"body":{"components/AppWebComponent.html":{}}}],["environment.dboptions.remoteapiendpoint",{"_index":1032,"title":{},"body":{"modules/CoreModule.html":{}}}],["environment.disabledbworker",{"_index":1356,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["environment.googleanalyticstoken",{"_index":1028,"title":{},"body":{"modules/CoreModule.html":{}}}],["environment.production",{"_index":2958,"title":{},"body":{"modules/StoreModule.html":{}}}],["environments/environment",{"_index":155,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"modules/StoreModule.html":{}}}],["error",{"_index":848,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/DataStateModel.html":{},"injectables/ThemingService.html":{}}}],["error('invalid",{"_index":495,"title":{},"body":{"components/AppWebComponent.html":{}}}],["error('the",{"_index":1035,"title":{},"body":{"modules/CoreModule.html":{}}}],["error(`multiple",{"_index":856,"title":{},"body":{"components/ContainerComponent.html":{}}}],["errors",{"_index":845,"title":{},"body":{"components/ContainerComponent.html":{},"miscellaneous/functions.html":{}}}],["es",{"_index":3760,"title":{},"body":{"dependencies.html":{}}}],["es2015.worker.js",{"_index":3232,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["eslint",{"_index":434,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/ToggleButtonComponent.html":{}}}],["eslint/naming",{"_index":439,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{}}}],["eslint/prefer",{"_index":2878,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{}}}],["etc",{"_index":999,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"changelog.html":{}}}],["eui",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":3303,"title":{},"body":{"changelog.html":{}}}],["eui/src/app/app",{"_index":446,"title":{},"body":{"components/AppWebComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["eui/src/app/app.component.ts",{"_index":115,"title":{},"body":{"interfaces/AppOptions.html":{},"coverage.html":{}}}],["eui/src/app/app.module.ts",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["eui/src/app/app.module.ts:55",{"_index":32,"title":{},"body":{"modules/AppModule.html":{}}}],["eui/src/app/core/core.module.ts",{"_index":1009,"title":{},"body":{"modules/CoreModule.html":{}}}],["eui/src/app/core/header/header.component.ts",{"_index":1933,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["eui/src/app/core/header/header.component.ts:18",{"_index":1943,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:20",{"_index":1947,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:22",{"_index":1948,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:27",{"_index":1945,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:32",{"_index":1942,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:37",{"_index":1950,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.component.ts:42",{"_index":1949,"title":{},"body":{"components/HeaderComponent.html":{}}}],["eui/src/app/core/header/header.module.ts",{"_index":1973,"title":{},"body":{"modules/HeaderModule.html":{}}}],["eui/src/app/core/models/flat",{"_index":1904,"title":{},"body":{"classes/FlatNode.html":{},"coverage.html":{}}}],["eui/src/app/core/models/list",{"_index":2194,"title":{},"body":{"interfaces/ListResult.html":{},"coverage.html":{}}}],["eui/src/app/core/models/ontology",{"_index":2502,"title":{},"body":{"interfaces/OntologySelection.html":{},"coverage.html":{}}}],["eui/src/app/core/services/app",{"_index":406,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"coverage.html":{}}}],["eui/src/app/core/services/data",{"_index":1346,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/services/ontology",{"_index":2436,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["eui/src/app/core/services/theming/theming.module.ts",{"_index":2971,"title":{},"body":{"modules/ThemingModule.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts",{"_index":2976,"title":{},"body":{"injectables/ThemingService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:13",{"_index":3003,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:14",{"_index":3004,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:16",{"_index":3002,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:18",{"_index":3005,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:21",{"_index":2993,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:25",{"_index":2984,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:39",{"_index":2990,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:48",{"_index":3001,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:60",{"_index":2999,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:71",{"_index":2997,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/services/theming/theming.service.ts:83",{"_index":2986,"title":{},"body":{"injectables/ThemingService.html":{}}}],["eui/src/app/core/store/action",{"_index":3670,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["eui/src/app/core/store/color",{"_index":675,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/store/data/data.state.ts",{"_index":1039,"title":{},"body":{"interfaces/DataStateModel.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/store/icon",{"_index":1247,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/store/list",{"_index":2196,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"coverage.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts",{"_index":2644,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:100",{"_index":2669,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:110",{"_index":2672,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:119",{"_index":2662,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:130",{"_index":2666,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:134",{"_index":2667,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:141",{"_index":2655,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:51",{"_index":2658,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:56",{"_index":2681,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:58",{"_index":2685,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:60",{"_index":2683,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:62",{"_index":2679,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:65",{"_index":2677,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:68",{"_index":2676,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:70",{"_index":2654,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/scene/scene.state.ts:90",{"_index":2675,"title":{},"body":{"injectables/SceneState.html":{}}}],["eui/src/app/core/store/spatial",{"_index":2750,"title":{},"body":{"classes/SetOrgan.html":{},"classes/SetSex.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"coverage.html":{}}}],["eui/src/app/core/store/store.module.ts",{"_index":2939,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/modules/filters/filters",{"_index":1772,"title":{},"body":{"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"coverage.html":{}}}],["eui/src/app/modules/ontology",{"_index":2331,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/modules/results",{"_index":1359,"title":{},"body":{"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts",{"_index":572,"title":{},"body":{"components/CheckboxComponent.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:18",{"_index":596,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:23",{"_index":601,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:28",{"_index":605,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:33",{"_index":595,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:38",{"_index":589,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.component.ts:53",{"_index":616,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["eui/src/app/shared/components/checkbox/checkbox.module.ts",{"_index":669,"title":{},"body":{"modules/CheckboxModule.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts",{"_index":768,"title":{},"body":{"components/ContainerComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:105",{"_index":808,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:115",{"_index":799,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:124",{"_index":810,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:37",{"_index":796,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:41",{"_index":829,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:45",{"_index":820,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:48",{"_index":825,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:50",{"_index":833,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:55",{"_index":836,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:60",{"_index":814,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:62",{"_index":790,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/container/container.component.ts:83",{"_index":804,"title":{},"body":{"components/ContainerComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts",{"_index":893,"title":{},"body":{"components/ContentComponent.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:103",{"_index":930,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:116",{"_index":924,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:28",{"_index":913,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:30",{"_index":914,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:32",{"_index":916,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:34",{"_index":918,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:36",{"_index":911,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:39",{"_index":932,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:41",{"_index":909,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:60",{"_index":923,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/content/content.component.ts:70",{"_index":920,"title":{},"body":{"components/ContentComponent.html":{}}}],["eui/src/app/shared/components/drawer/drawer.module.ts",{"_index":1507,"title":{},"body":{"modules/DrawerModule.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts",{"_index":2039,"title":{},"body":{"classes/InitializationState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:35",{"_index":2051,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:37",{"_index":2048,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:41",{"_index":2052,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:46",{"_index":2053,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:56",{"_index":2055,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/drawer/drawer.component.ts:65",{"_index":2054,"title":{},"body":{"classes/InitializationState.html":{}}}],["eui/src/app/shared/components/drawer/messages.ts",{"_index":981,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/shared/components/drawer/toggle",{"_index":3144,"title":{},"body":{"components/ToggleButtonComponent.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts",{"_index":1513,"title":{},"body":{"components/DropdownComponent.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:18",{"_index":1522,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:23",{"_index":1524,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:28",{"_index":1527,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:33",{"_index":1528,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:38",{"_index":1521,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:50",{"_index":1531,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.component.ts:59",{"_index":1530,"title":{},"body":{"components/DropdownComponent.html":{}}}],["eui/src/app/shared/components/dropdown/dropdown.module.ts",{"_index":1582,"title":{},"body":{"modules/DropdownModule.html":{}}}],["eui/src/app/shared/components/dual",{"_index":1588,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/run",{"_index":2635,"title":{},"body":{"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/spatial",{"_index":2762,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"components/SpatialSearchUiComponent.html":{},"modules/SpatialSearchUiModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["eui/src/app/shared/components/spinner",{"_index":2919,"title":{},"body":{"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/thumbnail",{"_index":3027,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts",{"_index":3178,"title":{},"body":{"components/ViewerComponent.html":{},"coverage.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:17",{"_index":3188,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:19",{"_index":3186,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:21",{"_index":3187,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:23",{"_index":3191,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:29",{"_index":3185,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:33",{"_index":3189,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.component.ts:39",{"_index":3190,"title":{},"body":{"components/ViewerComponent.html":{}}}],["eui/src/app/shared/components/viewer/viewer.module.ts",{"_index":3208,"title":{},"body":{"modules/ViewerModule.html":{}}}],["eui/src/app/shared/services/message/message.service.ts",{"_index":2261,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:103",{"_index":2316,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:112",{"_index":2317,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:128",{"_index":2324,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:130",{"_index":2321,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:153",{"_index":2323,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:163",{"_index":2322,"title":{},"body":{"injectables/MessageService.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:50",{"_index":2313,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:70",{"_index":2318,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:83",{"_index":2314,"title":{},"body":{"classes/MessageChannel.html":{}}}],["eui/src/app/shared/services/message/message.service.ts:93",{"_index":2315,"title":{},"body":{"classes/MessageChannel.html":{}}}],["evenly",{"_index":3136,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["event",{"_index":622,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/ToggleButtonComponent.html":{},"license.html":{}}}],["event.checked",{"_index":630,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["event.key",{"_index":1741,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["event.target",{"_index":1630,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["event.target'])@hostlistener('document:touchstart",{"_index":1645,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["eventemitter",{"_index":609,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["eventemitter(true",{"_index":2111,"title":{},"body":{"classes/InitializationState.html":{}}}],["events",{"_index":618,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["everything",{"_index":1186,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["except",{"_index":2284,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["executionstrategy",{"_index":2964,"title":{},"body":{"modules/StoreModule.html":{}}}],["exists",{"_index":3130,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["expand",{"_index":2157,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["expand/collapse",{"_index":2164,"title":{},"body":{"classes/InitializationState.html":{}}}],["expand_collapse_params_default",{"_index":2071,"title":{},"body":{"classes/InitializationState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["expand_less",{"_index":1342,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"miscellaneous/variables.html":{}}}],["expand_more",{"_index":1340,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"miscellaneous/variables.html":{}}}],["expandable",{"_index":1908,"title":{},"body":{"classes/FlatNode.html":{},"miscellaneous/variables.html":{}}}],["expandcollapsedone",{"_index":2166,"title":{},"body":{"classes/InitializationState.html":{}}}],["expanded",{"_index":996,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["expanded(value",{"_index":2106,"title":{},"body":{"classes/InitializationState.html":{}}}],["expanded/collapsed",{"_index":2063,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedchange",{"_index":2112,"title":{},"body":{"classes/InitializationState.html":{}}}],["expandedstate",{"_index":2064,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstate2",{"_index":2066,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["expandedstateobj",{"_index":2117,"title":{},"body":{"classes/InitializationState.html":{}}}],["expands",{"_index":2151,"title":{},"body":{"classes/InitializationState.html":{}}}],["exploration",{"_index":1215,"title":{},"body":{"interfaces/DataStateModel.html":{},"index.html":{}}}],["exploration.module",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["exploration.module.ts",{"_index":2332,"title":{},"body":{"modules/OntologyExplorationModule.html":{}}}],["exploration/ontology",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"components/SpatialSearchUiComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"modules/SpatialSearchUiModule.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{}}}],["exportas",{"_index":771,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["exports",{"_index":670,"title":{},"body":{"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"modules/SpatialSearchUiModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}}}],["express",{"_index":3772,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extended",{"_index":2069,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["extends",{"_index":116,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/WorkerDataSourceService.html":{}}}],["external",{"_index":3201,"title":{},"body":{"components/ViewerComponent.html":{},"changelog.html":{}}}],["externalurl",{"_index":3230,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["extra",{"_index":3777,"title":{},"body":{"dependencies.html":{}}}],["extract",{"_index":3047,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["extraction",{"_index":3354,"title":{},"body":{"changelog.html":{}}}],["eye",{"_index":1280,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["eye.svg",{"_index":1281,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["f",{"_index":1309,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["f.svg",{"_index":1310,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":2274,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["fade",{"_index":1533,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["faded",{"_index":899,"title":{},"body":{"components/ContentComponent.html":{}}}],["fadein",{"_index":1545,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["fadeinout",{"_index":904,"title":{},"body":{"components/ContentComponent.html":{}}}],["fail",{"_index":3524,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":3550,"title":{},"body":{"changelog.html":{}}}],["fallopian",{"_index":1282,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":191,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpinnerOverlayComponent.html":{},"modules/StoreModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["favor",{"_index":3514,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":3280,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":3446,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":3474,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":2759,"title":{},"body":{"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigComponent.html":{},"miscellaneous/typealiases.html":{}}}],["fetch",{"_index":1265,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"dependencies.html":{}}}],["fetches",{"_index":2457,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["ff8800",{"_index":696,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["ffd740",{"_index":698,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":1547,"title":{},"body":{"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/SpatialSearchConfigComponent.html":{},"changelog.html":{}}}],["file",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"components/SpatialSearchUiComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"modules/SpatialSearchUiModule.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":3885,"title":{},"body":{"license.html":{}}}],["fill",{"_index":1563,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["filler",{"_index":1963,"title":{},"body":{"components/HeaderComponent.html":{}}}],["filter",{"_index":316,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["filter's",{"_index":325,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["filter(organ",{"_index":2715,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["filter(value",{"_index":2400,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["filter_checkbox",{"_index":633,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["filter_content",{"_index":1822,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["filterbox",{"_index":324,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["filterbox.removebox",{"_index":332,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["filtered",{"_index":2288,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{}}}],["filteredresults",{"_index":2344,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["filteronchange",{"_index":582,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["filteronchange(event",{"_index":613,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["filters",{"_index":531,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/variables.html":{}}}],["filterschange",{"_index":1788,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["filterscontentcomponent",{"_index":530,"title":{"components/FiltersContentComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filterscontentmodule",{"_index":1844,"title":{"modules/FiltersContentModule.html":{}},"body":{"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["filterspopovercomponent",{"_index":170,"title":{"components/FiltersPopoverComponent.html":{}},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filterspopovermodule",{"_index":13,"title":{"modules/FiltersPopoverModule.html":{}},"body":{"modules/AppModule.html":{},"modules/FiltersPopoverModule.html":{},"modules.html":{},"overview.html":{}}}],["filtersvisible",{"_index":1863,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["final",{"_index":3517,"title":{},"body":{"changelog.html":{}}}],["finished",{"_index":992,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["finishing",{"_index":3353,"title":{},"body":{"changelog.html":{}}}],["fired",{"_index":1641,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["first",{"_index":1403,"title":{},"body":{"components/DonorCardComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["fit",{"_index":3454,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":3912,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":3438,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":3260,"title":{},"body":{"changelog.html":{}}}],["fixes/performance",{"_index":3574,"title":{},"body":{"changelog.html":{}}}],["flat",{"_index":1913,"title":{},"body":{"classes/FlatNode.html":{},"miscellaneous/variables.html":{}}}],["flatnode",{"_index":1902,"title":{"classes/FlatNode.html":{}},"body":{"classes/FlatNode.html":{},"coverage.html":{}}}],["flatnode(original",{"_index":1931,"title":{},"body":{"classes/FlatNode.html":{}}}],["flex",{"_index":656,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["flexible",{"_index":3254,"title":{},"body":{"changelog.html":{}}}],["floor",{"_index":1714,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["fly",{"_index":3640,"title":{},"body":{"changelog.html":{}}}],["fn",{"_index":2791,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["fn.ts",{"_index":3671,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["focus",{"_index":3099,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["following",{"_index":3901,"title":{},"body":{"license.html":{}}}],["font",{"_index":653,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["forcedunassignment",{"_index":724,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["form",{"_index":1546,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigComponent.html":{},"changelog.html":{}}}],["format",{"_index":708,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["formatlabel",{"_index":2442,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["formatlabel(label",{"_index":2448,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["formats",{"_index":2451,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["formatter",{"_index":2364,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["formcontrol",{"_index":2345,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["formsmodule",{"_index":2430,"title":{},"body":{"modules/OntologySearchModule.html":{},"modules/SpatialSearchConfigModule.html":{}}}],["forwards",{"_index":1564,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["found",{"_index":2452,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["four",{"_index":663,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["frame",{"_index":1444,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["framework",{"_index":3242,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["free",{"_index":3882,"title":{},"body":{"license.html":{}}}],["fs",{"_index":3776,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":2070,"title":{},"body":{"classes/InitializationState.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["fullscreen",{"_index":3598,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":3447,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":394,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["functionality",{"_index":1101,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":3822,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":3870,"title":{},"body":{"index.html":{}}}],["funnel",{"_index":1895,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["furnished",{"_index":3900,"title":{},"body":{"license.html":{}}}],["further",{"_index":3594,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":3439,"title":{},"body":{"changelog.html":{}}}],["ga",{"_index":590,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["gap",{"_index":2825,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{}}}],["gatoken",{"_index":1027,"title":{},"body":{"modules/CoreModule.html":{}}}],["generate",{"_index":602,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"changelog.html":{}}}],["generated",{"_index":3307,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":3291,"title":{},"body":{"changelog.html":{}}}],["genericglobalconfig",{"_index":480,"title":{},"body":{"components/AppWebComponent.html":{}}}],["genericmessage",{"_index":983,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessagechannel",{"_index":984,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["genericmessageservice",{"_index":985,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["get(event",{"_index":2411,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["getarguments",{"_index":2027,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["getarguments(undefined",{"_index":2032,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["getchildren",{"_index":2443,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["getchildren(node",{"_index":2455,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["getchildrenfunc",{"_index":3935,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["getclassend",{"_index":3161,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["getcolor",{"_index":755,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["getcolor(key",{"_index":728,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["getcontent",{"_index":832,"title":{},"body":{"components/ContainerComponent.html":{}}}],["getexpandable",{"_index":1925,"title":{},"body":{"classes/FlatNode.html":{}}}],["gethaswrappedcontent",{"_index":835,"title":{},"body":{"components/ContainerComponent.html":{}}}],["geticon",{"_index":3162,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["getindexofmatch",{"_index":2444,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["getindexofmatch(label",{"_index":2459,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["getlabel",{"_index":1922,"title":{},"body":{"classes/FlatNode.html":{}}}],["getlevel",{"_index":3695,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getmessages",{"_index":2286,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmessagesfromsource",{"_index":2309,"title":{},"body":{"classes/MessageChannel.html":{}}}],["getmessagesfromsource(source",{"_index":2289,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmessagesfromsources",{"_index":2310,"title":{},"body":{"classes/MessageChannel.html":{}}}],["getmessagesfromsources(sources",{"_index":2292,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["getmethodname",{"_index":2019,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["getmethodname(undefined",{"_index":2034,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["getnextbuttonid",{"_index":3080,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["getprevbuttonid",{"_index":3076,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["getrangelabel",{"_index":1687,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["gets",{"_index":319,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{}}}],["getter",{"_index":3192,"title":{},"body":{"components/ViewerComponent.html":{},"miscellaneous/variables.html":{}}}],["getter/setter",{"_index":2099,"title":{},"body":{"classes/InitializationState.html":{}}}],["gettheme",{"_index":2980,"title":{},"body":{"injectables/ThemingService.html":{}}}],["getting",{"_index":3238,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["getworkerurl",{"_index":3213,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["getworkerurl(directimport",{"_index":3221,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["github",{"_index":3506,"title":{},"body":{"changelog.html":{}}}],["give",{"_index":2277,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["given",{"_index":3129,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["gizmo",{"_index":3396,"title":{},"body":{"changelog.html":{}}}],["globalconfig",{"_index":262,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{}}}],["globalconfigstate",{"_index":138,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"modules/StoreModule.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["globalthis.getcomputedstyle(element",{"_index":2135,"title":{},"body":{"classes/InitializationState.html":{}}}],["globalthis['dboptions",{"_index":502,"title":{},"body":{"components/AppWebComponent.html":{}}}],["good",{"_index":3547,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":629,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{},"changelog.html":{},"dependencies.html":{}}}],["googleanalyticsservice",{"_index":588,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["gradient",{"_index":2603,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["granted",{"_index":3881,"title":{},"body":{"license.html":{}}}],["graph",{"_index":3121,"title":{},"body":{"components/TissueSectionVisComponent.html":{},"modules.html":{}}}],["graphical",{"_index":3269,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":3779,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":3365,"title":{},"body":{"changelog.html":{}}}],["group",{"_index":575,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{}}}],["grow",{"_index":1454,"title":{},"body":{"components/DonorCardComponent.html":{},"components/HeaderComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["gtex",{"_index":3283,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":3542,"title":{},"body":{"changelog.html":{}}}],["half",{"_index":2068,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["hand",{"_index":1260,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{}}}],["handle",{"_index":2663,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["handlecheckbox",{"_index":1370,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["handlehover",{"_index":2559,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handlehover(id",{"_index":2585,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handlelinkclick",{"_index":2560,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handlelinkclick(link",{"_index":2587,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handlemessage",{"_index":781,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["handlemessage(_msg",{"_index":797,"title":{},"body":{"components/ContainerComponent.html":{}}}],["handlemessage(msg",{"_index":919,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["handler",{"_index":1668,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["handles",{"_index":1390,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["handleselection",{"_index":2561,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handleselection(result",{"_index":2590,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handleunhover",{"_index":2562,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["handling",{"_index":1620,"title":{},"body":{"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ResultsBrowserComponent.html":{}}}],["happen",{"_index":1801,"title":{},"body":{"components/FiltersContentComponent.html":{},"changelog.html":{}}}],["happens",{"_index":1394,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["happy",{"_index":2952,"title":{},"body":{"modules/StoreModule.html":{}}}],["haswrappedcontent",{"_index":788,"title":{},"body":{"components/ContainerComponent.html":{}}}],["header",{"_index":121,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["header'},{'name",{"_index":534,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["header.component",{"_index":1976,"title":{},"body":{"modules/HeaderModule.html":{}}}],["header.component.html",{"_index":1939,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header.component.scss",{"_index":1938,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header/header.module",{"_index":1019,"title":{},"body":{"modules/CoreModule.html":{}}}],["headercomponent",{"_index":533,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["headermodule",{"_index":1006,"title":{"modules/HeaderModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/HeaderModule.html":{},"modules.html":{},"overview.html":{}}}],["heart",{"_index":1286,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["heart.svg",{"_index":1287,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":972,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["helmet",{"_index":3783,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":3541,"title":{},"body":{"changelog.html":{}}}],["helper",{"_index":843,"title":{},"body":{"components/ContainerComponent.html":{},"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["here",{"_index":2242,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["hereby",{"_index":3880,"title":{},"body":{"license.html":{}}}],["hex",{"_index":691,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"dependencies.html":{}}}],["hexrgb",{"_index":690,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["hexrgb(color",{"_index":707,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["hidden",{"_index":889,"title":{},"body":{"components/ContainerComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"changelog.html":{}}}],["hide",{"_index":1894,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["hidelimitlabels",{"_index":1720,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hidepointerlabels",{"_index":1721,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hides",{"_index":1881,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["high",{"_index":1659,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["highlight",{"_index":3343,"title":{},"body":{"changelog.html":{}}}],["highlighted",{"_index":1373,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["highlightedid",{"_index":2645,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["highlightednodeid",{"_index":2198,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["highlightnode",{"_index":2201,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["highlightnode(id",{"_index":2212,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["highlights",{"_index":3344,"title":{},"body":{"changelog.html":{}}}],["highvalue",{"_index":1596,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["holders",{"_index":3917,"title":{},"body":{"license.html":{}}}],["home",{"_index":1953,"title":{},"body":{"components/HeaderComponent.html":{}}}],["homeurl",{"_index":122,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/HeaderComponent.html":{}}}],["hook",{"_index":1654,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["hooked",{"_index":3483,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":886,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["hostbinding",{"_index":838,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"classes/InitializationState.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["hostbinding('@expandcollapse",{"_index":2116,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostbinding('@fadeinout",{"_index":935,"title":{},"body":{"components/ContentComponent.html":{}}}],["hostbinding('@openclose",{"_index":2115,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostbinding('class",{"_index":816,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"classes/InitializationState.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["hostbinding('class.active",{"_index":2929,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["hostbinding('class.ccf",{"_index":2094,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["hostbinding('class.cff",{"_index":931,"title":{},"body":{"components/ContentComponent.html":{}}}],["hostbinding('style.margin",{"_index":936,"title":{},"body":{"components/ContentComponent.html":{}}}],["hostbindings",{"_index":785,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["hostlistener",{"_index":1693,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/InitializationState.html":{}}}],["hostlistener('@expandcollapse.done",{"_index":2165,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostlistener('@openclose.done",{"_index":2161,"title":{},"body":{"classes/InitializationState.html":{}}}],["hostlistener('document:click",{"_index":1644,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hostlistener('document:touchstart",{"_index":1725,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hostlisteners",{"_index":1612,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["hover",{"_index":1456,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["hoverable",{"_index":1468,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["hovered",{"_index":1404,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["hovering",{"_index":3407,"title":{},"body":{"changelog.html":{}}}],["hoverstate",{"_index":1369,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["html",{"_index":508,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["htmlelement",{"_index":1632,"title":{},"body":{"components/DualSliderComponent.html":{},"injectables/ThemingService.html":{}}}],["htmlinputelement).value",{"_index":1740,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["http://purl.obolibrary.org/obo/cl_0000000",{"_index":1077,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0013702",{"_index":1076,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["http://purl.org/ccf/latest/ccf.owl#vhfskin",{"_index":2700,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["httpclientmodule",{"_index":1010,"title":{},"body":{"modules/CoreModule.html":{}}}],["https://beta",{"_index":3841,"title":{},"body":{"index.html":{}}}],["https://ccf",{"_index":3853,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":3846,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":3845,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":3848,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":3843,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":3637,"title":{},"body":{"changelog.html":{}}}],["https://www.ngxs.io/advanced/options",{"_index":2965,"title":{},"body":{"modules/StoreModule.html":{}}}],["hubmap",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["hubmapasseturl",{"_index":455,"title":{},"body":{"components/AppWebComponent.html":{}}}],["hubmapdataservice",{"_index":456,"title":{},"body":{"components/AppWebComponent.html":{}}}],["hubmapdataurl",{"_index":457,"title":{},"body":{"components/AppWebComponent.html":{}}}],["hubmapportalurl",{"_index":458,"title":{},"body":{"components/AppWebComponent.html":{}}}],["hubmaptoken",{"_index":459,"title":{},"body":{"components/AppWebComponent.html":{}}}],["icon",{"_index":1251,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/RunSpatialSearchComponent.html":{},"modules/StoreModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["icondefinition",{"_index":1977,"title":{"interfaces/IconDefinition.html":{}},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{}}}],["iconregistry",{"_index":1985,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["iconregistrystate",{"_index":1986,"title":{"injectables/IconRegistryState.html":{}},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["icons",{"_index":1266,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["icons.ts",{"_index":1249,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":2214,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"interfaces/OntologySelection.html":{},"components/ResultsBrowserComponent.html":{},"classes/SpatialSearchUiSelectors.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["idb",{"_index":3786,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":2263,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ThumbnailCarouselComponent.html":{},"coverage.html":{}}}],["iec",{"_index":3520,"title":{},"body":{"changelog.html":{}}}],["iframe",{"_index":397,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ViewerComponent.html":{}}}],["image",{"_index":3513,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":3561,"title":{},"body":{"changelog.html":{}}}],["immutable",{"_index":680,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{}}}],["implementation",{"_index":1117,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{}}}],["implemented",{"_index":3482,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":3600,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["implied",{"_index":3909,"title":{},"body":{"license.html":{}}}],["implies",{"_index":997,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["import",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"components/SpatialSearchUiComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"modules/SpatialSearchUiModule.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{}}}],["import.meta.url",{"_index":3229,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["important",{"_index":646,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["imported",{"_index":1036,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["imports",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"modules/SpatialSearchUiModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}}}],["importscripts('${externalurl",{"_index":3235,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["improve",{"_index":3475,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":3301,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":3265,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":3366,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":3528,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":3904,"title":{},"body":{"license.html":{}}}],["includes",{"_index":3642,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":3342,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":3501,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":3596,"title":{},"body":{"changelog.html":{}}}],["indeterminate.mat",{"_index":1439,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["index",{"_index":118,"title":{"index.html":{}},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indiana",{"_index":3868,"title":{},"body":{"index.html":{}}}],["indicates",{"_index":1927,"title":{},"body":{"classes/FlatNode.html":{}}}],["individual",{"_index":603,"title":{},"body":{"components/CheckboxComponent.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["infinity",{"_index":294,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["infix",{"_index":1550,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["info",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"components/SpatialSearchUiComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"modules/SpatialSearchUiModule.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"index.html":{}}}],["infobuttonmodule",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["information",{"_index":612,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ResultsBrowserComponent.html":{},"changelog.html":{},"index.html":{}}}],["infrastructure",{"_index":3564,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":3530,"title":{},"body":{"changelog.html":{}}}],["inherit",{"_index":1888,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["init",{"_index":2370,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["initial",{"_index":298,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["initialconfig",{"_index":500,"title":{},"body":{"components/AppWebComponent.html":{}}}],["initialdelay",{"_index":498,"title":{},"body":{"components/AppWebComponent.html":{}}}],["initialization",{"_index":2139,"title":{},"body":{"classes/InitializationState.html":{}}}],["initializationstate",{"_index":2038,"title":{"classes/InitializationState.html":{}},"body":{"classes/InitializationState.html":{},"coverage.html":{}}}],["initialize",{"_index":2709,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/ThemingService.html":{}}}],["initialize(component",{"_index":2991,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialize(element",{"_index":2996,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initialized",{"_index":452,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"injectables/ThemingService.html":{}}}],["initializer",{"_index":2994,"title":{},"body":{"injectables/ThemingService.html":{}}}],["initializes",{"_index":1647,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/ToggleButtonComponent.html":{}}}],["initializesliderpopover",{"_index":1604,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["initializing",{"_index":993,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["inject",{"_index":2266,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{}}}],["inject(default_theme",{"_index":3010,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injectable",{"_index":404,"title":{"injectables/AppRootOverlayContainer.html":{},"injectables/ColorAssignmentState.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"injectables/MessageService.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"injectables/SpatialSearchUiState.html":{},"injectables/ThemingService.html":{},"injectables/WorkerDataSourceService.html":{}},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{},"injectables/ThemingService.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{}}}],["injectables",{"_index":405,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"injectables/ColorAssignmentState.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"injectables/MessageService.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"injectables/SpatialSearchUiState.html":{},"injectables/ThemingService.html":{},"injectables/WorkerDataSourceService.html":{},"overview.html":{}}}],["injectcontainerstate",{"_index":2960,"title":{},"body":{"modules/StoreModule.html":{}}}],["injecting",{"_index":2238,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["injectiontoken",{"_index":2267,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('default",{"_index":3007,"title":{},"body":{"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":46,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/ThemingService.html":{}}}],["injector.get(overlaycontainer",{"_index":3021,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injector.get(renderer2",{"_index":3019,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injector.get(themingservice",{"_index":3008,"title":{},"body":{"injectables/ThemingService.html":{}}}],["injectordelegatedatasourceservice",{"_index":1352,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["inner",{"_index":647,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["input",{"_index":478,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{}}}],["inputs",{"_index":453,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{}}}],["inside",{"_index":1751,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["install",{"_index":3108,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["instance",{"_index":252,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["instancetype",{"_index":3830,"title":{},"body":{"miscellaneous/functions.html":{}}}],["instant",{"_index":2061,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["instead",{"_index":1758,"title":{},"body":{"components/DualSliderComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["instructions",{"_index":3373,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":3448,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":3339,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":3529,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":3461,"title":{},"body":{"changelog.html":{}}}],["inter",{"_index":1966,"title":{},"body":{"components/HeaderComponent.html":{}}}],["interact",{"_index":3434,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":3583,"title":{},"body":{"changelog.html":{}}}],["interest",{"_index":3634,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":112,"title":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"interfaces/ListResult.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OntologySelection.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSearchUiModel.html":{}},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":114,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"interfaces/ListResult.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"interfaces/MessageServiceConfig.html":{},"interfaces/OntologySelection.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSearchUiModel.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":3512,"title":{},"body":{"changelog.html":{}}}],["intestine",{"_index":1293,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["intestine.svg",{"_index":1294,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["invisible",{"_index":912,"title":{},"body":{"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["iri",{"_index":2691,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["isexpandable",{"_index":3696,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["islighttheme",{"_index":225,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["isn't",{"_index":1398,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["isolated",{"_index":2272,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/variables.html":{}}}],["issliderinitialized",{"_index":1597,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["isslideropen",{"_index":1598,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["isstring",{"_index":484,"title":{},"body":{"components/AppWebComponent.html":{}}}],["isstringarray",{"_index":487,"title":{},"body":{"components/AppWebComponent.html":{}}}],["isstringarray(json",{"_index":492,"title":{},"body":{"components/AppWebComponent.html":{}}}],["isstringarray(value",{"_index":493,"title":{},"body":{"components/AppWebComponent.html":{}}}],["issue",{"_index":3497,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":3327,"title":{},"body":{"changelog.html":{}}}],["iswhitelisted",{"_index":386,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["it's",{"_index":321,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["item",{"_index":214,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["item.color",{"_index":747,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["item.technology",{"_index":3087,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["item.thumbnail",{"_index":3085,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["itemhovered",{"_index":2565,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["itemid",{"_index":3036,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["itemid(_index",{"_index":3045,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["items",{"_index":1429,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["itemunhovered",{"_index":2566,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["iu",{"_index":3615,"title":{},"body":{"changelog.html":{}}}],["javascript",{"_index":3295,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["join",{"_index":2408,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["json",{"_index":490,"title":{},"body":{"components/AppWebComponent.html":{},"changelog.html":{}}}],["json.parse(json.stringify(default_filter",{"_index":1827,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["jsonld",{"_index":3789,"title":{},"body":{"dependencies.html":{}}}],["july",{"_index":3582,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":3621,"title":{},"body":{"changelog.html":{}}}],["justify",{"_index":1435,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{}}}],["keep",{"_index":194,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DonorCardComponent.html":{}}}],["keeping",{"_index":1132,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["keeps",{"_index":1868,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["key",{"_index":718,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{}}}],["key/value",{"_index":1811,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["keyboard",{"_index":3620,"title":{},"body":{"changelog.html":{}}}],["keyboardevent",{"_index":1656,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["keyframes",{"_index":1542,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["keyval",{"_index":3787,"title":{},"body":{"dependencies.html":{}}}],["key}:${value",{"_index":1823,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["kidney",{"_index":1288,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["kidney.svg",{"_index":1289,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":3908,"title":{},"body":{"license.html":{}}}],["knee",{"_index":1290,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["knee.svg",{"_index":1291,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["known",{"_index":3326,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":3522,"title":{},"body":{"changelog.html":{}}}],["label",{"_index":197,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["label.slice(0",{"_index":2496,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.slice(index",{"_index":2497,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.tolowercase().includes(searchvalue",{"_index":2492,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["label.tolowercase().indexof(searchvalue",{"_index":2494,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["labeled",{"_index":574,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["labels",{"_index":604,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{}}}],["labs/data",{"_index":2941,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["labs/data/decorators",{"_index":686,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["labs/data/repositories",{"_index":688,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["labs/dispatch",{"_index":2788,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/StoreModule.html":{},"dependencies.html":{}}}],["landmarks",{"_index":3250,"title":{},"body":{"changelog.html":{}}}],["large",{"_index":1292,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["larger",{"_index":3289,"title":{},"body":{"changelog.html":{}}}],["last",{"_index":384,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DropdownComponent.html":{},"modules/StoreModule.html":{}}}],["latest",{"_index":1104,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["launch",{"_index":3199,"title":{},"body":{"components/ViewerComponent.html":{}}}],["layers",{"_index":3733,"title":{},"body":{"dependencies.html":{}}}],["lazy",{"_index":2208,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["ld",{"_index":3539,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":3496,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":3352,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":318,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["left.closeexpanded",{"_index":329,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["left.open",{"_index":328,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["left.px",{"_index":907,"title":{},"body":{"components/ContentComponent.html":{}}}],["left.svg",{"_index":1284,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["left/right",{"_index":3363,"title":{},"body":{"changelog.html":{}}}],["leftmargin",{"_index":900,"title":{},"body":{"components/ContentComponent.html":{}}}],["legend",{"_index":507,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["level",{"_index":1911,"title":{},"body":{"classes/FlatNode.html":{},"injectables/ThemingService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["levels",{"_index":3631,"title":{},"body":{"changelog.html":{}}}],["lexically",{"_index":2384,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["liability",{"_index":3921,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3918,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":3293,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":3468,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":3874,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":3347,"title":{},"body":{"changelog.html":{}}}],["lifecycle",{"_index":2371,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["light",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{}}}],["lighter",{"_index":1471,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["limitation",{"_index":3888,"title":{},"body":{"license.html":{}}}],["limited",{"_index":3568,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":437,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["link",{"_index":389,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DonorCardComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["linkage",{"_index":3584,"title":{},"body":{"changelog.html":{}}}],["linkclick",{"_index":1375,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["linkclicked",{"_index":2567,"title":{},"body":{"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["linked",{"_index":3255,"title":{},"body":{"changelog.html":{}}}],["linkhandler",{"_index":1371,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["linkhandler(url",{"_index":1392,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["links",{"_index":3324,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":354,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"changelog.html":{}}}],["listed",{"_index":2873,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["listen",{"_index":2271,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["listener",{"_index":1103,"title":{},"body":{"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/functions.html":{}}}],["listeners",{"_index":806,"title":{},"body":{"components/ContainerComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["listens",{"_index":308,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{}}}],["listresult",{"_index":2193,"title":{"interfaces/ListResult.html":{}},"body":{"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/ResultsBrowserComponent.html":{},"coverage.html":{}}}],["listresultdeselected",{"_index":2568,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["listresults",{"_index":2199,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["listresultselected",{"_index":2569,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["listresultsstate",{"_index":164,"title":{"injectables/ListResultsState.html":{}},"body":{"interfaces/AppOptions.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["listresultsstatemodel",{"_index":2233,"title":{"interfaces/ListResultsStateModel.html":{}},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"coverage.html":{}}}],["literal",{"_index":767,"title":{},"body":{"interfaces/ColorAssignmentStateModel.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["little",{"_index":3432,"title":{},"body":{"changelog.html":{}}}],["liver",{"_index":1295,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["liver.svg",{"_index":1296,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":2209,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["loaded",{"_index":1252,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{}}}],["loaders.gl/core",{"_index":3737,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/draco",{"_index":3739,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":3740,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":1042,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/ViewerComponent.html":{}}}],["loadingmessage",{"_index":238,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["located",{"_index":2093,"title":{},"body":{"classes/InitializationState.html":{}}}],["location",{"_index":2504,"title":{},"body":{"interfaces/OntologySelection.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["locations",{"_index":1830,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["locationstrategy",{"_index":3216,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["locator",{"_index":3215,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["lock",{"_index":3093,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["lodash",{"_index":2229,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"dependencies.html":{}}}],["log",{"_index":3862,"title":{},"body":{"index.html":{}}}],["logged",{"_index":1946,"title":{},"body":{"components/HeaderComponent.html":{}}}],["loggedin",{"_index":401,"title":{},"body":{"interfaces/AppOptions.html":{},"components/HeaderComponent.html":{}}}],["logger",{"_index":2967,"title":{},"body":{"modules/StoreModule.html":{}}}],["logging",{"_index":3285,"title":{},"body":{"changelog.html":{}}}],["logic",{"_index":1391,"title":{},"body":{"components/DonorCardComponent.html":{},"classes/InitializationState.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["login",{"_index":399,"title":{},"body":{"interfaces/AppOptions.html":{},"components/HeaderComponent.html":{}}}],["logindisabled",{"_index":249,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/HeaderComponent.html":{}}}],["loginenabled",{"_index":123,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["logo",{"_index":1936,"title":{},"body":{"components/HeaderComponent.html":{}}}],["logotooltip",{"_index":124,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/HeaderComponent.html":{}}}],["logout",{"_index":1951,"title":{},"body":{"components/HeaderComponent.html":{}}}],["longer",{"_index":3416,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":3473,"title":{},"body":{"changelog.html":{}}}],["looks",{"_index":2463,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lookup",{"_index":2445,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["lookup(nodes",{"_index":2461,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["low",{"_index":1664,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["low/high",{"_index":1708,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["lower",{"_index":1626,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["lowvalue",{"_index":1599,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["lru",{"_index":3792,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":3741,"title":{},"body":{"dependencies.html":{}}}],["lung",{"_index":1297,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["lung.svg",{"_index":1298,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["lymph",{"_index":1299,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["made",{"_index":1219,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"changelog.html":{}}}],["main",{"_index":174,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/DonorCardComponent.html":{}}}],["major",{"_index":3263,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":3286,"title":{},"body":{"changelog.html":{}}}],["making",{"_index":3333,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":2758,"title":{},"body":{"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{},"miscellaneous/typealiases.html":{}}}],["managed",{"_index":831,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["managers",{"_index":3299,"title":{},"body":{"changelog.html":{}}}],["manages",{"_index":2977,"title":{},"body":{"injectables/ThemingService.html":{}}}],["many",{"_index":180,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["map",{"_index":146,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{}}}],["map(([scene",{"_index":2726,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(([tissueblocks",{"_index":2249,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["map((color",{"_index":706,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["map((node",{"_index":2741,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(nodes",{"_index":2480,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["map(organ",{"_index":2717,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(reforgans",{"_index":2711,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["map(searchresults",{"_index":2403,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["map(state",{"_index":235,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["map(states",{"_index":1184,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["march",{"_index":3471,"title":{},"body":{"changelog.html":{}}}],["margin",{"_index":649,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/variables.html":{}}}],["margin2",{"_index":2073,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["markdown",{"_index":3797,"title":{},"body":{"dependencies.html":{}}}],["marrow",{"_index":1276,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["marrow.svg",{"_index":1277,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["mat",{"_index":639,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/OntologySearchComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ViewerComponent.html":{}}}],["matautocompletemodule",{"_index":2432,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["matautocompleteselectedevent",{"_index":2374,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["matbuttonmodule",{"_index":1851,"title":{},"body":{"modules/FiltersContentModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/ViewerModule.html":{}}}],["match",{"_index":1956,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["matcheckboxchange",{"_index":614,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["matcheckboxmodule",{"_index":673,"title":{},"body":{"modules/CheckboxModule.html":{},"modules/DonorCardModule.html":{}}}],["matching",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"components/SpatialSearchUiComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"modules/SpatialSearchUiModule.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1790,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["matdialogmodule",{"_index":2808,"title":{},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchUiBehaviorModule.html":{}}}],["matdialogref",{"_index":2772,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{}}}],["material",{"_index":1988,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["matformfieldmodule",{"_index":1583,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/OntologySearchModule.html":{}}}],["math.div($pointer",{"_index":1762,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["math.gl/core",{"_index":3743,"title":{},"body":{"dependencies.html":{}}}],["math.gl/culling",{"_index":3745,"title":{},"body":{"dependencies.html":{}}}],["math.max(...this.selection",{"_index":1712,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["math.min(...this.selection",{"_index":1710,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["maticonmodule",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologyTreeModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/ViewerModule.html":{}}}],["maticonregistry",{"_index":1983,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["matinputmodule",{"_index":2433,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["matprogressspinnermodule",{"_index":2936,"title":{},"body":{"modules/SpinnerOverlayModule.html":{},"modules/ViewerModule.html":{}}}],["matradiomodule",{"_index":2836,"title":{},"body":{"modules/SpatialSearchConfigModule.html":{}}}],["matselectmodule",{"_index":1585,"title":{},"body":{"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/SpatialSearchConfigModule.html":{}}}],["matsnackbar",{"_index":134,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["matsnackbarmodule",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodule",{"_index":1974,"title":{},"body":{"modules/HeaderModule.html":{}}}],["mattooltipmodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyTreeModule.html":{}}}],["mattreemodule",{"_index":2545,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["max",{"_index":1568,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{}}}],["mc",{"_index":3614,"title":{},"body":{"changelog.html":{}}}],["measured",{"_index":2131,"title":{},"body":{"classes/InitializationState.html":{}}}],["measuredmargin",{"_index":2133,"title":{},"body":{"classes/InitializationState.html":{}}}],["measuredwidth",{"_index":2123,"title":{},"body":{"classes/InitializationState.html":{}}}],["memory",{"_index":3495,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":1515,"title":{},"body":{"components/DropdownComponent.html":{},"changelog.html":{}}}],["merchantability",{"_index":3911,"title":{},"body":{"license.html":{}}}],["merge",{"_index":3891,"title":{},"body":{"license.html":{}}}],["mergeall",{"_index":2268,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["message",{"_index":798,"title":{"interfaces/Message.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["message_service_config",{"_index":1508,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["message_service_default_config",{"_index":1509,"title":{},"body":{"modules/DrawerModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["messagechannel",{"_index":813,"title":{"classes/MessageChannel.html":{}},"body":{"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["messagechannel(source",{"_index":2308,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messagechannel.counter",{"_index":2295,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["messages",{"_index":792,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["messageservice",{"_index":773,"title":{"injectables/MessageService.html":{}},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["messageservice.connect(this",{"_index":861,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["messageservice.connect(this).getmessages",{"_index":948,"title":{},"body":{"components/ContentComponent.html":{}}}],["messageserviceconfig",{"_index":2270,"title":{"interfaces/MessageServiceConfig.html":{}},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["messagess",{"_index":1093,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["metadata",{"_index":449,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["method",{"_index":617,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ThemingService.html":{}}}],["method.apply(registry",{"_index":2016,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["methodname",{"_index":2010,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ThemingService.html":{}}}],["methods",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{}}}],["min",{"_index":1426,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ViewerComponent.html":{}}}],["minor",{"_index":3268,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":3819,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":3875,"title":{},"body":{"license.html":{}}}],["ml",{"_index":1481,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["mock",{"_index":3610,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":3420,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":278,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["model",{"_index":2239,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySelectionComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["models/list",{"_index":2230,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["modify",{"_index":3890,"title":{},"body":{"license.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"modules/SpatialSearchUiModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/StoreModule.html":{},"injectables/WorkerDataSourceService.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"modules/SpatialSearchUiModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/filters/filters",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{}}}],["modules/ontology",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/results",{"_index":77,"title":{},"body":{"modules/AppModule.html":{}}}],["monorepo",{"_index":3833,"title":{},"body":{"index.html":{}}}],["more",{"_index":1083,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"index.html":{}}}],["mouse",{"_index":1635,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["mousepositiontrackermodule",{"_index":1013,"title":{},"body":{"modules/CoreModule.html":{}}}],["moved",{"_index":3623,"title":{},"body":{"changelog.html":{}}}],["movement",{"_index":1636,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["mr",{"_index":1483,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["msg",{"_index":922,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["msg.payload",{"_index":960,"title":{},"body":{"components/ContentComponent.html":{}}}],["msg.payload.drawers",{"_index":954,"title":{},"body":{"components/ContentComponent.html":{}}}],["msg.payload.opened",{"_index":3168,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["msg.payload.type",{"_index":951,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["msg.source",{"_index":958,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["mt",{"_index":1484,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["much",{"_index":3287,"title":{},"body":{"changelog.html":{}}}],["multi",{"_index":2975,"title":{},"body":{"modules/ThemingModule.html":{}}}],["multiple",{"_index":3834,"title":{},"body":{"index.html":{}}}],["n3",{"_index":3793,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":419,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":3390,"title":{},"body":{"changelog.html":{}}}],["namespace",{"_index":1261,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"miscellaneous/variables.html":{}}}],["navigate_before",{"_index":3086,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["navigate_next",{"_index":3088,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["navigation",{"_index":3034,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"changelog.html":{}}}],["navigationoptions",{"_index":3060,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["necessary",{"_index":1666,"title":{},"body":{"components/DualSliderComponent.html":{},"injectables/ThemingService.html":{}}}],["need",{"_index":1222,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"components/FiltersPopoverComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["needed",{"_index":3477,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":803,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["nested",{"_index":1750,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["network",{"_index":3866,"title":{},"body":{"index.html":{}}}],["neuron",{"_index":1301,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["neuron.svg",{"_index":1302,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["never",{"_index":855,"title":{},"body":{"components/ContainerComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{}}}],["new",{"_index":219,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["newly",{"_index":1921,"title":{},"body":{"classes/FlatNode.html":{}}}],["newvalue",{"_index":1738,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["next",{"_index":436,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["nextbuttonid",{"_index":3038,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["nextel",{"_index":3070,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["nextmessageid",{"_index":2294,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["nextuid",{"_index":3073,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":637,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["ng5",{"_index":1694,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"dependencies.html":{}}}],["ng5slidermodule",{"_index":1770,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["ngacceptinputtype_expanded",{"_index":2192,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngacceptinputtype_opened",{"_index":2191,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngacceptinputtype_position",{"_index":2190,"title":{},"body":{"classes/InitializationState.html":{}}}],["ngafterviewinit",{"_index":782,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["ngdobootstrap",{"_index":30,"title":{},"body":{"modules/AppModule.html":{}}}],["ngmodule",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"modules/SpatialSearchUiModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{}}}],["ngonchanges",{"_index":1605,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ViewerComponent.html":{}}}],["ngonchanges(changes",{"_index":1648,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ViewerComponent.html":{}}}],["ngondestroy",{"_index":783,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{}}}],["ngoninit",{"_index":287,"title":{},"body":{"interfaces/AppOptions.html":{},"components/OntologySearchComponent.html":{}}}],["ngx",{"_index":628,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{},"dependencies.html":{}}}],["ngxs",{"_index":685,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/logger",{"_index":2944,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxs/storage",{"_index":3750,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":689,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"modules/StoreModule.html":{},"dependencies.html":{}}}],["ngxsdatapluginmodule",{"_index":2940,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatapluginmodule.forroot",{"_index":2955,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdatarepository",{"_index":1044,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["ngxsdispatchpluginmodule",{"_index":2942,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsdispatchpluginmodule.forroot",{"_index":2966,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsimmutabledatarepository",{"_index":687,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["ngxsloggerpluginmodule",{"_index":2943,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsloggerpluginmodule.forroot",{"_index":2968,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule",{"_index":2946,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsmodule.forroot(root_states",{"_index":2956,"title":{},"body":{"modules/StoreModule.html":{}}}],["ngxsoninit",{"_index":1045,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nih",{"_index":3871,"title":{},"body":{"index.html":{}}}],["node",{"_index":1906,"title":{},"body":{"classes/FlatNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["node's",{"_index":1924,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ccf_annotations?.some?.(tag",{"_index":2737,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["node.children",{"_index":2501,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.entityid",{"_index":2701,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["node.id",{"_index":2414,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["node.label.tolowercase().includes(searchvalue",{"_index":2486,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.reference_organ",{"_index":2739,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["node.representation_of",{"_index":2698,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["node.synonymlabels.find((label",{"_index":2491,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["node.ts",{"_index":1905,"title":{},"body":{"classes/FlatNode.html":{},"coverage.html":{}}}],["node.ts:11",{"_index":1917,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:13",{"_index":1915,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:18",{"_index":1923,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:25",{"_index":1926,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:36",{"_index":1920,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:38",{"_index":1912,"title":{},"body":{"classes/FlatNode.html":{}}}],["node.ts:9",{"_index":1918,"title":{},"body":{"classes/FlatNode.html":{}}}],["node['@id",{"_index":2699,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodeclickevent",{"_index":2661,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["nodes",{"_index":357,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["nodes.foreach((node",{"_index":2484,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["nodes.svg",{"_index":1300,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["nodes[node.parent",{"_index":2533,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["none",{"_index":1552,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["noninfringement",{"_index":3915,"title":{},"body":{"license.html":{}}}],["normally",{"_index":1873,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["not(:first",{"_index":1448,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["not(:last",{"_index":1962,"title":{},"body":{"components/HeaderComponent.html":{}}}],["note",{"_index":1749,"title":{},"body":{"components/DualSliderComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["notice",{"_index":3498,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["notifies",{"_index":2589,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["now",{"_index":3290,"title":{},"body":{"changelog.html":{}}}],["nowrap",{"_index":1489,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["null",{"_index":1992,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"components/ViewerComponent.html":{}}}],["null)?.getcontainerelement",{"_index":3022,"title":{},"body":{"injectables/ThemingService.html":{}}}],["nullish",{"_index":2879,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{}}}],["number",{"_index":593,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"changelog.html":{}}}],["number((event.target",{"_index":1739,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["number(this.options.floor",{"_index":1742,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["number(value.slice(0",{"_index":2137,"title":{},"body":{"classes/InitializationState.html":{}}}],["numebr",{"_index":3124,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["numeric",{"_index":3502,"title":{},"body":{"changelog.html":{}}}],["numresults",{"_index":1907,"title":{},"body":{"classes/FlatNode.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["o",{"_index":1108,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["o.id",{"_index":2731,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["o.representation_of",{"_index":2714,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["o['@id",{"_index":2735,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["object",{"_index":213,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["object.prototype.hasownproperty.call(colors",{"_index":2742,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["object.values(state.nodes",{"_index":2468,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["observable",{"_index":143,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["observableinput",{"_index":1053,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["observedvalueof",{"_index":1054,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["obtaining",{"_index":3883,"title":{},"body":{"license.html":{}}}],["occurencedata",{"_index":2509,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["occurences",{"_index":1147,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["occurs",{"_index":1639,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["off/on",{"_index":3480,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":3581,"title":{},"body":{"changelog.html":{}}}],["offset",{"_index":962,"title":{},"body":{"components/ContentComponent.html":{}}}],["old",{"_index":3847,"title":{},"body":{"index.html":{}}}],["once",{"_index":1037,"title":{},"body":{"modules/CoreModule.html":{}}}],["onchanges",{"_index":1592,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ViewerComponent.html":{}}}],["ondestroy",{"_index":770,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{}}}],["one",{"_index":1082,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"index.html":{}}}],["oninit",{"_index":132,"title":{},"body":{"interfaces/AppOptions.html":{},"components/OntologySearchComponent.html":{}}}],["onkeyhigh",{"_index":1606,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeyhigh(event",{"_index":1655,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeylow",{"_index":1607,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["onkeylow(event",{"_index":1662,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["online",{"_index":3590,"title":{},"body":{"changelog.html":{}}}],["onscroll",{"_index":2563,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["onscroll(event",{"_index":2595,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["onselect",{"_index":2348,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["onselect(event",{"_index":2373,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["ontolgyselection.foreach((selection",{"_index":379,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontolgyselection.length",{"_index":375,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontolgyselection[0].label",{"_index":377,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontological",{"_index":3639,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":3540,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":196,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["ontology_search",{"_index":2413,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["ontologyexplorationmodule",{"_index":14,"title":{"modules/OntologyExplorationModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OntologyExplorationModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologyfilter",{"_index":2510,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["ontologynode",{"_index":2526,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["ontologysearchcomponent",{"_index":535,"title":{"components/OntologySearchComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ontologysearchmodule",{"_index":2328,"title":{"modules/OntologySearchModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologysearchservice",{"_index":2353,"title":{"injectables/OntologySearchService.html":{}},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"interfaces/SearchResult.html":{},"coverage.html":{},"overview.html":{}}}],["ontologyselected(ontologyselection",{"_index":358,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontologyselection",{"_index":156,"title":{"interfaces/OntologySelection.html":{}},"body":{"interfaces/AppOptions.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"coverage.html":{}}}],["ontologyselection.map(selection",{"_index":363,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontologyselection[0",{"_index":369,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontologyselection[0].label",{"_index":370,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontologyselectioncomponent",{"_index":537,"title":{"components/OntologySelectionComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ontologyselectionlabel",{"_index":200,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ontologyselectionmodule",{"_index":2329,"title":{"modules/OntologySelectionModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologyselections",{"_index":2522,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["ontologyservice",{"_index":2346,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["ontologytermoccurencesdata",{"_index":1148,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologytermoccurencesdata$.pipe(take(1)).subscribe(ontologytermsfulldata",{"_index":1198,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologytermoccurencesdata(filter",{"_index":1233,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologytermoccurencesdataquerystatus",{"_index":1122,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologytermoccurrences",{"_index":1167,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologyterms",{"_index":240,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["ontologytermsfulldata",{"_index":1134,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["ontologytreecomponent",{"_index":539,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ontologytreemodel",{"_index":135,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["ontologytreemodule",{"_index":2330,"title":{"modules/OntologyTreeModule.html":{}},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules.html":{},"overview.html":{}}}],["ontologytreenode",{"_index":1910,"title":{},"body":{"classes/FlatNode.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["opacities",{"_index":3484,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":944,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["opacityslidermodule",{"_index":2547,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["open",{"_index":208,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/typealiases.html":{}}}],["open/close",{"_index":2114,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["open_in_new",{"_index":1418,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["openapi",{"_index":3335,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/angular",{"_index":1017,"title":{},"body":{"modules/CoreModule.html":{}}}],["openapi/js",{"_index":3858,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":3860,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":3859,"title":{},"body":{"index.html":{}}}],["opened",{"_index":929,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["opened(value",{"_index":2102,"title":{},"body":{"classes/InitializationState.html":{}}}],["opened/closed",{"_index":2059,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["openedchange",{"_index":2110,"title":{},"body":{"classes/InitializationState.html":{}}}],["openedstate",{"_index":2060,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["openexpanded",{"_index":2152,"title":{},"body":{"classes/InitializationState.html":{}}}],["opening",{"_index":2581,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["opening/closing/expanding",{"_index":2076,"title":{},"body":{"classes/InitializationState.html":{}}}],["opens",{"_index":1535,"title":{},"body":{"components/DropdownComponent.html":{},"classes/InitializationState.html":{},"components/RunSpatialSearchComponent.html":{}}}],["openspatialsearch",{"_index":1781,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["operator",{"_index":1096,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["operatorfunction",{"_index":1055,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["opposite",{"_index":2065,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/typealiases.html":{}}}],["optimization",{"_index":3431,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":3575,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":3459,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":615,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["option.displaylabel[0",{"_index":2417,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option.displaylabel[1",{"_index":2418,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option.displaylabel[2",{"_index":2419,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["option?.displaylabel",{"_index":2407,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["optional",{"_index":120,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":584,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{}}}],["options.ceil",{"_index":1744,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["options.floor",{"_index":1743,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["optionschanged",{"_index":1608,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["optionsvisible",{"_index":1518,"title":{},"body":{"components/DropdownComponent.html":{}}}],["order",{"_index":2475,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["organ",{"_index":206,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"changelog.html":{},"index.html":{}}}],["organ(id",{"_index":2889,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{}}}],["organ.hassex",{"_index":2881,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{}}}],["organ.id",{"_index":2908,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{}}}],["organ.name",{"_index":2823,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["organ.sex",{"_index":2882,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{}}}],["organid",{"_index":2755,"title":{},"body":{"classes/SetOrgan.html":{},"classes/SetSex.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{}}}],["organid(state",{"_index":2892,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{}}}],["organids",{"_index":2712,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organids.has(organ.id",{"_index":2716,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["organinfo",{"_index":2659,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"classes/SpatialSearchUiSelectors.html":{}}}],["organlistvisible",{"_index":209,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["organmatchessex",{"_index":2888,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{}}}],["organmatchessex(organ",{"_index":2895,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{}}}],["organs",{"_index":1269,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["organs(sex",{"_index":2897,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{}}}],["organs.filter(organ",{"_index":2910,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{}}}],["organs.find(o",{"_index":2877,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["organs.find(organ",{"_index":2907,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{}}}],["organs/anatomical",{"_index":3485,"title":{},"body":{"changelog.html":{}}}],["organselectormodule",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["organvalidforsex",{"_index":2912,"title":{},"body":{"injectables/SpatialSearchUiState.html":{}}}],["organvalidforsex(organid",{"_index":2875,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["origin",{"_index":3095,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["original",{"_index":1914,"title":{},"body":{"classes/FlatNode.html":{}}}],["originx",{"_index":1695,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["originy",{"_index":1696,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["orthographic",{"_index":3400,"title":{},"body":{"changelog.html":{}}}],["ot",{"_index":1257,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["ot2od026671",{"_index":3873,"title":{},"body":{"index.html":{}}}],["other.expanded",{"_index":2179,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.expandedstate2",{"_index":2180,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.margin2",{"_index":2185,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.measuredmargin",{"_index":2183,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.measuredwidth",{"_index":2182,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.opened",{"_index":2181,"title":{},"body":{"classes/InitializationState.html":{}}}],["other.width",{"_index":2184,"title":{},"body":{"classes/InitializationState.html":{}}}],["otherblocks",{"_index":2251,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["otherblocks.push",{"_index":2256,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["others",{"_index":218,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["otherwise",{"_index":1999,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"license.html":{}}}],["out",{"_index":20,"title":{},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"classes/InitializationState.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"modules/SpatialSearchUiModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"license.html":{},"overview.html":{}}}],["outline",{"_index":1837,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["output",{"_index":626,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["outputs",{"_index":585,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ViewerComponent.html":{}}}],["outside",{"_index":1380,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["ovaries",{"_index":1303,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["ovaries.svg",{"_index":1304,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["ovary",{"_index":1305,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["over",{"_index":1405,"title":{},"body":{"components/DonorCardComponent.html":{},"changelog.html":{}}}],["overall",{"_index":598,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["overflow",{"_index":888,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["overlay",{"_index":230,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ViewerComponent.html":{}}}],["overlay'},{'name",{"_index":557,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["overlay.component",{"_index":2938,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["overlay.component.html",{"_index":2923,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.scss",{"_index":2922,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts",{"_index":2920,"title":{},"body":{"components/SpinnerOverlayComponent.html":{},"coverage.html":{}}}],["overlay.component.ts:16",{"_index":2928,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts:19",{"_index":2924,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.component.ts:22",{"_index":2926,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["overlay.create",{"_index":1702,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlay.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["overlay.module.ts",{"_index":2935,"title":{},"body":{"modules/SpinnerOverlayModule.html":{}}}],["overlay.position().flexibleconnectedto(element).withpositions([position",{"_index":1700,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlay.service",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{}}}],["overlay.service.ts",{"_index":407,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"coverage.html":{}}}],["overlay.service.ts:10",{"_index":422,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["overlay.service.ts:11",{"_index":421,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["overlay.service.ts:13",{"_index":417,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["overlay.service.ts:27",{"_index":414,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["overlay.service.ts:32",{"_index":415,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["overlay.setrootelement(el",{"_index":265,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["overlay/app",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"coverage.html":{}}}],["overlay/spinner",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"coverage.html":{}}}],["overlaycontainer",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppRootOverlayContainer.html":{},"injectables/ThemingService.html":{}}}],["overlaymodule",{"_index":1768,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["overlayref",{"_index":1600,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayref.attach(popoverportal",{"_index":1736,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayref.updateposition",{"_index":1737,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlays",{"_index":3632,"title":{},"body":{"changelog.html":{}}}],["overlayx",{"_index":1697,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overlayy",{"_index":1698,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["overview",{"_index":3928,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owning",{"_index":3151,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["p",{"_index":3606,"title":{},"body":{"changelog.html":{}}}],["package",{"_index":3298,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["padding",{"_index":1430,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ViewerComponent.html":{}}}],["page",{"_index":1937,"title":{},"body":{"components/HeaderComponent.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["pages",{"_index":3371,"title":{},"body":{"changelog.html":{}}}],["pair",{"_index":2187,"title":{},"body":{"classes/InitializationState.html":{}}}],["paired",{"_index":3360,"title":{},"body":{"changelog.html":{}}}],["pancreas",{"_index":1306,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pancreas.svg",{"_index":1307,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":1573,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["panel",{"_index":1561,"title":{},"body":{"components/DropdownComponent.html":{},"changelog.html":{}}}],["panelclass",{"_index":1703,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["param",{"_index":253,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["param0",{"_index":2696,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["parameters",{"_index":418,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["params",{"_index":2072,"title":{},"body":{"classes/InitializationState.html":{},"miscellaneous/variables.html":{}}}],["parent",{"_index":611,"title":{},"body":{"components/CheckboxComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["parent.messages.pipe(takewhile",{"_index":2301,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["parse",{"_index":504,"title":{},"body":{"components/AppWebComponent.html":{}}}],["parsedatasources",{"_index":505,"title":{},"body":{"components/AppWebComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["parsedatasources(value",{"_index":482,"title":{},"body":{"components/AppWebComponent.html":{},"miscellaneous/functions.html":{}}}],["parser",{"_index":3757,"title":{},"body":{"dependencies.html":{}}}],["part",{"_index":2368,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["partial",{"_index":1221,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["particular",{"_index":3913,"title":{},"body":{"license.html":{}}}],["partly",{"_index":3470,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":3412,"title":{},"body":{"changelog.html":{}}}],["parts",{"_index":2020,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.join",{"_index":2025,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('innamespace",{"_index":2024,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('literal",{"_index":2023,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["parts.push('set",{"_index":2022,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["passed",{"_index":198,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["passes",{"_index":1395,"title":{},"body":{"components/DonorCardComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["path",{"_index":643,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"dependencies.html":{}}}],["patient",{"_index":1365,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{}}}],["payload",{"_index":683,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/typealiases.html":{}}}],["payload('doreset",{"_index":732,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["pelvis",{"_index":1308,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["per",{"_index":3075,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["performance",{"_index":3302,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":3879,"title":{},"body":{"license.html":{}}}],["permit",{"_index":3898,"title":{},"body":{"license.html":{}}}],["person",{"_index":1415,"title":{},"body":{"components/DonorCardComponent.html":{},"license.html":{}}}],["persons",{"_index":3899,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":1105,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/functions.html":{}}}],["pipe(mergeall",{"_index":2303,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["placed",{"_index":2954,"title":{},"body":{"modules/StoreModule.html":{}}}],["placeholder",{"_index":3585,"title":{},"body":{"changelog.html":{}}}],["placeholdertext",{"_index":2351,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["placement",{"_index":3543,"title":{},"body":{"changelog.html":{}}}],["placenta",{"_index":1311,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["placenta.svg",{"_index":1312,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["player",{"_index":3727,"title":{},"body":{"dependencies.html":{}}}],["pluck",{"_index":147,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["plugin",{"_index":2945,"title":{},"body":{"modules/StoreModule.html":{},"dependencies.html":{}}}],["pointer",{"_index":1437,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["popover",{"_index":326,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["popover's",{"_index":327,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["popover'},{'name",{"_index":532,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["popover.component",{"_index":171,"title":{},"body":{"interfaces/AppOptions.html":{},"modules/FiltersPopoverModule.html":{}}}],["popover.component.html",{"_index":1862,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.scss",{"_index":1861,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts",{"_index":1860,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"coverage.html":{}}}],["popover.component.ts:17",{"_index":1870,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:23",{"_index":1867,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:28",{"_index":1876,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:33",{"_index":1874,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:38",{"_index":1875,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:43",{"_index":1877,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:48",{"_index":1878,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:53",{"_index":1884,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:58",{"_index":1883,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:65",{"_index":1882,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.component.ts:74",{"_index":1880,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["popover.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["popover.module.ts",{"_index":1900,"title":{},"body":{"modules/FiltersPopoverModule.html":{}}}],["popover/filters",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"coverage.html":{}}}],["popoverelement",{"_index":1601,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popoverelement?.nativeelement?.contains?.(target",{"_index":1727,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popoverportal",{"_index":1602,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["popup",{"_index":1775,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"changelog.html":{}}}],["portal",{"_index":1944,"title":{},"body":{"components/HeaderComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"index.html":{}}}],["portal's",{"_index":3567,"title":{},"body":{"changelog.html":{}}}],["portalmodule",{"_index":1769,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["portions",{"_index":3906,"title":{},"body":{"license.html":{}}}],["position",{"_index":846,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["position(value",{"_index":2098,"title":{},"body":{"classes/InitializationState.html":{}}}],["positions",{"_index":812,"title":{},"body":{"components/ContainerComponent.html":{}}}],["positionstrategy",{"_index":1699,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["possible",{"_index":3523,"title":{},"body":{"changelog.html":{}}}],["preclose",{"_index":289,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["prefered",{"_index":3061,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["preference",{"_index":301,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["preferences",{"_index":3387,"title":{},"body":{"changelog.html":{}}}],["prefix",{"_index":2421,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["preparation",{"_index":3616,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":3630,"title":{},"body":{"changelog.html":{}}}],["pressed",{"_index":1661,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["prev",{"_index":3083,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["prevbuttonid",{"_index":3037,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["prevel",{"_index":3068,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["prevent",{"_index":3275,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":3399,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":3078,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["previously",{"_index":3328,"title":{},"body":{"changelog.html":{}}}],["primary",{"_index":3043,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["private",{"_index":261,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{}}}],["process",{"_index":921,"title":{},"body":{"components/ContentComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["processed",{"_index":3559,"title":{},"body":{"changelog.html":{}}}],["processes",{"_index":800,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["processing",{"_index":3388,"title":{},"body":{"changelog.html":{}}}],["production",{"_index":3310,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":3292,"title":{},"body":{"changelog.html":{}}}],["progress",{"_index":2921,"title":{},"body":{"components/SpinnerOverlayComponent.html":{}}}],["project",{"_index":3604,"title":{},"body":{"changelog.html":{}}}],["projected",{"_index":807,"title":{},"body":{"components/ContainerComponent.html":{}}}],["projects",{"_index":3835,"title":{},"body":{"index.html":{}}}],["projects/.../action",{"_index":3823,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["projects/.../app",{"_index":3824,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../color",{"_index":3940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../container.component.ts",{"_index":3825,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../data",{"_index":3939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../data.state.ts",{"_index":3821,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../default",{"_index":3941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../drawer.component.ts",{"_index":3934,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../message.service.ts",{"_index":3944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../messages.ts",{"_index":3933,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../ontology",{"_index":3936,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../scene.state.ts",{"_index":3942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../spatial",{"_index":3937,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../store.module.ts",{"_index":3946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../theming.service.ts",{"_index":3943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../thumbnail",{"_index":3945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/ccf",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"components/SpatialSearchUiComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"modules/SpatialSearchUiModule.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":2049,"title":{},"body":{"classes/InitializationState.html":{}}}],["promise(resolve",{"_index":2046,"title":{},"body":{"classes/InitializationState.html":{}}}],["prop",{"_index":2008,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["properties",{"_index":119,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["property",{"_index":621,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"components/FiltersContentComponent.html":{},"classes/InitializationState.html":{},"components/ViewerComponent.html":{}}}],["property('expandable",{"_index":3950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["property('level",{"_index":3949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prostate",{"_index":1313,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["prostate.svg",{"_index":1314,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["protected",{"_index":410,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/WorkerDataSourceService.html":{}}}],["provide",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["provided",{"_index":821,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":423,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":1161,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["providerfilter",{"_index":1174,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["providerfilterdata",{"_index":1162,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["providerfilterquerystatus",{"_index":1130,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["providerfilters",{"_index":1784,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["providers",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"components/ContainerComponent.html":{},"modules/CoreModule.html":{},"modules/DrawerModule.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySelectionComponent.html":{},"modules/ThemingModule.html":{},"changelog.html":{}}}],["providertoken",{"_index":1348,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["provides",{"_index":2356,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["providing",{"_index":894,"title":{},"body":{"components/ContentComponent.html":{}}}],["public",{"_index":1778,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["publish",{"_index":3892,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":3296,"title":{},"body":{"changelog.html":{}}}],["publishreplay",{"_index":1059,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["publishreplay(1",{"_index":1112,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["purpose",{"_index":3914,"title":{},"body":{"license.html":{}}}],["pushed",{"_index":3444,"title":{},"body":{"changelog.html":{}}}],["px",{"_index":2090,"title":{},"body":{"classes/InitializationState.html":{}}}],["python",{"_index":3294,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["qs",{"_index":3800,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":3571,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":3346,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":1079,"title":{},"body":{"interfaces/DataStateModel.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["query",{"_index":1102,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["querydata",{"_index":1106,"title":{},"body":{"interfaces/DataStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["querydata(query",{"_index":3832,"title":{},"body":{"miscellaneous/functions.html":{}}}],["querying",{"_index":1098,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["querylist",{"_index":817,"title":{},"body":{"components/ContainerComponent.html":{}}}],["querystatus",{"_index":1176,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["question",{"_index":599,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["quickly",{"_index":3552,"title":{},"body":{"changelog.html":{}}}],["radio",{"_index":2829,"title":{},"body":{"components/SpatialSearchConfigComponent.html":{}}}],["radius",{"_index":1433,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["range",{"_index":1624,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["rangelabel",{"_index":1615,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["rank",{"_index":678,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"miscellaneous/variables.html":{}}}],["rank']).concat(otherblocks",{"_index":2258,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["rc.1",{"_index":3577,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":3802,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":3729,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":3752,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":3803,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":2431,"title":{},"body":{"modules/OntologySearchModule.html":{}}}],["read",{"_index":1681,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["readable",{"_index":3805,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{}}}],["ready",{"_index":1043,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["real",{"_index":3589,"title":{},"body":{"changelog.html":{}}}],["reason",{"_index":2951,"title":{},"body":{"modules/StoreModule.html":{}}}],["receive",{"_index":910,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{}}}],["receiving",{"_index":2275,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["record",{"_index":716,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["rectify",{"_index":3332,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":3436,"title":{},"body":{"changelog.html":{}}}],["reduction",{"_index":3266,"title":{},"body":{"changelog.html":{}}}],["refcount",{"_index":1060,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["reference",{"_index":795,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["referenceorgans",{"_index":2646,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["referenceorgans(state",{"_index":2656,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["references",{"_index":933,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{}}}],["referencing",{"_index":3062,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["refernced",{"_index":3361,"title":{},"body":{"changelog.html":{}}}],["reforgandata",{"_index":2728,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["reforgans",{"_index":2732,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["reforgans.has(node.reference_organ",{"_index":2740,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["refresh",{"_index":1832,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"changelog.html":{}}}],["refreshclicked",{"_index":1941,"title":{},"body":{"components/HeaderComponent.html":{}}}],["refreshes",{"_index":1808,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["refreshfilters",{"_index":1782,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["regions",{"_index":3633,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":1263,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"dependencies.html":{}}}],["registered",{"_index":1267,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["registericon",{"_index":2003,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registericon(definition",{"_index":2000,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registericonimpl",{"_index":2029,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registericonimpl(definition",{"_index":2004,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registering",{"_index":1980,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registers",{"_index":1997,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registration",{"_index":1256,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{},"index.html":{}}}],["registrations",{"_index":3426,"title":{},"body":{"changelog.html":{}}}],["registry",{"_index":1987,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["registry.state",{"_index":2947,"title":{},"body":{"modules/StoreModule.html":{}}}],["registry.state.ts",{"_index":1979,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"coverage.html":{}}}],["registry.state.ts:114",{"_index":2035,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:134",{"_index":2033,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:43",{"_index":2031,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:74",{"_index":2036,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry.state.ts:84",{"_index":2037,"title":{},"body":{"injectables/IconRegistryState.html":{}}}],["registry/default",{"_index":1248,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["registry/icon",{"_index":1978,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules/StoreModule.html":{},"coverage.html":{}}}],["registry[methodname",{"_index":2012,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["regular",{"_index":1197,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["related",{"_index":3464,"title":{},"body":{"changelog.html":{}}}],["relative",{"_index":887,"title":{},"body":{"components/ContainerComponent.html":{},"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{}}}],["release",{"_index":3323,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":2580,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["reliability",{"_index":3500,"title":{},"body":{"changelog.html":{}}}],["reload",{"_index":3194,"title":{},"body":{"components/ViewerComponent.html":{}}}],["reloads",{"_index":3395,"title":{},"body":{"changelog.html":{}}}],["rem",{"_index":1835,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["remoteapiendpoint",{"_index":460,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["remove",{"_index":620,"title":{},"body":{"components/CheckboxComponent.html":{},"injectables/ThemingService.html":{}}}],["removebox",{"_index":1864,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["removeclass",{"_index":3024,"title":{},"body":{"injectables/ThemingService.html":{}}}],["removed",{"_index":3379,"title":{},"body":{"changelog.html":{}}}],["removed/deleted",{"_index":1803,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["removes",{"_index":2988,"title":{},"body":{"injectables/ThemingService.html":{},"changelog.html":{}}}],["render",{"_index":1872,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["renderer",{"_index":3018,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer2",{"_index":3006,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer[methodname](overlay",{"_index":3026,"title":{},"body":{"injectables/ThemingService.html":{}}}],["renderer[methodname](root",{"_index":3025,"title":{},"body":{"injectables/ThemingService.html":{}}}],["rendering",{"_index":2550,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["repeat",{"_index":1061,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/HeaderComponent.html":{}}}],["repeat(1000",{"_index":1209,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["replay",{"_index":1100,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["replaysubject",{"_index":144,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["replaysubject(1",{"_index":245,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["replaysubject>(1",{"_index":1135,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["repository",{"_index":1113,"title":{},"body":{"interfaces/DataStateModel.html":{},"index.html":{}}}],["required",{"_index":3544,"title":{},"body":{"changelog.html":{}}}],["reset",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"modules/SpatialSearchUiModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}],["resets",{"_index":314,"title":{},"body":{"interfaces/AppOptions.html":{},"components/HeaderComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["resettheme",{"_index":2981,"title":{},"body":{"injectables/ThemingService.html":{}}}],["resetview",{"_index":334,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["resolve",{"_index":2042,"title":{},"body":{"classes/InitializationState.html":{}}}],["resolved",{"_index":3449,"title":{},"body":{"changelog.html":{}}}],["resolves",{"_index":834,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["respond",{"_index":3410,"title":{},"body":{"changelog.html":{}}}],["responsible",{"_index":2438,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["restriction",{"_index":3887,"title":{},"body":{"license.html":{}}}],["result",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"components/SpatialSearchUiComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"modules/SpatialSearchUiModule.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.ts",{"_index":2195,"title":{},"body":{"interfaces/ListResult.html":{},"coverage.html":{}}}],["resultlabel",{"_index":2564,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["results",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"components/SpatialSearchUiComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"modules/SpatialSearchUiModule.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.state",{"_index":167,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{}}}],["results.state.ts",{"_index":2197,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"coverage.html":{}}}],["results.state.ts:30",{"_index":2226,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:31",{"_index":2224,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:35",{"_index":2222,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:38",{"_index":2206,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:58",{"_index":2219,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:62",{"_index":2217,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:66",{"_index":2211,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:70",{"_index":2213,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:74",{"_index":2220,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results.state.ts:81",{"_index":2215,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["results/list",{"_index":166,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"coverage.html":{}}}],["results_browser",{"_index":2606,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resultsbrowser",{"_index":2549,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resultsbrowsercomponent",{"_index":541,"title":{"components/ResultsBrowserComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resultsbrowseritems",{"_index":2555,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["resultsbrowsermodule",{"_index":15,"title":{"modules/ResultsBrowserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ResultsBrowserModule.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":226,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppRootOverlayContainer.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["reuse",{"_index":1196,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["reverse",{"_index":1836,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["rgb",{"_index":692,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"dependencies.html":{}}}],["rgba",{"_index":679,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["rgba(0",{"_index":1461,"title":{},"body":{"components/DonorCardComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["rgba[3",{"_index":709,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":323,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["right.closeexpanded",{"_index":331,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["right.open",{"_index":330,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["right.px",{"_index":908,"title":{},"body":{"components/ContentComponent.html":{}}}],["right.svg",{"_index":1285,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["rightmargin",{"_index":901,"title":{},"body":{"components/ContentComponent.html":{}}}],["rights",{"_index":3889,"title":{},"body":{"license.html":{}}}],["ripple",{"_index":1441,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["root",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":513,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["root_states",{"_index":2949,"title":{},"body":{"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rootelement",{"_index":409,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["rootnode",{"_index":2440,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["rotates",{"_index":3397,"title":{},"body":{"changelog.html":{}}}],["round",{"_index":3488,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":3503,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":3252,"title":{},"body":{"changelog.html":{}}}],["row",{"_index":658,"title":{},"body":{"components/CheckboxComponent.html":{},"components/FiltersContentComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["ru/common",{"_index":3717,"title":{},"body":{"dependencies.html":{}}}],["ru/common/typings",{"_index":2474,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["ru/common/typings/immutability",{"_index":681,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ResultsBrowserComponent.html":{}}}],["rui",{"_index":3272,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rui_locations.jsonld",{"_index":3284,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":544,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["running",{"_index":1084,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/enumerations.html":{}}}],["runspatialsearchcomponent",{"_index":543,"title":{"components/RunSpatialSearchComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["runspatialsearchmodule",{"_index":1849,"title":{"modules/RunSpatialSearchModule.html":{}},"body":{"modules/FiltersContentModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["runtime",{"_index":1255,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["rxjs",{"_index":145,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/ToggleButtonComponent.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":149,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{}}}],["rxjsfilter",{"_index":1058,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["rxjsfilter((status",{"_index":1116,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["s",{"_index":1795,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["safedef",{"_index":1993,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["safehtml",{"_index":1981,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["saferesourceurl",{"_index":1982,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{}}}],["safeurl",{"_index":3182,"title":{},"body":{"components/ViewerComponent.html":{}}}],["sample",{"_index":3029,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["samples",{"_index":3179,"title":{},"body":{"components/ViewerComponent.html":{},"changelog.html":{}}}],["sanitize",{"_index":1990,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["sanitized",{"_index":1258,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/ViewerComponent.html":{}}}],["sanitizer",{"_index":1989,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{}}}],["sanitizer.bypasssecuritytrusthtml(html",{"_index":1995,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["sanitizer.bypasssecuritytrustresourceurl(url",{"_index":1994,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{}}}],["sans",{"_index":1967,"title":{},"body":{"components/HeaderComponent.html":{}}}],["sass:math",{"_index":1745,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["saved",{"_index":1812,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["saver",{"_index":3774,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":3605,"title":{},"body":{"changelog.html":{}}}],["scene",{"_index":258,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["scene.filter(node",{"_index":2736,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scene/scene.state",{"_index":2858,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"modules/StoreModule.html":{}}}],["scenedata",{"_index":1154,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["scenedata(filter",{"_index":1239,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["scenedataquerystatus",{"_index":1126,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["scenenodeclicked",{"_index":2648,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scenenodeclicked(undefined",{"_index":2660,"title":{},"body":{"injectables/SceneState.html":{}}}],["scenenodehovered",{"_index":2649,"title":{},"body":{"injectables/SceneState.html":{}}}],["scenenodehovered(node",{"_index":2665,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scenenodeunhover",{"_index":2650,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["scenestate",{"_index":168,"title":{"injectables/SceneState.html":{}},"body":{"interfaces/AppOptions.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scenestate.referenceorgans",{"_index":2906,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{}}}],["scenestatemodel",{"_index":2657,"title":{"interfaces/SceneStateModel.html":{}},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"coverage.html":{}}}],["scheduled",{"_index":3450,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":3608,"title":{},"body":{"changelog.html":{}}}],["scheme",{"_index":304,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["schemes",{"_index":3572,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":3867,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":2598,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["scrollbar",{"_index":2425,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["scrolled",{"_index":2600,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["scrollheight",{"_index":2612,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["scrolling",{"_index":891,"title":{},"body":{"components/ContainerComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["scrollingmodule",{"_index":2631,"title":{},"body":{"modules/ResultsBrowserModule.html":{}}}],["scrolltop",{"_index":2613,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["search",{"_index":547,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"interfaces/SearchResult.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"components/SpatialSearchUiComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"modules/SpatialSearchUiModule.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/SpinnerOverlayComponent.html":{},"modules/StoreModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["search'},{'name",{"_index":536,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["search.component",{"_index":2435,"title":{},"body":{"modules/OntologySearchModule.html":{},"modules/RunSpatialSearchModule.html":{}}}],["search.component.html",{"_index":2342,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/RunSpatialSearchComponent.html":{}}}],["search.component.scss",{"_index":2341,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/RunSpatialSearchComponent.html":{}}}],["search.component.ts",{"_index":2338,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/RunSpatialSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:107",{"_index":2375,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:14",{"_index":2638,"title":{},"body":{"components/RunSpatialSearchComponent.html":{}}}],["search.component.ts:19",{"_index":2637,"title":{},"body":{"components/RunSpatialSearchComponent.html":{}}}],["search.component.ts:23",{"_index":2357,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:29",{"_index":2358,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:34",{"_index":2387,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:40",{"_index":2385,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:45",{"_index":2354,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:53",{"_index":2390,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:60",{"_index":2369,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:78",{"_index":2363,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:88",{"_index":2379,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.component.ts:98",{"_index":2383,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.detached",{"_index":2422,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["search.module",{"_index":1858,"title":{},"body":{"modules/FiltersContentModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{}}}],["search.module.ts",{"_index":2429,"title":{},"body":{"modules/OntologySearchModule.html":{},"modules/RunSpatialSearchModule.html":{}}}],["search.service",{"_index":2394,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["search.service.ts",{"_index":2437,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["search.service.ts:100",{"_index":2460,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:111",{"_index":2450,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:128",{"_index":2456,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:30",{"_index":2473,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:31",{"_index":2472,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:34",{"_index":2469,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:37",{"_index":2471,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:39",{"_index":2466,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:50",{"_index":2447,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search.service.ts:63",{"_index":2462,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["search/ontology",{"_index":2333,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["search/run",{"_index":1857,"title":{},"body":{"modules/FiltersContentModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"coverage.html":{}}}],["searched",{"_index":2372,"title":{},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searches",{"_index":1797,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searching",{"_index":2340,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["searchresult",{"_index":2362,"title":{"interfaces/SearchResult.html":{}},"body":{"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"coverage.html":{}}}],["searchresults",{"_index":2483,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults.get(node.id",{"_index":2487,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchresults.set(node.id",{"_index":2488,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchservice",{"_index":2355,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["searchvalue",{"_index":2449,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["searchvalue.length",{"_index":2498,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["section",{"_index":563,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["section.description",{"_index":1425,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["section.label",{"_index":1424,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["section.sectionnumber",{"_index":3134,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["sectionnumber",{"_index":3132,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["sectionnumber).length",{"_index":3135,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["sections",{"_index":3125,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["see",{"_index":3256,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["select",{"_index":1553,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"changelog.html":{}}}],["select(spatialsearchuiselectors.organ",{"_index":2780,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["select(spatialsearchuiselectors.organs",{"_index":2778,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["select(spatialsearchuiselectors.sex",{"_index":2782,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["selectable",{"_index":1477,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["selected",{"_index":356,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{},"changelog.html":{}}}],["selected(ontologynode",{"_index":2524,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selectedanatomicalstructures",{"_index":2689,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["selectedorgan",{"_index":2767,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["selectedorgans",{"_index":2727,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["selectedreferenceorgans",{"_index":2647,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["selecting",{"_index":1523,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["selection",{"_index":158,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["selection'},{'name",{"_index":538,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["selection.component",{"_index":2540,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["selection.component.html",{"_index":2508,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.scss",{"_index":2507,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts",{"_index":2505,"title":{},"body":{"components/OntologySelectionComponent.html":{},"coverage.html":{}}}],["selection.component.ts:23",{"_index":2529,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:28",{"_index":2515,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:33",{"_index":2519,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:38",{"_index":2520,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:45",{"_index":2517,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:47",{"_index":2514,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:48",{"_index":2518,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:53",{"_index":2513,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:61",{"_index":2527,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:64",{"_index":2523,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.component.ts:75",{"_index":2525,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["selection.id",{"_index":364,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["selection.label",{"_index":380,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["selection.module",{"_index":2335,"title":{},"body":{"modules/OntologyExplorationModule.html":{}}}],["selection.module.ts",{"_index":2539,"title":{},"body":{"modules/OntologySelectionModule.html":{}}}],["selection.ts",{"_index":2503,"title":{},"body":{"interfaces/OntologySelection.html":{},"coverage.html":{}}}],["selection/deselection",{"_index":2592,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["selection/ontology",{"_index":2334,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"coverage.html":{}}}],["selectionchange",{"_index":586,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["selectionchanged",{"_index":1519,"title":{},"body":{"components/DropdownComponent.html":{}}}],["selectionchanged(value",{"_index":1529,"title":{},"body":{"components/DropdownComponent.html":{}}}],["selectionlabel",{"_index":204,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["selections",{"_index":578,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["selectionstring",{"_index":378,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["selectlistresult",{"_index":2202,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["selectlistresult(result",{"_index":2216,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["selector",{"_index":182,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"classes/SpatialSearchUiSelectors.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["selector(['spatialsearchuistate",{"_index":2893,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{}}}],["selector(['undefined",{"_index":2890,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{}}}],["selector([spatialsearchuiselectors.organid",{"_index":2905,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{}}}],["selector([spatialsearchuiselectors.sex",{"_index":2909,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{}}}],["selector([spatialsearchuistate",{"_index":2902,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{}}}],["selectoroptions",{"_index":2959,"title":{},"body":{"modules/StoreModule.html":{}}}],["selectors",{"_index":3066,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["selects",{"_index":1399,"title":{},"body":{"components/DonorCardComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{}}}],["selecttoken",{"_index":1357,"title":{},"body":{"injectables/DelegateDataSourceService.html":{}}}],["selecttoken(config",{"_index":1355,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["sell",{"_index":3896,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":3629,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":791,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/functions.html":{}}}],["sendcompletedto",{"_index":3677,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["sendcompletedto(subject",{"_index":1094,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["sendcompletedto(this._aggregatedataquerystatus",{"_index":1145,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._celltypetermoccurencesdataquerystatus",{"_index":1153,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._ontologytermoccurencesdataquerystatus",{"_index":1150,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._providerfilterquerystatus",{"_index":1164,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._scenedataquerystatus",{"_index":1156,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._technologyfilterquerystatus",{"_index":1160,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sendcompletedto(this._tissueblockdataquerystatus",{"_index":1141,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sender",{"_index":2265,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sending",{"_index":2169,"title":{},"body":{"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sending/receiving",{"_index":2140,"title":{},"body":{"classes/InitializationState.html":{}}}],["sendmessage",{"_index":2311,"title":{},"body":{"classes/MessageChannel.html":{}}}],["sendmessage(payload",{"_index":2280,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["sends",{"_index":1091,"title":{},"body":{"interfaces/DataStateModel.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"miscellaneous/functions.html":{}}}],["sendtoggle",{"_index":2170,"title":{},"body":{"classes/InitializationState.html":{}}}],["sennet",{"_index":3305,"title":{},"body":{"changelog.html":{}}}],["sent",{"_index":982,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/typealiases.html":{}}}],["serif",{"_index":1968,"title":{},"body":{"components/HeaderComponent.html":{}}}],["server",{"_index":3611,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":592,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["service.initialize(location",{"_index":3009,"title":{},"body":{"injectables/ThemingService.html":{}}}],["services/data",{"_index":1021,"title":{},"body":{"modules/CoreModule.html":{}}}],["services/message/message.service",{"_index":986,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{}}}],["services/theming/theming.module",{"_index":1024,"title":{},"body":{"modules/CoreModule.html":{}}}],["set",{"_index":293,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"components/ResultsBrowserComponent.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["set(['skin",{"_index":2688,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["set(reforgandata.filter(o",{"_index":2733,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["set(reforgans.map(o",{"_index":2713,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["set(selectedorgans.map(o",{"_index":2730,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["setlistresults",{"_index":2203,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["setlistresults(@payload('listresults",{"_index":2234,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["setlistresults(listresults",{"_index":2218,"title":{},"body":{"injectables/ListResultsState.html":{}}}],["setorgan",{"_index":2749,"title":{"classes/SetOrgan.html":{}},"body":{"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{},"coverage.html":{}}}],["setorgan(ctx",{"_index":2871,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["setorgan(undefined",{"_index":2867,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["setreferenceorgans",{"_index":2651,"title":{},"body":{"injectables/SceneState.html":{}}}],["setreferenceorgans(@payload('referenceorgans",{"_index":2694,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["setreferenceorgans(referenceorgans",{"_index":2668,"title":{},"body":{"injectables/SceneState.html":{}}}],["setrootelement",{"_index":413,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["setrootelement(el",{"_index":416,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["sets",{"_index":297,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{},"injectables/ThemingService.html":{}}}],["setscene",{"_index":2652,"title":{},"body":{"injectables/SceneState.html":{}}}],["setscene(@payload('scene",{"_index":2695,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["setscene(scene",{"_index":2671,"title":{},"body":{"injectables/SceneState.html":{}}}],["setselectedreferenceorgans",{"_index":2653,"title":{},"body":{"injectables/SceneState.html":{}}}],["setselectedreferenceorgans(@payload('selectedreferenceorgans",{"_index":2693,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["setselectedreferenceorgans(selectedreferenceorgans",{"_index":2674,"title":{},"body":{"injectables/SceneState.html":{}}}],["setsex",{"_index":2757,"title":{"classes/SetSex.html":{}},"body":{"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{},"coverage.html":{}}}],["setsex(ctx",{"_index":2862,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["settheme",{"_index":2982,"title":{},"body":{"injectables/ThemingService.html":{}}}],["settheme(theme",{"_index":3000,"title":{},"body":{"injectables/ThemingService.html":{}}}],["settimeout",{"_index":2142,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["setting",{"_index":2962,"title":{},"body":{"modules/StoreModule.html":{}}}],["settings",{"_index":1776,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{}}}],["settreemodel",{"_index":2446,"title":{},"body":{"injectables/OntologySearchService.html":{}}}],["settreemodel(treemodel",{"_index":2465,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["setup",{"_index":3422,"title":{},"body":{"changelog.html":{}}}],["sex",{"_index":1067,"title":{},"body":{"interfaces/DataStateModel.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["sex(state",{"_index":2899,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{}}}],["sexes",{"_index":3533,"title":{},"body":{"changelog.html":{}}}],["shadow",{"_index":1080,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["shall",{"_index":3903,"title":{},"body":{"license.html":{}}}],["shared",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"modules/OntologyTreeModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"classes/SpatialSearchUiSelectors.html":{},"modules/StoreModule.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["shared/analytics",{"_index":141,"title":{},"body":{"interfaces/AppOptions.html":{},"modules/CoreModule.html":{}}}],["shared/components/checkbox/checkbox.module",{"_index":1854,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["shared/components/drawer/drawer.module",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/components/drawer/drawer/drawer.component",{"_index":173,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["shared/components/dropdown/dropdown.module",{"_index":1855,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["shared/components/dual",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/FiltersContentModule.html":{}}}],["shared/components/run",{"_index":1856,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["shared/components/spatial",{"_index":1816,"title":{},"body":{"components/FiltersContentComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{}}}],["shared/components/spinner",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/components/thumbnail",{"_index":1498,"title":{},"body":{"modules/DonorCardModule.html":{}}}],["shared/components/viewer/viewer.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/src/lib/components/body",{"_index":151,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["shared/web",{"_index":481,"title":{},"body":{"components/AppWebComponent.html":{}}}],["sharereplay",{"_index":148,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["sharing",{"_index":1099,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/functions.html":{}}}],["shortest",{"_index":3781,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":1590,"title":{},"body":{"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["showing",{"_index":3558,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":1676,"title":{},"body":{"components/DualSliderComponent.html":{},"changelog.html":{}}}],["shows",{"_index":3349,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":934,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["sides",{"_index":3534,"title":{},"body":{"changelog.html":{}}}],["significant",{"_index":3415,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":3370,"title":{},"body":{"changelog.html":{}}}],["simplechanges",{"_index":1649,"title":{},"body":{"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ViewerComponent.html":{}}}],["simplifies",{"_index":3421,"title":{},"body":{"changelog.html":{}}}],["single",{"_index":2279,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["site",{"_index":1934,"title":{},"body":{"components/HeaderComponent.html":{},"components/ViewerComponent.html":{}}}],["sites",{"_index":3355,"title":{},"body":{"changelog.html":{}}}],["sizable",{"_index":3499,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":917,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["skin",{"_index":1315,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["skin.svg",{"_index":1316,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["skipself",{"_index":1012,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["slide",{"_index":3079,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["slideinhorizontaldropdown",{"_index":1543,"title":{},"body":{"components/DropdownComponent.html":{}}}],["slideinhorizontalslider",{"_index":1753,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider",{"_index":1591,"title":{},"body":{"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"dependencies.html":{}}}],["slider's",{"_index":1658,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider'},{'name",{"_index":529,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["slider.component",{"_index":1771,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["slider.component.html",{"_index":1594,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.scss",{"_index":1593,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts",{"_index":1589,"title":{},"body":{"components/DualSliderComponent.html":{},"coverage.html":{}}}],["slider.component.ts:122",{"_index":1650,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:136",{"_index":1665,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:152",{"_index":1652,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:165",{"_index":1633,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:184",{"_index":1669,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:201",{"_index":1667,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:212",{"_index":1646,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:226",{"_index":1663,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:23",{"_index":1686,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:243",{"_index":1657,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:29",{"_index":1682,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:34",{"_index":1621,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:39",{"_index":1625,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:44",{"_index":1623,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:49",{"_index":1628,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:54",{"_index":1675,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:59",{"_index":1678,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:64",{"_index":1677,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:69",{"_index":1672,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:74",{"_index":1671,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:79",{"_index":1688,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:90",{"_index":1679,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.component.ts:95",{"_index":1617,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.detached",{"_index":1755,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"modules/FiltersContentModule.html":{}}}],["slider.module.ts",{"_index":1767,"title":{},"body":{"modules/DualSliderModule.html":{}}}],["slider.wrapper",{"_index":1747,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slider/dual",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"coverage.html":{}}}],["slidervaluechanged",{"_index":1609,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["slidesoffsetafter",{"_index":3054,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["slidesoffsetbefore",{"_index":3052,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["slidesperview",{"_index":3055,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["slightly",{"_index":3330,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":3433,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":1317,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["snackbar",{"_index":259,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["snackbar.dismiss",{"_index":290,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["snapshot",{"_index":1194,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["software",{"_index":3836,"title":{},"body":{"index.html":{},"license.html":{}}}],["solid",{"_index":1571,"title":{},"body":{"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["solved",{"_index":3494,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":3549,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":3300,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":3429,"title":{},"body":{"changelog.html":{}}}],["sortby",{"_index":2228,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["sortby(searchresults",{"_index":2404,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortby(topblocks",{"_index":2257,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["sortbysynonymresult",{"_index":2349,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortbysynonymresult(this",{"_index":2378,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortlexically",{"_index":2350,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sortlexically(this",{"_index":2382,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sorts",{"_index":2380,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["source",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"modules/CheckboxModule.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"modules/CoreModule.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"modules/DropdownModule.html":{},"components/DualSliderComponent.html":{},"modules/DualSliderModule.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"modules/FiltersPopoverModule.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"modules/HeaderModule.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/OntologyExplorationModule.html":{},"components/OntologySearchComponent.html":{},"modules/OntologySearchModule.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"components/ResultsBrowserComponent.html":{},"modules/ResultsBrowserModule.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"components/SpatialSearchUiComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"modules/SpatialSearchUiModule.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"modules/StoreModule.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"injectables/WorkerDataSourceService.html":{}}}],["source.getcelltypetermoccurences().pipe(take(1)).subscribe(celltypetermsfulldata",{"_index":1201,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["source.getontologytermoccurences().pipe(take(1)).subscribe(ontologytermsfulldata",{"_index":1200,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["source.pipe",{"_index":1109,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["source.service",{"_index":1023,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["source.service.ts",{"_index":1347,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{}}}],["source.service.ts:10",{"_index":3217,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["source.service.ts:18",{"_index":3219,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["source.service.ts:20",{"_index":1358,"title":{},"body":{"injectables/DelegateDataSourceService.html":{}}}],["source.service.ts:23",{"_index":3222,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["source.worker",{"_index":3228,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["source.worker.ts",{"_index":3664,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["source/data",{"_index":1022,"title":{},"body":{"modules/CoreModule.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["source/worker",{"_index":3210,"title":{},"body":{"injectables/WorkerDataSourceService.html":{},"coverage.html":{}}}],["sources",{"_index":496,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{}}}],["sources.includes(msg.source",{"_index":2293,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["space",{"_index":1488,"title":{},"body":{"components/DonorCardComponent.html":{},"components/FiltersContentComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["spacebetween",{"_index":3056,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["sparc",{"_index":3425,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":3251,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["spatial",{"_index":545,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"modules/FiltersContentModule.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"modules/RunSpatialSearchModule.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"components/SpatialSearchUiComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"modules/SpatialSearchUiModule.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/SpinnerOverlayComponent.html":{},"modules/StoreModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{}}}],["spatial_search_ui",{"_index":2869,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["spatialscenenode",{"_index":1050,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["spatialsearchconfigbehaviorcomponent",{"_index":546,"title":{"components/SpatialSearchConfigBehaviorComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spatialsearchconfigbehaviormodule",{"_index":2801,"title":{"modules/SpatialSearchConfigBehaviorModule.html":{}},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{},"modules.html":{},"overview.html":{}}}],["spatialsearchconfigcomponent",{"_index":550,"title":{"components/SpatialSearchConfigComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"modules/SpatialSearchConfigModule.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spatialsearchconfigmodule",{"_index":2806,"title":{"modules/SpatialSearchConfigModule.html":{}},"body":{"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["spatialsearchdialog",{"_index":2773,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["spatialsearches",{"_index":1078,"title":{},"body":{"interfaces/DataStateModel.html":{},"miscellaneous/variables.html":{}}}],["spatialsearchfilters",{"_index":1785,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["spatialsearchlistitem",{"_index":1815,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["spatialsearchlistmodule",{"_index":1853,"title":{},"body":{"modules/FiltersContentModule.html":{}}}],["spatialsearchremoved",{"_index":1789,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["spatialsearchui",{"_index":2756,"title":{},"body":{"classes/SetOrgan.html":{},"classes/SetSex.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["spatialsearchuibehaviorcomponent",{"_index":552,"title":{"components/SpatialSearchUiBehaviorComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spatialsearchuibehaviormodule",{"_index":2840,"title":{"modules/SpatialSearchUiBehaviorModule.html":{}},"body":{"modules/SpatialSearchUiBehaviorModule.html":{},"modules.html":{},"overview.html":{}}}],["spatialsearchuicomponent",{"_index":554,"title":{"components/SpatialSearchUiComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"modules/SpatialSearchUiModule.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spatialsearchuimodel",{"_index":2854,"title":{"interfaces/SpatialSearchUiModel.html":{}},"body":{"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"coverage.html":{}}}],["spatialsearchuimodule",{"_index":2845,"title":{"modules/SpatialSearchUiModule.html":{}},"body":{"modules/SpatialSearchUiBehaviorModule.html":{},"modules/SpatialSearchUiModule.html":{},"modules.html":{},"overview.html":{}}}],["spatialsearchuiselectors",{"_index":2794,"title":{"classes/SpatialSearchUiSelectors.html":{}},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"classes/SpatialSearchUiSelectors.html":{},"coverage.html":{}}}],["spatialsearchuistate",{"_index":2859,"title":{"injectables/SpatialSearchUiState.html":{}},"body":{"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"modules/StoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["spec",{"_index":3336,"title":{},"body":{"changelog.html":{}}}],["spec.yaml",{"_index":3857,"title":{},"body":{"index.html":{}}}],["specific",{"_index":1002,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["specification",{"_index":3856,"title":{},"body":{"index.html":{}}}],["specified",{"_index":2291,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["specifying",{"_index":2273,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["speed",{"_index":3264,"title":{},"body":{"changelog.html":{}}}],["spinal",{"_index":1318,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["spinner",{"_index":231,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{}}}],["spinneractive",{"_index":233,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["spinneroverlaycomponent",{"_index":556,"title":{"components/SpinnerOverlayComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"modules/SpinnerOverlayModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spinneroverlaymodule",{"_index":16,"title":{"modules/SpinnerOverlayModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules.html":{},"overview.html":{}}}],["spinning",{"_index":3609,"title":{},"body":{"changelog.html":{}}}],["spleen",{"_index":1321,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"miscellaneous/variables.html":{}}}],["spleen.svg",{"_index":1322,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["sprint",{"_index":3453,"title":{},"body":{"changelog.html":{}}}],["stage",{"_index":3481,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":3311,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["staging.herokuapp.com",{"_index":3855,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":3490,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":3538,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":3613,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":3839,"title":{},"body":{"index.html":{}}}],["start",{"_index":853,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["start?.expanded",{"_index":967,"title":{},"body":{"components/ContentComponent.html":{}}}],["start?.opened",{"_index":966,"title":{},"body":{"components/ContentComponent.html":{}}}],["startdrawers",{"_index":876,"title":{},"body":{"components/ContainerComponent.html":{}}}],["startdrawers.length",{"_index":880,"title":{},"body":{"components/ContainerComponent.html":{}}}],["startdrawers[0",{"_index":884,"title":{},"body":{"components/ContainerComponent.html":{}}}],["started",{"_index":3239,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["startexpanded",{"_index":965,"title":{},"body":{"components/ContentComponent.html":{}}}],["starts",{"_index":3649,"title":{},"body":{"changelog.html":{}}}],["startup",{"_index":1253,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["startwith",{"_index":840,"title":{},"body":{"components/ContainerComponent.html":{},"components/OntologySearchComponent.html":{}}}],["stat",{"_index":2618,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["stat.count",{"_index":2616,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["stat.label",{"_index":2617,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["state",{"_index":236,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/ToggleButtonComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{}}}],["state('closed",{"_index":2082,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('collapsed",{"_index":2087,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('extended",{"_index":2091,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('false",{"_index":943,"title":{},"body":{"components/ContentComponent.html":{}}}],["state('full",{"_index":2092,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('half",{"_index":2088,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('open",{"_index":2081,"title":{},"body":{"classes/InitializationState.html":{}}}],["state('true",{"_index":945,"title":{},"body":{"components/ContentComponent.html":{}}}],["state.nodes[state.root",{"_index":2470,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["state.organid",{"_index":2904,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{}}}],["state.referenceorgans",{"_index":2692,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["state.sex",{"_index":2903,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{}}}],["statechange",{"_index":2113,"title":{},"body":{"classes/InitializationState.html":{}}}],["statecontext",{"_index":2857,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["statements",{"_index":3651,"title":{},"body":{"coverage.html":{}}}],["staterepository",{"_index":684,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["states",{"_index":927,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"modules/StoreModule.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["states.every(state",{"_index":1090,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["static",{"_index":190,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySelectionComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/ThemingService.html":{}}}],["stats",{"_index":2551,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["status",{"_index":1040,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["status.message",{"_index":1218,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["status.status",{"_index":1211,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["statusmessage",{"_index":1041,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["stay",{"_index":3647,"title":{},"body":{"changelog.html":{}}}],["step",{"_index":1719,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["still",{"_index":1871,"title":{},"body":{"components/FiltersPopoverComponent.html":{},"changelog.html":{}}}],["stomach",{"_index":1323,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["stomach.svg",{"_index":1324,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":353,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{},"modules/StoreModule.html":{}}}],["store/store.module",{"_index":1025,"title":{},"body":{"modules/CoreModule.html":{}}}],["storemodule",{"_index":1007,"title":{"modules/StoreModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/StoreModule.html":{},"modules.html":{},"overview.html":{}}}],["stories",{"_index":3602,"title":{},"body":{"changelog.html":{}}}],["strange",{"_index":2950,"title":{},"body":{"modules/StoreModule.html":{}}}],["stream",{"_index":3806,"title":{},"body":{"dependencies.html":{}}}],["streaming",{"_index":3804,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":127,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["stroke",{"_index":644,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["structure",{"_index":3460,"title":{},"body":{"changelog.html":{}}}],["structures",{"_index":361,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["style",{"_index":938,"title":{},"body":{"components/ContentComponent.html":{},"components/DropdownComponent.html":{},"components/FiltersContentComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["style.margin",{"_index":906,"title":{},"body":{"components/ContentComponent.html":{}}}],["styled",{"_index":1955,"title":{},"body":{"components/HeaderComponent.html":{}}}],["styles",{"_index":571,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["styles.getpropertyvalue(property",{"_index":2136,"title":{},"body":{"classes/InitializationState.html":{}}}],["styleurls",{"_index":185,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["styling",{"_index":3367,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":181,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"miscellaneous/typealiases.html":{}}}],["subject",{"_index":693,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["subject.next(dataquerystate.completed",{"_index":1095,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["sublicense",{"_index":3894,"title":{},"body":{"license.html":{}}}],["subscribe",{"_index":1212,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["subscription",{"_index":830,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["subscriptions",{"_index":780,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["substantial",{"_index":3905,"title":{},"body":{"license.html":{}}}],["successful",{"_index":1998,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["such",{"_index":1638,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["suffix",{"_index":2454,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["super",{"_index":1185,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["super(configstore",{"_index":497,"title":{},"body":{"components/AppWebComponent.html":{}}}],["super(globalconfig",{"_index":3224,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["super._createcontainer",{"_index":441,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["super.ngxsoninit",{"_index":2237,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["support",{"_index":3248,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":1262,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"modules.html":{}}}],["swiper",{"_index":3059,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"dependencies.html":{}}}],["swiper.use([navigation",{"_index":3109,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["swiper/angular",{"_index":3105,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["swiper/core",{"_index":3106,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["swiper/types",{"_index":3082,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["swipermodule",{"_index":3104,"title":{},"body":{"modules/ThumbnailCarouselModule.html":{}}}],["swiperoptions",{"_index":3050,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["switch",{"_index":950,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["switched",{"_index":3505,"title":{},"body":{"changelog.html":{}}}],["switchmap",{"_index":1062,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{}}}],["switchmap(query",{"_index":1110,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["switchmap(value",{"_index":2401,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["sync",{"_index":3398,"title":{},"body":{"changelog.html":{}}}],["syncexpanded(other",{"_index":2178,"title":{},"body":{"classes/InitializationState.html":{}}}],["syncs",{"_index":2175,"title":{},"body":{"classes/InitializationState.html":{}}}],["synonym",{"_index":2453,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["synonyms",{"_index":2381,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["t",{"_index":1107,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["tab",{"_index":390,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["table",{"_index":3716,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":3321,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":3715,"title":{},"body":{"coverage.html":{}}}],["tagging",{"_index":3536,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":1063,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["take(1",{"_index":1208,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["takewhile",{"_index":1064,"title":{},"body":{"interfaces/DataStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["takewhile((status",{"_index":1210,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tap",{"_index":1065,"title":{},"body":{"interfaces/DataStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["tap((status",{"_index":1205,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tap(next",{"_index":1111,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tap(organs",{"_index":2718,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["tap(results",{"_index":2259,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["tap(scene",{"_index":2747,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["target",{"_index":1640,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["technologies",{"_index":1075,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["technology",{"_index":1157,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{}}}],["technologyfilter",{"_index":1172,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["technologyfilterdata",{"_index":1158,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["technologyfilterquerystatus",{"_index":1128,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["technologyfilters",{"_index":1786,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["telemetry",{"_index":3392,"title":{},"body":{"changelog.html":{}}}],["tells",{"_index":624,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["template",{"_index":451,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["templateurl",{"_index":183,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["term",{"_index":1146,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["termdata",{"_index":2511,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["terms",{"_index":1133,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/OntologySelectionComponent.html":{}}}],["test",{"_index":1088,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["testing",{"_index":1086,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["text",{"_index":1451,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"interfaces/SearchResult.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["theme",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"injectables/ThemingService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["thememode",{"_index":244,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["themes",{"_index":3304,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":257,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/ThemingService.html":{},"changelog.html":{}}}],["theming.initialize(el",{"_index":264,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["theming.service",{"_index":2973,"title":{},"body":{"modules/ThemingModule.html":{}}}],["themingmodule",{"_index":1008,"title":{"modules/ThemingModule.html":{}},"body":{"modules/CoreModule.html":{},"modules/ThemingModule.html":{},"modules.html":{},"overview.html":{}}}],["themingservice",{"_index":159,"title":{"injectables/ThemingService.html":{}},"body":{"interfaces/AppOptions.html":{},"modules/ThemingModule.html":{},"injectables/ThemingService.html":{},"coverage.html":{},"overview.html":{}}}],["themingservice.initialize",{"_index":2974,"title":{},"body":{"modules/ThemingModule.html":{}}}],["themselves",{"_index":3064,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["thick",{"_index":1331,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thick.svg",{"_index":1332,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thin",{"_index":1333,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"miscellaneous/variables.html":{}}}],["thin.svg",{"_index":1334,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["things",{"_index":2241,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this._aggregatedataquerystatus$.next(dataquerystate.completed",{"_index":1188,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._aggregatedataquerystatus$.next(dataquerystate.running",{"_index":1231,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._aggregatedataquerystatus$.pipe(distinct",{"_index":1166,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._celltypetermoccurencesdataquerystatus$.next(dataquerystate.completed",{"_index":1190,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._celltypetermoccurencesdataquerystatus$.next(dataquerystate.running",{"_index":1237,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._celltypetermoccurencesdataquerystatus$.pipe(distinct",{"_index":1170,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._containerelement",{"_index":442,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this._expanded",{"_index":2105,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._measuredmargin",{"_index":2134,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._measuredwidth",{"_index":2124,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._ontologytermoccurencesdataquerystatus$.next(dataquerystate.completed",{"_index":1189,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._ontologytermoccurencesdataquerystatus$.next(dataquerystate.running",{"_index":1234,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._ontologytermoccurencesdataquerystatus$.pipe(distinct",{"_index":1168,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._opened",{"_index":2101,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._position",{"_index":2097,"title":{},"body":{"classes/InitializationState.html":{}}}],["this._providerfilterquerystatus$.next(dataquerystate.completed",{"_index":1193,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._providerfilterquerystatus$.next(dataquerystate.running",{"_index":1244,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._providerfilterquerystatus$.pipe(distinct",{"_index":1175,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._scenedataquerystatus$.next(dataquerystate.completed",{"_index":1191,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._scenedataquerystatus$.next(dataquerystate.running",{"_index":1240,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._scenedataquerystatus$.pipe(distinct",{"_index":1171,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._technologyfilterquerystatus$.next(dataquerystate.completed",{"_index":1192,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._technologyfilterquerystatus$.next(dataquerystate.running",{"_index":1242,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._technologyfilterquerystatus$.pipe(distinct",{"_index":1173,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._tissueblockdataquerystatus$.next(dataquerystate.completed",{"_index":1187,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._tissueblockdataquerystatus$.next(dataquerystate.running",{"_index":1227,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this._tissueblockdataquerystatus$.pipe(distinct",{"_index":1165,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.aggregatedata",{"_index":1144,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.aggregatedataquerystatus",{"_index":1178,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.animationsenabled",{"_index":956,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.appendtoroot",{"_index":433,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.applyfilters.emit(this.filters",{"_index":1826,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.applythemeclass(theme",{"_index":3014,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.applythemeclass(this.gettheme",{"_index":3017,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.applythemeclass(this.theme",{"_index":3013,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.atscrollbottom",{"_index":2615,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.attached",{"_index":424,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.bodyui.bounds",{"_index":339,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.bodyui.rotation",{"_index":337,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.bodyui.rotationx",{"_index":338,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.bodyui.target",{"_index":335,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.cdr.markforcheck",{"_index":869,"title":{},"body":{"components/ContainerComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["this.celltypeselectionlabel",{"_index":367,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.celltypetermoccurencesdata",{"_index":1152,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.celltypetermoccurencesdataquerystatus",{"_index":1180,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.celltypeterms",{"_index":283,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.celltypetreemodel",{"_index":285,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.channel",{"_index":860,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.asobservable",{"_index":2300,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.closed",{"_index":2302,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.complete",{"_index":2305,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.next",{"_index":2281,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.channel.sendmessage",{"_index":866,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["this.checked.emit(this.selected",{"_index":1410,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.close",{"_index":2799,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.closeiframeviewer",{"_index":393,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.colorassignments",{"_index":2245,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.colorassignments.assigncolor(node['@id",{"_index":2704,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.colorassignments.assigncolor(result.tissueblock.spatialentityid",{"_index":2235,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.colorassignments.colorassignments",{"_index":2248,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.colorassignments.unassigncolor(result.tissueblock.spatialentityid",{"_index":2236,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.consentservice.consent",{"_index":292,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.content",{"_index":871,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.changes.pipe(startwith(null)).subscribe",{"_index":870,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.first",{"_index":857,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content1.length",{"_index":859,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.content2.first",{"_index":858,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.contentsvisible",{"_index":1731,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.createselectionlabel(ontologyselection",{"_index":366,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.ctx.patchstate",{"_index":749,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.data.querystatus$.pipe",{"_index":234,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.data.state$.pipe(pluck('statusmessage",{"_index":239,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.data.updatefilter",{"_index":362,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.databaseready$.pipe(switchmap",{"_index":1228,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.databaseready$.pipe(take(1",{"_index":1213,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.dataservice.getreferenceorgans",{"_index":2724,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.dataservice.getreferenceorgans().pipe",{"_index":2710,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.datasource.getcelltypetreemodel().pipe(sharereplay(1",{"_index":286,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.datasource.getontologytreemodel().pipe(sharereplay(1",{"_index":282,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.datastate",{"_index":2243,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.datastate.scenedata",{"_index":2722,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.datastate.tissueblockdata",{"_index":2247,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.datastate.updatefilter",{"_index":2703,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.defaulttheme",{"_index":3011,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.deferred",{"_index":2075,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.dialog.open(spatialsearchconfigbehaviorcomponent",{"_index":1819,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.dialogref.close",{"_index":2800,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{}}}],["this.drawer",{"_index":3169,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.drawer.position",{"_index":3167,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.drawers",{"_index":953,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.drawers.changes.pipe(startwith(null)).subscribe",{"_index":864,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.drawers.toarray",{"_index":875,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.element",{"_index":3016,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.element.nativeelement",{"_index":2125,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expanded",{"_index":1411,"title":{},"body":{"components/DonorCardComponent.html":{},"classes/InitializationState.html":{}}}],["this.expandedchange.emit(this.expanded",{"_index":2167,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedstate",{"_index":2148,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.expandedstate2",{"_index":2118,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.faded",{"_index":971,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.filter$.pipe(querydata",{"_index":1139,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.filteredresults",{"_index":2398,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.filters",{"_index":1820,"title":{},"body":{"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{}}}],["this.filterschange.emit(filters",{"_index":1886,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.filterschange.emit(this.filters",{"_index":1824,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.filtersvisible",{"_index":1885,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.forcedunassignment.asobservable",{"_index":725,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.forcedunassignment.next",{"_index":740,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.formatlabel(node.label",{"_index":2490,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.formcontrol.reset",{"_index":2416,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.formcontrol.valuechanges",{"_index":2397,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.ga.event('expanded_toggled",{"_index":1412,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.ga.event('filter_added",{"_index":632,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.ga.event('filter_removed",{"_index":635,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.ga.event('filter_update",{"_index":1821,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.ga.event('filters_applied",{"_index":1825,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.ga.event('filters_reset",{"_index":1828,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["this.ga.event('link_clicked",{"_index":1413,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.ga.event('list_result_selected",{"_index":2605,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.ga.event('search",{"_index":2412,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.ga.event('selected_toggled",{"_index":1407,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.ga.event('selection_change",{"_index":1539,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.ga.event('set_organ",{"_index":2872,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["this.ga.event('set_sex",{"_index":2868,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["this.ga.event('slider_range_change",{"_index":1733,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.getarguments(definition",{"_index":2014,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.getindexofmatch(label",{"_index":2495,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getindexofmatch(node.label",{"_index":2489,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.getmessages().pipe(filter(msg",{"_index":2290,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.getmethodname(definition",{"_index":2011,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.getstate().filter",{"_index":1224,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.getworkerurl(true",{"_index":3225,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["this.globalconfig.getoption('header",{"_index":246,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.globalconfig.getoption('homeurl",{"_index":247,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.globalconfig.getoption('logindisabled",{"_index":250,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.globalconfig.getoption('logotooltip",{"_index":248,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.globalconfig.getoption('theme",{"_index":243,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.globalconfig.snapshot.hubmaptoken",{"_index":402,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.handlemessage(msg",{"_index":863,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.highvalue",{"_index":1711,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.initialized",{"_index":2074,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.set",{"_index":2141,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.valueof",{"_index":2149,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initialized.wait",{"_index":2171,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.initializesliderpopover",{"_index":1732,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.injector",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"injectables/ThemingService.html":{}}}],["this.injector.get(colorassignmentstate",{"_index":2246,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.injector.get(datastate",{"_index":2244,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.injector.get(listresultsstate",{"_index":2708,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.issliderinitialized",{"_index":1729,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.isslideropen",{"_index":1730,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.label}:${lowvalue}:${highvalue",{"_index":1735,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.label}:${value",{"_index":1540,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.leftmargin",{"_index":963,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.linkclick.emit(url",{"_index":1414,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.linkclicked.emit(link",{"_index":2610,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.listresultdeselected.next(result",{"_index":2609,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.listresults",{"_index":2707,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.listresults.highlightednodeid",{"_index":2725,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.listresults.highlightnode(node['@id",{"_index":2705,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.listresults.unhighlightnode",{"_index":2706,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.listresultselected.next(result",{"_index":2608,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.loading",{"_index":3198,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.locator.prepareexternalurl('0",{"_index":3231,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["this.lookup(nodes",{"_index":2481,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.lowvalue",{"_index":1709,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.margin2",{"_index":2121,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.measuredmargin",{"_index":2120,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.measuredwidth",{"_index":2172,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.messages",{"_index":2299,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.messages.pipe(filter(msg",{"_index":2287,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.nextbuttonid",{"_index":3071,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["this.nextmessageid",{"_index":2282,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.nodes$.pipe",{"_index":2479,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.ontologysearchservice.settreemodel(this.treemodel",{"_index":2531,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["this.ontologyselectionlabel",{"_index":365,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.ontologyservice.filter(value",{"_index":2402,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.ontologytermoccurencesdata",{"_index":1149,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.ontologytermoccurencesdataquerystatus",{"_index":1179,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.ontologyterms",{"_index":274,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.ontologytreemodel",{"_index":281,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.opened",{"_index":2146,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.openedchange.emit(this.opened",{"_index":2163,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.openedstate",{"_index":2147,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.options",{"_index":1713,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.options.ceil",{"_index":1723,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.options.floor",{"_index":1722,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.optionschanged",{"_index":1705,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.optionsvisible",{"_index":1538,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.organmatchessex(organ",{"_index":2911,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{}}}],["this.organvalidforsex(organid",{"_index":2865,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["this.original.children.length",{"_index":1930,"title":{},"body":{"classes/FlatNode.html":{}}}],["this.original.label",{"_index":1929,"title":{},"body":{"classes/FlatNode.html":{}}}],["this.overlayref",{"_index":1701,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.overlayref.detach",{"_index":1728,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.overlayref.dispose",{"_index":1724,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.patchstate",{"_index":1217,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.position",{"_index":2096,"title":{},"body":{"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.prevbuttonid",{"_index":3069,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["this.providerfilterdata",{"_index":1163,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.providerfilterquerystatus",{"_index":1183,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.registericonimpl(definition",{"_index":2001,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registericonimpl(safedef",{"_index":1996,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.registry",{"_index":2005,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["this.removebox",{"_index":1887,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["this.resetview",{"_index":333,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.resolve",{"_index":2047,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.resultlabel",{"_index":2607,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["this.rightmargin",{"_index":964,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.rootelement",{"_index":426,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.rootelement.nativeelement.appendchild(this._containerelement",{"_index":443,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.rootelement.nativeelement.removechild(this._containerelement",{"_index":425,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.rootelement.nativeelement.style.display",{"_index":427,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.rootelement.nativeelement.style.height",{"_index":431,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.rootelement.nativeelement.style.position",{"_index":429,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{}}}],["this.safeurl",{"_index":3197,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.scenedata",{"_index":1155,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.scenedataquerystatus",{"_index":1181,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.selected",{"_index":1406,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.selected.emit(node",{"_index":2415,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.selectedreferenceorgans",{"_index":2723,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.selection",{"_index":631,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["this.selection.filter(selection",{"_index":634,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["this.selectionchange.emit(this.selection",{"_index":636,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{}}}],["this.selectionchange.emit(value",{"_index":1541,"title":{},"body":{"components/DropdownComponent.html":{}}}],["this.selectionlabel",{"_index":368,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.sendtoggle",{"_index":2150,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.setlistresults(results",{"_index":2260,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.setreferenceorgans(organs",{"_index":2719,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.setscene(scene",{"_index":2748,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.setselectedreferenceorgans(organs.filter(organ",{"_index":2720,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.settheme(this.defaulttheme",{"_index":3015,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.snackbar.openfromcomponent(trackingpopupcomponent",{"_index":288,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.snapshot",{"_index":729,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.snapshot.colorpalette.concat",{"_index":734,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.sortbysynonymresult",{"_index":2405,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.sortlexically",{"_index":2406,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["this.source",{"_index":2283,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["this.source.getaggregateresults(filter",{"_index":1232,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getcelltypetermoccurences(filter",{"_index":1238,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getdatabasestatus()).pipe",{"_index":1204,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getdatasettechnologynames",{"_index":1243,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getontologytermoccurences(filter",{"_index":1235,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getprovidernames",{"_index":1245,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.getscene(filter",{"_index":1241,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.source.gettissueblockresults(filter",{"_index":1229,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.spatialsearchdialog.open(spatialsearchuibehaviorcomponent",{"_index":2798,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["this.state$.pipe(pluck('colorassignments",{"_index":726,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.state$.pipe(pluck('colorassignmentslist",{"_index":727,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["this.state$.pipe(pluck('filter",{"_index":1137,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.state$.pipe(pluck('highlightedid",{"_index":2678,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.state$.pipe(pluck('highlightednodeid",{"_index":2223,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.state$.pipe(pluck('listresults",{"_index":2225,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["this.state$.pipe(pluck('referenceorgans",{"_index":2680,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.state$.pipe(pluck('scene",{"_index":2682,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.state$.pipe(pluck('selectedreferenceorgans",{"_index":2684,"title":{},"body":{"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["this.state$.pipe(pluck('status",{"_index":1115,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.statechange.emit",{"_index":2173,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.store.selectsnapshot(scenestate.referenceorgans",{"_index":2876,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["this.subscriptions.add(channel.getmessagesfromsource(drawer).subscribe(msg",{"_index":3166,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["this.subscriptions.add(messages.subscribe(msg",{"_index":949,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.subscriptions.add(this.channel.getmessages().subscribe(msg",{"_index":862,"title":{},"body":{"components/ContainerComponent.html":{},"classes/InitializationState.html":{}}}],["this.subscriptions.unsubscribe",{"_index":872,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["this.syncexpanded(other",{"_index":2174,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.technologyfilterdata",{"_index":1159,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.technologyfilterquerystatus",{"_index":1182,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.theme",{"_index":3012,"title":{},"body":{"injectables/ThemingService.html":{}}}],["this.thememode$.next('dark",{"_index":306,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.thememode$.next('light",{"_index":307,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.thememode$.next(e.matches",{"_index":312,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.thememode$.next(this.islighttheme",{"_index":349,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.thememode$]).subscribe",{"_index":277,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.theming.gettheme().endswith('light",{"_index":227,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.theming.settheme(`${theme",{"_index":279,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.tissueblock.label",{"_index":1409,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["this.tissueblockdata",{"_index":1140,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.tissueblockdataquerystatus",{"_index":1177,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.tissuesections.filter(section",{"_index":3133,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["this.toggle(coercebooleanproperty(value",{"_index":2103,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggle(false",{"_index":2144,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggle(true",{"_index":2143,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(coercebooleanproperty(value",{"_index":2107,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(false",{"_index":2156,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.toggleexpanded(true",{"_index":2153,"title":{},"body":{"classes/InitializationState.html":{}}}],["this.tree.expandandselect(ontologynode",{"_index":2532,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["this.treemodel",{"_index":2478,"title":{},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["this.treemodel$.next(treemodel",{"_index":2477,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.treemodel$.pipe(map(state",{"_index":2467,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["this.treemodel?.nodes",{"_index":2499,"title":{},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["this.uid",{"_index":3084,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["this.updatefaded",{"_index":955,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.updatemargin(position",{"_index":961,"title":{},"body":{"components/ContentComponent.html":{}}}],["this.updatestatus",{"_index":1214,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.updatestatus(status",{"_index":1206,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.updateurl",{"_index":3196,"title":{},"body":{"components/ViewerComponent.html":{}}}],["this.url",{"_index":387,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.validatedrawers",{"_index":865,"title":{},"body":{"components/ContainerComponent.html":{}}}],["this.valuerange",{"_index":1715,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.valuerange[0",{"_index":1716,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.valuerange[1",{"_index":1718,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["this.vieweropen",{"_index":388,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["this.warmupdatabase",{"_index":1202,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["this.width",{"_index":2119,"title":{},"body":{"classes/InitializationState.html":{}}}],["those",{"_index":2285,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{}}}],["thread",{"_index":3948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["three",{"_index":660,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["through",{"_index":3551,"title":{},"body":{"changelog.html":{}}}],["throw",{"_index":494,"title":{},"body":{"components/AppWebComponent.html":{},"components/ContainerComponent.html":{},"modules/CoreModule.html":{}}}],["throwduplicatedrawerserror",{"_index":3704,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["throwduplicatedrawerserror('end",{"_index":883,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throwduplicatedrawerserror('start",{"_index":881,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throwduplicatedrawerserror(position",{"_index":852,"title":{},"body":{"components/ContainerComponent.html":{},"miscellaneous/functions.html":{}}}],["thrown",{"_index":851,"title":{},"body":{"components/ContainerComponent.html":{}}}],["throws",{"_index":847,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/ThemingService.html":{}}}],["thumbnail",{"_index":559,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["thumbnailcarouselcomponent",{"_index":558,"title":{"components/ThumbnailCarouselComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"modules/ThumbnailCarouselModule.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["thumbnailcarouselmodule",{"_index":1495,"title":{"modules/ThumbnailCarouselModule.html":{}},"body":{"modules/DonorCardModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules.html":{},"overview.html":{}}}],["thumbnails",{"_index":3030,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["thymus",{"_index":1325,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["thymus.svg",{"_index":1326,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["tick",{"_index":3137,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tied",{"_index":3462,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":3560,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":608,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["timeouts",{"_index":3276,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":3267,"title":{},"body":{"changelog.html":{}}}],["timing",{"_index":978,"title":{},"body":{"components/ContentComponent.html":{}}}],["tissue",{"_index":562,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"modules/DonorCardModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["tissueblock",{"_index":1374,"title":{},"body":{"components/DonorCardComponent.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["tissueblock.description",{"_index":1421,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["tissueblock.donor.description",{"_index":1417,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["tissueblock.donor.label",{"_index":1416,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["tissueblock.label",{"_index":1420,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["tissueblockdata",{"_index":1138,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tissueblockdata(filter",{"_index":1226,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tissueblockdataquerystatus",{"_index":1118,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["tissueblockresult",{"_index":1051,"title":{},"body":{"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"interfaces/ListResult.html":{}}}],["tissueblocks",{"_index":2252,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["tissues",{"_index":3120,"title":{},"body":{"components/TissueSectionVisComponent.html":{},"changelog.html":{}}}],["tissuesection",{"_index":3131,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tissuesectionexists",{"_index":3115,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tissuesectionexists(sectionnumber",{"_index":3127,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tissuesectionresult",{"_index":3118,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tissuesections",{"_index":3116,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["tissuesections]=\"tissueblock.sections",{"_index":1423,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["tissuesectionviscomponent",{"_index":561,"title":{"components/TissueSectionVisComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tissuesectionvismodule",{"_index":1496,"title":{"modules/TissueSectionVisModule.html":{}},"body":{"modules/DonorCardModule.html":{},"modules/TissueSectionVisModule.html":{},"modules.html":{},"overview.html":{}}}],["title",{"_index":1452,"title":{},"body":{"components/DonorCardComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["tmc",{"_index":1074,"title":{},"body":{"interfaces/DataStateModel.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["toggle",{"_index":566,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"modules/DrawerModule.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["toggle(opened",{"_index":2145,"title":{},"body":{"classes/InitializationState.html":{}}}],["togglebuttoncomponent",{"_index":565,"title":{"components/ToggleButtonComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"modules/DrawerModule.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toggled",{"_index":957,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"components/ToggleButtonComponent.html":{}}}],["toggleexpanded(expanded",{"_index":2159,"title":{},"body":{"classes/InitializationState.html":{}}}],["toggleexpansion",{"_index":1372,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["togglefiltervisible",{"_index":1865,"title":{},"body":{"components/FiltersPopoverComponent.html":{}}}],["toggleoptions",{"_index":1520,"title":{},"body":{"components/DropdownComponent.html":{}}}],["toggles",{"_index":346,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/InitializationState.html":{}}}],["togglescheme",{"_index":348,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["togglesliderpopover",{"_index":1610,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["token",{"_index":400,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/ThemingService.html":{},"miscellaneous/variables.html":{}}}],["token.length",{"_index":403,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["tool",{"_index":3491,"title":{},"body":{"changelog.html":{}}}],["toolbar",{"_index":3202,"title":{},"body":{"components/ViewerComponent.html":{}}}],["top",{"_index":1450,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["topblocks",{"_index":2250,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["topblocks.push",{"_index":2254,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["tort",{"_index":3923,"title":{},"body":{"license.html":{}}}],["total",{"_index":3123,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["totaltissuesections",{"_index":3117,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["totaltissuesections]=\"tissueblock.sectioncount",{"_index":1422,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["touch",{"_index":892,"title":{},"body":{"components/ContainerComponent.html":{},"components/DualSliderComponent.html":{}}}],["track",{"_index":195,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/ResultsBrowserComponent.html":{}}}],["tracking/telemetry",{"_index":3406,"title":{},"body":{"changelog.html":{}}}],["trackingpopupcomponent",{"_index":139,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["trackingpopupmodule",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["tracks",{"_index":2388,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["transform",{"_index":1556,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{}}}],["transition",{"_index":939,"title":{},"body":{"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/ToggleButtonComponent.html":{}}}],["transition('closed",{"_index":2083,"title":{},"body":{"classes/InitializationState.html":{}}}],["transition('false",{"_index":946,"title":{},"body":{"components/ContentComponent.html":{}}}],["translatey",{"_index":1576,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{}}}],["transparency",{"_index":3492,"title":{},"body":{"changelog.html":{}}}],["transparent",{"_index":1440,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["travel_explore",{"_index":2639,"title":{},"body":{"components/RunSpatialSearchComponent.html":{}}}],["travisci",{"_index":3508,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":445,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["tree'},{'name",{"_index":540,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["tree.component",{"_index":2530,"title":{},"body":{"components/OntologySelectionComponent.html":{},"modules/OntologyTreeModule.html":{}}}],["tree.component.ts",{"_index":3693,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["tree.module",{"_index":2337,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"modules/OntologySelectionModule.html":{}}}],["tree.module.ts",{"_index":2544,"title":{},"body":{"modules/OntologyTreeModule.html":{}}}],["tree/ontology",{"_index":2336,"title":{},"body":{"modules/OntologyExplorationModule.html":{},"components/OntologySelectionComponent.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["treemodel",{"_index":2441,"title":{},"body":{"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{}}}],["trigger",{"_index":940,"title":{},"body":{"components/ContentComponent.html":{},"classes/InitializationState.html":{}}}],["trigger('expandcollapse",{"_index":2086,"title":{},"body":{"classes/InitializationState.html":{}}}],["trigger('fadeinout",{"_index":942,"title":{},"body":{"components/ContentComponent.html":{}}}],["trigger('openclose",{"_index":2080,"title":{},"body":{"classes/InitializationState.html":{}}}],["triggered",{"_index":2377,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["true",{"_index":210,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"modules/ThemingModule.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":2015,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"changelog.html":{}}}],["ts",{"_index":3811,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":3814,"title":{},"body":{"dependencies.html":{}}}],["tube",{"_index":1283,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["tuned",{"_index":3648,"title":{},"body":{"changelog.html":{}}}],["tuple",{"_index":873,"title":{},"body":{"components/ContainerComponent.html":{}}}],["turn",{"_index":3479,"title":{},"body":{"changelog.html":{}}}],["turned",{"_index":3465,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":3463,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":3381,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":3570,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":126,"title":{},"body":{"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DefaultIconDefinition.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/ListResult.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/OntologySelection.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3931,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":486,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"components/OntologySearchComponent.html":{}}}],["types",{"_index":990,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["types/lru",{"_index":3753,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":438,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"classes/InitializationState.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":3619,"title":{},"body":{"changelog.html":{}}}],["ufl",{"_index":3458,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":553,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["ui'},{'name",{"_index":555,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["ui.actions",{"_index":2793,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["ui.actions.ts",{"_index":2752,"title":{},"body":{"classes/SetOrgan.html":{},"classes/SetSex.html":{},"coverage.html":{}}}],["ui.actions.ts:2",{"_index":2761,"title":{},"body":{"classes/SetSex.html":{}}}],["ui.actions.ts:8",{"_index":2754,"title":{},"body":{"classes/SetOrgan.html":{}}}],["ui.component",{"_index":153,"title":{},"body":{"interfaces/AppOptions.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"modules/SpatialSearchUiModule.html":{}}}],["ui.component.html",{"_index":2849,"title":{},"body":{"components/SpatialSearchUiComponent.html":{}}}],["ui.component.scss",{"_index":2848,"title":{},"body":{"components/SpatialSearchUiComponent.html":{}}}],["ui.component.ts",{"_index":2847,"title":{},"body":{"components/SpatialSearchUiComponent.html":{},"coverage.html":{}}}],["ui.component.ts:10",{"_index":2850,"title":{},"body":{"components/SpatialSearchUiComponent.html":{}}}],["ui.module",{"_index":2846,"title":{},"body":{"modules/SpatialSearchUiBehaviorModule.html":{}}}],["ui.module.ts",{"_index":2886,"title":{},"body":{"modules/SpatialSearchUiModule.html":{}}}],["ui.netlify.app",{"_index":3842,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":3852,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":3849,"title":{},"body":{"index.html":{}}}],["ui.selectors",{"_index":2795,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{}}}],["ui.selectors.ts",{"_index":2887,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{},"coverage.html":{}}}],["ui.selectors.ts:11",{"_index":2900,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{}}}],["ui.selectors.ts:16",{"_index":2894,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{}}}],["ui.selectors.ts:21",{"_index":2891,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{}}}],["ui.selectors.ts:30",{"_index":2898,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{}}}],["ui.selectors.ts:34",{"_index":2896,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{}}}],["ui.state",{"_index":2901,"title":{},"body":{"classes/SpatialSearchUiSelectors.html":{},"modules/StoreModule.html":{}}}],["ui.state.ts",{"_index":2855,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{},"coverage.html":{}}}],["ui.state.ts:26",{"_index":2914,"title":{},"body":{"injectables/SpatialSearchUiState.html":{}}}],["ui.state.ts:36",{"_index":2918,"title":{},"body":{"injectables/SpatialSearchUiState.html":{}}}],["ui.state.ts:51",{"_index":2916,"title":{},"body":{"injectables/SpatialSearchUiState.html":{}}}],["ui.state.ts:59",{"_index":2915,"title":{},"body":{"injectables/SpatialSearchUiState.html":{}}}],["ui/body",{"_index":152,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ui/organ",{"_index":3851,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":3850,"title":{},"body":{"index.html":{}}}],["ui/spatial",{"_index":2751,"title":{},"body":{"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"components/SpatialSearchUiComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"modules/SpatialSearchUiModule.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{},"modules/StoreModule.html":{},"coverage.html":{}}}],["uid",{"_index":3035,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["uievent",{"_index":2596,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["unassigncolor",{"_index":756,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["unassigncolor(@payload('key",{"_index":750,"title":{},"body":{"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{}}}],["unassigncolor(key",{"_index":761,"title":{},"body":{"injectables/ColorAssignmentState.html":{}}}],["unchecked",{"_index":625,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["undefined",{"_index":359,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/OntologySelection.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"interfaces/SpatialSearchUiModel.html":{},"classes/SpatialSearchUiSelectors.html":{},"injectables/SpatialSearchUiState.html":{}}}],["under",{"_index":1264,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["underline",{"_index":1554,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["unhighlightnode",{"_index":2204,"title":{},"body":{"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{}}}],["unique",{"_index":2262,"title":{},"body":{"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["university",{"_index":3869,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":483,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/FiltersContentComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{}}}],["unless",{"_index":1397,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["unlike",{"_index":1254,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{}}}],["unnecessary",{"_index":3394,"title":{},"body":{"changelog.html":{}}}],["unselect",{"_index":3435,"title":{},"body":{"changelog.html":{}}}],["unset",{"_index":3175,"title":{},"body":{"components/ToggleButtonComponent.html":{}}}],["until",{"_index":1683,"title":{},"body":{"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"changelog.html":{}}}],["unused",{"_index":3049,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["up",{"_index":805,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"injectables/OntologySearchService.html":{},"components/RunSpatialSearchComponent.html":{},"interfaces/SearchResult.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["update",{"_index":352,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"changelog.html":{}}}],["updated",{"_index":607,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DualSliderComponent.html":{},"changelog.html":{}}}],["updatefaded",{"_index":902,"title":{},"body":{"components/ContentComponent.html":{}}}],["updatefilter",{"_index":1783,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["updatefilter(@payload('filter",{"_index":1220,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["updatefilter(value",{"_index":1809,"title":{},"body":{"components/FiltersContentComponent.html":{}}}],["updatemargin",{"_index":903,"title":{},"body":{"components/ContentComponent.html":{}}}],["updatemargin(position",{"_index":928,"title":{},"body":{"components/ContentComponent.html":{}}}],["updateorgan",{"_index":2768,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["updates",{"_index":926,"title":{},"body":{"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["updatesex",{"_index":2769,"title":{},"body":{"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["updatestatus(@payload('status",{"_index":1216,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["updateurl",{"_index":3183,"title":{},"body":{"components/ViewerComponent.html":{}}}],["upgraded",{"_index":3556,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":3622,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":3408,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":3489,"title":{},"body":{"changelog.html":{}}}],["upper",{"_index":1627,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["ureter",{"_index":1327,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":212,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DefaultIconDefinition.html":{},"components/DonorCardComponent.html":{},"components/HeaderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["url('./data",{"_index":3227,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["url.createobjecturl(codeblob",{"_index":3237,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["url?.startswith(domain",{"_index":385,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["urls",{"_index":1991,"title":{},"body":{"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{}}}],["use",{"_index":1400,"title":{},"body":{"components/DonorCardComponent.html":{},"components/DualSliderComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"license.html":{}}}],["used",{"_index":193,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"changelog.html":{}}}],["useexisting",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"modules/CoreModule.html":{}}}],["useful",{"_index":849,"title":{},"body":{"components/ContainerComponent.html":{}}}],["user",{"_index":300,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"changelog.html":{},"index.html":{}}}],["user/os",{"_index":3386,"title":{},"body":{"changelog.html":{}}}],["useremoteapi",{"_index":461,"title":{},"body":{"components/AppWebComponent.html":{},"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{}}}],["users",{"_index":3636,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":351,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["usevalue",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/DrawerModule.html":{},"modules/ThemingModule.html":{}}}],["using",{"_index":3065,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{},"changelog.html":{}}}],["uterus",{"_index":1328,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["uterus.svg",{"_index":1329,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["utilities",{"_index":3391,"title":{},"body":{"changelog.html":{}}}],["utility",{"_index":3827,"title":{},"body":{"miscellaneous/functions.html":{}}}],["uuid",{"_index":3815,"title":{},"body":{"dependencies.html":{}}}],["v1.1",{"_index":3322,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":3478,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":3325,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":3316,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":3279,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":3249,"title":{},"body":{"changelog.html":{}}}],["v1/sparql",{"_index":3257,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":485,"title":{},"body":{"components/AppWebComponent.html":{}}}],["val.every(isstring",{"_index":489,"title":{},"body":{"components/AppWebComponent.html":{}}}],["valid",{"_index":2860,"title":{},"body":{"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{}}}],["validatedrawers",{"_index":784,"title":{},"body":{"components/ContainerComponent.html":{}}}],["validates",{"_index":811,"title":{},"body":{"components/ContainerComponent.html":{}}}],["validation",{"_index":2389,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["value",{"_index":420,"title":{},"body":{"injectables/AppRootOverlayContainer.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"injectables/ColorAssignmentState.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"injectables/SceneState.html":{},"interfaces/SearchResult.html":{},"classes/SetOrgan.html":{},"classes/SetSex.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["value.tolowercase",{"_index":2482,"title":{},"body":{"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{}}}],["valuechanges",{"_index":2396,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["valuechanges.pipe",{"_index":2399,"title":{},"body":{"components/OntologySearchComponent.html":{}}}],["valueof",{"_index":2043,"title":{},"body":{"classes/InitializationState.html":{}}}],["valuerange",{"_index":1611,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["values",{"_index":989,"title":{},"body":{"interfaces/ContentContainerChanged.html":{},"interfaces/DataStateModel.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":511,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["variable",{"_index":223,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DonorCardComponent.html":{},"coverage.html":{}}}],["variables",{"_index":3938,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vasculature",{"_index":1330,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":3337,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["very",{"_index":3546,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":3274,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":3409,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":1473,"title":{},"body":{"components/DonorCardComponent.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"interfaces/SearchResult.html":{},"changelog.html":{}}}],["viewchild",{"_index":133,"title":{},"body":{"interfaces/AppOptions.html":{},"components/DualSliderComponent.html":{},"components/OntologySelectionComponent.html":{}}}],["viewchild('bodyui",{"_index":189,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["viewchild('popover",{"_index":1680,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["viewchild(cdkportal",{"_index":1685,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["viewchild(ontologytreecomponent",{"_index":2528,"title":{},"body":{"components/OntologySelectionComponent.html":{}}}],["viewchildren",{"_index":839,"title":{},"body":{"components/ContainerComponent.html":{}}}],["viewchildren(contentcomponent",{"_index":824,"title":{},"body":{"components/ContainerComponent.html":{}}}],["viewer",{"_index":216,"title":{},"body":{"interfaces/AppOptions.html":{},"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{}}}],["viewer.component",{"_index":3209,"title":{},"body":{"modules/ViewerModule.html":{}}}],["viewer.component.html",{"_index":3181,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewer.component.scss",{"_index":3180,"title":{},"body":{"components/ViewerComponent.html":{}}}],["viewercomponent",{"_index":568,"title":{"components/ViewerComponent.html":{}},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"modules/ViewerModule.html":{},"coverage.html":{},"overview.html":{}}}],["viewermodule",{"_index":17,"title":{"modules/ViewerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ViewerModule.html":{},"modules.html":{},"overview.html":{}}}],["vieweropen",{"_index":224,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["viewport",{"_index":2599,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["views",{"_index":3401,"title":{},"body":{"changelog.html":{}}}],["virtual",{"_index":2553,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["vis",{"_index":3112,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis'},{'name",{"_index":564,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["vis.component",{"_index":3143,"title":{},"body":{"modules/TissueSectionVisModule.html":{}}}],["vis.component.html",{"_index":3114,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.component.scss",{"_index":3113,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.component.ts",{"_index":3111,"title":{},"body":{"components/TissueSectionVisComponent.html":{},"coverage.html":{}}}],["vis.component.ts:12",{"_index":3126,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.component.ts:15",{"_index":3122,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.component.ts:18",{"_index":3119,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.component.ts:21",{"_index":3128,"title":{},"body":{"components/TissueSectionVisComponent.html":{}}}],["vis.module",{"_index":1503,"title":{},"body":{"modules/DonorCardModule.html":{}}}],["vis.module.ts",{"_index":3142,"title":{},"body":{"modules/TissueSectionVisModule.html":{}}}],["vis/tissue",{"_index":1502,"title":{},"body":{"modules/DonorCardModule.html":{},"components/TissueSectionVisComponent.html":{},"modules/TissueSectionVisModule.html":{},"coverage.html":{}}}],["visibility",{"_index":1670,"title":{},"body":{"components/DualSliderComponent.html":{},"components/SpinnerOverlayComponent.html":{}}}],["visibility_off",{"_index":1339,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["visibility_on",{"_index":1337,"title":{},"body":{"interfaces/DefaultIconDefinition.html":{},"miscellaneous/variables.html":{}}}],["visible",{"_index":1537,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"components/SpinnerOverlayComponent.html":{}}}],["visited",{"_index":3098,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["visual",{"_index":3644,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":3427,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":3557,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppOptions.html":{},"injectables/AppRootOverlayContainer.html":{},"components/CheckboxComponent.html":{},"interfaces/Color.html":{},"injectables/ColorAssignmentState.html":{},"interfaces/ColorAssignmentStateModel.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"interfaces/IconDefinition.html":{},"injectables/IconRegistryState.html":{},"classes/InitializationState.html":{},"injectables/ListResultsState.html":{},"interfaces/ListResultsStateModel.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/OntologySearchComponent.html":{},"injectables/OntologySearchService.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"injectables/SceneState.html":{},"interfaces/SceneStateModel.html":{},"interfaces/SearchResult.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"interfaces/SpatialSearchUiModel.html":{},"injectables/SpatialSearchUiState.html":{},"injectables/ThemingService.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"miscellaneous/functions.html":{}}}],["vs",{"_index":3378,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":3643,"title":{},"body":{"changelog.html":{}}}],["w",{"_index":1478,"title":{},"body":{"components/DonorCardComponent.html":{}}}],["wait",{"_index":2045,"title":{},"body":{"classes/InitializationState.html":{}}}],["waits",{"_index":2168,"title":{},"body":{"classes/InitializationState.html":{}}}],["warming",{"_index":3273,"title":{},"body":{"changelog.html":{}}}],["warmupdatabase",{"_index":1203,"title":{},"body":{"interfaces/DataStateModel.html":{}}}],["warning",{"_index":3579,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":3910,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3907,"title":{},"body":{"license.html":{}}}],["watchoverflow",{"_index":3057,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["way",{"_index":2601,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["wc",{"_index":450,"title":{},"body":{"components/AppWebComponent.html":{}}}],["wc'},{'name",{"_index":514,"title":{},"body":{"components/AppWebComponent.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"components/OntologySearchComponent.html":{},"components/OntologySelectionComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigBehaviorComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiBehaviorComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{}}}],["web",{"_index":89,"title":{},"body":{"modules/AppModule.html":{},"components/AppWebComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["webcomponent",{"_index":3377,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":3755,"title":{},"body":{"dependencies.html":{}}}],["webkit",{"_index":890,"title":{},"body":{"components/ContainerComponent.html":{}}}],["webpages",{"_index":3341,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":3838,"title":{},"body":{"index.html":{}}}],["week",{"_index":3650,"title":{},"body":{"changelog.html":{}}}],["weight",{"_index":654,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/HeaderComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["well",{"_index":2552,"title":{},"body":{"components/ResultsBrowserComponent.html":{}}}],["whenever",{"_index":229,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"interfaces/DataStateModel.html":{},"components/DonorCardComponent.html":{},"classes/InitializationState.html":{},"miscellaneous/functions.html":{}}}],["whether",{"_index":205,"title":{},"body":{"interfaces/AppOptions.html":{},"components/CheckboxComponent.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DualSliderComponent.html":{},"components/FiltersPopoverComponent.html":{},"classes/FlatNode.html":{},"classes/InitializationState.html":{},"interfaces/Message.html":{},"classes/MessageChannel.html":{},"injectables/MessageService.html":{},"interfaces/MessageServiceConfig.html":{},"components/ResultsBrowserComponent.html":{},"components/SpinnerOverlayComponent.html":{},"injectables/ThemingService.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"license.html":{}}}],["white",{"_index":645,"title":{},"body":{"components/CheckboxComponent.html":{},"components/DonorCardComponent.html":{}}}],["whole",{"_index":3646,"title":{},"body":{"changelog.html":{}}}],["whose",{"_index":2360,"title":{},"body":{"components/OntologySearchComponent.html":{},"components/ThumbnailCarouselComponent.html":{}}}],["width",{"_index":661,"title":{},"body":{"components/CheckboxComponent.html":{},"components/ContentComponent.html":{},"interfaces/ContentContainerChanged.html":{},"components/DonorCardComponent.html":{},"interfaces/DrawerContainersChanged.html":{},"interfaces/DrawerInitialized.html":{},"interfaces/DrawerToggled.html":{},"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/FiltersContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/HeaderComponent.html":{},"classes/InitializationState.html":{},"components/OntologySearchComponent.html":{},"components/ResultsBrowserComponent.html":{},"components/SpatialSearchConfigComponent.html":{},"components/SpatialSearchUiComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{},"components/ToggleButtonComponent.html":{},"components/ViewerComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["widths",{"_index":2176,"title":{},"body":{"classes/InitializationState.html":{}}}],["window",{"_index":220,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["window.matchmedia",{"_index":296,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["window.matchmedia('(prefers",{"_index":302,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["window.open(url",{"_index":391,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["within",{"_index":2516,"title":{},"body":{"components/OntologySelectionComponent.html":{},"changelog.html":{}}}],["without",{"_index":826,"title":{},"body":{"components/ContainerComponent.html":{},"injectables/OntologySearchService.html":{},"interfaces/SearchResult.html":{},"changelog.html":{},"license.html":{}}}],["work",{"_index":3067,"title":{},"body":{"components/ThumbnailCarouselComponent.html":{}}}],["workaround",{"_index":2186,"title":{},"body":{"classes/InitializationState.html":{}}}],["worker",{"_index":1354,"title":{},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/WorkerDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["worker(url",{"_index":3226,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["workerccfdatabasedatasourceservice",{"_index":3211,"title":{},"body":{"injectables/WorkerDataSourceService.html":{}}}],["workerdatasourceservice",{"_index":1353,"title":{"injectables/WorkerDataSourceService.html":{}},"body":{"interfaces/DelegateDataSourceOptions.html":{},"injectables/DelegateDataSourceService.html":{},"injectables/WorkerDataSourceService.html":{},"coverage.html":{}}}],["workflows",{"_index":3510,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":3331,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":3527,"title":{},"body":{"changelog.html":{}}}],["wrap",{"_index":659,"title":{},"body":{"components/CheckboxComponent.html":{}}}],["wrapped",{"_index":823,"title":{},"body":{"components/ContainerComponent.html":{}}}],["wrapper",{"_index":1548,"title":{},"body":{"components/DropdownComponent.html":{},"components/DualSliderComponent.html":{},"components/OntologySearchComponent.html":{},"components/RunSpatialSearchComponent.html":{},"components/SpatialSearchConfigComponent.html":{}}}],["wrapper/container",{"_index":1752,"title":{},"body":{"components/DualSliderComponent.html":{}}}],["wrapping",{"_index":827,"title":{},"body":{"components/ContainerComponent.html":{},"components/ContentComponent.html":{}}}],["x",{"_index":340,"title":{},"body":{"interfaces/AppOptions.html":{},"components/TissueSectionVisComponent.html":{}}}],["y",{"_index":342,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ResultsBrowserComponent.html":{}}}],["yes",{"_index":2366,"title":{},"body":{"components/OntologySearchComponent.html":{},"miscellaneous/functions.html":{}}}],["youtube",{"_index":3356,"title":{},"body":{"changelog.html":{}}}],["z",{"_index":344,"title":{},"body":{"interfaces/AppOptions.html":{},"components/ContainerComponent.html":{},"components/ContentComponent.html":{},"components/FiltersPopoverComponent.html":{},"components/SpinnerOverlayComponent.html":{},"components/ThumbnailCarouselComponent.html":{},"components/TissueSectionVisComponent.html":{}}}],["zone.js",{"_index":3817,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"modules/CheckboxModule.html":{},"modules/CoreModule.html":{},"modules/DonorCardModule.html":{},"modules/DrawerModule.html":{},"modules/DropdownModule.html":{},"modules/DualSliderModule.html":{},"modules/FiltersContentModule.html":{},"modules/FiltersPopoverModule.html":{},"modules/HeaderModule.html":{},"modules/OntologyExplorationModule.html":{},"modules/OntologySearchModule.html":{},"modules/OntologySelectionModule.html":{},"modules/OntologyTreeModule.html":{},"modules/ResultsBrowserModule.html":{},"modules/RunSpatialSearchModule.html":{},"modules/SpatialSearchConfigBehaviorModule.html":{},"modules/SpatialSearchConfigModule.html":{},"modules/SpatialSearchUiBehaviorModule.html":{},"modules/SpatialSearchUiModule.html":{},"modules/SpinnerOverlayModule.html":{},"modules/ThemingModule.html":{},"modules/ThumbnailCarouselModule.html":{},"modules/TissueSectionVisModule.html":{},"modules/ViewerModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nAppModule -->\n\nDualSliderModule->AppModule\n\n\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nAppModule -->\n\nFiltersPopoverModule->AppModule\n\n\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nAppModule -->\n\nOntologyExplorationModule->AppModule\n\n\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nAppModule -->\n\nResultsBrowserModule->AppModule\n\n\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nAppModule -->\n\nSpinnerOverlayModule->AppModule\n\n\n\n\n\nViewerModule\n\nViewerModule\n\nAppModule -->\n\nViewerModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            AppWebComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CoreModule\n                        \n                        \n                            DrawerModule\n                        \n                        \n                            DualSliderModule\n                        \n                        \n                            FiltersPopoverModule\n                        \n                        \n                            OntologyExplorationModule\n                        \n                        \n                            ResultsBrowserModule\n                        \n                        \n                            SpinnerOverlayModule\n                        \n                        \n                            ViewerModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngDoBootstrap\n                        \n                    \n                \n            \n            \n                \nngDoBootstrap()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/app.module.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { AppRootOverlayContainer } from './core/services/app-root-overlay/app-root-overlay.service';\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { createCustomElement } from '@angular/elements';\nimport { DoBootstrap, Injector, NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BodyUiModule, InfoButtonModule, OrganSelectorModule, TrackingPopupModule } from 'ccf-shared';\n\nimport { DEFAULT_THEME } from '../app/core/services/theming/theming.service';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { FiltersPopoverModule } from './modules/filters/filters-popover/filters-popover.module';\nimport { OntologyExplorationModule } from './modules/ontology-exploration/ontology-exploration.module';\nimport { ResultsBrowserModule } from './modules/results-browser/results-browser/results-browser.module';\nimport { DrawerModule } from './shared/components/drawer/drawer.module';\nimport { DualSliderModule } from './shared/components/dual-slider/dual-slider.module';\nimport { SpinnerOverlayModule } from './shared/components/spinner-overlay/spinner-overlay.module';\nimport { ViewerModule } from './shared/components/viewer/viewer.module';\nimport { AppWebComponent } from './app-web-component.component';\n\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    CoreModule,\n    DrawerModule,\n    FiltersPopoverModule,\n    OntologyExplorationModule,\n    MatIconModule,\n    DualSliderModule,\n    ResultsBrowserModule,\n    SpinnerOverlayModule,\n    BodyUiModule,\n    OrganSelectorModule,\n    InfoButtonModule,\n    MatTooltipModule,\n    ViewerModule,\n    TrackingPopupModule,\n    MatSnackBarModule\n  ],\n  declarations: [AppComponent, AppWebComponent],\n  providers: [\n    { provide: DEFAULT_THEME, useValue: 'hubmap-theme-light' },\n    { provide: OverlayContainer, useExisting: AppRootOverlayContainer }\n  ],\n  entryComponents: [AppComponent]\n})\nexport class AppModule implements DoBootstrap {\n  constructor(private readonly injector: Injector) { }\n\n  ngDoBootstrap(): void {\n    const appElement = createCustomElement(AppWebComponent, {\n      injector: this.injector\n    });\n\n    customElements.define('ccf-eui', appElement);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppOptions.html":{"url":"interfaces/AppOptions.html","title":"interface - AppOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/app.component.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    CCFDatabaseOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            header\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            homeUrl\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            loginEnabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            logoTooltip\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            theme\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        homeUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loginEnabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loginEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logoTooltip\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logoTooltip:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, Injector, OnInit, ViewChild } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CCFDatabaseOptions, OntologyTreeModel } from 'ccf-database';\nimport { DataSourceService, GlobalConfigState, TrackingPopupComponent } from 'ccf-shared';\nimport { ConsentService } from 'ccf-shared/analytics';\nimport { combineLatest, Observable, ReplaySubject } from 'rxjs';\nimport { map, pluck, shareReplay } from 'rxjs/operators';\n\nimport { BodyUiComponent } from '../../../ccf-shared/src/lib/components/body-ui/body-ui.component';\nimport { environment } from '../environments/environment';\nimport { OntologySelection } from './core/models/ontology-selection';\nimport { AppRootOverlayContainer } from './core/services/app-root-overlay/app-root-overlay.service';\nimport { ThemingService } from './core/services/theming/theming.service';\nimport { DataQueryState, DataState } from './core/store/data/data.state';\nimport { ListResultsState } from './core/store/list-results/list-results.state';\nimport { SceneState } from './core/store/scene/scene.state';\nimport { FiltersPopoverComponent } from './modules/filters/filters-popover/filters-popover.component';\nimport { DrawerComponent } from './shared/components/drawer/drawer/drawer.component';\n\n\ninterface AppOptions extends CCFDatabaseOptions {\n  theme?: string;\n  header?: boolean;\n  homeUrl?: string;\n  logoTooltip?: string;\n  loginEnabled?: boolean;\n}\n\n\n/**\n * This is the main angular component that all the other components branch off from.\n * It is in charge of the header and drawer components who have many sub-components.\n */\n@Component({\n  selector: 'ccf-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppComponent implements OnInit {\n  @ViewChild('bodyUI', { static: false }) bodyUI: BodyUiComponent;\n\n  /**\n   * Used to keep track of the ontology label to be passed down to the\n   * results-browser component.\n   */\n  ontologySelectionLabel = 'body';\n\n  cellTypeSelectionLabel = 'cell';\n\n  selectionLabel = 'body | cell';\n\n  /**\n   * Whether or not organ carousel is open\n   */\n  organListVisible = true;\n\n  /**\n   * Emitted url object from the results browser item\n   */\n  url = '';\n\n  /**\n   * Acceptable viewer domains (others will open in new window)\n   */\n  acceptableViewerDomains: string[] = environment.acceptableViewerDomains || [];\n\n  /**\n   * Variable to keep track of whether the viewer is open\n   * or not\n   */\n  viewerOpen = false;\n\n  get isLightTheme(): boolean {\n    return this.theming.getTheme().endsWith('light');\n  }\n\n  /** Emits true whenever the overlay spinner should activate. */\n  readonly spinnerActive$ = this.data.queryStatus$.pipe(\n    map(state => state === DataQueryState.Running)\n  );\n\n  readonly loadingMessage$ = this.data.state$.pipe(pluck('statusMessage'));\n\n  readonly ontologyTerms$: Observable;\n  readonly ontologyTreeModel$: Observable;\n\n  readonly cellTypeTerms$: Observable;\n  readonly cellTypeTreeModel$: Observable;\n\n  readonly theme$ = this.globalConfig.getOption('theme');\n  readonly themeMode$ = new ReplaySubject(1);\n\n  readonly header$ = this.globalConfig.getOption('header');\n  readonly homeUrl$ = this.globalConfig.getOption('homeUrl');\n  readonly logoTooltip$ = this.globalConfig.getOption('logoTooltip');\n  readonly loginDisabled$ = this.globalConfig.getOption('loginDisabled');\n\n  /**\n   * Creates an instance of app component.\n   *\n   * @param data The data state.\n   */\n  constructor(\n    el: ElementRef, injector: Injector,\n    readonly data: DataState, readonly theming: ThemingService,\n    readonly scene: SceneState, readonly listResultsState: ListResultsState,\n    readonly consentService: ConsentService, readonly snackbar: MatSnackBar, overlay: AppRootOverlayContainer,\n    readonly dataSource: DataSourceService, private readonly globalConfig: GlobalConfigState, cdr: ChangeDetectorRef\n  ) {\n    theming.initialize(el, injector);\n    overlay.setRootElement(el);\n    data.tissueBlockData$.subscribe();\n    data.aggregateData$.subscribe();\n    data.ontologyTermOccurencesData$.subscribe();\n    data.cellTypeTermOccurencesData$.subscribe();\n    data.sceneData$.subscribe();\n    data.filter$.subscribe();\n    data.technologyFilterData$.subscribe();\n    data.providerFilterData$.subscribe();\n    this.ontologyTerms$ = data.filter$.pipe(pluck('ontologyTerms'));\n\n    combineLatest([this.theme$, this.themeMode$]).subscribe(\n      ([theme, mode]) => {\n        this.theming.setTheme(`${theme}-theme-${mode}`);\n        cdr.markForCheck();\n      }\n    );\n\n    this.ontologyTreeModel$ = this.dataSource.getOntologyTreeModel().pipe(shareReplay(1));\n    this.cellTypeTerms$ = data.filter$.pipe(pluck('cellTypeTerms'));\n    this.cellTypeTreeModel$ = this.dataSource.getCellTypeTreeModel().pipe(shareReplay(1));\n  }\n\n  ngOnInit(): void {\n    const snackBar = this.snackbar.openFromComponent(TrackingPopupComponent, {\n      data: {\n        preClose: () => {\n          snackBar.dismiss();\n        }\n      },\n      duration: this.consentService.consent === 'not-set' ? Infinity : 3000\n    });\n\n    if (window.matchMedia) {\n      // Sets initial theme according to user theme preference\n      if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n        this.themeMode$.next('dark');\n      } else {\n        this.themeMode$.next('light');\n      }\n\n      // Listens for changes in user theme preference\n      window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', e => {\n        this.themeMode$.next(e.matches ? 'dark' : 'light');\n      });\n    } else {\n      this.themeMode$.next('light');\n    }\n  }\n\n  /**\n   * Resets the drawers and filter components to their default state.\n   *\n   * @param left The left drawer component gets passed in so we can call it's methods to control it's state\n   * @param right The right drawer component gets passed in so we can call it's methods to control it's state\n   * @param filterbox The filter's popover component gets passed in so we can control it's popover's state\n   */\n  reset(\n    left: DrawerComponent,\n    right: DrawerComponent,\n    filterbox: FiltersPopoverComponent\n  ): void {\n    left.open();\n    left.closeExpanded();\n    right.open();\n    right.closeExpanded();\n    filterbox.removeBox();\n    this.resetView();\n  }\n\n  resetView(): void {\n    this.bodyUI.target = [0, 0, 0];\n    this.bodyUI.rotation = 0;\n    this.bodyUI.rotationX = 0;\n    this.bodyUI.bounds = { x: 2.2, y: 2, z: 0.4 };\n  }\n\n  /**\n   * Toggles scheme between light and dark mode\n   */\n  toggleScheme(): void {\n    this.themeMode$.next(this.isLightTheme ? 'dark' : 'light');\n  }\n\n  /**\n   * Captures changes in the ontologySelection and uses them to update the results-browser label\n   * and the filter object in the data store.\n   *\n   * @param ontologySelection the list of currently selected organ nodes\n   */\n  ontologySelected(ontologySelection: OntologySelection[] | undefined, type: 'anatomical-structures' | 'cell-type'): void {\n    if (ontologySelection) {\n      if (type === 'anatomical-structures') {\n        this.data.updateFilter({ ontologyTerms: ontologySelection.map(selection => selection.id) });\n        this.ontologySelectionLabel = this.createSelectionLabel(ontologySelection);\n      } else {\n        this.data.updateFilter({ cellTypeTerms: ontologySelection.map(selection => selection.id) });\n        this.cellTypeSelectionLabel = this.createSelectionLabel(ontologySelection);\n      }\n      if (this.ontologySelectionLabel && this.cellTypeSelectionLabel) {\n        this.selectionLabel = `${this.ontologySelectionLabel} | ${this.cellTypeSelectionLabel}`;\n      } else if (this.ontologySelectionLabel) {\n        this.selectionLabel = `${this.ontologySelectionLabel}`;\n      } else if (this.cellTypeSelectionLabel) {\n        this.selectionLabel = `${this.cellTypeSelectionLabel}`;\n      } else {\n        this.selectionLabel = '';\n      }\n      if (ontologySelection[0] && ontologySelection[0].label === 'body') {\n        this.resetView();\n      }\n      return;\n    }\n\n    this.data.updateFilter({ ontologyTerms: [], cellTypeTerms: [] });\n    this.ontologySelectionLabel = '';\n    this.cellTypeSelectionLabel = '';\n  }\n\n  /**\n   * Creates selection label for the results-browser to display based on an\n   * array of selected ontology nodes.\n   */\n  createSelectionLabel(ontolgySelection: OntologySelection[]): string {\n    if (ontolgySelection.length === 0) {\n      return '';\n    }\n\n    if (ontolgySelection.length === 1) {\n      return ontolgySelection[0].label;\n    }\n\n    let selectionString = '';\n    ontolgySelection.forEach((selection, index) => {\n      selectionString += selection.label;\n\n      // Don't add a comma if it's the last item in the array.\n      if (index  url?.startsWith(domain));\n    if (isWhitelisted) {\n      this.url = url;\n      this.viewerOpen = !!url;\n    } else {\n      // Open link in new tab\n      window.open(url, '_blank');\n      this.closeiFrameViewer();\n    }\n  }\n\n  /**\n   * Function to easily close the iFrame viewer.\n   */\n  closeiFrameViewer(): void {\n    this.viewerOpen = false;\n  }\n\n  /**\n   * Gets login token\n   */\n  get loggedIn(): boolean {\n    const token = this.globalConfig.snapshot.hubmapToken ?? '';\n    return token.length > 0;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppRootOverlayContainer.html":{"url":"injectables/AppRootOverlayContainer.html","title":"injectable - AppRootOverlayContainer","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppRootOverlayContainer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    OverlayContainer\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                attached\n                            \n                            \n                                    Private\n                                rootElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _createContainer\n                            \n                            \n                                    Private\n                                appendToRoot\n                            \n                            \n                                setRootElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        _createContainer\n                        \n                    \n                \n            \n            \n                \n                    \n                    _createContainer()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        appendToRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    appendToRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setRootElement\n                        \n                    \n                \n            \n            \n                \nsetRootElement(el: ElementRef)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n                                    \n                                            ElementRef\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        attached\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        rootElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { OverlayContainer } from '@angular/cdk/overlay';\nimport { Injectable, ElementRef } from '@angular/core';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppRootOverlayContainer extends OverlayContainer {\n  private rootElement: ElementRef;\n  private attached = false;\n\n  setRootElement(el: ElementRef): void {\n    if (this.attached) {\n      this.rootElement.nativeElement.removeChild(this._containerElement);\n      this.attached = false;\n    }\n\n    this.rootElement = el;\n    this.rootElement.nativeElement.style.display = 'block';\n    this.rootElement.nativeElement.style.position = 'contents';\n    this.rootElement.nativeElement.style.height = '100%';\n    this.appendToRoot();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  protected _createContainer(): void {\n    super._createContainer();\n    this.appendToRoot();\n  }\n\n  private appendToRoot(): void {\n    if (!this._containerElement || !this.rootElement) {\n      return;\n    }\n\n    this.rootElement.nativeElement.appendChild(this._containerElement);\n    this.attached = true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppWebComponent.html":{"url":"components/AppWebComponent.html","title":"component - AppWebComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppWebComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/app-web-component.component.ts\n\n\n\n\n    \n        Extends\n    \n    \n            BaseWebComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-root-wc\n            \n\n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                initialized\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dataSources\n                            \n                            \n                                header\n                            \n                            \n                                homeUrl\n                            \n                            \n                                hubmapAssetUrl\n                            \n                            \n                                hubmapDataService\n                            \n                            \n                                hubmapDataUrl\n                            \n                            \n                                hubmapPortalUrl\n                            \n                            \n                                hubmapToken\n                            \n                            \n                                loginDisabled\n                            \n                            \n                                logoTooltip\n                            \n                            \n                                remoteApiEndpoint\n                            \n                            \n                                theme\n                            \n                            \n                                useRemoteApi\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(configStore: GlobalConfigState, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/app-web-component.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configStore\n                                                  \n                                                        \n                                                                    GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        dataSources\n                    \n                \n                \n                    \n                        Type :     string | string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        header\n                    \n                \n                \n                    \n                        Type :     string | boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        homeUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:43\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapAssetUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapDataService\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapDataUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapPortalUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hubmapToken\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loginDisabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logoTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        remoteApiEndpoint\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        useRemoteApi\n                    \n                \n                \n                    \n                        Type :     string | boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/app-web-component.component.ts:39\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/app-web-component.component.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input } from '@angular/core';\nimport { GlobalConfigState } from 'ccf-shared';\nimport { BaseWebComponent, BUILTIN_PARSERS, GenericGlobalConfig } from 'ccf-shared/web-components';\n\nimport { environment } from '../environments/environment';\n\n\nfunction parseDataSources(value: unknown): string[] {\n  const isString = (val: unknown): val is string => typeof val === 'string';\n  const isStringArray = (val: unknown): val is string[] => Array.isArray(val) && val.every(isString);\n\n  if (typeof value === 'string') {\n    const json = BUILTIN_PARSERS.json(value);\n    if (isStringArray(json)) {\n      return json;\n    }\n  } else if (isStringArray(value)) {\n    return value;\n  }\n\n  throw new Error('Invalid data sources');\n}\n\n\n@Component({\n  selector: 'ccf-root-wc',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppWebComponent extends BaseWebComponent {\n  @Input() dataSources: string | string[];\n\n  @Input() hubmapDataService: string;\n  @Input() hubmapDataUrl: string;\n  @Input() hubmapAssetUrl: string;\n  @Input() hubmapToken: string;\n  @Input() hubmapPortalUrl: string;\n\n  @Input() useRemoteApi: string | boolean;\n  @Input() remoteApiEndpoint: string;\n  @Input() theme: string;\n  @Input() header: string | boolean;\n  @Input() homeUrl: string;\n  @Input() logoTooltip: string;\n  @Input() loginDisabled: boolean;\n\n  initialized: boolean;\n\n  constructor(\n    configStore: GlobalConfigState,\n    cdr: ChangeDetectorRef\n  ) {\n    super(configStore, cdr, {\n      initialDelay: 10,\n\n      initialConfig: {\n        ...environment.dbOptions,\n        ...globalThis['dbOptions'],\n        ...environment.customization\n      },\n      parse: {\n        dataSources: parseDataSources,\n        useRemoteApi: BUILTIN_PARSERS.boolean,\n        header: BUILTIN_PARSERS.boolean,\n        loginDisabled: BUILTIN_PARSERS.boolean\n      }\n    });\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpatialSearchUiBehaviorComponent', 'selector': 'ccf-spatial-search-ui-behavior'},{'name': 'SpatialSearchUiComponent', 'selector': 'ccf-spatial-search-ui'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppWebComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxComponent.html":{"url":"components/CheckboxComponent.html","title":"component - CheckboxComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CheckboxComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts\n\n\n\n    \n        Description\n    \n    \n        Creates a labeled group of checkboxes and emits a current list of selections whenever a selection changes.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-checkbox\n            \n\n            \n                styleUrls\n                ./checkbox.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filterOnChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                columns\n                            \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of checkbox component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        columns\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:33\n                            \n                        \n                \n                    \n                        Number of columns\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:18\n                            \n                        \n                \n                    \n                        The label that describes the overall question the checkbox is asking\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:23\n                            \n                        \n                \n                    \n                        Used to generate the individual checkboxes and their individual labels\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:28\n                            \n                        \n                \n                    \n                        A list of the checkboxes the user has checked. To be updated any time a checkbox changes.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:38\n                            \n                        \n                \n                    \n                        Any time a checkbox changes we emit that value so the parent component has that information\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filterOnChange\n                        \n                    \n                \n            \n            \n                \nfilterOnChange(event: MatCheckboxChange, option: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts:53\n                \n            \n\n\n            \n                \n                    This method captures checkbox events and decides whether to add or remove a filter selection based on the checked property\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatCheckboxChange\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event object from the checkbox that contains the boolean property 'checked'\n\n                                    \n                                \n                                \n                                    option\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Tells us which option was checked or unchecked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatCheckboxChange } from '@angular/material/checkbox';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Creates a labeled group of checkboxes and emits a current list of selections whenever a selection changes.\n */\n@Component({\n  selector: 'ccf-checkbox',\n  templateUrl: './checkbox.component.html',\n  styleUrls: ['./checkbox.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CheckboxComponent {\n  /**\n   * The label that describes the overall question the checkbox is asking\n   */\n  @Input() label: string;\n\n  /**\n   * Used to generate the individual checkboxes and their individual labels\n   */\n  @Input() options: string[];\n\n  /**\n   * A list of the checkboxes the user has checked. To be updated any time a checkbox changes.\n   */\n  @Input() selection: string[] = [];\n\n  /**\n   * Number of columns\n   */\n  @Input() columns = 3;\n\n  /**\n   * Any time a checkbox changes we emit that value so the parent component has that information\n   */\n  @Output() readonly selectionChange = new EventEmitter();\n\n  /**\n   * Creates an instance of checkbox component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * This method captures checkbox events and decides whether to add or remove a filter selection based on the checked property\n   *\n   * @param event Event object from the checkbox that contains the boolean property 'checked'\n   * @param option Tells us which option was checked or unchecked\n   */\n  filterOnChange(event: MatCheckboxChange, option: string): void {\n    const checked = event.checked;\n\n    if (checked) {\n      this.selection = [...this.selection, option];\n      this.ga.event('filter_added', 'filter_checkbox', option);\n    } else {\n      this.selection = this.selection.filter(selection => selection !== option);\n      this.ga.event('filter_removed', 'filter_checkbox', option);\n    }\n\n    this.selectionChange.emit(this.selection);\n  }\n}\n\n    \n\n    \n        \n  {{ label }}\n\n  \n    \n      \n        {{ option }}\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./checkbox.component.scss\n                \n                ::ng-deep  .mat-checkbox.mat-accent {\n  .mat-checkbox-checkmark-path {\n    stroke: white !important;\n  }\n\n  .mat-checkbox-inner-container {\n    margin-right: 1rem;\n  }\n}\n\n.filter-label {\n  margin-bottom: 0.5rem;\n  font-weight: bold;\n}\n\n.options-container {\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n\n  &.three {\n    .option {\n      width: 33%;\n    }\n  }\n\n  &.four {\n    .option {\n      width: 25%;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}                    {{ option }}            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpatialSearchUiBehaviorComponent', 'selector': 'ccf-spatial-search-ui-behavior'},{'name': 'SpatialSearchUiComponent', 'selector': 'ccf-spatial-search-ui'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CheckboxModule.html":{"url":"modules/CheckboxModule.html","title":"module - CheckboxModule","body":"\n                   \n\n\n\n\n    Modules\n    CheckboxModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CheckboxModule\n\n\n\ncluster_CheckboxModule_declarations\n\n\n\ncluster_CheckboxModule_exports\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nCheckboxModule -->\n\nCheckboxComponent->CheckboxModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nCheckboxModule->CheckboxComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/checkbox/checkbox.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CheckboxComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CheckboxComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { CheckboxComponent } from './checkbox.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatCheckboxModule],\n  declarations: [CheckboxComponent],\n  exports: [CheckboxComponent]\n})\nexport class CheckboxModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Color.html":{"url":"interfaces/Color.html","title":"interface - Color","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Color\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            color\n                                        \n                                \n                                \n                                        \n                                            rank\n                                        \n                                \n                                \n                                        \n                                            rgba\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rank\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rgba\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rgba:     [number, number, number, number]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [number, number, number, number]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings/immutability';\nimport { Injectable } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport hexRgb from 'hex-rgb';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, pluck } from 'rxjs/operators';\n\n\nexport interface Color {\n  color: string;\n  rgba: [number, number, number, number];\n  rank: number;\n}\n\nexport const DEFAULT_COLOR_PALETTE: Color[] = [\n  '#FF8800',\n  '#2979ff',\n  '#ffd740',\n  '#b92dff',\n  '#da326f',\n  '#7323e2',\n  '#acf32b',\n  '#82B1FF',\n  '#E040FB',\n  '#00E5FF'\n].map((color, rank) => {\n  const rgba = hexRgb(color, { format: 'array' });\n  rgba[3] = 255; // for Deck.gl\n  return { color, rgba, rank };\n});\n\nexport interface ColorAssignmentStateModel {\n  colorPalette: Color[];\n  colorsAvailable: Color[];\n  colorAssignments: Record;\n  colorAssignmentsList: { color: Color; key: string }[];\n}\n\n/**\n * Color Assignment State\n */\n@StateRepository()\n@State({\n  name: 'colors',\n  defaults: {\n    colorPalette: DEFAULT_COLOR_PALETTE.concat(),\n    colorsAvailable: DEFAULT_COLOR_PALETTE.concat(),\n    colorAssignments: {},\n    colorAssignmentsList: []\n  }\n})\n@Injectable()\nexport class ColorAssignmentState extends NgxsImmutableDataRepository {\n  private readonly forcedUnassignment = new Subject();\n\n  readonly forcedUnassignment$ = this.forcedUnassignment.asObservable();\n  readonly colorAssignments$ = this.state$.pipe(pluck('colorAssignments'), distinctUntilChanged());\n  readonly colorAssignmentsList$ = this.state$.pipe(pluck('colorAssignmentsList'), distinctUntilChanged());\n\n  getColor(key: string): Immutable | undefined {\n    const { colorAssignments } = this.snapshot;\n    return colorAssignments[key];\n  }\n\n  @DataAction()\n  assignColor(@Payload('key') key: string, @Payload('doReset') doReset = false): Immutable {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    if (doReset) {\n      colorsAvailable = this.snapshot.colorPalette.concat();\n      colorAssignmentsList = [];\n      colorAssignments = {};\n    }\n    let color = colorAssignments[key];\n    if (!color) {\n      if (colorsAvailable.length > 0) {\n        color = colorsAvailable[0];\n      } else {\n        color = colorAssignmentsList[colorAssignmentsList.length - 1].color;\n        colorAssignmentsList = colorAssignmentsList.slice(0, -1);\n        this.forcedUnassignment.next();\n      }\n      colorsAvailable = colorsAvailable.filter(c => c.color !== color.color);\n      colorAssignmentsList = [{ color, key }].concat(colorAssignmentsList);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n    return color;\n  }\n\n  @DataAction()\n  unassignColor(@Payload('key') key: string): void {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    const color = colorAssignments[key];\n    if (color) {\n      colorsAvailable = [color].concat(colorsAvailable);\n      colorAssignmentsList = colorAssignmentsList.filter(a => a.color.color !== color.color);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ColorAssignmentState.html":{"url":"injectables/ColorAssignmentState.html","title":"injectable - ColorAssignmentState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ColorAssignmentState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Color Assignment State\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                colorAssignments$\n                            \n                            \n                                    Readonly\n                                colorAssignmentsList$\n                            \n                            \n                                    Private\n                                    Readonly\n                                forcedUnassignment\n                            \n                            \n                                    Readonly\n                                forcedUnassignment$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                assignColor\n                            \n                            \n                                getColor\n                            \n                            \n                                unassignColor\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        assignColor\n                        \n                    \n                \n            \n            \n                \nassignColor(key: string, doReset)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    doReset\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Immutable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getColor\n                        \n                    \n                \n            \n            \n                \ngetColor(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Immutable | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unassignColor\n                        \n                    \n                \n            \n            \n                \nunassignColor(key: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorAssignments$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('colorAssignments'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        colorAssignmentsList$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('colorAssignmentsList'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        forcedUnassignment\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        forcedUnassignment$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.forcedUnassignment.asObservable()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts:59\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings/immutability';\nimport { Injectable } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport hexRgb from 'hex-rgb';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, pluck } from 'rxjs/operators';\n\n\nexport interface Color {\n  color: string;\n  rgba: [number, number, number, number];\n  rank: number;\n}\n\nexport const DEFAULT_COLOR_PALETTE: Color[] = [\n  '#FF8800',\n  '#2979ff',\n  '#ffd740',\n  '#b92dff',\n  '#da326f',\n  '#7323e2',\n  '#acf32b',\n  '#82B1FF',\n  '#E040FB',\n  '#00E5FF'\n].map((color, rank) => {\n  const rgba = hexRgb(color, { format: 'array' });\n  rgba[3] = 255; // for Deck.gl\n  return { color, rgba, rank };\n});\n\nexport interface ColorAssignmentStateModel {\n  colorPalette: Color[];\n  colorsAvailable: Color[];\n  colorAssignments: Record;\n  colorAssignmentsList: { color: Color; key: string }[];\n}\n\n/**\n * Color Assignment State\n */\n@StateRepository()\n@State({\n  name: 'colors',\n  defaults: {\n    colorPalette: DEFAULT_COLOR_PALETTE.concat(),\n    colorsAvailable: DEFAULT_COLOR_PALETTE.concat(),\n    colorAssignments: {},\n    colorAssignmentsList: []\n  }\n})\n@Injectable()\nexport class ColorAssignmentState extends NgxsImmutableDataRepository {\n  private readonly forcedUnassignment = new Subject();\n\n  readonly forcedUnassignment$ = this.forcedUnassignment.asObservable();\n  readonly colorAssignments$ = this.state$.pipe(pluck('colorAssignments'), distinctUntilChanged());\n  readonly colorAssignmentsList$ = this.state$.pipe(pluck('colorAssignmentsList'), distinctUntilChanged());\n\n  getColor(key: string): Immutable | undefined {\n    const { colorAssignments } = this.snapshot;\n    return colorAssignments[key];\n  }\n\n  @DataAction()\n  assignColor(@Payload('key') key: string, @Payload('doReset') doReset = false): Immutable {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    if (doReset) {\n      colorsAvailable = this.snapshot.colorPalette.concat();\n      colorAssignmentsList = [];\n      colorAssignments = {};\n    }\n    let color = colorAssignments[key];\n    if (!color) {\n      if (colorsAvailable.length > 0) {\n        color = colorsAvailable[0];\n      } else {\n        color = colorAssignmentsList[colorAssignmentsList.length - 1].color;\n        colorAssignmentsList = colorAssignmentsList.slice(0, -1);\n        this.forcedUnassignment.next();\n      }\n      colorsAvailable = colorsAvailable.filter(c => c.color !== color.color);\n      colorAssignmentsList = [{ color, key }].concat(colorAssignmentsList);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n    return color;\n  }\n\n  @DataAction()\n  unassignColor(@Payload('key') key: string): void {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    const color = colorAssignments[key];\n    if (color) {\n      colorsAvailable = [color].concat(colorsAvailable);\n      colorAssignmentsList = colorAssignmentsList.filter(a => a.color.color !== color.color);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ColorAssignmentStateModel.html":{"url":"interfaces/ColorAssignmentStateModel.html","title":"interface - ColorAssignmentStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ColorAssignmentStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            colorAssignments\n                                        \n                                \n                                \n                                        \n                                            colorAssignmentsList\n                                        \n                                \n                                \n                                        \n                                            colorPalette\n                                        \n                                \n                                \n                                        \n                                            colorsAvailable\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        colorAssignments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorAssignments:         Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Record\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorAssignmentsList\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorAssignmentsList:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorPalette\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorPalette:         Color[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Color[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        colorsAvailable\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        colorsAvailable:         Color[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Color[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings/immutability';\nimport { Injectable } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\nimport hexRgb from 'hex-rgb';\nimport { Subject } from 'rxjs';\nimport { distinctUntilChanged, pluck } from 'rxjs/operators';\n\n\nexport interface Color {\n  color: string;\n  rgba: [number, number, number, number];\n  rank: number;\n}\n\nexport const DEFAULT_COLOR_PALETTE: Color[] = [\n  '#FF8800',\n  '#2979ff',\n  '#ffd740',\n  '#b92dff',\n  '#da326f',\n  '#7323e2',\n  '#acf32b',\n  '#82B1FF',\n  '#E040FB',\n  '#00E5FF'\n].map((color, rank) => {\n  const rgba = hexRgb(color, { format: 'array' });\n  rgba[3] = 255; // for Deck.gl\n  return { color, rgba, rank };\n});\n\nexport interface ColorAssignmentStateModel {\n  colorPalette: Color[];\n  colorsAvailable: Color[];\n  colorAssignments: Record;\n  colorAssignmentsList: { color: Color; key: string }[];\n}\n\n/**\n * Color Assignment State\n */\n@StateRepository()\n@State({\n  name: 'colors',\n  defaults: {\n    colorPalette: DEFAULT_COLOR_PALETTE.concat(),\n    colorsAvailable: DEFAULT_COLOR_PALETTE.concat(),\n    colorAssignments: {},\n    colorAssignmentsList: []\n  }\n})\n@Injectable()\nexport class ColorAssignmentState extends NgxsImmutableDataRepository {\n  private readonly forcedUnassignment = new Subject();\n\n  readonly forcedUnassignment$ = this.forcedUnassignment.asObservable();\n  readonly colorAssignments$ = this.state$.pipe(pluck('colorAssignments'), distinctUntilChanged());\n  readonly colorAssignmentsList$ = this.state$.pipe(pluck('colorAssignmentsList'), distinctUntilChanged());\n\n  getColor(key: string): Immutable | undefined {\n    const { colorAssignments } = this.snapshot;\n    return colorAssignments[key];\n  }\n\n  @DataAction()\n  assignColor(@Payload('key') key: string, @Payload('doReset') doReset = false): Immutable {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    if (doReset) {\n      colorsAvailable = this.snapshot.colorPalette.concat();\n      colorAssignmentsList = [];\n      colorAssignments = {};\n    }\n    let color = colorAssignments[key];\n    if (!color) {\n      if (colorsAvailable.length > 0) {\n        color = colorsAvailable[0];\n      } else {\n        color = colorAssignmentsList[colorAssignmentsList.length - 1].color;\n        colorAssignmentsList = colorAssignmentsList.slice(0, -1);\n        this.forcedUnassignment.next();\n      }\n      colorsAvailable = colorsAvailable.filter(c => c.color !== color.color);\n      colorAssignmentsList = [{ color, key }].concat(colorAssignmentsList);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n    return color;\n  }\n\n  @DataAction()\n  unassignColor(@Payload('key') key: string): void {\n    let { colorAssignments, colorAssignmentsList, colorsAvailable } = this.snapshot;\n    const color = colorAssignments[key];\n    if (color) {\n      colorsAvailable = [color].concat(colorsAvailable);\n      colorAssignmentsList = colorAssignmentsList.filter(a => a.color.color !== color.color);\n      colorAssignments = colorAssignmentsList.reduce>>((acc, item, rank) => {\n        acc[item.key] = { ...item.color, rank };\n        return acc;\n      }, {});\n\n      this.ctx.patchState({\n        colorsAvailable,\n        colorAssignments,\n        colorAssignmentsList\n      });\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContainerComponent.html":{"url":"components/ContainerComponent.html","title":"component - ContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts\n\n\n\n    \n        Description\n    \n    \n        Main container for drawer components.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n            \n                exportAs\n                ccfDrawerContainer\n            \n\n\n\n\n\n            \n                providers\n                \n                                MessageService\n                \n            \n\n\n            \n                selector\n                ccf-drawer-container\n            \n\n            \n                styleUrls\n                ./container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./container.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Readonly\n                                className\n                            \n                            \n                                    Private\n                                content1\n                            \n                            \n                                    Private\n                                content2\n                            \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                validateDrawers\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    content\n                                \n                                \n                                    hasWrappedContent\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:62\n                            \n                        \n\n                \n                    \n                            Creates an instance of container component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The service used to send event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-container\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-container'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:37\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(_msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:115\n                \n            \n\n\n            \n                \n                    Processes event messages.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:83\n                \n            \n\n\n            \n                \n                    Sets up all listeners after all content has been projected.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:105\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        validateDrawers\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateDrawers()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:124\n                \n            \n\n\n            \n                \n                    Validates the number of drawers and their positions.\n\n\n                    \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageChannel\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:60\n                        \n                    \n\n            \n                \n                    The connected message channel.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-container'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:37\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        content1\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(ContentComponent, {descendants: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:45\n                        \n                    \n\n            \n                \n                    Content component if provided already wrapped.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        content2\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChildren(ContentComponent)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:48\n                        \n                    \n\n            \n                \n                    Content component if provided without wrapping.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        drawers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         QueryList\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ContentChildren(DrawerComponent, {descendants: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:41\n                        \n                    \n\n            \n                \n                    Drawer components in this container.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:62\n                        \n                    \n\n            \n                \n                    All subscriptions managed by the container.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        content\n                    \n                \n\n                \n                    \n                        getcontent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:50\n                                \n                            \n                    \n                        \n                                Resolves the content component.\n\n\n                                \n                                    Returns :         ContentComponent\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        hasWrappedContent\n                    \n                \n\n                \n                    \n                        gethasWrappedContent()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts:55\n                                \n                            \n                    \n                        \n                                Whether the content was wrapped.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChildren, HostBinding, OnDestroy, QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\nimport { ContentComponent } from '../content/content.component';\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/**\n * Helper function for creating drawer errors.\n *\n * @param position The position of the drawer.\n * @throws {Error} Error with useful message is always thrown.\n */\nfunction throwDuplicateDrawersError(position: 'start' | 'end'): never {\n  throw new Error(`Multiple drawers in position ${position}`);\n}\n\n\n/**\n * Main container for drawer components.\n */\n@Component({\n  selector: 'ccf-drawer-container',\n  exportAs: 'ccfDrawerContainer',\n  templateUrl: './container.component.html',\n  styleUrls: ['./container.component.scss'],\n  providers: [MessageService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContainerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-container';\n\n  /** Drawer components in this container. */\n  @ContentChildren(DrawerComponent, { descendants: true })\n  private drawers: QueryList;\n\n  /** Content component if provided already wrapped. */\n  @ContentChildren(ContentComponent, { descendants: true })\n  private content1: QueryList;\n  /** Content component if provided without wrapping. */\n  @ViewChildren(ContentComponent)\n  private content2: QueryList;\n  /** Resolves the content component. */\n  private get content(): ContentComponent {\n    return this.content1.first ?? this.content2.first;\n  }\n\n  /** Whether the content was wrapped. */\n  get hasWrappedContent(): boolean {\n    return this.content1.length !== 0;\n  }\n\n  /** The connected message channel. */\n  private channel: MessageChannel;\n  /** All subscriptions managed by the container. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of container component.\n   *\n   * @param messageService The service used to send event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Sets up all listeners after all content has been projected.\n   */\n  ngAfterViewInit(): void {\n    this.drawers.changes.pipe(startWith(null)).subscribe(() => {\n      const drawers = this.validateDrawers();\n      this.channel.sendMessage({\n        type: 'drawer-containers-changed',\n        drawers\n      });\n      this.cdr.markForCheck();\n    });\n\n    this.content1.changes.pipe(startWith(null)).subscribe(() => {\n      this.channel.sendMessage({\n        type: 'content-container-changed',\n        content: this.content\n      });\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Processes event messages.\n   *\n   * @param _msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  private handleMessage(_msg: Message): boolean {\n    return true;\n  }\n\n  /**\n   * Validates the number of drawers and their positions.\n   *\n   * @returns A tuple containing the start and end drawers.\n   */\n  private validateDrawers(): [DrawerComponent | undefined, DrawerComponent | undefined] {\n    const drawers = this.drawers.toArray();\n    const startDrawers = drawers.filter(drawer => drawer.position === 'start');\n    const endDrawers = drawers.filter(drawer => drawer.position === 'end');\n\n    if (startDrawers.length > 1) {\n      throwDuplicateDrawersError('start');\n    }\n    if (endDrawers.length > 1) {\n      throwDuplicateDrawersError('end');\n    }\n\n    return [startDrawers[0], endDrawers[0]];\n  }\n}\n\n    \n\n    \n        \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./container.component.scss\n                \n                :host {\n  display: block;\n  position: relative;\n  z-index: 1;\n  overflow: hidden;\n  -webkit-overflow-scrolling: touch;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpatialSearchUiBehaviorComponent', 'selector': 'ccf-spatial-search-ui-behavior'},{'name': 'SpatialSearchUiComponent', 'selector': 'ccf-spatial-search-ui'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ContentComponent.html":{"url":"components/ContentComponent.html","title":"component - ContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component wrapping and providing animations for center content.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-content\n            \n\n            \n                styleUrls\n                ./content.component.scss\n            \n\n\n            \n                template\n                \n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                animationsEnabled\n                            \n                            \n                                    Readonly\n                                className\n                            \n                            \n                                    Private\n                                drawers\n                            \n                            \n                                faded\n                            \n                            \n                                leftMargin\n                            \n                            \n                                rightMargin\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                handleMessage\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                updateFaded\n                            \n                            \n                                    Private\n                                updateMargin\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @fadeInOut\n                            \n                            \n                                class\n                            \n                            \n                                class.cff-drawer-content-animations\n                            \n                            \n                                style.margin-left.px\n                            \n                            \n                                style.margin-right.px\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:41\n                            \n                        \n\n                \n                    \n                            Creates an instance of content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        @fadeInOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:36\n                        \n                    \n\n            \n                \n                    Whether the content is invisible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-content\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-content'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:28\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.cff-drawer-content-animations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:30\n                        \n                    \n\n            \n                \n                    Whether animations are enabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.margin-left.px\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:32\n                        \n                    \n\n            \n                \n                    Left margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        style.margin-right.px\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:34\n                        \n                    \n\n            \n                \n                    Right margin size.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:70\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:60\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateFaded\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateFaded()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:116\n                \n            \n\n\n            \n                \n                    Checks and updates the faded state based on the drawer states.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateMargin\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMargin(position: \"start\" | \"end\", opened: boolean, width: number, margin: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:103\n                \n            \n\n\n            \n                \n                    Updates a margin.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n                                    \n                                            \"start\" | \"end\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Start (left) or end (right) margin.\n\n                                    \n                                \n                                \n                                    opened\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Whether the drawer is opened.\n\n                                    \n                                \n                                \n                                    width\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The width of the drawer if opened.\n\n                                    \n                                \n                                \n                                    margin\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The margin size.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        animationsEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class.cff-drawer-content-animations')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:30\n                        \n                    \n\n            \n                \n                    Whether animations are enabled.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-content'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:28\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        drawers\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DrawerComponent[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:39\n                        \n                    \n\n            \n                \n                    References to the side drawers.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('@fadeInOut')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:36\n                        \n                    \n\n            \n                \n                    Whether the content is invisible.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        leftMargin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.margin-left.px')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:32\n                        \n                    \n\n            \n                \n                    Left margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rightMargin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('style.margin-right.px')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:34\n                        \n                    \n\n            \n                \n                    Right margin size.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts:41\n                        \n                    \n\n            \n                \n                    Subscriptions managed by this component.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\n\n\n/**\n * Component wrapping and providing animations for center content.\n */\n@Component({\n  selector: 'ccf-drawer-content',\n  template: '',\n  styleUrls: ['./content.component.scss'],\n  animations: [\n    trigger('fadeInOut', [\n      state('false', style({ opacity: 1 })),\n      state('true', style({ opacity: 0 })),\n\n      transition('false  true', animate('1s'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContentComponent implements OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-content';\n  /** Whether animations are enabled. */\n  @HostBinding('class.cff-drawer-content-animations') animationsEnabled = false;\n  /** Left margin size. */\n  @HostBinding('style.margin-left.px') leftMargin = 0;\n  /** Right margin size. */\n  @HostBinding('style.margin-right.px') rightMargin = 0;\n  /** Whether the content is invisible. */\n  @HostBinding('@fadeInOut') faded = false;\n\n  /** References to the side drawers. */\n  private drawers: DrawerComponent[] = [];\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of content component.\n   *\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(messageService: MessageService,\n              cdr: ChangeDetectorRef) {\n    const messages = messageService.connect(this).getMessages();\n    this.subscriptions.add(messages.subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /** Cleans up all subscriptions. */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-containers-changed':\n        this.drawers = msg.payload.drawers as DrawerComponent[];\n        this.updateFaded();\n        return true;\n\n      case 'drawer-initialized':\n        this.animationsEnabled = true;\n        return true;\n\n      case 'drawer-toggled': {\n        const position = (msg.source as DrawerComponent).position;\n        const { opened, width, margin } = msg.payload;\n\n        this.updateMargin(position, opened, width, margin);\n        this.updateFaded();\n        return true;\n      }\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Updates a margin.\n   *\n   * @param position Start (left) or end (right) margin.\n   * @param opened Whether the drawer is opened.\n   * @param width The width of the drawer if opened.\n   * @param margin The margin size.\n   */\n  private updateMargin(position: 'start' | 'end', opened: boolean,\n                       width: number, margin: number): void {\n    const offset = opened ? width + margin : margin;\n    if (position === 'start') {\n      this.leftMargin = offset;\n    } else {\n      this.rightMargin = offset;\n    }\n  }\n\n  /**\n   * Checks and updates the faded state based on the drawer states.\n   */\n  private updateFaded(): void {\n    const [start, end] = this.drawers;\n    const startExpanded = start?.opened && start?.expanded;\n    const endExpanded = end?.opened && end?.expanded;\n    this.faded = startExpanded || endExpanded;\n  }\n}\n\n    \n\n\n    \n                \n                    ./content.component.scss\n                \n                :host {\n  display: block;\n  height: calc(100% - 5.5rem);\n  z-index: 2;\n  overflow: auto;\n\n  &.cff-drawer-content-animations {\n    transition: {\n      duration: .5s;\n      timing-function: ease-in-out;\n      property: margin-left, margin-right;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpatialSearchUiBehaviorComponent', 'selector': 'ccf-spatial-search-ui-behavior'},{'name': 'SpatialSearchUiComponent', 'selector': 'ccf-spatial-search-ui'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ContentContainerChanged.html":{"url":"interfaces/ContentContainerChanged.html","title":"interface - ContentContainerChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ContentContainerChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when the content component changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    A reference to the new content component.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CoreModule.html":{"url":"modules/CoreModule.html","title":"module - CoreModule","body":"\n                   \n\n\n\n\n    Modules\n    CoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_CoreModule_imports\n\n\n\n\nHeaderModule\n\nHeaderModule\n\n\n\nCoreModule\n\nCoreModule\n\nCoreModule -->\n\nHeaderModule->CoreModule\n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nCoreModule->HeaderModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/core.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            HeaderModule\n                        \n                        \n                            StoreModule\n                        \n                        \n                            ThemingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { DataSourceService, MousePositionTrackerModule } from 'ccf-shared';\nimport { AnalyticsModule } from 'ccf-shared/analytics';\nimport { CcfApiConfiguration, CcfApiModule } from 'ccf-openapi/angular-client';\n\nimport { environment } from '../../environments/environment';\nimport { HeaderModule } from './header/header.module';\nimport { DelegateDataSourceService } from './services/data-source/data-source.service';\nimport { ThemingModule } from './services/theming/theming.module';\nimport { StoreModule } from './store/store.module';\n\n\n@NgModule({\n  imports: [\n    HttpClientModule,\n\n    AnalyticsModule.forRoot({\n      gaToken: environment.googleAnalyticsToken,\n      appName: 'eui'\n    }),\n    MousePositionTrackerModule,\n\n    CcfApiModule.forRoot(() => new CcfApiConfiguration({\n      basePath: environment.dbOptions.remoteApiEndpoint\n    })),\n\n    HeaderModule,\n    StoreModule,\n    ThemingModule\n  ],\n  providers: [\n    { provide: DataSourceService, useExisting: DelegateDataSourceService }\n  ],\n  exports: [HeaderModule]\n})\nexport class CoreModule {\n  constructor(@Optional() @SkipSelf() core: CoreModule) {\n    if (core) {\n      throw new Error('The core module should only be imported once in the root module');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataStateModel.html":{"url":"interfaces/DataStateModel.html","title":"interface - DataStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/data/data.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Store data state.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            filter\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            statusMessage\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter:     Filter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Filter\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Current filter.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:     \"Loading\" | \"Ready\" | \"Error\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"Loading\" | \"Ready\" | \"Error\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusMessage\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusMessage:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { bind } from 'bind-decorator';\nimport { AggregateResult, DatabaseStatus, Filter, SpatialSceneNode, TissueBlockResult } from 'ccf-database';\nimport { DataSourceService } from 'ccf-shared';\nimport { combineLatest, defer, ObservableInput, ObservedValueOf, OperatorFunction, ReplaySubject, Subject } from 'rxjs';\nimport { delay, distinct, filter as rxjsFilter, map, pluck, publishReplay, refCount, repeat, switchMap, take, takeWhile, tap } from 'rxjs/operators';\n\n\n/** Default values for filters. */\nexport const DEFAULT_FILTER: Filter = {\n  sex: 'Both',\n  ageRange: [1, 110],\n  bmiRange: [13, 83],\n  tmc: [],\n  technologies: [],\n  ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0013702'],\n  cellTypeTerms: ['http://purl.obolibrary.org/obo/CL_0000000'],\n  spatialSearches: []\n};\n\n/** Current state of data queries. */\n// eslint-disable-next-line no-shadow\nexport enum DataQueryState {\n  /** One or more queries are running. */\n  Running = 'running',\n  /** All queries have completed. */\n  Completed = 'completed'\n}\n\n/**\n * Helper for testing that all states in an array are `DataQueryState.Completed`.\n *\n * @param states The array of states to test.\n * @returns true if all values in the array is `Completed`.\n */\nfunction allCompleted(states: DataQueryState[]): boolean {\n  return states.every(state => state === DataQueryState.Completed);\n}\n\n/**\n * Helper creating a function that sends a `DataQueryState.Completed` to\n * a subject whenever it is called.\n *\n * @param subject The subject to send completed messagess to.\n * @returns The function.\n */\nfunction sendCompletedTo(subject: Subject): () => void {\n  return () => subject.next(DataQueryState.Completed);\n}\n\n/**\n * Helper operator that combines querying with sharing and replay functionality.\n *\n * @param query The data query function.\n * @param [next] An optional listener on the values emitted by the latest query.\n * @returns The combined pipe operator function.\n */\nfunction queryData>(\n  query: (value: T, index: number) => O,\n  next?: (value: ObservedValueOf) => void\n): OperatorFunction> {\n  return source => source.pipe(\n    switchMap(query),\n    tap(next),\n    publishReplay(1),\n    refCount()\n  );\n}\n\n/** Store data state. */\nexport interface DataStateModel {\n  /** Current filter. */\n  filter: Filter;\n  status: 'Loading' | 'Ready' | 'Error';\n  statusMessage: string;\n}\n\n/**\n * Data state repository and service.\n */\n@StateRepository()\n@State({\n  name: 'data',\n  defaults: {\n    filter: DEFAULT_FILTER,\n    status: 'Loading',\n    statusMessage: 'Loading database'\n  }\n})\n@Injectable()\nexport class DataState extends NgxsDataRepository implements NgxsOnInit {\n  /** Emits when the database is ready. */\n  readonly databaseReady$ = this.state$.pipe(pluck('status'), distinct(), rxjsFilter((status) => status === 'Ready'));\n\n  /** Implementation subject for tissueBlockDataQueryStatus$. */\n  private readonly _tissueBlockDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for aggregateDataQueryStatus$. */\n  private readonly _aggregateDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for ontologyTermOccurencesDataQueryStatus$. */\n  private readonly _ontologyTermOccurencesDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for cellTypeTermOccurencesDataQueryStatus$. */\n  private readonly _cellTypeTermOccurencesDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for sceneDataQueryStatus$. */\n  private readonly _sceneDataQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for technologyFilterQueryStatus$. */\n  private readonly _technologyFilterQueryStatus$ = new ReplaySubject(1);\n  /** Implementation subject for providerFilterQueryStatus$. */\n  private readonly _providerFilterQueryStatus$ = new ReplaySubject(1);\n  /** Keeping track of all ontology terms there is data for. */\n  readonly ontologyTermsFullData$ = new ReplaySubject>(1);\n  /** Keeping track of all cell type terms there is data for. */\n  readonly cellTypeTermsFullData$ = new ReplaySubject>(1);\n\n  /** Current filter. */\n  readonly filter$ = this.state$.pipe(pluck('filter'));\n  /** Latest tissue block query data. */\n  readonly tissueBlockData$ = this.filter$.pipe(queryData(\n    this.tissueBlockData, sendCompletedTo(this._tissueBlockDataQueryStatus$)\n  ));\n  /** Latest aggregate query data. */\n  readonly aggregateData$ = this.filter$.pipe(queryData(\n    this.aggregateData, sendCompletedTo(this._aggregateDataQueryStatus$)\n  ));\n  /** Latest ontology term occurences query data. */\n  readonly ontologyTermOccurencesData$ = this.filter$.pipe(queryData(\n    this.ontologyTermOccurencesData, sendCompletedTo(this._ontologyTermOccurencesDataQueryStatus$)\n  ));\n  /** Latest cell type term occurences query data. */\n  readonly cellTypeTermOccurencesData$ = this.filter$.pipe(queryData(\n    this.cellTypeTermOccurencesData, sendCompletedTo(this._cellTypeTermOccurencesDataQueryStatus$)\n  ));\n  /** Latest scene query data. */\n  readonly sceneData$ = this.filter$.pipe(queryData(\n    this.sceneData, sendCompletedTo(this._sceneDataQueryStatus$)\n  ));\n  /** Latest technology filter label query data. */\n  readonly technologyFilterData$ = this.filter$.pipe(queryData(\n    this.technologyFilterData, sendCompletedTo(this._technologyFilterQueryStatus$)\n  ));\n  /** Latest provider filter label query data. */\n  readonly providerFilterData$ = this.filter$.pipe(queryData(\n    this.providerFilterData, sendCompletedTo(this._providerFilterQueryStatus$)\n  ));\n\n  /** Current status of queries in the tissueBlockData$ observable. */\n  readonly tissueBlockDataQueryStatus$ = this._tissueBlockDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the aggregateData$ observable. */\n  readonly aggregateDataQueryStatus$ = this._aggregateDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the ontologyTermOccurrences$ observable. */\n  readonly ontologyTermOccurencesDataQueryStatus$ = this._ontologyTermOccurencesDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the cellTypeTermOccurrences$ observable. */\n  readonly cellTypeTermOccurencesDataQueryStatus$ = this._cellTypeTermOccurencesDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the sceneData$ observable. */\n  readonly sceneDataQueryStatus$ = this._sceneDataQueryStatus$.pipe(distinct());\n  /** Current status of queries in the technologyFilter$ observable. */\n  readonly technologyFilterQueryStatus$ = this._technologyFilterQueryStatus$.pipe(distinct());\n  /** Current status of queries in the providerFilter$ observable. */\n  readonly providerFilterQueryStatus$ = this._providerFilterQueryStatus$.pipe(distinct());\n\n  /** Current status of all queries. */\n  readonly queryStatus$ = combineLatest([\n    this.tissueBlockDataQueryStatus$,\n    this.aggregateDataQueryStatus$,\n    this.ontologyTermOccurencesDataQueryStatus$,\n    this.cellTypeTermOccurencesDataQueryStatus$,\n    this.sceneDataQueryStatus$,\n    this.technologyFilterQueryStatus$,\n    this.providerFilterQueryStatus$\n  ]).pipe(\n    map(states => allCompleted(states) ? DataQueryState.Completed : DataQueryState.Running),\n    distinct()\n  );\n\n  /**\n   * Creates an instance of data state.\n   *\n   * @param source Data query service.\n   */\n  constructor(private readonly source: DataSourceService) {\n    super();\n    // Start everything in the completed state\n    this._tissueBlockDataQueryStatus$.next(DataQueryState.Completed);\n    this._aggregateDataQueryStatus$.next(DataQueryState.Completed);\n    this._ontologyTermOccurencesDataQueryStatus$.next(DataQueryState.Completed);\n    this._cellTypeTermOccurencesDataQueryStatus$.next(DataQueryState.Completed);\n    this._sceneDataQueryStatus$.next(DataQueryState.Completed);\n    this._technologyFilterQueryStatus$.next(DataQueryState.Completed);\n    this._providerFilterQueryStatus$.next(DataQueryState.Completed);\n  }\n\n  ngxsOnInit(): void {\n    const { ontologyTermsFullData$, ontologyTermOccurencesData$, cellTypeTermsFullData$, cellTypeTermOccurencesData$, source, snapshot: { filter } } = this;\n    if (filter === DEFAULT_FILTER) {\n      // Common case - Reuse the result of the regular query\n      ontologyTermOccurencesData$.pipe(take(1)).subscribe(ontologyTermsFullData$);\n      cellTypeTermOccurencesData$.pipe(take(1)).subscribe(cellTypeTermsFullData$);\n    } else {\n      source.getOntologyTermOccurences().pipe(take(1)).subscribe(ontologyTermsFullData$);\n      source.getCellTypeTermOccurences().pipe(take(1)).subscribe(cellTypeTermsFullData$);\n    }\n    this.warmUpDatabase();\n  }\n\n  private warmUpDatabase(): void {\n    defer(() => this.source.getDatabaseStatus()).pipe(\n      tap((status) => this.updateStatus(status)),\n      delay(2000),\n      take(1)\n    ).pipe(\n      repeat(1000),\n      takeWhile((status) => status.status === 'Loading')\n    ).subscribe();\n\n    this.databaseReady$.pipe(take(1), tap(() => {\n      this.updateStatus({\n        status: 'Ready',\n        message: 'Loading CCF Exploration User Interface (EUI)'\n      });\n    })).subscribe();\n  }\n\n  @DataAction()\n  updateStatus(@Payload('status') status: DatabaseStatus): void {\n    this.patchState({\n      status: status.status,\n      statusMessage: status.message\n    });\n  }\n\n  /**\n   * Updates the current filter.\n   *\n   * @param filter Changes to be made to the current filter.\n   */\n  @DataAction()\n  updateFilter(@Payload('filter') filter: Partial): void {\n    this.patchState({\n      // Might need to do a deep compare of current and new filter\n      filter: { ...this.getState().filter, ...filter }\n    });\n  }\n\n  /**\n   * Queries for tissue block data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private tissueBlockData(filter: Filter): ObservableInput {\n    this._tissueBlockDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getTissueBlockResults(filter)));\n  }\n\n  /**\n   * Queries for aggregate data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private aggregateData(filter: Filter): ObservableInput {\n    this._aggregateDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getAggregateResults(filter)));\n  }\n\n  /**\n   * Queries for ontology term occurences data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private ontologyTermOccurencesData(filter: Filter): ObservableInput> {\n    this._ontologyTermOccurencesDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getOntologyTermOccurences(filter)));\n  }\n\n  /**\n   * Queries for cell type term occurences data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private cellTypeTermOccurencesData(filter: Filter): ObservableInput> {\n    this._cellTypeTermOccurencesDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getCellTypeTermOccurences(filter)));\n  }\n\n  /**\n   * Queries for scene data.\n   *\n   * @param filter The filter used during query.\n   * @returns The result of the query.\n   */\n  @bind\n  private sceneData(filter: Filter): ObservableInput {\n    this._sceneDataQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getScene(filter)));\n  }\n\n  /**\n   * Queries for technology filter data.\n   *\n   * @returns The result of the query.\n   */\n  @bind\n  private technologyFilterData(): ObservableInput {\n    this._technologyFilterQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getDatasetTechnologyNames()));\n  }\n\n  /**\n   * Queries for provider filter data.\n   *\n   * @returns The result of the query.\n   */\n  @bind\n  private providerFilterData(): ObservableInput {\n    this._providerFilterQueryStatus$.next(DataQueryState.Running);\n    return this.databaseReady$.pipe(switchMap(() => this.source.getProviderNames()));\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultIconDefinition.html":{"url":"interfaces/DefaultIconDefinition.html","title":"interface - DefaultIconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DefaultIconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/icon-registry/default-icons.ts\n        \n\n\n            \n                Description\n            \n            \n                Object definition for icon that should be loaded on startup.\nUnlike runtime registration object this does not need url ot html\nto be sanitized before hand.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            namespace\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DefaultIconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: string;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: string;\n}\n\n\n/**\n * Icons registered at startup.\n */\nexport const DEFAULT_ICONS: DefaultIconDefinition[] = [\n  // Reference Organs\n  { name: 'bladder', namespace: 'app', url: 'assets/icons/organs/ico-organs-bladder.svg' },\n  { name: 'blood', namespace: 'app', url: 'assets/icons/organs/ico-organs-blood.svg' },\n  { name: 'bone-marrow', namespace: 'app', url: 'assets/icons/organs/ico-organs-bone-marrow.svg' },\n  { name: 'brain', namespace: 'app', url: 'assets/icons/organs/ico-organs-brain.svg' },\n  { name: 'eye', namespace: 'app', url: 'assets/icons/organs/ico-organs-eye.svg' },\n  { name: 'fallopian-tube-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-left.svg' },\n  { name: 'fallopian-tube-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-right.svg' },\n  { name: 'heart', namespace: 'app', url: 'assets/icons/organs/ico-organs-heart.svg' },\n  { name: 'kidney-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-left.svg' },\n  { name: 'kidney-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-right.svg' },\n  { name: 'kidney', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney.svg' },\n  { name: 'knee', namespace: 'app', url: 'assets/icons/organs/ico-organs-knee.svg' },\n  { name: 'large-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-large-intestine.svg' },\n  { name: 'liver', namespace: 'app', url: 'assets/icons/organs/ico-organs-liver.svg' },\n  { name: 'lung-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-left.svg' },\n  { name: 'lung-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-right.svg' },\n  { name: 'lung', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung.svg' },\n  { name: 'lymph-nodes', namespace: 'app', url: 'assets/icons/organs/ico-organs-lymph-nodes.svg' },\n  { name: 'neuron', namespace: 'app', url: 'assets/icons/organs/ico-organs-neuron.svg' },\n  { name: 'ovaries', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovaries.svg' },\n  { name: 'ovary-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-left.svg' },\n  { name: 'ovary-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-right.svg' },\n  { name: 'pancreas', namespace: 'app', url: 'assets/icons/organs/ico-organs-pancreas.svg' },\n  { name: 'pelvis-f', namespace: 'app', url: 'assets/icons/organs/ico-organs-pelvis-f.svg' },\n  { name: 'placenta', namespace: 'app', url: 'assets/icons/organs/ico-organs-placenta.svg' },\n  { name: 'prostate', namespace: 'app', url: 'assets/icons/organs/ico-organs-prostate.svg' },\n  { name: 'skin', namespace: 'app', url: 'assets/icons/organs/ico-organs-skin.svg' },\n  { name: 'small-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-small intestine.svg' },\n  { name: 'spinal-cord', namespace: 'app', url: 'assets/icons/organs/ico-organs-spinal-cord.svg' },\n  { name: 'spleen', namespace: 'app', url: 'assets/icons/organs/ico-organs-spleen.svg' },\n  { name: 'stomach', namespace: 'app', url: 'assets/icons/organs/ico-organs-stomach.svg' },\n  { name: 'thymus', namespace: 'app', url: 'assets/icons/organs/ico-organs-thymus.svg' },\n  { name: 'ureter-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-left.svg' },\n  { name: 'ureter-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-right.svg' },\n  { name: 'uterus', namespace: 'app', url: 'assets/icons/organs/ico-organs-uterus.svg' },\n  { name: 'vasculature-thick', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thick.svg' },\n  { name: 'vasculature-thin', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thin.svg' },\n\n  { name: 'opacity', namespace: 'app', url: 'assets/icons/opacity-24px.svg' },\n  { name: 'visibility_on', namespace: 'app', url: 'assets/icons/visibility-on-24px.svg' },\n  { name: 'visibility_off', namespace: 'app', url: 'assets/icons/visibility-off-24px.svg' },\n  { name: 'expand_more', namespace: 'app', url: 'assets/icons/expand_more-24px.svg' },\n  { name: 'expand_less', namespace: 'app', url: 'assets/icons/expand_less-24px.svg' },\n  { name: 'filter', url: 'assets/icons/filter.svg' }\n];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DelegateDataSourceOptions.html":{"url":"interfaces/DelegateDataSourceOptions.html","title":"interface - DelegateDataSourceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DelegateDataSourceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            remoteApiEndpoint\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            useRemoteApi\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        remoteApiEndpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        remoteApiEndpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useRemoteApi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useRemoteApi:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, ProviderToken } from '@angular/core';\nimport {\n  ApiEndpointDataSourceService, CCFDatabaseDataSourceService, DataSourceLike, InjectorDelegateDataSourceService,\n} from 'ccf-shared';\n\nimport { environment } from '../../../../environments/environment';\nimport { WorkerDataSourceService } from './worker-data-source.service';\n\n\nexport interface DelegateDataSourceOptions {\n  useRemoteApi?: boolean;\n  remoteApiEndpoint?: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DelegateDataSourceService extends InjectorDelegateDataSourceService {\n  protected selectToken(config: DelegateDataSourceOptions): ProviderToken {\n    const { useRemoteApi, remoteApiEndpoint } = config;\n\n    if (useRemoteApi && !!remoteApiEndpoint) {\n      return ApiEndpointDataSourceService;\n    } else if (typeof Worker !== 'undefined' && !environment.disableDbWorker) {\n      return WorkerDataSourceService;\n    } else {\n      return CCFDatabaseDataSourceService;\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DelegateDataSourceService.html":{"url":"injectables/DelegateDataSourceService.html","title":"injectable - DelegateDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DelegateDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        InjectorDelegateDataSourceService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                selectToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        selectToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectToken(config: DelegateDataSourceOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                DelegateDataSourceOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ProviderToken\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, ProviderToken } from '@angular/core';\nimport {\n  ApiEndpointDataSourceService, CCFDatabaseDataSourceService, DataSourceLike, InjectorDelegateDataSourceService,\n} from 'ccf-shared';\n\nimport { environment } from '../../../../environments/environment';\nimport { WorkerDataSourceService } from './worker-data-source.service';\n\n\nexport interface DelegateDataSourceOptions {\n  useRemoteApi?: boolean;\n  remoteApiEndpoint?: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DelegateDataSourceService extends InjectorDelegateDataSourceService {\n  protected selectToken(config: DelegateDataSourceOptions): ProviderToken {\n    const { useRemoteApi, remoteApiEndpoint } = config;\n\n    if (useRemoteApi && !!remoteApiEndpoint) {\n      return ApiEndpointDataSourceService;\n    } else if (typeof Worker !== 'undefined' && !environment.disableDbWorker) {\n      return WorkerDataSourceService;\n    } else {\n      return CCFDatabaseDataSourceService;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DonorCardComponent.html":{"url":"components/DonorCardComponent.html","title":"component - DonorCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DonorCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts\n\n\n\n    \n        Description\n    \n    \n        Donor card component which displays data from a patient\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-donor-card\n            \n\n            \n                styleUrls\n                ./donor-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./donor-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                hoverState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleCheckbox\n                            \n                            \n                                linkHandler\n                            \n                            \n                                toggleExpansion\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                expanded\n                            \n                            \n                                highlighted\n                            \n                            \n                                selected\n                            \n                            \n                                tissueBlock\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                checked\n                            \n                            \n                                linkClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:40\n                            \n                        \n\n                \n                    \n                            Creates an instance of donor card component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:26\n                            \n                        \n                \n                    \n                        Allows color of the checkbox background to be set from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        expanded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:29\n                            \n                        \n                \n                    \n                        Allows the expanded state of the card to be set from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        highlighted\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:23\n                            \n                        \n                \n                    \n                        Allows the selected state to be set from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        tissueBlock\n                    \n                \n                \n                    \n                        Type :     TissueBlockResult\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:20\n                            \n                        \n                \n                    \n                        Tissue Block to generate the donor card from\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        checked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:34\n                            \n                        \n                \n                    \n                        Emits the new checked state whenever it changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        linkClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:37\n                            \n                        \n                \n                    \n                        Emit the url of any link when clicked.\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-donor-card\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-donor-card'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleCheckbox\n                        \n                    \n                \n            \n            \n                \nhandleCheckbox()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:52\n                \n            \n\n\n            \n                \n                    Handles the logic that needs to run when the checkbox is clicked on.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        linkHandler\n                        \n                    \n                \n            \n            \n                \nlinkHandler(url: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:76\n                \n            \n\n\n            \n                \n                    Handles what happens when an info card is clicked.\nPasses up the link click event unless the card isn't selected\nIn which case it selects it for ease of use.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the URL to emit up.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleExpansion\n                        \n                    \n                \n            \n            \n                \ntoggleExpansion()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:62\n                \n            \n\n\n            \n                \n                    Ensures that the expanded variable is only changed if selected first.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-donor-card'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hoverState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts:40\n                        \n                    \n\n            \n                \n                    To keep track of which element, if any, are hovered over.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { TissueBlockResult } from 'ccf-database';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/**\n * Donor card component which displays data from a patient\n */\n@Component({\n  selector: 'ccf-donor-card',\n  templateUrl: './donor-card.component.html',\n  styleUrls: ['./donor-card.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DonorCardComponent {\n  /** HTML Class Name */\n  @HostBinding('class') readonly clsName = 'ccf-donor-card';\n\n  /** Tissue Block to generate the donor card from */\n  @Input() tissueBlock!: TissueBlockResult;\n\n  /** Allows the selected state to be set from outside the component */\n  @Input() selected = false;\n\n  /** Allows color of the checkbox background to be set from outside the component */\n  @Input() color!: string;\n\n  /** Allows the expanded state of the card to be set from outside the component */\n  @Input() expanded = false;\n\n  @Input() highlighted = false;\n\n  /** Emits the new checked state whenever it changes */\n  @Output() readonly checked = new EventEmitter();\n\n  /** Emit the url of any link when clicked. */\n  @Output() readonly linkClick = new EventEmitter();\n\n  /** To keep track of which element, if any, are hovered over. */\n  hoverState = '';\n\n  /**\n   * Creates an instance of donor card component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Handles the logic that needs to run when the checkbox is clicked on.\n   */\n  handleCheckbox(): void {\n    this.selected = !this.selected;\n    this.ga.event('selected_toggled', 'donor_card', this.tissueBlock.label, +this.selected);\n    this.checked.emit(this.selected);\n    this.expanded = false;\n  }\n\n  /**\n   * Ensures that the expanded variable is only changed if selected first.\n   */\n  toggleExpansion(): void {\n    if (this.selected) {\n      this.expanded = !this.expanded;\n      this.ga.event('expanded_toggled', 'donor_card', this.tissueBlock.label, +this.expanded);\n    }\n  }\n\n  /**\n   * Handles what happens when an info card is clicked.\n   * Passes up the link click event unless the card isn't selected\n   * In which case it selects it for ease of use.\n   *\n   * @param url the URL to emit up.\n   */\n  linkHandler(url: string): void {\n    this.ga.event('link_clicked', 'donor_card', this.tissueBlock.label);\n    if (this.selected) {\n      this.linkClick.emit(url);\n    } else {\n      this.selected = true;\n      this.checked.emit(this.selected);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n\n  \n    \n      person\n\n      \n        {{ tissueBlock.donor.label }}\n        {{ tissueBlock.donor.description }}\n      \n    \n    \n      DONOR\n      open_in_new\n    \n\n    {{ expanded ? \"expand_less\" : \"expand_more\" }}\n  \n\n\n\n  \n    \n      bubble_chart\n      \n        {{ tissueBlock.label }}\n        {{ tissueBlock.description }}\n      \n\n      \n        TISSUE BLOCK\n        open_in_new\n      \n    \n\n     1\"\n      [totalTissueSections]=\"tissueBlock.sectionCount\"\n      [tissueSections]=\"tissueBlock.sections\"\n    >\n\n     0\">\n      \n      \n    \n  \n\n  \n    \n      bubble_chart\n      \n        {{ section.label }}\n        {{ section.description }}\n      \n\n      \n        TISSUE SECTION\n        open_in_new\n      \n    \n\n     0\">\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./donor-card.component.scss\n                \n                :host {\n  width: 100%;\n\n  .main-container {\n    display: flex;\n    min-height: 3rem;\n    width: 100%;\n    align-items: center;\n    padding-left: 0.5rem;\n  }\n\n  .checkbox-background {\n    height: 2rem;\n    width: 2rem;\n    border-radius: 50%;\n    margin-right: 0.5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n\n    ::ng-deep .mat-checkbox-checked.mat-accent .mat-checkbox-background,\n    .mat-checkbox-indeterminate.mat-accent .mat-checkbox-background {\n      background-color: transparent;\n    }\n\n    &.highlighted {\n      ::ng-deep .mat-ripple-element {\n        opacity: .04;\n      }\n    }\n\n    .checkselected {\n      ::ng-deep .mat-checkbox-frame {\n        border-color: white !important;\n      }\n    }\n\n    .checkbox {\n      margin-left: 1.12rem;\n      margin-bottom: 0.12rem; \n    }\n  }\n\n  .align-end {\n    margin-left: auto;\n  }\n\n  .info-block {\n    display: flex;\n    font-size: 0.75rem;\n    line-height: 1rem;\n    width: 100%;\n    align-items: center;\n\n    &:not(:first-child) {\n      margin-top: 0.5rem;\n    }\n\n    .text-content {\n      .title {\n        font-weight: 600;\n      }\n    }\n  }\n\n  .donor {\n    display: flex;\n    font-size: 0.75rem;\n    line-height: 1rem;\n    align-items: center;\n    flex-grow: 1;\n    height: 2.5rem;\n\n    &:hover, &.highlighted {\n      box-shadow: 0px 6px 2px -2px rgba(0, 0, 0, 0.2), 0px 4px 4px 0px rgba(0, 0, 0, 0.14), 0px 2px 10px 0px rgba(0, 0, 0, 0.12);\n    }\n\n    .hover-state {\n      width: 19.5rem !important;\n    }\n\n    .donor-info {\n      .title {\n        font-weight: 600;\n      }\n    }\n  }\n\n  .hoverable {\n    position: relative;\n  }\n\n  .hover-enabled {\n    position: relative;\n\n    &:hover {\n      .hover-state {\n        opacity: 1;\n      }\n    }\n  }\n\n  .hover-state {\n    transition: opacity 0.15s ease-in-out;\n    opacity: 0;\n    cursor: pointer;\n    position: absolute;\n    height: 100%;\n    width: 100%;\n    top: 0;\n    margin-left: -0.5rem;\n    align-items: center;\n    display: flex;\n    justify-content: flex-end;\n    padding-right: 1rem;\n    font-size: 0.75rem;\n\n    .hover-title {\n      font-weight: lighter;\n    }\n\n    .hover-icon {\n      margin-left: 1rem;\n    }\n  }\n\n  .default-padding {\n    padding: 0.5rem;\n    padding-top: 0.25rem;\n    padding-bottom: 0.25rem;\n  }\n\n  .expanded-view {\n    margin-top: 0.25rem;\n    width: 85%;\n    margin-bottom: 0.25rem;\n  }\n\n  .d-flex {\n    display: flex;\n  }\n\n  .icon-size {\n    height: 1.5rem;\n    width: 1.5rem;\n    font-size: 1.5rem;\n  }\n\n  .selectable {\n    cursor: pointer;\n  }\n\n  .w-80 {\n    width: 80% !important;\n\n    .info-block {\n      .text-content {\n        .description {\n          width: 16rem !important;\n        }\n      }\n    }\n  }\n\n  .ml-5 {\n    margin-left: 0.5rem;\n  }\n\n  .mr-5 {\n    margin-right: 0.5rem;\n  }\n\n  .mt-05 {\n    margin-top: 0.5rem;\n  }\n\n  .description {\n    width: 17rem;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    white-space: nowrap;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    person              {{ tissueBlock.donor.label }}        {{ tissueBlock.donor.description }}                    DONOR      open_in_new        {{ expanded ? \"expand_less\" : \"expand_more\" }}              bubble_chart              {{ tissueBlock.label }}        {{ tissueBlock.description }}                    TISSUE BLOCK        open_in_new               1\"      [totalTissueSections]=\"tissueBlock.sectionCount\"      [tissueSections]=\"tissueBlock.sections\"    >     0\">                              bubble_chart              {{ section.label }}        {{ section.description }}                    TISSUE SECTION        open_in_new               0\">                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpatialSearchUiBehaviorComponent', 'selector': 'ccf-spatial-search-ui-behavior'},{'name': 'SpatialSearchUiComponent', 'selector': 'ccf-spatial-search-ui'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DonorCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DonorCardModule.html":{"url":"modules/DonorCardModule.html","title":"module - DonorCardModule","body":"\n                   \n\n\n\n\n    Modules\n    DonorCardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DonorCardModule\n\n\n\ncluster_DonorCardModule_exports\n\n\n\ncluster_DonorCardModule_declarations\n\n\n\ncluster_DonorCardModule_imports\n\n\n\n\nDonorCardComponent\n\nDonorCardComponent\n\n\n\nDonorCardModule\n\nDonorCardModule\n\nDonorCardModule -->\n\nDonorCardComponent->DonorCardModule\n\n\n\n\n\nDonorCardComponent \n\nDonorCardComponent \n\nDonorCardComponent  -->\n\nDonorCardModule->DonorCardComponent \n\n\n\n\n\nThumbnailCarouselModule\n\nThumbnailCarouselModule\n\nDonorCardModule -->\n\nThumbnailCarouselModule->DonorCardModule\n\n\n\n\n\nTissueSectionVisModule\n\nTissueSectionVisModule\n\nDonorCardModule -->\n\nTissueSectionVisModule->DonorCardModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DonorCardComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ThumbnailCarouselModule\n                        \n                        \n                            TissueSectionVisModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DonorCardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { ThumbnailCarouselModule } from '../../../shared/components/thumbnail-carousel/thumbnail-carousel.module';\nimport { DonorCardComponent } from './donor-card.component';\nimport { TissueSectionVisModule } from './../tissue-section-vis/tissue-section-vis.module';\n\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatCheckboxModule,\n    MatIconModule,\n\n    ThumbnailCarouselModule,\n    TissueSectionVisModule\n  ],\n  declarations: [DonorCardComponent],\n  exports: [DonorCardComponent]\n})\nexport class DonorCardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerContainersChanged.html":{"url":"interfaces/DrawerContainersChanged.html","title":"interface - DrawerContainersChanged","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerContainersChanged\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when a drawer component changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            drawers\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        drawers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        drawers:     [, ]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     [, ]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    References to the drawer components. Can contain undefined values.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerInitialized.html":{"url":"interfaces/DrawerInitialized.html","title":"interface - DrawerInitialized","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerInitialized\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message sent when a drawer has finished initializing.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DrawerModule.html":{"url":"modules/DrawerModule.html","title":"module - DrawerModule","body":"\n                   \n\n\n\n\n    Modules\n    DrawerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_exports\n\n\n\ncluster_DrawerModule_declarations\n\n\n\n\nContainerComponent\n\nContainerComponent\n\n\n\nDrawerModule\n\nDrawerModule\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nDrawerModule->ContentComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/drawer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            ContentComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ContainerComponent\n                        \n                        \n                            ContentComponent\n                        \n                        \n                            DrawerComponent\n                        \n                        \n                            ToggleButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MESSAGE_SERVICE_CONFIG, MESSAGE_SERVICE_DEFAULT_CONFIG } from '../../services/message/message.service';\nimport { ContainerComponent } from './container/container.component';\nimport { ContentComponent } from './content/content.component';\nimport { DrawerComponent } from './drawer/drawer.component';\nimport { ToggleButtonComponent } from './toggle-button/toggle-button.component';\n\n\n@NgModule({\n  imports: [BrowserModule, BrowserAnimationsModule, MatIconModule],\n  providers: [{\n    provide: MESSAGE_SERVICE_CONFIG, useValue: MESSAGE_SERVICE_DEFAULT_CONFIG\n  }],\n  declarations: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent],\n  exports: [ContainerComponent, ContentComponent, DrawerComponent, ToggleButtonComponent]\n})\nexport class DrawerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DrawerToggled.html":{"url":"interfaces/DrawerToggled.html","title":"interface - DrawerToggled","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DrawerToggled\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n        \n\n\n            \n                Description\n            \n            \n                Message send when the state of a drawer changes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            expanded\n                                        \n                                \n                                \n                                        \n                                            margin\n                                        \n                                \n                                \n                                        \n                                            opened\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expanded\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expanded:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is expanded. Implies opened.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        margin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        margin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Margin used by the drawer for toggle button, etc.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        opened\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        opened:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the drawer is open.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Message type.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Width of the drawer.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  Message as GenericMessage, MessageChannel as GenericMessageChannel, MessageService as GenericMessageService,\n} from '../../services/message/message.service';\n\n\n/** Message sent when the content component changes. */\nexport interface ContentContainerChanged {\n  /** Message type. */\n  type: 'content-container-changed';\n  /** A reference to the new content component. */\n  content: unknown;\n}\n\n/** Message sent when a drawer component changes. */\nexport interface DrawerContainersChanged {\n  /** Message type. */\n  type: 'drawer-containers-changed';\n  /** References to the drawer components. Can contain undefined values. */\n  drawers: [unknown, unknown];\n}\n\n/** Payload types for messages sent from the drawer container. */\nexport type ContainerPayload = ContentContainerChanged | DrawerContainersChanged;\n\n\n/** Message sent when a drawer has finished initializing. */\nexport interface DrawerInitialized {\n  /** Message type. */\n  type: 'drawer-initialized';\n}\n\n/** Message send when the state of a drawer changes. */\nexport interface DrawerToggled {\n  /** Message type. */\n  type: 'drawer-toggled';\n  /** Whether the drawer is open. */\n  opened: boolean;\n  /** Whether the drawer is expanded. Implies opened. */\n  expanded: boolean;\n  /** Width of the drawer. */\n  width: number;\n  /** Margin used by the drawer for toggle button, etc. */\n  margin: number;\n}\n\n/** Payload types for messages sent from the drawers. */\nexport type DrawerPayload = DrawerToggled | DrawerInitialized;\n\n\n/** Combined payload type for all drawer sub components. */\nexport type Payload = ContainerPayload | DrawerPayload;\n/** Specific message type. */\nexport type Message = GenericMessage;\n/** Specific channel type. */\nexport type MessageChannel = GenericMessageChannel;\n/** Specific service type. */\nexport type MessageService = GenericMessageService;\n/** Reference to the service class. */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const MessageService = GenericMessageService;\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DropdownComponent.html":{"url":"components/DropdownComponent.html","title":"component - DropdownComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DropdownComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component for a dropdown menu.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-dropdown\n            \n\n            \n                styleUrls\n                ./dropdown.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dropdown.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                optionsVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChanged\n                            \n                            \n                                toggleOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                options\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of dropdown component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:18\n                            \n                        \n                \n                    \n                        What the component is selecting for.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:23\n                            \n                        \n                \n                    \n                        Choices displayed in the dropdown menu.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:28\n                            \n                        \n                \n                    \n                        Current option selected.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:33\n                            \n                        \n                \n                    \n                        Emits the new selected option when selection is changed.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        selectionChanged\n                        \n                    \n                \n            \n            \n                \nselectionChanged(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:59\n                \n            \n\n\n            \n                \n                    Updates the selected value.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value that has been selected\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleOptions\n                        \n                    \n                \n            \n            \n                \ntoggleOptions()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:50\n                \n            \n\n\n            \n                \n                    Controls fade-in effect after dropdown menu opens\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        optionsVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'invisible'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts:38\n                        \n                    \n\n            \n                \n                    Determines if menu contents are visible (used for fade-in effect).\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n/**\n * Component for a dropdown menu.\n */\n@Component({\n  selector: 'ccf-dropdown',\n  templateUrl: './dropdown.component.html',\n  styleUrls: ['./dropdown.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DropdownComponent {\n\n  /**\n   * What the component is selecting for.\n   */\n  @Input() label: string;\n\n  /**\n   * Choices displayed in the dropdown menu.\n   */\n  @Input() options: string[];\n\n  /**\n   * Current option selected.\n   */\n  @Input() selection: string;\n\n  /**\n   * Emits the new selected option when selection is changed.\n   */\n  @Output() readonly selectionChange = new EventEmitter();\n\n  /**\n   * Determines if menu contents are visible (used for fade-in effect).\n   */\n  optionsVisible = 'invisible';\n\n  /**\n   * Creates an instance of dropdown component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Controls fade-in effect after dropdown menu opens\n   */\n  toggleOptions(): void {\n    this.optionsVisible = this.optionsVisible === 'visible' ? 'invisible' : 'visible';\n  }\n\n  /**\n   * Updates the selected value.\n   *\n   * @param value The value that has been selected\n   */\n  selectionChanged(value: string): void {\n    this.selection = value;\n    this.ga.event('selection_change', 'dropdown', `${this.label}:${value}`);\n    this.selectionChange.emit(value);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{ label }}\n      \n      \n        \n          \n            {{ option }}\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dropdown.component.scss\n                \n                @keyframes slideInHorizontalDropdown {\n  from {\n    width: 0;\n  }\n  to {\n    width: 9.85rem;\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.dropdown-form-field {\n  width: 100%;\n  height: 3rem;\n\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 1em;\n    padding-right: 1em;\n    height: 3rem;\n\n    .mat-form-field-flex {\n      .mat-form-field-infix {\n        font-size: 0.875rem;\n        border: none;\n\n        mat-select {\n          font-size: 1rem;\n          font-weight: bold;\n        }\n      }\n    }\n\n    .mat-form-field-underline {\n      left: 0rem;\n      bottom: 0rem;\n      transform: none;\n      height: 0.125rem;\n    }\n  }\n}\n\n.visible {\n  animation: fadeIn 0.3s;\n  transition-delay: .275s;\n  animation-delay: .275s;\n}\n\n.invisible {\n  opacity: 0;\n}\n\n::ng-deep .option-panel {\n  animation: slideInHorizontalDropdown .3s;\n  animation-fill-mode: forwards;\n  box-shadow: 0.2rem 0.2rem 1rem 0rem #0000003e;\n  position: absolute !important;\n  top: 1.55rem;\n  max-width: 9.5rem;\n\n  .mat-option {\n    border-bottom-width: 1px;\n    border-bottom-style: solid;\n    padding-left: 1em;\n  }\n\n  :last-child {\n    border-bottom: none;\n  }\n}\n\n::ng-deep .cdk-overlay-pane {\n  min-width: 0rem !important;\n}\n\n.dropdown-form-field {\n  height: 3rem;\n  width: 100%;\n  \n  .label {\n    padding-bottom: 0.063rem;\n  }\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 0.25rem;\n    padding-right: 0.25rem;\n  }\n}\n\n::ng-deep .ccf-dropdown {\n  .mat-select-arrow-wrapper {\n    transform: translatey(-.5em);\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ label }}                                          {{ option }}                              '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpatialSearchUiBehaviorComponent', 'selector': 'ccf-spatial-search-ui-behavior'},{'name': 'SpatialSearchUiComponent', 'selector': 'ccf-spatial-search-ui'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DropdownComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DropdownModule.html":{"url":"modules/DropdownModule.html","title":"module - DropdownModule","body":"\n                   \n\n\n\n\n    Modules\n    DropdownModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_exports\n\n\n\ncluster_DropdownModule_declarations\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/dropdown/dropdown.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DropdownComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DropdownComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { DropdownComponent } from './dropdown.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatFormFieldModule, MatSelectModule],\n  declarations: [DropdownComponent],\n  exports: [DropdownComponent]\n})\n\nexport class DropdownModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DualSliderComponent.html":{"url":"components/DualSliderComponent.html","title":"component - DualSliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DualSliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component containing a button that when clicked will show a slider popover.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-dual-slider\n            \n\n            \n                styleUrls\n                ./dual-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dual-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                contentsVisible\n                            \n                            \n                                highValue\n                            \n                            \n                                    Private\n                                isSliderInitialized\n                            \n                            \n                                isSliderOpen\n                            \n                            \n                                lowValue\n                            \n                            \n                                options\n                            \n                            \n                                    Private\n                                overlayRef\n                            \n                            \n                                popoverElement\n                            \n                            \n                                popoverPortal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeSliderPopover\n                            \n                            \n                                    Private\n                                initializeSliderPopover\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onKeyHigh\n                            \n                            \n                                onKeyLow\n                            \n                            \n                                optionsChanged\n                            \n                            \n                                sliderValueChanged\n                            \n                            \n                                toggleSliderPopover\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                selection\n                            \n                            \n                                valueRange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selectionChange\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                            \n                                document:touchstart\n                            \n                        \n                    \n                \n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    rangeLabel\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(overlay: Overlay, element: ElementRef, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:95\n                            \n                        \n\n                \n                    \n                            Creates an instance of dual slider component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The overlay service used to create the slider popover.\n\n                                                        \n                                                \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the component's element. Used during event handling.\n\n                                                        \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:34\n                            \n                        \n                \n                    \n                        Which criteria the slider is selecting for.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:44\n                            \n                        \n                \n                    \n                        The current range selected.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueRange\n                    \n                \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:39\n                            \n                        \n                \n                    \n                        The lower and upper range of the slider.\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selectionChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:49\n                            \n                        \n                \n                    \n                        Emits the new selection range when a change is made to it.\n\n                    \n                \n            \n        \n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:click\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:click(target: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:165\n                \n            \n\n\n            \n                \n                    Listens to document click, mouse movement, and touch event.\nCloses the slider popover when such an event occurs outside the button or popover.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The element on which the event was fired.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        document:touchstart\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event.target' \n                \n            \n            \n                \ndocument:touchstart(target: HTMLElement)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:165\n                \n            \n\n\n            \n                \n                    Listens to document click, mouse movement, and touch event.\nCloses the slider popover when such an event occurs outside the button or popover.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The element on which the event was fired.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeSliderPopover\n                        \n                    \n                \n            \n            \n                \ncloseSliderPopover(target: HTMLElement)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:click', ['$event.target'])@HostListener('document:touchstart', ['$event.target'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:165\n                \n            \n\n\n            \n                \n                    Listens to document click, mouse movement, and touch event.\nCloses the slider popover when such an event occurs outside the button or popover.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    target\n                                    \n                                            HTMLElement\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The element on which the event was fired.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initializeSliderPopover\n                        \n                    \n                \n            \n            \n                \n                    \n                    initializeSliderPopover()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:212\n                \n            \n\n\n            \n                \n                    Creates and initializes the slider popover.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:122\n                \n            \n\n\n            \n                \n                    Updates slider options (with optionsChanged) and selection when changes detected.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Changes that have been made to the slider properties.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:152\n                \n            \n\n\n            \n                \n                    Angular's OnDestroy hook.\nCleans up the overlay.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onKeyHigh\n                        \n                    \n                \n            \n            \n                \nonKeyHigh(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:243\n                \n            \n\n\n            \n                \n                    Updates the slider's high pointer value when Enter key is pressed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event passed into the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onKeyLow\n                        \n                    \n                \n            \n            \n                \nonKeyLow(event: KeyboardEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:226\n                \n            \n\n\n            \n                \n                    Updates the slider's low pointer value when Enter key is pressed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            KeyboardEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Event passed into the component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionsChanged\n                        \n                    \n                \n            \n            \n                \noptionsChanged()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:136\n                \n            \n\n\n            \n                \n                    Updates the slider options, and the slider values if necessary.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sliderValueChanged\n                        \n                    \n                \n            \n            \n                \nsliderValueChanged()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:201\n                \n            \n\n\n            \n                \n                    Handler for updates to the slider values.\nEmits the updated selection value array.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSliderPopover\n                        \n                    \n                \n            \n            \n                \ntoggleSliderPopover()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:184\n                \n            \n\n\n            \n                \n                    Toggles the visibility of the slider popover.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        contentsVisible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'invisible'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:74\n                        \n                    \n\n            \n                \n                    Determines if slider contents are visible (used for fade-in effect).\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        highValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:69\n                        \n                    \n\n            \n                \n                    Value bound to the slider's high pointer value.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isSliderInitialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:95\n                        \n                    \n\n            \n                \n                    Determines whether slider popover has been created and initialized.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSliderOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:54\n                        \n                    \n\n            \n                \n                    Determines whether slider popover is shown.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lowValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:64\n                        \n                    \n\n            \n                \n                    Value bound to the slider's low pointer value.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Options\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:59\n                        \n                    \n\n            \n                \n                    Slider options.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        overlayRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OverlayRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:90\n                        \n                    \n\n            \n                \n                    Reference to the slider popover overlay.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        popoverElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('popover', {read: ElementRef, static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:29\n                        \n                    \n\n            \n                \n                    Reference to the popover element.\nThis is undefined until the slider popover is initialized.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        popoverPortal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CdkPortal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(CdkPortal, {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:23\n                        \n                    \n\n            \n                \n                    Reference to the template for the slider popover.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        rangeLabel\n                    \n                \n\n                \n                    \n                        getrangeLabel()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts:79\n                                \n                            \n                    \n                        \n                                Computes the current age range for display in the button.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ConnectedPosition, Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { CdkPortal } from '@angular/cdk/portal';\nimport {\n  Component, ElementRef, EventEmitter, HostListener, Input, OnChanges, OnDestroy, Output, SimpleChanges, ViewChild,\n} from '@angular/core';\nimport { Options } from 'ng5-slider';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\n\n/**\n * Component containing a button that when clicked will show a slider popover.\n */\n@Component({\n  selector: 'ccf-dual-slider',\n  templateUrl: './dual-slider.component.html',\n  styleUrls: ['./dual-slider.component.scss']\n})\nexport class DualSliderComponent implements OnDestroy, OnChanges {\n  /**\n   * Reference to the template for the slider popover.\n   */\n  @ViewChild(CdkPortal, { static: true }) popoverPortal: CdkPortal;\n\n  /**\n   * Reference to the popover element.\n   * This is undefined until the slider popover is initialized.\n   */\n  @ViewChild('popover', { read: ElementRef, static: false }) popoverElement: ElementRef;\n\n  /**\n   * Which criteria the slider is selecting for.\n   */\n  @Input() label: string;\n\n  /**\n   * The lower and upper range of the slider.\n   */\n  @Input() valueRange: number[];\n\n  /**\n   * The current range selected.\n   */\n  @Input() selection: number[];\n\n  /**\n   * Emits the new selection range when a change is made to it.\n   */\n  @Output() readonly selectionChange = new EventEmitter();\n\n  /**\n   * Determines whether slider popover is shown.\n   */\n  isSliderOpen = false;\n\n  /**\n   * Slider options.\n   */\n  options: Options;\n\n  /**\n   * Value bound to the slider's low pointer value.\n   */\n  lowValue: number;\n\n  /**\n   * Value bound to the slider's high pointer value.\n   */\n  highValue: number;\n\n  /**\n   * Determines if slider contents are visible (used for fade-in effect).\n   */\n  contentsVisible = 'invisible';\n\n  /**\n   * Computes the current age range for display in the button.\n   */\n  get rangeLabel(): string {\n    const { lowValue, highValue } = this;\n    if (lowValue === highValue) {\n      return `${lowValue}`;\n    }\n    return `${lowValue}-${highValue}`;\n  }\n\n  /**\n   * Reference to the slider popover overlay.\n   */\n  private overlayRef: OverlayRef;\n\n  /**\n   * Determines whether slider popover has been created and initialized.\n   */\n  private isSliderInitialized = false;\n\n  /**\n   * Creates an instance of dual slider component.\n   *\n   * @param overlay The overlay service used to create the slider popover.\n   * @param element A reference to the component's element. Used during event handling.\n   * @param ga Analytics service\n   */\n  constructor(\n    overlay: Overlay,\n    private element: ElementRef,\n    private readonly ga: GoogleAnalyticsService\n  ) {\n    const position: ConnectedPosition = { originX: 'start', originY: 'bottom', overlayX: 'start', overlayY: 'top' };\n    const positionStrategy = overlay.position().flexibleConnectedTo(element).withPositions([position]);\n    this.overlayRef = overlay.create({\n      panelClass: 'slider-pane',\n      positionStrategy\n    });\n  }\n\n  /**\n   * Updates slider options (with optionsChanged) and selection when changes detected.\n   *\n   * @param changes Changes that have been made to the slider properties.\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.valueRange) {\n      this.optionsChanged();\n    }\n    if (changes.selection) {\n      // Detect when selection is changed and update low/high value.\n      this.lowValue = Math.min(...this.selection);\n      this.highValue = Math.max(...this.selection);\n    }\n  }\n\n  /**\n   * Updates the slider options, and the slider values if necessary.\n   */\n  optionsChanged(): void {\n    this.options = {\n      floor: this.valueRange ? this.valueRange[0] : 0,\n      ceil: this.valueRange ? this.valueRange[1] : 0,\n      step: 1,\n      hideLimitLabels: true,\n      hidePointerLabels: true\n    };\n    this.lowValue = this.options.floor ?? 0;\n    this.highValue = this.options.ceil ?? 0;\n  }\n\n  /**\n   * Angular's OnDestroy hook.\n   * Cleans up the overlay.\n   */\n  ngOnDestroy(): void {\n    this.overlayRef.dispose();\n  }\n\n  /**\n   * Listens to document click, mouse movement, and touch event.\n   * Closes the slider popover when such an event occurs outside the button or popover.\n   *\n   * @param target The element on which the event was fired.\n   */\n  @HostListener('document:click', ['$event.target']) // eslint-disable-line\n  // eslint-disable-line\n  @HostListener('document:touchstart', ['$event.target']) // eslint-disable-line\n  closeSliderPopover(target: HTMLElement): void {\n    const { element, isSliderOpen, popoverElement } = this;\n    if (!isSliderOpen) {\n      return;\n    } else if (element.nativeElement.contains(target)) {\n      return;\n    } else if (popoverElement?.nativeElement?.contains?.(target)) {\n      return;\n    }\n\n    this.overlayRef.detach();\n    this.isSliderInitialized = false;\n    this.isSliderOpen = false;\n    this.contentsVisible = 'invisible';\n  }\n\n  /**\n   * Toggles the visibility of the slider popover.\n   */\n  toggleSliderPopover(): void {\n    const { isSliderOpen, isSliderInitialized } = this;\n    if (isSliderInitialized) {\n      this.overlayRef.detach();\n      this.isSliderInitialized = false;\n    } else if (!isSliderInitialized && !isSliderOpen) {\n      this.initializeSliderPopover();\n    }\n\n    this.contentsVisible = this.contentsVisible === 'visible' ? 'invisible' : 'visible';\n    this.isSliderOpen = !isSliderOpen;\n  }\n\n  /**\n   * Handler for updates to the slider values.\n   * Emits the updated selection value array.\n   */\n  sliderValueChanged(): void {\n    const { lowValue, highValue } = this;\n\n    this.selection = [lowValue, highValue];\n    this.ga.event('slider_range_change', 'dual_slider', `${this.label}:${lowValue}:${highValue}`);\n    this.selectionChange.emit(this.selection);\n  }\n\n  /**\n   * Creates and initializes the slider popover.\n   */\n  private initializeSliderPopover(): void {\n    const { overlayRef, popoverPortal } = this;\n\n    overlayRef.attach(popoverPortal);\n    overlayRef.updatePosition();\n\n    this.isSliderInitialized = true;\n  }\n\n  /**\n   * Updates the slider's low pointer value when Enter key is pressed.\n   *\n   * @param event Event passed into the component\n   */\n  onKeyLow(event: KeyboardEvent): void {\n    const newValue = Number((event.target as HTMLInputElement).value);\n    if (event.key === 'Enter') {\n      if (newValue >= Number(this.options.floor) && newValue = Number(this.options.floor) && newValue \n    \n\n    \n        \n  \n    \n      \n         {{ options.floor }}> \n        \n      \n\n      \n      \n\n      \n         {{ options.ceil }} \n        \n      \n    \n\n    \n      \n        {{ label }}\n        {{ rangeLabel }}\n      \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./dual-slider.component.scss\n                \n                @use 'sass:math';\n\n.slider-form-field {\n  width: 100%;\n  height: 3rem;\n\n  ::ng-deep .mat-form-field-wrapper {\n    padding-left: 0.25rem;\n    padding-right: 0.25rem;\n    height: 3rem;\n\n    .mat-form-field-flex {\n      .mat-form-field-infix {\n        border: none;\n        font-size: 0.875rem;\n      }\n    }\n\n    .mat-form-field-underline {\n      left: 0rem;\n      bottom: 0rem;\n      transform: none;\n      height: 0.125rem;\n    }\n  }\n}\n\n\n.slider-labels {\n  display: flex;\n  flex-direction: column;\n  .name-label {\n    padding-bottom: 0.25rem;\n  }\n\n  .range-label {\n    font-weight: bold;\n  }\n}\n\n::ng-deep .ccf-slider.wrapper {\n  .mat-select-arrow-wrapper {\n    transform: translatey(-1.5em);\n  }\n}\n\n// Styles for the popover slider\n// NOTE: This must NOT be nested inside the wrapper/container!\n\n@keyframes slideInHorizontalSlider {\n  from {\n    width: 0;\n  }\n  to {\n    width: 20em;\n  }\n}\n\n@keyframes fadeIn {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n.visible {\n  animation: fadeIn 0.3s;\n  transition-delay: .275s;\n  animation-delay: .275s;\n}\n\n.invisible {\n  opacity: 0;\n}\n\n::ng-deep .slider-pane {\n  position: absolute !important;\n  top: -1px;\n}\n\n.ccf-slider.detached {\n  animation: slideInHorizontalSlider 0.3s;\n  animation-fill-mode: forwards;\n  box-shadow: 0.2rem 0.2rem 1rem 0rem #0000003e;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 0rem;\n  height: 4.375rem;\n  padding: .75rem; // NOTE: Use padding instead of margin!\n\n  .slider ::ng-deep {\n    visibility: hidden;\n    margin-top: 0.9375rem;\n    margin-bottom: 0.9375rem;\n    .ng5-slider-bar {\n      opacity: .2;\n      height: .15rem;\n    }\n\n    .ng5-slider-selection {\n      opacity: 1;\n    }\n\n    .ng5-slider-pointer {\n      $pointer-size: 1rem;\n\n      width: $pointer-size;\n      height: $pointer-size;\n      top: 0.095rem - math.div($pointer-size, 2);\n\n      &:after {\n        display: none;\n      }\n    }\n  }\n\n  .label {\n    display: flex;\n    flex-direction: column;\n    width: 2rem;\n\n    &.min {\n      margin-right: 1rem;\n    }\n\n    &.max {\n      margin-left: 1rem;\n      align-items: flex-end;\n\n      .ceil, input {\n        text-align: right;\n      }\n    }\n\n    .floor, .ceil {\n      font-size: 0.875rem;\n    }\n\n    input {\n      border: none;\n      width: 1.75rem;\n      font-size: 1rem;\n      font-weight: bold;\n      padding: 0;\n    }\n\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     {{ options.floor }}>                                          {{ options.ceil }}                                     {{ label }}        {{ rangeLabel }}                  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpatialSearchUiBehaviorComponent', 'selector': 'ccf-spatial-search-ui-behavior'},{'name': 'SpatialSearchUiComponent', 'selector': 'ccf-spatial-search-ui'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DualSliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DualSliderModule.html":{"url":"modules/DualSliderModule.html","title":"module - DualSliderModule","body":"\n                   \n\n\n\n\n    Modules\n    DualSliderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DualSliderModule\n\n\n\ncluster_DualSliderModule_exports\n\n\n\ncluster_DualSliderModule_declarations\n\n\n\n\nDualSliderComponent\n\nDualSliderComponent\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nDualSliderModule -->\n\nDualSliderComponent->DualSliderModule\n\n\n\n\n\nDualSliderComponent \n\nDualSliderComponent \n\nDualSliderComponent  -->\n\nDualSliderModule->DualSliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DualSliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DualSliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { Ng5SliderModule } from 'ng5-slider';\n\nimport { DualSliderComponent } from './dual-slider.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OverlayModule,\n    PortalModule,\n    MatFormFieldModule,\n    MatSelectModule,\n    Ng5SliderModule\n  ],\n  declarations: [DualSliderComponent],\n  exports: [DualSliderComponent]\n})\nexport class DualSliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersContentComponent.html":{"url":"components/FiltersContentComponent.html","title":"component - FiltersContentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FiltersContentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts\n\n\n\n    \n        Description\n    \n    \n        Contains components of the filters popup and handles changes in filter settings\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-filters-content\n            \n\n            \n                styleUrls\n                ./filters-content.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters-content.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyButtonClick\n                            \n                            \n                                openSpatialSearch\n                            \n                            \n                                refreshFilters\n                            \n                            \n                                updateFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                hidden\n                            \n                            \n                                providerFilters\n                            \n                            \n                                spatialSearchFilters\n                            \n                            \n                                technologyFilters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                filtersChange\n                            \n                            \n                                spatialSearchRemoved\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:60\n                            \n                        \n\n                \n                    \n                            Creates an instance of filters content component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:30\n                            \n                        \n                \n                    \n                        Allows the filters to be set from outside the component\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hidden\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:25\n                            \n                        \n                \n                    \n                        Determines if the filters are visible\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        providerFilters\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:40\n                            \n                        \n                \n                    \n                        List of providers in the data\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        spatialSearchFilters\n                    \n                \n                \n                    \n                        Type :     S[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:45\n                            \n                        \n                \n                    \n                        List of spatial searches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        technologyFilters\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:35\n                            \n                        \n                \n                    \n                        List of technologies in the data\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        applyFilters\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:60\n                            \n                        \n                \n                    \n                        Emits the filters to be applied\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        filtersChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:50\n                            \n                        \n                \n                    \n                        Emits the filter change when they happen\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        spatialSearchRemoved\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:55\n                            \n                        \n                \n                    \n                        Emits when a spatial search is removed/deleted\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyButtonClick\n                        \n                    \n                \n            \n            \n                \napplyButtonClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:88\n                \n            \n\n\n            \n                \n                    Emits the current filters when the apply button is clicked\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSpatialSearch\n                        \n                    \n                \n            \n            \n                \nopenSpatialSearch()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshFilters\n                        \n                    \n                \n            \n            \n                \nrefreshFilters()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:96\n                \n            \n\n\n            \n                \n                    Refreshes all filter settings\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateFilter\n                        \n                    \n                \n            \n            \n                \nupdateFilter(value, key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:79\n                \n            \n\n\n            \n                \n                    Updates the filter object with a new key/value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The value to be saved for the filter\n\n                                    \n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key for the filter to be saved at\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts:67\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { SpatialSearchListItem } from 'ccf-shared';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { DEFAULT_FILTER } from '../../../core/store/data/data.state';\nimport {\n  SpatialSearchConfigBehaviorComponent,\n} from '../../../shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component';\n\n/**\n * Contains components of the filters popup and handles changes in filter settings\n */\n@Component({\n  selector: 'ccf-filters-content',\n  templateUrl: './filters-content.component.html',\n  styleUrls: ['./filters-content.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FiltersContentComponent {\n\n  /**\n   * Determines if the filters are visible\n   */\n  @Input() hidden: boolean;\n\n  /**\n   * Allows the filters to be set from outside the component\n   */\n  @Input() filters: Record;\n\n  /**\n   * List of technologies in the data\n   */\n  @Input() technologyFilters: string[];\n\n  /**\n   * List of providers in the data\n   */\n  @Input() providerFilters: string[];\n\n  /**\n   * List of spatial searches\n   */\n  @Input() spatialSearchFilters: S[] = [];\n\n  /**\n   * Emits the filter change when they happen\n   */\n  @Output() readonly filtersChange = new EventEmitter>();\n\n  /**\n   * Emits when a spatial search is removed/deleted\n   */\n  @Output() readonly spatialSearchRemoved = new EventEmitter();\n\n  /**\n   * Emits the filters to be applied\n   */\n  @Output() readonly applyFilters = new EventEmitter>();\n\n  /**\n   * Creates an instance of filters content component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService, public dialog: MatDialog) { }\n\n  openSpatialSearch(): void {\n    this.dialog.open(SpatialSearchConfigBehaviorComponent);\n  }\n\n  /**\n   * Updates the filter object with a new key/value\n   *\n   * @param value The value to be saved for the filter\n   * @param key The key for the filter to be saved at\n   */\n  updateFilter(value: unknown, key: string): void {\n    this.filters = { ...this.filters, [key]: value };\n    this.ga.event('filter_update', 'filter_content', `${key}:${value}`);\n    this.filtersChange.emit(this.filters);\n  }\n\n  /**\n   * Emits the current filters when the apply button is clicked\n   */\n  applyButtonClick(): void {\n    this.ga.event('filters_applied', 'filter_content');\n    this.applyFilters.emit(this.filters);\n  }\n\n  /**\n   * Refreshes all filter settings\n   */\n  refreshFilters(): void {\n    this.filters = JSON.parse(JSON.stringify(DEFAULT_FILTER));\n    this.ga.event('filters_reset', 'filter_content');\n    this.filtersChange.emit(this.filters);\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n  \n\n\n\n  \n\n\n\n  \n\n\n 0\" class=\"filter spatial-locations\" [class.hidden]=\"hidden\">\n  \n  \n\n\n\n  \n  \n    APPLY FILTERS\n    \n      refresh\n    \n  \n\n    \n\n    \n                \n                    ./filters-content.component.scss\n                \n                .filter {\n  &.hidden {\n    opacity: 0;\n    transition-duration: 0.2s;\n  }\n\n  &.assays {\n    .option {\n      margin-right: 0 rem;\n      width: 25%\n    }\n  }\n\n  margin-top: 2rem;\n}\n\n.button-container {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n\n  ::ng-deep button {\n    border-width: 1px;\n    border-style: solid;\n  }\n}\n\n.button-container {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 2rem;\n\n  button {\n    border-width: 1px;\n    border-style: solid;\n  }\n\n  &.hidden {\n    opacity: 0;\n    transition-duration: 0.2s;\n  }\n\n  .right-group {\n    display: flex;\n    flex-direction: row-reverse;\n    align-items: center;\n  \n    .outline-button {\n      box-shadow: 0.1rem 0.1rem 0.2rem 0rem #0000001d;\n    }\n    \n    .refresh-icon {\n      padding: 0.25rem;\n      border-radius: 0.25rem;\n      margin-right: 1rem;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      transition: 0.6s;\n    \n      .refresh {\n        cursor: pointer;\n        transition: .6s;\n        transition-property: background;\n      }\n    }\n  }\n}\n\n.patient-filters {\n  display: flex;\n  width: 90%;\n  padding-top: 1rem;\n\n  &.hidden {\n    opacity: 0;\n    transition-duration: 0.2s;\n  }\n\n  ccf-dual-slider {\n    margin-left: .5rem;\n    width: 33%;\n  }\n\n  ccf-dropdown {\n    width: 33%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           0\" class=\"filter spatial-locations\" [class.hidden]=\"hidden\">            APPLY FILTERS          refresh      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpatialSearchUiBehaviorComponent', 'selector': 'ccf-spatial-search-ui-behavior'},{'name': 'SpatialSearchUiComponent', 'selector': 'ccf-spatial-search-ui'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersContentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiltersContentModule.html":{"url":"modules/FiltersContentModule.html","title":"module - FiltersContentModule","body":"\n                   \n\n\n\n\n    Modules\n    FiltersContentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FiltersContentModule\n\n\n\ncluster_FiltersContentModule_exports\n\n\n\ncluster_FiltersContentModule_imports\n\n\n\ncluster_FiltersContentModule_declarations\n\n\n\n\nFiltersContentComponent\n\nFiltersContentComponent\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersContentModule -->\n\nFiltersContentComponent->FiltersContentModule\n\n\n\n\n\nFiltersContentComponent \n\nFiltersContentComponent \n\nFiltersContentComponent  -->\n\nFiltersContentModule->FiltersContentComponent \n\n\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nFiltersContentModule -->\n\nCheckboxModule->FiltersContentModule\n\n\n\n\n\nDropdownModule\n\nDropdownModule\n\nFiltersContentModule -->\n\nDropdownModule->FiltersContentModule\n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nFiltersContentModule -->\n\nDualSliderModule->FiltersContentModule\n\n\n\n\n\nRunSpatialSearchModule\n\nRunSpatialSearchModule\n\nFiltersContentModule -->\n\nRunSpatialSearchModule->FiltersContentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FiltersContentComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CheckboxModule\n                        \n                        \n                            DropdownModule\n                        \n                        \n                            DualSliderModule\n                        \n                        \n                            RunSpatialSearchModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FiltersContentComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SpatialSearchListModule } from 'ccf-shared';\n\nimport { CheckboxModule } from '../../../shared/components/checkbox/checkbox.module';\nimport { DropdownModule } from '../../../shared/components/dropdown/dropdown.module';\nimport { DualSliderModule } from '../../../shared/components/dual-slider/dual-slider.module';\nimport { RunSpatialSearchModule } from '../../../shared/components/run-spatial-search/run-spatial-search.module';\nimport { FiltersContentComponent } from './filters-content.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatButtonModule,\n    MatIconModule,\n\n    CheckboxModule,\n    DropdownModule,\n    DualSliderModule,\n    SpatialSearchListModule,\n    RunSpatialSearchModule\n  ],\n  declarations: [FiltersContentComponent],\n  exports: [FiltersContentComponent]\n})\nexport class FiltersContentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FiltersPopoverComponent.html":{"url":"components/FiltersPopoverComponent.html","title":"component - FiltersPopoverComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FiltersPopoverComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts\n\n\n\n    \n        Description\n    \n    \n        Popover box for filter settings\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-filters-popover\n            \n\n            \n                styleUrls\n                ./filters-popover.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./filters-popover.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filtersVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyFilters\n                            \n                            \n                                removeBox\n                            \n                            \n                                toggleFilterVisible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                drawerExpanded\n                            \n                            \n                                filters\n                            \n                            \n                                providerFilters\n                            \n                            \n                                spatialSearchFilters\n                            \n                            \n                                technologyFilters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                filtersChange\n                            \n                            \n                                spatialSearchRemoved\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        drawerExpanded\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:23\n                            \n                        \n                \n                    \n                        Keeps track of whether or not the containing drawer is expanded\nBecause the styles need to change accordingly\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:17\n                            \n                        \n                \n                    \n                        Allows the filters to be set from outside the component, and still render / function normally\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        providerFilters\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:33\n                            \n                        \n                \n                    \n                        List of providers in the data\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        spatialSearchFilters\n                    \n                \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:38\n                            \n                        \n                \n                    \n                        List of spatial searches\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        technologyFilters\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:28\n                            \n                        \n                \n                    \n                        List of technologies in the data\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        filtersChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:43\n                            \n                        \n                \n                    \n                        Emits the current filters\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        spatialSearchRemoved\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:48\n                            \n                        \n                \n                    \n                        Emits when a spatial search is removed/deleted\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        applyFilters\n                        \n                    \n                \n            \n            \n                \napplyFilters(filters: Record)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:74\n                \n            \n\n\n            \n                \n                    Emits the current filters, and hides the popover box\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filters\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object containing all the currently set filters\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeBox\n                        \n                    \n                \n            \n            \n                \nremoveBox()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:65\n                \n            \n\n\n            \n                \n                    Hides the filters popover box\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFilterVisible\n                        \n                    \n                \n            \n            \n                \ntoggleFilterVisible()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:58\n                \n            \n\n\n            \n                \n                    Toggles filter visible\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filtersVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts:53\n                        \n                    \n\n            \n                \n                    Keeps track of whether or not the filters popover box is visible or not\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { SpatialSearchListItem } from 'ccf-shared';\n\n/**\n * Popover box for filter settings\n */\n@Component({\n  selector: 'ccf-filters-popover',\n  templateUrl: './filters-popover.component.html',\n  styleUrls: ['./filters-popover.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FiltersPopoverComponent {\n  /**\n   * Allows the filters to be set from outside the component, and still render / function normally\n   */\n  @Input() filters: Record;\n\n  /**\n   * Keeps track of whether or not the containing drawer is expanded\n   * Because the styles need to change accordingly\n   */\n  @Input() drawerExpanded: boolean;\n\n  /**\n   * List of technologies in the data\n   */\n  @Input() technologyFilters: string[];\n\n  /**\n   * List of providers in the data\n   */\n  @Input() providerFilters: string[];\n\n  /**\n   * List of spatial searches\n   */\n  @Input() spatialSearchFilters: [] = [];\n\n  /**\n   * Emits the current filters\n   */\n  @Output() readonly filtersChange = new EventEmitter>();\n\n  /**\n   * Emits when a spatial search is removed/deleted\n   */\n  @Output() readonly spatialSearchRemoved = new EventEmitter();\n\n  /**\n   * Keeps track of whether or not the filters popover box is visible or not\n   */\n  filtersVisible = false;\n\n  /**\n   * Toggles filter visible\n   */\n  toggleFilterVisible(): void {\n    this.filtersVisible = !this.filtersVisible;\n  }\n\n  /**\n   * Hides the filters popover box\n   */\n  removeBox(): void {\n    this.filtersVisible = false;\n  }\n\n  /**\n   * Emits the current filters, and hides the popover box\n   *\n   * @param filters The object containing all the currently set filters\n   */\n  applyFilters(filters: Record): void {\n    this.filters = filters;\n    this.filtersChange.emit(filters);\n    this.removeBox();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      close\n    \n    \n      \n    \n  \n  \n    \n      \n      \n    \n  \n\n    \n\n    \n                \n                    ./filters-popover.component.scss\n                \n                .filters-popover {\n  position: inherit;\n\n  &.expanded {\n    position: relative;\n\n    .popup-container {\n      right: inherit;\n    }\n\n    .popup-body {\n      padding-left: 4em !important;\n    }\n  }\n}\n\n.popup-container {\n  position: absolute;\n  z-index: 5;\n  top: 1.2rem;\n  left: 1.48rem;\n  box-shadow: 0.2rem 0.2rem 1rem 0rem #00000058;\n\n  .popup-body {\n    padding: 1.5rem;\n    position: relative;\n  }\n\n  &.visible {\n    width: 35rem;\n    transition: width 0.2s ease-in-out;\n    border-width: 1px;\n\n    .popup-body {\n      opacity: 1;\n      transition-delay: 0.3s;\n      transition-duration: 0.2s;\n    }\n  }\n\n  &.hidden {\n    width: 0;\n    height: 0;\n    transition: all 0.2s ease-out;\n    transition-delay: 0.3s;\n    pointer-events: none;\n\n    .popup-body {\n      opacity: 0;\n      transition: opacity 0.2s ease-in-out;\n    }\n  }\n}\n\n.show-hide {\n  background: none;\n  border: none;\n  z-index: 10;\n  position: relative;\n  cursor: pointer;\n  outline: none;\n  padding: 0.5rem;\n  border-radius: 0.25rem;\n  transition: 0.6s;\n\n  .funnel {\n    // margin-top: 0.25rem;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            close                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpatialSearchUiBehaviorComponent', 'selector': 'ccf-spatial-search-ui-behavior'},{'name': 'SpatialSearchUiComponent', 'selector': 'ccf-spatial-search-ui'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FiltersPopoverComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FiltersPopoverModule.html":{"url":"modules/FiltersPopoverModule.html","title":"module - FiltersPopoverModule","body":"\n                   \n\n\n\n\n    Modules\n    FiltersPopoverModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FiltersPopoverModule\n\n\n\ncluster_FiltersPopoverModule_imports\n\n\n\ncluster_FiltersPopoverModule_exports\n\n\n\ncluster_FiltersPopoverModule_declarations\n\n\n\n\nFiltersPopoverComponent\n\nFiltersPopoverComponent\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nFiltersPopoverModule -->\n\nFiltersPopoverComponent->FiltersPopoverModule\n\n\n\n\n\nFiltersPopoverComponent \n\nFiltersPopoverComponent \n\nFiltersPopoverComponent  -->\n\nFiltersPopoverModule->FiltersPopoverComponent \n\n\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersPopoverModule -->\n\nFiltersContentModule->FiltersPopoverModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FiltersPopoverComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FiltersContentModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FiltersPopoverComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { FiltersContentModule } from '../filters-content/filters-content.module';\nimport { FiltersPopoverComponent } from './filters-popover.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatIconModule, FiltersContentModule],\n  declarations: [FiltersPopoverComponent],\n  exports: [FiltersPopoverComponent]\n})\nexport class FiltersPopoverModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FlatNode.html":{"url":"classes/FlatNode.html","title":"class - FlatNode","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FlatNode\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/flat-node.ts\n        \n\n\n            \n                Description\n            \n            \n                Node type used by ontology tree component.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                numResults\n                            \n                            \n                                    Optional\n                                opacity\n                            \n                            \n                                    Optional\n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    label\n                                \n                                \n                                    expandable\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(original: OntologyTreeNode, level: number)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of flat node.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        original\n                                                  \n                                                        \n                                                                    OntologyTreeNode\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The original ontology node object.\n\n                                                        \n                                                \n                                                \n                                                        level\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The level of the new flat node in the tree.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        numResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        opacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        visible\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:9\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(original: OntologyTreeNode, level: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:36\n                \n            \n\n\n            \n                \n                    Creates a flat node from a ontology node object and a level in the tree.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    original\n                                    \n                                            OntologyTreeNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The original ontology node object.\n\n                                    \n                                \n                                \n                                    level\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The level of the new flat node in the tree.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FlatNode\n\n                    \n                    \n                        The newly created flat node.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n\n                \n                    \n                        getlabel()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:18\n                                \n                            \n                    \n                        \n                                Gets this node's label.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        expandable\n                    \n                \n\n                \n                    \n                        getexpandable()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/core/models/flat-node.ts:25\n                                \n                            \n                    \n                        \n                                Indicates whether this node has children.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { OntologyTreeNode } from 'ccf-database';\n\n\n/**\n * Node type used by ontology tree component.\n */\nexport class FlatNode {\n  visible?: boolean = true;\n\n  opacity?: number = 20;\n\n  numResults?: number;\n\n  /**\n   * Gets this node's label.\n   */\n  get label(): string {\n    return this.original.label;\n  }\n\n  /**\n   * Indicates whether this node has children.\n   */\n  get expandable(): boolean {\n    return this.original.children.length > 0;\n  }\n\n  /**\n   * Creates a flat node from a ontology node object and a level in the tree.\n   *\n   * @param original The original ontology node object.\n   * @param level The level of the new flat node in the tree.\n   * @returns The newly created flat node.\n   */\n  static create(original: OntologyTreeNode, level: number): FlatNode {\n    return new FlatNode(original, level);\n  }\n\n  /**\n   * Creates an instance of flat node.\n   *\n   * @param original The original ontology node object.\n   * @param level The level of the new flat node in the tree.\n   */\n  constructor(readonly original: OntologyTreeNode, readonly level: number) { }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/core/header/header.component.ts\n\n\n\n    \n        Description\n    \n    \n        Header which is always displayed on the site; contains current filter info,\na link to download data, and a logo which resets the page when clicked.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-header\n            \n\n            \n                styleUrls\n                ./header.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                filters\n                            \n                            \n                                homeUrl\n                            \n                            \n                                loggedIn\n                            \n                            \n                                loginDisabled\n                            \n                            \n                                logoTooltip\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                downloadClicked\n                            \n                            \n                                refreshClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        filters\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:32\n                            \n                        \n                \n                    \n                        Current filter settings\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        homeUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:18\n                            \n                        \n                \n                    \n                        URL to Portal site\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loggedIn\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:27\n                            \n                        \n                \n                    \n                        Is the user logged in?\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loginDisabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        logoTooltip\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        downloadClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:42\n                            \n                        \n                \n                    \n                        Emitted when download button is clicked\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        refreshClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/core/header/header.component.ts:37\n                            \n                        \n                \n                    \n                        Emitted when refresh button is clicked\n\n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\n\n/**\n * Header which is always displayed on the site; contains current filter info,\n * a link to download data, and a logo which resets the page when clicked.\n */\n@Component({\n  selector: 'ccf-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent {\n\n  /**\n   * URL to Portal site\n   */\n  @Input() homeUrl: string;\n\n  @Input() loginDisabled: boolean;\n\n  @Input() logoTooltip: string;\n\n  /**\n   * Is the user logged in?\n   */\n  @Input() loggedIn: boolean;\n\n  /**\n   * Current filter settings\n   */\n  @Input() filters: Record;\n\n  /**\n   * Emitted when refresh button is clicked\n   */\n  @Output() readonly refreshClicked = new EventEmitter();\n\n  /**\n   * Emitted when download button is clicked\n   */\n  @Output() readonly downloadClicked = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    \n    \n  \n\n  \n  \n  LOGIN\n  LOGOUT\n\n\n    \n\n    \n                \n                    ./header.component.scss\n                \n                .ccf-header {\n  height: 4rem;\n  padding: 0 1.5rem;\n  border-bottom-width: 1px;\n  border-bottom-style: solid;\n  display: flex;\n\n  .home {\n    height: 100%;\n    width: 25rem;\n    align-items: center;\n    display: flex;\n    padding: 0.25rem 0;\n  }\n\n  .logo {\n    width: 100%;\n    height: 50%;\n    background-repeat: no-repeat;\n    background-size: contain;\n  }\n\n  .download {\n    height: 1.5rem;\n  }\n\n  // Styled to match the HuBMAP Portal\n  .authentication {\n    width: 8.25rem;\n    border-radius: 0.125rem;\n    font-weight: 500;\n  }\n\n  .logo, .download, .refresh {\n    display: flex;\n    align-items: center;\n    transition: color 1s;\n    cursor: pointer;\n    text-decoration: none;\n  }\n\n  :not(:last-child) {\n    margin-right: 1.5rem;\n  }\n\n  .filler {\n    flex-grow: 1;\n    margin: 0;\n  }\n\n  .filter-labels {\n    display: flex;\n    align-items: center;\n    height: 100%;\n    font: 400 1rem/1.25rem Inter, sans-serif;\n  }\n\n  .disabled {\n    display: none;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  LOGIN  LOGOUT'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpatialSearchUiBehaviorComponent', 'selector': 'ccf-spatial-search-ui-behavior'},{'name': 'SpatialSearchUiComponent', 'selector': 'ccf-spatial-search-ui'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HeaderModule.html":{"url":"modules/HeaderModule.html","title":"module - HeaderModule","body":"\n                   \n\n\n\n\n    Modules\n    HeaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_exports\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\n\n\nHeaderModule\n\nHeaderModule\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/header/header.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HeaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { HeaderComponent } from './header.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule, MatIconModule, MatToolbarModule, MatTooltipModule],\n  declarations: [HeaderComponent],\n  exports: [HeaderComponent]\n})\nexport class HeaderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IconDefinition.html":{"url":"interfaces/IconDefinition.html","title":"interface - IconDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IconDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Object definition for registering new svg icons.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            namespace\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            url\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:         SafeHtml\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeHtml\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Html containing the svg of the icon or icon set.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Name to register the icon under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        namespace\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        namespace:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Namespace to register the icon or icon set under.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         SafeResourceUrl\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SafeResourceUrl\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Url to fetch the icon or icon set from.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(\n    @Optional() private readonly registry: MatIconRegistry | null,\n    sanitizer: DomSanitizer\n  ) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) {\n      return false;\n    }\n    if (!definition.url && !definition.html) {\n      return false;\n    }\n\n    const registry = this.registry as unknown as { [prop: string]: (...arg: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) {\n      return false;\n    }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) {\n      parts.push('Set');\n    }\n    if (!url) {\n      parts.push('Literal');\n    }\n    if (namespace) {\n      parts.push('InNamespace');\n    }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url ?? html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconRegistryState.html":{"url":"injectables/IconRegistryState.html","title":"injectable - IconRegistryState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconRegistryState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts\n        \n\n\n            \n                Description\n            \n            \n                State handling the registration of icons for use with mat-icon.\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getArguments\n                            \n                            \n                                    Private\n                                getMethodName\n                            \n                            \n                                registerIcon\n                            \n                            \n                                    Private\n                                registerIconImpl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(registry: MatIconRegistry | null, sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of icon registry state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        registry\n                                                  \n                                                        \n                                                                    MatIconRegistry | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Material icon registry.\n\n                                                        \n                                                \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to sanitize default imported urls and html.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getArguments\n                        \n                    \n                \n            \n            \n                \n                    \n                    getArguments(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:134\n                \n            \n\n\n            \n                \n                    Selects the argument used to call the registration method.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     []\n\n                    \n                    \n                        An array of arguments.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getMethodName\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMethodName(undefined: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:114\n                \n            \n\n\n            \n                \n                    Selects the MatIconRegistry method used to register the icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The name of the registry method.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerIcon\n                        \n                    \n                \n            \n            \n                \nregisterIcon(definition: IconDefinition)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:74\n                \n            \n\n\n            \n                \n                    Registers a svg icon for use in mat-icon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        registerIconImpl\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerIconImpl(definition: IconDefinition)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts:84\n                \n            \n\n\n            \n                \n                    Backing implementation of registerIcon.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    definition\n                                    \n                                                IconDefinition\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Icon to register.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if registration was successful, otherwise false.\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@angular/core';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer, SafeHtml, SafeResourceUrl } from '@angular/platform-browser';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\nimport { DEFAULT_ICONS } from './default-icons';\n\n\n/**\n * Object definition for registering new svg icons.\n */\nexport interface IconDefinition {\n  /**\n   * Name to register the icon under.\n   */\n  name?: string;\n\n  /**\n   * Namespace to register the icon or icon set under.\n   */\n  namespace?: string;\n\n  /**\n   * Url to fetch the icon or icon set from.\n   */\n  url?: SafeResourceUrl;\n\n  /**\n   * Html containing the svg of the icon or icon set.\n   */\n  html?: SafeHtml;\n}\n\n\n/**\n * State handling the registration of icons for use with `mat-icon`.\n */\n@StateRepository()\n@State({ name: 'iconRegistry' })\n@Injectable()\nexport class IconRegistryState extends NgxsDataRepository {\n  /**\n   * Creates an instance of icon registry state.\n   *\n   * @param registry Material icon registry.\n   * @param sanitizer Service used to sanitize default imported urls and html.\n   */\n  constructor(\n    @Optional() private readonly registry: MatIconRegistry | null,\n    sanitizer: DomSanitizer\n  ) {\n    super();\n\n    for (const { name, namespace, url, html } of DEFAULT_ICONS) {\n      const safeDef: IconDefinition = {\n        name, namespace,\n        url: url && sanitizer.bypassSecurityTrustResourceUrl(url),\n        html: html && sanitizer.bypassSecurityTrustHtml(html)\n      };\n\n      this.registerIconImpl(safeDef);\n    }\n  }\n\n  /**\n   * Registers a svg icon for use in mat-icon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  @DataAction()\n  registerIcon(definition: IconDefinition): boolean {\n    return this.registerIconImpl(definition);\n  }\n\n  /**\n   * Backing implementation of registerIcon.\n   *\n   * @param definition Icon to register.\n   * @returns true if registration was successful, otherwise false.\n   */\n  private registerIconImpl(definition: IconDefinition): boolean {\n    if (!this.registry) {\n      return false;\n    }\n    if (!definition.url && !definition.html) {\n      return false;\n    }\n\n    const registry = this.registry as unknown as { [prop: string]: (...arg: unknown[]) => void };\n    const methodName = this.getMethodName(definition);\n    const method = registry[methodName];\n    const args = this.getArguments(definition);\n\n    if (!method) {\n      return false;\n    }\n    try {\n      method.apply(registry, args);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * Selects the MatIconRegistry method used to register the icon.\n   *\n   * @param definition Icon definition.\n   * @returns The name of the registry method.\n   */\n  private getMethodName({ name, namespace, url }: IconDefinition): string {\n    const parts = ['addSvgIcon'];\n    if (!name) {\n      parts.push('Set');\n    }\n    if (!url) {\n      parts.push('Literal');\n    }\n    if (namespace) {\n      parts.push('InNamespace');\n    }\n    return parts.join('');\n  }\n\n  /**\n   * Selects the argument used to call the registration method.\n   *\n   * @param definition Icon definition.\n   * @returns An array of arguments.\n   */\n  private getArguments({ name, namespace, url, html }: IconDefinition): unknown[] {\n    const args: unknown[] = [namespace, name, url ?? html];\n    return args.filter(value => !!value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InitializationState.html":{"url":"classes/InitializationState.html","title":"class - InitializationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InitializationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Boolean state that can also be awaited.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                deferred\n                            \n                            \n                                    Private\n                                initialized\n                            \n                            \n                                    Private\n                                resolve\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                set\n                            \n                            \n                                valueOf\n                            \n                            \n                                    Async\n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        deferred\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Promise(resolve => {\n    this.resolve = resolve;\n  })\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:37\n                        \n                    \n\n            \n                \n                    Promise used to await on.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initialized\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:35\n                        \n                    \n\n            \n                \n                    Whether this state is true or false.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        resolve\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:41\n                        \n                    \n\n            \n                \n                    Resolve function for the promise.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:46\n                \n            \n\n\n            \n                \n                    Sets the state to true and\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        valueOf\n                        \n                    \n                \n            \n            \n                \nvalueOf()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:65\n                \n            \n\n\n            \n                \n                    Gets the boolean state of this object.\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if set has been called.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        wait\n                        \n                    \n                \n            \n            \n                \n                    \n                    wait()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts:56\n                \n            \n\n\n            \n                \n                    Gets a promise that resolves when this state is set to true.\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        A promise.\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { animate, state, style, transition, trigger } from '@angular/animations';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, HostListener,\n  Input, OnDestroy, Output,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Message, MessageChannel, MessageService } from '../messages';\n\n\n/** Opened/closed state. */\ntype OpenedState = 'open' | 'open-instant' | 'closed';\n/** Expanded/collapsed state. */\ntype ExpandedState = 'open' | 'open-instant' | 'closed';\n/** Expanded state relative to an opposite drawer. */\ntype ExpandedState2 = 'collapsed' | 'half' | 'extended' | 'full';\n\n/** Default animation parameters. */\nconst EXPAND_COLLAPSE_PARAMS_DEFAULT = {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n};\n\n/**\n * Boolean state that can also be awaited.\n */\nclass InitializationState {\n  /** Whether this state is true or false. */\n  private initialized = false;\n  /** Promise used to await on. */\n  private deferred = new Promise(resolve => {\n    this.resolve = resolve;\n  });\n  /** Resolve function for the promise. */\n  private resolve: () => void;\n\n  /**\n   * Sets the state to true and\n   */\n  set(): void {\n    this.initialized = true;\n    this.resolve();\n  }\n\n  /**\n   * Gets a promise that resolves when this state is set to true.\n   *\n   * @returns A promise.\n   */\n  async wait(): Promise {\n    return this.deferred;\n  }\n\n  /**\n   * Gets the boolean state of this object.\n   *\n   * @returns true if set has been called.\n   */\n  valueOf(): boolean {\n    return this.initialized;\n  }\n}\n\n\n/**\n * Side drawer component.\n * Contains all the logic for opening/closing/expanding.\n */\n@Component({\n  selector: 'ccf-drawer',\n  exportAs: 'ccfDrawer',\n  templateUrl: './drawer.component.html',\n  styleUrls: ['./drawer.component.scss'],\n  animations: [\n    trigger('openClose', [\n      state('open, open-instant', style({\n        transform: 'none'\n      })),\n      state('closed', style({})),\n\n      transition('closed => open-instant', animate(0)),\n      transition('closed  open, open-instant => closed', animate('.5s ease-in-out'))\n    ]),\n    trigger('expandCollapse', [\n      state('collapsed', style({})),\n      state('half', style({\n        width: 'calc(50% - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('extended', style({\n        width: 'calc(100% - {{ width }}px - {{ margin }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n      state('full', style({\n        width: 'calc(100% - {{ margin }}px - {{ margin2 }}px)'\n      }), EXPAND_COLLAPSE_PARAMS_DEFAULT),\n\n      transition('*  *', animate('.5s ease-in-out'))\n    ])\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DrawerComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer';\n  /** Whether this is located at the end position. */\n  @HostBinding('class.ccf-drawer-end') // eslint-disable-line\n  get classEnd(): boolean {\n    return this.position === 'end';\n  }\n\n  /** Position of the drawer - start (left) or end (right). */\n  @Input()// eslint-disable-line\n  get position(): 'start' | 'end' {\n    return this._position;\n  }\n  set position(value: 'start' | 'end') {\n    this._position = value || 'start';\n  }\n  /** Property for position getter/setter. */\n  private _position: 'start' | 'end' = 'start';\n\n  /** Whether the drawer is opened. */\n  @Input() // eslint-disable-line\n  @HostBinding('class.ccf-drawer-opened') // eslint-disable-line\n  get opened(): boolean {\n    return this._opened;\n  }\n  set opened(value: boolean) {\n    this.toggle(coerceBooleanProperty(value));\n  }\n  /** Property for opened getter/setter. */\n  private _opened = false;\n\n  /** Whether the drawer is expanded. */\n  @Input() // eslint-disable-line\n  @HostBinding('class.ccf-drawer-expanded') // eslint-disable-line\n  get expanded(): boolean {\n    return this._expanded;\n  }\n  set expanded(value: boolean) {\n    this.toggleExpanded(coerceBooleanProperty(value));\n  }\n  /** Property for expanded getter/setter */\n  private _expanded = false;\n\n  /** Output emitting when the drawer has opened. */\n  @Output() readonly openedChange = new EventEmitter(true);\n  /** Output emitting when the drawer has expanded. */\n  @Output() readonly expandedChange = new EventEmitter(true);\n  /** Output emitting whenever the drawer state changes. */\n  @Output() readonly stateChange = new EventEmitter(true);\n\n  /** Current open/close animation state. */\n  @HostBinding('@openClose')\n  openedState: OpenedState = 'closed';\n\n  /** Expanded/collapsed state parameters. */\n  @HostBinding('@expandCollapse')  // eslint-disable-line\n  get expandedStateObj(): unknown {\n    return {\n      value: this.expandedState2, params: {\n        width: this.width, margin: this.measuredMargin,\n        margin2: this.margin2\n      }\n    };\n  }\n  /** Current expanded/collapsed animation state. */\n  expandedState: ExpandedState = 'closed';\n  /** Current expanded state relative to the opposite drawer. */\n  private expandedState2: ExpandedState2 = 'collapsed';\n\n  /** Gets the calculated width of the drawer. */\n  private get measuredWidth(): number {\n    if (this._measuredWidth > 0) {\n      return this._measuredWidth;\n    }\n\n    const element = this.element.nativeElement;\n    if (!element) {\n      return 0;\n    }\n\n    const bbox = element.getBoundingClientRect();\n    const width = bbox.right - bbox.left;\n    if (width === 0) {\n      return 0;\n    }\n\n    this._measuredWidth = width;\n    return width;\n  }\n  /** Cached measured width. */\n  private _measuredWidth = 0;\n  /** Width of opposite drawer. */\n  private width = 0;\n\n  /** Gets the calculated margin of the drawer. */\n  private get measuredMargin(): number {\n    if (this._measuredMargin > 0) {\n      return this._measuredMargin;\n    }\n\n    const element = this.element.nativeElement;\n    if (!element) {\n      return 0;\n    }\n\n    const styles = globalThis.getComputedStyle(element);\n    const property = this.position === 'start' ? 'margin-right' : 'margin-left';\n    const value = styles.getPropertyValue(property);\n    const margin = Number(value.slice(0, -2));\n\n    this._measuredMargin = margin;\n    return margin;\n  }\n  /** Cached measured margin. */\n  private _measuredMargin = 0;\n  /** Margin of the opposite drawer. */\n  private margin2 = 0;\n\n  /** Initialization state. */\n  private initialized = new InitializationState();\n  /** Connected message channel. */\n  private channel: MessageChannel;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of drawer component.\n   *\n   * @param messageService Service for sending/receiving event messages.\n   * @param cdr The change detector reference.\n   * @param element Reference to components HTML element.\n   */\n  constructor(\n    messageService: MessageService,\n    cdr: ChangeDetectorRef,\n    private readonly element: ElementRef\n  ) {\n    this.channel = messageService.connect(this);\n    this.subscriptions.add(this.channel.getMessages().subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    this.initialized.set();\n    setTimeout(() => this.channel.sendMessage({ type: 'drawer-initialized' }));\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the drawer.\n   */\n  open(): void {\n    this.toggle(true);\n  }\n\n  /**\n   * Closes the drawer.\n   */\n  close(): void {\n    this.toggle(false);\n  }\n\n  /**\n   * Toggles the drawer between opened and closed.\n   *\n   * @param [opened] Whether to open or close the drawer.\n   */\n  toggle(opened = !this.opened): void {\n    if (this.opened === opened) {\n      return;\n    }\n\n    if (!opened) {\n      this.openedState = 'closed';\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n      this._expanded = false;\n    } else if (this.initialized.valueOf()) {\n      this.openedState = 'open';\n    } else {\n      this.openedState = 'open-instant';\n    }\n\n    this._opened = opened;\n    this.sendToggle();\n  }\n\n  /**\n   * Expands the drawer.\n   */\n  openExpanded(): void {\n    this.toggleExpanded(true);\n  }\n\n  /**\n   * Collapses the drawer.\n   */\n  closeExpanded(): void {\n    this.toggleExpanded(false);\n  }\n\n  /**\n   * Toggles the drawer between expanded and collapsed.\n   *\n   * @param [expanded] Whether to expand or collapse the drawer.\n   */\n  toggleExpanded(expanded = !this.expanded): void {\n    if (this.expanded === expanded) {\n      return;\n    }\n\n    if (!expanded) {\n      this.expandedState = 'closed';\n      this.expandedState2 = 'collapsed';\n    } else if (this.initialized.valueOf()) {\n      this.expandedState = 'open';\n    } else {\n      this.expandedState = 'open-instant';\n    }\n\n    this._expanded = expanded;\n    this.sendToggle();\n  }\n\n  /**\n   * Listener to open/close animation completion.\n   */\n  @HostListener('@openClose.done') // eslint-disable-line\n  closeOpenDone(): void {\n    this.openedChange.emit(this.opened);\n  }\n\n  /**\n   * Listener to expand/collapse animation completion.\n   */\n  @HostListener('@expandCollapse.done') // eslint-disable-line\n  expandCollapseDone(): void {\n    this.expandedChange.emit(this.expanded);\n  }\n\n  /**\n   * Sends a toggle event to the channel.\n   * Waits until initialization is completed before sending.\n   */\n  private async sendToggle(): Promise {\n    await this.initialized.wait();\n    this.channel.sendMessage({\n      type: 'drawer-toggled',\n      opened: this.opened,\n      expanded: this.expanded,\n      width: this.measuredWidth,\n      margin: this.measuredMargin\n    });\n    this.stateChange.emit();\n  }\n\n  /**\n   * Processes an event.\n   *\n   * @param msg The event.\n   * @returns true if change detection should run.\n   */\n  private handleMessage(msg: Message): boolean {\n    switch (msg.payload.type) {\n      case 'drawer-toggled': {\n        const other = msg.source as DrawerComponent;\n        this.syncExpanded(other);\n        return true;\n      }\n\n      default:\n        return false;\n    }\n  }\n\n  /**\n   * Syncs the drawer widths and margin against the opposite drawer.\n   *\n   * @param other The opposite drawer.\n   */\n  private syncExpanded(other: DrawerComponent): void {\n    if (this.expanded || other.expanded) {\n      if (this.expanded && other.expanded) {\n        this.expandedState2 = other.expandedState2 = 'half';\n      } else if (this.expanded) {\n        if (other.opened) {\n          this.expandedState2 = 'extended';\n          this.width = other.measuredWidth + other.measuredMargin;\n        } else {\n          this.expandedState2 = 'full';\n          this.margin2 = other.measuredMargin;\n        }\n      } else {\n        if (this.opened) {\n          other.expandedState2 = 'extended';\n          other.width = this.measuredWidth + this.measuredMargin;\n        } else {\n          other.expandedState2 = 'full';\n          other.margin2 = this.measuredMargin;\n        }\n      }\n    }\n  }\n\n  /** Workaround for getter/setter pair not accepting different types. */\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_position: '' | 'start' | 'end';\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_opened: BooleanInput;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static ngAcceptInputType_expanded: BooleanInput;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListResult.html":{"url":"interfaces/ListResult.html","title":"interface - ListResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/list-result.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            color\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            rank\n                                        \n                                \n                                \n                                        \n                                            selected\n                                        \n                                \n                                \n                                        \n                                            tissueBlock\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        color\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        color:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rank\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rank:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissueBlock\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tissueBlock:     TissueBlockResult\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TissueBlockResult\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TissueBlockResult } from 'ccf-database';\n\nexport interface ListResult {\n  selected: boolean;\n  color?: string;\n  tissueBlock: TissueBlockResult;\n  rank?: number;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ListResultsState.html":{"url":"injectables/ListResultsState.html","title":"injectable - ListResultsState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ListResultsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                colorAssignments\n                            \n                            \n                                    Private\n                                dataState\n                            \n                            \n                                    Readonly\n                                highlightedNodeId$\n                            \n                            \n                                    Readonly\n                                listResults$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deselectListResult\n                            \n                            \n                                highlightNode\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                selectListResult\n                            \n                            \n                                setListResults\n                            \n                            \n                                unHighlightNode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataSourceService, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:38\n                            \n                        \n\n                \n                    \n                            Creates an instance of scene state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                    DataSourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injector service used to lazy load data state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deselectListResult\n                        \n                    \n                \n            \n            \n                \ndeselectListResult(result: ListResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                ListResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        highlightNode\n                        \n                    \n                \n            \n            \n                \nhighlightNode(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:81\n                \n            \n\n\n            \n                \n                    Initializes this state service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectListResult\n                        \n                    \n                \n            \n            \n                \nselectListResult(result: ListResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                ListResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setListResults\n                        \n                    \n                \n            \n            \n                \nsetListResults(listResults: ListResult[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:58\n                \n            \n\n\n            \n                \n                    Sets the list results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    listResults\n                                    \n                                                ListResult[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The list of results to display\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unHighlightNode\n                        \n                    \n                \n            \n            \n                \nunHighlightNode()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        colorAssignments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorAssignmentState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:38\n                        \n                    \n\n            \n                \n                    Color assignments state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:35\n                        \n                    \n\n            \n                \n                    The data state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        highlightedNodeId$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('highlightedNodeId'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        listResults$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('listResults'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts:30\n                        \n                    \n\n            \n                \n                    Scene to display in the 3d Scene\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { DataSourceService } from 'ccf-shared';\nimport { sortBy } from 'lodash';\nimport { combineLatest } from 'rxjs';\nimport { distinctUntilChanged, map, pluck, tap } from 'rxjs/operators';\n\nimport { ListResult } from '../../models/list-result';\nimport { ColorAssignmentState } from '../color-assignment/color-assignment.state';\nimport { DataState } from '../data/data.state';\n\n\nexport interface ListResultsStateModel {\n  listResults: ListResult[];\n  highlightedNodeId?: string;\n}\n\n@StateRepository()\n@State({\n  name: 'listResults',\n  defaults: {\n    listResults: []\n  }\n})\n@Injectable()\nexport class ListResultsState extends NgxsImmutableDataRepository implements NgxsOnInit {\n  /** Scene to display in the 3d Scene */\n  readonly listResults$ = this.state$.pipe(pluck('listResults'), distinctUntilChanged());\n  readonly highlightedNodeId$ = this.state$.pipe(pluck('highlightedNodeId'), distinctUntilChanged());\n\n\n  /** The data state */\n  private dataState: DataState;\n\n  /** Color assignments state */\n  private colorAssignments: ColorAssignmentState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load data state\n   */\n  constructor(\n    private readonly dataService: DataSourceService,\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Sets the list results\n   *\n   * @param listResults The list of results to display\n   */\n  @DataAction()\n  setListResults(@Payload('listResults') listResults: ListResult[]): void {\n    this.ctx.patchState({ listResults });\n  }\n\n  selectListResult(result: ListResult): void {\n    this.colorAssignments.assignColor(result.tissueBlock.spatialEntityId);\n  }\n\n  deselectListResult(result: ListResult): void {\n    this.colorAssignments.unassignColor(result.tissueBlock.spatialEntityId);\n  }\n\n  highlightNode(id: string): void {\n    this.ctx.patchState({ highlightedNodeId: id });\n  }\n\n  unHighlightNode(): void {\n    this.ctx.patchState({ highlightedNodeId: undefined });\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.dataState = this.injector.get(DataState);\n    this.colorAssignments = this.injector.get(ColorAssignmentState);\n\n    combineLatest([\n      this.dataState.tissueBlockData$,\n      this.colorAssignments.colorAssignments$\n    ]).pipe(\n      map(([tissueBlocks, colors]) => {\n        const topBlocks: ListResult[] = [];\n        const otherBlocks: ListResult[] = [];\n\n        for (const tissueBlock of tissueBlocks) {\n          const color = colors[tissueBlock.spatialEntityId];\n          if (color) {\n            topBlocks.push({\n              selected: true, color: color.color, tissueBlock, rank: color.rank\n            });\n          } else {\n            otherBlocks.push({\n              selected: false, tissueBlock\n            });\n          }\n        }\n\n        return sortBy(topBlocks, ['rank']).concat(otherBlocks);\n      }),\n      tap(results => this.setListResults(results))\n    ).subscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListResultsStateModel.html":{"url":"interfaces/ListResultsStateModel.html","title":"interface - ListResultsStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ListResultsStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            highlightedNodeId\n                                        \n                                \n                                \n                                        \n                                            listResults\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        highlightedNodeId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highlightedNodeId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listResults\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listResults:         ListResult[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ListResult[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { NgxsOnInit, State } from '@ngxs/store';\nimport { DataSourceService } from 'ccf-shared';\nimport { sortBy } from 'lodash';\nimport { combineLatest } from 'rxjs';\nimport { distinctUntilChanged, map, pluck, tap } from 'rxjs/operators';\n\nimport { ListResult } from '../../models/list-result';\nimport { ColorAssignmentState } from '../color-assignment/color-assignment.state';\nimport { DataState } from '../data/data.state';\n\n\nexport interface ListResultsStateModel {\n  listResults: ListResult[];\n  highlightedNodeId?: string;\n}\n\n@StateRepository()\n@State({\n  name: 'listResults',\n  defaults: {\n    listResults: []\n  }\n})\n@Injectable()\nexport class ListResultsState extends NgxsImmutableDataRepository implements NgxsOnInit {\n  /** Scene to display in the 3d Scene */\n  readonly listResults$ = this.state$.pipe(pluck('listResults'), distinctUntilChanged());\n  readonly highlightedNodeId$ = this.state$.pipe(pluck('highlightedNodeId'), distinctUntilChanged());\n\n\n  /** The data state */\n  private dataState: DataState;\n\n  /** Color assignments state */\n  private colorAssignments: ColorAssignmentState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load data state\n   */\n  constructor(\n    private readonly dataService: DataSourceService,\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Sets the list results\n   *\n   * @param listResults The list of results to display\n   */\n  @DataAction()\n  setListResults(@Payload('listResults') listResults: ListResult[]): void {\n    this.ctx.patchState({ listResults });\n  }\n\n  selectListResult(result: ListResult): void {\n    this.colorAssignments.assignColor(result.tissueBlock.spatialEntityId);\n  }\n\n  deselectListResult(result: ListResult): void {\n    this.colorAssignments.unassignColor(result.tissueBlock.spatialEntityId);\n  }\n\n  highlightNode(id: string): void {\n    this.ctx.patchState({ highlightedNodeId: id });\n  }\n\n  unHighlightNode(): void {\n    this.ctx.patchState({ highlightedNodeId: undefined });\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.dataState = this.injector.get(DataState);\n    this.colorAssignments = this.injector.get(ColorAssignmentState);\n\n    combineLatest([\n      this.dataState.tissueBlockData$,\n      this.colorAssignments.colorAssignments$\n    ]).pipe(\n      map(([tissueBlocks, colors]) => {\n        const topBlocks: ListResult[] = [];\n        const otherBlocks: ListResult[] = [];\n\n        for (const tissueBlock of tissueBlocks) {\n          const color = colors[tissueBlock.spatialEntityId];\n          if (color) {\n            topBlocks.push({\n              selected: true, color: color.color, tissueBlock, rank: color.rank\n            });\n          } else {\n            otherBlocks.push({\n              selected: false, tissueBlock\n            });\n          }\n        }\n\n        return sortBy(topBlocks, ['rank']).concat(otherBlocks);\n      }),\n      tap(results => this.setListResults(results))\n    ).subscribe();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Message.html":{"url":"interfaces/Message.html","title":"interface - Message","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Message\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A message sent on a channel.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            payload\n                                        \n                                \n                                \n                                        \n                                            source\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique identifier for a message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payload:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Data associated with this message.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        source:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    Sender of the message.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MessageChannel.html":{"url":"classes/MessageChannel.html","title":"class - MessageChannel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MessageChannel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Channel for sending and receiving messages.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                counter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMessages\n                            \n                            \n                                getMessagesFromSource\n                            \n                            \n                                getMessagesFromSources\n                            \n                            \n                                    Private\n                                nextMessageId\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(source, channel: Subject>, messages: Observable>)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:50\n                            \n                        \n\n                \n                    \n                            Creates a new channel.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        source\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message source.\n\n                                                        \n                                                \n                                                \n                                                        channel\n                                                  \n                                                        \n                                                                        Subject>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message send subject.\n\n                                                        \n                                                \n                                                \n                                                        messages\n                                                  \n                                                        \n                                                                        Observable>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The message receive observable.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        counter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:50\n                        \n                    \n\n            \n                \n                    Counter used to give each message a unique id.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getMessages\n                        \n                    \n                \n            \n            \n                \ngetMessages()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:83\n                \n            \n\n\n            \n                \n                    Gets an observable emitting all messages except for those sent by this source.\n\n\n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesFromSource\n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSource(source)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:93\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from a specific source.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMessagesFromSources\n                        \n                    \n                \n            \n            \n                \ngetMessagesFromSources(sources: [])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:103\n                \n            \n\n\n            \n                \n                    Gets an observable emitting messages sent from any of the specified sources.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sources\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The sources messages are filtered on.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        The message observable.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        nextMessageId\n                        \n                    \n                \n            \n            \n                \n                    \n                    nextMessageId()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:112\n                \n            \n\n\n            \n                \n                    Creates a unique message identifier.\n\n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        The identifier number.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(payload: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:70\n                \n            \n\n\n            \n                \n                    Sends a single message with a payload.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The message payload.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MessageService.html":{"url":"injectables/MessageService.html","title":"injectable - MessageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MessageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service for creating message channels.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                channel\n                            \n                            \n                                    Private\n                                messages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connect\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: MessageServiceConfig, parent: MessageService | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:130\n                            \n                        \n\n                \n                    \n                            Creates an instance of message service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        MessageServiceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The configuration for this service.\n\n                                                        \n                                                \n                                                \n                                                        parent\n                                                  \n                                                        \n                                                                        MessageService | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The parent message service, if any.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connect\n                        \n                    \n                \n            \n            \n                \nconnect(source)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:163\n                \n            \n\n\n            \n                \n                    Connects to a message channel.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    source\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The source of messages sent.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         MessageChannel\n\n                    \n                    \n                        A new connected message channel.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:153\n                \n            \n\n\n            \n                \n                    Clean up.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        channel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject>()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:128\n                        \n                    \n\n            \n                \n                    The message channel.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable>\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/services/message/message.service.ts:130\n                        \n                    \n\n            \n                \n                    The message listener.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageServiceConfig.html":{"url":"interfaces/MessageServiceConfig.html","title":"interface - MessageServiceConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MessageServiceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/services/message/message.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Message service configuration options.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isolated\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isolated\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isolated:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether to listen to parent messages.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy, Optional, SkipSelf } from '@angular/core';\nimport { from, Observable, Subject } from 'rxjs';\nimport { filter, mergeAll, takeWhile } from 'rxjs/operators';\n\n\n/**\n * Message service configuration options.\n */\nexport interface MessageServiceConfig {\n  /** Whether to listen to parent messages. */\n  isolated: boolean;\n}\n\n/**\n * A message sent on a channel.\n *\n * @template T The payload type.\n */\nexport interface Message {\n  /** Unique identifier for a message. */\n  id: number;\n  /** Sender of the message. */\n  source: unknown;\n  /** Data associated with this message. */\n  payload: T;\n}\n\n/** Default message service configuration. */\nexport const MESSAGE_SERVICE_DEFAULT_CONFIG: MessageServiceConfig = {\n  isolated: true\n};\n\n/** Token for specifying the message service configuration. */\nexport const MESSAGE_SERVICE_CONFIG = new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n);\n\n\n/**\n * Channel for sending and receiving messages.\n *\n * @template T The payload type.\n */\nexport class MessageChannel {\n  /** Counter used to give each message a unique id. */\n  private static counter = 0;\n\n  /**\n   * Creates a new channel.\n   *\n   * @param source The message source.\n   * @param channel The message send subject.\n   * @param messages The message receive observable.\n   */\n  constructor(\n    readonly source: unknown,\n    private channel: Subject>,\n    private messages: Observable>\n  ) { }\n\n  /**\n   * Sends a single message with a payload.\n   *\n   * @param payload The message payload.\n   */\n  sendMessage(payload: T): void {\n    this.channel.next({\n      id: this.nextMessageId(),\n      source: this.source,\n      payload\n    });\n  }\n\n  /**\n   * Gets an observable emitting all messages except for those sent by this source.\n   *\n   * @returns The message observable.\n   */\n  getMessages(): Observable> {\n    return this.messages.pipe(filter(msg => msg.source !== this.source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from a specific source.\n   *\n   * @param source The source messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSource(source: unknown): Observable> {\n    return this.getMessages().pipe(filter(msg => msg.source === source));\n  }\n\n  /**\n   * Gets an observable emitting messages sent from any of the specified sources.\n   *\n   * @param sources The sources messages are filtered on.\n   * @returns The message observable.\n   */\n  getMessagesFromSources(sources: unknown[]): Observable> {\n    return this.getMessages().pipe(filter(msg => sources.includes(msg.source)));\n  }\n\n  /**\n   * Creates a unique message identifier.\n   *\n   * @returns The identifier number.\n   */\n  private nextMessageId(): number {\n    return MessageChannel.counter++;\n  }\n}\n\n\n/**\n * Service for creating message channels.\n *\n * @template T The message payload type.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService implements OnDestroy {\n  /** The message channel. */\n  private channel = new Subject>();\n  /** The message listener. */\n  private messages: Observable>;\n\n  /**\n   * Creates an instance of message service.\n   *\n   * @param [config] The configuration for this service.\n   * @param [parent] The parent message service, if any.\n   */\n  constructor(@Inject(MESSAGE_SERVICE_CONFIG) readonly config: MessageServiceConfig,\n              @Optional() @SkipSelf() readonly parent: MessageService | null) {\n    if (config.isolated || !parent) {\n      this.messages = this.channel.asObservable();\n    } else {\n      this.messages = from([\n        this.channel,\n        parent.messages.pipe(takeWhile(() => !this.channel.closed))\n      ]).pipe(mergeAll());\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  ngOnDestroy(): void {\n    this.channel.complete();\n  }\n\n  /**\n   * Connects to a message channel.\n   *\n   * @param source The source of messages sent.\n   * @returns A new connected message channel.\n   */\n  connect(source: unknown): MessageChannel {\n    return new MessageChannel(source, this.channel, this.messages);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologyExplorationModule.html":{"url":"modules/OntologyExplorationModule.html","title":"module - OntologyExplorationModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologyExplorationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OntologyExplorationModule\n\n\n\ncluster_OntologyExplorationModule_exports\n\n\n\ncluster_OntologyExplorationModule_imports\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nOntologyExplorationModule -->\n\nOntologySearchModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologyExplorationModule -->\n\nOntologySelectionModule->OntologyExplorationModule\n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyExplorationModule -->\n\nOntologyTreeModule->OntologyExplorationModule\n\n\n\n\n\nOntologySearchModule \n\nOntologySearchModule \n\nOntologySearchModule  -->\n\nOntologyExplorationModule->OntologySearchModule \n\n\n\n\n\nOntologySelectionModule \n\nOntologySelectionModule \n\nOntologySelectionModule  -->\n\nOntologyExplorationModule->OntologySelectionModule \n\n\n\n\n\nOntologyTreeModule \n\nOntologyTreeModule \n\nOntologyTreeModule  -->\n\nOntologyExplorationModule->OntologyTreeModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-exploration.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologySelectionModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologySelectionModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OntologySearchModule } from './ontology-search/ontology-search.module';\nimport { OntologySelectionModule } from './ontology-selection/ontology-selection.module';\nimport { OntologyTreeModule } from './ontology-tree/ontology-tree.module';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OntologySearchModule,\n    OntologyTreeModule,\n    OntologySelectionModule\n  ],\n  exports: [OntologySearchModule, OntologyTreeModule, OntologySelectionModule]\n})\nexport class OntologyExplorationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OntologySearchComponent.html":{"url":"components/OntologySearchComponent.html","title":"component - OntologySearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OntologySearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componenet for searching the Ontology nodes.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-ontology-search\n            \n\n            \n                styleUrls\n                ./ontology-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ontology-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                autoCompleteOpen\n                            \n                            \n                                filteredResults$\n                            \n                            \n                                formControl\n                            \n                            \n                                    Public\n                                ontologyService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayFormatter\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSelect\n                            \n                            \n                                sortBySynonymResult\n                            \n                            \n                                sortLexically\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholderText\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ontologyService: OntologySearchService, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:45\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology search component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ontologyService\n                                                  \n                                                        \n                                                                        OntologySearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                instance of searchService which provides all the search functionality\n\n                                                        \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholderText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:29\n                            \n                        \n                \n                    \n                        Output event-emitter which emits the id of the OntologyTreeNode whose label was\nselected by the user in the search-results\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        displayFormatter\n                        \n                    \n                \n            \n            \n                \ndisplayFormatter(option?: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:78\n                \n            \n\n\n            \n                \n                    A formatter function to enable different display and selected value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        a search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        a part of the search result entry to be displayed as a display value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:60\n                \n            \n\n\n            \n                \n                    on-init lifecycle hook for this component -\ngets the searched value from the view, sends it to the filter function in the OntologyService,\nand gets the search results from the service\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelect\n                        \n                    \n                \n            \n            \n                \nonSelect(event: MatAutocompleteSelectedEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:107\n                \n            \n\n\n            \n                \n                    Callback function triggered when the user selects a value from search results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            MatAutocompleteSelectedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        instance of MatAutocompleteSelectedEvent\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortBySynonymResult\n                        \n                    \n                \n            \n            \n                \nsortBySynonymResult(this: void, entry: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:88\n                \n            \n\n\n            \n                \n                    Sorts by results which have synonyms\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                                void\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    entry\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        1 or -1\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortLexically\n                        \n                    \n                \n            \n            \n                \nsortLexically(this: void, entry: SearchResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:98\n                \n            \n\n\n            \n                \n                    Sorts lexically\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    this\n                                    \n                                                void\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    entry\n                                    \n                                                SearchResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search result entry\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        lower case value of node label\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        autoCompleteOpen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:40\n                        \n                    \n\n            \n                \n                    Determines if autocomplete is open or close.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredResults$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:45\n                        \n                    \n\n            \n                \n                    Observable which provides the filtered search results\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formControl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:34\n                        \n                    \n\n            \n                \n                    Instance of FormControl - tracks the value and validation status of an individual form control\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ontologyService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OntologySearchService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts:53\n                        \n                    \n\n            \n                \n                    instance of searchService which provides all the search functionality\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Input, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\nimport { OntologyTreeNode } from 'ccf-database';\nimport { get, sortBy } from 'lodash';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Observable } from 'rxjs';\nimport { filter, map, startWith, switchMap } from 'rxjs/operators';\n\nimport { OntologySearchService, SearchResult } from '../../../core/services/ontology-search/ontology-search.service';\n\n\n/**\n * Componenet for searching the Ontology nodes.\n */\n@Component({\n  selector: 'ccf-ontology-search',\n  templateUrl: './ontology-search.component.html',\n  styleUrls: ['./ontology-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OntologySearchComponent implements OnInit {\n  @Input() placeholderText: string;\n\n  /**\n   * Output event-emitter which emits the id of the OntologyTreeNode whose label was\n   * selected by the user in the search-results\n   */\n  @Output() readonly selected = new EventEmitter();\n\n  /**\n   * Instance of FormControl - tracks the value and validation status of an individual form control\n   */\n  formControl = new FormControl('');\n\n\n  /**\n   * Determines if autocomplete is open or close.\n   */\n  autoCompleteOpen = false;\n\n  /**\n   * Observable which provides the filtered search results\n   */\n  filteredResults$: Observable;\n\n  /**\n   * Creates an instance of ontology search component.\n   *\n   * @param ontologyService instance of searchService which provides all the search functionality\n   * @param ga Analytics service\n   */\n  constructor(public ontologyService: OntologySearchService, private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * on-init lifecycle hook for this component -\n   * gets the searched value from the view, sends it to the filter function in the OntologyService,\n   * and gets the search results from the service\n   */\n  ngOnInit(): void {\n    const valueChanges = this.formControl.valueChanges as Observable;\n    this.filteredResults$ = valueChanges.pipe(\n      filter(value => typeof value === 'string'),\n      startWith(''),\n      switchMap(value => this.ontologyService.filter(value)),\n      map(searchResults => sortBy(searchResults, [\n        this.sortBySynonymResult, 'index', this.sortLexically\n      ]))\n    );\n  }\n\n  /**\n   * A formatter function to enable different display and selected value\n   *\n   * @param option a search result entry\n   * @returns a part of the search result entry to be displayed as a display value\n   */\n  displayFormatter(option?: SearchResult): string {\n    return (option?.displayLabel ?? []).join('');\n  }\n\n  /**\n   * Sorts by results which have synonyms\n   *\n   * @param entry search result entry\n   * @returns 1 or -1\n   */\n  sortBySynonymResult(this: void, entry: SearchResult): number {\n    return entry.displayLabel.join().includes('(') ? 1 : -1;\n  }\n\n  /**\n   * Sorts lexically\n   *\n   * @param entry search result entry\n   * @returns lower case value of node label\n   */\n  sortLexically(this: void, entry: SearchResult): string {\n    return entry.node.label.toLowerCase();\n  }\n\n  /**\n   * Callback function triggered when the user selects a value from search results\n   *\n   * @param event instance of MatAutocompleteSelectedEvent\n   */\n  onSelect(event: MatAutocompleteSelectedEvent): void {\n    const node = get(event, ['option', 'value', 'node']) as OntologyTreeNode;\n    if (node) {\n      this.ga.event('search', 'ontology_search', node.id);\n      this.selected.emit(node);\n      this.formControl.reset();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    search\n    \n\n    \n      \n        \n          {{option.displayLabel[0]}}\n          {{option.displayLabel[1]}}\n          {{option.displayLabel[2]}}\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./ontology-search.component.scss\n                \n                .ccf-ontology-search {\n  width: 100%;\n\n  .field {\n    width: 100%;\n    \n  }\n\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-outline-end {\n      border-radius: 0 0.25rem 0.25rem 0;\n      margin: 0;\n    }\n\n    .mat-form-field-wrapper {\n      margin: 0;\n      \n\n      .mat-form-field-flex {\n        .mat-form-field-infix {\n          border: none;\n          height: 3rem;\n          \n\n          input {\n            margin-left: .4rem;\n          }\n        }\n        .mat-form-field-prefix {\n          top: .5rem;\n          border: none;\n        }\n      }\n    }\n\n    .mat-form-field-outline-start {\n      border-radius: 0.25rem 0 0 0.25rem;\n      min-width: 2.5rem;\n\t  }\n  }\n}\n\n::ng-deep .ccf-ontology-search.detached {\n  border: 0.125rem solid;\n  border-top: none;\n  border-radius: 0 0 0.25rem 0.25rem;\n  max-height: 18rem;\n\n  .results-container {\n    width: 23.75rem;\n    margin-bottom: 1rem;\n    overflow: auto;\n    max-height: 15rem;\n    scrollbar-width: thin;\n\n    mat-option {\n      height: 1.5rem;\n      width: 23.75rem;\n      \n      .search-term {\n        text-decoration: underline;\n      }\n    }\n  }\n\n}\n\n.autocomplete-open {\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-outline-start {\n      border-radius: 0.25rem 0 0 0;\n      border-bottom: none;\n    }\n\n    .mat-form-field-outline-end {\n      border-radius: 0 0.25rem 0 0;\n      border-bottom: none;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      search                                {{option.displayLabel[0]}}          {{option.displayLabel[1]}}          {{option.displayLabel[2]}}                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpatialSearchUiBehaviorComponent', 'selector': 'ccf-spatial-search-ui-behavior'},{'name': 'SpatialSearchUiComponent', 'selector': 'ccf-spatial-search-ui'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OntologySearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologySearchModule.html":{"url":"modules/OntologySearchModule.html","title":"module - OntologySearchModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologySearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OntologySearchModule\n\n\n\ncluster_OntologySearchModule_exports\n\n\n\ncluster_OntologySearchModule_declarations\n\n\n\n\nOntologySearchComponent\n\nOntologySearchComponent\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologySearchModule -->\n\nOntologySearchComponent->OntologySearchModule\n\n\n\n\n\nOntologySearchComponent \n\nOntologySearchComponent \n\nOntologySearchComponent  -->\n\nOntologySearchModule->OntologySearchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologySearchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { OntologySearchComponent } from './ontology-search.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule\n  ],\n  declarations: [OntologySearchComponent],\n  exports: [OntologySearchComponent]\n})\nexport class OntologySearchModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OntologySearchService.html":{"url":"injectables/OntologySearchService.html","title":"injectable - OntologySearchService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  OntologySearchService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Injectable OntologySearchService responsible for search result computations\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                nodes$\n                            \n                            \n                                    Public\n                                    Readonly\n                                rootNode$\n                            \n                            \n                                    Private\n                                treeModel\n                            \n                            \n                                    Private\n                                    Readonly\n                                treeModel$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                formatLabel\n                            \n                            \n                                getChildren\n                            \n                            \n                                getIndexOfMatch\n                            \n                            \n                                    Private\n                                lookup\n                            \n                            \n                                setTreeModel\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        filter\n                        \n                    \n                \n            \n            \n                \nfilter(value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:50\n                \n            \n\n\n            \n                \n                    Searches the ontology with the search-term\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the search term\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an array of search-results\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatLabel\n                        \n                    \n                \n            \n            \n                \nformatLabel(label: string, searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:111\n                \n            \n\n\n            \n                \n                    Formats label based on where the search-term was found in the OntologyTreeNode\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        label or first synonym-label of OntologyTreeNode which has the search-term\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search-term\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        an array in the form of [prefix, search-term, suffix]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChildren\n                        \n                    \n                \n            \n            \n                \ngetChildren(node: OntologyTreeNode)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:128\n                \n            \n\n\n            \n                \n                    Fetches the children of an ontology node.\nNote: This can be called without a reference to this.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            OntologyTreeNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The node for which to get children.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OntologyTreeNode[]\n\n                    \n                    \n                        An array of children, empty if the node has no children.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getIndexOfMatch\n                        \n                    \n                \n            \n            \n                \ngetIndexOfMatch(label: string, searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:100\n                \n            \n\n\n            \n                \n                    Gets index of match in the ontology label\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    label\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the provided ontology node label or synonym label\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the searched text in lower case\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the index of the match in the label\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        lookup\n                        \n                    \n                \n            \n            \n                \n                    \n                    lookup(nodes: Immutable[], searchValue: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:63\n                \n            \n\n\n            \n                \n                    looks up ontology nodes and composes search results\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    nodes\n                                    \n                                            Immutable[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Ontology nodes\n\n                                    \n                                \n                                \n                                    searchValue\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        search text in lower case\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SearchResult[]\n\n                    \n                    \n                        search results\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTreeModel\n                        \n                    \n                \n            \n            \n                \nsetTreeModel(treeModel: OntologyTreeModel)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    treeModel\n                                    \n                                            OntologyTreeModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        nodes$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.treeModel$.pipe(map(state => Object.values(state.nodes)))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:34\n                        \n                    \n\n            \n                \n                    All nodes in the ontology tree.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                            Readonly\n                        rootNode$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.treeModel$.pipe(map(state => state.nodes[state.root]))\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:37\n                        \n                    \n\n            \n                \n                    Root node of the ontology tree.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        treeModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :     OntologyTreeModel\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        treeModel$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { bind } from 'bind-decorator';\nimport { OntologyTreeModel, OntologyTreeNode } from 'ccf-database';\nimport { at } from 'lodash';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Search result interface type for the search results\n */\nexport interface SearchResult {\n  /** ensures order of search-results */\n  index: number;\n\n  /** label to be displayed in the view */\n  displayLabel: string[];\n\n  /**  instance of OntologyTreeNode, provides data associated with a search result */\n  node: OntologyTreeNode;\n}\n\n/**\n * Injectable OntologySearchService responsible for search result computations\n */\n@Injectable()\nexport class OntologySearchService {\n  private readonly treeModel$ = new ReplaySubject(1);\n  private treeModel: OntologyTreeModel;\n\n  /** All nodes in the ontology tree. */\n  public readonly nodes$ = this.treeModel$.pipe(map(state => Object.values(state.nodes)));\n\n  /** Root node of the ontology tree. */\n  public readonly rootNode$ = this.treeModel$.pipe(map(state => state.nodes[state.root]));\n\n  setTreeModel(treeModel: OntologyTreeModel): void {\n    this.treeModel$.next(treeModel);\n    this.treeModel = treeModel;\n  }\n\n  /**\n   * Searches the ontology with the search-term\n   *\n   * @param value the search term\n   * @returns an array of search-results\n   */\n  filter(value: string): Observable {\n    return this.nodes$.pipe(\n      map(nodes => this.lookup(nodes, value.toLowerCase()))\n    );\n  }\n\n  /**\n   * looks up ontology nodes and composes search results\n   *\n   * @param nodes Ontology nodes\n   * @param searchValue search text in lower case\n   * @returns search results\n   */\n  private lookup(nodes: Immutable[], searchValue: string): SearchResult[] {\n    const searchResults = new Map();\n\n    if (nodes) {\n      nodes.forEach((node: OntologyTreeNode) => {\n        const condition = node.label.toLowerCase().includes(searchValue);\n\n        if (condition && !searchResults.get(node.id)) {\n          searchResults.set(node.id, {\n            index: this.getIndexOfMatch(node.label, searchValue),\n            displayLabel: this.formatLabel(node.label, searchValue),\n            node\n          });\n        } else {\n          const match = node.synonymLabels.find((label) => label.toLowerCase().includes(searchValue));\n\n          if (match && !searchResults.get(node.id)) {\n            searchResults.set(node.id, {\n              index: this.getIndexOfMatch(node.label + ' (' + match + ')', searchValue),\n              displayLabel: this.formatLabel(node.label + ' (' + match + ')', searchValue),\n              node\n            });\n          }\n        }\n      });\n    }\n\n    return Array.from(searchResults.values());\n  }\n\n  /**\n   * Gets index of match in the ontology label\n   *\n   * @param label the provided ontology node label or synonym label\n   * @param searchValue the searched text in lower case\n   * @returns the index of the match in the label\n   */\n  getIndexOfMatch(label: string, searchValue: string): number {\n    return label.toLowerCase().indexOf(searchValue);\n  }\n\n  /**\n   * Formats label based on where the search-term was found in the OntologyTreeNode\n   *\n   * @param label label or first synonym-label of OntologyTreeNode which has the search-term\n   * @param searchValue search-term\n   * @returns an array in the form of [prefix, search-term, suffix]\n   */\n  formatLabel(label: string, searchValue: string): string[] {\n    const index = this.getIndexOfMatch(label, searchValue);\n    return [\n      label.slice(0, index),\n      label.slice(index, index + searchValue.length),\n      label.slice(index + searchValue.length)\n    ];\n  }\n\n  /**\n   * Fetches the children of an ontology node.\n   * Note: This can be called without a reference to `this`.\n   *\n   * @param node The node for which to get children.\n   * @returns An array of children, empty if the node has no children.\n   */\n  @bind\n  getChildren(node: OntologyTreeNode): OntologyTreeNode[] {\n    const nodes = this.treeModel?.nodes ?? {};\n    return at(nodes, node.children);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OntologySelection.html":{"url":"interfaces/OntologySelection.html","title":"interface - OntologySelection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OntologySelection\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/models/ontology-selection.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            location\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        location:     OntologyTreeNode | undefined\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OntologyTreeNode | undefined\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { OntologyTreeNode } from 'ccf-database';\n\nexport interface OntologySelection {\n  location: OntologyTreeNode | undefined;\n  id: string;\n  label: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OntologySelectionComponent.html":{"url":"components/OntologySelectionComponent.html","title":"component - OntologySelectionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OntologySelectionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts\n\n\n\n    \n        Description\n    \n    \n        Ontology selection component that encapsulates ontology search and tree components.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                OntologySearchService\n                \n            \n\n\n            \n                selector\n                ccf-ontology-selection\n            \n\n            \n                styleUrls\n                ./ontology-selection.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./ontology-selection.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ontologySearchService\n                            \n                            \n                                tree\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                header\n                            \n                            \n                                occurenceData\n                            \n                            \n                                ontologyFilter\n                            \n                            \n                                placeholderText\n                            \n                            \n                                termData\n                            \n                            \n                                treeModel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ontologySelection\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ontologySearchService: OntologySearchService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:53\n                            \n                        \n\n                \n                    \n                            Creates an instance of ontology selection component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ontologySearchService\n                                                  \n                                                        \n                                                                        OntologySearchService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service for searching the ontology.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        header\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        occurenceData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:28\n                            \n                        \n                \n                    \n                        A record of terms within the current filter.  To be passed on to ontology-tree\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ontologyFilter\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:45\n                            \n                        \n                \n                    \n                        Input list of selected ontology terms passed down to ontology-tree.\nUsed to change display of ontology tree when selection is made from\noutside the component.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholderText\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        termData\n                    \n                \n                \n                    \n                        Type :     Record\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:33\n                            \n                        \n                \n                    \n                        A record of terms the app currently has data for.  To be passed on to ontology-tree\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        treeModel\n                    \n                \n                \n                    \n                        Type :     OntologyTreeModel\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:38\n                            \n                        \n                \n                    \n                        The ontology tree model to display\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        ontologySelection\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:53\n                            \n                        \n                \n                    \n                        Captures and passes along the change in ontologySelections.\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selected\n                        \n                    \n                \n            \n            \n                \nselected(ontologyNode: OntologyTreeNode)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:75\n                \n            \n\n\n            \n                \n                    Ontology selection event when node is selected from the search results.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ontologyNode\n                                    \n                                            OntologyTreeNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        selected ontology node.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ontologySearchService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OntologySearchService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:61\n                        \n                    \n\n            \n                \n                    Service for searching the ontology.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tree\n                        \n                    \n                \n            \n                \n                    \n                        Type :         OntologyTreeComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild(OntologyTreeComponent, {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts:23\n                        \n                    \n\n            \n                \n                    View child of search component\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnChanges, Output, SimpleChanges, ViewChild } from '@angular/core';\nimport { OntologyTreeModel, OntologyTreeNode } from 'ccf-database';\n\nimport { OntologySelection } from '../../../core/models/ontology-selection';\nimport { OntologySearchService } from '../../../core/services/ontology-search/ontology-search.service';\nimport { OntologyTreeComponent } from '../ontology-tree/ontology-tree.component';\n\n\n/**\n * Ontology selection component that encapsulates ontology search and tree components.\n */\n@Component({\n  selector: 'ccf-ontology-selection',\n  templateUrl: './ontology-selection.component.html',\n  styleUrls: ['./ontology-selection.component.scss'],\n  providers: [OntologySearchService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OntologySelectionComponent implements OnChanges {\n  /**\n   * View child of search component\n   */\n  @ViewChild(OntologyTreeComponent, { static: false }) tree: OntologyTreeComponent;\n\n  /**\n   * A record of terms within the current filter.  To be passed on to ontology-tree\n   */\n  @Input() occurenceData: Record;\n\n  /**\n   * A record of terms the app currently has data for.  To be passed on to ontology-tree\n   */\n  @Input() termData: Record;\n\n  /**\n   * The ontology tree model to display\n   */\n  @Input() treeModel: OntologyTreeModel;\n\n  /**\n   * Input list of selected ontology terms passed down to ontology-tree.\n   * Used to change display of ontology tree when selection is made from\n   * outside the component.\n   */\n  @Input() ontologyFilter: string[];\n\n  @Input() header: boolean;\n  @Input() placeholderText: string;\n\n  /**\n   * Captures and passes along the change in ontologySelections.\n   */\n  @Output() readonly ontologySelection = new EventEmitter();\n\n  /**\n   * Creates an instance of ontology selection component.\n   *\n   * @param ontologySearchService Service for searching the ontology.\n   */\n  constructor(\n    public ontologySearchService: OntologySearchService,\n  ) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('treeModel' in changes && this.treeModel) {\n      this.ontologySearchService.setTreeModel(this.treeModel);\n    }\n  }\n\n  /**\n   * Ontology selection event when node is selected from the search results.\n   *\n   * @param ontologyNode selected ontology node.\n   */\n  selected(ontologyNode: OntologyTreeNode): void {\n    const nodes = this.treeModel?.nodes ?? {};\n    this.tree.expandAndSelect(ontologyNode, node => nodes[node.parent]);\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./ontology-selection.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpatialSearchUiBehaviorComponent', 'selector': 'ccf-spatial-search-ui-behavior'},{'name': 'SpatialSearchUiComponent', 'selector': 'ccf-spatial-search-ui'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OntologySelectionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologySelectionModule.html":{"url":"modules/OntologySelectionModule.html","title":"module - OntologySelectionModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologySelectionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OntologySelectionModule\n\n\n\ncluster_OntologySelectionModule_declarations\n\n\n\ncluster_OntologySelectionModule_exports\n\n\n\ncluster_OntologySelectionModule_imports\n\n\n\ncluster_OntologySelectionModule_OntologySelectionComponent_providers\n\n\n\n\nOntologySelectionComponent\n\nOntologySelectionComponent\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologySelectionModule -->\n\nOntologySelectionComponent->OntologySelectionModule\n\n\n\n\n\nOntologySelectionComponent \n\nOntologySelectionComponent \n\nOntologySelectionComponent  -->\n\nOntologySelectionModule->OntologySelectionComponent \n\n\n\n\n\nOntologySearchService\n\nOntologySearchService\n\nOntologySelectionComponent -->\n\nOntologySearchService->OntologySelectionComponent\n\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologySelectionModule -->\n\nOntologySearchModule->OntologySelectionModule\n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologySelectionModule -->\n\nOntologyTreeModule->OntologySelectionModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologySelectionComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            OntologySearchModule\n                        \n                        \n                            OntologyTreeModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologySelectionComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { OntologySearchModule } from '../ontology-search/ontology-search.module';\nimport { OntologyTreeModule } from '../ontology-tree/ontology-tree.module';\nimport { OntologySelectionComponent } from './ontology-selection.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    OntologySearchModule,\n    OntologyTreeModule\n  ],\n  declarations: [OntologySelectionComponent],\n  exports: [OntologySelectionComponent],\n})\nexport class OntologySelectionModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OntologyTreeModule.html":{"url":"modules/OntologyTreeModule.html","title":"module - OntologyTreeModule","body":"\n                   \n\n\n\n\n    Modules\n    OntologyTreeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OntologyTreeModule\n\n\n\ncluster_OntologyTreeModule_declarations\n\n\n\ncluster_OntologyTreeModule_exports\n\n\n\n\nOntologyTreeComponent\n\nOntologyTreeComponent\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyTreeModule -->\n\nOntologyTreeComponent->OntologyTreeModule\n\n\n\n\n\nOntologyTreeComponent \n\nOntologyTreeComponent \n\nOntologyTreeComponent  -->\n\nOntologyTreeModule->OntologyTreeComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OntologyTreeComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OntologyTreeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\nimport { OntologyTreeComponent } from './ontology-tree.component';\nimport { OpacitySliderModule } from 'ccf-shared';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OpacitySliderModule\n  ],\n  declarations: [OntologyTreeComponent],\n  exports: [OntologyTreeComponent],\n})\nexport class OntologyTreeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultsBrowserComponent.html":{"url":"components/ResultsBrowserComponent.html","title":"component - ResultsBrowserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResultsBrowserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts\n\n\n\n    \n        Description\n    \n    \n        ResultsBrowser is the container component in charge of rendering the label and stats of\nthe results as well as handling the virtual scrolling and click emitters of\nResultsBrowserItems.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-results-browser\n            \n\n            \n                styleUrls\n                ./results-browser.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./results-browser.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                atScrollBottom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleHover\n                            \n                            \n                                handleLinkClick\n                            \n                            \n                                handleSelection\n                            \n                            \n                                handleUnhover\n                            \n                            \n                                onScroll\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                aggregateData\n                            \n                            \n                                header\n                            \n                            \n                                highlighted\n                            \n                            \n                                listResults\n                            \n                            \n                                resultLabel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                itemHovered\n                            \n                            \n                                itemUnhovered\n                            \n                            \n                                linkClicked\n                            \n                            \n                                listResultDeselected\n                            \n                            \n                                listResultSelected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:64\n                            \n                        \n\n                \n                    \n                            Creates an instance of results browser component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Analytics service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        aggregateData\n                    \n                \n                \n                    \n                        Type :     Immutable\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:29\n                            \n                        \n                \n                    \n                        Input used to add a list of stats at the top the results browser\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        header\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        highlighted\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        listResults\n                    \n                \n                \n                    \n                        Type :         Immutable\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:24\n                            \n                        \n                \n                    \n                        Input array of List Results to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        resultLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:34\n                            \n                        \n                \n                    \n                        Input allowing the title of the result browser to be set outside of the component\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        itemHovered\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:56\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        itemUnhovered\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:58\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        linkClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:44\n                            \n                        \n                \n                    \n                        Output emitting the result that was clicked on and its relevant information.\nUsed for opening and rendering the result viewer.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        listResultDeselected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:54\n                            \n                        \n                \n                    \n                        Output emitting the link result deselected\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        listResultSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:49\n                            \n                        \n                \n                    \n                        Output emitting the link result selected\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleHover\n                        \n                    \n                \n            \n            \n                \nhandleHover(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleLinkClick\n                        \n                    \n                \n            \n            \n                \nhandleLinkClick(link: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:93\n                \n            \n\n\n            \n                \n                    Notifies on link click\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the link clicked\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSelection\n                        \n                    \n                \n            \n            \n                \nhandleSelection(result: Immutable, selected: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:79\n                \n            \n\n\n            \n                \n                    Notifies listeners when a selection/deselection is made\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    result\n                                    \n                                                Immutable\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the list result\n\n                                    \n                                \n                                \n                                    selected\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        whether to select or deselect the result\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleUnhover\n                        \n                    \n                \n            \n            \n                \nhandleUnhover()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onScroll\n                        \n                    \n                \n            \n            \n                \nonScroll(event: UIEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:102\n                \n            \n\n\n            \n                \n                    Handles the scroll event to detect when scroll is at the bottom.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            UIEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The scroll event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        atScrollBottom\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts:64\n                        \n                    \n\n            \n                \n                    Keeps track of whether or not the virtual scroll viewport is scrolled all the way to the bottom.\nUsed to determine whether or not to render the gradient at the bottom.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Immutable } from '@angular-ru/common/typings/immutability';\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AggregateResult } from 'ccf-database';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { ListResult } from '../../../core/models/list-result';\n\n\n/**\n * ResultsBrowser is the container component in charge of rendering the label and stats of\n * the results as well as handling the virtual scrolling and click emitters of\n * ResultsBrowserItems.\n */\n@Component({\n  selector: 'ccf-results-browser',\n  templateUrl: './results-browser.component.html',\n  styleUrls: ['./results-browser.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ResultsBrowserComponent {\n  /**\n   * Input array of List Results to display\n   */\n  @Input() listResults: Immutable;\n\n  /**\n   * Input used to add a list of stats at the top the results browser\n   */\n  @Input() aggregateData: Immutable;\n\n  /**\n   * Input allowing the title of the result browser to be set outside of the component\n   */\n  @Input() resultLabel: string;\n\n  @Input() highlighted: string;\n\n  @Input() header: boolean;\n\n  /**\n   * Output emitting the result that was clicked on and its relevant information.\n   * Used for opening and rendering the result viewer.\n   */\n  @Output() readonly linkClicked = new EventEmitter();\n\n  /**\n   * Output emitting the link result selected\n   */\n  @Output() readonly listResultSelected = new EventEmitter>();\n\n  /**\n   * Output emitting the link result deselected\n   */\n  @Output() readonly listResultDeselected = new EventEmitter>();\n\n  @Output() readonly itemHovered = new EventEmitter();\n\n  @Output() readonly itemUnhovered = new EventEmitter();\n\n  /**\n   * Keeps track of whether or not the virtual scroll viewport is scrolled all the way to the bottom.\n   * Used to determine whether or not to render the gradient at the bottom.\n   */\n  atScrollBottom = false;\n\n  /**\n   * Creates an instance of results browser component.\n   *\n   * @param ga Analytics service\n   */\n  constructor(private readonly ga: GoogleAnalyticsService) { }\n\n  /**\n   * Notifies listeners when a selection/deselection is made\n   *\n   * @param result the list result\n   * @param selected whether to select or deselect the result\n   */\n  handleSelection(result: Immutable, selected: boolean): void {\n    this.ga.event('list_result_selected', 'results_browser', this.resultLabel, +selected);\n    if (selected) {\n      this.listResultSelected.next(result);\n    } else {\n      this.listResultDeselected.next(result);\n    }\n  }\n\n  /**\n   * Notifies on link click\n   *\n   * @param link the link clicked\n   */\n  handleLinkClick(link: string): void {\n    this.linkClicked.emit(link);\n  }\n\n  /**\n   * Handles the scroll event to detect when scroll is at the bottom.\n   *\n   * @param event The scroll event.\n   */\n  onScroll(event: UIEvent): void {\n    if (!event.target) {\n      return;\n    }\n    const { clientHeight, scrollHeight, scrollTop } = event.target as Element;\n    const diff = scrollHeight - scrollTop - clientHeight;\n    this.atScrollBottom = diff \n    \n\n    \n        \n  \n    {{ resultLabel }}\n    \n      {{stat.count}}\n      {{stat.label}}\n    \n  \n\n  \n    \n      \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./results-browser.component.scss\n                \n                .results-browser-container {\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 3rem);\n  padding: 0 1.5rem 1.5rem 1.5rem;\n\n  .stat-box {\n    margin-bottom: 1.5rem;\n    line-height: 1.25;\n    min-height: 7.75rem;\n\n    #title {\n      font-size: 1.25rem;\n      margin-bottom: 0.75rem;\n    }\n\n    .stat-row {\n      display: flex;\n      flex-direction: row;\n\n      .stat-value {\n        margin-right: 1rem;\n        width: 5.5rem;\n        text-align: right;\n        font-weight: 600;\n      }\n      .stat-label {\n        font-weight: 300;\n      }\n    }\n  }\n\n  .results-browser-list {\n    display: flex;\n    flex-direction: column;\n    overflow-y: auto;\n    scrollbar-width: thin;\n    padding-right: .5rem;\n    height: calc(100vh - 20rem);\n\n    &.header-hidden {\n      height: calc(100vh - 16rem);\n    }\n\n    .browser-item-container {\n      width: 100%;\n    }\n  }\n\n  .scroll-gradient {\n    position: absolute;\n    height: 3rem;\n    width: 95%;\n    bottom: 0;\n    pointer-events: none;\n\n\n    &.hidden {\n      display: none;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ resultLabel }}          {{stat.count}}      {{stat.label}}                          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpatialSearchUiBehaviorComponent', 'selector': 'ccf-spatial-search-ui-behavior'},{'name': 'SpatialSearchUiComponent', 'selector': 'ccf-spatial-search-ui'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResultsBrowserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResultsBrowserModule.html":{"url":"modules/ResultsBrowserModule.html","title":"module - ResultsBrowserModule","body":"\n                   \n\n\n\n\n    Modules\n    ResultsBrowserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ResultsBrowserModule\n\n\n\ncluster_ResultsBrowserModule_exports\n\n\n\ncluster_ResultsBrowserModule_imports\n\n\n\ncluster_ResultsBrowserModule_declarations\n\n\n\n\nResultsBrowserComponent\n\nResultsBrowserComponent\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nResultsBrowserModule -->\n\nResultsBrowserComponent->ResultsBrowserModule\n\n\n\n\n\nResultsBrowserComponent \n\nResultsBrowserComponent \n\nResultsBrowserComponent  -->\n\nResultsBrowserModule->ResultsBrowserComponent \n\n\n\n\n\nDonorCardModule\n\nDonorCardModule\n\nResultsBrowserModule -->\n\nDonorCardModule->ResultsBrowserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ResultsBrowserComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DonorCardModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ResultsBrowserComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { ScrollingModule } from '@angular/cdk/scrolling';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ResultsBrowserComponent } from './results-browser.component';\nimport { DonorCardModule } from '../donor-card/donor-card.module';\n\n\n@NgModule({\n  declarations: [ResultsBrowserComponent],\n  imports: [\n    CommonModule,\n    ScrollingModule,\n    DonorCardModule\n  ],\n  exports: [ResultsBrowserComponent]\n})\nexport class ResultsBrowserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RunSpatialSearchComponent.html":{"url":"components/RunSpatialSearchComponent.html","title":"component - RunSpatialSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RunSpatialSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/run-spatial-search/run-spatial-search.component.ts\n\n\n\n    \n        Description\n    \n    \n        Button that opens up the Spatial Search config\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-run-spatial-search\n            \n\n            \n                styleUrls\n                ./run-spatial-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./run-spatial-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                className\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClick\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/run-spatial-search/run-spatial-search.component.ts:19\n                            \n                        \n                \n                    \n                        Emits when the button is clicked\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-run-spatial-search\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-run-spatial-search'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/run-spatial-search/run-spatial-search.component.ts:14\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-run-spatial-search'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/run-spatial-search/run-spatial-search.component.ts:14\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Output } from '@angular/core';\n\n/**\n * Button that opens up the Spatial Search config\n */\n@Component({\n  selector: 'ccf-run-spatial-search',\n  templateUrl: './run-spatial-search.component.html',\n  styleUrls: ['./run-spatial-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RunSpatialSearchComponent {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-run-spatial-search';\n\n  /**\n   * Emits when the button is clicked\n   */\n  @Output() readonly buttonClick = new EventEmitter();\n}\n\n    \n\n    \n        \n  Run Spatial Search\n  travel_explore\n\n\n\n    \n\n    \n                \n                    ./run-spatial-search.component.scss\n                \n                :host {\n  .run-spatial-search-button {\n    ::ng-deep .mat-button-wrapper {\n      display: flex;\n      align-items: center;\n  \n      .mat-icon {\n        margin-left: 9.75px;\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Run Spatial Search  travel_explore'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpatialSearchUiBehaviorComponent', 'selector': 'ccf-spatial-search-ui-behavior'},{'name': 'SpatialSearchUiComponent', 'selector': 'ccf-spatial-search-ui'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RunSpatialSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RunSpatialSearchModule.html":{"url":"modules/RunSpatialSearchModule.html","title":"module - RunSpatialSearchModule","body":"\n                   \n\n\n\n\n    Modules\n    RunSpatialSearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RunSpatialSearchModule\n\n\n\ncluster_RunSpatialSearchModule_declarations\n\n\n\ncluster_RunSpatialSearchModule_exports\n\n\n\n\nRunSpatialSearchComponent\n\nRunSpatialSearchComponent\n\n\n\nRunSpatialSearchModule\n\nRunSpatialSearchModule\n\nRunSpatialSearchModule -->\n\nRunSpatialSearchComponent->RunSpatialSearchModule\n\n\n\n\n\nRunSpatialSearchComponent \n\nRunSpatialSearchComponent \n\nRunSpatialSearchComponent  -->\n\nRunSpatialSearchModule->RunSpatialSearchComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/run-spatial-search/run-spatial-search.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RunSpatialSearchComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            RunSpatialSearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { RunSpatialSearchComponent } from './run-spatial-search.component';\n\n@NgModule({\n  imports: [CommonModule, MatButtonModule, MatIconModule],\n  declarations: [RunSpatialSearchComponent],\n  exports: [RunSpatialSearchComponent]\n})\nexport class RunSpatialSearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SceneState.html":{"url":"injectables/SceneState.html","title":"injectable - SceneState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SceneState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n        \n\n\n            \n                Description\n            \n            \n                3d Scene state\n\n            \n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                colorAssignments\n                            \n                            \n                                    Private\n                                dataState\n                            \n                            \n                                    Readonly\n                                highlightedId$\n                            \n                            \n                                    Private\n                                listResults\n                            \n                            \n                                    Readonly\n                                referenceOrgans$\n                            \n                            \n                                    Readonly\n                                scene$\n                            \n                            \n                                    Readonly\n                                selectedReferenceOrgans$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngxsOnInit\n                            \n                            \n                                    Static\n                                referenceOrgans\n                            \n                            \n                                sceneNodeClicked\n                            \n                            \n                                sceneNodeHovered\n                            \n                            \n                                sceneNodeUnhover\n                            \n                            \n                                setReferenceOrgans\n                            \n                            \n                                setScene\n                            \n                            \n                                setSelectedReferenceOrgans\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dataService: DataSourceService, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:70\n                            \n                        \n\n                \n                    \n                            Creates an instance of scene state.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dataService\n                                                  \n                                                        \n                                                                    DataSourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Injector service used to lazy load data state\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:141\n                \n            \n\n\n            \n                \n                    Initializes this state service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        referenceOrgans\n                        \n                    \n                \n            \n            \n                \n                    \n                    referenceOrgans(state: SceneStateModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                SceneStateModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OrganInfo[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sceneNodeClicked\n                        \n                    \n                \n            \n            \n                \nsceneNodeClicked(undefined: NodeClickEvent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:119\n                \n            \n\n\n            \n                \n                    Handle scene node clicks\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            NodeClickEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sceneNodeHovered\n                        \n                    \n                \n            \n            \n                \nsceneNodeHovered(node: SpatialSceneNode)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    node\n                                    \n                                            SpatialSceneNode\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sceneNodeUnhover\n                        \n                    \n                \n            \n            \n                \nsceneNodeUnhover()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:134\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setReferenceOrgans\n                        \n                    \n                \n            \n            \n                \nsetReferenceOrgans(referenceOrgans: OrganInfo[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:100\n                \n            \n\n\n            \n                \n                    Sets the reference organs\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    referenceOrgans\n                                    \n                                            OrganInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The reference organs available\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setScene\n                        \n                    \n                \n            \n            \n                \nsetScene(scene: SpatialSceneNode[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:110\n                \n            \n\n\n            \n                \n                    Sets the scene\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    scene\n                                    \n                                            SpatialSceneNode[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The active scene to display\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSelectedReferenceOrgans\n                        \n                    \n                \n            \n            \n                \nsetSelectedReferenceOrgans(selectedReferenceOrgans: OrganInfo[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:90\n                \n            \n\n\n            \n                \n                    Sets the selected reference organs\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    selectedReferenceOrgans\n                                    \n                                            OrganInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        colorAssignments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ColorAssignmentState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:68\n                        \n                    \n\n            \n                \n                    Color assignments state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataState\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DataState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:65\n                        \n                    \n\n            \n                \n                    The data state\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        highlightedId$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('highlightedId'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        listResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ListResultsState\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        referenceOrgans$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('referenceOrgans'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:56\n                        \n                    \n\n            \n                \n                    Available Reference Organs\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        scene$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('scene'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:60\n                        \n                    \n\n            \n                \n                    Scene to display in the 3d Scene\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedReferenceOrgans$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.state$.pipe(pluck('selectedReferenceOrgans'), distinctUntilChanged())\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/scene/scene.state.ts:58\n                        \n                    \n\n            \n                \n                    Selected Reference Organs\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { NgxsOnInit, Selector, State } from '@ngxs/store';\nimport { NodeClickEvent, SpatialSceneNode } from 'ccf-body-ui';\nimport { ALL_POSSIBLE_ORGANS, DataSourceService, OrganInfo } from 'ccf-shared';\nimport { combineLatest } from 'rxjs';\nimport { distinctUntilChanged, map, pluck, take, tap } from 'rxjs/operators';\n\nimport { ColorAssignmentState } from '../color-assignment/color-assignment.state';\nimport { DataState } from '../data/data.state';\nimport { ListResultsState } from '../list-results/list-results.state';\n\nexport const DEFAULT_SELECTED_ORGANS = new Set(['Skin', 'Heart', 'Kidney', 'Spleen']);\n\nexport interface SceneStateModel {\n  scene: SpatialSceneNode[];\n  referenceOrgans: OrganInfo[];\n  selectedReferenceOrgans: OrganInfo[];\n\n  selectedAnatomicalStructures: unknown[];\n  anatomicalStructureSettings: {\n    [iri: string]: {\n      enabled: boolean;\n      visible: boolean;\n      opacity: boolean;\n    };\n  };\n  highlightedId?: string;\n}\n\n/**\n * 3d Scene state\n */\n@StateRepository()\n@State({\n  name: 'scene',\n  defaults: {\n    scene: [],\n    referenceOrgans: [],\n    selectedReferenceOrgans: [],\n    selectedAnatomicalStructures: [],\n    anatomicalStructureSettings: {}\n  }\n})\n@Injectable()\nexport class SceneState extends NgxsImmutableDataRepository implements NgxsOnInit {\n  @Selector()\n  static referenceOrgans(state: SceneStateModel): OrganInfo[] {\n    return state.referenceOrgans;\n  }\n\n  /** Available Reference Organs */\n  readonly referenceOrgans$ = this.state$.pipe(pluck('referenceOrgans'), distinctUntilChanged());\n  /** Selected Reference Organs */\n  readonly selectedReferenceOrgans$ = this.state$.pipe(pluck('selectedReferenceOrgans'), distinctUntilChanged());\n  /** Scene to display in the 3d Scene */\n  readonly scene$ = this.state$.pipe(pluck('scene'), distinctUntilChanged());\n\n  readonly highlightedId$ = this.state$.pipe(pluck('highlightedId'), distinctUntilChanged());\n\n  /** The data state */\n  private dataState: DataState;\n\n  /** Color assignments state */\n  private colorAssignments: ColorAssignmentState;\n\n  private listResults: ListResultsState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load data state\n   */\n  constructor(\n    private readonly dataService: DataSourceService,\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Sets the selected reference organs\n   *\n   * @param referenceOrgans The selected reference organs selected\n   */\n  @DataAction()\n  setSelectedReferenceOrgans(@Payload('selectedReferenceOrgans') selectedReferenceOrgans: OrganInfo[]): void {\n    this.ctx.patchState({ selectedReferenceOrgans });\n  }\n\n  /**\n   * Sets the reference organs\n   *\n   * @param referenceOrgans The reference organs available\n   */\n  @DataAction()\n  setReferenceOrgans(@Payload('referenceOrgans') referenceOrgans: OrganInfo[]): void {\n    this.ctx.patchState({ referenceOrgans });\n  }\n\n  /**\n   * Sets the scene\n   *\n   * @param scene The active scene to display\n   */\n  @DataAction()\n  setScene(@Payload('scene') scene: SpatialSceneNode[]): void {\n    this.ctx.patchState({ scene });\n  }\n\n  /**\n   * Handle scene node clicks\n   *\n   * @param param0 scene node click event\n   */\n  sceneNodeClicked({ node, ctrlClick }: NodeClickEvent): void {\n    if (node.representation_of &&\n      node['@id'] !== 'http://purl.org/ccf/latest/ccf.owl#VHFSkin'\n      && node.entityId // Disables this path. Need to update logic here.\n    ) {\n      this.dataState.updateFilter({ ontologyTerms: [node.representation_of] });\n    } else if (node.entityId) {\n      this.colorAssignments.assignColor(node['@id'], !ctrlClick);\n    }\n  }\n\n  sceneNodeHovered(node: SpatialSceneNode): void {\n    this.listResults.highlightNode(node['@id']);\n  }\n\n  sceneNodeUnhover(): void {\n    this.listResults.unHighlightNode();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.dataState = this.injector.get(DataState);\n    this.colorAssignments = this.injector.get(ColorAssignmentState);\n    this.listResults = this.injector.get(ListResultsState);\n\n    // Initialize reference organ info\n    this.dataService.getReferenceOrgans().pipe(\n      map(refOrgans => {\n        const organIds = new Set(refOrgans.map(o => o.representation_of));\n        return ALL_POSSIBLE_ORGANS\n          .filter(organ => organIds.has(organ.id))\n          .map(organ => ({ ...organ, disabled: false, numResults: 0 }));\n      }),\n      take(1),\n      tap(organs => {\n        this.setReferenceOrgans(organs);\n        this.setSelectedReferenceOrgans(organs.filter(organ => DEFAULT_SELECTED_ORGANS.has(organ.organ)));\n      })\n    ).subscribe();\n\n    // Update scene as the overall state changes\n    combineLatest([\n      this.dataState.sceneData$,\n      this.selectedReferenceOrgans$,\n      this.colorAssignments.colorAssignments$,\n      this.dataService.getReferenceOrgans(),\n      this.listResults.highlightedNodeId$\n    ]).pipe(\n      map(([scene, selectedOrgans, colors, refOrganData, highlightedNodeId]) => {\n        const activeOrgans = new Set(selectedOrgans.map(o => o.id));\n        const refOrgans = new Set(refOrganData.filter(o => activeOrgans.has(o.representation_of)).map(o => o['@id']));\n        return scene.filter(node =>\n          (node.ccf_annotations?.some?.(tag => activeOrgans.has(tag))) ||\n          (node.reference_organ && refOrgans.has(node.reference_organ))\n        ).map((node): SpatialSceneNode =>\n          node.entityId && (Object.prototype.hasOwnProperty.call(colors, node['@id']) || highlightedNodeId === node['@id']) ?\n            ({\n              ...node,\n              color: highlightedNodeId === node['@id'] ?\n                [30, 136, 229, 255] :\n                colors[node['@id']].rgba as [number, number, number, number]\n            }) : node\n        );\n      }),\n      tap(scene => this.setScene(scene))\n    ).subscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SceneStateModel.html":{"url":"interfaces/SceneStateModel.html","title":"interface - SceneStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SceneStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            anatomicalStructureSettings\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            highlightedId\n                                        \n                                \n                                \n                                        \n                                            referenceOrgans\n                                        \n                                \n                                \n                                        \n                                            scene\n                                        \n                                \n                                \n                                        \n                                            selectedAnatomicalStructures\n                                        \n                                \n                                \n                                        \n                                            selectedReferenceOrgans\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anatomicalStructureSettings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anatomicalStructureSettings:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highlightedId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highlightedId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        referenceOrgans\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        referenceOrgans:     OrganInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OrganInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scene\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        scene:     SpatialSceneNode[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpatialSceneNode[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedAnatomicalStructures\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedAnatomicalStructures:     []\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     []\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectedReferenceOrgans\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selectedReferenceOrgans:     OrganInfo[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OrganInfo[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Injector } from '@angular/core';\nimport { DataAction, Payload, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { NgxsOnInit, Selector, State } from '@ngxs/store';\nimport { NodeClickEvent, SpatialSceneNode } from 'ccf-body-ui';\nimport { ALL_POSSIBLE_ORGANS, DataSourceService, OrganInfo } from 'ccf-shared';\nimport { combineLatest } from 'rxjs';\nimport { distinctUntilChanged, map, pluck, take, tap } from 'rxjs/operators';\n\nimport { ColorAssignmentState } from '../color-assignment/color-assignment.state';\nimport { DataState } from '../data/data.state';\nimport { ListResultsState } from '../list-results/list-results.state';\n\nexport const DEFAULT_SELECTED_ORGANS = new Set(['Skin', 'Heart', 'Kidney', 'Spleen']);\n\nexport interface SceneStateModel {\n  scene: SpatialSceneNode[];\n  referenceOrgans: OrganInfo[];\n  selectedReferenceOrgans: OrganInfo[];\n\n  selectedAnatomicalStructures: unknown[];\n  anatomicalStructureSettings: {\n    [iri: string]: {\n      enabled: boolean;\n      visible: boolean;\n      opacity: boolean;\n    };\n  };\n  highlightedId?: string;\n}\n\n/**\n * 3d Scene state\n */\n@StateRepository()\n@State({\n  name: 'scene',\n  defaults: {\n    scene: [],\n    referenceOrgans: [],\n    selectedReferenceOrgans: [],\n    selectedAnatomicalStructures: [],\n    anatomicalStructureSettings: {}\n  }\n})\n@Injectable()\nexport class SceneState extends NgxsImmutableDataRepository implements NgxsOnInit {\n  @Selector()\n  static referenceOrgans(state: SceneStateModel): OrganInfo[] {\n    return state.referenceOrgans;\n  }\n\n  /** Available Reference Organs */\n  readonly referenceOrgans$ = this.state$.pipe(pluck('referenceOrgans'), distinctUntilChanged());\n  /** Selected Reference Organs */\n  readonly selectedReferenceOrgans$ = this.state$.pipe(pluck('selectedReferenceOrgans'), distinctUntilChanged());\n  /** Scene to display in the 3d Scene */\n  readonly scene$ = this.state$.pipe(pluck('scene'), distinctUntilChanged());\n\n  readonly highlightedId$ = this.state$.pipe(pluck('highlightedId'), distinctUntilChanged());\n\n  /** The data state */\n  private dataState: DataState;\n\n  /** Color assignments state */\n  private colorAssignments: ColorAssignmentState;\n\n  private listResults: ListResultsState;\n\n  /**\n   * Creates an instance of scene state.\n   *\n   * @param injector Injector service used to lazy load data state\n   */\n  constructor(\n    private readonly dataService: DataSourceService,\n    private readonly injector: Injector\n  ) {\n    super();\n  }\n\n  /**\n   * Sets the selected reference organs\n   *\n   * @param referenceOrgans The selected reference organs selected\n   */\n  @DataAction()\n  setSelectedReferenceOrgans(@Payload('selectedReferenceOrgans') selectedReferenceOrgans: OrganInfo[]): void {\n    this.ctx.patchState({ selectedReferenceOrgans });\n  }\n\n  /**\n   * Sets the reference organs\n   *\n   * @param referenceOrgans The reference organs available\n   */\n  @DataAction()\n  setReferenceOrgans(@Payload('referenceOrgans') referenceOrgans: OrganInfo[]): void {\n    this.ctx.patchState({ referenceOrgans });\n  }\n\n  /**\n   * Sets the scene\n   *\n   * @param scene The active scene to display\n   */\n  @DataAction()\n  setScene(@Payload('scene') scene: SpatialSceneNode[]): void {\n    this.ctx.patchState({ scene });\n  }\n\n  /**\n   * Handle scene node clicks\n   *\n   * @param param0 scene node click event\n   */\n  sceneNodeClicked({ node, ctrlClick }: NodeClickEvent): void {\n    if (node.representation_of &&\n      node['@id'] !== 'http://purl.org/ccf/latest/ccf.owl#VHFSkin'\n      && node.entityId // Disables this path. Need to update logic here.\n    ) {\n      this.dataState.updateFilter({ ontologyTerms: [node.representation_of] });\n    } else if (node.entityId) {\n      this.colorAssignments.assignColor(node['@id'], !ctrlClick);\n    }\n  }\n\n  sceneNodeHovered(node: SpatialSceneNode): void {\n    this.listResults.highlightNode(node['@id']);\n  }\n\n  sceneNodeUnhover(): void {\n    this.listResults.unHighlightNode();\n  }\n\n  /**\n   * Initializes this state service.\n   */\n  ngxsOnInit(): void {\n    super.ngxsOnInit();\n\n    // Injecting page and model states in the constructor breaks things!?\n    // Lazy load here\n    this.dataState = this.injector.get(DataState);\n    this.colorAssignments = this.injector.get(ColorAssignmentState);\n    this.listResults = this.injector.get(ListResultsState);\n\n    // Initialize reference organ info\n    this.dataService.getReferenceOrgans().pipe(\n      map(refOrgans => {\n        const organIds = new Set(refOrgans.map(o => o.representation_of));\n        return ALL_POSSIBLE_ORGANS\n          .filter(organ => organIds.has(organ.id))\n          .map(organ => ({ ...organ, disabled: false, numResults: 0 }));\n      }),\n      take(1),\n      tap(organs => {\n        this.setReferenceOrgans(organs);\n        this.setSelectedReferenceOrgans(organs.filter(organ => DEFAULT_SELECTED_ORGANS.has(organ.organ)));\n      })\n    ).subscribe();\n\n    // Update scene as the overall state changes\n    combineLatest([\n      this.dataState.sceneData$,\n      this.selectedReferenceOrgans$,\n      this.colorAssignments.colorAssignments$,\n      this.dataService.getReferenceOrgans(),\n      this.listResults.highlightedNodeId$\n    ]).pipe(\n      map(([scene, selectedOrgans, colors, refOrganData, highlightedNodeId]) => {\n        const activeOrgans = new Set(selectedOrgans.map(o => o.id));\n        const refOrgans = new Set(refOrganData.filter(o => activeOrgans.has(o.representation_of)).map(o => o['@id']));\n        return scene.filter(node =>\n          (node.ccf_annotations?.some?.(tag => activeOrgans.has(tag))) ||\n          (node.reference_organ && refOrgans.has(node.reference_organ))\n        ).map((node): SpatialSceneNode =>\n          node.entityId && (Object.prototype.hasOwnProperty.call(colors, node['@id']) || highlightedNodeId === node['@id']) ?\n            ({\n              ...node,\n              color: highlightedNodeId === node['@id'] ?\n                [30, 136, 229, 255] :\n                colors[node['@id']].rgba as [number, number, number, number]\n            }) : node\n        );\n      }),\n      tap(scene => this.setScene(scene))\n    ).subscribe();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchResult.html":{"url":"interfaces/SearchResult.html","title":"interface - SearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Search result interface type for the search results\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayLabel\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            node\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayLabel:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    label to be displayed in the view\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    ensures order of search-results\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        node\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        node:     OntologyTreeNode\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OntologyTreeNode\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    instance of OntologyTreeNode, provides data associated with a search result\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { bind } from 'bind-decorator';\nimport { OntologyTreeModel, OntologyTreeNode } from 'ccf-database';\nimport { at } from 'lodash';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n\n/**\n * Search result interface type for the search results\n */\nexport interface SearchResult {\n  /** ensures order of search-results */\n  index: number;\n\n  /** label to be displayed in the view */\n  displayLabel: string[];\n\n  /**  instance of OntologyTreeNode, provides data associated with a search result */\n  node: OntologyTreeNode;\n}\n\n/**\n * Injectable OntologySearchService responsible for search result computations\n */\n@Injectable()\nexport class OntologySearchService {\n  private readonly treeModel$ = new ReplaySubject(1);\n  private treeModel: OntologyTreeModel;\n\n  /** All nodes in the ontology tree. */\n  public readonly nodes$ = this.treeModel$.pipe(map(state => Object.values(state.nodes)));\n\n  /** Root node of the ontology tree. */\n  public readonly rootNode$ = this.treeModel$.pipe(map(state => state.nodes[state.root]));\n\n  setTreeModel(treeModel: OntologyTreeModel): void {\n    this.treeModel$.next(treeModel);\n    this.treeModel = treeModel;\n  }\n\n  /**\n   * Searches the ontology with the search-term\n   *\n   * @param value the search term\n   * @returns an array of search-results\n   */\n  filter(value: string): Observable {\n    return this.nodes$.pipe(\n      map(nodes => this.lookup(nodes, value.toLowerCase()))\n    );\n  }\n\n  /**\n   * looks up ontology nodes and composes search results\n   *\n   * @param nodes Ontology nodes\n   * @param searchValue search text in lower case\n   * @returns search results\n   */\n  private lookup(nodes: Immutable[], searchValue: string): SearchResult[] {\n    const searchResults = new Map();\n\n    if (nodes) {\n      nodes.forEach((node: OntologyTreeNode) => {\n        const condition = node.label.toLowerCase().includes(searchValue);\n\n        if (condition && !searchResults.get(node.id)) {\n          searchResults.set(node.id, {\n            index: this.getIndexOfMatch(node.label, searchValue),\n            displayLabel: this.formatLabel(node.label, searchValue),\n            node\n          });\n        } else {\n          const match = node.synonymLabels.find((label) => label.toLowerCase().includes(searchValue));\n\n          if (match && !searchResults.get(node.id)) {\n            searchResults.set(node.id, {\n              index: this.getIndexOfMatch(node.label + ' (' + match + ')', searchValue),\n              displayLabel: this.formatLabel(node.label + ' (' + match + ')', searchValue),\n              node\n            });\n          }\n        }\n      });\n    }\n\n    return Array.from(searchResults.values());\n  }\n\n  /**\n   * Gets index of match in the ontology label\n   *\n   * @param label the provided ontology node label or synonym label\n   * @param searchValue the searched text in lower case\n   * @returns the index of the match in the label\n   */\n  getIndexOfMatch(label: string, searchValue: string): number {\n    return label.toLowerCase().indexOf(searchValue);\n  }\n\n  /**\n   * Formats label based on where the search-term was found in the OntologyTreeNode\n   *\n   * @param label label or first synonym-label of OntologyTreeNode which has the search-term\n   * @param searchValue search-term\n   * @returns an array in the form of [prefix, search-term, suffix]\n   */\n  formatLabel(label: string, searchValue: string): string[] {\n    const index = this.getIndexOfMatch(label, searchValue);\n    return [\n      label.slice(0, index),\n      label.slice(index, index + searchValue.length),\n      label.slice(index + searchValue.length)\n    ];\n  }\n\n  /**\n   * Fetches the children of an ontology node.\n   * Note: This can be called without a reference to `this`.\n   *\n   * @param node The node for which to get children.\n   * @returns An array of children, empty if the node has no children.\n   */\n  @bind\n  getChildren(node: OntologyTreeNode): OntologyTreeNode[] {\n    const nodes = this.treeModel?.nodes ?? {};\n    return at(nodes, node.children);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetOrgan.html":{"url":"classes/SetOrgan.html","title":"class - SetOrgan","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetOrgan\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(organId: string | undefined)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.actions.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        organId\n                                                  \n                                                        \n                                                                    string | undefined\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[SpatialSearchUi] Set organ'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.actions.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SetSex {\n  static readonly type = '[SpatialSearchUi] Set sex';\n\n  constructor(readonly sex: 'male' | 'female') {}\n}\n\nexport class SetOrgan {\n  static readonly type = '[SpatialSearchUi] Set organ';\n\n  constructor(readonly organId: string | undefined) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SetSex.html":{"url":"classes/SetSex.html","title":"class - SetSex","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SetSex\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sex: \"male\" | \"female\")\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.actions.ts:2\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sex\n                                                  \n                                                        \n                                                                    \"male\" | \"female\"\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[SpatialSearchUi] Set sex'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.actions.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class SetSex {\n  static readonly type = '[SpatialSearchUi] Set sex';\n\n  constructor(readonly sex: 'male' | 'female') {}\n}\n\nexport class SetOrgan {\n  static readonly type = '[SpatialSearchUi] Set organ';\n\n  constructor(readonly organId: string | undefined) {}\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpatialSearchConfigBehaviorComponent.html":{"url":"components/SpatialSearchConfigBehaviorComponent.html","title":"component - SpatialSearchConfigBehaviorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpatialSearchConfigBehaviorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-spatial-search-config-behavior\n            \n\n            \n                styleUrls\n                ./spatial-search-config-behavior.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spatial-search-config-behavior.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                organs$\n                            \n                            \n                                    Readonly\n                                selectedOrgan$\n                            \n                            \n                                    Readonly\n                                sex$\n                            \n                            \n                                    Readonly\n                                updateOrgan\n                            \n                            \n                                    Readonly\n                                updateSex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClicked\n                            \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, spatialSearchDialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spatialSearchDialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buttonClicked\n                        \n                    \n                \n            \n            \n                \nbuttonClicked()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        organs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(SpatialSearchUiSelectors.organs)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        selectedOrgan$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(SpatialSearchUiSelectors.organ)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        sex$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(SpatialSearchUiSelectors.sex)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        updateOrgan\n                        \n                    \n                \n            \n                \n                    \n                        Default value : actionAsFn(SetOrgan)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Dispatch()\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        updateSex\n                        \n                    \n                \n            \n                \n                    \n                        Default value : actionAsFn(SetSex)\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Dispatch()\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { Select } from '@ngxs/store';\nimport { OrganInfo } from 'ccf-shared';\nimport { Observable } from 'rxjs';\n\nimport { actionAsFn } from '../../../core/store/action-as-fn';\nimport { SetOrgan, SetSex } from '../../../core/store/spatial-search-ui/spatial-search-ui.actions';\nimport { SpatialSearchUiSelectors } from '../../../core/store/spatial-search-ui/spatial-search-ui.selectors';\nimport { Sex, SpatialSearchConfigComponent } from '../spatial-search-config/spatial-search-config.component';\nimport { SpatialSearchUiBehaviorComponent } from '../spatial-search-ui-behavior/spatial-search-ui-behavior.component';\n\n\n\n@Component({\n  selector: 'ccf-spatial-search-config-behavior',\n  templateUrl: './spatial-search-config-behavior.component.html',\n  styleUrls: ['./spatial-search-config-behavior.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpatialSearchConfigBehaviorComponent {\n  @Select(SpatialSearchUiSelectors.sex)\n  readonly sex$: Observable;\n\n  @Select(SpatialSearchUiSelectors.organs)\n  readonly organs$: Observable;\n\n  @Select(SpatialSearchUiSelectors.organ)\n  readonly selectedOrgan$: Observable;\n\n  @Dispatch()\n  readonly updateSex = actionAsFn(SetSex);\n\n  @Dispatch()\n  readonly updateOrgan = actionAsFn(SetOrgan);\n\n  constructor(\n    private readonly dialogRef: MatDialogRef,\n    private readonly spatialSearchDialog: MatDialog\n  ) { }\n\n  buttonClicked(): void {\n    this.spatialSearchDialog.open(SpatialSearchUiBehaviorComponent);\n    this.close();\n  }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./spatial-search-config-behavior.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpatialSearchUiBehaviorComponent', 'selector': 'ccf-spatial-search-ui-behavior'},{'name': 'SpatialSearchUiComponent', 'selector': 'ccf-spatial-search-ui'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpatialSearchConfigBehaviorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpatialSearchConfigBehaviorModule.html":{"url":"modules/SpatialSearchConfigBehaviorModule.html","title":"module - SpatialSearchConfigBehaviorModule","body":"\n                   \n\n\n\n\n    Modules\n    SpatialSearchConfigBehaviorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SpatialSearchConfigBehaviorModule\n\n\n\ncluster_SpatialSearchConfigBehaviorModule_declarations\n\n\n\ncluster_SpatialSearchConfigBehaviorModule_imports\n\n\n\ncluster_SpatialSearchConfigBehaviorModule_exports\n\n\n\n\nSpatialSearchConfigBehaviorComponent\n\nSpatialSearchConfigBehaviorComponent\n\n\n\nSpatialSearchConfigBehaviorModule\n\nSpatialSearchConfigBehaviorModule\n\nSpatialSearchConfigBehaviorModule -->\n\nSpatialSearchConfigBehaviorComponent->SpatialSearchConfigBehaviorModule\n\n\n\n\n\nSpatialSearchConfigBehaviorComponent \n\nSpatialSearchConfigBehaviorComponent \n\nSpatialSearchConfigBehaviorComponent  -->\n\nSpatialSearchConfigBehaviorModule->SpatialSearchConfigBehaviorComponent \n\n\n\n\n\nSpatialSearchConfigModule\n\nSpatialSearchConfigModule\n\nSpatialSearchConfigBehaviorModule -->\n\nSpatialSearchConfigModule->SpatialSearchConfigBehaviorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpatialSearchConfigBehaviorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SpatialSearchConfigModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SpatialSearchConfigBehaviorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { SpatialSearchConfigModule } from '../spatial-search-config/spatial-search-config.module';\nimport { SpatialSearchConfigBehaviorComponent } from './spatial-search-config-behavior.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SpatialSearchConfigModule,\n    MatDialogModule\n  ],\n  declarations: [SpatialSearchConfigBehaviorComponent],\n  exports: [SpatialSearchConfigBehaviorComponent]\n})\nexport class SpatialSearchConfigBehaviorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpatialSearchConfigComponent.html":{"url":"components/SpatialSearchConfigComponent.html","title":"component - SpatialSearchConfigComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpatialSearchConfigComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-spatial-search-config\n            \n\n            \n                styleUrls\n                ./spatial-search-config.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spatial-search-config.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                className\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                organs\n                            \n                            \n                                selectedOrgan\n                            \n                            \n                                sex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClicked\n                            \n                            \n                                closeDialog\n                            \n                            \n                                updateOrgan\n                            \n                            \n                                updateSex\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        organs\n                    \n                \n                \n                    \n                        Type :     OrganInfo[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selectedOrgan\n                    \n                \n                \n                    \n                        Type :     OrganInfo\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        sex\n                    \n                \n                \n                    \n                        Type :         Sex\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        buttonClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        closeDialog\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        updateOrgan\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        updateSex\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:22\n                            \n                        \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-spatial-search-config\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-spatial-search-config'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-spatial-search-config'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { OrganInfo } from 'ccf-shared';\n\n\nexport type Sex = 'male' | 'female';\n\n@Component({\n  selector: 'ccf-spatial-search-config',\n  templateUrl: './spatial-search-config.component.html',\n  styleUrls: ['./spatial-search-config.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpatialSearchConfigComponent {\n  @HostBinding('class') readonly className = 'ccf-spatial-search-config';\n\n  @Input() organs: OrganInfo[];\n\n  @Input() selectedOrgan?: OrganInfo;\n\n  @Input() sex: Sex;\n\n  @Output() readonly updateSex = new EventEmitter();\n\n  @Output() readonly updateOrgan = new EventEmitter();\n\n  @Output() readonly buttonClicked = new EventEmitter();\n\n  @Output() readonly closeDialog = new EventEmitter();\n}\n\n    \n\n    \n        \n  \n    Configure Spatial Search\n    \n      info\n    \n  \n  \n    close\n  \n\n\n\n  Donor Sex: \n  \n    Male\n    Female\n  \n\n\n\n  Select an organ\n  \n    Organs\n    \n      \n        {{organ.name}}\n      \n    \n  \n\n\nContinue\n\n    \n\n    \n                \n                    ./spatial-search-config.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 2rem;\n  gap: 2rem;\n  width: 30.5rem;\n  height: 21.5rem;\n  box-shadow: 0px 25rem 25rem rgba(0, 0, 0, 0.16);\n  border-radius: .25rem;\n  font-size: 1rem;\n\n  .button {\n    cursor: pointer;\n  }\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n    font-size: 1.25rem;\n  \n    .header-left {\n      display: flex;\n      align-items: center;\n\n      .title {\n        margin-right: 1rem;\n      }\n    }\n\n    button {\n      padding: 0;\n      background: none;\n      border: none;\n      cursor: pointer;\n      outline: none;\n      border-radius: 0.25rem;\n      transition: 0.6s;\n    }\n  }\n\n  .sex-toggle {\n    display: flex;\n\n    .label, .radio {\n      margin-right: 2rem;\n    }\n  }\n\n  .organ-selector {\n    ::ng-deep .mat-form-field-wrapper {\n      padding-bottom: 0;\n\n      .mat-form-field-underline {\n        bottom: 0rem;\n        height: 0.125rem;\n      }\n    }\n  }\n\n  .continue-button {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    padding: .25rem 1rem;\n    width: 14rem;\n    height: 2rem;\n    border-width: 1px;\n    border-style: solid;\n    border-radius: .125rem;\n    box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.16);\n\n    &.disabled {\n      pointer-events: none;\n      opacity: .5;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Configure Spatial Search          info            close    Donor Sex:       Male    Female    Select an organ      Organs                  {{organ.name}}            Continue'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpatialSearchUiBehaviorComponent', 'selector': 'ccf-spatial-search-ui-behavior'},{'name': 'SpatialSearchUiComponent', 'selector': 'ccf-spatial-search-ui'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpatialSearchConfigComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpatialSearchConfigModule.html":{"url":"modules/SpatialSearchConfigModule.html","title":"module - SpatialSearchConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    SpatialSearchConfigModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SpatialSearchConfigModule\n\n\n\ncluster_SpatialSearchConfigModule_exports\n\n\n\ncluster_SpatialSearchConfigModule_declarations\n\n\n\n\nSpatialSearchConfigComponent\n\nSpatialSearchConfigComponent\n\n\n\nSpatialSearchConfigModule\n\nSpatialSearchConfigModule\n\nSpatialSearchConfigModule -->\n\nSpatialSearchConfigComponent->SpatialSearchConfigModule\n\n\n\n\n\nSpatialSearchConfigComponent \n\nSpatialSearchConfigComponent \n\nSpatialSearchConfigComponent  -->\n\nSpatialSearchConfigModule->SpatialSearchConfigComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpatialSearchConfigComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SpatialSearchConfigComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { SpatialSearchConfigComponent } from './spatial-search-config.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    MatSelectModule,\n    MatIconModule,\n    MatRadioModule,\n    MatButtonModule\n  ],\n  declarations: [SpatialSearchConfigComponent],\n  exports: [SpatialSearchConfigComponent]\n})\nexport class SpatialSearchConfigModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpatialSearchUiBehaviorComponent.html":{"url":"components/SpatialSearchUiBehaviorComponent.html","title":"component - SpatialSearchUiBehaviorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpatialSearchUiBehaviorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/spatial-search-ui-behavior/spatial-search-ui-behavior.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-spatial-search-ui-behavior\n            \n\n\n\n\n            \n                templateUrl\n                ./spatial-search-ui-behavior.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-ui-behavior/spatial-search-ui-behavior.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/spatial-search-ui-behavior/spatial-search-ui-behavior.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { SpatialSearchUiComponent } from '../spatial-search-ui/spatial-search-ui.component';\n\n\n\n@Component({\n  selector: 'ccf-spatial-search-ui-behavior',\n  templateUrl: './spatial-search-ui-behavior.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpatialSearchUiBehaviorComponent {\n\n  constructor(\n    private readonly dialogRef: MatDialogRef,\n  ) { }\n\n  close(): void {\n    this.dialogRef.close();\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpatialSearchUiBehaviorComponent', 'selector': 'ccf-spatial-search-ui-behavior'},{'name': 'SpatialSearchUiComponent', 'selector': 'ccf-spatial-search-ui'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpatialSearchUiBehaviorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpatialSearchUiBehaviorModule.html":{"url":"modules/SpatialSearchUiBehaviorModule.html","title":"module - SpatialSearchUiBehaviorModule","body":"\n                   \n\n\n\n\n    Modules\n    SpatialSearchUiBehaviorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SpatialSearchUiBehaviorModule\n\n\n\ncluster_SpatialSearchUiBehaviorModule_declarations\n\n\n\ncluster_SpatialSearchUiBehaviorModule_exports\n\n\n\ncluster_SpatialSearchUiBehaviorModule_imports\n\n\n\n\nSpatialSearchUiBehaviorComponent\n\nSpatialSearchUiBehaviorComponent\n\n\n\nSpatialSearchUiBehaviorModule\n\nSpatialSearchUiBehaviorModule\n\nSpatialSearchUiBehaviorModule -->\n\nSpatialSearchUiBehaviorComponent->SpatialSearchUiBehaviorModule\n\n\n\n\n\nSpatialSearchUiBehaviorComponent \n\nSpatialSearchUiBehaviorComponent \n\nSpatialSearchUiBehaviorComponent  -->\n\nSpatialSearchUiBehaviorModule->SpatialSearchUiBehaviorComponent \n\n\n\n\n\nSpatialSearchUiModule\n\nSpatialSearchUiModule\n\nSpatialSearchUiBehaviorModule -->\n\nSpatialSearchUiModule->SpatialSearchUiBehaviorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/spatial-search-ui-behavior/spatial-search-ui-behavior.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpatialSearchUiBehaviorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SpatialSearchUiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SpatialSearchUiBehaviorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { SpatialSearchUiModule } from '../spatial-search-ui/spatial-search-ui.module';\nimport { SpatialSearchUiBehaviorComponent } from './spatial-search-ui-behavior.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    SpatialSearchUiModule,\n    MatDialogModule\n  ],\n  declarations: [SpatialSearchUiBehaviorComponent],\n  exports: [SpatialSearchUiBehaviorComponent]\n})\nexport class SpatialSearchUiBehaviorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpatialSearchUiComponent.html":{"url":"components/SpatialSearchUiComponent.html","title":"component - SpatialSearchUiComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpatialSearchUiComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/spatial-search-ui/spatial-search-ui.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-spatial-search-ui\n            \n\n            \n                styleUrls\n                ./spatial-search-ui.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spatial-search-ui.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                className\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-spatial-search-ui\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-spatial-search-ui'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-ui/spatial-search-ui.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-spatial-search-ui'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spatial-search-ui/spatial-search-ui.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\n\n@Component({\n  selector: 'ccf-spatial-search-ui',\n  templateUrl: './spatial-search-ui.component.html',\n  styleUrls: ['./spatial-search-ui.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpatialSearchUiComponent {\n  @HostBinding('class') readonly className = 'ccf-spatial-search-ui';\n}\n\n    \n\n    \n        Spatial Search UI\n    \n\n    \n                \n                    ./spatial-search-ui.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 2rem;\n  gap: 1rem;\n  height: 95vh;\n  width: 78vw;\n  border-radius: .25px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Spatial Search UI'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpatialSearchUiBehaviorComponent', 'selector': 'ccf-spatial-search-ui-behavior'},{'name': 'SpatialSearchUiComponent', 'selector': 'ccf-spatial-search-ui'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpatialSearchUiComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialSearchUiModel.html":{"url":"interfaces/SpatialSearchUiModel.html","title":"interface - SpatialSearchUiModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialSearchUiModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Contains sex and organId for the Spatial Search\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            organId\n                                        \n                                \n                                \n                                        \n                                            sex\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        organId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:         Sex\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Sex\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Action, State, StateContext, Store } from '@ngxs/store';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { Sex } from '../../../shared/components/spatial-search-config/spatial-search-config.component';\nimport { SceneState } from '../scene/scene.state';\nimport { SetOrgan, SetSex } from './spatial-search-ui.actions';\n\n/**\n * Contains sex and organId for the Spatial Search\n */\nexport interface SpatialSearchUiModel {\n  sex: Sex;\n  organId?: string;\n}\n\n\n@State({\n  name: 'spatialSearchUi',\n  defaults: {\n    sex: 'male',\n    organId: undefined\n  }\n})\n@Injectable()\nexport class SpatialSearchUiState {\n  constructor(\n    private readonly store: Store,\n    private readonly ga: GoogleAnalyticsService\n  ) { }\n\n  /**\n   * Updates sex in the SpatialSearchUI and sets selected organ to undefined if not valid for the sex\n   */\n  @Action(SetSex)\n  setSex(ctx: StateContext, { sex }: SetSex): void {\n    const { organId } = ctx.getState();\n\n    ctx.patchState({ sex });\n    if (organId !== undefined && !this.organValidForSex(organId, sex)) {\n      ctx.dispatch(new SetOrgan(undefined));\n    }\n\n    this.ga.event('set_sex', 'spatial_search_ui', sex);\n  }\n\n  /**\n   * Updates organId in the SpatialSearchUI\n   */\n  @Action(SetOrgan)\n  setOrgan(ctx: StateContext, { organId }: SetOrgan): void {\n    ctx.patchState({ organId });\n    this.ga.event('set_organ', 'spatial_search_ui', organId);\n  }\n\n  /**\n   * Used to determine if an organ should be listed if a certain sex is selected\n   */\n  private organValidForSex(organId: string, sex: Sex): boolean {\n    const organs = this.store.selectSnapshot(SceneState.referenceOrgans);\n    const organ = organs.find(o => o.id === organId)!;\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    return organ.hasSex || organ.sex === sex;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpatialSearchUiModule.html":{"url":"modules/SpatialSearchUiModule.html","title":"module - SpatialSearchUiModule","body":"\n                   \n\n\n\n\n    Modules\n    SpatialSearchUiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SpatialSearchUiModule\n\n\n\ncluster_SpatialSearchUiModule_exports\n\n\n\ncluster_SpatialSearchUiModule_declarations\n\n\n\n\nSpatialSearchUiComponent\n\nSpatialSearchUiComponent\n\n\n\nSpatialSearchUiModule\n\nSpatialSearchUiModule\n\nSpatialSearchUiModule -->\n\nSpatialSearchUiComponent->SpatialSearchUiModule\n\n\n\n\n\nSpatialSearchUiComponent \n\nSpatialSearchUiComponent \n\nSpatialSearchUiComponent  -->\n\nSpatialSearchUiModule->SpatialSearchUiComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/spatial-search-ui/spatial-search-ui.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpatialSearchUiComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SpatialSearchUiComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { SpatialSearchUiComponent } from './spatial-search-ui.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [SpatialSearchUiComponent],\n  exports: [SpatialSearchUiComponent]\n})\nexport class SpatialSearchUiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SpatialSearchUiSelectors.html":{"url":"classes/SpatialSearchUiSelectors.html","title":"class - SpatialSearchUiSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SpatialSearchUiSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.selectors.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                organ\n                            \n                            \n                                    Static\n                                organId\n                            \n                            \n                                    Static\n                                organMatchesSex\n                            \n                            \n                                    Static\n                                organs\n                            \n                            \n                                    Static\n                                sex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        organ\n                        \n                    \n                \n            \n            \n                \n                    \n                    organ(id: string | undefined, organs: OrganInfo[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['undefined', 'undefined'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.selectors.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    organs\n                                    \n                                            OrganInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OrganInfo | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        organId\n                        \n                    \n                \n            \n            \n                \n                    \n                    organId(state: SpatialSearchUiModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['SpatialSearchUiState'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.selectors.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                SpatialSearchUiModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        organMatchesSex\n                        \n                    \n                \n            \n            \n                \n                    \n                    organMatchesSex(organ: OrganInfo, sex: Sex)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.selectors.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organ\n                                    \n                                            OrganInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sex\n                                    \n                                                Sex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        organs\n                        \n                    \n                \n            \n            \n                \n                    \n                    organs(sex: Sex, organs: OrganInfo[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['undefined', 'undefined'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.selectors.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sex\n                                    \n                                                Sex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    organs\n                                    \n                                            OrganInfo[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OrganInfo[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        sex\n                        \n                    \n                \n            \n            \n                \n                    \n                    sex(state: SpatialSearchUiModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['SpatialSearchUiState'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.selectors.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                SpatialSearchUiModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Sex\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\nimport { OrganInfo } from 'ccf-shared';\n\nimport { Sex } from '../../../shared/components/spatial-search-config/spatial-search-config.component';\nimport { SceneState } from '../scene/scene.state';\nimport { SpatialSearchUiModel, SpatialSearchUiState } from './spatial-search-ui.state';\n\n\nexport class SpatialSearchUiSelectors {\n  @Selector([SpatialSearchUiState])\n  static sex(state: SpatialSearchUiModel): Sex {\n    return state.sex;\n  }\n\n  @Selector([SpatialSearchUiState])\n  static organId(state: SpatialSearchUiModel): string | undefined {\n    return state.organId;\n  }\n\n  @Selector([SpatialSearchUiSelectors.organId, SceneState.referenceOrgans])\n  static organ(id: string | undefined, organs: OrganInfo[]): OrganInfo | undefined {\n    if (id === undefined) {\n      return undefined;\n    }\n\n    return organs.find(organ => organ.id === id);\n  }\n\n  @Selector([SpatialSearchUiSelectors.sex, SceneState.referenceOrgans])\n  static organs(sex: Sex, organs: OrganInfo[]): OrganInfo[] {\n    return organs.filter(organ => this.organMatchesSex(organ, sex));\n  }\n\n  static organMatchesSex(organ: OrganInfo, sex: Sex): boolean {\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    return organ.hasSex || organ.sex === sex;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpatialSearchUiState.html":{"url":"injectables/SpatialSearchUiState.html","title":"injectable - SpatialSearchUiState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SpatialSearchUiState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.state.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                organValidForSex\n                            \n                            \n                                setOrgan\n                            \n                            \n                                setSex\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, ga: GoogleAnalyticsService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.state.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        organValidForSex\n                        \n                    \n                \n            \n            \n                \n                    \n                    organValidForSex(organId: string, sex: Sex)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.state.ts:59\n                \n            \n\n\n            \n                \n                    Used to determine if an organ should be listed if a certain sex is selected\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    sex\n                                    \n                                                Sex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOrgan\n                        \n                    \n                \n            \n            \n                \nsetOrgan(ctx: StateContext, undefined: SetOrgan)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetOrgan)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.state.ts:51\n                \n            \n\n\n            \n                \n                    Updates organId in the SpatialSearchUI\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetOrgan\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSex\n                        \n                    \n                \n            \n            \n                \nsetSex(ctx: StateContext, undefined: SetSex)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(SetSex)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.state.ts:36\n                \n            \n\n\n            \n                \n                    Updates sex in the SpatialSearchUI and sets selected organ to undefined if not valid for the sex\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                                SetSex\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Action, State, StateContext, Store } from '@ngxs/store';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\n\nimport { Sex } from '../../../shared/components/spatial-search-config/spatial-search-config.component';\nimport { SceneState } from '../scene/scene.state';\nimport { SetOrgan, SetSex } from './spatial-search-ui.actions';\n\n/**\n * Contains sex and organId for the Spatial Search\n */\nexport interface SpatialSearchUiModel {\n  sex: Sex;\n  organId?: string;\n}\n\n\n@State({\n  name: 'spatialSearchUi',\n  defaults: {\n    sex: 'male',\n    organId: undefined\n  }\n})\n@Injectable()\nexport class SpatialSearchUiState {\n  constructor(\n    private readonly store: Store,\n    private readonly ga: GoogleAnalyticsService\n  ) { }\n\n  /**\n   * Updates sex in the SpatialSearchUI and sets selected organ to undefined if not valid for the sex\n   */\n  @Action(SetSex)\n  setSex(ctx: StateContext, { sex }: SetSex): void {\n    const { organId } = ctx.getState();\n\n    ctx.patchState({ sex });\n    if (organId !== undefined && !this.organValidForSex(organId, sex)) {\n      ctx.dispatch(new SetOrgan(undefined));\n    }\n\n    this.ga.event('set_sex', 'spatial_search_ui', sex);\n  }\n\n  /**\n   * Updates organId in the SpatialSearchUI\n   */\n  @Action(SetOrgan)\n  setOrgan(ctx: StateContext, { organId }: SetOrgan): void {\n    ctx.patchState({ organId });\n    this.ga.event('set_organ', 'spatial_search_ui', organId);\n  }\n\n  /**\n   * Used to determine if an organ should be listed if a certain sex is selected\n   */\n  private organValidForSex(organId: string, sex: Sex): boolean {\n    const organs = this.store.selectSnapshot(SceneState.referenceOrgans);\n    const organ = organs.find(o => o.id === organId)!;\n    // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n    return organ.hasSex || organ.sex === sex;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpinnerOverlayComponent.html":{"url":"components/SpinnerOverlayComponent.html","title":"component - SpinnerOverlayComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpinnerOverlayComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts\n\n\n\n    \n        Description\n    \n    \n        Overlay component that displays a progress spinner and\nan optional text description.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-spinner-overlay\n            \n\n            \n                styleUrls\n                ./spinner-overlay.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spinner-overlay.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                className\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:19\n                            \n                        \n                \n                    \n                        Whether the overlay is active/showing.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:22\n                            \n                        \n                \n                    \n                        Optional text description displayed alongside the spinner.\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-spinner-overlay\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-spinner-overlay'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:16\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-spinner-overlay'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts:16\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\n\n/**\n * Overlay component that displays a progress spinner and\n * an optional text description.\n */\n@Component({\n  selector: 'ccf-spinner-overlay',\n  templateUrl: './spinner-overlay.component.html',\n  styleUrls: ['./spinner-overlay.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpinnerOverlayComponent {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-spinner-overlay';\n\n  /** Whether the overlay is active/showing. */\n  @Input() @HostBinding('class.active') active = false;\n\n  /** Optional text description displayed alongside the spinner. */\n  @Input() text: string;\n}\n\n    \n\n    \n        \n{{ text }}\n\n    \n\n    \n                \n                    ./spinner-overlay.component.scss\n                \n                :host {\n  display: flex;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  z-index: 99;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  pointer-events: none;\n  visibility: hidden;\n  opacity: 0;\n  transition: visibility 0.6s, opacity 0.4s ease-in-out;\n\n  mat-spinner {\n    margin-bottom: 1rem;\n    opacity: 0;\n    transition: opacity 0.3s ease-in-out 0.3s;\n  }\n\n  &.active {\n    pointer-events: auto;\n    visibility: visible;\n    opacity: 1;\n\n    mat-spinner {\n      opacity: 1;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{ text }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpatialSearchUiBehaviorComponent', 'selector': 'ccf-spatial-search-ui-behavior'},{'name': 'SpatialSearchUiComponent', 'selector': 'ccf-spatial-search-ui'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SpinnerOverlayComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpinnerOverlayModule.html":{"url":"modules/SpinnerOverlayModule.html","title":"module - SpinnerOverlayModule","body":"\n                   \n\n\n\n\n    Modules\n    SpinnerOverlayModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SpinnerOverlayModule\n\n\n\ncluster_SpinnerOverlayModule_declarations\n\n\n\ncluster_SpinnerOverlayModule_exports\n\n\n\n\nSpinnerOverlayComponent\n\nSpinnerOverlayComponent\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule -->\n\nSpinnerOverlayComponent->SpinnerOverlayModule\n\n\n\n\n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent  -->\n\nSpinnerOverlayModule->SpinnerOverlayComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpinnerOverlayComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SpinnerOverlayComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { SpinnerOverlayComponent } from './spinner-overlay.component';\n\n\n@NgModule({\n  imports: [CommonModule, MatProgressSpinnerModule],\n  declarations: [SpinnerOverlayComponent],\n  exports: [SpinnerOverlayComponent]\n})\nexport class SpinnerOverlayModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreModule.html":{"url":"modules/StoreModule.html","title":"module - StoreModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/store/store.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { NgxsDataPluginModule } from '@ngxs-labs/data';\nimport { NgxsDispatchPluginModule } from '@ngxs-labs/dispatch-decorator';\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\nimport { NgxsModule } from '@ngxs/store';\nimport { GlobalConfigState } from 'ccf-shared';\n\nimport { environment } from '../../../environments/environment';\nimport { ColorAssignmentState } from './color-assignment/color-assignment.state';\nimport { DataState } from './data/data.state';\nimport { IconRegistryState } from './icon-registry/icon-registry.state';\nimport { ListResultsState } from './list-results/list-results.state';\nimport { SceneState } from './scene/scene.state';\nimport { SpatialSearchUiState } from './spatial-search-ui/spatial-search-ui.state';\n\n\n/**\n * States shared across the entire app.\n */\nexport const ROOT_STATES = [\n  GlobalConfigState,\n  ColorAssignmentState,\n  IconRegistryState,\n  ListResultsState,\n  DataState,\n  SceneState,\n  SpatialSearchUiState\n];\n\n@NgModule({\n  imports: [\n    // For some strange reason the data plugin is not happy being placed after the store module!?\n    NgxsDataPluginModule.forRoot(),\n\n    NgxsModule.forRoot(ROOT_STATES, {\n      developmentMode: !environment.production,\n      selectorOptions: {\n        injectContainerState: false\n      }\n      // Consider setting compatibility and executionStrategy\n      // https://www.ngxs.io/advanced/options\n    }),\n\n    NgxsDispatchPluginModule.forRoot(),\n\n    // Logger plugin must be last!\n    NgxsLoggerPluginModule.forRoot({\n      disabled: environment.production\n    })\n  ]\n})\nexport class StoreModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThemingModule.html":{"url":"modules/ThemingModule.html","title":"module - ThemingModule","body":"\n                   \n\n\n\n\n    Modules\n    ThemingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\n\nThemingService\n\nThemingService\n\n\n\nThemingModule\n\nThemingModule\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/theming/theming.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ThemingService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { APP_BOOTSTRAP_LISTENER, NgModule } from '@angular/core';\n\nimport { ThemingService } from './theming.service';\n\n\n@NgModule({\n  providers: [\n    { provide: APP_BOOTSTRAP_LISTENER, useValue: ThemingService.initialize, multi: true },\n    ThemingService\n  ]\n})\nexport class ThemingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemingService.html":{"url":"injectables/ThemingService.html","title":"injectable - ThemingService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/theming/theming.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Manages the currently active theme.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defaultTheme\n                            \n                            \n                                    Private\n                                element\n                            \n                            \n                                    Private\n                                injector\n                            \n                            \n                                    Private\n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                applyThemeClass\n                            \n                            \n                                getTheme\n                            \n                            \n                                    Static\n                                initialize\n                            \n                            \n                                initialize\n                            \n                            \n                                resetTheme\n                            \n                            \n                                setTheme\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultTheme: string | null)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:25\n                            \n                        \n\n                \n                    \n                            Creates the theming service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultTheme\n                                                  \n                                                        \n                                                                    string | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                An optional default theme.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        applyThemeClass\n                        \n                    \n                \n            \n            \n                \n                    \n                    applyThemeClass(cls: string, method: \"add\" | \"remove\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:83\n                \n            \n\n\n            \n                \n                    Adds or removes a theme class from the necessary components.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                    Description\n                                \n                            \n                            \n                                \n                                    cls\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                    \n                                        The theme class.\n\n                                    \n                                \n                                \n                                    method\n                                    \n                                            \"add\" | \"remove\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'add'\n                                    \n\n                                    \n                                        Whether to add or remove the theme.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTheme\n                        \n                    \n                \n            \n            \n                \ngetTheme()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:39\n                \n            \n\n\n            \n                \n                    Get the currently active theme.\n\n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        initialize\n                        \n                    \n                \n            \n            \n                \n                    \n                    initialize(component: ComponentRef<>)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:21\n                \n            \n\n\n            \n                \n                    Initializer called during bootstrap to set up theming.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                            ComponentRef<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initialize\n                        \n                    \n                \n            \n            \n                \ninitialize(element: ElementRef<>, injector: Injector)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:71\n                \n            \n\n\n            \n                \n                    Binds theming service to a component.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    element\n                                    \n                                            ElementRef<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    injector\n                                    \n                                                Injector\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetTheme\n                        \n                    \n                \n            \n            \n                \nresetTheme()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:60\n                \n            \n\n\n            \n                \n                    Resets the theme to the default.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTheme\n                        \n                    \n                \n            \n            \n                \nsetTheme(theme: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:48\n                \n            \n\n\n            \n                \n                    Sets the currently active theme.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new theme class.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        defaultTheme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:16\n                        \n                    \n\n            \n                \n                    Default theme class.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        element\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef<>\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        injector\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Injector\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        theme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/core/services/theming/theming.service.ts:18\n                        \n                    \n\n            \n                \n                    Currently active theme class.\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { OverlayContainer } from '@angular/cdk/overlay';\nimport { ComponentRef, ElementRef, Inject, Injector, Injectable, InjectionToken, Optional, Renderer2 } from '@angular/core';\n\n/** Token for specifying the default theme class. */\nexport const DEFAULT_THEME = new InjectionToken('Default theme class');\n\n/**\n * Manages the currently active theme.\n */\n@Injectable()\nexport class ThemingService {\n  private element: ElementRef;\n  private injector: Injector;\n  /** Default theme class. */\n  private defaultTheme: string;\n  /** Currently active theme class. */\n  private theme: string;\n\n  /** Initializer called during bootstrap to set up theming. */\n  static initialize(component: ComponentRef): void {\n    const { injector, location } = component;\n    const service = injector.get(ThemingService);\n    service.initialize(location, injector);\n  }\n\n  /**\n   * Creates the theming service.\n   *\n   * @param defaultTheme An optional default theme.\n   */\n  constructor(@Optional() @Inject(DEFAULT_THEME) defaultTheme: string | null) {\n    this.defaultTheme = this.theme = defaultTheme ?? '';\n  }\n\n  /**\n   * Get the currently active theme.\n   */\n  getTheme(): string {\n    return this.theme;\n  }\n\n  /**\n   * Sets the currently active theme.\n   *\n   * @param theme The new theme class.\n   */\n  setTheme(theme: string): void {\n    if (theme === this.theme) {\n      return;\n    }\n    this.applyThemeClass(this.theme, 'remove');\n    this.applyThemeClass(theme);\n    this.theme = theme;\n  }\n\n  /**\n   * Resets the theme to the default.\n   */\n  resetTheme(): void {\n    this.setTheme(this.defaultTheme);\n  }\n\n\n  /**\n   * Binds theming service to a component.\n   *\n   * @param component The top level component.\n   * @throws {Error} If the theming service has already been initialized.\n   */\n  initialize(element: ElementRef, injector: Injector): void {\n    this.element = element;\n    this.injector = injector;\n    this.applyThemeClass(this.getTheme());\n  }\n\n  /**\n   * Adds or removes a theme class from the necessary components.\n   *\n   * @param cls The theme class.\n   * @param method Whether to add or remove the theme.\n   */\n  private applyThemeClass(cls: string, method: 'add' | 'remove' = 'add'): void {\n    const { element, injector } = this;\n    if (!cls || !element || !injector) {\n      return;\n    }\n\n    const renderer = injector.get(Renderer2, null);\n    if (!renderer) {\n      return;\n    }\n\n    const root = element.nativeElement as HTMLElement;\n    const overlay = injector.get(OverlayContainer, null)?.getContainerElement();\n    const methodName = method === 'add' ? 'addClass' : 'removeClass';\n\n    renderer[methodName](root, cls);\n    if (overlay) {\n      renderer[methodName](overlay, cls);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ThumbnailCarouselComponent.html":{"url":"components/ThumbnailCarouselComponent.html","title":"component - ThumbnailCarouselComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ThumbnailCarouselComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts\n\n\n\n    \n        Description\n    \n    \n        Carousel containing sample thumbnails in expanded donor cards\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-thumbnail-carousel\n            \n\n            \n                styleUrls\n                ./thumbnail-carousel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./thumbnail-carousel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                className\n                            \n                            \n                                    Readonly\n                                config\n                            \n                            \n                                    Readonly\n                                navigation\n                            \n                            \n                                    Readonly\n                                uid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                itemId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                linkClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    prevButtonId\n                                \n                                \n                                    nextButtonId\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                \n                    \n                        Type :     DatasetResult[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:34\n                            \n                        \n                \n                    \n                        Items to show in the carousel\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        linkClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:39\n                            \n                        \n                \n                    \n                        Outputs the result whose link was clicked\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-thumbnail-carousel\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-thumbnail-carousel'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:29\n                        \n                    \n\n            \n                \n                    Primary css class selector\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        itemId\n                        \n                    \n                \n            \n            \n                \nitemId(_index: number, item: DatasetResult)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:89\n                \n            \n\n\n            \n                \n                    Extract a unique identifier for an item\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Unused\n\n                                    \n                                \n                                \n                                    item\n                                    \n                                            DatasetResult\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        An unique identifier\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-thumbnail-carousel'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:29\n                        \n                    \n\n            \n                \n                    Primary css class selector\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SwiperOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    allowTouchMove: false,\n    slidesOffsetBefore: 4,\n    slidesOffsetAfter: 4,\n    slidesPerView: 'auto',\n    spaceBetween: 4,\n    watchOverflow: true\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:63\n                        \n                    \n\n            \n                \n                    Swiper configuration\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        navigation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NavigationOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    // Normally I would have prefered referencing the elements themselves instead of using selectors\n    // However in this case it does not work with angular swiper\n    prevEl: '#' + this.prevButtonId,\n    nextEl: '#' + this.nextButtonId\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:75\n                        \n                    \n\n            \n                \n                    Navigation configuration\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        uid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : nextUid()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:44\n                        \n                    \n\n            \n                \n                    Per instance unique identifier\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        prevButtonId\n                    \n                \n\n                \n                    \n                        getprevButtonId()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:49\n                                \n                            \n                    \n                        \n                                HTML id for previous slide button\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nextButtonId\n                    \n                \n\n                \n                    \n                        getnextButtonId()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts:56\n                                \n                            \n                    \n                        \n                                HTML id for next slide button\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\nimport { DatasetResult } from 'ccf-database';\nimport { SwiperOptions } from 'swiper';\nimport { NavigationOptions } from 'swiper/types';\n\n// Returns a unique identifier\nconst nextUid = (() => {\n  let counter = -1;\n  return () => {\n    counter += 1;\n    return counter;\n  };\n})();\n\n\n/**\n * Carousel containing sample thumbnails in expanded donor cards\n */\n@Component({\n  selector: 'ccf-thumbnail-carousel',\n  templateUrl: './thumbnail-carousel.component.html',\n  styleUrls: ['./thumbnail-carousel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ThumbnailCarouselComponent {\n  /**\n   * Primary css class selector\n   */\n  @HostBinding('class') readonly className = 'ccf-thumbnail-carousel';\n\n  /**\n   * Items to show in the carousel\n   */\n  @Input() data: DatasetResult[];\n\n  /**\n   * Outputs the result whose link was clicked\n   */\n  @Output() readonly linkClicked = new EventEmitter();\n\n  /**\n   * Per instance unique identifier\n   */\n  readonly uid = nextUid();\n\n  /**\n   * HTML id for previous slide button\n   */\n  get prevButtonId(): string {\n    return `ccf-thumbnail-carousel-prev-button-${this.uid}`;\n  }\n\n  /**\n   * HTML id for next slide button\n   */\n  get nextButtonId(): string {\n    return `ccf-thumbnail-carousel-next-button-${this.uid}`;\n  }\n\n  /**\n   * Swiper configuration\n   */\n  readonly config: SwiperOptions = {\n    allowTouchMove: false,\n    slidesOffsetBefore: 4,\n    slidesOffsetAfter: 4,\n    slidesPerView: 'auto',\n    spaceBetween: 4,\n    watchOverflow: true\n  };\n\n  /**\n   * Navigation configuration\n   */\n  readonly navigation: NavigationOptions = {\n    // Normally I would have prefered referencing the elements themselves instead of using selectors\n    // However in this case it does not work with angular swiper\n    prevEl: '#' + this.prevButtonId,\n    nextEl: '#' + this.nextButtonId\n  };\n\n  /**\n   * Extract a unique identifier for an item\n   *\n   * @param _index Unused\n   * @param item The item\n   * @returns An unique identifier\n   */\n  itemId(_index: number, item: DatasetResult): string {\n    return item.thumbnail;\n  }\n}\n\n    \n\n    \n        \n  \n    navigate_before\n  \n\n\n\n  \n    \n      \n        \n          {{ item.technology }}\n        \n        \n          DATA\n          open_in_new\n        \n      \n    \n  \n\n\n\n  \n    \n    \n\n    navigate_next\n  \n\n\n    \n\n    \n                \n                    ./thumbnail-carousel.component.scss\n                \n                :host {\n  display: flex;\n\n  .swiper {\n    flex-grow: 1;\n    padding-bottom: 0.3125rem;\n\n    ::ng-deep .swiper-slide {\n      width: 3.75rem;\n      height: 2.8125rem;\n    }\n  }\n\n  .prev, .next {\n    display: flex;\n    align-items: center;\n\n    height: 2.8125rem;\n\n    button {\n      width: 1.5rem;\n      height: 1.5rem;\n      line-height: 1.5rem;\n    }\n\n    .fade {\n      position: absolute;\n      top: -0.625rem;\n      left: -2rem;\n      z-index: 10;\n\n      width: 2rem;\n      height: 2.8125rem + 0.3125rem;\n\n      opacity: 1;\n      transition: opacity ease-in-out 0.3s;\n\n      pointer-events: none;\n    }\n\n    .swiper-button-disabled, .swiper-button-lock {\n      cursor: default;\n      pointer-events: none;\n\n      .fade {\n        opacity: 0;\n      }\n    }\n  }\n\n  .slide {\n    position: relative;\n    width: 100%;\n    height: 100%;\n\n    .thumbnail {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      background-size: cover;\n\n      position: relative;\n      width: calc(100% - 2 * 0.125rem);\n      height: calc(100% - 2 * 0.125rem);\n\n      border-style: solid;\n      border-width: 0.125rem;\n      border-radius: 0.25rem;\n\n      background-origin: padding-box;\n      background-clip: padding-box;\n\n      font-size: 0.875rem;\n      font-weight: bold;\n\n      &:after {\n        content: \"\";\n\n        position: absolute;\n        bottom: -0.125rem;\n        left: -0.125rem;\n        width: 0.125rem;\n        height: 0.125rem;\n      }\n    }\n\n    .link {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      justify-content: center;\n\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      right: 0;\n      left: 0;\n\n      opacity: 0;\n      transition: opacity ease-in-out 0.3s;\n      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.6);\n\n      font-size: 0.75rem;\n      line-height: 0.75rem;\n\n      &,\n      &:link,\n      &:visited,\n      &:hover,\n      &:focus,\n      &:active {\n        cursor: pointer;\n        text-decoration: none;\n      }\n    }\n\n    &:hover .link {\n      opacity: 1;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      navigate_before                                {{ item.technology }}                          DATA          open_in_new                                  navigate_next  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpatialSearchUiBehaviorComponent', 'selector': 'ccf-spatial-search-ui-behavior'},{'name': 'SpatialSearchUiComponent', 'selector': 'ccf-spatial-search-ui'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ThumbnailCarouselComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ThumbnailCarouselModule.html":{"url":"modules/ThumbnailCarouselModule.html","title":"module - ThumbnailCarouselModule","body":"\n                   \n\n\n\n\n    Modules\n    ThumbnailCarouselModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ThumbnailCarouselModule\n\n\n\ncluster_ThumbnailCarouselModule_exports\n\n\n\ncluster_ThumbnailCarouselModule_declarations\n\n\n\n\nThumbnailCarouselComponent\n\nThumbnailCarouselComponent\n\n\n\nThumbnailCarouselModule\n\nThumbnailCarouselModule\n\nThumbnailCarouselModule -->\n\nThumbnailCarouselComponent->ThumbnailCarouselModule\n\n\n\n\n\nThumbnailCarouselComponent \n\nThumbnailCarouselComponent \n\nThumbnailCarouselComponent  -->\n\nThumbnailCarouselModule->ThumbnailCarouselComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ThumbnailCarouselComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ThumbnailCarouselComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SwiperModule } from 'swiper/angular';\nimport { Navigation, Swiper } from 'swiper/core';\n\nimport { ThumbnailCarouselComponent } from './thumbnail-carousel.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatButtonModule,\n    MatIconModule,\n\n    SwiperModule\n  ],\n  declarations: [ThumbnailCarouselComponent],\n  exports: [ThumbnailCarouselComponent]\n})\nexport class ThumbnailCarouselModule {\n  constructor() {\n    // Install swiper modules\n    Swiper.use([Navigation]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TissueSectionVisComponent.html":{"url":"components/TissueSectionVisComponent.html","title":"component - TissueSectionVisComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TissueSectionVisComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-tissue-section-vis\n            \n\n            \n                styleUrls\n                ./tissue-section-vis.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tissue-section-vis.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                tissueSectionExists\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                tissueSections\n                            \n                            \n                                totalTissueSections\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        tissueSections\n                    \n                \n                \n                    \n                        Type :     TissueSectionResult[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts:18\n                            \n                        \n                \n                    \n                        Tissue section data, used to determine which tissues to color on the graph\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        totalTissueSections\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts:15\n                            \n                        \n                \n                    \n                        The total numebr of tissue sections, used for end label\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-tissue-section-vis\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tissue-section-vis'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts:12\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        tissueSectionExists\n                        \n                    \n                \n            \n            \n                \ntissueSectionExists(sectionNumber: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts:21\n                \n            \n\n\n            \n                \n                    Returns whether or not the given section number exists in the tissueSection array\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sectionNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tissue-section-vis'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts:12\n                        \n                    \n\n            \n                \n                    HTML Class Name\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { TissueSectionResult } from 'ccf-database';\n\n@Component({\n  selector: 'ccf-tissue-section-vis',\n  templateUrl: './tissue-section-vis.component.html',\n  styleUrls: ['./tissue-section-vis.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TissueSectionVisComponent {\n  /** HTML Class Name */\n  @HostBinding('class') readonly clsName = 'ccf-tissue-section-vis';\n\n  /** The total numebr of tissue sections, used for end label */\n  @Input() totalTissueSections!: number;\n\n  /** Tissue section data, used to determine which tissues to color on the graph */\n  @Input() tissueSections!: TissueSectionResult[];\n\n  /** Returns whether or not the given section number exists in the tissueSection array */\n  tissueSectionExists(sectionNumber: number): boolean {\n    if (this.tissueSections.filter(section => section.sectionNumber === sectionNumber).length > 0) {\n      return true;\n    }\n\n    return false;\n  }\n}\n\n    \n\n    \n        0\n\n  \n  \n\n{{ totalTissueSections }}\n    \n\n    \n                \n                    ./tissue-section-vis.component.scss\n                \n                :host {\n  width: 100%;\n  height: 2.5rem;\n  padding: .5rem;\n  padding-left: 1rem;\n  padding-right: 1rem;\n  display: flex;\n\n  .container {\n    margin-right: .5rem;\n    margin-left: .5rem;\n    flex-grow: 1;\n    display: flex;\n    position: relative;\n    justify-content: space-evenly;\n\n    .line-tick {\n      height: 100%;\n      width: 1px;\n      z-index: 2;\n    }\n\n    .x-axis {\n      width: 100%;\n      height: 2px;\n      position: absolute;\n      top: calc(50% - 1px);\n      right: 0;\n      z-index: 1;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '0    {{ totalTissueSections }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpatialSearchUiBehaviorComponent', 'selector': 'ccf-spatial-search-ui-behavior'},{'name': 'SpatialSearchUiComponent', 'selector': 'ccf-spatial-search-ui'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TissueSectionVisComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TissueSectionVisModule.html":{"url":"modules/TissueSectionVisModule.html","title":"module - TissueSectionVisModule","body":"\n                   \n\n\n\n\n    Modules\n    TissueSectionVisModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TissueSectionVisModule\n\n\n\ncluster_TissueSectionVisModule_declarations\n\n\n\ncluster_TissueSectionVisModule_exports\n\n\n\n\nTissueSectionVisComponent\n\nTissueSectionVisComponent\n\n\n\nTissueSectionVisModule\n\nTissueSectionVisModule\n\nTissueSectionVisModule -->\n\nTissueSectionVisComponent->TissueSectionVisModule\n\n\n\n\n\nTissueSectionVisComponent \n\nTissueSectionVisComponent \n\nTissueSectionVisComponent  -->\n\nTissueSectionVisModule->TissueSectionVisComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TissueSectionVisComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TissueSectionVisComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TissueSectionVisComponent } from './tissue-section-vis.component';\n\n\n\n@NgModule({\n  declarations: [TissueSectionVisComponent],\n  imports: [CommonModule],\n  exports: [TissueSectionVisComponent]\n})\nexport class TissueSectionVisModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleButtonComponent.html":{"url":"components/ToggleButtonComponent.html","title":"component - ToggleButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToggleButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Implements open/close button for the side drawers.\n\n    \n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-drawer-toggle-button\n            \n\n            \n                styleUrls\n                ./toggle-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./toggle-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                className\n                            \n                            \n                                    Private\n                                opened\n                            \n                            \n                                    Private\n                                position\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handleMessage\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                class.ccf-drawer-toggle-button-end\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    classEnd\n                                \n                                \n                                    icon\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(drawer: DrawerComponent, messageService: MessageService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:42\n                            \n                        \n\n                \n                    \n                            Creates an instance of toggle button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        drawer\n                                                  \n                                                        \n                                                                        DrawerComponent\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The owning side drawer.\n\n                                                        \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                        MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service used to send and receive event messages.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The change detector reference.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-drawer-toggle-button\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-toggle-button'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        class.ccf-drawer-toggle-button-end\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                        \n                    \n\n            \n                \n                    Whether this button is attach to a drawer in position 'end'.\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        handleMessage\n                        \n                    \n                \n            \n            \n                \nhandleMessage(msg: Message)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:85\n                \n            \n\n\n            \n                \n                    Process an event message.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                Message\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The event.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if change detection needs to be run.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:65\n                \n            \n\n\n            \n                \n                    Initializes this component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:75\n                \n            \n\n\n            \n                \n                    Cleans up all subscriptions.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggle\n                        \n                    \n                \n            \n            \n                \ntoggle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:97\n                \n            \n\n\n            \n                \n                    Updates the drawer state.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-drawer-toggle-button'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:19\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        opened\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:40\n                        \n                    \n\n            \n                \n                    Whether the owning drawer is opened.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"start\" | \"end\"\n\n                    \n                \n                \n                    \n                        Default value : 'start'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:38\n                        \n                    \n\n            \n                \n                    Position of the owning side drawer.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:42\n                        \n                    \n\n            \n                \n                    Subscriptions managed by this component.\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        classEnd\n                    \n                \n\n                \n                    \n                        getclassEnd()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:22\n                                \n                            \n                    \n                        \n                                Whether this button is attach to a drawer in position 'end'.\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        icon\n                    \n                \n\n                \n                    \n                        geticon()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts:27\n                                \n                            \n                    \n                        \n                                Gets the name of the icon to display.\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, HostBinding, AfterViewInit } from '@angular/core';\n\nimport { DrawerComponent } from '../drawer/drawer.component';\nimport { Message, MessageService } from '../messages';\nimport { Subscription } from 'rxjs';\n\n\n/**\n * Implements open/close button for the side drawers.\n */\n@Component({\n  selector: 'ccf-drawer-toggle-button',\n  templateUrl: './toggle-button.component.html',\n  styleUrls: ['./toggle-button.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ToggleButtonComponent implements AfterViewInit, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly className = 'ccf-drawer-toggle-button';\n  /** Whether this button is attach to a drawer in position 'end'. */\n  @HostBinding('class.ccf-drawer-toggle-button-end') // eslint-disable-line\n  get classEnd(): boolean {\n    return this.position === 'end';\n  }\n\n  /** Gets the name of the icon to display. */\n  get icon(): string {\n    let expand = 'arrow_right';\n    let collapse = 'arrow_left';\n    if (this.position === 'end') {\n      ([expand, collapse] = [collapse, expand]);\n    }\n\n    return this.opened ? collapse : expand;\n  }\n\n  /** Position of the owning side drawer. */\n  private position: 'start' | 'end' = 'start';\n  /** Whether the owning drawer is opened. */\n  private opened = false;\n  /** Subscriptions managed by this component. */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of toggle button component.\n   *\n   * @param drawer The owning side drawer.\n   * @param messageService Service used to send and receive event messages.\n   * @param cdr The change detector reference.\n   */\n  constructor(private drawer: DrawerComponent,\n              messageService: MessageService,\n              private cdr: ChangeDetectorRef) {\n    const channel = messageService.connect(this);\n    this.subscriptions.add(channel.getMessagesFromSource(drawer).subscribe(msg => {\n      if (this.handleMessage(msg)) {\n        cdr.markForCheck();\n      }\n    }));\n  }\n\n  /**\n   * Initializes this component.\n   */\n  ngAfterViewInit(): void {\n    setTimeout(() => {\n      this.position = this.drawer.position;\n      this.cdr.markForCheck();\n    });\n  }\n\n  /**\n   * Cleans up all subscriptions.\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Process an event message.\n   *\n   * @param msg The event.\n   * @returns true if change detection needs to be run.\n   */\n  handleMessage(msg: Message): boolean {\n    if (msg.payload.type === 'drawer-toggled') {\n      this.opened = msg.payload.opened;\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Updates the drawer state.\n   */\n  toggle(): void {\n    const drawer = this.drawer;\n    const { opened, expanded } = drawer;\n    if (opened) {\n      if (expanded) {\n        drawer.closeExpanded();\n      } else {\n        drawer.close();\n      }\n    } else {\n      drawer.open();\n    }\n  }\n}\n\n    \n\n    \n        \n  {{ icon }}\n\n\n    \n\n    \n                \n                    ./toggle-button.component.scss\n                \n                :host {\n  position: absolute;\n  top: calc(50% - 2.0625rem);\n  right: -1.0625rem;\n  width: 1.0625rem;\n  height: 3rem;\n  border-radius: 0rem 0.25rem 0.25rem 0rem;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  transition: 0.6s;\n\n  &.ccf-drawer-toggle-button-end {\n    right: unset;\n    left: calc(-1rem - 1px);\n    border-radius: 0.25rem 0rem 0rem 0.25rem;\n  }\n\n  .expand-collapse-icon {\n    position: relative;\n    right: 0.25rem;\n    transition: all 0.5s;\n  }\n\n  &.ccf-drawer-toggle-button-end .expand-collapse-icon {\n    right: unset;\n    left: -0.25rem;\n  }\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ icon }}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpatialSearchUiBehaviorComponent', 'selector': 'ccf-spatial-search-ui-behavior'},{'name': 'SpatialSearchUiComponent', 'selector': 'ccf-spatial-search-ui'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToggleButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewerComponent.html":{"url":"components/ViewerComponent.html","title":"component - ViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Viewer for tissue samples\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-viewer\n            \n\n            \n                styleUrls\n                ./viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                className\n                            \n                            \n                                loading\n                            \n                            \n                                safeUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                    Private\n                                updateUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closed\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sanitizer: DomSanitizer)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sanitizer\n                                                  \n                                                        \n                                                                        DomSanitizer\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        url\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:19\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closed\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:21\n                            \n                        \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-viewer'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateUrl()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        className\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-viewer'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        safeUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     SafeResourceUrl | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts:29\n                        \n                    \n\n            \n                \n                    Sanitized url\nNOTE: Never use a getter for this property! It will cause the iframe to reload constantly.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, OnChanges, Output, SimpleChanges,\n} from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n\n/**\n * Viewer for tissue samples\n */\n@Component({\n  selector: 'ccf-viewer',\n  templateUrl: './viewer.component.html',\n  styleUrls: ['./viewer.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ViewerComponent implements OnChanges {\n  @HostBinding('class') className = 'ccf-viewer';\n\n  @Input() url = '';\n\n  @Output() readonly closed = new EventEmitter();\n\n  loading = true;\n\n  /**\n   * Sanitized url\n   * NOTE: Never use a getter for this property! It will cause the iframe to reload constantly.\n   */\n  safeUrl: SafeResourceUrl | null = null;\n\n  constructor(private readonly sanitizer: DomSanitizer) { }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('url' in changes) {\n      this.updateUrl();\n    }\n  }\n\n  private updateUrl(): void {\n    const { sanitizer, url } = this;\n    this.safeUrl = null;\n    if (url) {\n      this.safeUrl = sanitizer.bypassSecurityTrustResourceUrl(url);\n      this.loading = true;\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    launch\n    Open in Portal\n  \n  \n    clear\n  \n\n\n\n  \n  Loading External Site\n\n\n\n\n\n    \n\n    \n                \n                    ./viewer.component.scss\n                \n                :host {\n  display: block;\n\n  .toolbar {\n    display: flex;\n    justify-content: flex-end;\n    align-items: center;\n\n    width: 100%;\n    height: 1.5rem;\n\n    .launch {\n      margin-right: 3.5rem;\n\n      &.mat-button-disabled {\n        cursor: not-allowed;\n      }\n\n      .icon {\n        margin-right: 0.25rem;\n      }\n    }\n\n    .close {\n      min-width: 0;\n      padding: 0;\n      line-height: 1.5rem;\n      border-radius: 0;\n    }\n  }\n\n  .overlay {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n\n    position: absolute;\n    top: 1.5rem;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    .spinner {\n      margin-bottom: 0.5rem;\n    }\n  }\n\n  .frame {\n    width: 100%;\n    height: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      launch    Open in Portal        clear      Loading External Site'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'ccf-root'},{'name': 'AppWebComponent', 'selector': 'ccf-root-wc'},{'name': 'CheckboxComponent', 'selector': 'ccf-checkbox'},{'name': 'ContainerComponent', 'selector': 'ccf-drawer-container'},{'name': 'ContentComponent', 'selector': 'ccf-drawer-content'},{'name': 'DonorCardComponent', 'selector': 'ccf-donor-card'},{'name': 'DrawerComponent', 'selector': 'ccf-drawer'},{'name': 'DropdownComponent', 'selector': 'ccf-dropdown'},{'name': 'DualSliderComponent', 'selector': 'ccf-dual-slider'},{'name': 'FiltersContentComponent', 'selector': 'ccf-filters-content'},{'name': 'FiltersPopoverComponent', 'selector': 'ccf-filters-popover'},{'name': 'HeaderComponent', 'selector': 'ccf-header'},{'name': 'OntologySearchComponent', 'selector': 'ccf-ontology-search'},{'name': 'OntologySelectionComponent', 'selector': 'ccf-ontology-selection'},{'name': 'OntologyTreeComponent', 'selector': 'ccf-ontology-tree'},{'name': 'ResultsBrowserComponent', 'selector': 'ccf-results-browser'},{'name': 'RunSpatialSearchComponent', 'selector': 'ccf-run-spatial-search'},{'name': 'SpatialSearchConfigBehaviorComponent', 'selector': 'ccf-spatial-search-config-behavior'},{'name': 'SpatialSearchConfigComponent', 'selector': 'ccf-spatial-search-config'},{'name': 'SpatialSearchUiBehaviorComponent', 'selector': 'ccf-spatial-search-ui-behavior'},{'name': 'SpatialSearchUiComponent', 'selector': 'ccf-spatial-search-ui'},{'name': 'SpinnerOverlayComponent', 'selector': 'ccf-spinner-overlay'},{'name': 'ThumbnailCarouselComponent', 'selector': 'ccf-thumbnail-carousel'},{'name': 'TissueSectionVisComponent', 'selector': 'ccf-tissue-section-vis'},{'name': 'ToggleButtonComponent', 'selector': 'ccf-drawer-toggle-button'},{'name': 'ViewerComponent', 'selector': 'ccf-viewer'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ViewerModule.html":{"url":"modules/ViewerModule.html","title":"module - ViewerModule","body":"\n                   \n\n\n\n\n    Modules\n    ViewerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ViewerModule\n\n\n\ncluster_ViewerModule_declarations\n\n\n\ncluster_ViewerModule_exports\n\n\n\n\nViewerComponent\n\nViewerComponent\n\n\n\nViewerModule\n\nViewerModule\n\nViewerModule -->\n\nViewerComponent->ViewerModule\n\n\n\n\n\nViewerComponent \n\nViewerComponent \n\nViewerComponent  -->\n\nViewerModule->ViewerComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-eui/src/app/shared/components/viewer/viewer.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ViewerComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ViewerComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\nimport { ViewerComponent } from './viewer.component';\n\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule\n  ],\n  declarations: [ViewerComponent],\n  exports: [ViewerComponent]\n})\nexport class ViewerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkerDataSourceService.html":{"url":"injectables/WorkerDataSourceService.html","title":"injectable - WorkerDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WorkerDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-eui/src/app/core/services/data-source/worker-data-source.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    WorkerCCFDatabaseDataSourceService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createWorker\n                            \n                            \n                                    Private\n                                getWorkerUrl\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globalConfig: GlobalConfigState, locator: LocationStrategy)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-eui/src/app/core/services/data-source/worker-data-source.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                    GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locator\n                                                  \n                                                        \n                                                                        LocationStrategy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createWorker\n                        \n                    \n                \n            \n            \n                \n                    \n                    createWorker(_config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/worker-data-source.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Worker\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getWorkerUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getWorkerUrl(directImport: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-eui/src/app/core/services/data-source/worker-data-source.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directImport\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | URL\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { LocationStrategy } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { CCFDatabaseOptions } from 'ccf-database';\nimport { GlobalConfigState, WorkerCCFDatabaseDataSourceService } from 'ccf-shared';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkerDataSourceService extends WorkerCCFDatabaseDataSourceService {\n  constructor(\n    globalConfig: GlobalConfigState,\n    private readonly locator: LocationStrategy\n  ) {\n    super(globalConfig);\n  }\n\n  protected createWorker(_config: CCFDatabaseOptions): Worker {\n    const url = this.getWorkerUrl(true);\n    return new Worker(url, { type: 'module' });\n  }\n\n  private getWorkerUrl(directImport: boolean): string | URL {\n    if (directImport) {\n      return new URL('./data-source.worker', import.meta.url);\n    }\n\n    const externalUrl = this.locator.prepareExternalUrl('0-es2015.worker.js');\n    const codeBlob = new Blob(\n      [`importScripts('${externalUrl}')`],\n      { type: 'application/javascript' }\n    );\n\n    return URL.createObjectURL(codeBlob);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Common Coordinate Framework (CCF) User Interfaces\n3.3.0 - 2022-06-17\n\nAdded support for the latest CCF Ontology v1.9.0 which adds Placenta, Spinal Cord, new Landmarks for reference organs, and a host of data updates.\nAdded a SPARQL route to the CCF-API for flexible querying of the Ontology and linked data. See the /v1/sparql docs for more information.\nClean up and bug fixes\n\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-eui/src/app/app-web-component.component.ts\n            \n            component\n            AppWebComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/app-web-component.component.ts\n            \n            function\n            parseDataSources\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                46 %\n                (14/30)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/app.component.ts\n            \n            interface\n            AppOptions\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/header/header.component.ts\n            \n            component\n            HeaderComponent\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/models/flat-node.ts\n            \n            class\n            FlatNode\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/models/list-result.ts\n            \n            interface\n            ListResult\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/models/ontology-selection.ts\n            \n            interface\n            OntologySelection\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/app-root-overlay/app-root-overlay.service.ts\n            \n            injectable\n            AppRootOverlayContainer\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts\n            \n            injectable\n            DelegateDataSourceService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/data-source/data-source.service.ts\n            \n            interface\n            DelegateDataSourceOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/data-source/data-source.worker.ts\n            \n            variable\n            database\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/data-source/worker-data-source.service.ts\n            \n            injectable\n            WorkerDataSourceService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n            \n            injectable\n            OntologySearchService\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/ontology-search/ontology-search.service.ts\n            \n            interface\n            SearchResult\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/theming/theming.service.ts\n            \n            injectable\n            ThemingService\n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/services/theming/theming.service.ts\n            \n            variable\n            DEFAULT_THEME\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/action-as-fn.ts\n            \n            function\n            actionAsFn\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n            \n            injectable\n            ColorAssignmentState\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n            \n            interface\n            Color\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n            \n            interface\n            ColorAssignmentStateModel\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n            \n            variable\n            DEFAULT_COLOR_PALETTE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            injectable\n            DataState\n            \n                92 %\n                (36/39)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            interface\n            DataStateModel\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            function\n            allCompleted\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            function\n            queryData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            function\n            sendCompletedTo\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/data/data.state.ts\n            \n            variable\n            DEFAULT_FILTER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/icon-registry/default-icons.ts\n            \n            interface\n            DefaultIconDefinition\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/icon-registry/default-icons.ts\n            \n            variable\n            DEFAULT_ICONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts\n            \n            injectable\n            IconRegistryState\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/icon-registry/icon-registry.state.ts\n            \n            interface\n            IconDefinition\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts\n            \n            injectable\n            ListResultsState\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/list-results/list-results.state.ts\n            \n            interface\n            ListResultsStateModel\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n            \n            injectable\n            SceneState\n            \n                70 %\n                (12/17)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n            \n            interface\n            SceneStateModel\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n            \n            variable\n            DEFAULT_SELECTED_ORGANS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.actions.ts\n            \n            class\n            SetOrgan\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.actions.ts\n            \n            class\n            SetSex\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.selectors.ts\n            \n            class\n            SpatialSearchUiSelectors\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.state.ts\n            \n            injectable\n            SpatialSearchUiState\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/spatial-search-ui/spatial-search-ui.state.ts\n            \n            interface\n            SpatialSearchUiModel\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/core/store/store.module.ts\n            \n            variable\n            ROOT_STATES\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/filters/filters-content/filters-content.component.ts\n            \n            component\n            FiltersContentComponent\n            \n                86 %\n                (13/15)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/filters/filters-popover/filters-popover.component.ts\n            \n            component\n            FiltersPopoverComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/ontology-exploration/ontology-search/ontology-search.component.ts\n            \n            component\n            OntologySearchComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/ontology-exploration/ontology-selection/ontology-selection.component.ts\n            \n            component\n            OntologySelectionComponent\n            \n                76 %\n                (10/13)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.component.ts\n            \n            component\n            OntologyTreeComponent\n            \n                86 %\n                (32/37)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.component.ts\n            \n            variable\n            getLevel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.component.ts\n            \n            variable\n            isExpandable\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/results-browser/donor-card/donor-card.component.ts\n            \n            component\n            DonorCardComponent\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/results-browser/results-browser/results-browser.component.ts\n            \n            component\n            ResultsBrowserComponent\n            \n                66 %\n                (12/18)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/modules/results-browser/tissue-section-vis/tissue-section-vis.component.ts\n            \n            component\n            TissueSectionVisComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/checkbox/checkbox.component.ts\n            \n            component\n            CheckboxComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts\n            \n            component\n            ContainerComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts\n            \n            function\n            throwDuplicateDrawersError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/content/content.component.ts\n            \n            component\n            ContentComponent\n            \n                100 %\n                (18/18)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            component\n            DrawerComponent\n            \n                95 %\n                (42/44)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            class\n            InitializationState\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n            \n            variable\n            EXPAND_COLLAPSE_PARAMS_DEFAULT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            ContentContainerChanged\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerContainersChanged\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerInitialized\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n            \n            interface\n            DrawerToggled\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n            \n            variable\n            MessageService\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/drawer/toggle-button/toggle-button.component.ts\n            \n            component\n            ToggleButtonComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/dropdown/dropdown.component.ts\n            \n            component\n            DropdownComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/dual-slider/dual-slider.component.ts\n            \n            component\n            DualSliderComponent\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/run-spatial-search/run-spatial-search.component.ts\n            \n            component\n            RunSpatialSearchComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/spatial-search-config-behavior/spatial-search-config-behavior.component.ts\n            \n            component\n            SpatialSearchConfigBehaviorComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts\n            \n            component\n            SpatialSearchConfigComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/spatial-search-ui-behavior/spatial-search-ui-behavior.component.ts\n            \n            component\n            SpatialSearchUiBehaviorComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/spatial-search-ui/spatial-search-ui.component.ts\n            \n            component\n            SpatialSearchUiComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/spinner-overlay/spinner-overlay.component.ts\n            \n            component\n            SpinnerOverlayComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts\n            \n            component\n            ThumbnailCarouselComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts\n            \n            variable\n            nextUid\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/components/viewer/viewer.component.ts\n            \n            component\n            ViewerComponent\n            \n                20 %\n                (2/10)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            class\n            MessageChannel\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            injectable\n            MessageService\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            interface\n            Message\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            interface\n            MessageServiceConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            variable\n            MESSAGE_SERVICE_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-eui/src/app/shared/services/message/message.service.ts\n            \n            variable\n            MESSAGE_SERVICE_DEFAULT_CONFIG\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/common : ^15.126.1\n        \n            @angular/animations : ^12.1.1\n        \n            @angular/cdk : ^12.1.1\n        \n            @angular/common : ^12.1.1\n        \n            @angular/compiler : ^12.1.1\n        \n            @angular/core : ^12.1.1\n        \n            @angular/elements : ^12.1.1\n        \n            @angular/forms : ^12.1.1\n        \n            @angular/material : ^12.1.3\n        \n            @angular/platform-browser : ^12.1.1\n        \n            @angular/platform-browser-dynamic : ^12.1.1\n        \n            @angular/router : ^12.1.1\n        \n            @angular/youtube-player : ^12.1.1\n        \n            @comunica/query-sparql-rdfjs : ^2.2.0\n        \n            @deck.gl/core : ^8.5.7\n        \n            @deck.gl/geo-layers : ^8.7.8\n        \n            @deck.gl/layers : ^8.5.7\n        \n            @deck.gl/mesh-layers : ^8.5.7\n        \n            @loaders.gl/core : ^3.0.12\n        \n            @loaders.gl/draco : ^3.0.12\n        \n            @loaders.gl/gltf : ^3.0.12\n        \n            @luma.gl/core : ^8.5.12\n        \n            @math.gl/core : ^3.5.5\n        \n            @math.gl/culling : ^3.5.7\n        \n            @ngxs-labs/data : ^6.2.0\n        \n            @ngxs-labs/dispatch-decorator : ^4.0.2\n        \n            @ngxs/logger-plugin : ^3.7.1\n        \n            @ngxs/storage-plugin : ^3.7.1\n        \n            @ngxs/store : ^3.7.3\n        \n            @rdfjs/data-model : ^1.2.0\n        \n            @types/lru-cache : \n        \n            @webcomponents/webcomponentsjs : ^2.5.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.19.0\n        \n            cannon-es : ^0.18.0\n        \n            comlink : ^4.3.0\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.7.2\n        \n            dotenv : ^16.0.0\n        \n            express : ^4.17.1\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^10.0.0\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^4.6.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.0.1\n        \n            jsonld : ^5.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : \n        \n            n3 : ^1.16.0\n        \n            ng5-slider : ^1.2.6\n        \n            ngx-google-analytics : ^11.2.1\n        \n            ngx-markdown : ^12.0.1\n        \n            node-fetch : ^2.6.7\n        \n            qs : ^6.10.2\n        \n            rdf-literal : ^1.2.0\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^3.6.0\n        \n            rxjs : ^6.6.7\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^6.5.1\n        \n            ts-cacheable : ^1.0.6\n        \n            tslib : ^2.1.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DataQueryState   (projects/.../data.state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-eui/src/app/core/store/data/data.state.ts\n    \n        \n            \n                \n                    \n                        \n                        DataQueryState\n                    \n                \n                    \n                        \n                            Current state of data queries.\n\n                        \n                    \n                        \n                            \n                                 Running\n                            \n                        \n                        \n                            \n                                Value : running\n                            \n                        \n                        \n                            \n                                 Completed\n                            \n                        \n                        \n                            \n                                Value : completed\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            actionAsFn   (projects/.../action-as-fn.ts)\n                        \n                        \n                            allCompleted   (projects/.../data.state.ts)\n                        \n                        \n                            parseDataSources   (projects/.../app-web-component.component.ts)\n                        \n                        \n                            queryData   (projects/.../data.state.ts)\n                        \n                        \n                            sendCompletedTo   (projects/.../data.state.ts)\n                        \n                        \n                            throwDuplicateDrawersError   (projects/.../container.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-eui/src/app/core/store/action-as-fn.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        actionAsFn\n                        \n                    \n                \n            \n            \n                \nactionAsFn(type)\n                \n            \n\n\n\n\n            \n                \n                    Small utility for creating callables that construct a new action\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Action type\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     InstanceType\n\n                    \n                    \n                        Callable that creates a new action when called\n\n                    \n                \n            \n        \n    \n    projects/ccf-eui/src/app/core/store/data/data.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        allCompleted\n                        \n                    \n                \n            \n            \n                \nallCompleted(states)\n                \n            \n\n\n\n\n            \n                \n                    Helper for testing that all states in an array are DataQueryState.Completed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    states\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The array of states to test.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if all values in the array is Completed.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryData\n                        \n                    \n                \n            \n            \n                \nqueryData(query, next?)\n                \n            \n\n\n\n\n            \n                \n                    Helper operator that combines querying with sharing and replay functionality.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The data query function.\n\n                                    \n                                \n                                \n                                    next\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An optional listener on the values emitted by the latest query.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction>\n\n                    \n                    \n                        The combined pipe operator function.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendCompletedTo\n                        \n                    \n                \n            \n            \n                \nsendCompletedTo(subject)\n                \n            \n\n\n\n\n            \n                \n                    Helper creating a function that sends a DataQueryState.Completed to\na subject whenever it is called.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    subject\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The subject to send completed messagess to.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        The function.\n\n                    \n                \n            \n        \n    \n    projects/ccf-eui/src/app/app-web-component.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        parseDataSources\n                        \n                    \n                \n            \n            \n                \nparseDataSources(value)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-eui/src/app/shared/components/drawer/container/container.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        throwDuplicateDrawersError\n                        \n                    \n                \n            \n            \n                \nthrowDuplicateDrawersError(position)\n                \n            \n\n\n\n\n            \n                \n                    Helper function for creating drawer errors.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    position\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The position of the drawer.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     never\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCommon Coordinate Framework (CCF) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the CCF-EUI, CCF-RUI, and CCF-Organ-Info.\nWebsite Links\n\nCCF Exploration User Interface (CCF-EUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nCCF Registration User Interface (CCF-RUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nCCF Organ Info Component (CCF-Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nCCF API\nProduction: https://ccf-api.hubmapconsortium.org\nStaging: https://ccf-api--staging.herokuapp.com\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nCCF API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\n\nBackground and More Information\nFor more information about the Common Coordinate Framework (CCF), see the HuBMAP CCF Portal at https://hubmapconsortium.github.io/ccf/.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CheckboxModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DonorCardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DrawerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DropdownModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DualSliderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FiltersContentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FiltersPopoverModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HeaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologyExplorationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologySearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologySelectionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OntologyTreeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResultsBrowserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RunSpatialSearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpatialSearchConfigBehaviorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpatialSearchConfigModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpatialSearchUiBehaviorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpatialSearchUiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpinnerOverlayModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThemingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ThumbnailCarouselModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TissueSectionVisModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ViewerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_CheckboxModule\n\n\n\ncluster_CheckboxModule_declarations\n\n\n\ncluster_CheckboxModule_exports\n\n\n\ncluster_CoreModule\n\n\n\ncluster_CoreModule_imports\n\n\n\ncluster_CoreModule_exports\n\n\n\ncluster_DonorCardModule\n\n\n\ncluster_DonorCardModule_declarations\n\n\n\ncluster_DonorCardModule_imports\n\n\n\ncluster_DonorCardModule_exports\n\n\n\ncluster_DrawerModule\n\n\n\ncluster_DrawerModule_declarations\n\n\n\ncluster_DrawerModule_exports\n\n\n\ncluster_DropdownModule\n\n\n\ncluster_DropdownModule_declarations\n\n\n\ncluster_DropdownModule_exports\n\n\n\ncluster_DualSliderModule\n\n\n\ncluster_DualSliderModule_declarations\n\n\n\ncluster_DualSliderModule_exports\n\n\n\ncluster_FiltersContentModule\n\n\n\ncluster_FiltersContentModule_declarations\n\n\n\ncluster_FiltersContentModule_imports\n\n\n\ncluster_FiltersContentModule_exports\n\n\n\ncluster_FiltersPopoverModule\n\n\n\ncluster_FiltersPopoverModule_declarations\n\n\n\ncluster_FiltersPopoverModule_exports\n\n\n\ncluster_HeaderModule\n\n\n\ncluster_HeaderModule_declarations\n\n\n\ncluster_HeaderModule_exports\n\n\n\ncluster_OntologyExplorationModule\n\n\n\ncluster_OntologyExplorationModule_imports\n\n\n\ncluster_OntologyExplorationModule_exports\n\n\n\ncluster_OntologySearchModule\n\n\n\ncluster_OntologySearchModule_declarations\n\n\n\ncluster_OntologySearchModule_exports\n\n\n\ncluster_OntologySelectionModule\n\n\n\ncluster_OntologySelectionModule_declarations\n\n\n\ncluster_OntologySelectionModule_OntologySelectionComponent_providers\n\n\n\ncluster_OntologySelectionModule_exports\n\n\n\ncluster_OntologyTreeModule\n\n\n\ncluster_OntologyTreeModule_declarations\n\n\n\ncluster_OntologyTreeModule_exports\n\n\n\ncluster_ResultsBrowserModule\n\n\n\ncluster_ResultsBrowserModule_declarations\n\n\n\ncluster_ResultsBrowserModule_exports\n\n\n\ncluster_RunSpatialSearchModule\n\n\n\ncluster_RunSpatialSearchModule_declarations\n\n\n\ncluster_RunSpatialSearchModule_exports\n\n\n\ncluster_SpatialSearchConfigBehaviorModule\n\n\n\ncluster_SpatialSearchConfigBehaviorModule_declarations\n\n\n\ncluster_SpatialSearchConfigBehaviorModule_imports\n\n\n\ncluster_SpatialSearchConfigBehaviorModule_exports\n\n\n\ncluster_SpatialSearchConfigModule\n\n\n\ncluster_SpatialSearchConfigModule_declarations\n\n\n\ncluster_SpatialSearchConfigModule_exports\n\n\n\ncluster_SpatialSearchUiBehaviorModule\n\n\n\ncluster_SpatialSearchUiBehaviorModule_declarations\n\n\n\ncluster_SpatialSearchUiBehaviorModule_imports\n\n\n\ncluster_SpatialSearchUiBehaviorModule_exports\n\n\n\ncluster_SpatialSearchUiModule\n\n\n\ncluster_SpatialSearchUiModule_declarations\n\n\n\ncluster_SpatialSearchUiModule_exports\n\n\n\ncluster_SpinnerOverlayModule\n\n\n\ncluster_SpinnerOverlayModule_declarations\n\n\n\ncluster_SpinnerOverlayModule_exports\n\n\n\ncluster_ThemingModule\n\n\n\ncluster_ThemingModule_providers\n\n\n\ncluster_ThumbnailCarouselModule\n\n\n\ncluster_ThumbnailCarouselModule_declarations\n\n\n\ncluster_ThumbnailCarouselModule_exports\n\n\n\ncluster_TissueSectionVisModule\n\n\n\ncluster_TissueSectionVisModule_declarations\n\n\n\ncluster_TissueSectionVisModule_exports\n\n\n\ncluster_ViewerModule\n\n\n\ncluster_ViewerModule_declarations\n\n\n\ncluster_ViewerModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppWebComponent\n\nAppWebComponent\n\nAppModule -->\n\nAppWebComponent->AppModule\n\n\n\n\n\nCoreModule\n\nCoreModule\n\nAppModule -->\n\nCoreModule->AppModule\n\n\n\n\n\nHeaderModule \n\nHeaderModule \n\nHeaderModule  -->\n\nCoreModule->HeaderModule \n\n\n\n\n\nDrawerModule\n\nDrawerModule\n\nAppModule -->\n\nDrawerModule->AppModule\n\n\n\n\n\nContainerComponent \n\nContainerComponent \n\nContainerComponent  -->\n\nDrawerModule->ContainerComponent \n\n\n\n\n\nContentComponent \n\nContentComponent \n\nContentComponent  -->\n\nDrawerModule->ContentComponent \n\n\n\n\n\nDrawerComponent \n\nDrawerComponent \n\nDrawerComponent  -->\n\nDrawerModule->DrawerComponent \n\n\n\n\n\nToggleButtonComponent \n\nToggleButtonComponent \n\nToggleButtonComponent  -->\n\nDrawerModule->ToggleButtonComponent \n\n\n\n\n\nDualSliderModule\n\nDualSliderModule\n\nAppModule -->\n\nDualSliderModule->AppModule\n\n\n\n\n\nDualSliderComponent \n\nDualSliderComponent \n\nDualSliderComponent  -->\n\nDualSliderModule->DualSliderComponent \n\n\n\n\n\nFiltersContentModule\n\nFiltersContentModule\n\nFiltersContentModule -->\n\nDualSliderModule->FiltersContentModule\n\n\n\n\n\nFiltersPopoverModule\n\nFiltersPopoverModule\n\nAppModule -->\n\nFiltersPopoverModule->AppModule\n\n\n\n\n\nFiltersPopoverComponent \n\nFiltersPopoverComponent \n\nFiltersPopoverComponent  -->\n\nFiltersPopoverModule->FiltersPopoverComponent \n\n\n\n\n\nOntologyExplorationModule\n\nOntologyExplorationModule\n\nAppModule -->\n\nOntologyExplorationModule->AppModule\n\n\n\n\n\nOntologySearchModule \n\nOntologySearchModule \n\nOntologySearchModule  -->\n\nOntologyExplorationModule->OntologySearchModule \n\n\n\n\n\nOntologySelectionModule \n\nOntologySelectionModule \n\nOntologySelectionModule  -->\n\nOntologyExplorationModule->OntologySelectionModule \n\n\n\n\n\nOntologyTreeModule \n\nOntologyTreeModule \n\nOntologyTreeModule  -->\n\nOntologyExplorationModule->OntologyTreeModule \n\n\n\n\n\nResultsBrowserModule\n\nResultsBrowserModule\n\nAppModule -->\n\nResultsBrowserModule->AppModule\n\n\n\n\n\nResultsBrowserComponent \n\nResultsBrowserComponent \n\nResultsBrowserComponent  -->\n\nResultsBrowserModule->ResultsBrowserComponent \n\n\n\n\n\nSpinnerOverlayModule\n\nSpinnerOverlayModule\n\nAppModule -->\n\nSpinnerOverlayModule->AppModule\n\n\n\n\n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent \n\nSpinnerOverlayComponent  -->\n\nSpinnerOverlayModule->SpinnerOverlayComponent \n\n\n\n\n\nViewerModule\n\nViewerModule\n\nAppModule -->\n\nViewerModule->AppModule\n\n\n\n\n\nViewerComponent \n\nViewerComponent \n\nViewerComponent  -->\n\nViewerModule->ViewerComponent \n\n\n\n\n\nCheckboxComponent\n\nCheckboxComponent\n\n\n\nCheckboxModule\n\nCheckboxModule\n\nCheckboxModule -->\n\nCheckboxComponent->CheckboxModule\n\n\n\n\n\nCheckboxComponent \n\nCheckboxComponent \n\nCheckboxComponent  -->\n\nCheckboxModule->CheckboxComponent \n\n\n\nFiltersContentModule -->\n\nCheckboxModule->FiltersContentModule\n\n\n\n\n\nHeaderModule\n\nHeaderModule\n\nCoreModule -->\n\nHeaderModule->CoreModule\n\n\n\n\n\nHeaderComponent \n\nHeaderComponent \n\nHeaderComponent  -->\n\nHeaderModule->HeaderComponent \n\n\n\n\n\nStoreModule\n\nStoreModule\n\nCoreModule -->\n\nStoreModule->CoreModule\n\n\n\n\n\nThemingModule\n\nThemingModule\n\nCoreModule -->\n\nThemingModule->CoreModule\n\n\n\n\n\nDonorCardComponent\n\nDonorCardComponent\n\n\n\nDonorCardModule\n\nDonorCardModule\n\nDonorCardModule -->\n\nDonorCardComponent->DonorCardModule\n\n\n\nResultsBrowserModule -->\n\nDonorCardModule->ResultsBrowserModule\n\n\n\n\n\nDonorCardComponent \n\nDonorCardComponent \n\nDonorCardComponent  -->\n\nDonorCardModule->DonorCardComponent \n\n\n\n\n\nThumbnailCarouselModule\n\nThumbnailCarouselModule\n\nDonorCardModule -->\n\nThumbnailCarouselModule->DonorCardModule\n\n\n\n\n\nThumbnailCarouselComponent \n\nThumbnailCarouselComponent \n\nThumbnailCarouselComponent  -->\n\nThumbnailCarouselModule->ThumbnailCarouselComponent \n\n\n\n\n\nTissueSectionVisModule\n\nTissueSectionVisModule\n\nDonorCardModule -->\n\nTissueSectionVisModule->DonorCardModule\n\n\n\n\n\nTissueSectionVisComponent \n\nTissueSectionVisComponent \n\nTissueSectionVisComponent  -->\n\nTissueSectionVisModule->TissueSectionVisComponent \n\n\n\n\n\nContainerComponent\n\nContainerComponent\n\nDrawerModule -->\n\nContainerComponent->DrawerModule\n\n\n\n\n\nContentComponent\n\nContentComponent\n\nDrawerModule -->\n\nContentComponent->DrawerModule\n\n\n\n\n\nDrawerComponent\n\nDrawerComponent\n\nDrawerModule -->\n\nDrawerComponent->DrawerModule\n\n\n\n\n\nToggleButtonComponent\n\nToggleButtonComponent\n\nDrawerModule -->\n\nToggleButtonComponent->DrawerModule\n\n\n\n\n\nDropdownComponent\n\nDropdownComponent\n\n\n\nDropdownModule\n\nDropdownModule\n\nDropdownModule -->\n\nDropdownComponent->DropdownModule\n\n\n\n\n\nDropdownComponent \n\nDropdownComponent \n\nDropdownComponent  -->\n\nDropdownModule->DropdownComponent \n\n\n\nFiltersContentModule -->\n\nDropdownModule->FiltersContentModule\n\n\n\n\n\nDualSliderComponent\n\nDualSliderComponent\n\nDualSliderModule -->\n\nDualSliderComponent->DualSliderModule\n\n\n\n\n\nFiltersContentComponent\n\nFiltersContentComponent\n\nFiltersContentModule -->\n\nFiltersContentComponent->FiltersContentModule\n\n\n\nFiltersPopoverModule -->\n\nFiltersContentModule->FiltersPopoverModule\n\n\n\n\n\nFiltersContentComponent \n\nFiltersContentComponent \n\nFiltersContentComponent  -->\n\nFiltersContentModule->FiltersContentComponent \n\n\n\n\n\nRunSpatialSearchModule\n\nRunSpatialSearchModule\n\nFiltersContentModule -->\n\nRunSpatialSearchModule->FiltersContentModule\n\n\n\n\n\nRunSpatialSearchComponent \n\nRunSpatialSearchComponent \n\nRunSpatialSearchComponent  -->\n\nRunSpatialSearchModule->RunSpatialSearchComponent \n\n\n\n\n\nFiltersPopoverComponent\n\nFiltersPopoverComponent\n\nFiltersPopoverModule -->\n\nFiltersPopoverComponent->FiltersPopoverModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nHeaderModule -->\n\nHeaderComponent->HeaderModule\n\n\n\n\n\nOntologySearchModule\n\nOntologySearchModule\n\nOntologyExplorationModule -->\n\nOntologySearchModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionModule\n\nOntologySelectionModule\n\nOntologySelectionModule -->\n\nOntologySearchModule->OntologySelectionModule\n\n\n\n\n\nOntologySearchComponent \n\nOntologySearchComponent \n\nOntologySearchComponent  -->\n\nOntologySearchModule->OntologySearchComponent \n\n\n\nOntologyExplorationModule -->\n\nOntologySelectionModule->OntologyExplorationModule\n\n\n\n\n\nOntologySelectionComponent \n\nOntologySelectionComponent \n\nOntologySelectionComponent  -->\n\nOntologySelectionModule->OntologySelectionComponent \n\n\n\n\n\nOntologyTreeModule\n\nOntologyTreeModule\n\nOntologyExplorationModule -->\n\nOntologyTreeModule->OntologyExplorationModule\n\n\n\nOntologySelectionModule -->\n\nOntologyTreeModule->OntologySelectionModule\n\n\n\n\n\nOntologyTreeComponent \n\nOntologyTreeComponent \n\nOntologyTreeComponent  -->\n\nOntologyTreeModule->OntologyTreeComponent \n\n\n\n\n\nOntologySearchComponent\n\nOntologySearchComponent\n\nOntologySearchModule -->\n\nOntologySearchComponent->OntologySearchModule\n\n\n\n\n\nOntologySelectionComponent\n\nOntologySelectionComponent\n\nOntologySelectionModule -->\n\nOntologySelectionComponent->OntologySelectionModule\n\n\n\n\n\nOntologySearchService\n\nOntologySearchService\n\nOntologySelectionComponent -->\n\nOntologySearchService->OntologySelectionComponent\n\n\n\n\n\nOntologyTreeComponent\n\nOntologyTreeComponent\n\nOntologyTreeModule -->\n\nOntologyTreeComponent->OntologyTreeModule\n\n\n\n\n\nResultsBrowserComponent\n\nResultsBrowserComponent\n\nResultsBrowserModule -->\n\nResultsBrowserComponent->ResultsBrowserModule\n\n\n\n\n\nRunSpatialSearchComponent\n\nRunSpatialSearchComponent\n\nRunSpatialSearchModule -->\n\nRunSpatialSearchComponent->RunSpatialSearchModule\n\n\n\n\n\nSpatialSearchConfigBehaviorComponent\n\nSpatialSearchConfigBehaviorComponent\n\n\n\nSpatialSearchConfigBehaviorModule\n\nSpatialSearchConfigBehaviorModule\n\nSpatialSearchConfigBehaviorModule -->\n\nSpatialSearchConfigBehaviorComponent->SpatialSearchConfigBehaviorModule\n\n\n\n\n\nSpatialSearchConfigBehaviorComponent \n\nSpatialSearchConfigBehaviorComponent \n\nSpatialSearchConfigBehaviorComponent  -->\n\nSpatialSearchConfigBehaviorModule->SpatialSearchConfigBehaviorComponent \n\n\n\n\n\nSpatialSearchConfigModule\n\nSpatialSearchConfigModule\n\nSpatialSearchConfigBehaviorModule -->\n\nSpatialSearchConfigModule->SpatialSearchConfigBehaviorModule\n\n\n\n\n\nSpatialSearchConfigComponent \n\nSpatialSearchConfigComponent \n\nSpatialSearchConfigComponent  -->\n\nSpatialSearchConfigModule->SpatialSearchConfigComponent \n\n\n\n\n\nSpatialSearchConfigComponent\n\nSpatialSearchConfigComponent\n\nSpatialSearchConfigModule -->\n\nSpatialSearchConfigComponent->SpatialSearchConfigModule\n\n\n\n\n\nSpatialSearchUiBehaviorComponent\n\nSpatialSearchUiBehaviorComponent\n\n\n\nSpatialSearchUiBehaviorModule\n\nSpatialSearchUiBehaviorModule\n\nSpatialSearchUiBehaviorModule -->\n\nSpatialSearchUiBehaviorComponent->SpatialSearchUiBehaviorModule\n\n\n\n\n\nSpatialSearchUiBehaviorComponent \n\nSpatialSearchUiBehaviorComponent \n\nSpatialSearchUiBehaviorComponent  -->\n\nSpatialSearchUiBehaviorModule->SpatialSearchUiBehaviorComponent \n\n\n\n\n\nSpatialSearchUiModule\n\nSpatialSearchUiModule\n\nSpatialSearchUiBehaviorModule -->\n\nSpatialSearchUiModule->SpatialSearchUiBehaviorModule\n\n\n\n\n\nSpatialSearchUiComponent \n\nSpatialSearchUiComponent \n\nSpatialSearchUiComponent  -->\n\nSpatialSearchUiModule->SpatialSearchUiComponent \n\n\n\n\n\nSpatialSearchUiComponent\n\nSpatialSearchUiComponent\n\nSpatialSearchUiModule -->\n\nSpatialSearchUiComponent->SpatialSearchUiModule\n\n\n\n\n\nSpinnerOverlayComponent\n\nSpinnerOverlayComponent\n\nSpinnerOverlayModule -->\n\nSpinnerOverlayComponent->SpinnerOverlayModule\n\n\n\n\n\nThemingService\n\nThemingService\n\nThemingModule -->\n\nThemingService->ThemingModule\n\n\n\n\n\nThumbnailCarouselComponent\n\nThumbnailCarouselComponent\n\nThumbnailCarouselModule -->\n\nThumbnailCarouselComponent->ThumbnailCarouselModule\n\n\n\n\n\nTissueSectionVisComponent\n\nTissueSectionVisComponent\n\nTissueSectionVisModule -->\n\nTissueSectionVisComponent->TissueSectionVisModule\n\n\n\n\n\nViewerComponent\n\nViewerComponent\n\nViewerModule -->\n\nViewerComponent->ViewerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        26 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    26 Components\n                \n            \n        \n        \n            \n                \n                    \n                    12 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    19 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Constructor   (projects/.../action-as-fn.ts)\n                        \n                        \n                            ContainerPayload   (projects/.../messages.ts)\n                        \n                        \n                            DrawerPayload   (projects/.../messages.ts)\n                        \n                        \n                            ExpandedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            ExpandedState2   (projects/.../drawer.component.ts)\n                        \n                        \n                            GetChildrenFunc   (projects/.../ontology-tree.component.ts)\n                        \n                        \n                            Message   (projects/.../messages.ts)\n                        \n                        \n                            MessageChannel   (projects/.../messages.ts)\n                        \n                        \n                            MessageService   (projects/.../messages.ts)\n                        \n                        \n                            OpenedState   (projects/.../drawer.component.ts)\n                        \n                        \n                            Payload   (projects/.../messages.ts)\n                        \n                        \n                            Sex   (projects/.../spatial-search-config.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-eui/src/app/core/store/action-as-fn.ts\n    \n    \n        \n            \n                \n                    \n                    Constructor\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n    \n    \n        \n            \n                \n                    \n                    ContainerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawer container.\n\n                \n            \n            \n                \n                        ContentContainerChanged | DrawerContainersChanged\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DrawerPayload\n                \n            \n            \n                \n                    Payload types for messages sent from the drawers.\n\n                \n            \n            \n                \n                        DrawerToggled | DrawerInitialized\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Message\n                \n            \n            \n                \n                    Specific message type.\n\n                \n            \n            \n                \n                            GenericMessage\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageChannel\n                \n            \n            \n                \n                    Specific channel type.\n\n                \n            \n            \n                \n                            GenericMessageChannel\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageService\n                \n            \n            \n                \n                    Specific service type.\n\n                \n            \n            \n                \n                            GenericMessageService\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                    Combined payload type for all drawer sub components.\n\n                \n            \n            \n                \n                        ContainerPayload | DrawerPayload\n\n                \n            \n        \n    \n    projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n    \n        \n            \n                \n                    \n                    ExpandedState\n                \n            \n            \n                \n                    Expanded/collapsed state.\n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ExpandedState2\n                \n            \n            \n                \n                    Expanded state relative to an opposite drawer.\n\n                \n            \n            \n                \n                        \"collapsed\" | \"half\" | \"extended\" | \"full\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OpenedState\n                \n            \n            \n                \n                    Opened/closed state.\n\n                \n            \n            \n                \n                        \"open\" | \"open-instant\" | \"closed\"\n\n                \n            \n        \n    \n    projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.component.ts\n    \n    \n        \n            \n                \n                    \n                    GetChildrenFunc\n                \n            \n            \n                \n                    Type of function for getting child nodes from a parent node.\n\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-eui/src/app/shared/components/spatial-search-config/spatial-search-config.component.ts\n    \n    \n        \n            \n                \n                    \n                    Sex\n                \n            \n            \n                \n                        \"male\" | \"female\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            database   (projects/.../data-source.worker.ts)\n                        \n                        \n                            DEFAULT_COLOR_PALETTE   (projects/.../color-assignment.state.ts)\n                        \n                        \n                            DEFAULT_FILTER   (projects/.../data.state.ts)\n                        \n                        \n                            DEFAULT_ICONS   (projects/.../default-icons.ts)\n                        \n                        \n                            DEFAULT_SELECTED_ORGANS   (projects/.../scene.state.ts)\n                        \n                        \n                            DEFAULT_THEME   (projects/.../theming.service.ts)\n                        \n                        \n                            EXPAND_COLLAPSE_PARAMS_DEFAULT   (projects/.../drawer.component.ts)\n                        \n                        \n                            getLevel   (projects/.../ontology-tree.component.ts)\n                        \n                        \n                            isExpandable   (projects/.../ontology-tree.component.ts)\n                        \n                        \n                            MESSAGE_SERVICE_CONFIG   (projects/.../message.service.ts)\n                        \n                        \n                            MESSAGE_SERVICE_DEFAULT_CONFIG   (projects/.../message.service.ts)\n                        \n                        \n                            MessageService   (projects/.../messages.ts)\n                        \n                        \n                            nextUid   (projects/.../thumbnail-carousel.component.ts)\n                        \n                        \n                            ROOT_STATES   (projects/.../store.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-eui/src/app/core/services/data-source/data-source.worker.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        database\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new CCFDatabase()\n                    \n                \n\n            \n                \n                    Worker thread database.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/core/store/color-assignment/color-assignment.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_COLOR_PALETTE\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Color[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  '#FF8800',\n  '#2979ff',\n  '#ffd740',\n  '#b92dff',\n  '#da326f',\n  '#7323e2',\n  '#acf32b',\n  '#82B1FF',\n  '#E040FB',\n  '#00E5FF'\n].map((color, rank) => {\n  const rgba = hexRgb(color, { format: 'array' });\n  rgba[3] = 255; // for Deck.gl\n  return { color, rgba, rank };\n})\n                    \n                \n\n\n        \n    \n\n    projects/ccf-eui/src/app/core/store/data/data.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_FILTER\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Filter\n\n                    \n                \n                \n                    \n                        Default value : {\n  sex: 'Both',\n  ageRange: [1, 110],\n  bmiRange: [13, 83],\n  tmc: [],\n  technologies: [],\n  ontologyTerms: ['http://purl.obolibrary.org/obo/UBERON_0013702'],\n  cellTypeTerms: ['http://purl.obolibrary.org/obo/CL_0000000'],\n  spatialSearches: []\n}\n                    \n                \n\n            \n                \n                    Default values for filters.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/core/store/icon-registry/default-icons.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_ICONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DefaultIconDefinition[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  // Reference Organs\n  { name: 'bladder', namespace: 'app', url: 'assets/icons/organs/ico-organs-bladder.svg' },\n  { name: 'blood', namespace: 'app', url: 'assets/icons/organs/ico-organs-blood.svg' },\n  { name: 'bone-marrow', namespace: 'app', url: 'assets/icons/organs/ico-organs-bone-marrow.svg' },\n  { name: 'brain', namespace: 'app', url: 'assets/icons/organs/ico-organs-brain.svg' },\n  { name: 'eye', namespace: 'app', url: 'assets/icons/organs/ico-organs-eye.svg' },\n  { name: 'fallopian-tube-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-left.svg' },\n  { name: 'fallopian-tube-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-fallopian-tube-right.svg' },\n  { name: 'heart', namespace: 'app', url: 'assets/icons/organs/ico-organs-heart.svg' },\n  { name: 'kidney-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-left.svg' },\n  { name: 'kidney-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney-right.svg' },\n  { name: 'kidney', namespace: 'app', url: 'assets/icons/organs/ico-organs-kidney.svg' },\n  { name: 'knee', namespace: 'app', url: 'assets/icons/organs/ico-organs-knee.svg' },\n  { name: 'large-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-large-intestine.svg' },\n  { name: 'liver', namespace: 'app', url: 'assets/icons/organs/ico-organs-liver.svg' },\n  { name: 'lung-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-left.svg' },\n  { name: 'lung-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung-right.svg' },\n  { name: 'lung', namespace: 'app', url: 'assets/icons/organs/ico-organs-lung.svg' },\n  { name: 'lymph-nodes', namespace: 'app', url: 'assets/icons/organs/ico-organs-lymph-nodes.svg' },\n  { name: 'neuron', namespace: 'app', url: 'assets/icons/organs/ico-organs-neuron.svg' },\n  { name: 'ovaries', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovaries.svg' },\n  { name: 'ovary-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-left.svg' },\n  { name: 'ovary-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ovary-right.svg' },\n  { name: 'pancreas', namespace: 'app', url: 'assets/icons/organs/ico-organs-pancreas.svg' },\n  { name: 'pelvis-f', namespace: 'app', url: 'assets/icons/organs/ico-organs-pelvis-f.svg' },\n  { name: 'placenta', namespace: 'app', url: 'assets/icons/organs/ico-organs-placenta.svg' },\n  { name: 'prostate', namespace: 'app', url: 'assets/icons/organs/ico-organs-prostate.svg' },\n  { name: 'skin', namespace: 'app', url: 'assets/icons/organs/ico-organs-skin.svg' },\n  { name: 'small-intestine', namespace: 'app', url: 'assets/icons/organs/ico-organs-small intestine.svg' },\n  { name: 'spinal-cord', namespace: 'app', url: 'assets/icons/organs/ico-organs-spinal-cord.svg' },\n  { name: 'spleen', namespace: 'app', url: 'assets/icons/organs/ico-organs-spleen.svg' },\n  { name: 'stomach', namespace: 'app', url: 'assets/icons/organs/ico-organs-stomach.svg' },\n  { name: 'thymus', namespace: 'app', url: 'assets/icons/organs/ico-organs-thymus.svg' },\n  { name: 'ureter-left', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-left.svg' },\n  { name: 'ureter-right', namespace: 'app', url: 'assets/icons/organs/ico-organs-ureter-right.svg' },\n  { name: 'uterus', namespace: 'app', url: 'assets/icons/organs/ico-organs-uterus.svg' },\n  { name: 'vasculature-thick', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thick.svg' },\n  { name: 'vasculature-thin', namespace: 'app', url: 'assets/icons/organs/ico-organs-vasculature-thin.svg' },\n\n  { name: 'opacity', namespace: 'app', url: 'assets/icons/opacity-24px.svg' },\n  { name: 'visibility_on', namespace: 'app', url: 'assets/icons/visibility-on-24px.svg' },\n  { name: 'visibility_off', namespace: 'app', url: 'assets/icons/visibility-off-24px.svg' },\n  { name: 'expand_more', namespace: 'app', url: 'assets/icons/expand_more-24px.svg' },\n  { name: 'expand_less', namespace: 'app', url: 'assets/icons/expand_less-24px.svg' },\n  { name: 'filter', url: 'assets/icons/filter.svg' }\n]\n                    \n                \n\n            \n                \n                    Icons registered at startup.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/core/store/scene/scene.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_SELECTED_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Set(['Skin', 'Heart', 'Kidney', 'Spleen'])\n                    \n                \n\n\n        \n    \n\n    projects/ccf-eui/src/app/core/services/theming/theming.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_THEME\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Default theme class')\n                    \n                \n\n            \n                \n                    Token for specifying the default theme class.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/shared/components/drawer/drawer/drawer.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EXPAND_COLLAPSE_PARAMS_DEFAULT\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  params: {\n    width: 0,\n    margin: 0,\n    margin2: 0\n  }\n}\n                    \n                \n\n            \n                \n                    Default animation parameters.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/modules/ontology-exploration/ontology-tree/ontology-tree.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getLevel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : property('level')\n                    \n                \n\n            \n                \n                    Getter function for 'level' on a flat node.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isExpandable\n                        \n                    \n                \n            \n                \n                    \n                        Default value : property('expandable')\n                    \n                \n\n            \n                \n                    Getter function for 'expandable' on a flat node.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/shared/services/message/message.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MESSAGE_SERVICE_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'Message service configuration',\n  {\n    providedIn: 'root',\n    factory: () => MESSAGE_SERVICE_DEFAULT_CONFIG\n  }\n)\n                    \n                \n\n            \n                \n                    Token for specifying the message service configuration.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MESSAGE_SERVICE_DEFAULT_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MessageServiceConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  isolated: true\n}\n                    \n                \n\n            \n                \n                    Default message service configuration.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/shared/components/drawer/messages.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MessageService\n                        \n                    \n                \n            \n                \n                    \n                        Default value : GenericMessageService\n                    \n                \n\n            \n                \n                    Reference to the service class.\n\n                \n            \n\n        \n    \n\n    projects/ccf-eui/src/app/shared/components/thumbnail-carousel/thumbnail-carousel.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nextUid\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (() => {\n  let counter = -1;\n  return () => {\n    counter += 1;\n    return counter;\n  };\n})()\n                    \n                \n\n\n        \n    \n\n    projects/ccf-eui/src/app/core/store/store.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ROOT_STATES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  GlobalConfigState,\n  ColorAssignmentState,\n  IconRegistryState,\n  ListResultsState,\n  DataState,\n  SceneState,\n  SpatialSearchUiState\n]\n                    \n                \n\n            \n                \n                    States shared across the entire app.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
