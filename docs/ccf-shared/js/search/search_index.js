var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AnalyticsModule.html",[0,1.486,1,2.477]],["body/modules/AnalyticsModule.html",[1,4.962,2,1.68,3,2.167,4,3.892,5,3.892,6,3.44,7,0.018,8,4.091,9,4.091,10,2.383,11,1.848,12,1.402,13,0.179,14,0.225,15,0.179,16,0.173,17,2.936,18,3.86,19,1.03,20,4.493,21,4.511,22,5.019,23,4.962,24,1.03,25,4.511,26,1.03,27,0.746,28,0.402,29,0.676,30,3.106,31,0.746,32,5.555,33,0.388,34,5.019,35,3.484,36,2.637,37,0.323,38,4.493,39,5.019,40,2.734,41,3.106,42,2.932,43,3.18,44,5.019,45,3.892,46,2.936,47,0.29,48,0.323,49,3.892,50,0.87,51,5.555,52,5.555,53,5.555,54,1.941,55,1.065,56,4.538,57,1.89,58,3.484,59,2.776,60,1.125,61,3.892,62,2.56,63,1.678,64,2.152,65,3.892,66,3.892,67,4.493,68,3.892,69,1.533,70,2.152,71,3.18,72,2.042,73,2.734,74,3.892,75,2.152,76,3.892,77,1.533,78,3.892,79,0.202,80,3.892,81,3.892,82,0.01,83,0.013,84,0.01]],["title/interfaces/AnalyticsOptions.html",[23,2.683,48,0.272]],["body/interfaces/AnalyticsOptions.html",[1,3.827,6,2.806,7,0.018,8,3.337,9,3.337,13,0.182,14,0.229,15,0.182,16,0.137,17,2.986,18,3.683,20,3.543,22,3.958,23,4.824,28,0.61,29,1.085,30,2.449,32,5.073,33,0.39,34,5.073,35,3.543,36,2.658,37,0.328,38,4.542,39,5.073,40,2.78,41,3.14,42,2.964,43,3.233,44,5.073,45,3.958,46,2.986,47,0.293,48,0.328,49,5.905,50,1.017,51,6.247,52,6.247,53,6.247,54,2.793,55,1.073,56,4.574,57,1.911,58,3.543,59,2.806,60,1.132,61,3.958,62,2.604,63,1.692,64,2.189,65,3.958,66,3.958,67,4.542,68,3.958,69,1.559,70,2.189,71,3.233,72,2.077,73,2.78,74,3.958,75,2.189,76,3.958,77,1.559,78,3.958,79,0.205,80,3.958,81,3.958,82,0.01,83,0.013,84,0.01,85,1.426,86,0.437,87,0.926]],["title/interfaces/ApiEndpointDataSourceOptions.html",[48,0.272,88,2.307]],["body/interfaces/ApiEndpointDataSourceOptions.html",[7,0.018,13,0.132,14,0.236,15,0.132,16,0.099,18,1.893,28,0.565,29,0.71,33,0.389,37,0.239,47,0.236,48,0.395,50,1.002,55,1.049,57,1.54,60,1.235,77,2.429,79,0.149,82,0.007,83,0.01,84,0.007,85,1.037,86,0.318,87,0.746,88,2.872,89,1.133,90,1.781,91,1.781,92,4.231,93,4.231,94,0.784,95,2.35,96,2.171,97,1.781,98,2.48,99,1.781,100,1.781,101,2.631,102,1.781,103,0.99,104,1.366,105,1.781,106,3.34,107,3.908,108,2.35,109,2.35,110,2.35,111,2.344,112,2.53,113,0.728,114,1.366,115,1.941,116,1.893,117,2.35,118,1.133,119,3.589,120,3.085,121,2.039,122,1.681,123,1.681,124,2.261,125,2.048,126,2.35,127,3.341,128,2.35,129,3.908,130,5.227,131,3.638,132,3.589,133,2.631,134,2.35,135,2.021,136,1.781,137,1.893,138,2.171,139,2.35,140,2.171,141,2.35,142,2.35,143,2.35,144,1.893,145,2.021,146,2.021,147,2.021,148,2.171,149,1.591,150,1.51,151,3.341,152,0.946,153,2.021,154,3.085,155,2.021,156,2.171,157,2.021,158,2.35,159,3.843,160,1.366,161,2.021,162,2.146,163,1.951,164,3.085,165,2.171,166,2.021,167,3.34,168,1.781,169,2.35,170,1.893,171,2.35,172,2.35,173,1.242,174,1.133,175,2.021,176,0.949,177,1.037,178,1.886,179,0.903,180,2.69,181,2.53,182,2.35,183,1.435,184,3.886,185,2.35,186,4.47,187,1.435,188,2.35,189,1.435,190,2.35,191,1.435,192,4.968,193,2.35,194,1.435,195,2.35,196,1.435,197,2.35,198,4.644,199,1.435,200,2.35,201,1.435,202,2.35,203,1.435,204,2.35,205,1.435,206,2.35,207,1.435,208,2.35,209,2.872,210,1.435,211,2.35,212,1.435,213,3.886,214,2.372,215,3.886,216,2.35,217,2.171,218,2.35,219,2.35,220,2.35,221,2.35,222,2.35,223,2.35,224,2.35,225,2.35]],["title/injectables/ApiEndpointDataSourceService.html",[94,0.63,175,2.307]],["body/injectables/ApiEndpointDataSourceService.html",[7,0.018,13,0.099,14,0.191,15,0.099,16,0.215,18,1.416,19,0.874,24,1.637,26,1.591,27,1.103,28,0.639,29,0.999,31,1.176,33,0.36,37,0.179,47,0.191,48,0.333,50,0.929,55,0.93,57,1.243,60,1.176,77,2.47,79,0.112,82,0.005,83,0.008,84,0.005,86,0.238,88,1.512,89,2.454,90,3.854,91,1.332,92,1.759,93,1.759,94,0.633,95,1.759,96,1.624,97,1.332,98,2.547,99,1.332,100,1.332,101,2.219,102,1.332,103,0.799,104,1.022,105,1.332,106,3.675,107,3.394,108,1.759,109,1.759,110,1.759,111,2.375,112,2.042,113,0.545,114,1.022,115,1.567,116,1.416,117,1.759,118,0.848,119,3.027,120,2.49,121,2.244,122,1.258,123,1.258,124,1.825,125,1.844,126,1.759,127,2.819,128,1.759,129,4.339,130,5.18,131,4.221,132,4.02,133,2.683,134,2.696,135,1.512,136,1.332,137,1.416,138,1.624,139,1.759,140,1.624,141,1.759,142,1.759,143,1.759,144,1.416,145,1.512,146,1.512,147,1.512,148,1.624,149,1.191,150,1.13,151,2.819,152,0.763,153,1.512,154,2.49,155,1.512,156,1.624,157,1.512,158,1.759,159,3.407,160,1.022,161,1.512,162,1.732,163,1.694,164,2.49,165,1.624,166,1.512,167,2.696,168,1.332,169,1.759,170,1.416,171,1.759,172,1.759,173,0.93,174,0.848,175,2.318,176,0.71,177,1.189,178,2.017,179,0.729,180,2.64,181,2.784,182,1.759,183,2.244,184,3.278,185,1.759,186,4.699,187,2.244,188,1.759,189,2.244,190,1.759,191,2.244,192,4.604,193,1.759,194,2.244,195,1.759,196,2.244,197,1.759,198,4.849,199,1.646,200,1.759,201,1.646,202,1.759,203,1.646,204,1.759,205,1.646,206,1.759,207,1.646,208,1.759,209,2.318,210,1.646,211,1.759,212,1.646,213,4.604,214,2.553,215,4.352,216,1.759,217,1.624,218,1.759,219,1.759,220,1.759,221,1.759,222,1.759,223,1.759,224,1.759,225,1.759,226,0.974,227,1.928,228,1.928,229,1.928,230,1.928,231,1.928,232,1.928,233,2.496,234,2.496,235,4.651,236,2.496,237,3.018,238,2.496,239,2.496,240,3.418,241,2.496,242,2.496,243,2.496,244,2.496,245,2.496,246,2.496,247,2.496,248,2.496,249,2.496,250,2.496,251,2.496,252,2.496]],["title/interfaces/AutoCompleteOption.html",[48,0.272,253,2.683]],["body/interfaces/AutoCompleteOption.html",[7,0.018,13,0.147,14,0.185,15,0.147,16,0.11,27,0.612,28,0.454,29,0.987,30,2.722,31,0.612,33,0.376,37,0.265,47,0.291,48,0.265,50,0.961,55,0.843,57,1.203,60,0.843,63,1.329,69,1.258,73,3.09,79,0.228,82,0.008,83,0.011,84,0.008,85,1.151,86,0.353,87,0.803,103,1.065,111,1.585,113,0.809,114,1.516,115,1.516,116,2.101,118,1.258,136,1.977,152,1.164,160,1.516,162,1.676,163,2.268,168,1.977,173,1.379,174,1.258,177,1.151,178,1.516,179,1.298,253,3.594,254,2.41,255,2.41,256,2.609,257,1.203,258,3.594,259,4.399,260,4.645,261,5.573,262,4.09,263,4.128,264,5.012,265,3.796,266,3.09,267,4.399,268,3.534,269,1.977,270,1.392,271,3.319,272,1.766,273,1.977,274,3.594,275,2.7,276,3.796,277,4.399,278,2.609,279,4.853,280,2.859,281,3.319,282,3.09,283,4.399,284,1.866,285,1.593,286,1.766,287,1.814,288,4.853,289,5.492,290,2.859,291,2.859,292,2.609,293,2.609,294,2.244,295,2.903,296,5.82,297,5.261,298,3.194,299,2.859,300,1.379,301,1.516,302,3.194,303,1.516,304,3.194,305,1.977,306,1.977,307,1.593,308,1.593,309,1.766,310,1.766,311,3.319,312,3.194,313,3.194,314,3.194,315,3.194,316,1.977,317,3.194,318,5.422,319,3.194,320,3.194,321,3.114,322,5.032,323,4.111,324,1.866,325,3.194,326,2.859,327,2.609,328,3.194,329,2.859,330,4.399,331,4.399,332,3.194,333,3.194,334,1.766,335,1.593,336,1.733,337,4.399,338,3.194,339,3.194,340,3.194,341,2.609,342,3.194,343,2.859,344,2.101,345,3.194,346,2.101,347,3.194,348,3.194]],["title/modules/BodyUiModule.html",[0,1.486,349,2.683]],["body/modules/BodyUiModule.html",[2,2.076,3,2.47,7,0.017,10,2.716,11,2.283,12,1.732,13,0.221,14,0.278,15,0.221,16,0.166,33,0.39,36,2.716,37,0.399,47,0.278,72,2.523,79,0.249,82,0.012,83,0.014,84,0.012,349,5.408,350,4.808,351,4.808,352,4.808,353,3.567,354,4.304,355,4.304,356,5.572,357,3.164,358,3.164,359,3.342,360,2.523,361,2.523,362,5.572]],["title/injectables/CCFDatabaseDataSourceBaseService.html",[94,0.63,363,2.307]],["body/injectables/CCFDatabaseDataSourceBaseService.html",[7,0.018,13,0.13,14,0.297,15,0.13,16,0.187,19,1.067,24,1.726,26,1.676,27,1.177,28,0.654,29,1.066,31,1.231,33,0.372,37,0.234,47,0.233,48,0.234,50,0.631,55,0.902,60,0.902,77,1.111,79,0.244,82,0.007,83,0.01,84,0.007,86,0.311,87,0.736,89,2.139,94,0.984,98,2.475,103,0.683,104,2.823,111,2.358,113,0.714,114,1.339,115,1.339,118,1.111,121,2.56,122,1.648,123,1.648,125,1.016,149,1.56,150,2.849,152,0.653,173,1.218,174,1.111,177,1.016,178,1.622,179,1.248,181,1.746,183,2.347,187,2.347,189,2.347,191,2.347,194,2.347,196,2.347,199,1.407,201,1.407,203,1.407,205,1.407,207,1.407,210,1.407,212,1.407,214,1.407,226,1.277,227,2.356,228,2.356,229,2.356,230,2.356,231,2.356,232,2.356,237,2.964,344,3.095,346,2.652,363,3.606,364,4.097,365,2.128,366,2.849,367,2.839,368,2.912,369,3.844,370,3.474,371,3.3,372,3.61,373,2.652,374,3.042,375,4.674,376,2.526,377,4.251,378,5.016,379,3.27,380,4.194,381,4.194,382,3.27,383,1.982,384,2.912,385,2.652,386,4.812,387,3.699,388,2.128,389,2.128,390,2.128,391,2.128,392,2.128,393,2.128,394,2.128,395,2.128,396,2.128,397,2.128,398,2.128,399,2.128,400,2.128,401,2.526,402,3.294,403,3.294,404,2.305,405,3.294,406,2.305,407,2.128,408,3.294,409,2.832,410,1.746,411,1.648,412,2.128,413,2.128,414,2.305,415,2.128,416,2.305,417,2.305,418,1.111,419,2.305,420,2.305,421,2.305,422,2.305,423,2.305,424,1.856,425,3.294,426,2.305,427,2.128,428,2.128,429,2.305,430,1.982,431,2.305,432,3.042,433,1.982,434,2.305,435,3.042,436,2.305,437,2.305,438,2.305,439,2.305]],["title/injectables/CCFDatabaseDataSourceService.html",[94,0.63,430,2.307]],["body/injectables/CCFDatabaseDataSourceService.html",[7,0.018,13,0.132,14,0.299,15,0.132,16,0.099,19,1.082,24,1.722,26,1.667,27,1.166,28,0.651,29,1.056,31,1.234,33,0.374,37,0.238,47,0.236,48,0.238,50,0.64,55,0.911,60,0.911,77,1.132,79,0.246,82,0.007,83,0.01,84,0.007,86,0.317,87,0.746,89,1.132,94,0.993,98,2.48,103,0.696,104,2.837,111,2.363,113,0.728,114,1.365,115,1.365,118,1.132,121,2.038,122,1.679,123,1.679,125,1.036,149,1.59,150,2.87,152,0.665,173,1.241,174,1.132,178,1.639,179,1.256,183,2.371,187,2.371,189,2.371,191,2.371,194,2.371,196,2.371,199,1.434,201,1.434,203,1.434,205,1.434,207,1.434,210,1.434,212,1.434,214,1.434,226,1.301,227,2.387,228,2.387,229,2.387,230,2.387,231,2.387,232,2.387,237,2.982,344,3.127,346,2.688,363,4.107,364,2.169,365,2.169,366,2.87,367,2.629,368,2.942,369,3.884,370,3.491,371,3.025,372,3.658,373,2.688,374,2.169,376,2.573,377,4.27,378,5.037,380,4.23,381,4.23,383,2.019,384,2.942,385,2.688,386,4.908,387,3.711,388,2.169,389,2.169,390,2.169,391,2.169,392,2.169,393,2.169,394,2.169,395,2.169,396,2.169,397,2.169,398,2.169,399,2.169,400,2.169,401,2.573,402,3.338,403,3.338,404,2.348,405,3.338,406,2.348,407,2.169,408,3.338,409,2.87,410,1.779,411,1.679,412,2.169,413,2.169,414,2.348,415,2.169,416,2.348,417,2.348,418,1.132,419,2.348,420,2.348,421,2.348,422,2.348,423,2.348,424,1.891,425,3.338,426,2.348,427,2.169,428,2.169,429,2.348,430,2.87,431,2.348,432,3.083,433,2.019,434,2.348,435,3.083,436,2.348,437,2.348,438,2.348,439,2.348,440,3.332,441,2.874,442,2.874]],["title/interfaces/CCFDatabaseManager.html",[48,0.272,377,2.307]],["body/interfaces/CCFDatabaseManager.html",[7,0.018,13,0.176,14,0.337,15,0.176,16,0.132,28,0.396,33,0.403,37,0.318,47,0.287,48,0.318,55,1.057,60,1.057,77,1.51,79,0.286,82,0.01,83,0.013,84,0.01,85,1.381,86,0.423,87,0.907,89,1.51,94,1.119,98,1.444,103,0.928,104,3.067,111,2.102,113,0.971,114,1.82,115,1.82,118,1.51,121,2.479,122,2.239,123,2.239,125,1.381,149,2.12,150,2.608,152,0.887,173,1.655,174,1.51,178,1.321,179,1.098,344,2.522,346,2.522,363,3.874,364,2.892,365,2.892,366,3.172,367,2.748,368,2.372,369,3.132,370,3.409,371,3.409,374,2.892,377,4.429,378,5.06,380,4.505,381,4.505,402,4.06,403,4.766,404,3.132,405,4.766,406,3.132,407,2.892,408,4.505,409,3.491,410,2.372,411,2.239,412,2.892,413,2.892,414,3.132,415,2.892,416,3.132,417,3.132,418,1.51,419,3.132,420,3.132,421,3.132,422,3.132,423,3.132,424,2.522,425,4.06,426,3.132,427,2.892,428,2.892,429,3.132,430,2.693,431,3.132,432,3.749,433,2.693,434,3.132,435,3.749,436,3.132,437,3.132,438,3.132,439,3.132]],["title/injectables/ConsentService.html",[6,1.816,94,0.63]],["body/injectables/ConsentService.html",[6,2.956,7,0.017,13,0.197,14,0.248,15,0.197,16,0.223,19,1.415,24,1.689,26,1.138,27,0.824,28,0.601,29,0.747,31,1.115,33,0.342,37,0.357,47,0.309,63,1.891,69,2.397,79,0.223,82,0.011,83,0.013,84,0.011,86,0.474,87,0.976,94,1.025,113,1.088,152,1.236,176,1.418,177,2.095,179,1.285,226,1.945,287,2.204,443,3.848,444,4.631,445,6.742,446,4.003,447,6.195,448,7.053,449,6.195,450,4.982,451,2.014,452,6.195,453,4.982,454,4.982,455,4.982,456,6.195,457,3.516,458,4.982,459,3.512,460,3.243,461,4.982,462,4.982,463,6.195,464,4.982,465,4.982]],["title/interfaces/DataSource.html",[48,0.272,124,1.816]],["body/interfaces/DataSource.html",[7,0.017,13,0.14,14,0.176,15,0.14,16,0.221,19,1.128,24,1.685,26,1.631,27,1.111,28,0.652,29,1.006,31,1.22,33,0.314,47,0.344,48,0.253,50,0.832,60,1.23,79,0.221,82,0.008,83,0.011,84,0.008,85,1.099,86,0.337,89,2.527,97,1.888,98,2.576,99,1.888,100,1.888,101,1.687,102,1.888,103,0.738,104,1.448,105,1.888,111,2.466,113,0.772,115,1.448,118,1.202,124,2.94,160,1.448,176,1.006,179,0.674,183,2.789,187,2.789,189,2.789,191,2.789,194,2.789,196,2.789,199,2.449,201,2.449,203,2.449,205,2.449,207,2.449,210,2.449,212,2.125,214,2.125,227,2.489,228,2.489,229,2.489,230,2.489,231,2.489,232,2.489,237,3.04,281,3.704,366,1.6,367,1.687,368,1.888,370,2.489,371,3.105,373,2.803,384,3.039,385,3.23,387,2.489,411,1.782,466,4.506,467,2.301,468,3.535,469,3.535,470,3.535,471,3.535,472,3.535,473,3.535,474,3.535,475,3.535,476,3.535,477,3.535,478,3.535,479,3.535,480,3.481,481,2.73,482,3.481,483,2.492,484,2.73,485,2.492,486,2.73,487,2.73,488,2.73,489,2.73,490,2.73,491,2.73,492,2.73,493,2.73,494,2.73,495,2.73,496,2.73,497,2.73,498,2.73,499,2.73,500,2.73,501,2.73,502,2.73,503,2.73]],["title/injectables/DataSourceService.html",[94,0.63,504,2.94]],["body/injectables/DataSourceService.html",[7,0.017,13,0.16,14,0.27,15,0.16,16,0.226,19,1.236,24,1.723,26,1.597,27,1.157,28,0.623,29,1.048,31,1.248,33,0.359,37,0.289,47,0.201,50,0.824,79,0.181,82,0.009,83,0.012,84,0.009,86,0.385,89,2.579,94,0.895,97,2.158,98,2.563,99,2.158,100,2.158,101,1.928,102,2.158,103,0.844,104,1.655,105,2.158,111,2.444,113,0.883,124,2.582,125,1.256,176,1.15,183,2.804,187,2.804,189,2.804,191,2.804,194,2.804,196,2.804,199,2.329,201,2.329,203,2.329,205,2.329,207,2.329,210,2.329,212,1.739,226,1.578,227,2.728,228,2.728,229,2.728,230,2.728,231,2.728,232,2.728,237,3.165,371,4.016,466,4.599,504,4.179,505,3.487,506,4.041,507,4.041,508,4.041,509,4.041,510,4.041,511,4.041,512,4.041,513,4.041,514,4.041,515,4.041,516,4.041,517,4.041]],["title/interfaces/DecoratedRange.html",[48,0.272,284,1.918]],["body/interfaces/DecoratedRange.html",[7,0.018,13,0.183,14,0.23,15,0.183,16,0.137,28,0.611,31,0.764,47,0.23,48,0.331,50,0.879,55,1.135,57,1.5,59,3.106,60,0.977,63,1.204,69,2.007,82,0.01,83,0.013,84,0.01,85,1.435,86,0.739,87,0.93,162,3.283,163,2.47,257,1.5,284,3.281,286,2.203,336,2.007,418,2.213,518,2.621,519,3.566,520,3.254,521,4.279,522,3.413,523,3.005,524,5.823,525,7.466,526,4.162,527,5.905,528,6.118,529,6.861,530,4.466,531,5.905,532,3.984,533,3.005,534,3.984,535,2.327,536,5.03,537,3.984,538,3.984,539,2.798,540,2.465,541,3.984,542,3.984,543,4.617,544,4.617,545,4.617,546,3.254]],["title/components/DecoratedTextComponent.html",[270,0.909,547,1.559]],["body/components/DecoratedTextComponent.html",[7,0.018,12,1.115,13,0.175,14,0.114,15,0.091,16,0.203,19,0.819,24,1.541,26,1.236,27,1.098,28,0.581,29,0.811,31,1.098,33,0.198,37,0.164,47,0.179,48,0.257,50,0.861,55,1.078,59,1.711,60,0.991,63,1.15,69,0.78,70,2.38,79,0.277,82,0.011,83,0.008,84,0.005,86,0.57,87,0.903,98,0.746,103,1.46,152,1.08,162,2.258,163,1.165,176,1.021,178,2.098,179,0.841,240,1.157,257,1.864,262,4.593,265,2.334,266,3.023,269,1.226,270,1.053,272,1.095,275,1.808,284,3.612,285,3.122,286,3.263,287,1.57,295,3.004,300,2.513,301,1.469,303,1.469,305,1.915,306,1.915,307,0.988,308,2.328,309,1.711,310,2.106,321,1.915,324,3.284,334,2.736,335,1.543,336,1.695,353,1.039,361,1.039,418,1.5,451,0.977,518,3.881,520,2.528,521,3.255,522,2.806,523,1.494,526,2.528,533,2.334,535,3.02,536,2.334,546,1.618,547,2.043,548,1.808,549,1.303,550,1.303,551,1.226,552,1.618,553,2.736,554,2.674,555,5.45,556,3.11,557,1.157,558,3.408,559,2.77,560,5.4,561,3.852,562,3.586,563,3.852,564,3.586,565,3.586,566,3.586,567,3.586,568,2.528,569,2.334,570,2.296,571,5.032,572,2.77,573,2.77,574,3.408,575,2.77,576,2.296,577,3.586,578,2.296,579,2.872,580,4.664,581,2.77,582,2.296,583,2.77,584,5.635,585,4.179,586,3.408,587,3.9,588,2.296,589,2.77,590,2.77,591,2.528,592,2.77,593,2.296,594,2.296,595,4.413,596,2.296,597,2.296,598,2.77,599,2.528,600,3.515,601,2.296,602,2.77,603,2.77,604,2.528,605,2.77,606,4.788,607,2.296,608,2.528,609,4.179,610,2.528,611,2.296,612,2.528,613,2.528,614,1.494,615,1.618,616,1.773,617,2.035,618,1.618,619,1.618,620,2.528,621,2.528,622,2.528,623,1.773,624,1.773,625,2.77,626,1.773,627,2.77,628,1.773,629,1.773,630,1.391,631,2.77,632,1.773,633,3.408,634,2.334,635,1.618,636,1.773,637,1.773,638,2.77,639,1.773,640,1.773,641,2.77,642,1.773,643,1.618,644,2.77,645,2.77,646,2.77,647,1.494,648,1.773,649,1.391,650,1.773,651,1.773,652,1.773,653,1.773,654,1.773,655,1.773,656,1.773,657,1.773,658,1.773,659,1.773,660,1.773,661,1.773,662,1.773,663,1.773,664,1.773,665,1.773,666,1.494,667,1.618,668,1.494,669,1.773,670,1.773,671,1.618,672,1.618,673,1.773,674,1.618,675,1.773,676,1.391,677,1.773,678,1.773,679,1.618,680,1.618,681,1.773,682,1.773,683,1.773,684,1.773,685,3.586,686,1.494,687,1.494,688,1.303,689,1.543,690,1.039,691,2.831,692,1.303,693,1.303,694,1.303,695,1.039,696,1.303,697,0.988,698,1.303,699,1.039,700,1.157,701,1.303,702,1.039,703,0.988,704,1.303,705,1.039,706,1.226,707,1.303,708,1.303,709,1.039,710,1.095,711,1.226,712,1.226,713,0.988,714,1.226,715,1.303]],["title/modules/DecoratedTextModule.html",[0,1.486,716,2.477]],["body/modules/DecoratedTextModule.html",[2,2.082,3,2.475,7,0.017,10,2.721,11,2.29,12,1.737,13,0.221,14,0.279,15,0.221,16,0.166,33,0.391,36,2.721,37,0.4,47,0.279,72,2.531,79,0.25,82,0.012,83,0.014,84,0.012,285,2.405,286,2.667,357,3.17,358,3.17,359,3.349,360,2.531,518,3.173,547,3.229,716,4.997,717,4.823,718,4.823,719,4.823,720,5.59,721,5.59]],["title/interfaces/DefaultParams.html",[48,0.272,135,2.307]],["body/interfaces/DefaultParams.html",[7,0.018,13,0.133,14,0.237,15,0.133,16,0.1,18,1.905,28,0.537,29,0.713,33,0.389,37,0.24,47,0.237,48,0.396,50,0.988,55,1.052,57,1.547,60,1.236,77,2.433,79,0.15,82,0.007,83,0.01,84,0.007,85,1.043,86,0.32,87,0.75,88,2.034,89,1.141,90,1.792,91,1.792,92,2.366,93,2.366,94,0.788,95,2.366,96,2.185,97,1.792,98,2.482,99,1.792,100,1.792,101,2.64,102,1.792,103,0.994,104,1.375,105,1.792,106,3.356,107,3.919,108,2.366,109,2.366,110,2.366,111,2.346,112,2.542,113,0.733,114,1.375,115,1.95,116,1.905,117,2.366,118,1.141,119,3.602,120,3.099,121,2.049,122,1.692,123,1.692,124,2.272,125,2.053,126,2.366,127,3.353,128,2.366,129,3.919,130,5.233,131,3.649,132,3.602,133,2.64,134,2.366,135,2.886,136,3.215,137,1.905,138,2.185,139,2.366,140,2.185,141,2.366,142,2.366,143,2.366,144,1.905,145,2.034,146,2.034,147,2.034,148,2.185,149,1.602,150,1.52,151,3.353,152,0.95,153,2.034,154,3.099,155,2.034,156,2.185,157,2.034,158,2.366,159,3.853,160,1.375,161,2.034,162,2.156,163,1.957,164,3.099,165,2.185,166,2.034,167,3.356,168,1.792,169,2.366,170,1.905,171,2.366,172,2.366,173,1.25,174,1.141,175,2.034,176,0.955,177,1.043,178,1.891,179,0.908,180,2.703,181,2.542,182,2.366,183,1.445,184,3.9,185,2.366,186,4.481,187,1.445,188,2.366,189,1.445,190,2.366,191,1.445,192,4.975,193,2.366,194,1.445,195,2.366,196,1.445,197,2.366,198,4.654,199,1.445,200,2.366,201,1.445,202,2.366,203,1.445,204,2.366,205,1.445,206,2.366,207,1.445,208,2.366,209,2.886,210,1.445,211,2.366,212,1.445,213,3.9,214,2.381,215,3.9,216,2.366,217,2.185,218,2.366,219,2.366,220,2.366,221,2.366,222,2.366,223,2.366,224,2.366,225,2.366]],["title/classes/DelegateDataSource.html",[79,0.17,367,1.816]],["body/classes/DelegateDataSource.html",[7,0.017,13,0.135,14,0.17,15,0.135,16,0.144,19,1.102,24,1.701,26,1.689,27,1.129,28,0.664,29,1.023,31,1.223,33,0.308,47,0.34,48,0.245,50,0.82,60,1.223,79,0.216,82,0.007,83,0.01,84,0.007,86,0.326,87,0.76,89,1.639,97,1.825,98,2.571,99,1.825,100,1.825,101,1.631,102,1.825,103,0.714,104,1.4,105,1.825,111,2.465,113,0.747,115,1.4,118,1.162,124,2.667,160,1.4,176,0.973,179,1.065,183,2.755,187,2.755,189,2.755,191,2.755,194,2.755,196,2.755,199,2.405,201,2.405,203,2.405,205,2.405,207,2.405,210,2.405,212,2.076,214,2.405,227,2.431,228,2.431,229,2.431,230,2.431,231,2.431,232,2.431,237,3.007,281,3.638,366,2.184,367,2.302,368,2.984,370,3.06,371,3.348,373,3.445,383,2.072,384,3.547,385,3.633,386,4.813,387,3.796,388,2.225,389,2.225,390,2.225,391,2.225,392,2.225,393,2.225,394,2.225,395,2.225,396,2.225,397,2.225,398,2.225,399,2.225,400,2.225,411,1.723,466,2.923,467,2.225,480,3.4,481,2.641,482,3.4,483,2.41,484,2.641,485,2.41,486,2.641,487,2.641,488,2.641,489,2.641,490,2.641,491,2.641,492,2.641,493,2.641,494,2.641,495,2.641,496,2.641,497,2.641,498,2.641,499,2.641,500,2.641,501,2.641,502,2.641,503,2.641,521,1.94,722,3.419]],["title/interfaces/DocumentationContent.html",[48,0.272,723,2.16]],["body/interfaces/DocumentationContent.html",[7,0.018,13,0.27,14,0.226,15,0.27,16,0.135,28,0.521,31,0.751,33,0.356,37,0.325,47,0.291,48,0.325,50,1.031,55,1.194,57,1.475,60,0.751,79,0.203,82,0.01,83,0.013,84,0.01,85,1.411,86,0.432,87,0.92,94,0.966,112,2.424,113,0.992,125,1.816,152,0.906,173,1.691,174,1.543,179,0.865,257,1.475,270,1.084,295,1.773,336,1.543,451,1.237,535,2.288,540,2.424,649,2.751,723,4.098,724,2.288,725,2.424,726,3.2,727,4.117,728,5.04,729,4.117,730,3.87,731,5.089,732,4.511,733,3.914,734,3.973,735,4.781,736,5.04,737,5.572,738,5.04,739,3.507,740,3.2,741,3.507,742,2.955,743,3.2,744,3.507,745,5.882,746,3.2,747,3.917,748,3.507,749,3.914,750,5.04,751,3.917,752,3.917,753,3.917,754,3.917,755,3.917,756,3.917,757,3.917,758,3.917,759,3.917,760,3.917,761,3.917,762,3.917,763,3.917,764,3.917,765,5.04,766,3.917,767,3.917,768,3.917,769,3.917,770,3.917,771,3.917,772,3.917]],["title/interfaces/FilterParams.html",[48,0.272,137,2.16]],["body/interfaces/FilterParams.html",[7,0.018,13,0.124,14,0.225,15,0.124,16,0.093,18,3.305,28,0.643,29,1.125,33,0.382,37,0.223,47,0.225,48,0.38,50,1.03,55,1.022,57,1.468,60,1.222,77,2.394,79,0.139,82,0.007,83,0.01,84,0.007,85,0.97,86,0.297,87,0.712,88,1.891,89,1.06,90,1.666,91,1.666,92,2.199,93,2.199,94,0.747,95,2.199,96,2.031,97,1.666,98,2.461,99,1.666,100,1.666,101,2.534,102,1.666,103,0.944,104,1.278,105,1.666,106,3.184,107,4.43,108,2.199,109,2.199,110,2.199,111,2.323,112,2.412,113,0.681,114,1.278,115,1.851,116,1.771,117,2.199,118,1.06,119,3.457,120,2.941,121,1.944,122,1.572,123,1.572,124,2.156,125,2.003,126,2.199,127,3.219,128,2.199,129,3.79,130,5.171,131,3.529,132,3.457,133,2.534,134,2.199,135,1.891,136,1.666,137,2.564,138,3.79,139,4.104,140,3.79,141,4.104,142,4.104,143,4.104,144,3.305,145,3.219,146,3.219,147,3.219,148,3.79,149,1.489,150,1.412,151,3.219,152,0.902,153,1.891,154,2.941,155,1.891,156,2.031,157,1.891,158,2.199,159,3.745,160,1.278,161,1.891,162,2.045,163,1.892,164,2.941,165,2.031,166,1.891,167,3.184,168,1.666,169,2.199,170,1.771,171,2.199,172,2.199,173,1.162,174,1.06,175,1.891,176,0.888,177,0.97,178,1.838,179,0.861,180,2.564,181,2.412,182,2.199,183,1.342,184,3.744,185,2.199,186,4.356,187,1.342,188,2.199,189,1.342,190,2.199,191,1.342,192,4.888,193,2.199,194,1.342,195,2.199,196,1.342,197,2.199,198,4.541,199,1.342,200,2.199,201,1.342,202,2.199,203,1.342,204,2.199,205,1.342,206,2.199,207,1.342,208,2.199,209,2.738,210,1.342,211,2.199,212,1.342,213,3.744,214,2.286,215,3.744,216,2.199,217,2.031,218,2.199,219,2.199,220,2.199,221,2.199,222,2.199,223,2.199,224,2.199,225,2.199]],["title/classes/ForwardingDataSource.html",[79,0.17,387,1.918]],["body/classes/ForwardingDataSource.html",[7,0.017,13,0.136,14,0.171,15,0.136,16,0.222,19,1.102,24,1.689,26,1.689,27,1.13,28,0.659,29,1.023,31,1.223,33,0.308,47,0.34,48,0.245,50,0.821,60,1.223,79,0.216,82,0.007,83,0.011,84,0.007,86,0.326,89,2.531,97,1.827,98,2.571,99,1.827,100,1.827,101,1.633,102,1.827,103,0.715,104,1.402,105,1.827,111,2.463,113,0.748,115,1.402,118,1.163,124,2.898,160,1.402,176,1.374,179,0.652,183,2.756,187,2.756,189,2.756,191,2.756,194,2.756,196,2.756,199,2.406,201,2.406,203,2.406,205,2.406,207,2.406,210,2.406,212,2.077,214,2.406,227,2.433,228,2.433,229,2.433,230,2.433,231,2.433,232,2.433,237,3.008,281,3.64,366,1.549,367,1.633,368,1.827,370,3.061,371,3.349,373,3.447,383,2.074,384,3.548,385,3.635,387,2.819,411,1.725,466,4.513,467,2.227,480,3.402,481,2.643,482,3.402,483,2.412,484,2.643,485,2.412,486,2.643,487,2.643,488,2.643,489,2.643,490,2.643,491,2.643,492,2.643,493,2.643,494,2.643,495,2.643,496,2.643,497,2.643,498,2.643,499,2.643,500,2.643,501,2.643,502,2.643,503,2.643,521,1.942,773,3.422,774,3.422,775,3.422,776,3.422,777,3.422,778,3.422,779,3.422,780,3.422,781,3.422,782,3.422,783,3.422,784,3.422,785,3.422]],["title/injectables/GlobalConfigState.html",[94,0.63,121,1.638]],["body/injectables/GlobalConfigState.html",[7,0.018,13,0.142,14,0.179,15,0.142,16,0.22,19,1.14,24,1.675,26,1.713,27,1.2,28,0.668,29,1.074,31,1.186,33,0.395,37,0.257,47,0.179,50,1.007,55,0.825,60,1.078,62,2.037,63,0.936,64,1.713,79,0.16,82,0.008,83,0.011,84,0.008,86,0.342,87,0.786,94,0.825,103,0.75,111,2.331,113,0.784,114,2.044,118,1.22,121,2.147,150,2.951,152,0.996,163,2.329,178,2.006,179,1.094,181,1.916,226,1.401,282,3.477,287,1.277,366,2.259,410,1.916,424,3.256,451,1.689,612,3.517,786,6.382,787,3.097,788,4.431,789,5.737,790,7.258,791,4.991,792,4.991,793,4.991,794,4.991,795,3.248,796,6.747,797,5.826,798,3.589,799,5.793,800,3.589,801,5.345,802,3.589,803,6.201,804,3.589,805,3.854,806,5.35,807,3.589,808,4.991,809,3.589,810,4.991,811,5.737,812,3.589,813,4.991,814,6.201,815,3.589,816,4.991,817,6.201,818,3.589,819,3.589,820,3.589,821,3.589,822,3.589,823,2.53,824,3.589,825,3.854,826,4.044,827,2.772,828,2.772,829,3.589,830,3.517,831,2.336,832,2.772,833,2.336,834,3.589,835,2.772,836,2.53,837,3.589,838,3.589,839,3.589,840,4.991,841,3.589,842,3.589,843,3.589,844,3.589,845,5.737,846,3.589,847,3.589,848,3.589]],["title/injectables/GlobalsService.html",[94,0.63,849,2.94]],["body/injectables/GlobalsService.html",[7,0.018,13,0.106,14,0.133,15,0.106,16,0.21,19,0.921,24,1.596,26,1.657,27,1.123,28,0.661,29,1.033,31,1.191,33,0.147,37,0.191,47,0.242,50,0.361,54,1.735,55,0.959,60,1.102,62,4.366,63,1.993,64,2.767,69,2.213,73,2.444,75,2.578,77,2.426,79,0.12,82,0.006,83,0.009,84,0.006,86,0.255,94,0.667,133,3.239,149,1.276,152,1.078,160,2.214,173,0.996,174,0.909,179,0.51,214,1.735,226,1.044,237,1.211,257,1.884,287,1.434,299,3.115,316,2.153,335,1.151,336,2.071,343,4.174,370,2.446,384,3.731,435,1.741,451,1.773,530,1.741,539,4.554,621,3.809,630,1.621,647,1.741,734,1.428,795,2.625,849,3.115,850,1.886,851,4.033,852,5.331,853,5.404,854,6.258,855,2.675,856,4.033,857,4.033,858,4.033,859,4.033,860,4.854,861,4.033,862,4.033,863,2.842,864,4.033,865,4.033,866,3.479,867,3.479,868,5.243,869,6.789,870,2.675,871,3.115,872,6.896,873,6.988,874,2.675,875,3.479,876,6.459,877,2.675,878,2.675,879,2.675,880,4.033,881,2.675,882,4.033,883,2.625,884,3.479,885,4.033,886,3.115,887,4.033,888,5.798,889,4.033,890,2.675,891,3.115,892,6.095,893,2.675,894,3.115,895,2.675,896,2.675,897,2.675,898,2.675,899,2.066,900,2.308,901,4.478,902,2.675,903,2.675,904,2.675,905,2.675,906,2.675,907,2.066,908,4.033,909,4.854,910,4.033,911,4.033,912,2.675,913,2.675,914,2.675,915,4.033,916,2.625,917,2.675,918,2.675,919,2.308,920,2.675,921,5.798,922,2.675,923,2.308,924,2.675,925,2.675,926,2.675,927,2.675,928,2.066,929,2.675,930,2.675,931,3.115,932,1.886,933,4.033,934,2.308,935,3.115,936,1.886,937,2.308,938,2.308,939,2.675,940,2.675,941,2.675,942,2.675,943,1.886,944,1.741,945,1.741,946,2.675,947,1.741,948,2.066,949,2.308,950,2.675,951,2.675,952,2.308,953,2.675,954,2.675]],["title/injectables/GoogleAnalyticsSyncService.html",[8,2.16,94,0.63]],["body/injectables/GoogleAnalyticsSyncService.html",[6,3.467,7,0.017,8,3.365,13,0.184,14,0.232,15,0.184,16,0.216,19,1.354,24,1.623,26,1.354,27,0.981,28,0.582,29,0.888,31,0.981,33,0.379,37,0.333,40,2.817,41,2.482,42,3.722,43,3.276,47,0.232,50,0.801,54,2.81,59,3.116,63,1.212,64,3.116,77,1.58,79,0.208,82,0.01,83,0.013,84,0.01,86,0.443,87,0.934,94,0.981,113,1.015,136,3.486,152,1.183,176,1.323,177,1.843,178,2.262,179,1.408,226,1.815,273,2.482,287,1.653,444,2.817,446,3.904,451,1.873,457,3.365,460,3.025,931,5.043,944,3.025,955,6.268,956,3.276,957,4.25,958,5.93,959,4.01,960,6.878,961,5.93,962,4.648,963,5.93,964,4.648,965,3.593,966,3.706,967,4.648,968,4.648,969,4.648,970,4.648,971,4.648,972,5.93,973,5.93,974,4.648,975,4.648,976,3.276,977,4.648,978,4.648]],["title/components/InfoButtonComponent.html",[270,0.909,695,1.723]],["body/components/InfoButtonComponent.html",[7,0.018,13,0.308,14,0.168,15,0.134,16,0.207,19,1.093,24,1.554,26,1.093,27,1.054,28,0.538,29,0.717,31,0.919,33,0.365,37,0.242,47,0.168,50,0.75,57,1.555,63,1.247,79,0.151,82,0.007,83,0.01,84,0.007,86,0.322,87,0.754,103,1.529,111,1.487,113,0.738,125,1.726,152,0.955,176,1.361,177,1.05,178,1.796,179,1.215,257,1.555,270,1.688,275,2.275,285,1.454,287,1.702,295,1.319,300,2.727,301,1.96,303,1.96,307,1.454,308,2.059,316,1.804,334,2.283,335,2.059,336,1.626,353,1.53,361,1.53,432,3.114,446,3.428,451,1.803,457,3.152,522,1.53,547,1.384,548,2.411,549,1.918,550,1.918,551,1.804,557,1.703,568,3.372,688,1.918,689,2.059,690,1.53,691,3.428,692,1.918,693,1.918,694,1.918,695,2.734,696,1.918,697,2.059,698,1.918,699,1.53,700,1.703,701,1.918,702,1.53,703,1.454,704,1.918,705,1.53,706,1.804,707,1.918,708,1.918,709,1.53,710,1.613,711,1.804,712,1.804,713,1.454,714,1.804,715,1.918,723,3.428,724,3.504,725,3.775,733,4.124,734,1.804,735,3.615,742,4.525,746,2.382,749,2.899,883,3.114,957,3.615,966,3.152,976,2.382,979,2.916,980,5.653,981,3.931,982,3.372,983,3.695,984,3.931,985,5.211,986,4.784,987,5.554,988,4.784,989,4.784,990,6.04,991,4.289,992,4.665,993,3.38,994,6.04,995,4.784,996,3.66,997,4.784,998,5.211,999,3.38,1000,3.38,1001,3.372,1002,3.695,1003,4.784,1004,3.38,1005,4.784,1006,4.784,1007,3.38,1008,4.784,1009,3.38,1010,4.128,1011,4.128,1012,4.784,1013,2.382,1014,3.695,1015,2.048,1016,2.916,1017,3.38,1018,3.38,1019,3.38,1020,3.38,1021,3.38,1022,3.38,1023,2.382,1024,3.38,1025,1.804,1026,3.38,1027,2.61,1028,2.61,1029,3.38,1030,2.61,1031,2.61,1032,2.916,1033,2.916,1034,2.61,1035,3.38,1036,4.128,1037,3.38,1038,2.61,1039,2.61,1040,2.61,1041,2.916,1042,2.916,1043,2.916,1044,2.61,1045,3.38,1046,2.2,1047,2.916]],["title/modules/InfoButtonModule.html",[0,1.486,1048,2.683]],["body/modules/InfoButtonModule.html",[2,1.994,3,2.411,7,0.017,10,2.652,11,2.193,12,1.664,13,0.276,14,0.267,15,0.212,16,0.159,33,0.415,36,2.652,37,0.383,47,0.267,72,2.93,79,0.239,82,0.012,83,0.014,84,0.012,357,3.089,358,3.089,359,3.263,360,2.423,695,3.55,724,2.698,725,2.858,739,4.134,1015,3.244,1048,5.45,1049,4.618,1050,4.618,1051,4.618,1052,4.618,1053,4.897,1054,5.353,1055,4.562,1056,3.773,1057,5.353,1058,6.473,1059,5.353]],["title/injectables/InfoButtonService.html",[94,0.63,742,2.477]],["body/injectables/InfoButtonService.html",[7,0.018,13,0.262,14,0.209,15,0.285,16,0.205,19,1.265,24,1.509,26,1.265,27,0.916,28,0.553,29,0.83,31,1.027,33,0.342,37,0.3,47,0.276,48,0.3,50,1.01,55,1.168,57,1.8,60,0.692,63,1.091,79,0.187,82,0.009,83,0.012,84,0.009,86,0.398,87,0.872,94,0.916,112,2.957,113,0.914,125,2.054,152,1.105,173,1.559,174,1.422,177,1.301,179,0.798,226,1.634,257,1.36,270,1.322,287,1.489,295,1.634,336,1.422,451,1.509,535,2.792,540,2.957,649,3.357,723,4.088,724,3.464,725,3.67,726,2.95,727,2.95,728,3.611,729,2.95,730,3.901,731,4.376,732,3.232,733,3.762,734,3.67,735,4.041,736,3.611,737,5.93,738,5.701,739,3.232,740,2.95,741,3.232,742,3.605,743,3.904,744,4.278,745,6.093,746,2.95,747,4.779,748,4.278,749,4.28,750,5.356,751,4.779,752,4.779,753,5.701,754,3.611,755,3.611,756,3.611,757,3.611,758,3.611,759,4.779,760,4.779,761,4.779,762,4.779,763,4.779,764,4.779,765,4.779,766,3.611,767,3.611,768,3.611,769,3.611,770,3.611,771,3.611,772,3.611,1060,5.539,1061,4.185,1062,5.539,1063,4.185,1064,4.185]],["title/components/InfoDialogComponent.html",[270,0.909,697,1.638]],["body/components/InfoDialogComponent.html",[7,0.018,12,0.944,13,0.291,14,0.151,15,0.12,16,0.205,19,1.396,24,1.543,26,0.694,27,0.951,28,0.569,29,0.455,31,0.733,33,0.288,37,0.217,47,0.221,48,0.217,50,0.862,55,0.502,79,0.136,82,0.007,83,0.01,84,0.007,86,0.289,87,0.698,103,1.481,125,2.176,166,1.84,168,1.621,176,1.261,177,1.377,180,2.514,240,1.531,257,1.7,270,1.713,273,1.621,275,1.244,285,1.307,295,2.042,300,2.672,301,1.815,303,1.815,307,1.307,308,1.906,334,2.917,335,1.906,336,1.506,353,1.375,361,1.375,418,1.954,451,1.566,522,1.375,540,2.792,547,1.244,548,2.233,549,1.723,550,1.723,551,1.621,553,1.449,557,1.531,617,2.514,634,1.976,676,2.685,687,1.976,688,1.723,689,1.906,690,1.375,691,3.263,692,1.723,693,1.723,694,1.723,695,1.375,696,1.723,697,2.474,698,1.723,699,1.375,700,1.531,701,1.723,702,1.375,703,1.307,704,1.723,705,1.375,706,1.621,707,1.723,708,1.723,709,1.375,710,1.449,711,1.621,712,1.621,713,1.307,714,1.621,715,1.723,723,3.263,724,3.472,725,1.621,730,2.514,731,2.14,733,4.512,734,2.792,735,3.742,749,1.84,945,1.976,981,2.883,982,2.14,983,3.422,984,2.883,991,4.722,992,4.44,996,3.169,1001,2.14,1013,2.14,1014,2.345,1015,4.175,1023,3.122,1025,2.792,1027,2.345,1028,2.345,1034,4.722,1038,2.345,1039,2.345,1042,5.274,1043,4.512,1044,4.44,1046,2.883,1065,2.345,1066,3.122,1067,2.883,1068,3.822,1069,3.822,1070,3.822,1071,4.039,1072,4.512,1073,3.822,1074,4.499,1075,5.274,1076,4.512,1077,5.507,1078,4.44,1079,3.037,1080,5.274,1081,4.309,1082,4.43,1083,4.039,1084,4.512,1085,4.039,1086,4.512,1087,3.037,1088,3.822,1089,3.037,1090,3.422,1091,3.422,1092,3.686,1093,3.822,1094,3.822,1095,3.037,1096,3.037,1097,3.037,1098,3.822,1099,3.037,1100,2.62,1101,2.345,1102,2.62,1103,2.62,1104,2.62,1105,2.62,1106,2.62,1107,2.62,1108,2.62,1109,2.62,1110,2.62,1111,2.62,1112,2.62,1113,2.62,1114,2.62,1115,2.62,1116,2.62,1117,2.62,1118,4.43,1119,4.43,1120,4.039,1121,4.039,1122,2.345,1123,3.037,1124,3.822,1125,2.685,1126,3.037,1127,4.309,1128,4.397,1129,6.113,1130,3.422,1131,3.037,1132,2.883,1133,2.62,1134,1.976,1135,3.037,1136,4.039,1137,2.345,1138,3.037,1139,4.43,1140,4.43,1141,3.037,1142,3.037,1143,3.037,1144,2.62,1145,3.037,1146,3.822,1147,2.62,1148,1.976,1149,3.037,1150,3.037,1151,3.122,1152,3.037]],["title/interfaces/InfoDialogData.html",[48,0.272,1081,2.683]],["body/interfaces/InfoDialogData.html",[7,0.018,12,1.397,13,0.29,14,0.224,15,0.178,16,0.134,19,1.026,28,0.573,33,0.354,37,0.322,47,0.289,48,0.322,50,1.003,55,0.743,79,0.201,82,0.01,83,0.013,84,0.01,85,1.397,86,0.428,87,0.914,103,0.939,125,2.186,176,1.279,177,1.397,180,2.551,257,1.46,270,1.719,273,2.399,275,2.377,300,1.674,301,1.841,303,1.841,334,2.769,335,1.934,336,1.972,451,1.58,540,2.399,676,2.723,697,1.934,723,3.991,724,2.265,725,2.399,730,2.551,733,4.499,734,3.626,735,4.577,981,2.925,983,3.471,984,2.925,991,3.471,992,5.431,996,2.723,1013,3.167,1014,3.471,1015,2.723,1023,3.167,1027,3.471,1028,3.471,1065,3.471,1066,3.167,1067,2.925,1068,3.877,1069,3.877,1070,3.877,1071,4.482,1072,3.877,1073,3.877,1074,4.09,1075,5.006,1076,3.877,1077,3.877,1078,3.471,1080,5.006,1081,4.53,1083,3.471,1084,3.877,1085,3.471,1086,3.877,1088,3.877,1090,3.471,1091,3.471,1092,3.167,1093,3.877,1094,3.877,1098,3.877,1100,3.877,1101,4.482,1102,3.877,1103,3.877,1104,3.877,1105,3.877,1106,3.877,1107,3.877,1108,3.877,1109,3.877,1110,3.877,1111,3.877,1112,3.877,1113,3.877,1114,3.877,1115,3.877,1116,3.877,1117,3.877]],["title/modules/InfoDialogModule.html",[0,1.486,1053,2.477]],["body/modules/InfoDialogModule.html",[2,1.985,3,2.405,7,0.017,10,2.644,11,2.183,12,1.656,13,0.256,14,0.266,15,0.211,16,0.159,33,0.423,36,2.644,37,0.381,40,3.229,47,0.266,72,2.412,79,0.238,82,0.012,83,0.014,84,0.012,357,3.08,358,3.08,359,3.254,360,2.412,697,3.372,724,2.686,749,3.229,1013,3.756,1015,3.229,1016,4.597,1053,4.95,1055,4.55,1056,3.756,1092,3.756,1153,4.597,1154,4.597,1155,4.597,1156,5.328,1157,6.456,1158,6.456,1159,5.328,1160,5.328,1161,6.456,1162,4.597,1163,5.328]],["title/injectables/InjectorDelegateDataSourceService.html",[94,0.63,1164,2.94]],["body/injectables/InjectorDelegateDataSourceService.html",[7,0.017,13,0.153,14,0.319,15,0.153,16,0.177,19,1.197,24,1.747,26,1.71,27,1.204,28,0.662,29,1.091,31,1.254,33,0.369,35,5.449,37,0.276,47,0.192,50,0.708,79,0.172,82,0.008,83,0.011,84,0.008,86,0.367,87,0.826,89,2.025,94,0.867,98,2.512,111,2.387,113,0.842,114,1.579,118,1.311,121,2.751,122,1.943,123,1.943,125,1.198,150,1.746,177,1.629,179,1.135,181,2.799,183,2.563,187,2.563,189,2.563,191,2.563,194,2.563,196,2.563,199,1.659,201,1.659,203,1.659,205,1.659,207,1.659,210,1.659,212,1.659,214,1.659,226,1.505,227,2.642,228,2.642,229,2.642,230,2.642,231,2.642,232,2.642,237,3.122,282,3.177,366,2.373,367,3.05,368,3.181,370,3.37,371,3.222,373,2.975,374,2.51,383,2.337,384,3.181,385,2.975,386,4.933,387,3.799,388,2.51,389,2.51,390,2.51,391,2.51,392,2.51,393,2.51,394,2.51,395,2.51,396,2.51,397,2.51,398,2.51,399,2.51,400,2.51,410,2.059,411,1.943,412,2.51,413,2.51,415,2.51,424,2.188,1164,4.049,1165,5.139,1166,3.327,1167,5.243,1168,3.856,1169,5.243,1170,5.139,1171,3.856,1172,5.957,1173,3.856,1174,3.856,1175,3.856,1176,3.856,1177,3.856]],["title/injectables/LocalStorageSyncService.html",[9,2.16,94,0.63]],["body/injectables/LocalStorageSyncService.html",[6,3.41,7,0.018,9,3.235,13,0.173,14,0.218,15,0.173,16,0.217,19,1.302,24,1.632,26,1.302,27,0.943,28,0.508,29,1.007,31,1.049,33,0.35,37,0.313,43,3.081,46,4.901,47,0.284,50,0.857,55,1.049,60,1.049,62,3.6,63,1.863,64,2.086,69,1.937,79,0.195,82,0.01,83,0.012,84,0.01,86,0.416,87,0.898,94,0.943,113,0.955,152,1.266,173,1.628,174,1.486,176,1.244,177,1.772,178,2.282,179,1.388,226,1.707,273,2.334,274,3.081,287,2.027,293,3.081,444,4.412,446,3.814,451,1.83,457,3.235,459,3.081,460,2.845,901,3.376,935,3.376,952,3.772,956,3.081,957,4.128,959,3.772,966,3.6,976,3.081,1178,5.622,1179,6.721,1180,5.7,1181,5.7,1182,4.372,1183,4.372,1184,5.7,1185,4.372,1186,4.372,1187,3.376,1188,3.772,1189,3.772,1190,3.772,1191,3.081,1192,5.7,1193,4.372,1194,4.372,1195,4.372,1196,4.372,1197,4.372,1198,4.372,1199,4.372,1200,4.372,1201,5.7,1202,4.372,1203,4.372,1204,4.372,1205,5.7,1206,4.372,1207,4.372]],["title/modules/MousePositionTrackerModule.html",[0,1.486,1208,2.94]],["body/modules/MousePositionTrackerModule.html",[0,1.967,2,1.877,7,0.018,13,0.2,14,0.251,15,0.2,16,0.15,33,0.401,36,2.556,37,0.361,40,3.054,41,2.691,42,2.54,47,0.311,55,1.204,57,1.638,60,1.032,79,0.225,82,0.011,83,0.014,84,0.011,113,1.101,114,2.064,118,1.713,125,1.566,177,1.566,273,2.691,360,2.281,666,3.28,823,3.552,916,3.28,943,3.552,944,3.28,945,3.28,947,4.061,948,3.892,966,3.541,1148,3.28,1208,4.818,1209,3.892,1210,3.892,1211,6.11,1212,6.776,1213,5.039,1214,5.039,1215,4.348,1216,4.348,1217,5.846,1218,5.039,1219,4.818,1220,5.039,1221,6.239,1222,6.239,1223,3.892,1224,6.239,1225,6.239,1226,5.039,1227,5.039,1228,4.348,1229,5.039,1230,5.039,1231,5.039,1232,5.039,1233,5.039,1234,5.039,1235,5.039,1236,5.039,1237,4.348,1238,5.039,1239,5.039,1240,4.348,1241,4.348,1242,4.348,1243,3.892,1244,5.039,1245,5.039,1246,5.039]],["title/directives/NumberDirective.html",[690,1.723,713,1.638]],["body/directives/NumberDirective.html",[7,0.017,13,0.186,14,0.234,15,0.186,16,0.205,19,1.361,24,1.497,26,1.497,27,1.084,28,0.531,29,0.982,31,0.775,33,0.258,37,0.335,47,0.234,55,0.775,70,2.844,79,0.209,82,0.01,83,0.013,84,0.01,86,0.446,163,1.937,177,1.456,240,2.361,257,2.242,275,3.157,295,2.559,300,2.22,324,3.304,334,2.844,335,2.564,336,2.026,451,1.623,557,2.361,689,2.968,690,3.296,712,2.501,713,2.564,714,3.182,746,3.302,996,3.612,1219,5.953,1223,5.062,1247,5.328,1248,5.328,1249,4.042,1250,5.96,1251,5.96,1252,5.96,1253,5.96,1254,4.685,1255,4.862,1256,4.685,1257,4.685,1258,5.96,1259,6.554,1260,5.655,1261,5.655,1262,5.655,1263,5.96,1264,5.96,1265,4.685,1266,5.96,1267,6.554,1268,4.685,1269,4.685,1270,4.685]],["title/modules/NumbersOnlyModule.html",[0,1.486,1271,2.683]],["body/modules/NumbersOnlyModule.html",[2,2.106,3,2.491,7,0.017,10,2.74,11,2.315,12,1.757,13,0.224,14,0.282,15,0.224,16,0.168,33,0.369,36,2.74,37,0.405,47,0.282,79,0.253,82,0.012,83,0.015,84,0.012,357,3.191,358,3.191,713,3.396,1247,4.366,1248,4.366,1262,4.877,1271,5.423,1272,4.877,1273,4.877,1274,4.877,1275,5.653,1276,5.653]],["title/components/OpacitySliderComponent.html",[270,0.909,699,1.723]],["body/components/OpacitySliderComponent.html",[7,0.018,11,2.651,13,0.2,14,0.143,15,0.114,16,0.215,19,0.97,24,1.637,26,0.655,27,1.071,28,0.605,29,0.43,31,0.988,33,0.158,37,0.205,47,0.143,50,0.756,54,1.234,55,0.475,63,1.826,69,1.444,70,2.027,75,2.027,79,0.28,82,0.006,83,0.009,84,0.006,86,0.273,87,0.669,103,1.522,152,1.192,163,1.644,176,1.209,179,1.192,240,1.446,257,1.381,264,2.022,268,2.575,269,1.532,270,1.426,271,4.213,272,1.369,275,2.073,276,4.071,285,1.234,287,2.225,294,1.738,295,1.12,300,2.642,301,1.74,303,1.74,305,2.269,306,2.269,307,1.234,308,2.57,309,2.027,310,2.414,323,4.685,324,2.142,336,0.975,353,1.299,361,1.299,418,1.444,451,1.881,522,1.299,530,1.867,547,1.175,548,2.142,549,1.628,550,1.628,551,1.532,553,2.85,557,1.446,568,2.995,569,2.765,686,1.867,687,3.641,688,1.628,689,1.828,690,1.299,691,3.175,692,1.628,693,1.628,694,1.628,695,1.299,696,1.628,697,1.234,698,1.628,699,2.533,700,3.913,701,1.628,702,1.299,703,1.234,704,1.628,705,1.299,706,1.532,707,1.628,708,1.628,709,1.299,710,1.369,711,1.532,712,1.532,713,1.234,714,1.532,715,1.628,727,2.995,734,2.269,883,2.765,965,1.738,1025,2.987,1030,2.216,1031,3.908,1032,4.366,1033,4.827,1034,3.281,1036,3.666,1038,4.321,1039,4.321,1041,3.666,1044,2.216,1046,3.294,1071,3.908,1078,4.321,1120,2.216,1121,2.216,1122,2.216,1125,1.738,1127,3.943,1128,2.765,1130,2.216,1132,1.867,1133,2.475,1134,3.294,1136,2.216,1137,2.216,1151,4.21,1228,2.475,1277,5.584,1278,5.584,1279,2.475,1280,6.33,1281,4.249,1282,3.666,1283,5.06,1284,4.249,1285,5.06,1286,4.249,1287,5.594,1288,5.594,1289,5.973,1290,3.666,1291,5.973,1292,5.06,1293,5.06,1294,4.827,1295,2.869,1296,2.869,1297,4.831,1298,2.869,1299,4.827,1300,2.869,1301,4.249,1302,4.249,1303,2.869,1304,4.249,1305,4.249,1306,2.869,1307,4.249,1308,2.869,1309,2.869,1310,2.869,1311,5.594,1312,2.869,1313,3.666,1314,5.06,1315,2.869,1316,2.869,1317,6.255,1318,5.06,1319,2.869,1320,4.249,1321,4.249,1322,2.869,1323,2.869,1324,3.666,1325,3.908,1326,3.666,1327,4.249,1328,3.666,1329,2.869,1330,2.216,1331,2.475,1332,2.869,1333,3.666,1334,2.475,1335,2.869,1336,2.475]],["title/modules/OpacitySliderModule.html",[0,1.486,1337,2.683]],["body/modules/OpacitySliderModule.html",[2,2.018,3,2.429,7,0.017,10,2.671,11,2.219,12,1.684,13,0.215,14,0.27,15,0.215,16,0.161,33,0.416,36,2.671,37,0.388,47,0.27,72,2.453,79,0.242,82,0.012,83,0.014,84,0.012,357,3.112,358,3.112,359,3.287,360,2.453,699,3.555,700,2.731,1055,4.596,1056,3.819,1277,4.185,1278,4.185,1337,5.378,1338,4.675,1339,4.675,1340,4.675,1341,5.418,1342,5.418,1343,6.521,1344,5.418,1345,6.521,1346,5.418]],["title/interfaces/OrganInfo.html",[48,0.272,1347,2.683]],["body/interfaces/OrganInfo.html",[7,0.018,13,0.069,14,0.087,15,0.069,16,0.052,20,2.835,27,1.256,28,0.499,29,0.896,31,0.289,33,0.159,37,0.125,47,0.212,48,0.125,50,0.875,54,2.411,55,0.989,59,1.752,60,0.779,63,0.455,69,1.248,75,3.657,77,0.978,79,0.129,82,0.004,83,0.006,84,0.004,85,0.542,86,0.166,87,0.453,103,0.601,144,3.729,145,1.744,146,3.624,147,2.854,152,0.574,160,0.715,163,0.567,170,2.417,176,0.497,178,0.856,179,0.548,257,0.567,258,2.028,263,4.578,264,2.028,268,1.058,270,0.687,271,1.873,272,0.833,275,2.196,276,1.873,294,1.744,300,1.586,301,0.715,303,0.715,308,0.751,309,0.833,310,0.833,316,3.552,323,2.028,324,0.88,327,3.573,336,1.447,418,1.447,446,0.991,451,1.629,457,1.633,524,2.222,530,1.136,540,2.862,553,1.752,556,2.028,599,1.23,600,2.028,608,2.028,617,1.633,618,1.23,689,0.751,702,0.79,703,3.336,729,1.23,805,3.915,883,2.772,894,3.289,907,1.348,916,2.389,936,1.23,943,2.587,944,2.389,945,2.389,947,1.136,965,4.077,982,4.092,1010,1.506,1025,0.932,1066,1.23,1125,4.365,1132,4.422,1255,3.001,1297,2.222,1347,3.778,1348,1.23,1349,1.23,1350,1.348,1351,2.877,1352,4.258,1353,2.482,1354,6.493,1355,5.415,1356,6.493,1357,2.482,1358,2.877,1359,2.482,1360,2.482,1361,4.619,1362,2.482,1363,2.482,1364,2.482,1365,1.506,1366,2.877,1367,1.506,1368,1.506,1369,1.506,1370,1.506,1371,1.348,1372,1.506,1373,2.482,1374,1.506,1375,1.506,1376,2.482,1377,1.506,1378,2.482,1379,2.028,1380,3.674,1381,1.506,1382,1.506,1383,3.167,1384,4.373,1385,5.402,1386,1.506,1387,1.506,1388,1.506,1389,3.167,1390,5.009,1391,4.373,1392,1.506,1393,1.506,1394,1.506,1395,1.506,1396,2.482,1397,1.506,1398,3.167,1399,3.915,1400,1.506,1401,1.506,1402,1.506,1403,3.167,1404,4.373,1405,1.506,1406,1.506,1407,1.506,1408,1.506,1409,2.482,1410,1.506,1411,2.482,1412,2.482,1413,2.482,1414,1.506,1415,1.506,1416,3.167,1417,4.373,1418,1.506,1419,1.506,1420,1.506,1421,1.506,1422,2.482,1423,1.506,1424,1.506,1425,1.506,1426,2.482,1427,1.506,1428,2.482,1429,3.674,1430,1.506,1431,1.506,1432,1.506,1433,4.373,1434,2.482,1435,1.506,1436,1.506,1437,2.482,1438,1.506,1439,1.506,1440,2.482,1441,1.506,1442,1.506,1443,2.482,1444,1.506,1445,3.167,1446,4.373,1447,1.506,1448,1.506,1449,1.506,1450,1.506,1451,2.482,1452,2.482,1453,1.506,1454,1.506,1455,2.482,1456,1.506,1457,2.482,1458,2.482,1459,3.674,1460,3.674,1461,1.506,1462,1.506,1463,1.506,1464,1.506,1465,1.506,1466,2.222,1467,1.506,1468,1.506,1469,5.289,1470,1.506,1471,1.745,1472,1.745,1473,1.745,1474,1.745,1475,4.258,1476,1.745,1477,3.671,1478,1.745,1479,4.258,1480,1.506,1481,1.745,1482,1.745,1483,1.745,1484,2.835,1485,2.877,1486,3.167,1487,1.745,1488,2.482,1489,1.745,1490,3.671,1491,2.877,1492,3.671,1493,3.671,1494,4.258,1495,1.745,1496,1.745,1497,1.745,1498,1.745,1499,1.745,1500,2.877,1501,2.877,1502,1.745,1503,1.745,1504,3.671,1505,1.745,1506,2.877,1507,1.745,1508,1.745,1509,2.877,1510,1.506,1511,1.745,1512,1.745,1513,2.877,1514,1.745,1515,1.745,1516,1.745,1517,3.671,1518,1.745,1519,1.745,1520,1.745,1521,1.745,1522,1.745,1523,2.877,1524,1.745,1525,1.745,1526,4.71,1527,2.877,1528,3.671,1529,1.745,1530,4.834,1531,2.877,1532,3.671,1533,3.671,1534,5.361,1535,2.877,1536,2.877,1537,1.745,1538,1.745,1539,3.671,1540,1.745,1541,1.745,1542,1.745,1543,1.745,1544,1.745,1545,1.506,1546,1.745,1547,1.745,1548,1.745,1549,1.745,1550,1.745,1551,1.745,1552,1.745,1553,1.745,1554,1.745,1555,1.745,1556,1.745,1557,3.671,1558,2.877,1559,1.745,1560,1.745,1561,1.745,1562,1.745,1563,1.506,1564,1.745,1565,1.745,1566,1.745,1567,1.745,1568,1.745,1569,1.745,1570,1.506,1571,2.877,1572,2.877,1573,2.877,1574,2.877,1575,2.877,1576,1.745,1577,1.745,1578,1.745,1579,1.745]],["title/modules/OrganSelectorModule.html",[0,1.486,1580,2.683]],["body/modules/OrganSelectorModule.html",[2,2.037,3,2.443,7,0.017,10,2.686,11,2.24,12,1.7,13,0.217,14,0.273,15,0.217,16,0.163,33,0.411,36,2.686,37,0.391,47,0.273,72,2.476,79,0.244,82,0.012,83,0.014,84,0.012,357,3.129,358,3.129,359,3.305,360,2.476,702,3.559,703,2.353,1055,4.622,1056,3.854,1348,3.854,1349,3.854,1580,5.388,1581,4.718,1582,4.718,1583,4.718,1584,5.469,1585,5.469,1586,6.558,1587,5.469]],["title/interfaces/PluckUniqueOptions.html",[48,0.272,1588,2.683]],["body/interfaces/PluckUniqueOptions.html",[7,0.017,13,0.175,14,0.286,15,0.175,16,0.132,28,0.394,29,0.861,30,3.606,31,0.732,33,0.317,47,0.376,48,0.317,50,0.969,54,1.905,55,0.95,57,2.47,60,0.732,70,2.742,82,0.01,83,0.013,84,0.01,85,1.376,86,0.421,87,1.005,111,1.376,113,0.967,118,1.504,133,2.742,160,1.813,257,1.438,282,3.482,287,1.574,336,1.953,410,3.068,424,2.512,539,2.682,554,2.682,647,4.153,797,5.539,799,5.828,801,5.716,833,2.881,835,4.928,899,4.438,901,3.419,1588,5.357,1589,3.12,1590,3.12,1591,4.438,1592,5.505,1593,6.753,1594,5.746,1595,5.746,1596,5.746,1597,5.746,1598,6.511,1599,4.426,1600,4.426,1601,4.438,1602,3.819,1603,3.819,1604,3.819,1605,3.819,1606,4.958,1607,6.454,1608,6.188,1609,6.188,1610,5.826,1611,4.958,1612,5.505,1613,4.426,1614,4.438,1615,4.426,1616,4.426,1617,4.426,1618,4.426]],["title/interfaces/Segment.html",[48,0.272,580,2.477]],["body/interfaces/Segment.html",[7,0.018,12,1.389,13,0.122,14,0.153,15,0.122,16,0.091,27,0.508,28,0.469,31,0.956,33,0.246,37,0.22,47,0.223,48,0.32,50,0.894,55,1.161,59,2.759,60,1.094,69,1.519,70,2.133,79,0.235,82,0.013,83,0.01,84,0.007,85,0.955,86,0.63,87,0.911,98,0.999,103,0.933,152,1.051,162,2.618,163,1.452,176,0.875,178,1.719,179,0.586,257,0.999,262,4.498,265,2.001,266,3.192,269,1.641,270,1.067,272,1.467,275,2.157,284,3.538,285,2.916,286,1.467,295,3.023,300,1.145,301,1.259,303,1.259,305,1.641,306,1.641,308,1.323,309,1.467,310,1.467,321,1.641,324,3.334,334,2.133,335,1.323,336,1.965,418,1.79,451,0.837,518,1.744,520,2.166,521,3.984,522,3.22,523,2.001,526,3.712,533,2.001,535,2.914,536,2.909,546,2.166,547,1.259,552,2.166,553,2.759,554,3.192,555,5.337,556,3.15,558,2.374,559,2.374,560,5.337,561,2.374,563,2.374,571,4.951,572,2.374,573,2.374,574,3.452,575,2.374,579,2.909,580,4.498,581,2.374,583,2.374,584,5.692,585,4.068,586,3.452,587,3.764,589,2.374,590,2.374,591,2.166,592,2.374,599,2.166,600,3.15,602,2.374,603,2.374,604,2.166,605,2.374,606,4.951,608,2.166,609,4.068,610,2.166,612,2.166,613,2.166,614,2.001,615,2.166,616,3.452,617,3.282,618,2.166,619,2.166,620,3.15,621,3.15,622,3.15,623,2.374,624,2.374,625,3.452,626,2.374,627,3.452,628,2.374,629,2.374,630,1.863,631,3.452,632,2.374,633,4.068,634,2.909,635,2.166,636,2.374,637,2.374,638,3.452,639,2.374,640,2.374,641,3.452,642,2.374,643,2.166,644,3.452,645,3.452,646,3.452,647,2.001,648,2.374,649,1.863,650,2.374,651,2.374,652,2.374,653,2.374,654,2.374,655,2.374,656,2.374,657,2.374,658,2.374,659,2.374,660,2.374,661,2.374,662,2.374,663,2.374,664,2.374,665,2.374,666,2.001,667,2.166,668,2.001,669,2.374,670,2.374,671,2.166,672,2.166,673,2.374,674,2.166,675,2.374,676,1.863,677,2.374,678,2.374,679,2.166,680,2.166,681,2.374,682,2.374,683,2.374,684,2.374]],["title/interfaces/StackOp.html",[48,0.272,587,2.477]],["body/interfaces/StackOp.html",[7,0.018,12,1.39,13,0.122,14,0.153,15,0.122,16,0.092,27,0.509,28,0.47,31,0.957,33,0.247,37,0.22,47,0.223,48,0.32,50,0.712,55,1.161,59,2.134,60,1.094,69,1.046,70,2.134,79,0.235,82,0.013,83,0.01,84,0.007,85,0.956,86,0.677,87,0.911,98,1,103,0.934,152,1.052,162,2.619,163,1.88,176,0.875,178,1.72,179,0.586,257,1,262,4.63,265,2.002,266,3.193,269,1.642,270,1.068,272,1.468,275,2.158,284,3.689,285,2.917,286,1.468,295,2.981,300,1.146,301,1.26,303,1.26,305,1.642,306,1.642,308,1.324,309,1.468,310,1.468,321,1.642,324,3.417,334,2.134,335,1.324,336,1.966,418,1.791,451,0.838,518,1.746,520,2.168,521,3.488,522,2.903,523,2.002,526,3.714,533,2.002,535,2.916,536,2.911,546,2.168,547,1.26,552,2.168,553,2.514,554,2.71,555,5.338,556,3.152,558,2.376,559,2.376,560,5.423,561,2.376,563,2.376,571,5.111,572,2.376,573,2.376,574,4.07,575,2.376,579,2.911,580,4.307,581,2.376,583,2.376,584,5.729,585,4.07,586,4.07,587,4,589,2.376,590,2.376,591,2.168,592,2.376,599,2.168,600,3.152,602,2.376,603,2.376,604,2.168,605,2.376,606,4.952,608,2.168,609,4.468,610,2.168,612,2.168,613,2.168,614,2.002,615,2.168,616,2.376,617,2.538,618,3.152,619,3.152,620,4.331,621,3.714,622,4.331,623,2.376,624,2.376,625,3.454,626,2.376,627,3.454,628,2.376,629,2.376,630,1.864,631,3.454,632,2.376,633,4.07,634,2.911,635,2.168,636,2.376,637,2.376,638,3.454,639,2.376,640,2.376,641,3.454,642,2.376,643,2.168,644,3.454,645,3.454,646,3.454,647,2.002,648,2.376,649,1.864,650,2.376,651,2.376,652,2.376,653,2.376,654,2.376,655,2.376,656,2.376,657,2.376,658,2.376,659,2.376,660,2.376,661,2.376,662,2.376,663,2.376,664,2.376,665,2.376,666,2.002,667,2.168,668,2.002,669,2.376,670,2.376,671,2.168,672,2.168,673,2.376,674,2.168,675,2.376,676,1.864,677,2.376,678,2.376,679,2.168,680,2.168,681,2.376,682,2.376,683,2.376,684,2.376]],["title/components/StoreDebugComponent.html",[270,0.909,705,1.723]],["body/components/StoreDebugComponent.html",[7,0.018,13,0.218,14,0.165,15,0.131,16,0.206,19,1.078,24,1.546,26,0.757,27,1.164,28,0.586,29,0.497,31,0.781,33,0.303,37,0.237,47,0.274,50,0.638,55,0.991,59,2.622,60,0.549,62,3.592,63,1.803,70,2.857,79,0.294,82,0.007,83,0.01,84,0.007,86,0.316,87,0.743,103,1.557,113,0.724,125,2.286,133,1.582,152,0.942,174,2.035,176,1.343,177,1.031,178,1.956,179,1.048,240,1.671,257,1.534,269,1.771,270,1.724,272,1.582,285,1.427,287,2.13,295,1.295,300,2.717,301,1.934,303,1.934,305,2.52,306,2.52,307,1.427,308,2.723,309,2.252,310,2.622,321,2.52,334,2.252,335,2.031,336,1.604,353,1.501,361,1.501,418,1.127,446,3.399,451,1.286,457,3.119,522,1.501,535,1.671,547,1.358,548,2.379,549,1.882,550,1.882,551,1.771,553,1.582,557,1.671,569,3.072,610,3.327,686,2.158,688,1.882,689,2.031,690,1.501,691,3.399,692,1.882,693,1.882,694,1.882,695,1.501,696,1.882,697,1.427,698,1.882,699,1.501,700,1.671,701,1.882,702,1.501,703,1.427,704,1.882,705,2.711,706,4.167,707,1.882,708,1.882,709,1.501,710,1.582,711,1.771,712,1.771,713,1.427,714,1.771,715,1.882,795,3.072,830,3.327,831,2.158,863,3.327,871,3.646,894,3.646,957,4.405,966,3.119,976,2.337,1047,2.861,1067,3.072,1484,3.646,1619,4.875,1620,4.875,1621,2.561,1622,4.072,1623,6.917,1624,5.496,1625,4.72,1626,4.72,1627,5.988,1628,5.988,1629,4.72,1630,4.625,1631,4.72,1632,4.72,1633,4.72,1634,3.316,1635,4.72,1636,3.316,1637,4.72,1638,3.316,1639,3.316,1640,4.742,1641,5.46,1642,2.861,1643,4.072,1644,3.316,1645,3.316,1646,3.316,1647,3.316,1648,3.316,1649,4.72,1650,3.316,1651,3.316,1652,3.316,1653,3.316,1654,3.316,1655,3.316,1656,4.72,1657,4.72,1658,4.72,1659,4.072,1660,2.561]],["title/modules/StoreDebugModule.html",[0,1.486,1661,2.683]],["body/modules/StoreDebugModule.html",[2,2.082,3,2.475,7,0.017,10,2.721,11,2.29,12,1.737,13,0.221,14,0.279,15,0.221,16,0.166,33,0.391,36,2.721,37,0.4,47,0.279,72,2.531,79,0.25,82,0.012,83,0.014,84,0.012,357,3.17,358,3.17,359,3.349,360,2.531,705,3.568,706,2.985,1619,3.94,1620,3.94,1661,5.411,1662,4.823,1663,4.823,1664,4.823,1665,5.59,1666,5.59]],["title/components/TextSearchComponent.html",[270,0.909,307,1.638]],["body/components/TextSearchComponent.html",[7,0.018,13,0.182,14,0.122,15,0.097,16,0.214,19,0.861,24,1.631,26,1.274,27,1.117,28,0.618,29,0.949,30,2.758,31,0.922,33,0.325,37,0.175,47,0.229,48,0.175,50,0.957,55,0.624,57,1.494,60,0.624,63,1.786,64,1.8,69,0.833,73,2.787,79,0.263,82,0.005,83,0.008,84,0.005,86,0.233,87,0.594,103,1.479,111,1.429,113,0.535,114,1.004,115,1.004,116,1.391,118,0.833,136,1.308,152,1.031,160,1.004,162,1.109,163,2.255,168,1.308,173,0.913,174,0.833,177,1.172,178,1.536,179,1.306,240,1.901,253,3.93,254,4.684,255,4.684,256,1.727,257,1.812,258,1.727,259,2.114,260,4.464,261,5.516,262,1.595,263,2.286,264,3.241,265,1.595,266,1.485,267,3.254,268,2.787,269,1.308,270,1.331,271,2.993,272,1.169,273,1.308,274,2.659,275,2.412,276,2.993,277,3.968,278,1.727,279,4.307,280,1.893,281,2.455,282,2.787,283,3.968,284,1.235,285,1.623,286,1.169,287,2.253,288,4.549,289,5.47,290,1.893,291,1.893,292,1.727,293,1.727,294,1.485,295,2.972,296,5.88,297,5.418,298,3.254,299,2.913,300,2.552,301,1.545,302,3.254,303,1.545,304,3.968,305,2.014,306,2.014,307,2.222,308,2.4,309,1.8,310,2.194,311,3.63,312,2.114,313,2.114,314,2.114,315,2.114,316,1.308,317,3.254,318,5.293,319,3.254,320,3.254,321,3.145,322,4.811,323,4.151,324,1.901,325,3.968,326,5.018,327,3.241,328,3.968,329,5.018,330,4.811,331,3.968,332,3.254,333,3.254,334,1.8,335,1.623,336,1.282,337,3.968,338,2.114,339,2.114,340,3.254,341,2.659,342,3.254,343,2.913,344,2.61,345,3.254,346,2.141,347,2.114,348,2.114,353,1.109,361,1.109,418,1.282,451,0.667,522,1.109,539,2.286,547,1.004,548,1.901,549,1.391,550,1.391,551,1.308,553,1.169,557,1.235,568,2.659,569,2.455,686,1.595,687,1.595,688,1.391,689,1.623,690,1.109,691,2.931,692,1.391,693,1.391,694,1.391,695,1.109,696,1.391,697,1.054,698,1.391,699,1.109,700,1.235,701,1.391,702,1.109,703,1.054,704,1.391,705,1.109,706,1.308,707,1.391,708,1.391,709,1.109,710,1.169,711,1.308,712,1.308,713,1.054,714,1.308,715,1.391,795,2.455,871,1.893,1025,1.308,1030,1.893,1031,2.913,1046,1.595,1120,1.893,1121,1.893,1122,4.307,1124,2.114,1125,1.485,1127,1.727,1128,2.455,1134,1.595,1136,1.893,1137,1.893,1151,1.727,1290,3.254,1325,1.893,1333,3.254,1530,2.114,1660,1.893,1667,3.772,1668,3.772,1669,3.772,1670,2.45,1671,2.45,1672,2.45,1673,2.45,1674,2.45,1675,3.772,1676,2.45,1677,2.45,1678,3.772,1679,2.45,1680,2.45,1681,2.45,1682,2.45,1683,2.45,1684,2.114,1685,2.45,1686,2.45,1687,2.45,1688,2.45,1689,2.45,1690,2.45,1691,2.45,1692,4.549,1693,2.45,1694,2.45,1695,2.45,1696,2.45]],["title/modules/TextSearchModule.html",[0,1.486,1697,2.683]],["body/modules/TextSearchModule.html",[2,1.874,3,2.322,7,0.017,10,2.553,11,2.061,12,1.564,13,0.199,14,0.251,15,0.199,16,0.15,33,0.419,36,2.553,37,0.36,47,0.251,72,2.822,79,0.225,82,0.011,83,0.014,84,0.011,254,3.275,255,3.275,278,3.547,285,2.165,286,2.401,295,1.965,307,3.348,357,2.974,358,2.974,359,3.142,360,2.278,615,3.547,716,4.825,1692,3.887,1697,5.46,1698,4.341,1699,4.341,1700,5.032,1701,4.341,1702,6.483,1703,6.483,1704,5.032,1705,6.233,1706,6.233,1707,6.233,1708,5.032,1709,6.233,1710,5.032,1711,6.233,1712,5.032,1713,5.032,1714,5.032,1715,5.032,1716,5.032]],["title/components/TrackingPopupComponent.html",[270,0.909,709,1.723]],["body/components/TrackingPopupComponent.html",[0,1.298,6,3.232,7,0.017,12,1.969,13,0.218,14,0.166,15,0.132,16,0.213,19,1.08,24,1.609,26,1.257,27,1.089,28,0.604,29,0.825,31,0.911,33,0.303,37,0.238,47,0.166,50,0.449,54,2.726,55,0.55,60,0.911,63,1.233,69,1.871,75,1.587,79,0.246,82,0.007,83,0.01,84,0.007,86,0.45,87,0.745,103,1.567,125,1.969,131,2.015,166,2.866,177,1.034,179,1.143,240,2.384,269,1.776,270,1.314,272,1.587,273,1.776,285,1.431,287,1.682,295,1.298,297,2.568,300,2.719,301,1.937,303,1.937,305,2.525,306,2.525,307,1.431,308,2.035,309,2.257,310,2.627,353,1.505,361,1.505,418,2.238,444,2.866,451,1.633,459,3.334,460,3.079,522,1.505,547,1.362,548,2.384,549,1.887,550,1.887,551,1.776,553,2.257,557,1.676,569,3.079,617,3.124,686,2.165,687,3.079,688,1.887,689,2.035,690,1.505,691,3.403,692,1.887,693,1.887,694,1.887,695,1.505,696,1.887,697,1.431,698,1.887,699,1.505,700,1.676,701,1.887,702,1.505,703,1.431,704,1.887,705,1.505,706,1.776,707,1.887,708,1.887,709,2.714,710,3.482,711,3.616,712,1.776,713,1.431,714,1.776,715,1.887,734,1.776,795,3.079,916,3.079,943,3.334,944,3.079,945,3.079,947,3.903,948,4.252,980,4.252,998,4.081,1025,2.525,1040,3.653,1046,2.165,1074,3.88,1083,2.568,1128,3.079,1130,2.568,1134,3.079,1216,4.081,1240,2.869,1241,2.869,1242,2.869,1243,2.568,1255,4.465,1325,2.568,1326,2.869,1330,2.568,1570,5.466,1717,5.517,1718,5.517,1719,2.869,1720,5.505,1721,4.73,1722,5.996,1723,4.73,1724,4.73,1725,5.44,1726,4.73,1727,4.73,1728,4.73,1729,3.325,1730,4.73,1731,7.143,1732,3.325,1733,4.73,1734,3.325,1735,3.325,1736,4.73,1737,3.325,1738,3.325,1739,3.325,1740,3.325,1741,3.325,1742,3.325,1743,3.325,1744,3.325,1745,3.325,1746,4.73,1747,3.325,1748,3.325,1749,3.325,1750,3.325,1751,3.325,1752,4.081,1753,4.73,1754,4.081,1755,4.73,1756,3.325,1757,3.325,1758,4.73,1759,3.325,1760,3.653,1761,3.325,1762,3.325,1763,3.325,1764,3.325,1765,4.73,1766,5.505,1767,3.325,1768,3.325,1769,3.325,1770,3.325,1771,3.325,1772,3.325,1773,2.869,1774,3.325,1775,3.325,1776,3.325,1777,3.325,1778,3.325]],["title/modules/TrackingPopupModule.html",[0,1.486,1779,2.683]],["body/modules/TrackingPopupModule.html",[2,2.056,3,2.456,7,0.017,10,2.701,11,2.261,12,1.716,13,0.219,14,0.275,15,0.219,16,0.164,33,0.403,36,2.701,37,0.395,47,0.275,72,2.499,79,0.247,82,0.012,83,0.014,84,0.012,357,3.146,358,3.146,359,3.324,360,2.499,709,3.563,710,2.634,1717,4.263,1718,4.263,1779,5.398,1780,4.762,1781,4.762,1782,4.762,1783,5.52,1784,6.594,1785,5.52,1786,5.52]],["title/injectables/TrackingState.html",[94,0.63,1787,2.683]],["body/injectables/TrackingState.html",[7,0.018,13,0.197,14,0.247,15,0.197,16,0.184,19,1.411,24,1.133,26,1.133,27,1.022,28,0.442,29,0.743,31,0.821,33,0.388,37,0.355,41,2.649,42,2.501,47,0.351,48,0.355,54,3.118,55,1.165,57,1.612,60,0.821,63,1.611,64,2.367,75,2.367,77,2.287,79,0.222,82,0.011,83,0.013,84,0.011,86,0.472,94,1.022,226,1.937,240,2.501,316,2.649,366,2.797,451,1.683,710,2.367,743,3.497,788,5.197,825,4.772,826,4.355,827,3.832,828,3.832,830,4.355,831,3.229,836,3.497,965,3.007,1191,3.497,1725,5.596,1787,4.355,1788,3.229,1789,6.179,1790,5.331,1791,5.805,1792,4.961,1793,3.497,1794,3.497,1795,4.355,1796,4.38,1797,4.28,1798,4.28,1799,5.331,1800,4.28,1801,4.28,1802,4.28,1803,4.28,1804,3.832,1805,4.28,1806,4.28,1807,4.28]],["title/interfaces/TrackingStateModel.html",[48,0.272,1793,2.683]],["body/interfaces/TrackingStateModel.html",[7,0.018,13,0.2,14,0.252,15,0.2,16,0.15,27,0.836,28,0.45,29,0.936,33,0.391,37,0.362,41,2.698,42,2.547,47,0.353,48,0.362,54,3.134,55,1.173,57,1.642,60,0.836,63,1.629,64,2.411,75,2.411,77,2.306,79,0.226,82,0.011,83,0.014,84,0.011,85,1.571,86,0.481,87,0.984,94,1.034,316,2.698,366,2.288,451,1.376,710,2.411,743,3.562,788,4.827,825,4.827,826,4.405,827,3.903,828,3.903,830,4.405,831,3.289,836,3.562,965,3.063,1191,3.562,1725,5.809,1787,3.562,1788,3.289,1790,4.36,1791,5.392,1793,4.405,1794,3.562,1795,4.405,1796,4.416,1797,4.36,1798,4.36,1799,5.392,1800,4.36,1801,4.36,1802,4.36,1803,4.36,1804,3.903,1805,4.36,1806,4.36,1807,4.36]],["title/injectables/WorkerCCFDatabaseDataSourceService.html",[94,0.63,433,2.307]],["body/injectables/WorkerCCFDatabaseDataSourceService.html",[7,0.018,13,0.129,14,0.296,15,0.129,16,0.139,19,1.065,24,1.725,26,1.675,27,1.177,28,0.654,29,1.066,31,1.237,33,0.371,37,0.233,47,0.233,48,0.233,50,0.63,55,0.901,60,0.901,77,1.108,79,0.243,82,0.007,83,0.01,84,0.007,86,0.311,87,0.735,89,1.585,94,0.983,98,2.474,103,0.681,104,2.821,111,2.357,113,0.712,114,1.336,115,1.336,118,1.108,121,2.007,122,1.644,123,1.644,125,1.014,149,1.556,150,2.961,152,0.651,173,1.215,174,1.108,178,1.619,179,1.247,183,2.343,187,2.343,189,2.343,191,2.343,194,2.343,196,2.343,199,1.403,201,1.403,203,1.403,205,1.403,207,1.403,210,1.403,212,1.403,214,1.403,226,1.273,227,2.351,228,2.351,229,2.351,230,2.351,231,2.351,232,2.351,237,2.961,344,3.091,346,2.647,363,4.081,364,3.036,365,2.123,366,2.846,367,2.598,368,2.907,369,3.838,370,3.585,371,3.297,372,3.602,373,2.647,374,2.123,376,2.519,377,4.249,378,5.125,380,4.189,381,4.189,383,1.976,384,2.907,385,2.647,386,4.894,387,3.697,388,2.123,389,2.123,390,2.123,391,2.123,392,2.123,393,2.123,394,2.123,395,2.123,396,2.123,397,2.123,398,2.123,399,2.123,400,2.123,401,2.519,402,3.287,403,3.287,404,2.298,405,3.287,406,2.298,407,2.123,408,3.287,409,2.827,410,1.741,411,1.644,412,2.123,413,2.123,414,2.298,415,2.123,416,2.298,417,2.298,418,1.108,419,2.298,420,2.298,421,2.298,422,2.298,423,2.298,424,1.851,425,3.287,426,2.298,427,2.123,428,2.123,429,2.298,430,1.976,431,2.298,432,3.036,433,2.827,434,3.287,435,3.544,436,2.298,437,2.298,438,2.298,439,2.298,441,2.813,442,2.813,1808,4.664,1809,3.261,1810,3.261]],["title/interfaces/XYZTriplet.html",[48,0.272,1811,2.94]],["body/interfaces/XYZTriplet.html",[7,0.018,10,2.422,13,0.128,14,0.161,15,0.128,16,0.096,27,0.533,28,0.482,33,0.298,37,0.231,47,0.161,48,0.231,50,0.731,54,1.991,55,1.036,60,1.136,63,1.75,69,2.377,75,1.539,79,0.242,82,0.007,83,0.01,84,0.007,85,1.002,86,0.307,87,0.729,101,2.821,103,1.13,113,0.705,133,3.336,152,1.34,160,1.896,163,2.413,176,0.918,178,2.158,179,1.279,263,1.954,270,1.292,271,4.369,272,1.539,275,2.864,276,4.369,300,1.201,301,1.321,303,1.321,308,1.388,309,1.539,310,1.539,335,1.388,344,1.83,346,1.83,353,1.46,354,2.491,355,2.491,361,3.165,409,1.954,418,2.412,428,2.099,446,1.83,451,1.705,457,2.626,680,2.273,748,2.491,931,2.491,957,2.099,966,2.626,996,1.954,1025,1.722,1066,2.273,1067,2.099,1127,2.273,1128,2.099,1255,3.814,1364,3.992,1365,2.783,1379,3.262,1510,2.783,1630,2.491,1773,5.101,1811,5.033,1812,2.783,1813,6.261,1814,6.261,1815,6.992,1816,3.225,1817,3.225,1818,5.184,1819,2.783,1820,3.225,1821,2.783,1822,3.225,1823,3.225,1824,4.669,1825,4.628,1826,3.225,1827,3.225,1828,4.628,1829,4.628,1830,3.225,1831,3.225,1832,3.225,1833,4.628,1834,3.225,1835,3.225,1836,4.628,1837,3.225,1838,3.225,1839,4.628,1840,4.628,1841,3.225,1842,3.225,1843,4.628,1844,3.225,1845,3.225,1846,4.628,1847,4.628,1848,3.225,1849,3.225,1850,3.225,1851,3.225,1852,3.225,1853,3.225,1854,3.225,1855,4.628,1856,4.628,1857,3.225,1858,4.628,1859,3.225,1860,3.225,1861,3.225,1862,3.225,1863,3.225,1864,3.225,1865,3.225,1866,3.225,1867,3.225,1868,3.225,1869,3.225,1870,3.225,1871,3.225,1872,3.225,1873,3.225,1874,3.225,1875,3.225,1876,2.783,1877,3.992,1878,3.225,1879,4.628,1880,3.225,1881,4.628,1882,3.225,1883,4.628,1884,5.412,1885,3.225,1886,3.225,1887,3.225,1888,3.225,1889,3.225,1890,3.225,1891,3.225,1892,3.225,1893,4.628,1894,3.225,1895,3.225,1896,4.628,1897,3.225,1898,4.628,1899,3.225,1900,3.225,1901,3.225,1902,3.225,1903,3.225,1904,3.225,1905,3.225,1906,3.225,1907,3.225,1908,3.225,1909,3.225,1910,4.628,1911,3.225,1912,3.225,1913,3.225,1914,3.225,1915,3.225,1916,3.225,1917,3.225,1918,3.225,1919,3.225,1920,3.225,1921,3.225,1922,3.225,1923,4.628,1924,3.225,1925,3.225,1926,3.225,1927,3.225]],["title/changelog.html",[1928,2.454,1929,2.24,1930,2.454]],["body/changelog.html",[3,1.551,7,0.013,13,0.209,18,0.955,24,0.384,28,0.15,29,0.252,30,1.491,41,0.899,42,0.848,48,0.378,69,1.415,82,0.004,83,0.006,84,0.012,85,0.523,87,0.265,98,1.353,103,1.496,104,1.706,116,0.955,125,2.165,131,1.02,138,1.817,140,1.095,144,1.585,145,1.692,148,1.095,150,0.762,152,1.143,157,1.02,163,0.547,174,0.572,180,2.994,181,0.899,260,1.968,263,1.02,266,3.018,268,1.692,270,0.994,287,0.599,294,3.018,296,4.679,300,1.04,311,1.095,321,2.223,324,1.803,326,2.156,327,1.186,329,1.3,341,1.186,361,2.593,409,2.523,427,1.817,522,0.762,523,1.095,540,1.491,548,1.407,551,0.899,553,2.203,554,1.02,557,2.099,579,1.095,598,1.3,604,1.968,613,1.968,617,0.955,619,1.186,620,5.488,622,1.968,630,2.168,634,1.095,635,1.186,649,1.02,666,1.817,667,1.968,668,1.095,674,1.186,676,1.692,689,0.724,700,0.848,703,3.051,711,0.899,727,1.968,730,2.826,731,1.186,732,1.3,733,2.168,744,2.156,823,3.255,863,1.186,866,2.409,867,3.984,884,1.452,886,1.3,891,1.3,916,3.433,919,1.452,923,1.452,928,2.156,932,1.968,934,4.296,935,2.156,936,1.186,937,1.452,938,1.452,947,1.817,980,2.156,981,1.095,982,1.186,984,2.329,985,1.452,996,3.825,1001,5.238,1002,5.557,1011,1.452,1023,1.186,1025,0.899,1040,3.216,1067,1.095,1074,1.186,1085,1.3,1090,2.763,1091,1.3,1125,1.02,1132,1.095,1147,1.452,1148,1.095,1237,1.452,1243,1.3,1260,3.984,1261,1.452,1282,3.087,1297,1.3,1299,5.815,1313,2.409,1324,3.592,1328,1.452,1330,2.156,1334,1.452,1336,1.452,1355,1.3,1357,1.452,1359,1.452,1360,2.409,1361,4.955,1362,1.452,1399,2.763,1469,2.409,1470,2.409,1484,2.156,1486,3.087,1488,2.409,1545,3.984,1563,1.452,1614,2.156,1622,1.452,1630,3.567,1659,1.452,1660,2.763,1692,1.3,1754,1.452,1760,1.3,1804,1.3,1818,4.679,1819,5.617,1821,3.592,1824,4.763,1876,3.087,1877,1.452,1929,2.522,1930,2.156,1931,1.452,1932,1.452,1933,4.763,1934,2.792,1935,3.578,1936,4.164,1937,4.551,1938,4.551,1939,1.683,1940,5.275,1941,1.683,1942,1.683,1943,2.792,1944,4.164,1945,5.52,1946,1.683,1947,1.683,1948,4.164,1949,2.792,1950,6.416,1951,3.578,1952,1.683,1953,2.792,1954,3.578,1955,1.683,1956,1.683,1957,1.683,1958,1.683,1959,1.683,1960,6.416,1961,1.683,1962,1.683,1963,1.683,1964,1.683,1965,1.683,1966,1.683,1967,2.792,1968,1.452,1969,1.683,1970,2.792,1971,4.164,1972,4.164,1973,1.683,1974,3.578,1975,1.683,1976,1.683,1977,2.792,1978,1.683,1979,1.683,1980,4.98,1981,3.984,1982,3.087,1983,1.683,1984,5.905,1985,5.905,1986,4.618,1987,3.984,1988,1.683,1989,2.792,1990,1.683,1991,3.578,1992,4.763,1993,6.311,1994,2.792,1995,1.683,1996,1.683,1997,2.792,1998,6.059,1999,3.087,2000,1.683,2001,4.98,2002,4.618,2003,1.683,2004,1.683,2005,4.618,2006,1.683,2007,1.683,2008,1.683,2009,1.683,2010,3.578,2011,1.683,2012,2.409,2013,2.792,2014,5.275,2015,1.683,2016,4.763,2017,1.683,2018,1.683,2019,1.683,2020,1.683,2021,1.683,2022,1.683,2023,3.984,2024,4.424,2025,3.984,2026,1.683,2027,2.792,2028,2.792,2029,2.792,2030,2.792,2031,2.792,2032,1.683,2033,1.683,2034,1.683,2035,1.683,2036,3.087,2037,2.792,2038,2.792,2039,1.683,2040,2.792,2041,2.792,2042,2.792,2043,4.164,2044,2.409,2045,1.683,2046,1.683,2047,1.683,2048,1.683,2049,2.792,2050,1.683,2051,1.683,2052,2.792,2053,1.683,2054,3.578,2055,2.792,2056,4.98,2057,2.409,2058,2.792,2059,4.164,2060,1.683,2061,1.683,2062,2.409,2063,4.164,2064,1.683,2065,1.683,2066,1.452,2067,1.683,2068,2.792,2069,1.683,2070,1.683,2071,2.792,2072,1.683,2073,2.792,2074,1.683,2075,1.452,2076,1.683,2077,1.683,2078,1.683,2079,1.683,2080,1.683,2081,1.683,2082,1.683,2083,1.683,2084,1.683,2085,1.683,2086,1.683,2087,1.683,2088,1.683,2089,1.683,2090,2.792,2091,1.683,2092,4.98,2093,1.683,2094,1.683,2095,3.578,2096,3.578,2097,2.409,2098,1.683,2099,1.683,2100,1.683,2101,2.792,2102,2.792,2103,1.683,2104,1.683,2105,1.683,2106,2.792,2107,2.792,2108,3.578,2109,1.683,2110,1.683,2111,1.683,2112,1.683,2113,2.792,2114,1.683,2115,2.792,2116,4.164,2117,1.683,2118,1.683,2119,1.683,2120,4.98,2121,2.792,2122,1.683,2123,1.683,2124,3.578,2125,2.792,2126,2.792,2127,4.164,2128,1.683,2129,1.683,2130,1.683,2131,2.792,2132,1.683,2133,1.683,2134,1.683,2135,1.683,2136,1.683,2137,4.164,2138,1.683,2139,3.578,2140,4.164,2141,1.683,2142,3.578,2143,4.618,2144,2.792,2145,2.792,2146,2.792,2147,3.578,2148,4.164,2149,4.618,2150,3.578,2151,1.683,2152,1.683,2153,5.275,2154,3.578,2155,1.683,2156,4.164,2157,4.164,2158,5.728,2159,1.683,2160,1.683,2161,1.683,2162,1.683,2163,1.683,2164,1.683,2165,2.792,2166,1.683,2167,1.683,2168,1.683,2169,1.683,2170,2.792,2171,1.683,2172,1.683,2173,2.792,2174,3.087,2175,2.792,2176,3.578,2177,1.683,2178,1.683,2179,1.683,2180,1.683,2181,1.683,2182,1.683,2183,1.683,2184,1.683,2185,4.98,2186,2.792,2187,3.578,2188,2.792,2189,1.683,2190,1.683,2191,1.683,2192,1.683,2193,3.578,2194,1.683,2195,1.683,2196,1.683,2197,2.792,2198,2.792,2199,2.792,2200,3.578,2201,1.683,2202,1.683,2203,1.683,2204,1.683,2205,1.683,2206,1.683,2207,1.452,2208,1.683,2209,1.683,2210,1.683,2211,1.683,2212,2.792,2213,1.683,2214,1.683,2215,2.792,2216,1.683,2217,1.683,2218,1.683,2219,1.683,2220,1.683,2221,1.683,2222,1.683,2223,1.683,2224,1.683,2225,1.683,2226,5.52,2227,1.683,2228,3.087,2229,5.52,2230,3.578,2231,4.164,2232,2.792,2233,3.578,2234,1.683,2235,2.792,2236,1.683,2237,1.683,2238,2.792,2239,2.792,2240,1.683,2241,1.683,2242,2.792,2243,1.683,2244,1.683,2245,1.683,2246,3.592,2247,1.683,2248,1.683,2249,1.683,2250,1.683,2251,1.683,2252,1.683,2253,1.683,2254,1.683,2255,1.683,2256,1.683,2257,3.592,2258,1.683,2259,1.683,2260,1.683,2261,1.683,2262,1.683,2263,1.683,2264,1.683,2265,1.683,2266,1.683,2267,1.683,2268,1.683,2269,2.792,2270,1.683,2271,2.792,2272,1.683,2273,2.792,2274,2.792,2275,4.164,2276,4.164,2277,2.792,2278,2.792,2279,1.683,2280,1.683,2281,1.683,2282,3.578,2283,1.683,2284,1.452,2285,1.683,2286,1.683,2287,1.683,2288,1.683,2289,1.683,2290,1.683,2291,2.792,2292,5.905,2293,3.578,2294,2.792,2295,1.683,2296,2.792,2297,1.683,2298,1.683,2299,1.683,2300,1.683,2301,1.683,2302,1.683,2303,1.683,2304,2.792,2305,4.551,2306,2.792,2307,1.683,2308,1.683,2309,1.683,2310,1.683,2311,1.683,2312,3.216,2313,1.683,2314,2.792,2315,1.683,2316,1.683,2317,1.683,2318,2.792,2319,1.683,2320,1.683,2321,1.683,2322,1.683,2323,2.792,2324,2.792,2325,2.409,2326,1.683,2327,1.683,2328,1.683,2329,1.683,2330,1.683,2331,1.683,2332,1.683,2333,1.683,2334,1.683,2335,1.452,2336,1.683,2337,2.409,2338,1.683,2339,1.683,2340,1.683,2341,1.683,2342,1.683,2343,1.683,2344,2.792,2345,1.683,2346,2.792,2347,1.683,2348,1.683,2349,1.683,2350,1.683,2351,1.683,2352,1.683,2353,1.683,2354,1.683,2355,1.683,2356,1.683,2357,1.683,2358,2.792,2359,1.683,2360,1.683,2361,1.683,2362,1.683,2363,2.792,2364,1.683,2365,1.683,2366,1.683,2367,1.683,2368,1.683,2369,1.683,2370,1.683,2371,1.683,2372,1.683]],["title/coverage.html",[2312,4.014]],["body/coverage.html",[6,1.356,7,0.017,8,1.612,9,1.612,15,0.113,16,0.238,17,3.624,23,2.002,28,0.253,42,1.432,46,2.746,48,0.524,56,2.002,57,2.451,71,2.002,79,0.189,82,0.006,83,0.009,84,0.006,88,1.722,89,2.544,90,3.733,91,3.733,94,1.183,121,1.222,124,1.356,135,1.722,137,1.612,151,1.722,152,0.567,153,1.722,155,1.722,159,1.722,161,1.722,175,1.722,209,1.722,253,2.002,254,3.275,255,3.275,256,3.546,270,1.617,284,1.432,286,2.974,292,2.002,307,1.222,311,1.849,353,1.286,354,3.258,355,3.258,363,1.722,364,3.624,365,3.624,367,1.356,377,1.722,387,1.432,418,2.678,430,1.722,433,1.722,443,2.194,466,3.374,467,3.275,504,2.194,505,2.451,518,3.537,519,3.886,547,1.164,552,3.546,580,1.849,587,1.849,614,1.849,690,1.286,695,1.286,697,1.222,699,1.286,702,1.286,705,1.286,709,1.286,713,1.222,723,1.612,724,3.141,725,2.973,726,3.546,730,1.612,740,2.002,742,1.849,786,2.451,787,2.451,832,2.194,833,4.735,849,2.194,850,2.973,852,2.002,955,2.451,956,3.546,979,2.451,1015,2.556,1065,3.258,1081,2.002,1144,6.227,1146,2.451,1148,1.849,1151,5.296,1164,2.194,1165,2.451,1166,2.451,1178,3.258,1187,2.194,1209,2.194,1210,2.194,1247,2.194,1248,2.194,1249,2.451,1277,2.194,1278,2.194,1279,2.451,1294,2.451,1331,2.451,1347,2.002,1348,3.924,1349,3.924,1350,4.3,1371,2.194,1466,2.194,1588,2.002,1589,4.928,1590,4.928,1591,5.23,1601,2.194,1619,2.002,1620,2.002,1621,2.194,1684,2.451,1717,2.194,1718,2.194,1719,2.451,1787,2.002,1788,3.872,1793,2.002,1794,2.002,1795,2.002,1796,1.849,1811,2.194,1812,3.639,2312,2.194,2373,2.841,2374,2.841,2375,2.451,2376,7.635,2377,4.218,2378,2.841,2379,2.451,2380,2.451,2381,6.891,2382,2.451,2383,2.451,2384,2.451,2385,2.451,2386,2.451,2387,2.841,2388,2.451,2389,2.451,2390,2.451,2391,5.568,2392,2.841,2393,2.841,2394,2.841,2395,2.451,2396,2.841,2397,5.568,2398,2.841,2399,2.841,2400,2.841,2401,2.841,2402,2.841,2403,2.841,2404,2.841,2405,2.841,2406,2.841,2407,2.841,2408,2.841,2409,2.841,2410,2.841,2411,2.841,2412,2.841,2413,2.841,2414,2.841,2415,4.218,2416,2.841,2417,2.841,2418,2.451,2419,4.218,2420,2.841,2421,4.218,2422,2.841,2423,2.841,2424,2.841,2425,2.841,2426,2.841]],["title/dependencies.html",[3,1.705,1968,2.741]],["body/dependencies.html",[3,1.645,7,0.018,15,0.175,37,0.316,40,3.477,41,2.357,42,2.225,82,0.01,83,0.012,84,0.01,96,2.874,113,0.964,119,2.874,120,2.874,149,2.737,170,2.506,278,3.112,279,3.41,280,3.41,360,1.999,361,1.999,407,2.874,672,3.112,689,2.469,749,2.676,806,3.809,823,3.112,826,3.112,831,2.874,932,4.043,1092,3.112,1101,3.41,1162,3.809,1211,3.809,1280,3.809,1363,3.809,1367,3.809,1368,3.809,1987,3.809,2012,3.809,2057,3.809,2174,3.809,2228,4.949,2427,4.415,2428,4.415,2429,4.415,2430,7.598,2431,4.415,2432,4.415,2433,4.415,2434,4.415,2435,4.415,2436,5.737,2437,4.415,2438,4.415,2439,4.415,2440,6.993,2441,4.415,2442,5.737,2443,4.415,2444,4.415,2445,4.415,2446,6.373,2447,4.415,2448,4.415,2449,4.415,2450,4.415,2451,4.415,2452,4.415,2453,4.415,2454,5.737,2455,6.373,2456,4.415,2457,4.415,2458,4.415,2459,4.415,2460,4.415,2461,4.415,2462,5.737,2463,4.415,2464,4.415,2465,4.415,2466,4.415,2467,4.415,2468,4.415,2469,4.415,2470,4.415,2471,4.415,2472,4.415,2473,4.415,2474,4.415,2475,5.737,2476,3.809,2477,4.415,2478,4.415,2479,4.415,2480,4.415,2481,4.415,2482,5.737,2483,4.415,2484,4.415,2485,4.415,2486,4.415,2487,4.415,2488,4.415,2489,4.415,2490,4.415,2491,4.415,2492,4.415,2493,4.415,2494,4.415,2495,4.415,2496,4.415,2497,4.415,2498,4.415,2499,4.415,2500,4.415,2501,4.415,2502,4.415,2503,4.415,2504,4.415,2505,4.415,2506,4.415,2507,4.415,2508,4.415,2509,4.415,2510,4.415,2511,4.415,2512,4.415,2513,4.415,2514,4.949,2515,4.415,2516,4.415,2517,4.415,2518,4.415,2519,4.415,2520,4.415,2521,4.415,2522,4.415,2523,4.415,2524,4.415,2525,4.415]],["title/miscellaneous/functions.html",[2526,1.926,2527,3.95]],["body/miscellaneous/functions.html",[7,0.017,16,0.212,17,2.258,26,1.739,27,1.259,29,1.141,30,2.602,31,1.275,38,2.679,54,1.493,58,2.679,59,1.655,63,0.904,64,1.655,67,2.679,70,2.688,71,3.435,77,2.33,82,0.008,83,0.011,84,0.008,86,0.653,87,0.546,89,1.179,90,1.852,91,3.437,98,1.127,101,1.655,107,2.258,111,1.899,133,1.655,137,1.969,152,0.973,159,3.414,161,2.953,162,2.914,163,1.127,164,3.172,165,3.172,168,1.852,209,2.953,217,2.258,237,3.104,257,1.986,258,2.445,275,1.421,282,2.102,284,1.749,286,1.655,410,1.852,418,1.656,518,1.969,519,4.351,524,2.679,528,2.993,532,2.993,533,2.258,534,2.993,535,2.456,536,4.691,537,2.993,538,2.993,539,3.703,540,1.852,541,2.993,542,2.993,554,2.102,579,2.258,591,2.445,614,3.667,679,2.445,689,1.493,729,3.435,797,5.155,799,5.567,801,5.405,832,4.351,833,3.977,835,2.679,836,2.445,854,2.993,891,2.679,966,1.969,984,2.258,1148,3.172,1209,2.679,1210,3.764,1215,2.993,1217,4.205,1223,2.679,1379,2.445,1589,2.445,1590,5.08,1591,5.879,1592,5.271,1598,6.345,1602,2.993,1603,2.993,1604,2.993,1605,2.993,1606,4.86,1607,6.345,1608,5.759,1609,5.759,1610,5.271,1611,4.205,1612,4.86,1788,2.258,1796,3.667,2075,2.993,2337,2.993,2375,4.205,2379,2.993,2380,4.205,2382,2.993,2383,4.86,2384,2.993,2385,4.205,2386,4.205,2390,4.205,2395,4.205,2418,4.205,2514,2.993,2526,2.102,2527,2.993,2528,4.719,2529,3.469,2530,3.469,2531,2.993,2532,4.205,2533,3.469,2534,4.874,2535,6.137,2536,3.469,2537,3.469,2538,3.469,2539,3.469,2540,3.469,2541,3.469,2542,3.469,2543,3.469,2544,3.469,2545,3.469,2546,3.469,2547,3.469,2548,4.874,2549,3.469,2550,3.469]],["title/index.html",[86,0.303,1928,2.454,1929,2.24]],["body/index.html",[7,0.014,13,0.29,48,0.451,82,0.011,83,0.014,84,0.011,85,1.589,103,1.655,270,1.22,321,2.73,643,3.603,703,2.935,863,3.603,928,4.861,936,3.603,981,4.097,1001,4.436,1002,5.267,1134,3.328,1480,4.411,1752,4.411,1760,3.948,1818,3.948,1930,3.948,1931,5.431,1932,5.431,1933,5.884,1981,6.14,1982,5.884,1992,5.431,1999,4.411,2016,4.411,2024,5.497,2025,4.411,2036,4.411,2062,5.431,2257,5.431,2325,4.411,2335,4.411,2551,6.294,2552,5.112,2553,5.112,2554,5.112,2555,5.431,2556,5.112,2557,5.112,2558,6.294,2559,6.294,2560,6.294,2561,6.82,2562,5.112,2563,5.112,2564,7.117,2565,6.82,2566,5.112,2567,5.112,2568,6.294,2569,5.112,2570,5.112,2571,5.112,2572,5.112,2573,5.112,2574,5.112,2575,5.112,2576,5.112,2577,5.112,2578,5.112,2579,5.112,2580,5.112,2581,5.112,2582,5.112]],["title/license.html",[1928,2.454,1929,2.24,2583,2.741]],["body/license.html",[7,0.014,12,1.664,82,0.012,83,0.014,84,0.012,112,2.858,341,3.773,598,5.375,668,3.484,671,3.773,730,3.038,883,3.484,886,4.134,907,4.134,949,4.618,1170,4.618,1219,4.134,2023,5.585,2024,4.134,2066,5.585,2207,5.585,2284,4.618,2305,4.618,2476,4.618,2555,6.671,2583,4.618,2584,5.353,2585,6.959,2586,5.353,2587,6.473,2588,5.353,2589,5.353,2590,5.353,2591,5.353,2592,5.353,2593,5.353,2594,6.473,2595,5.353,2596,5.353,2597,5.353,2598,5.353,2599,5.353,2600,5.353,2601,5.353,2602,5.353,2603,5.353,2604,5.353,2605,5.353,2606,6.473,2607,5.353,2608,5.353,2609,5.353,2610,5.353,2611,5.353,2612,6.473,2613,5.353,2614,5.353,2615,5.353,2616,5.353,2617,5.353,2618,5.353,2619,5.353,2620,5.353,2621,5.353,2622,5.353,2623,5.353,2624,5.353,2625,5.353,2626,5.353,2627,5.353,2628,5.353,2629,5.353,2630,5.353,2631,5.353,2632,5.353,2633,5.353,2634,5.353,2635,5.353]],["title/modules.html",[2,1.936]],["body/modules.html",[1,3.668,2,2.099,7,0.015,82,0.012,83,0.015,84,0.012,349,3.971,630,3.415,716,3.668,932,5.542,1048,3.971,1053,3.668,1208,4.352,1271,3.971,1337,3.971,1353,6.784,1580,3.971,1661,3.971,1697,3.971,1779,3.971,1938,6.784,2636,7.89,2637,5.635]],["title/overview.html",[2638,4.483]],["body/overview.html",[1,4.816,2,1.647,3,2.139,4,3.814,5,3.814,6,3.043,7,0.017,8,3.619,9,3.619,10,2.352,11,1.811,12,1.374,82,0.01,83,0.012,84,0.01,85,1.374,226,1.726,307,3.141,349,4.931,350,3.814,351,3.814,352,3.814,353,3.304,521,2.509,547,2.99,548,2.228,690,2.001,695,3.304,697,3.141,699,3.304,702,3.304,705,3.304,709,3.304,713,3.141,716,4.667,717,3.814,718,3.814,719,3.814,1048,5.145,1049,3.814,1050,3.814,1051,3.814,1052,3.814,1053,4.667,1153,3.814,1154,3.814,1155,3.814,1271,4.931,1272,3.814,1273,3.814,1274,3.814,1337,4.931,1338,3.814,1339,3.814,1340,3.814,1580,4.931,1581,3.814,1582,3.814,1583,3.814,1614,3.414,1661,4.931,1662,3.814,1663,3.814,1664,3.814,1697,5.272,1698,3.814,1699,3.814,1701,3.814,1702,5.823,1703,5.823,1779,4.931,1780,3.814,1781,3.814,1782,3.814,1937,3.814,2044,3.814,2097,3.814,2246,3.814,2638,3.814,2639,4.421]],["title/miscellaneous/typealiases.html",[2526,1.926,2640,4.578]],["body/miscellaneous/typealiases.html",[7,0.016,16,0.22,28,0.619,50,0.872,57,2.257,62,3.664,63,1.683,69,1.811,82,0.012,83,0.014,84,0.012,86,0.507,89,2.194,90,2.845,91,3.854,127,3.912,129,4.202,132,4.202,133,2.542,411,3.254,443,4.115,444,3.912,459,3.756,460,3.468,466,3.229,467,4.813,480,3.756,482,4.55,483,4.55,485,4.55,530,3.468,535,2.686,539,3.912,850,3.756,852,4.55,868,4.986,875,4.597,876,5.57,899,4.115,900,4.597,1619,3.756,1620,3.756,1621,5.364,1640,4.597,1641,5.57,1642,4.597,1643,5.992,2526,3.229,2528,5.364,2641,5.328,2642,5.328,2643,7.219,2644,5.57,2645,6.456]],["title/miscellaneous/variables.html",[2526,1.926,2646,3.95]],["body/miscellaneous/variables.html",[6,1.213,7,0.017,8,1.443,9,1.443,16,0.199,17,1.655,27,1.28,28,0.554,30,2.072,46,2.525,50,0.524,56,2.735,60,0.421,63,1.823,73,1.541,75,3.701,77,0.864,82,0.006,83,0.008,84,0.006,86,0.242,89,0.864,90,1.357,91,2.811,112,1.357,127,2.351,136,1.357,144,3.727,146,3.767,147,2.351,151,3.191,152,0.939,153,2.351,154,2.525,155,2.351,156,1.655,157,1.541,163,1.529,170,2.988,173,1.445,174,1.319,254,1.655,255,1.655,256,2.735,260,1.792,261,2.997,263,4.688,268,2.351,274,1.792,287,2.537,288,2.997,289,1.963,290,1.963,291,1.963,292,2.735,293,2.735,294,1.541,311,2.525,316,3.506,444,1.541,703,3.329,724,1.281,725,1.357,726,2.735,740,2.735,741,1.963,805,4.615,833,2.525,850,1.792,852,2.735,868,1.963,956,2.735,965,4.128,1125,4.466,1132,4.361,1178,1.963,1187,2.997,1188,2.193,1189,2.193,1190,2.193,1191,2.735,1347,1.792,1348,1.792,1349,1.792,1350,3.634,1354,6.674,1355,5.629,1356,6.674,1361,2.997,1369,2.193,1370,2.193,1371,2.997,1372,2.193,1373,3.347,1374,2.193,1375,2.193,1376,3.347,1377,2.193,1378,3.347,1379,2.735,1380,4.542,1381,2.193,1382,2.193,1383,4.059,1384,5.156,1385,5.961,1386,2.193,1387,2.193,1388,2.193,1389,4.059,1390,5.666,1391,5.156,1392,2.193,1393,2.193,1394,2.193,1395,2.193,1396,3.347,1397,2.193,1398,4.059,1399,4.615,1400,2.193,1401,2.193,1402,2.193,1403,4.059,1404,5.156,1405,2.193,1406,2.193,1407,2.193,1408,2.193,1409,3.347,1410,2.193,1411,3.347,1412,3.347,1413,3.347,1414,2.193,1415,2.193,1416,4.059,1417,5.156,1418,2.193,1419,2.193,1420,2.193,1421,2.193,1422,3.347,1423,2.193,1424,2.193,1425,2.193,1426,3.347,1427,2.193,1428,3.347,1429,4.542,1430,2.193,1431,2.193,1432,2.193,1433,5.156,1434,3.347,1435,2.193,1436,2.193,1437,3.347,1438,2.193,1439,2.193,1440,3.347,1441,2.193,1442,2.193,1443,3.347,1444,2.193,1445,4.059,1446,5.156,1447,2.193,1448,2.193,1449,2.193,1450,2.193,1451,3.347,1452,3.347,1453,2.193,1454,2.193,1455,3.347,1456,2.193,1457,3.347,1458,3.347,1459,4.542,1460,4.542,1461,2.193,1462,2.193,1463,2.193,1464,2.193,1465,2.193,1466,2.997,1467,2.193,1468,2.193,1588,1.792,1589,1.792,1590,2.735,1601,2.997,1788,1.655,1794,2.735,1795,2.735,1796,1.655,2388,2.193,2389,3.347,2526,1.541,2528,3.634,2531,3.347,2532,2.193,2535,2.193,2644,2.193,2646,2.193,2647,3.88,2648,2.542,2649,2.542,2650,2.542,2651,2.542]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":418,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.1.0",{"_index":2363,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":2525,"title":{},"body":{"dependencies.html":{}}}],["0.12",{"_index":1772,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.14",{"_index":1770,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.18.0",{"_index":2466,"title":{},"body":{"dependencies.html":{}}}],["0.1875rem",{"_index":1329,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["0.2",{"_index":1767,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.2.0",{"_index":2358,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":2483,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":1033,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["0.5.0",{"_index":2346,"title":{},"body":{"changelog.html":{}}}],["0.5rem",{"_index":1137,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["0.6.0",{"_index":2325,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.65rem",{"_index":1035,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["0.6s",{"_index":1037,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["0.7",{"_index":1759,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.875rem",{"_index":1126,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["0/1",{"_index":2376,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2417,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2414,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2421,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2423,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2422,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2415,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2420,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2419,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2391,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2416,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2393,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2374,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2378,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2377,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2413,"title":{},"body":{"coverage.html":{}}}],["007cbe",{"_index":1777,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["01",{"_index":1988,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":2194,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":2143,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1936,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":2116,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":2294,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1944,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":2306,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":2043,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":1570,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{}}}],["1",{"_index":1614,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"changelog.html":{},"overview.html":{}}}],["1.0",{"_index":2229,"title":{},"body":{"changelog.html":{}}}],["1.0.0",{"_index":2292,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":2461,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":2468,"title":{},"body":{"dependencies.html":{}}}],["1.0.6",{"_index":2520,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2269,"title":{},"body":{"changelog.html":{}}}],["1.125rem",{"_index":1332,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["1.19.0",{"_index":2463,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":2228,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.3",{"_index":2471,"title":{},"body":{"dependencies.html":{}}}],["1.2.6",{"_index":2503,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":2193,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":2174,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":2485,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":2142,"title":{},"body":{"changelog.html":{}}}],["1.5rem",{"_index":1044,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["1.6.0",{"_index":2127,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":2115,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":2473,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":2501,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2381,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2405,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":294,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":2475,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1151,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{},"coverage.html":{}}}],["10px",{"_index":1769,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["10rem",{"_index":1143,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["10x",{"_index":2281,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":2176,"title":{},"body":{"changelog.html":{}}}],["11.2.1",{"_index":2504,"title":{},"body":{"dependencies.html":{}}}],["11/14",{"_index":2407,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1937,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["12.0.1",{"_index":2505,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":2430,"title":{},"body":{"dependencies.html":{}}}],["12.1.3",{"_index":2435,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":2044,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["13/13",{"_index":2396,"title":{},"body":{"coverage.html":{}}}],["15.126.1",{"_index":2428,"title":{},"body":{"dependencies.html":{}}}],["15/15",{"_index":2412,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":2097,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["17",{"_index":1994,"title":{},"body":{"changelog.html":{}}}],["17.5rem",{"_index":1152,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["18px",{"_index":1771,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["1px",{"_index":1765,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["1rem",{"_index":1130,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["2",{"_index":2246,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["2.0.0",{"_index":2096,"title":{},"body":{"changelog.html":{}}}],["2.0.5",{"_index":2479,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2057,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.2.0",{"_index":2052,"title":{},"body":{"changelog.html":{}}}],["2.25rem",{"_index":1133,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["2.3.0",{"_index":2049,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":2042,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":2030,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":2012,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.6.7",{"_index":2506,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":2470,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":2387,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1294,"title":{},"body":{"components/OpacitySliderComponent.html":{},"coverage.html":{}}}],["200",{"_index":1542,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["2019",{"_index":2305,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":2231,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":1993,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":1935,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":2117,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":2295,"title":{},"body":{"changelog.html":{}}}],["23/30",{"_index":2409,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":2347,"title":{},"body":{"changelog.html":{}}}],["24px",{"_index":1775,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["25",{"_index":2404,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":1117,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["255",{"_index":1758,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["26",{"_index":2144,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":2179,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":1989,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":2215,"title":{},"body":{"changelog.html":{}}}],["3.0",{"_index":2559,"title":{},"body":{"index.html":{}}}],["3.0.0",{"_index":1987,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.0.12",{"_index":2446,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":1943,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":1934,"title":{},"body":{"changelog.html":{}}}],["3.5.5",{"_index":2450,"title":{},"body":{"dependencies.html":{}}}],["3.6.0",{"_index":2515,"title":{},"body":{"dependencies.html":{}}}],["3.7.1",{"_index":2455,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2401,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2400,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2058,"title":{},"body":{"changelog.html":{}}}],["300",{"_index":1140,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["31",{"_index":2270,"title":{},"body":{"changelog.html":{}}}],["323232",{"_index":1761,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["3d",{"_index":1819,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["3px",{"_index":1763,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["3rem",{"_index":1124,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/TextSearchComponent.html":{}}}],["4",{"_index":157,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["4.17.1",{"_index":2477,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":2497,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":2467,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":2487,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2397,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":1756,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["48",{"_index":1881,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["5.0.0",{"_index":2490,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":2459,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":2495,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":2394,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1146,"title":{},"body":{"components/InfoDialogComponent.html":{},"coverage.html":{}}}],["50rem",{"_index":1142,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["5px",{"_index":1764,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["6.0.0",{"_index":2499,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":2493,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":2508,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":2452,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":2519,"title":{},"body":{"dependencies.html":{}}}],["6.6.7",{"_index":2516,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":2424,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1331,"title":{},"body":{"components/OpacitySliderComponent.html":{},"coverage.html":{}}}],["60rem",{"_index":1026,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["64",{"_index":1573,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["6px",{"_index":1768,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["6rem",{"_index":1776,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["6s",{"_index":1041,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["7/34",{"_index":2392,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":2411,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":2399,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":1502,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["75",{"_index":1898,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["76",{"_index":2408,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":2406,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":2121,"title":{},"body":{"changelog.html":{}}}],["8.3.2",{"_index":2523,"title":{},"body":{"dependencies.html":{}}}],["8.5.7",{"_index":2440,"title":{},"body":{"dependencies.html":{}}}],["8/9",{"_index":2403,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2357,"title":{},"body":{"changelog.html":{}}}],["87",{"_index":2398,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":2402,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":2639,"title":{},"body":{"overview.html":{}}}],["9.5",{"_index":1864,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["9/9",{"_index":2410,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2311,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":2356,"title":{},"body":{"changelog.html":{}}}],["9999",{"_index":1774,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["9]*/g",{"_index":1269,"title":{},"body":{"directives/NumberDirective.html":{}}}],["9th",{"_index":2152,"title":{},"body":{"changelog.html":{}}}],["_bounds",{"_index":1866,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_camera",{"_index":1868,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_error",{"_index":1195,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["_ignored",{"_index":953,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["_index",{"_index":1685,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["_interactive",{"_index":1860,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_occurencedata",{"_index":1508,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["_rotation",{"_index":1861,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_rotationx",{"_index":1862,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_scene",{"_index":1867,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_target",{"_index":1865,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_wont_",{"_index":1805,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["_zoom",{"_index":1863,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["a.name.localecompare(b.name",{"_index":1465,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["ability",{"_index":2071,"title":{},"body":{"changelog.html":{}}}],["about.wrapper",{"_index":1123,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["above",{"_index":668,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"license.html":{}}}],["abstract",{"_index":371,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["access",{"_index":1748,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["accessors",{"_index":795,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["according",{"_index":1578,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["accurate",{"_index":2141,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":2630,"title":{},"body":{"license.html":{}}}],["actions",{"_index":2219,"title":{},"body":{"changelog.html":{}}}],["actual_component",{"_index":715,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["add",{"_index":526,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["added",{"_index":620,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["adding",{"_index":1605,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["additional",{"_index":554,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["addressed",{"_index":2264,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":1947,"title":{},"body":{"changelog.html":{}}}],["adjusting",{"_index":2259,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":2172,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":2099,"title":{},"body":{"changelog.html":{}}}],["afterviewinit",{"_index":1364,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["again",{"_index":2239,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":138,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{}}}],["agerange",{"_index":139,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["aggregateresult",{"_index":97,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["ala",{"_index":2047,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":2641,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1046,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["all_organs",{"_index":1466,"title":{},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["all_possible_organs",{"_index":1371,"title":{},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["all_possible_organs.filter(organ",{"_index":1467,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["allow_telemetry",{"_index":1191,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/variables.html":{}}}],["allowed",{"_index":530,"title":{},"body":{"interfaces/DecoratedRange.html":{},"injectables/GlobalsService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/typealiases.html":{}}}],["allows",{"_index":2159,"title":{},"body":{"changelog.html":{}}}],["allowtelemetry",{"_index":1725,"title":{},"body":{"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["allowtelemetry.tostring",{"_index":1801,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["alpha",{"_index":2336,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":2318,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":2314,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":2304,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":648,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["alt",{"_index":2563,"title":{},"body":{"index.html":{}}}],["always",{"_index":924,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["analytics",{"_index":42,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{}}}],["analyticsmodule",{"_index":1,"title":{"modules/AnalyticsModule.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules.html":{},"overview.html":{}}}],["analyticsoptions",{"_index":23,"title":{"interfaces/AnalyticsOptions.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{}}}],["anatomical",{"_index":1282,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["and/or",{"_index":2604,"title":{},"body":{"license.html":{}}}],["angular",{"_index":823,"title":{},"body":{"injectables/GlobalConfigState.html":{},"modules/MousePositionTrackerModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":2429,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2431,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":360,"title":{},"body":{"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":739,"title":{},"body":{"interfaces/DocumentationContent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{}}}],["angular/compiler",{"_index":2432,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":37,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":2433,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":278,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2434,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1708,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["angular/material/button",{"_index":1785,"title":{},"body":{"modules/TrackingPopupModule.html":{}}}],["angular/material/core",{"_index":1346,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["angular/material/dialog",{"_index":1013,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{}}}],["angular/material/expansion",{"_index":1159,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["angular/material/form",{"_index":1710,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["angular/material/icon",{"_index":1056,"title":{},"body":{"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{}}}],["angular/material/input",{"_index":1712,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["angular/material/slider",{"_index":1344,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["angular/material/snack",{"_index":1741,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["angular/material/tooltip",{"_index":1587,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["angular/platform",{"_index":2436,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":2438,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":1162,"title":{},"body":{"modules/InfoDialogModule.html":{},"dependencies.html":{}}}],["animate",{"_index":1113,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["animated",{"_index":1024,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["animated')[0]?.classlist.add('modal",{"_index":1112,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["anyfunction",{"_index":498,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["anyfunction)(...args",{"_index":503,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["anything",{"_index":1806,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["api",{"_index":180,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["api.configuration.basepath",{"_index":221,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["api.ts",{"_index":2389,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiendpointdatasourceoptions",{"_index":88,"title":{"interfaces/ApiEndpointDataSourceOptions.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{}}}],["apiendpointdatasourceservice",{"_index":175,"title":{"injectables/ApiEndpointDataSourceService.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{}}}],["app",{"_index":1370,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:bladder",{"_index":1450,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:brain",{"_index":1375,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:eye",{"_index":1383,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:fallopian",{"_index":1389,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:heart",{"_index":1395,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:kidney",{"_index":1398,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:knee",{"_index":1403,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:large",{"_index":1436,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:liver",{"_index":1408,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:lung",{"_index":1411,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:lymph",{"_index":1378,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:ovary",{"_index":1416,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:pancreas",{"_index":1421,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:pelvis",{"_index":1424,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:prostate",{"_index":1428,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:skin",{"_index":1372,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:small",{"_index":1432,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:spleen",{"_index":1439,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:thymus",{"_index":1442,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:ureter",{"_index":1445,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:uterus",{"_index":1454,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:vasculature",{"_index":1457,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app_initializer",{"_index":34,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["appear",{"_index":2006,"title":{},"body":{"changelog.html":{}}}],["appearance",{"_index":1693,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["application",{"_index":2163,"title":{},"body":{"changelog.html":{}}}],["applied",{"_index":523,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["applies",{"_index":608,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["apply",{"_index":571,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["appname",{"_index":51,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["appropriate",{"_index":1967,"title":{},"body":{"changelog.html":{}}}],["april",{"_index":2151,"title":{},"body":{"changelog.html":{}}}],["args",{"_index":385,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["arguments",{"_index":1257,"title":{},"body":{"directives/NumberDirective.html":{}}}],["arising",{"_index":2633,"title":{},"body":{"license.html":{}}}],["array",{"_index":535,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["array.length",{"_index":348,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["arrays",{"_index":2541,"title":{},"body":{"miscellaneous/functions.html":{}}}],["asct+b",{"_index":1995,"title":{},"body":{"changelog.html":{}}}],["assets/docs/readme.md",{"_index":741,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"miscellaneous/variables.html":{}}}],["assignment/selection",{"_index":2129,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":886,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{},"license.html":{}}}],["async",{"_index":344,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["attempt",{"_index":856,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["attempts",{"_index":2033,"title":{},"body":{"changelog.html":{}}}],["attrs",{"_index":66,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["attrs[key",{"_index":65,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["authors",{"_index":2624,"title":{},"body":{"license.html":{}}}],["autocomplete",{"_index":261,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["autocompleteoption",{"_index":253,"title":{"interfaces/AutoCompleteOption.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"coverage.html":{}}}],["autocompleter",{"_index":322,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["autocompletion",{"_index":298,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["autofocus",{"_index":1021,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["automatic",{"_index":2248,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":2201,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":630,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"modules.html":{}}}],["avoid",{"_index":2085,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":428,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["award",{"_index":2581,"title":{},"body":{"index.html":{}}}],["b",{"_index":1464,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["backend",{"_index":2019,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":1760,"title":{},"body":{"components/TrackingPopupComponent.html":{},"changelog.html":{},"index.html":{}}}],["bar",{"_index":297,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["base",{"_index":2323,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":579,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["basic",{"_index":2098,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":2010,"title":{},"body":{"changelog.html":{}}}],["beginning",{"_index":1491,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["behavior",{"_index":1495,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["behaviorsubject",{"_index":737,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["being",{"_index":1085,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["beta",{"_index":1992,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":2059,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1328,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["bind",{"_index":279,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"dependencies.html":{}}}],["binding",{"_index":1145,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["bladder",{"_index":1452,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["block",{"_index":1660,"title":{},"body":{"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["blocks",{"_index":1951,"title":{},"body":{"changelog.html":{}}}],["blood",{"_index":1459,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["bmi",{"_index":140,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{}}}],["bmirange",{"_index":141,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["board",{"_index":2316,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":361,"title":{},"body":{"modules/BodyUiModule.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"dependencies.html":{}}}],["bodycanvas",{"_index":1874,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bodyui",{"_index":1815,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bodyui.initialize",{"_index":1905,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bodyuicomponent",{"_index":353,"title":{},"body":{"modules/BodyUiModule.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"overview.html":{}}}],["bodyuimodule",{"_index":349,"title":{"modules/BodyUiModule.html":{}},"body":{"modules/BodyUiModule.html":{},"modules.html":{},"overview.html":{}}}],["boolean",{"_index":54,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["border",{"_index":1031,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["both",{"_index":145,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["bottom",{"_index":1129,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["boundary",{"_index":1242,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["bounds",{"_index":680,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"interfaces/XYZTriplet.html":{}}}],["bounds(value",{"_index":1844,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bounds.x",{"_index":1889,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bounds.y",{"_index":1892,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["box",{"_index":1330,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["brain",{"_index":1376,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["breaking",{"_index":2110,"title":{},"body":{"changelog.html":{}}}],["bringing",{"_index":2122,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":2636,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":932,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browserify",{"_index":2517,"title":{},"body":{"dependencies.html":{}}}],["browsing",{"_index":2368,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":1984,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":643,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"index.html":{}}}],["building",{"_index":586,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["builds",{"_index":1983,"title":{},"body":{"changelog.html":{}}}],["buster",{"_index":151,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":980,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":696,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["button.component",{"_index":1057,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["button.component.html",{"_index":988,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.scss",{"_index":987,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts",{"_index":979,"title":{},"body":{"components/InfoButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:22",{"_index":999,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:27",{"_index":1000,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:29",{"_index":995,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:49",{"_index":1007,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:56",{"_index":1004,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:72",{"_index":1009,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.module.ts",{"_index":1054,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["button.service",{"_index":1014,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["button.service.ts",{"_index":726,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["button.service.ts:27",{"_index":1062,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["button.service.ts:34",{"_index":1064,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["button.service.ts:48",{"_index":1063,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["button/info",{"_index":725,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["c",{"_index":1170,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"license.html":{}}}],["cache",{"_index":149,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"dependencies.html":{}}}],["cache_config_no_params",{"_index":153,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cache_config_params",{"_index":155,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cacheable",{"_index":119,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"dependencies.html":{}}}],["cacheable(cache_config_no_params",{"_index":186,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["cacheable(cache_config_params",{"_index":198,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["cachebusterobserver",{"_index":154,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/variables.html":{}}}],["cached",{"_index":603,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["cacheresults",{"_index":425,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["call",{"_index":1083,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/TrackingPopupComponent.html":{}}}],["callback",{"_index":2075,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["called",{"_index":2113,"title":{},"body":{"changelog.html":{}}}],["camera",{"_index":1846,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["camera(value",{"_index":1848,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["cancelregistration",{"_index":2074,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":2297,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":2464,"title":{},"body":{"dependencies.html":{}}}],["canvas",{"_index":1896,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["canvas.addeventlistener('contextmenu",{"_index":1902,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["card",{"_index":2103,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":1469,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["carouselcontainer",{"_index":1475,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["case",{"_index":1205,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["cases",{"_index":2268,"title":{},"body":{"changelog.html":{}}}],["cast",{"_index":159,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["catch",{"_index":952,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["ccf",{"_index":103,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":2224,"title":{},"body":{"changelog.html":{}}}],["ccfdatabase",{"_index":403,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabase(config",{"_index":431,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice",{"_index":363,"title":{"injectables/CCFDatabaseDataSourceBaseService.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["ccfdatabasedatasourcebaseservice:20",{"_index":442,"title":{},"body":{"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice:39",{"_index":441,"title":{},"body":{"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice:53",{"_index":440,"title":{},"body":{"injectables/CCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice:65",{"_index":1809,"title":{},"body":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourceservice",{"_index":430,"title":{"injectables/CCFDatabaseDataSourceService.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["ccfdatabasemanager",{"_index":377,"title":{"interfaces/CCFDatabaseManager.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["ccfdatabaseoptions",{"_index":378,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["cdr",{"_index":1627,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["cdr.markforcheck",{"_index":1654,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["cell",{"_index":1948,"title":{},"body":{"changelog.html":{}}}],["celltypeterms",{"_index":143,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["center",{"_index":1134,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"index.html":{}}}],["change",{"_index":863,"title":{},"body":{"injectables/GlobalsService.html":{},"components/StoreDebugComponent.html":{},"changelog.html":{},"index.html":{}}}],["changed",{"_index":604,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["changedetection",{"_index":305,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["changedetectionstrategy",{"_index":269,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":306,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["changedetectorref",{"_index":1628,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["changelog",{"_index":1930,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changeopacity",{"_index":1286,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["changeopacity(newopacity",{"_index":1305,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["changes",{"_index":324,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["charge",{"_index":2591,"title":{},"body":{"license.html":{}}}],["check",{"_index":860,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["choose",{"_index":2244,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":2222,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":2627,"title":{},"body":{"license.html":{}}}],["class",{"_index":79,"title":{"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["classes",{"_index":521,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"overview.html":{}}}],["cleans",{"_index":1635,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["cleanup",{"_index":1991,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":1118,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["clearinterval(this.timeouthandler",{"_index":1553,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["clearsubscriptions",{"_index":1925,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["click",{"_index":1011,"title":{},"body":{"components/InfoButtonComponent.html":{},"changelog.html":{}}}],["clicked",{"_index":986,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["clicking",{"_index":2107,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":110,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["clientheight",{"_index":1222,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clientwidth",{"_index":1221,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clientx",{"_index":1224,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clienty",{"_index":1225,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["close",{"_index":1077,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["closes",{"_index":1088,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["clsname",{"_index":310,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["cluster_analyticsmodule",{"_index":4,"title":{},"body":{"modules/AnalyticsModule.html":{},"overview.html":{}}}],["cluster_analyticsmodule_providers",{"_index":5,"title":{},"body":{"modules/AnalyticsModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule",{"_index":350,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule_declarations",{"_index":352,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule_exports",{"_index":351,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_decoratedtextmodule",{"_index":717,"title":{},"body":{"modules/DecoratedTextModule.html":{},"overview.html":{}}}],["cluster_decoratedtextmodule_declarations",{"_index":719,"title":{},"body":{"modules/DecoratedTextModule.html":{},"overview.html":{}}}],["cluster_decoratedtextmodule_exports",{"_index":718,"title":{},"body":{"modules/DecoratedTextModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule",{"_index":1049,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_declarations",{"_index":1052,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_exports",{"_index":1050,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_imports",{"_index":1051,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule",{"_index":1153,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule_declarations",{"_index":1154,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule_exports",{"_index":1155,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_numbersonlymodule",{"_index":1272,"title":{},"body":{"modules/NumbersOnlyModule.html":{},"overview.html":{}}}],["cluster_numbersonlymodule_declarations",{"_index":1273,"title":{},"body":{"modules/NumbersOnlyModule.html":{},"overview.html":{}}}],["cluster_numbersonlymodule_exports",{"_index":1274,"title":{},"body":{"modules/NumbersOnlyModule.html":{},"overview.html":{}}}],["cluster_opacityslidermodule",{"_index":1338,"title":{},"body":{"modules/OpacitySliderModule.html":{},"overview.html":{}}}],["cluster_opacityslidermodule_declarations",{"_index":1339,"title":{},"body":{"modules/OpacitySliderModule.html":{},"overview.html":{}}}],["cluster_opacityslidermodule_exports",{"_index":1340,"title":{},"body":{"modules/OpacitySliderModule.html":{},"overview.html":{}}}],["cluster_organselectormodule",{"_index":1581,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_organselectormodule_declarations",{"_index":1582,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_organselectormodule_exports",{"_index":1583,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_storedebugmodule",{"_index":1662,"title":{},"body":{"modules/StoreDebugModule.html":{},"overview.html":{}}}],["cluster_storedebugmodule_declarations",{"_index":1663,"title":{},"body":{"modules/StoreDebugModule.html":{},"overview.html":{}}}],["cluster_storedebugmodule_exports",{"_index":1664,"title":{},"body":{"modules/StoreDebugModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule",{"_index":1698,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule_declarations",{"_index":1699,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule_exports",{"_index":1701,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule_imports",{"_index":1700,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["cluster_trackingpopupmodule",{"_index":1780,"title":{},"body":{"modules/TrackingPopupModule.html":{},"overview.html":{}}}],["cluster_trackingpopupmodule_declarations",{"_index":1782,"title":{},"body":{"modules/TrackingPopupModule.html":{},"overview.html":{}}}],["cluster_trackingpopupmodule_exports",{"_index":1781,"title":{},"body":{"modules/TrackingPopupModule.html":{},"overview.html":{}}}],["code",{"_index":1980,"title":{},"body":{"changelog.html":{}}}],["codebase",{"_index":2234,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":2280,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":2330,"title":{},"body":{"changelog.html":{}}}],["collaboration",{"_index":2232,"title":{},"body":{"changelog.html":{}}}],["collisions",{"_index":2250,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":1040,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["colorizing",{"_index":2289,"title":{},"body":{"changelog.html":{}}}],["combination",{"_index":2245,"title":{},"body":{"changelog.html":{}}}],["combines",{"_index":1602,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["come",{"_index":2285,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":2277,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":407,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"dependencies.html":{}}}],["command",{"_index":68,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["common",{"_index":928,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{},"index.html":{}}}],["commonmodule",{"_index":359,"title":{},"body":{"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}}}],["compare",{"_index":1593,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["comparison",{"_index":1595,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["compiler",{"_index":1236,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["completely",{"_index":862,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["complexity",{"_index":2136,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":1978,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":270,"title":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":692,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["components",{"_index":548,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"overview.html":{}}}],["computed",{"_index":612,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalConfigState.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["concat",{"_index":672,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"dependencies.html":{}}}],["concat(op.added",{"_index":673,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["conditions",{"_index":2611,"title":{},"body":{"license.html":{}}}],["config",{"_index":150,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["config.state",{"_index":123,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["config.state.ts",{"_index":787,"title":{},"body":{"injectables/GlobalConfigState.html":{},"coverage.html":{}}}],["config.state.ts:19",{"_index":819,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:22",{"_index":821,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:26",{"_index":818,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:30",{"_index":815,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:34",{"_index":812,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:42",{"_index":798,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:43",{"_index":800,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:44",{"_index":802,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:45",{"_index":804,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:46",{"_index":807,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:62",{"_index":809,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config/global",{"_index":122,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["configurable",{"_index":905,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["configuration",{"_index":2063,"title":{},"body":{"changelog.html":{}}}],["configurations",{"_index":2070,"title":{},"body":{"changelog.html":{}}}],["confirmation",{"_index":2032,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":2080,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":2017,"title":{},"body":{"changelog.html":{}}}],["connectdatabase",{"_index":369,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["connectdatabase(manager",{"_index":376,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["connection",{"_index":2634,"title":{},"body":{"license.html":{}}}],["consent",{"_index":444,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["consent.service",{"_index":43,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["consentchange",{"_index":445,"title":{},"body":{"injectables/ConsentService.html":{}}}],["consentservice",{"_index":6,"title":{"injectables/ConsentService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["consentservice.consentchange.subscribe(consent",{"_index":1199,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["consentservice.setconsent(this.loadconsent",{"_index":1197,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["consortium",{"_index":2586,"title":{},"body":{"license.html":{}}}],["const",{"_index":55,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["constrained",{"_index":2550,"title":{},"body":{"miscellaneous/functions.html":{}}}],["constructor",{"_index":177,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/ConsentService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["constructor(api",{"_index":233,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["constructor(consentservice",{"_index":959,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["constructor(defaultmaxoptions",{"_index":1670,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["constructor(dialog",{"_index":993,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["constructor(dialogref",{"_index":1079,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor(el",{"_index":1254,"title":{},"body":{"directives/NumberDirective.html":{}}}],["constructor(elementref",{"_index":1726,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["constructor(globalconfig",{"_index":374,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["constructor(http",{"_index":1061,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["constructor(private",{"_index":746,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"directives/NumberDirective.html":{}}}],["constructor(store",{"_index":1626,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["container",{"_index":617,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["containers",{"_index":2061,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":2554,"title":{},"body":{"index.html":{}}}],["contains",{"_index":1351,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["content",{"_index":734,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["content.title",{"_index":1119,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["contents",{"_index":1098,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["continuously",{"_index":1537,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["contract",{"_index":2631,"title":{},"body":{"license.html":{}}}],["control",{"_index":2189,"title":{},"body":{"changelog.html":{}}}],["controller",{"_index":330,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["convert",{"_index":760,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["coordinate",{"_index":1931,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["copies",{"_index":2606,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2594,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2585,"title":{},"body":{"license.html":{}}}],["cors",{"_index":2469,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":2312,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["created",{"_index":667,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["createdatabase",{"_index":372,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["createdatabase(config",{"_index":381,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["creates",{"_index":334,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{}}}],["createsegments",{"_index":561,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["createstackops",{"_index":562,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["createstackops(ranges",{"_index":581,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["createworker",{"_index":1808,"title":{},"body":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["createworker(config",{"_index":434,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["creation",{"_index":997,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["credits",{"_index":2572,"title":{},"body":{"index.html":{}}}],["csp",{"_index":941,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["css",{"_index":1367,"title":{},"body":{"interfaces/OrganInfo.html":{},"dependencies.html":{}}}],["cuboid",{"_index":2310,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":2309,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":610,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{}}}],["currently",{"_index":1486,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["cursor",{"_index":1038,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["custom",{"_index":1594,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["cyberinfrastructure",{"_index":2574,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":2146,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":873,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["damages",{"_index":2628,"title":{},"body":{"license.html":{}}}],["dark/light",{"_index":2076,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":125,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"modules/MousePositionTrackerModule.html":{},"components/StoreDebugComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["data.content",{"_index":1103,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["data.length",{"_index":1018,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["data.split",{"_index":766,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["data.title",{"_index":1104,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["data.videoid",{"_index":1105,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dataaction",{"_index":1791,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["database",{"_index":104,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["database.service.ts",{"_index":365,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["database.service.ts:20",{"_index":375,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{}}}],["database.service.ts:37",{"_index":382,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{}}}],["database.service.ts:39",{"_index":379,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{}}}],["database.service.ts:63",{"_index":1810,"title":{},"body":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["database[releaseproxy",{"_index":438,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["databasestatus",{"_index":105,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["datareviver",{"_index":132,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/typealiases.html":{}}}],["datasets",{"_index":2157,"title":{},"body":{"changelog.html":{}}}],["datasource",{"_index":124,"title":{"interfaces/DataSource.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"coverage.html":{}}}],["datasource[k",{"_index":484,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["datasourcedatatype",{"_index":485,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["datasourcelike",{"_index":411,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/typealiases.html":{}}}],["datasourcelikemethod",{"_index":482,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["datasourcemethod",{"_index":483,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["datasourceservice",{"_index":504,"title":{"injectables/DataSourceService.html":{}},"body":{"injectables/DataSourceService.html":{},"coverage.html":{}}}],["deal",{"_index":2596,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2635,"title":{},"body":{"license.html":{}}}],["debug",{"_index":1623,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug'},{'name",{"_index":707,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["debug.component",{"_index":1666,"title":{},"body":{"modules/StoreDebugModule.html":{}}}],["debug.component.html",{"_index":1625,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.scss",{"_index":1624,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts",{"_index":1621,"title":{},"body":{"components/StoreDebugComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["debug.component.ts:21",{"_index":1633,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:26",{"_index":1639,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:34",{"_index":1636,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:37",{"_index":1629,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:58",{"_index":1634,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.module.ts",{"_index":1665,"title":{},"body":{"modules/StoreDebugModule.html":{}}}],["debug/store",{"_index":1620,"title":{},"body":{"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["december",{"_index":2240,"title":{},"body":{"changelog.html":{}}}],["decides",{"_index":1516,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["deck.gl/core",{"_index":2439,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/geo",{"_index":2441,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":2443,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":2444,"title":{},"body":{"dependencies.html":{}}}],["deckgl",{"_index":1870,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["declarations",{"_index":357,"title":{},"body":{"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}}}],["declare",{"_index":902,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["decorated",{"_index":285,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{}}}],["decoratedrange",{"_index":284,"title":{"interfaces/DecoratedRange.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["decoratedtextcomponent",{"_index":547,"title":{"components/DecoratedTextComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["decoratedtextmodule",{"_index":716,"title":{"modules/DecoratedTextModule.html":{}},"body":{"modules/DecoratedTextModule.html":{},"modules/TextSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["decoration",{"_index":595,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["decorations",{"_index":262,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{}}}],["decorations.length",{"_index":629,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["decorations.reduce",{"_index":684,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["decorator",{"_index":280,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"dependencies.html":{}}}],["decorators",{"_index":240,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{}}}],["deep",{"_index":1121,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["deeply",{"_index":2021,"title":{},"body":{"changelog.html":{}}}],["def",{"_index":872,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["default",{"_index":287,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/ConsentService.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/PluckUniqueOptions.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_max_options",{"_index":292,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_options",{"_index":1601,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultmaxoptions",{"_index":337,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["defaultparams",{"_index":135,"title":{"interfaces/DefaultParams.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{}}}],["defaults",{"_index":836,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/functions.html":{}}}],["defaultservice",{"_index":106,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["define",{"_index":728,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["defined",{"_index":24,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["delegate.service.ts",{"_index":1166,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"coverage.html":{}}}],["delegate.service.ts:11",{"_index":1168,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["delegate.service.ts:28",{"_index":1171,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["delegatedatasource",{"_index":367,"title":{"classes/DelegateDataSource.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["delegatedatasource:11",{"_index":1173,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["delegatedatasource:19",{"_index":401,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["delete",{"_index":913,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["demo",{"_index":2040,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":938,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["depends",{"_index":920,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["deps",{"_index":78,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["description",{"_index":257,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["destroyed",{"_index":1008,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["detaches",{"_index":1514,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["details",{"_index":985,"title":{},"body":{"components/InfoButtonComponent.html":{},"changelog.html":{}}}],["detection",{"_index":1632,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["detects",{"_index":1010,"title":{},"body":{"components/InfoButtonComponent.html":{},"interfaces/OrganInfo.html":{}}}],["determines",{"_index":1490,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["determining",{"_index":1596,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["dev",{"_index":426,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["developed",{"_index":2573,"title":{},"body":{"index.html":{}}}],["developmentmode",{"_index":53,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["developments",{"_index":2335,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":733,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["dialog's",{"_index":1084,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialog'},{'name",{"_index":698,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["dialog.component",{"_index":1016,"title":{},"body":{"components/InfoButtonComponent.html":{},"modules/InfoDialogModule.html":{}}}],["dialog.component.html",{"_index":1073,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialog.component.scss",{"_index":1072,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialog.component.ts",{"_index":1065,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"coverage.html":{}}}],["dialog.component.ts:26",{"_index":1097,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":1099,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:32",{"_index":1082,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:40",{"_index":1096,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:41",{"_index":1095,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:51",{"_index":1089,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:60",{"_index":1087,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.module",{"_index":1059,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["dialog.module.ts",{"_index":1156,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["dialog/info",{"_index":1015,"title":{},"body":{"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"coverage.html":{}}}],["dialogref",{"_index":1075,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialogue",{"_index":1006,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["different",{"_index":2060,"title":{},"body":{"changelog.html":{}}}],["digits",{"_index":2216,"title":{},"body":{"changelog.html":{}}}],["dir",{"_index":1526,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["direct",{"_index":2353,"title":{},"body":{"changelog.html":{}}}],["direction",{"_index":1527,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["directive",{"_index":690,"title":{"directives/NumberDirective.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":712,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["directly",{"_index":2278,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":944,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{}}}],["disabled",{"_index":965,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/variables.html":{}}}],["disables",{"_index":1565,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["dismiss",{"_index":1722,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["display",{"_index":553,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["displayed",{"_index":268,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["displayerrors",{"_index":1483,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["displaying",{"_index":1067,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["displays",{"_index":983,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["distance",{"_index":1497,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["distinct",{"_index":1597,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["distinctuntilchanged",{"_index":282,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["distinctuntilchanged(opts.compare",{"_index":1618,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["distribute",{"_index":2602,"title":{},"body":{"license.html":{}}}],["div",{"_index":1871,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["doc",{"_index":2321,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1211,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"dependencies.html":{}}}],["document).body",{"_index":1246,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["document.body.appendchild(tag",{"_index":1110,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["document.createelement('script",{"_index":1107,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["document.getelementsbyclassname('modal",{"_index":1111,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["documentation",{"_index":730,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documentationcontent",{"_index":723,"title":{"interfaces/DocumentationContent.html":{}},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"coverage.html":{}}}],["documentationcontents",{"_index":1076,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["documentationurl",{"_index":740,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dom",{"_index":550,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["don't",{"_index":637,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["done",{"_index":649,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["donor",{"_index":2102,"title":{},"body":{"changelog.html":{}}}],["donors",{"_index":2160,"title":{},"body":{"changelog.html":{}}}],["dorequest",{"_index":213,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["dorequest(method",{"_index":235,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["dotenv",{"_index":2474,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":2344,"title":{},"body":{"changelog.html":{}}}],["during",{"_index":866,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["dynamic",{"_index":2437,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":1952,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":729,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/functions.html":{}}}],["eagerly_loaded_services",{"_index":56,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["easier",{"_index":1958,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":619,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["efficiency",{"_index":2181,"title":{},"body":{"changelog.html":{}}}],["el",{"_index":1223,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"miscellaneous/functions.html":{}}}],["element",{"_index":689,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["elementref",{"_index":1255,"title":{},"body":{"directives/NumberDirective.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["elementref.nativeelement",{"_index":1745,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["embedded",{"_index":2068,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":2056,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":2054,"title":{},"body":{"changelog.html":{}}}],["emitevent",{"_index":315,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["emits",{"_index":323,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{}}}],["emitted",{"_index":2544,"title":{},"body":{"miscellaneous/functions.html":{}}}],["emitter",{"_index":1301,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["empty",{"_index":625,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["end",{"_index":524,"title":{},"body":{"interfaces/DecoratedRange.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/functions.html":{}}}],["endpoint",{"_index":222,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["endpoint.service.ts",{"_index":91,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["endpoint.service.ts:102",{"_index":244,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:107",{"_index":248,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:112",{"_index":245,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:117",{"_index":247,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:125",{"_index":243,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:133",{"_index":249,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:141",{"_index":252,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:149",{"_index":241,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:157",{"_index":246,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:165",{"_index":242,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:173",{"_index":251,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:181",{"_index":250,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:188",{"_index":236,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:193",{"_index":238,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:199",{"_index":239,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:94",{"_index":234,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["ensures",{"_index":1803,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["entry",{"_index":1735,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["entry[1",{"_index":663,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["environment",{"_index":921,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["error",{"_index":1517,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["errors",{"_index":954,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["es",{"_index":2465,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":943,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{}}}],["eslint/explicit",{"_index":1241,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["eslint/no",{"_index":948,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["especially",{"_index":864,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["etc",{"_index":2084,"title":{},"body":{"changelog.html":{}}}],["eui",{"_index":1002,"title":{},"body":{"components/InfoButtonComponent.html":{},"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":1974,"title":{},"body":{"changelog.html":{}}}],["eval",{"_index":950,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["even",{"_index":885,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["event",{"_index":1219,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"license.html":{}}}],["event.stoppropagation",{"_index":1270,"title":{},"body":{"directives/NumberDirective.html":{}}}],["eventemitter",{"_index":271,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["events",{"_index":1228,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/OpacitySliderComponent.html":{}}}],["events.subscribe(data",{"_index":1233,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["eventually",{"_index":1369,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["evt",{"_index":1903,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["evt.preventdefault",{"_index":1904,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["exclusive",{"_index":527,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["exists",{"_index":888,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["expanded",{"_index":1488,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["explicit",{"_index":1240,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["exploration",{"_index":2557,"title":{},"body":{"index.html":{}}}],["export",{"_index":47,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["exported",{"_index":126,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["exports",{"_index":358,"title":{},"body":{"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}}}],["express",{"_index":2476,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["ext/operators",{"_index":834,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["ext/operators/src/lib/filter",{"_index":2379,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ext/operators/src/lib/flatten.ts",{"_index":2382,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ext/operators/src/lib/inner",{"_index":2384,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ext/operators/src/lib/pluck",{"_index":1589,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ext/src/public",{"_index":2388,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["extends",{"_index":366,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["external",{"_index":2073,"title":{},"body":{"changelog.html":{}}}],["extra",{"_index":2481,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":2037,"title":{},"body":{"changelog.html":{}}}],["eye",{"_index":1384,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["f",{"_index":1425,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":293,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/LocalStorageSyncService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["fade",{"_index":1114,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["fail",{"_index":937,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["fails",{"_index":1237,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"changelog.html":{}}}],["fallopian",{"_index":1391,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["fallthrough",{"_index":1206,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["false",{"_index":316,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/variables.html":{}}}],["favor",{"_index":2227,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":1949,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":2147,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":2180,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":146,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":1363,"title":{},"body":{"interfaces/OrganInfo.html":{},"dependencies.html":{}}}],["fetches",{"_index":340,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["field",{"_index":1692,"title":{},"body":{"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"changelog.html":{}}}],["fields",{"_index":626,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["file",{"_index":15,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":2595,"title":{},"body":{"license.html":{}}}],["filled",{"_index":592,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["filter",{"_index":98,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["filter(config",{"_index":416,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["filter(item",{"_index":664,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["filter(range",{"_index":681,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["filternulls",{"_index":832,"title":{},"body":{"injectables/GlobalConfigState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["filterparams",{"_index":137,"title":{"interfaces/FilterParams.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["filters",{"_index":589,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["filtertoparams",{"_index":2418,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["filtertoparams(filter",{"_index":217,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["final",{"_index":2230,"title":{},"body":{"changelog.html":{}}}],["find",{"_index":342,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["findglobalobject",{"_index":853,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["finishing",{"_index":2035,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":634,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["fit",{"_index":2154,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":2620,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":2138,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":1985,"title":{},"body":{"changelog.html":{}}}],["fixes/performance",{"_index":2290,"title":{},"body":{"changelog.html":{}}}],["flatten",{"_index":2383,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["flattens",{"_index":2539,"title":{},"body":{"miscellaneous/functions.html":{}}}],["flex",{"_index":687,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["float",{"_index":1131,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["fly",{"_index":2362,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":2610,"title":{},"body":{"license.html":{}}}],["font",{"_index":1042,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{}}}],["form",{"_index":329,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["format",{"_index":2253,"title":{},"body":{"changelog.html":{}}}],["formatdata",{"_index":1218,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["formcontrol",{"_index":277,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["formsmodule",{"_index":1705,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["forroot",{"_index":21,"title":{},"body":{"modules/AnalyticsModule.html":{}}}],["forroot(options",{"_index":22,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["forwardcall",{"_index":373,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardcall(method",{"_index":383,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource",{"_index":387,"title":{"classes/ForwardingDataSource.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["forwardingdatasource:36",{"_index":392,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:40",{"_index":396,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:44",{"_index":393,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:48",{"_index":395,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:52",{"_index":391,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:56",{"_index":397,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:60",{"_index":400,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:64",{"_index":389,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:68",{"_index":394,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:72",{"_index":390,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:76",{"_index":399,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:80",{"_index":398,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:93",{"_index":388,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["found",{"_index":343,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GlobalsService.html":{},"components/TextSearchComponent.html":{}}}],["frame",{"_index":2161,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":1932,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["free",{"_index":2590,"title":{},"body":{"license.html":{}}}],["fromevent",{"_index":1213,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["fromevent(el",{"_index":1229,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["fs",{"_index":2480,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":676,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["fullscreen",{"_index":2317,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":2148,"title":{},"body":{"changelog.html":{}}}],["func",{"_index":946,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["function",{"_index":57,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["function('return",{"_index":951,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["functionality",{"_index":299,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GlobalsService.html":{},"components/TextSearchComponent.html":{}}}],["functionaliy",{"_index":1603,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":2527,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":2579,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":2609,"title":{},"body":{"license.html":{}}}],["further",{"_index":2313,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":2139,"title":{},"body":{"changelog.html":{}}}],["ga",{"_index":1217,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["ga.event('webpage",{"_index":1234,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["gatoken",{"_index":49,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["generate",{"_index":1953,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":1979,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":1961,"title":{},"body":{"changelog.html":{}}}],["get(key",{"_index":869,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["getaggregateresults",{"_index":227,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getaggregateresults(filter",{"_index":201,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getallowtelemetry",{"_index":1738,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["getcelltypetermoccurences",{"_index":228,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getcelltypetermoccurences(filter",{"_index":205,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getcelltypetreemodel",{"_index":194,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getconfig",{"_index":820,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getdata",{"_index":1638,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["getdatabasestatus",{"_index":183,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getdatasettechnologynames",{"_index":189,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getnormalizeddecorations",{"_index":563,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getobj",{"_index":897,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["getontologytermoccurences",{"_index":229,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getontologytermoccurences(filter",{"_index":203,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getontologytreemodel",{"_index":191,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getop",{"_index":652,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getop(range.end).removed.push(range",{"_index":655,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getop(range.start).added.push(range",{"_index":654,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getoption",{"_index":790,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getoption(...path",{"_index":803,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getoption(k1",{"_index":796,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getoptions",{"_index":1667,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["getoptions(search",{"_index":345,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["getpathkey",{"_index":791,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getpathkey(path",{"_index":808,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getproperty",{"_index":792,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getproperty(path",{"_index":810,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getprovidernames",{"_index":187,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getreferenceorgans",{"_index":196,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getreferenceorganscene",{"_index":230,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getreferenceorganscene(organiri",{"_index":210,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["gets",{"_index":871,"title":{},"body":{"injectables/GlobalsService.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{}}}],["getscene",{"_index":231,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getscene(filter",{"_index":207,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["gettelemetrystoragesetting",{"_index":1796,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":1928,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettissueblockresults",{"_index":232,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["gettissueblockresults(filter",{"_index":199,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getvalue",{"_index":1689,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["github",{"_index":2218,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":459,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/typealiases.html":{}}}],["gizmo",{"_index":2088,"title":{},"body":{"changelog.html":{}}}],["global",{"_index":852,"title":{},"body":{"injectables/GlobalsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["globalconfig",{"_index":181,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"changelog.html":{}}}],["globalconfig.config$.pipe",{"_index":415,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["globalconfig.getoption('hubmaptoken').subscribe(buster",{"_index":182,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["globalconfig.getoption('remoteapiendpoint').pipe",{"_index":218,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["globalconfigstate",{"_index":121,"title":{"injectables/GlobalConfigState.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["globalkey",{"_index":876,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{}}}],["globalsservice",{"_index":849,"title":{"injectables/GlobalsService.html":{}},"body":{"injectables/GlobalsService.html":{},"coverage.html":{}}}],["globalthis",{"_index":868,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["globalthis[k",{"_index":908,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["good",{"_index":2263,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":41,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"changelog.html":{},"dependencies.html":{}}}],["googleanalyticsservice",{"_index":1212,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["googleanalyticssyncservice",{"_index":8,"title":{"injectables/GoogleAnalyticsSyncService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["granted",{"_index":2589,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2637,"title":{},"body":{"modules.html":{}}}],["graphology",{"_index":2482,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":2050,"title":{},"body":{"changelog.html":{}}}],["gtex",{"_index":1954,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":2255,"title":{},"body":{"changelog.html":{}}}],["h1",{"_index":751,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["hack",{"_index":1546,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["hand",{"_index":2260,"title":{},"body":{"changelog.html":{}}}],["handles",{"_index":1066,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["happen",{"_index":2298,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":2238,"title":{},"body":{"changelog.html":{}}}],["happy",{"_index":1548,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["hard",{"_index":918,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["has(key",{"_index":880,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["hassex",{"_index":1354,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":1138,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["headerandcontent",{"_index":768,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["headerandcontent.splice(1).join('\\n\\n",{"_index":772,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["headerandcontent[0",{"_index":771,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["heart",{"_index":1396,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":1127,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["helmet",{"_index":2486,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":1359,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["here",{"_index":2258,"title":{},"body":{"changelog.html":{}}}],["hereby",{"_index":2588,"title":{},"body":{"license.html":{}}}],["hex",{"_index":2488,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":1336,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["hide",{"_index":1519,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["hiding",{"_index":1068,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["high",{"_index":165,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["highlight",{"_index":2026,"title":{},"body":{"changelog.html":{}}}],["highlights",{"_index":2027,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":2625,"title":{},"body":{"license.html":{}}}],["hooked",{"_index":2187,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":686,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["hostbinding",{"_index":272,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["hostbinding('class",{"_index":309,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["hostbindings",{"_index":569,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["hostlistener",{"_index":1265,"title":{},"body":{"directives/NumberDirective.html":{}}}],["hostlistener('input",{"_index":1264,"title":{},"body":{"directives/NumberDirective.html":{}}}],["hostlisteners",{"_index":1253,"title":{},"body":{"directives/NumberDirective.html":{}}}],["hovering",{"_index":2104,"title":{},"body":{"changelog.html":{}}}],["html",{"_index":308,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["htmlelement",{"_index":1216,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["http",{"_index":747,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["http://purl.obolibrary.org/obo/fma_24977",{"_index":1407,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/fma_24978",{"_index":1406,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/fma_54449",{"_index":1388,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/fma_7213",{"_index":1420,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/fma_7214",{"_index":1419,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000029",{"_index":1381,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000056",{"_index":1447,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000059",{"_index":1438,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000079",{"_index":1431,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000948",{"_index":1397,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000955",{"_index":1377,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000970",{"_index":1386,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000992",{"_index":1418,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000995",{"_index":1456,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001004",{"_index":1415,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001222",{"_index":1449,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001223",{"_index":1448,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001255",{"_index":1453,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001264",{"_index":1423,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001270",{"_index":1427,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001302",{"_index":1394,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001303",{"_index":1393,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001465",{"_index":1405,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002048",{"_index":1414,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002049",{"_index":1462,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002097",{"_index":1374,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002106",{"_index":1441,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002107",{"_index":1410,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002108",{"_index":1435,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002113",{"_index":1400,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002367",{"_index":1430,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002370",{"_index":1444,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002509",{"_index":1382,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0003889",{"_index":1392,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004537",{"_index":1461,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004538",{"_index":1401,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004539",{"_index":1402,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004548",{"_index":1387,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":738,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["httpclientmodule",{"_index":1058,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["https://beta",{"_index":2560,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":2565,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":2564,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":2567,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":2562,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":2355,"title":{},"body":{"changelog.html":{}}}],["https://www.youtube.com/iframe_api",{"_index":1109,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["hubmap",{"_index":2024,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["hubmaptoken",{"_index":92,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["i1[0",{"_index":659,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["i2",{"_index":658,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["i2[0",{"_index":660,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["icon",{"_index":982,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["icons",{"_index":1334,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["id",{"_index":263,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["idb",{"_index":2491,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":1684,"title":{},"body":{"components/TextSearchComponent.html":{},"coverage.html":{}}}],["iec",{"_index":2233,"title":{},"body":{"changelog.html":{}}}],["iframe",{"_index":1150,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["ignore",{"_index":915,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["ignored",{"_index":1196,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["igoogleanalyticscommand",{"_index":38,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["igoogleanalyticssettings",{"_index":960,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["image",{"_index":2226,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":2276,"title":{},"body":{"changelog.html":{}}}],["immutable",{"_index":822,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["immutablepatchvalue",{"_index":814,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["immutablestatevalue",{"_index":817,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["impl",{"_index":368,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["impl[method",{"_index":502,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["implementation",{"_index":2015,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":2185,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":2320,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":176,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["implied",{"_index":949,"title":{},"body":{"injectables/GlobalsService.html":{},"license.html":{}}}],["import",{"_index":33,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["important",{"_index":1335,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["imports",{"_index":72,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}}}],["improve",{"_index":1754,"title":{},"body":{"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["improved",{"_index":1971,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":1986,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":2051,"title":{},"body":{"changelog.html":{}}}],["in\\'}}opt",{"_index":1778,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["include",{"_index":1261,"title":{},"body":{"directives/NumberDirective.html":{},"changelog.html":{}}}],["included",{"_index":2613,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2365,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":2023,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["inclusive",{"_index":531,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["increase",{"_index":2211,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":2315,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":86,"title":{"index.html":{}},"body":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexing",{"_index":534,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["indiana",{"_index":2577,"title":{},"body":{"index.html":{}}}],["indicating",{"_index":538,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["indices",{"_index":2548,"title":{},"body":{"miscellaneous/functions.html":{}}}],["indicies",{"_index":529,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["individual",{"_index":2191,"title":{},"body":{"changelog.html":{}}}],["infix",{"_index":1695,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["info",{"_index":13,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["infobuttoncomponent",{"_index":695,"title":{"components/InfoButtonComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["infobuttonmodule",{"_index":1048,"title":{"modules/InfoButtonModule.html":{}},"body":{"modules/InfoButtonModule.html":{},"modules.html":{},"overview.html":{}}}],["infobuttonservice",{"_index":742,"title":{"injectables/InfoButtonService.html":{}},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"coverage.html":{}}}],["infodialogcomponent",{"_index":697,"title":{"components/InfoDialogComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["infodialogdata",{"_index":1081,"title":{"interfaces/InfoDialogData.html":{}},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"coverage.html":{}}}],["infodialogmodule",{"_index":1053,"title":{"modules/InfoDialogModule.html":{}},"body":{"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules.html":{},"overview.html":{}}}],["information",{"_index":981,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{},"index.html":{}}}],["infotitle",{"_index":991,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["infrastructure",{"_index":2279,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":2243,"title":{},"body":{"changelog.html":{}}}],["inherited",{"_index":386,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["init",{"_index":1093,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["initalvalue",{"_index":1266,"title":{},"body":{"directives/NumberDirective.html":{}}}],["initalvalue.replace(/[^0",{"_index":1268,"title":{},"body":{"directives/NumberDirective.html":{}}}],["initcommands",{"_index":2375,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["initcommands(options",{"_index":67,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["initial",{"_index":2120,"title":{},"body":{"changelog.html":{}}}],["initial_telemetry_setting",{"_index":1795,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialization",{"_index":1878,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["initialized",{"_index":1854,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["inject",{"_index":273,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["inject(default_max_options",{"_index":338,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["inject(document",{"_index":1244,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["inject(local_storage_consent_key",{"_index":1193,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["inject(mat_dialog_data",{"_index":1094,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["inject(mat_snack_bar_data",{"_index":1736,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["inject(ngx_google_analytics_settings_token",{"_index":971,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["inject(ngx_window",{"_index":970,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["injectable",{"_index":94,"title":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["injectables",{"_index":226,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"overview.html":{}}}],["injected",{"_index":1086,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["injectiontoken",{"_index":274,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/LocalStorageSyncService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('key",{"_index":1188,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":35,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/InjectorDelegateDataSourceService.html":{}}}],["injector.get(token",{"_index":1177,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["injectordelegatedatasourceservice",{"_index":1164,"title":{"injectables/InjectorDelegateDataSourceService.html":{}},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"coverage.html":{}}}],["innermap",{"_index":2386,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["innermap(project",{"_index":2542,"title":{},"body":{"miscellaneous/functions.html":{}}}],["input",{"_index":275,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["input[ccfnumbersonly",{"_index":714,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["inputs",{"_index":568,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["inside",{"_index":736,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["instance",{"_index":335,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["instead",{"_index":2114,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":2055,"title":{},"body":{"changelog.html":{}}}],["integer",{"_index":1251,"title":{},"body":{"directives/NumberDirective.html":{}}}],["integrated",{"_index":2149,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":2020,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":2242,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":2167,"title":{},"body":{"changelog.html":{}}}],["interact",{"_index":2133,"title":{},"body":{"changelog.html":{}}}],["interacting",{"_index":851,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["interactions",{"_index":2301,"title":{},"body":{"changelog.html":{}}}],["interactive",{"_index":1855,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["interactive(value",{"_index":1857,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["interest",{"_index":1563,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["interface",{"_index":48,"title":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":85,"title":{},"body":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":2225,"title":{},"body":{"changelog.html":{}}}],["intestine",{"_index":1433,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["invoked",{"_index":2546,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iobservablecacheconfig",{"_index":127,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["isdevmode",{"_index":402,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["isselected(organ",{"_index":1564,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["issue",{"_index":2206,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":2002,"title":{},"body":{"changelog.html":{}}}],["istanbul",{"_index":914,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["it's",{"_index":2018,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":1297,"title":{},"body":{"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["itemcontainer",{"_index":1479,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemcontainer.nativeelement.style.width",{"_index":1574,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemlist",{"_index":1477,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemlist.nativeelement.offsetwidth",{"_index":1568,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemlist.nativeelement.style.left",{"_index":1535,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["items",{"_index":1325,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["iu",{"_index":2333,"title":{},"body":{"changelog.html":{}}}],["javascript",{"_index":1965,"title":{},"body":{"changelog.html":{}}}],["json",{"_index":1659,"title":{},"body":{"components/StoreDebugComponent.html":{},"changelog.html":{}}}],["jsonld",{"_index":2494,"title":{},"body":{"dependencies.html":{}}}],["july",{"_index":2300,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":2341,"title":{},"body":{"changelog.html":{}}}],["justify",{"_index":1326,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["k",{"_index":384,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["k1",{"_index":797,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k2",{"_index":799,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k3",{"_index":801,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k4",{"_index":1609,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k5",{"_index":1610,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k6",{"_index":1611,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["key",{"_index":62,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["keyboard",{"_index":2339,"title":{},"body":{"changelog.html":{}}}],["keyof",{"_index":481,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["keys",{"_index":899,"title":{},"body":{"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/typealiases.html":{}}}],["keys.slice(0",{"_index":1615,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["keyval",{"_index":2492,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":1399,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":2617,"title":{},"body":{"license.html":{}}}],["knee",{"_index":1404,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["known",{"_index":2001,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":2236,"title":{},"body":{"changelog.html":{}}}],["kv[0",{"_index":1657,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["kv[1",{"_index":1658,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["kvlist",{"_index":1641,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["kvpair",{"_index":1643,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["l",{"_index":1385,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":264,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{}}}],["labs/data",{"_index":2451,"title":{},"body":{"dependencies.html":{}}}],["labs/data/decorators",{"_index":827,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["labs/data/repositories",{"_index":828,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["labs/data/typings",{"_index":829,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["landmarks",{"_index":2039,"title":{},"body":{"changelog.html":{}}}],["large",{"_index":1437,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["larger",{"_index":1959,"title":{},"body":{"changelog.html":{}}}],["last",{"_index":647,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["lastindex",{"_index":633,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["later",{"_index":573,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["latest",{"_index":321,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"index.html":{}}}],["launchinfodialog",{"_index":989,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["launchinfodialog(data",{"_index":1003,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["layers",{"_index":2442,"title":{},"body":{"dependencies.html":{}}}],["ld",{"_index":2252,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":2205,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":2034,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":1125,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["left/right",{"_index":2048,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":688,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["length",{"_index":536,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["level",{"_index":2337,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["levels",{"_index":2350,"title":{},"body":{"changelog.html":{}}}],["lhs",{"_index":1599,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["liability",{"_index":2629,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2626,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":1963,"title":{},"body":{"changelog.html":{}}}],["library",{"_index":2175,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":2583,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":2029,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":2598,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2284,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":945,"title":{},"body":{"injectables/GlobalsService.html":{},"components/InfoDialogComponent.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{}}}],["link",{"_index":2041,"title":{},"body":{"changelog.html":{}}}],["linkage",{"_index":2302,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":2101,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":1999,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":1484,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{},"changelog.html":{}}}],["listeners",{"_index":1631,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["listens",{"_index":1259,"title":{},"body":{"directives/NumberDirective.html":{}}}],["listlength",{"_index":1571,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["listlength}px",{"_index":1575,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["literal",{"_index":2510,"title":{},"body":{"dependencies.html":{}}}],["little",{"_index":2131,"title":{},"body":{"changelog.html":{}}}],["liver",{"_index":1409,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":1090,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["loadconsent",{"_index":1179,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["loaded",{"_index":2303,"title":{},"body":{"changelog.html":{}}}],["loaders.gl/core",{"_index":2445,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/draco",{"_index":2447,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":2448,"title":{},"body":{"dependencies.html":{}}}],["local",{"_index":45,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["local_storage_allow_telemetry_key",{"_index":1794,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["local_storage_consent_key",{"_index":1187,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localstorage",{"_index":1192,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["localstorage.getitem(local_storage_allow_telemetry_key",{"_index":1797,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["localstorage.setitem(local_storage_allow_telemetry_key",{"_index":1800,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["localstoragesyncservice",{"_index":9,"title":{"injectables/LocalStorageSyncService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["locate",{"_index":857,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["location",{"_index":2212,"title":{},"body":{"changelog.html":{}}}],["location.reload",{"_index":1807,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["locations",{"_index":861,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["lodash",{"_index":2496,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1752,"title":{},"body":{"components/TrackingPopupComponent.html":{},"index.html":{}}}],["logging",{"_index":1956,"title":{},"body":{"changelog.html":{}}}],["long",{"_index":887,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["longer",{"_index":2112,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":732,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"changelog.html":{}}}],["low",{"_index":164,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["lru",{"_index":2498,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":2449,"title":{},"body":{"dependencies.html":{}}}],["lung",{"_index":1412,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["lungs",{"_index":1413,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["lymph",{"_index":1380,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["made",{"_index":2235,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":2203,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":1547,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["makedecoratedsegment",{"_index":564,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["makedecoratedsegment(text",{"_index":593,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["makes",{"_index":1957,"title":{},"body":{"changelog.html":{}}}],["makeundecoratedsegment",{"_index":565,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["makeundecoratedsegment(text",{"_index":596,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["making",{"_index":2011,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":147,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["managed",{"_index":1637,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["manager",{"_index":380,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["manager.database",{"_index":423,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["manager.database.connect(config",{"_index":429,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["managers",{"_index":1969,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":114,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"modules/MousePositionTrackerModule.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["map(config",{"_index":1174,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["map(data",{"_index":224,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["map(entry",{"_index":662,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["map(formatdata",{"_index":1232,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["map(manager",{"_index":422,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["map(range",{"_index":678,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["map(token",{"_index":1176,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["map.ts",{"_index":2385,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapping",{"_index":2545,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maps",{"_index":2543,"title":{},"body":{"miscellaneous/functions.html":{}}}],["march",{"_index":2178,"title":{},"body":{"changelog.html":{}}}],["margin",{"_index":1128,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["margin.x",{"_index":1888,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["margin.y",{"_index":1891,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["markdown",{"_index":749,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"dependencies.html":{}}}],["markdowncontent",{"_index":745,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["markdowncontent.push",{"_index":770,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["markdownmodule",{"_index":1160,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["markdownmodule.forroot",{"_index":1163,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["markers",{"_index":1716,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["mat",{"_index":1122,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["mat_dialog_data",{"_index":1100,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["mat_snack_bar_data",{"_index":1740,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["matautocompletemodule",{"_index":1707,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["matbuttonmodule",{"_index":1784,"title":{},"body":{"modules/TrackingPopupModule.html":{}}}],["match",{"_index":1360,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["matching",{"_index":83,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":994,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["matdialogmodule",{"_index":1157,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["matdialogref",{"_index":1080,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["matexpansionmodule",{"_index":1158,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["matformfieldmodule",{"_index":1709,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["math.floor(carouselcontainer.nativeelement.offsetwidth",{"_index":1572,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["math.gl/core",{"_index":96,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"dependencies.html":{}}}],["math.log2((height",{"_index":1890,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["math.log2((width",{"_index":1887,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["math.min",{"_index":1886,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["maticonmodule",{"_index":1055,"title":{},"body":{"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{}}}],["matinputmodule",{"_index":1711,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["matprefix",{"_index":1702,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["matripplemodule",{"_index":1345,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["matrix4",{"_index":95,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["matrix4(node.transformmatrix",{"_index":172,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["matslidermodule",{"_index":1343,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["matsuffix",{"_index":1703,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["mattooltipmodule",{"_index":1586,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["max",{"_index":168,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/InfoDialogComponent.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["maxcachecount",{"_index":156,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":288,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["maxoptions",{"_index":318,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["maxrotationx",{"_index":1899,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["mc",{"_index":2332,"title":{},"body":{"changelog.html":{}}}],["member",{"_index":1747,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["memory",{"_index":2204,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":2261,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":2619,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2600,"title":{},"body":{"license.html":{}}}],["message",{"_index":1520,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["metadata",{"_index":557,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["method",{"_index":214,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["method(requestparams",{"_index":223,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["methods",{"_index":19,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["min",{"_index":166,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/InfoDialogComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["minmax",{"_index":107,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["minor",{"_index":1545,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["minrotationx",{"_index":1897,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["miscellaneous",{"_index":2526,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2584,"title":{},"body":{"license.html":{}}}],["mixed",{"_index":1549,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["mock",{"_index":2328,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":1023,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["mode",{"_index":427,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["model",{"_index":1101,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"dependencies.html":{}}}],["models",{"_index":1820,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["modify",{"_index":671,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"license.html":{}}}],["module",{"_index":0,"title":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":32,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["monorepo",{"_index":2552,"title":{},"body":{"index.html":{}}}],["more",{"_index":2257,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mount",{"_index":1872,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["mouseevent",{"_index":1220,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mousemove",{"_index":1235,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mousemove').pipe",{"_index":1230,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mousepositiontrackermodule",{"_index":1208,"title":{"modules/MousePositionTrackerModule.html":{}},"body":{"modules/MousePositionTrackerModule.html":{},"modules.html":{}}}],["moved",{"_index":2345,"title":{},"body":{"changelog.html":{}}}],["moves",{"_index":1498,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["much",{"_index":923,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["multi",{"_index":74,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["multiple",{"_index":1480,"title":{},"body":{"interfaces/OrganInfo.html":{},"index.html":{}}}],["multiselect",{"_index":1482,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["n3",{"_index":2500,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":27,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":2081,"title":{},"body":{"changelog.html":{}}}],["navigation",{"_index":2340,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":2182,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":2186,"title":{},"body":{"changelog.html":{}}}],["negative",{"_index":528,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["nested",{"_index":2540,"title":{},"body":{"miscellaneous/functions.html":{}}}],["network",{"_index":2575,"title":{},"body":{"index.html":{}}}],["new",{"_index":152,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["newopacity",{"_index":1307,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["next",{"_index":916,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["ng",{"_index":1120,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["ng5",{"_index":2502,"title":{},"body":{"dependencies.html":{}}}],["ngafterviewinit",{"_index":1510,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["ngmodule",{"_index":36,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}}}],["ngonchanges",{"_index":566,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["ngonchanges(changes",{"_index":599,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["ngondestroy",{"_index":446,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["ngoninit",{"_index":1078,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{}}}],["ngx",{"_index":40,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"dependencies.html":{}}}],["ngx_google_analytics_settings_token",{"_index":968,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["ngx_window",{"_index":969,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["ngxgoogleanalyticsmodule",{"_index":39,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["ngxgoogleanalyticsmodule.forroot",{"_index":80,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["ngxs",{"_index":826,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"dependencies.html":{}}}],["ngxs/logger",{"_index":2453,"title":{},"body":{"dependencies.html":{}}}],["ngxs/storage",{"_index":2456,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":831,"title":{},"body":{"injectables/GlobalConfigState.html":{},"components/StoreDebugComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"dependencies.html":{}}}],["ngxsimmutabledatarepository",{"_index":788,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["nih",{"_index":2580,"title":{},"body":{"index.html":{}}}],["node",{"_index":170,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":930,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["nodeclick",{"_index":1851,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodeclickevent",{"_index":1816,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodedrag",{"_index":1850,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodedragevent",{"_index":1817,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodehoverstart",{"_index":1852,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodehoverstop",{"_index":1853,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodejs",{"_index":1550,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["nodes",{"_index":1379,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["none",{"_index":1333,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["noninfringement",{"_index":2623,"title":{},"body":{"license.html":{}}}],["nonnullable",{"_index":875,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{}}}],["nonnullable[0",{"_index":128,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["normal",{"_index":1567,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["normalize",{"_index":614,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalize(range",{"_index":679,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["normalized",{"_index":591,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["normalizes",{"_index":533,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["note",{"_index":666,"title":{},"body":{"components/DecoratedTextComponent.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["notice",{"_index":2207,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":1960,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":64,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/functions.html":{}}}],["nulls.ts",{"_index":2380,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":163,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["numberdirective",{"_index":713,"title":{"directives/NumberDirective.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["numbers",{"_index":1262,"title":{},"body":{"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{}}}],["numbersonlymodule",{"_index":1271,"title":{"modules/NumbersOnlyModule.html":{}},"body":{"modules/NumbersOnlyModule.html":{},"modules.html":{},"overview.html":{}}}],["numeric",{"_index":2213,"title":{},"body":{"changelog.html":{}}}],["obj",{"_index":854,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/functions.html":{}}}],["obj[key",{"_index":909,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["object",{"_index":539,"title":{},"body":{"interfaces/DecoratedRange.html":{},"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["object.defineproperties(this",{"_index":904,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["object.entries(obj).reduce>((attrs",{"_index":61,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["object.entries(ops",{"_index":656,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["object.entries(this.root",{"_index":1645,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["object.entries(values",{"_index":1648,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["object.keys(config).length",{"_index":417,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["objects",{"_index":677,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["obs",{"_index":845,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["observable",{"_index":111,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"components/InfoButtonComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["observable).pipe",{"_index":332,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["observableinput",{"_index":281,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"components/TextSearchComponent.html":{}}}],["observedvalueof",{"_index":480,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["obtaining",{"_index":2593,"title":{},"body":{"license.html":{}}}],["occured",{"_index":1518,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["occurencedata",{"_index":1507,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["occurencedata(value",{"_index":1505,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["off/on",{"_index":2184,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":2299,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":2566,"title":{},"body":{"index.html":{}}}],["oldvalue",{"_index":1799,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["onchanges",{"_index":556,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["ondestroy",{"_index":457,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["ondialogbuttonclick",{"_index":990,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["one",{"_index":936,"title":{},"body":{"injectables/GlobalsService.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{},"index.html":{}}}],["oninit",{"_index":1071,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{}}}],["oninputchange",{"_index":1252,"title":{},"body":{"directives/NumberDirective.html":{}}}],["oninputchange(event",{"_index":1263,"title":{},"body":{"directives/NumberDirective.html":{}}}],["onleft",{"_index":1492,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["online",{"_index":2308,"title":{},"body":{"changelog.html":{}}}],["only.directive",{"_index":1276,"title":{},"body":{"modules/NumbersOnlyModule.html":{}}}],["only.directive.ts",{"_index":1249,"title":{},"body":{"directives/NumberDirective.html":{},"coverage.html":{}}}],["only.directive.ts:23",{"_index":1258,"title":{},"body":{"directives/NumberDirective.html":{}}}],["only.directive.ts:9",{"_index":1256,"title":{},"body":{"directives/NumberDirective.html":{}}}],["only.module.ts",{"_index":1275,"title":{},"body":{"modules/NumbersOnlyModule.html":{}}}],["only/numbers",{"_index":1248,"title":{},"body":{"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"coverage.html":{}}}],["onright",{"_index":1493,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["ontological",{"_index":2361,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":2254,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":1945,"title":{},"body":{"changelog.html":{}}}],["ontologyterms",{"_index":142,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["ontologytreemodel",{"_index":99,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["op",{"_index":606,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["op.index",{"_index":646,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["op.removed.includes(item",{"_index":665,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["opacities",{"_index":2190,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":700,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["opacitychange",{"_index":1291,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["opacityreset",{"_index":1292,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["opacityslidercomponent",{"_index":699,"title":{"components/OpacitySliderComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["opacityslidermodule",{"_index":1337,"title":{"modules/OpacitySliderModule.html":{}},"body":{"modules/OpacitySliderModule.html":{},"modules.html":{},"overview.html":{}}}],["openapi",{"_index":2013,"title":{},"body":{"changelog.html":{}}}],["openapi/angular",{"_index":109,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["opens",{"_index":1005,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["operation",{"_index":609,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["operations",{"_index":585,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["operator",{"_index":1592,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["operatorfunction",{"_index":1598,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["ops",{"_index":651,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["ops[index",{"_index":653,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["opt",{"_index":1731,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["optimization",{"_index":2130,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":2291,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":2166,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":326,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["optional",{"_index":29,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optioncache",{"_index":789,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["optiondisplay",{"_index":1668,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["optiondisplay(option",{"_index":1680,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["optionid",{"_index":1669,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["optionid(_index",{"_index":1682,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["options",{"_index":30,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.gatoken",{"_index":81,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["optionselected",{"_index":328,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["opts",{"_index":1607,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["ordered",{"_index":583,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["organ",{"_index":703,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["organ(s",{"_index":1554,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["organ.disabled",{"_index":1468,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["organinfo",{"_index":1347,"title":{"interfaces/OrganInfo.html":{}},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organiri",{"_index":212,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["organlist",{"_index":1485,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["organs",{"_index":1361,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["organs/anatomical",{"_index":2192,"title":{},"body":{"changelog.html":{}}}],["organschanged",{"_index":1489,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["organselectorcomponent",{"_index":702,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["organselectormodule",{"_index":1580,"title":{"modules/OrganSelectorModule.html":{}},"body":{"modules/OrganSelectorModule.html":{},"modules.html":{},"overview.html":{}}}],["orthographic",{"_index":2094,"title":{},"body":{"changelog.html":{}}}],["ot2od026671",{"_index":2582,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":907,"title":{},"body":{"injectables/GlobalsService.html":{},"interfaces/OrganInfo.html":{},"license.html":{}}}],["out",{"_index":12,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"license.html":{},"overview.html":{}}}],["outdated",{"_index":927,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["outline",{"_index":1694,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["output",{"_index":276,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["outputs",{"_index":1290,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["ovary",{"_index":1417,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["over",{"_index":2220,"title":{},"body":{"changelog.html":{}}}],["overlapping",{"_index":572,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["overlay",{"_index":1070,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["overlays",{"_index":2351,"title":{},"body":{"changelog.html":{}}}],["overridden",{"_index":858,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["overview",{"_index":2638,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":131,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["package",{"_index":1968,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["padding",{"_index":1034,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["pages",{"_index":2053,"title":{},"body":{"changelog.html":{}}}],["pair",{"_index":1642,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["paired",{"_index":1362,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["pairs",{"_index":1640,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["pancreas",{"_index":1422,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":2155,"title":{},"body":{"changelog.html":{}}}],["panel",{"_index":731,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["panelclass",{"_index":1022,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["panels",{"_index":761,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["param",{"_index":336,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":130,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["parent",{"_index":2046,"title":{},"body":{"changelog.html":{}}}],["parse",{"_index":759,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["parseint(itemlist.nativeelement.style.left",{"_index":1531,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["parseint(newopacity",{"_index":1319,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["parsemarkdown",{"_index":1060,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["parsemarkdown(data",{"_index":764,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["parser",{"_index":2462,"title":{},"body":{"dependencies.html":{}}}],["partial",{"_index":265,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{}}}],["partials",{"_index":675,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["particular",{"_index":2621,"title":{},"body":{"license.html":{}}}],["partly",{"_index":2177,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":2108,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":1525,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["patchconfig",{"_index":793,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["patchconfig(config",{"_index":813,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["path",{"_index":806,"title":{},"body":{"injectables/GlobalConfigState.html":{},"dependencies.html":{}}}],["path.length}:${path.join",{"_index":848,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["pelvis",{"_index":1426,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["performance",{"_index":1972,"title":{},"body":{"changelog.html":{}}}],["performs",{"_index":1875,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["permission",{"_index":2587,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2607,"title":{},"body":{"license.html":{}}}],["person",{"_index":2592,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2608,"title":{},"body":{"license.html":{}}}],["piece",{"_index":616,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["placeholder",{"_index":311,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["placement",{"_index":2256,"title":{},"body":{"changelog.html":{}}}],["places",{"_index":929,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["player",{"_index":1092,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"dependencies.html":{}}}],["pluck",{"_index":835,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["pluck(...(path",{"_index":846,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["pluck(...keys",{"_index":1617,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["pluck(...path",{"_index":841,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["pluckunique",{"_index":1591,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pluckunique(...props",{"_index":1612,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["pluckunique(k1",{"_index":1608,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["pluckuniqueoptions",{"_index":1588,"title":{"interfaces/PluckUniqueOptions.html":{}},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["plugin",{"_index":2454,"title":{},"body":{"dependencies.html":{}}}],["pointer",{"_index":1039,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["points",{"_index":1226,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["points.join('_",{"_index":1227,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["policy",{"_index":940,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["popup",{"_index":711,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["popup.component",{"_index":1786,"title":{},"body":{"modules/TrackingPopupModule.html":{}}}],["popup.component.html",{"_index":1721,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.scss",{"_index":1720,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts",{"_index":1719,"title":{},"body":{"components/TrackingPopupComponent.html":{},"coverage.html":{}}}],["popup.component.ts:13",{"_index":1728,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:15",{"_index":1739,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:19",{"_index":1727,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:22",{"_index":1737,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:26",{"_index":1729,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:31",{"_index":1734,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:36",{"_index":1732,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.module.ts",{"_index":1783,"title":{},"body":{"modules/TrackingPopupModule.html":{}}}],["popup/tracking",{"_index":1718,"title":{},"body":{"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"coverage.html":{}}}],["portal",{"_index":2025,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["portal's",{"_index":2283,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":2615,"title":{},"body":{"license.html":{}}}],["position",{"_index":1148,"title":{},"body":{"components/InfoDialogComponent.html":{},"modules/MousePositionTrackerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["positive",{"_index":541,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["possible",{"_index":2237,"title":{},"body":{"changelog.html":{}}}],["precedence",{"_index":575,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["preferences",{"_index":2078,"title":{},"body":{"changelog.html":{}}}],["prefix/suffix",{"_index":1715,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["preparation",{"_index":2334,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":2349,"title":{},"body":{"changelog.html":{}}}],["pretty",{"_index":922,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["prevent",{"_index":1941,"title":{},"body":{"changelog.html":{}}}],["prevents",{"_index":1524,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["preview",{"_index":2091,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":2197,"title":{},"body":{"changelog.html":{}}}],["previously",{"_index":2003,"title":{},"body":{"changelog.html":{}}}],["prevopacity",{"_index":1285,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["private",{"_index":178,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["process",{"_index":2319,"title":{},"body":{"changelog.html":{}}}],["processed",{"_index":2274,"title":{},"body":{"changelog.html":{}}}],["processing",{"_index":744,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"changelog.html":{}}}],["produces",{"_index":2547,"title":{},"body":{"miscellaneous/functions.html":{}}}],["production",{"_index":1981,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":1962,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":984,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["projectname",{"_index":52,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["projects",{"_index":2553,"title":{},"body":{"index.html":{}}}],["projects/.../analytics.module.ts",{"_index":2532,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../api",{"_index":2528,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../consent.service.ts",{"_index":2642,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../data",{"_index":2643,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../decorated",{"_index":2534,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../filter",{"_index":2529,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../flatten.ts",{"_index":2530,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../globals.service.ts",{"_index":2644,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../info",{"_index":2649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../inner",{"_index":2533,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../local",{"_index":2650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../mouse",{"_index":2536,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../organ",{"_index":2647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../pluck",{"_index":2535,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../public",{"_index":2651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../store",{"_index":2645,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../text",{"_index":2648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../tracking.state.ts",{"_index":2531,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/ccf",{"_index":16,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":346,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["properly",{"_index":1239,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["properties",{"_index":87,"title":{},"body":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["propertykey",{"_index":811,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["props",{"_index":1606,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["props[props.length",{"_index":1613,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["prostate",{"_index":1429,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["protected",{"_index":370,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["provide",{"_index":73,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/GlobalsService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":341,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":173,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":18,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{}}}],["providertoken",{"_index":1172,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["providing",{"_index":319,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["public",{"_index":1074,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["publish",{"_index":2601,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":1966,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":2622,"title":{},"body":{"license.html":{}}}],["push",{"_index":638,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["pushed",{"_index":2145,"title":{},"body":{"changelog.html":{}}}],["px",{"_index":1500,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["pxratio",{"_index":1884,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["python",{"_index":1964,"title":{},"body":{"changelog.html":{}}}],["qs",{"_index":2507,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":2287,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":2028,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":1368,"title":{},"body":{"interfaces/OrganInfo.html":{},"dependencies.html":{}}}],["query",{"_index":2359,"title":{},"body":{"changelog.html":{}}}],["quickly",{"_index":2267,"title":{},"body":{"changelog.html":{}}}],["r",{"_index":805,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["radius",{"_index":1032,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["range",{"_index":162,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["range.classes",{"_index":545,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["range.start",{"_index":682,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["range.styles",{"_index":546,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["range.ts",{"_index":519,"title":{},"body":{"interfaces/DecoratedRange.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["range[0",{"_index":167,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["range[1",{"_index":169,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["ranges",{"_index":555,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["rangetominmax",{"_index":161,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rangetominmax(range",{"_index":2537,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rawspatialscenenode",{"_index":108,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["rawvalue",{"_index":1201,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["rawvalue.trim().tolowercase",{"_index":1203,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["rc.1",{"_index":2293,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":2509,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":2457,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":2511,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":1706,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["read",{"_index":748,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/XYZTriplet.html":{}}}],["readable",{"_index":2513,"title":{},"body":{"dependencies.html":{}}}],["reading",{"_index":763,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["readmarkdown",{"_index":753,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["readonly",{"_index":179,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["reads",{"_index":1012,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["real",{"_index":2307,"title":{},"body":{"changelog.html":{}}}],["really",{"_index":917,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["recalculate",{"_index":602,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["receives",{"_index":320,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["record",{"_index":59,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/functions.html":{}}}],["recreatebodyui",{"_index":1922,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rectify",{"_index":2009,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":2135,"title":{},"body":{"changelog.html":{}}}],["reexport",{"_index":615,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"modules/TextSearchModule.html":{}}}],["reference",{"_index":996,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["refernced",{"_index":2045,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":1324,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["regions",{"_index":2352,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":2472,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":2004,"title":{},"body":{"changelog.html":{}}}],["registration",{"_index":2036,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["registrations",{"_index":2124,"title":{},"body":{"changelog.html":{}}}],["regular",{"_index":1551,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["related",{"_index":2170,"title":{},"body":{"changelog.html":{}}}],["relative",{"_index":1149,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["release",{"_index":1998,"title":{},"body":{"changelog.html":{}}}],["releaseproxy",{"_index":404,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["reliability",{"_index":2210,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":2087,"title":{},"body":{"changelog.html":{}}}],["remote",{"_index":405,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["remoteapiendpoint",{"_index":93,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["removable",{"_index":912,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["remove",{"_index":621,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["remove(key",{"_index":889,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["removed",{"_index":622,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["removes",{"_index":891,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["render",{"_index":1894,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rendering",{"_index":1869,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["replaced",{"_index":2549,"title":{},"body":{"miscellaneous/functions.html":{}}}],["replaysubject",{"_index":458,"title":{},"body":{"injectables/ConsentService.html":{}}}],["replaysubject(1",{"_index":456,"title":{},"body":{"injectables/ConsentService.html":{}}}],["repository",{"_index":2551,"title":{},"body":{"index.html":{}}}],["represents",{"_index":618,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["requestmethod",{"_index":129,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/typealiases.html":{}}}],["requestparams",{"_index":216,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["required",{"_index":1877,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["rescinded",{"_index":460,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/typealiases.html":{}}}],["reset",{"_index":11,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"overview.html":{}}}],["resetopacity",{"_index":1287,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["resets",{"_index":2109,"title":{},"body":{"changelog.html":{}}}],["resetting",{"_index":1302,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["resize",{"_index":1509,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resizesensor",{"_index":1366,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resizesensor(carouselcontainer.nativeelement",{"_index":1512,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resizing",{"_index":1503,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resolve",{"_index":537,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["resolved",{"_index":613,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["resolveindex",{"_index":2395,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["resolveindex(index",{"_index":542,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["resolveindex(range.end",{"_index":544,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["resolveindex(range.start",{"_index":543,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["resolves",{"_index":532,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["respond",{"_index":2106,"title":{},"body":{"changelog.html":{}}}],["responsetype",{"_index":755,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["responsively",{"_index":1576,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["rest",{"_index":499,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["restricting",{"_index":1250,"title":{},"body":{"directives/NumberDirective.html":{}}}],["restriction",{"_index":2597,"title":{},"body":{"license.html":{}}}],["result",{"_index":82,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.concat(range.classes",{"_index":683,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["results",{"_index":84,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":60,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":31,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["reviver",{"_index":215,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["reviver(data",{"_index":225,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["rgb",{"_index":2489,"title":{},"body":{"dependencies.html":{}}}],["rgba(0",{"_index":1766,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["rgba(255",{"_index":1757,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["rhs",{"_index":1600,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["right",{"_index":1132,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["rights",{"_index":2599,"title":{},"body":{"license.html":{}}}],["root",{"_index":174,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["rotates",{"_index":2089,"title":{},"body":{"changelog.html":{}}}],["rotation",{"_index":1828,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotation(value",{"_index":1830,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotationchange",{"_index":1849,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotationx",{"_index":1832,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotationx(value",{"_index":1834,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["round",{"_index":2195,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":2214,"title":{},"body":{"changelog.html":{}}}],["ru/common",{"_index":2427,"title":{},"body":{"dependencies.html":{}}}],["ru/common/typings",{"_index":824,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["rui",{"_index":1001,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["rui_locations.jsonld",{"_index":1955,"title":{},"body":{"changelog.html":{}}}],["running",{"_index":926,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["rxjs",{"_index":113,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/PluckUniqueOptions.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":118,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["s.unsubscribe",{"_index":1927,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["safe",{"_index":670,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["same",{"_index":290,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["sample",{"_index":2364,"title":{},"body":{"changelog.html":{}}}],["samples",{"_index":2137,"title":{},"body":{"changelog.html":{}}}],["saveconsent",{"_index":1180,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["saveconsent(value",{"_index":1184,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["saver",{"_index":2478,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":2324,"title":{},"body":{"changelog.html":{}}}],["scene",{"_index":1824,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["scene(nodes",{"_index":1826,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["scheduled",{"_index":2150,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":2326,"title":{},"body":{"changelog.html":{}}}],["schemes",{"_index":2288,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":2576,"title":{},"body":{"index.html":{}}}],["screen",{"_index":1069,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["scroll(dir",{"_index":1538,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["scrolled",{"_index":1528,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["scrolling",{"_index":1494,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["scrolls",{"_index":1523,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["search",{"_index":296,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["search'},{'name",{"_index":708,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["search.component",{"_index":1714,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["search.component.html",{"_index":302,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["search.component.scss",{"_index":304,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["search.component.ts",{"_index":256,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["search.component.ts:100",{"_index":1671,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:120",{"_index":1679,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:139",{"_index":1681,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:150",{"_index":1683,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:48",{"_index":1678,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:53",{"_index":1674,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:59",{"_index":1675,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:63",{"_index":1691,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:70",{"_index":1673,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:76",{"_index":1672,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:81",{"_index":1677,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:86",{"_index":1676,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:91",{"_index":1687,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:96",{"_index":1688,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.module.ts",{"_index":1704,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["search/text",{"_index":255,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["section",{"_index":2125,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":939,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["see",{"_index":2062,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["segment",{"_index":580,"title":{"interfaces/Segment.html":{}},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{}}}],["segment.text",{"_index":685,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["segments",{"_index":560,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["segments.push(this.makedecoratedsegment",{"_index":644,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["select",{"_index":2067,"title":{},"body":{"changelog.html":{}}}],["selected",{"_index":327,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["selectedorgan",{"_index":1560,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selectedorgans",{"_index":1487,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selecting",{"_index":1470,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["selections",{"_index":1481,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selector",{"_index":300,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["selector'},{'name",{"_index":704,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["selector.component",{"_index":1585,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["selector.component.html",{"_index":1472,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selector.component.scss",{"_index":1473,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selector.component.ts",{"_index":1350,"title":{},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector.module.ts",{"_index":1584,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["selector/organ",{"_index":1349,"title":{},"body":{"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectorgan(organ",{"_index":1555,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selects",{"_index":2342,"title":{},"body":{"changelog.html":{}}}],["selecttoken",{"_index":1167,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["selecttoken(config",{"_index":1169,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["self",{"_index":933,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["sell",{"_index":2605,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":2348,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":743,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["sennet",{"_index":1976,"title":{},"body":{"changelog.html":{}}}],["sensor",{"_index":1504,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["sent",{"_index":762,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["server",{"_index":2329,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":998,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["set",{"_index":69,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/ConsentService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["set(key",{"_index":892,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["setallowtelemetry",{"_index":1789,"title":{},"body":{"injectables/TrackingState.html":{}}}],["setallowtelemetry(allowtelemetry",{"_index":1790,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["setconfig",{"_index":794,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["setconfig(config",{"_index":816,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["setconsent",{"_index":447,"title":{},"body":{"injectables/ConsentService.html":{}}}],["setconsent(value",{"_index":452,"title":{},"body":{"injectables/ConsentService.html":{}}}],["setinterval",{"_index":1540,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["setleftright(val",{"_index":1579,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["sets",{"_index":894,"title":{},"body":{"injectables/GlobalsService.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{}}}],["settimeout",{"_index":1115,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["setting",{"_index":1281,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["settings",{"_index":942,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["setup",{"_index":1876,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["setupbodyui",{"_index":1895,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["setvalue(val",{"_index":1690,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["setwidth",{"_index":1577,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["sex",{"_index":144,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["sexes",{"_index":1357,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["shadow",{"_index":1762,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["shall",{"_index":2612,"title":{},"body":{"license.html":{}}}],["shared",{"_index":2082,"title":{},"body":{"changelog.html":{}}}],["shared/analytics",{"_index":1742,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["shared/analytics/src/lib/analytics.module.ts",{"_index":17,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["shared/analytics/src/lib/analytics.module.ts:68",{"_index":25,"title":{},"body":{"modules/AnalyticsModule.html":{}}}],["shared/analytics/src/lib/consent.service.ts",{"_index":443,"title":{},"body":{"injectables/ConsentService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["shared/analytics/src/lib/consent.service.ts:10",{"_index":455,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:12",{"_index":449,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:18",{"_index":450,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:22",{"_index":453,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:29",{"_index":454,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/google",{"_index":955,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"coverage.html":{}}}],["shared/analytics/src/lib/local",{"_index":1178,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/rxjs",{"_index":833,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/analytics/mouse",{"_index":1209,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["shared/src/lib/analytics/tracking.state.ts",{"_index":1788,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/analytics/tracking.state.ts:29",{"_index":1792,"title":{},"body":{"injectables/TrackingState.html":{}}}],["shared/src/lib/components/body",{"_index":354,"title":{},"body":{"modules/BodyUiModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["shared/src/lib/components/decorated",{"_index":518,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["shared/src/lib/components/info/info",{"_index":724,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/components/opacity",{"_index":1277,"title":{},"body":{"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"coverage.html":{}}}],["shared/src/lib/components/organ",{"_index":1348,"title":{},"body":{"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/components/store",{"_index":1619,"title":{},"body":{"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["shared/src/lib/components/text",{"_index":254,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/components/tracking",{"_index":1717,"title":{},"body":{"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"coverage.html":{}}}],["shared/src/lib/config/global",{"_index":786,"title":{},"body":{"injectables/GlobalConfigState.html":{},"coverage.html":{}}}],["shared/src/lib/directives/numbers",{"_index":1247,"title":{},"body":{"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"coverage.html":{}}}],["shared/src/lib/services/data",{"_index":89,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/services/globals/globals.service.ts",{"_index":850,"title":{},"body":{"injectables/GlobalsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:109",{"_index":855,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:22",{"_index":898,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:45",{"_index":881,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:58",{"_index":870,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:59",{"_index":874,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:60",{"_index":877,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:61",{"_index":878,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:63",{"_index":879,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:76",{"_index":893,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:77",{"_index":895,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:79",{"_index":896,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:93",{"_index":890,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["sharereplay",{"_index":410,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["sharereplay(1",{"_index":424,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["shifing",{"_index":639,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["shift",{"_index":1499,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["shift(dir",{"_index":1529,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["shortest",{"_index":2484,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":260,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["showbutton",{"_index":1723,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["showbutton(button",{"_index":1730,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["showing",{"_index":2273,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":2282,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":2031,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":1355,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["sides",{"_index":2247,"title":{},"body":{"changelog.html":{}}}],["signal",{"_index":1311,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["significant",{"_index":2111,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":1622,"title":{},"body":{"components/StoreDebugComponent.html":{},"changelog.html":{}}}],["simplechanges",{"_index":600,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["simplifies",{"_index":2119,"title":{},"body":{"changelog.html":{}}}],["simultaneously",{"_index":317,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["single",{"_index":258,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["sites",{"_index":2038,"title":{},"body":{"changelog.html":{}}}],["sizable",{"_index":2208,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":1043,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{}}}],["skin",{"_index":1373,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["slider",{"_index":1280,"title":{},"body":{"components/OpacitySliderComponent.html":{},"dependencies.html":{}}}],["slider'},{'name",{"_index":701,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["slider.component",{"_index":1342,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["slider.component.html",{"_index":1284,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.scss",{"_index":1283,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts",{"_index":1279,"title":{},"body":{"components/OpacitySliderComponent.html":{},"coverage.html":{}}}],["slider.component.ts:17",{"_index":1304,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:22",{"_index":1295,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:27",{"_index":1296,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:32",{"_index":1298,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:37",{"_index":1303,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:42",{"_index":1300,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:44",{"_index":1315,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:46",{"_index":1308,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:54",{"_index":1309,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:63",{"_index":1306,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:71",{"_index":1312,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:82",{"_index":1310,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.module.ts",{"_index":1341,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["slider/opacity",{"_index":1278,"title":{},"body":{"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"coverage.html":{}}}],["slightly",{"_index":2007,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":2132,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":1434,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["smaller",{"_index":1566,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["software",{"_index":2555,"title":{},"body":{"index.html":{},"license.html":{}}}],["solved",{"_index":2202,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":2265,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":1970,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":2128,"title":{},"body":{"changelog.html":{}}}],["sort",{"_index":661,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["sort((a",{"_index":1463,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["sort((i1",{"_index":657,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["source",{"_index":14,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["source.pipe",{"_index":1616,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["source.service.ts",{"_index":505,"title":{},"body":{"injectables/DataSourceService.html":{},"coverage.html":{}}}],["source.service.ts:12",{"_index":509,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:13",{"_index":513,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:14",{"_index":510,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:15",{"_index":512,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:16",{"_index":508,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:17",{"_index":514,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:19",{"_index":517,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:20",{"_index":506,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:21",{"_index":511,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:22",{"_index":507,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:23",{"_index":516,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:24",{"_index":515,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.ts",{"_index":467,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["source.ts:10",{"_index":475,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:11",{"_index":472,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:12",{"_index":474,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:13",{"_index":470,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:14",{"_index":476,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:16",{"_index":479,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:17",{"_index":468,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:18",{"_index":473,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:19",{"_index":469,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:20",{"_index":478,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:21",{"_index":477,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:36",{"_index":777,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:40",{"_index":781,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:44",{"_index":778,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:48",{"_index":780,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:52",{"_index":776,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:56",{"_index":782,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:60",{"_index":785,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:64",{"_index":774,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:68",{"_index":779,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:72",{"_index":775,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:76",{"_index":784,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:80",{"_index":783,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:84",{"_index":773,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:9",{"_index":471,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:91",{"_index":722,"title":{},"body":{"classes/DelegateDataSource.html":{}}}],["source/api",{"_index":90,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["source/ccf",{"_index":364,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["source/data",{"_index":466,"title":{},"body":{"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["source/injector",{"_index":1165,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"coverage.html":{}}}],["sources",{"_index":2072,"title":{},"body":{"changelog.html":{}}}],["space",{"_index":1327,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["sparc",{"_index":2123,"title":{},"body":{"changelog.html":{}}}],["spatialentity",{"_index":100,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["spatialscenenode",{"_index":101,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["spatialscenenodereviver",{"_index":209,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spatialscenenodereviver(nodes",{"_index":2538,"title":{},"body":{"miscellaneous/functions.html":{}}}],["spec",{"_index":2014,"title":{},"body":{"changelog.html":{}}}],["specific",{"_index":884,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["specified",{"_index":520,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["speed",{"_index":2209,"title":{},"body":{"changelog.html":{}}}],["spinning",{"_index":2327,"title":{},"body":{"changelog.html":{}}}],["spleen",{"_index":1440,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["split",{"_index":750,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["split.length",{"_index":767,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["split.split('\\n\\n",{"_index":769,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["splitbyheadertag",{"_index":765,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["sprint",{"_index":2153,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":1356,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":584,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stackop",{"_index":587,"title":{"interfaces/StackOp.html":{}},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{}}}],["stackops",{"_index":631,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stackops.shift",{"_index":642,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stackops[0].index",{"_index":640,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stage",{"_index":1821,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["staging",{"_index":1982,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["standalone",{"_index":2198,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":2251,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":2331,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":2558,"title":{},"body":{"index.html":{}}}],["start",{"_index":525,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["started",{"_index":1929,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["starts",{"_index":635,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["startup",{"_index":2118,"title":{},"body":{"changelog.html":{}}}],["startwith",{"_index":283,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["state",{"_index":830,"title":{},"body":{"injectables/GlobalConfigState.html":{},"components/StoreDebugComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["state[0",{"_index":1656,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["statement",{"_index":669,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["statements",{"_index":2373,"title":{},"body":{"coverage.html":{}}}],["staterepository",{"_index":825,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["states",{"_index":1644,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["states.map(([key",{"_index":1647,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["stateswithdata",{"_index":1649,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["statevalues",{"_index":1646,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["statevalues.filter(([_key",{"_index":1650,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["static",{"_index":20,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/OrganInfo.html":{}}}],["stay",{"_index":2370,"title":{},"body":{"changelog.html":{}}}],["step",{"_index":1501,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["still",{"_index":2140,"title":{},"body":{"changelog.html":{}}}],["stops",{"_index":1543,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["stopscroll",{"_index":1544,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["storage",{"_index":46,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":706,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["store.subscribe(root",{"_index":1652,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["stored",{"_index":1190,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["storedebugcomponent",{"_index":705,"title":{"components/StoreDebugComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["storedebugmodule",{"_index":1661,"title":{"modules/StoreDebugModule.html":{}},"body":{"modules/StoreDebugModule.html":{},"modules.html":{},"overview.html":{}}}],["stories",{"_index":2322,"title":{},"body":{"changelog.html":{}}}],["stream",{"_index":2514,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["streaming",{"_index":2512,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":50,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":727,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["structures",{"_index":2156,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":522,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":303,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["styling",{"_index":266,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["sub",{"_index":1047,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/StoreDebugComponent.html":{}}}],["subclass",{"_index":859,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["subject",{"_index":112,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/InfoButtonService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["sublicense",{"_index":2603,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1724,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["submit(entry",{"_index":1733,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["subscribe((data",{"_index":756,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["subscription",{"_index":966,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["subscriptions",{"_index":957,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["substantial",{"_index":2614,"title":{},"body":{"license.html":{}}}],["subtitle",{"_index":1135,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["suffix",{"_index":1696,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["suggestion",{"_index":259,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["suggestions",{"_index":289,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":412,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["support",{"_index":1938,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":1353,"title":{},"body":{"interfaces/OrganInfo.html":{},"modules.html":{}}}],["swiper",{"_index":2518,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":1204,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["switched",{"_index":2217,"title":{},"body":{"changelog.html":{}}}],["switchmap",{"_index":115,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["switchmap(config",{"_index":419,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["switchmap(impl",{"_index":501,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["switchmap(this.getoptions",{"_index":333,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["symbol",{"_index":900,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{}}}],["sync",{"_index":2090,"title":{},"body":{"changelog.html":{}}}],["sync.service",{"_index":44,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["sync.service.ts",{"_index":956,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sync.service.ts:10",{"_index":967,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:11",{"_index":961,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:15",{"_index":1186,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:16",{"_index":1181,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:25",{"_index":962,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:29",{"_index":964,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:32",{"_index":1183,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:36",{"_index":1182,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:52",{"_index":1185,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["t",{"_index":133,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":2426,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":1996,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2425,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1106,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["tag.src",{"_index":1108,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["tagging",{"_index":2249,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":752,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["take",{"_index":116,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["take(1",{"_index":219,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["takes",{"_index":574,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["tap",{"_index":117,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["tap(endpoint",{"_index":220,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["target",{"_index":1839,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["target(value",{"_index":1841,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["technologies",{"_index":148,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{}}}],["technology",{"_index":2188,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":1804,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"changelog.html":{}}}],["temp",{"_index":1321,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["template",{"_index":549,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["templateurl",{"_index":301,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["test",{"_index":919,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["testing",{"_index":867,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["tests",{"_index":882,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["text",{"_index":295,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{}}}],["text'},{'name",{"_index":694,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["text.component",{"_index":721,"title":{},"body":{"modules/DecoratedTextModule.html":{}}}],["text.component.html",{"_index":559,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text.component.scss",{"_index":558,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text.component.ts",{"_index":552,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{}}}],["text.component.ts:124",{"_index":582,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:145",{"_index":607,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:158",{"_index":588,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:173",{"_index":597,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:184",{"_index":594,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:41",{"_index":577,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:46",{"_index":576,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:52",{"_index":570,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:57",{"_index":611,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:64",{"_index":601,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:76",{"_index":578,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.length",{"_index":650,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text.module",{"_index":1713,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["text.module.ts",{"_index":720,"title":{},"body":{"modules/DecoratedTextModule.html":{}}}],["text.slice(lastindex",{"_index":645,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text/decorated",{"_index":286,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["textsearchcomponent",{"_index":307,"title":{"components/TextSearchComponent.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["textsearchmodule",{"_index":1697,"title":{"modules/TextSearchModule.html":{}},"body":{"modules/TextSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["theme",{"_index":1977,"title":{},"body":{"changelog.html":{}}}],["themes",{"_index":1975,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":1973,"title":{},"body":{"changelog.html":{}}}],["thick",{"_index":1458,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["this._bounds",{"_index":1843,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._camera",{"_index":1847,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._interactive",{"_index":1856,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._occurencedata",{"_index":1506,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this._rotation",{"_index":1829,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._rotationx",{"_index":1833,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._scene",{"_index":1825,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._target",{"_index":1840,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._zoom",{"_index":1836,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.api.aggregateresults(params",{"_index":202,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.celltypetermoccurences(params",{"_index":206,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.celltypetreemodel(params",{"_index":195,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.dbstatus(params",{"_index":185,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.ontologytermoccurences(params",{"_index":204,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.ontologytreemodel(params",{"_index":193,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.providernames(params",{"_index":188,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.referenceorgans(params",{"_index":197,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.referenceorganscene(params",{"_index":211,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.scene(params",{"_index":208,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.technologynames(params",{"_index":190,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.tissueblocks(params",{"_index":200,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.bodycanvas",{"_index":1882,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodycanvas.nativeelement",{"_index":1883,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui",{"_index":1858,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.finalize",{"_index":1924,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodeclick$.subscribe((event",{"_index":1915,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodedrag$.subscribe((event",{"_index":1913,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodehoverstart$.subscribe((event",{"_index":1917,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodehoverstop$.subscribe((event",{"_index":1919,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.scenerotation$.subscribe((rotation",{"_index":1911,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.setscene(this.scene",{"_index":1907,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setrotation(value",{"_index":1831,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setrotationx(value",{"_index":1835,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setscene(nodes",{"_index":1827,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.settarget(value",{"_index":1842,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setzoom(value",{"_index":1838,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bounds",{"_index":1908,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.camera",{"_index":1901,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.clearsubscriptions",{"_index":1923,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.config$.pipe",{"_index":840,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.connectdatabase(manager",{"_index":421,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.consent",{"_index":463,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.complete",{"_index":462,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.next(this.consent",{"_index":461,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.next(value",{"_index":464,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentservice.consent",{"_index":1743,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.consentservice.setconsent(entry",{"_index":1750,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.container",{"_index":1744,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.controller.setvalue(val",{"_index":314,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.controller.value",{"_index":312,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.controller.valuechanges",{"_index":331,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.createdatabase(config",{"_index":420,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.createsegments",{"_index":624,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.createstackops(decorations",{"_index":632,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.createworker(config",{"_index":436,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.ctx.patchstate",{"_index":1802,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["this.data.preclose",{"_index":1749,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.database",{"_index":414,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.defaultmaxoptions",{"_index":347,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.dialog.open(infodialogcomponent",{"_index":1020,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.dialogref.close",{"_index":1116,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.dismiss",{"_index":1751,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.displayerrors",{"_index":1521,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.documentationcontents",{"_index":1102,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.dorequest",{"_index":192,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.dorequest(params",{"_index":184,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.el.nativeelement.value",{"_index":1267,"title":{},"body":{"directives/NumberDirective.html":{}}}],["this.findglobalobject",{"_index":903,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["this.forwardcall('getaggregateresults",{"_index":493,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getcelltypetermoccurences",{"_index":495,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getcelltypetreemodel",{"_index":490,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getdatabasestatus",{"_index":486,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getdatasettechnologynames",{"_index":488,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getontologytermoccurences",{"_index":494,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getontologytreemodel",{"_index":489,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getprovidernames",{"_index":487,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getreferenceorgans",{"_index":491,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getreferenceorganscene",{"_index":497,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getscene",{"_index":496,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('gettissueblockresults",{"_index":492,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.getnormalizeddecorations",{"_index":628,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.getpathkey(path",{"_index":842,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.http.get(documentationurl",{"_index":754,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["this.impl",{"_index":413,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.impl$.pipe",{"_index":500,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.infobuttonservice.readmarkdown",{"_index":1029,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.infotitle",{"_index":1027,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.initialized.emit",{"_index":1921,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.interactive",{"_index":1900,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.launchinfodialog(data",{"_index":1019,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.makeundecoratedsegment(text",{"_index":627,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.markdowncontent.next(markdowncontent",{"_index":758,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["this.multiselect",{"_index":1556,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.nodeclick.emit(event",{"_index":1916,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.nodedrag.emit(event",{"_index":1914,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.nodehoverstart.emit(event",{"_index":1918,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.nodehoverstop.emit(event",{"_index":1920,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.onleft",{"_index":1532,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.onright",{"_index":1533,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.opacity",{"_index":1318,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.opacitychange.emit(this.opacity",{"_index":1320,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.opacityreset.emit",{"_index":1323,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.optioncache.get(key",{"_index":844,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.optioncache.has(key",{"_index":843,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.optioncache.set(key",{"_index":847,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.organlist.length",{"_index":1569,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.organschanged.emit(this.selectedorgans",{"_index":1562,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.parsemarkdown(data",{"_index":757,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["this.patchstate(config",{"_index":839,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.prevopacity",{"_index":1317,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.recreatebodyui",{"_index":1859,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.root",{"_index":1653,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["this.rotationchange.next(rotation",{"_index":1912,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.saveconsent(consent",{"_index":1200,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.scene?.length",{"_index":1906,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.segments",{"_index":623,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.selectedorgans",{"_index":1557,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.concat([organ",{"_index":1561,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.filter((selectedorgan",{"_index":1559,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.includes(organ",{"_index":1558,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.length",{"_index":1522,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selecttoken(config",{"_index":1175,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["this.sensor",{"_index":1511,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.sensor.detach",{"_index":1515,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.set",{"_index":1513,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.setconsent('not",{"_index":465,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.setleftright(val",{"_index":1536,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.setstate(config",{"_index":838,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.setupbodyui",{"_index":1879,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.shift(dir",{"_index":1541,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.state$.pipe(filternulls",{"_index":837,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.step",{"_index":1534,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.storage",{"_index":1194,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.storage?.getitem?.(this.key",{"_index":1202,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.storage?.setitem?.(this.key",{"_index":1207,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.subscriptions",{"_index":1910,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.subscriptions.add",{"_index":1198,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.subscriptions.add(consentservice.consentchange.subscribe",{"_index":974,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.subscriptions.add(infobuttonservice.markdowncontent.subscribe(data",{"_index":1017,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.subscriptions.add(sub",{"_index":1655,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["this.subscriptions.foreach(s",{"_index":1926,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.subscriptions.unsubscribe",{"_index":976,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"components/StoreDebugComponent.html":{}}}],["this.timeouthandler",{"_index":1539,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.togglegoogleanalytics(consent",{"_index":975,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.token",{"_index":973,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.updatestack(stack",{"_index":641,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.valuechange",{"_index":339,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.videoid",{"_index":1028,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.visibilitytoggle.emit",{"_index":1322,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.visible",{"_index":1316,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.window",{"_index":977,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.window[`ga",{"_index":978,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.zoom",{"_index":1893,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.zoomtobounds(this.bounds",{"_index":1909,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.zoomtobounds(value",{"_index":1845,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["throttletime",{"_index":1214,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["throttletime(1000",{"_index":1231,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["through",{"_index":2266,"title":{},"body":{"changelog.html":{}}}],["throws",{"_index":910,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["thumbnails",{"_index":2165,"title":{},"body":{"changelog.html":{}}}],["thymus",{"_index":1443,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["tied",{"_index":2168,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":2275,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":291,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["timeouthandler",{"_index":1496,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["timeouts",{"_index":1942,"title":{},"body":{"changelog.html":{}}}],["tissue",{"_index":1950,"title":{},"body":{"changelog.html":{}}}],["tissueblockresult",{"_index":102,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["tissues",{"_index":2005,"title":{},"body":{"changelog.html":{}}}],["title",{"_index":735,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["tmc",{"_index":2360,"title":{},"body":{"changelog.html":{}}}],["toattributes",{"_index":71,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["toattributes(obj",{"_index":58,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["toggle",{"_index":1313,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["togglegoogleanalytics",{"_index":958,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["togglegoogleanalytics(disabled",{"_index":963,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["togglevisibility",{"_index":1288,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["token",{"_index":136,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":2199,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":1136,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["tort",{"_index":2632,"title":{},"body":{"license.html":{}}}],["tracker.module.ts",{"_index":1210,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tracking",{"_index":710,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["tracking/telemetry",{"_index":2100,"title":{},"body":{"changelog.html":{}}}],["trackingcode",{"_index":972,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["trackingpopupcomponent",{"_index":709,"title":{"components/TrackingPopupComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"coverage.html":{},"overview.html":{}}}],["trackingpopupmodule",{"_index":1779,"title":{"modules/TrackingPopupModule.html":{}},"body":{"modules/TrackingPopupModule.html":{},"modules.html":{},"overview.html":{}}}],["trackingstate",{"_index":1787,"title":{"injectables/TrackingState.html":{}},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{}}}],["trackingstatemodel",{"_index":1793,"title":{"interfaces/TrackingStateModel.html":{}},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{}}}],["trackmouseposition",{"_index":2390,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["trackmouseposition((document",{"_index":1245,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["trackmouseposition(el",{"_index":1215,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["transformmatrix",{"_index":171,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["transition",{"_index":1036,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["transparency",{"_index":2200,"title":{},"body":{"changelog.html":{}}}],["travisci",{"_index":2221,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":551,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["true",{"_index":75,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GlobalsService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":935,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{},"changelog.html":{}}}],["ts",{"_index":120,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"dependencies.html":{}}}],["tslib",{"_index":2521,"title":{},"body":{"dependencies.html":{}}}],["tube",{"_index":1390,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["tuned",{"_index":2371,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":674,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["turned",{"_index":2171,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":2169,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":2069,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":2286,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":28,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2640,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":1238,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["typeerror",{"_index":911,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["typeof",{"_index":901,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/PluckUniqueOptions.html":{}}}],["types",{"_index":1243,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["types/lru",{"_index":2458,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":947,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["typing",{"_index":2338,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":1552,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["u",{"_index":134,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["uberon",{"_index":1358,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["ufl",{"_index":2164,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":1818,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["ui'},{'name",{"_index":693,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["ui.component",{"_index":362,"title":{},"body":{"modules/BodyUiModule.html":{}}}],["ui.component.html",{"_index":1822,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["ui.component.scss",{"_index":1823,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["ui.component.ts",{"_index":1812,"title":{},"body":{"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["ui.module.ts",{"_index":356,"title":{},"body":{"modules/BodyUiModule.html":{}}}],["ui.netlify.app",{"_index":2561,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":2571,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":2568,"title":{},"body":{"index.html":{}}}],["ui/body",{"_index":355,"title":{},"body":{"modules/BodyUiModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["ui/organ",{"_index":2570,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":2569,"title":{},"body":{"index.html":{}}}],["ul",{"_index":1141,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["undefined",{"_index":77,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/OrganInfo.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1189,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["understand",{"_index":1755,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["unique",{"_index":267,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["unique.ts",{"_index":1590,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["university",{"_index":2578,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":160,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["unless",{"_index":925,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["unnecessary",{"_index":2086,"title":{},"body":{"changelog.html":{}}}],["unsafe",{"_index":1746,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["unselect",{"_index":2134,"title":{},"body":{"changelog.html":{}}}],["unsetconsent",{"_index":448,"title":{},"body":{"injectables/ConsentService.html":{}}}],["unsubscribable",{"_index":408,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["unsubscribe",{"_index":432,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/InfoButtonComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["until",{"_index":2173,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":1686,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["up",{"_index":1630,"title":{},"body":{"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["update",{"_index":2079,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":1299,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["updates",{"_index":1260,"title":{},"body":{"directives/NumberDirective.html":{},"changelog.html":{}}}],["updatestack",{"_index":567,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["updatestack(stack",{"_index":605,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["upgraded",{"_index":2271,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":2343,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":2105,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":2196,"title":{},"body":{"changelog.html":{}}}],["ureter",{"_index":1446,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["urinary",{"_index":1451,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":1352,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["usage",{"_index":1753,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["use",{"_index":2066,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["used",{"_index":540,"title":{},"body":{"interfaces/DecoratedRange.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["usefactory",{"_index":76,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["useful",{"_index":865,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["user",{"_index":1933,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["user/os",{"_index":2077,"title":{},"body":{"changelog.html":{}}}],["users",{"_index":2354,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":2093,"title":{},"body":{"changelog.html":{}}}],["using",{"_index":409,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["uterus",{"_index":1455,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["utilities",{"_index":2083,"title":{},"body":{"changelog.html":{}}}],["utility",{"_index":158,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["uuid",{"_index":2522,"title":{},"body":{"dependencies.html":{}}}],["v1.1",{"_index":1997,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":2183,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":2000,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":1990,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":1946,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":1530,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{}}}],["valid",{"_index":590,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["value",{"_index":63,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/ConsentService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value(val",{"_index":313,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["value.tolowercase",{"_index":1798,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["valuechange",{"_index":325,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["values",{"_index":70,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/DecoratedTextComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/functions.html":{}}}],["values.length",{"_index":1651,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["var",{"_index":691,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["variable",{"_index":1144,"title":{},"body":{"components/InfoDialogComponent.html":{},"coverage.html":{}}}],["variables",{"_index":2646,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vasculature",{"_index":1460,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":2016,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["vertical",{"_index":1045,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["very",{"_index":2262,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":1940,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":1147,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["videoid",{"_index":992,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["view",{"_index":2092,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":1365,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["viewchild('bodycanvas",{"_index":1873,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["viewchild('carouselcontainer",{"_index":1474,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewchild('itemcontainer",{"_index":1478,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewchild('itemlist",{"_index":1476,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewed",{"_index":1471,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewer",{"_index":2158,"title":{},"body":{"changelog.html":{}}}],["views",{"_index":2095,"title":{},"body":{"changelog.html":{}}}],["visibility",{"_index":1314,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["visibilitytoggle",{"_index":1293,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["visible",{"_index":1289,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["visual",{"_index":2367,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":2126,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":2272,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":451,"title":{},"body":{"injectables/ConsentService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["vs",{"_index":2065,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":2366,"title":{},"body":{"changelog.html":{}}}],["warming",{"_index":1939,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":2296,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":2618,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2616,"title":{},"body":{"license.html":{}}}],["web",{"_index":934,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["webcomponent",{"_index":2064,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":2460,"title":{},"body":{"dependencies.html":{}}}],["webpages",{"_index":2022,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":2556,"title":{},"body":{"index.html":{}}}],["week",{"_index":2372,"title":{},"body":{"changelog.html":{}}}],["weight",{"_index":1139,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["well",{"_index":1604,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["whether",{"_index":883,"title":{},"body":{"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"license.html":{}}}],["whole",{"_index":2369,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":1025,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["window",{"_index":931,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/XYZTriplet.html":{}}}],["window.devicepixelratio",{"_index":1885,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["within",{"_index":2162,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":598,"title":{},"body":{"components/DecoratedTextComponent.html":{},"changelog.html":{},"license.html":{}}}],["worker",{"_index":435,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/GlobalsService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["worker.terminate",{"_index":439,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["workerccfdatabasedatasourceservice",{"_index":433,"title":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["workflows",{"_index":2223,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":2008,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":2241,"title":{},"body":{"changelog.html":{}}}],["wrap",{"_index":406,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["wrap(worker",{"_index":437,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["wrapper",{"_index":1030,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["writable",{"_index":906,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["x",{"_index":1813,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["xyztriplet",{"_index":1811,"title":{"interfaces/XYZTriplet.html":{}},"body":{"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["y",{"_index":1814,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["yes",{"_index":237,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["youtube",{"_index":1091,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["youtubeplayermodule",{"_index":1161,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["z",{"_index":1773,"title":{},"body":{"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["zero",{"_index":636,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["zone.js",{"_index":2524,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":10,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"interfaces/XYZTriplet.html":{},"overview.html":{}}}],["zoom(value",{"_index":1837,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["zoomtobounds(bounds",{"_index":1880,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AnalyticsModule.html":{"url":"modules/AnalyticsModule.html","title":"module - AnalyticsModule","body":"\n                   \n\n\n\n\n    Modules\n    AnalyticsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AnalyticsModule\n\n\n\ncluster_AnalyticsModule_providers\n\n\n\n\nConsentService\n\nConsentService\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAnalyticsModule -->\n\nConsentService->AnalyticsModule\n\n\n\n\n\nGoogleAnalyticsSyncService\n\nGoogleAnalyticsSyncService\n\nAnalyticsModule -->\n\nGoogleAnalyticsSyncService->AnalyticsModule\n\n\n\n\n\nLocalStorageSyncService\n\nLocalStorageSyncService\n\nAnalyticsModule -->\n\nLocalStorageSyncService->AnalyticsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/analytics.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConsentService\n                        \n                        \n                            GoogleAnalyticsSyncService\n                        \n                        \n                            LocalStorageSyncService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: AnalyticsOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/analytics.module.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AnalyticsOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { APP_INITIALIZER, Injector, ModuleWithProviders, NgModule } from '@angular/core';\nimport { IGoogleAnalyticsCommand, NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\nimport { ConsentService } from './consent.service';\nimport { GoogleAnalyticsSyncService } from './google-analytics-sync.service';\nimport { LocalStorageSyncService } from './local-storage-sync.service';\n\n\nexport interface AnalyticsOptions {\n  gaToken: string;\n\n  appName?: string;\n  projectName?: string;\n\n  developmentMode?: boolean;\n}\n\n\nconst EAGERLY_LOADED_SERVICES = [\n  ConsentService,\n  GoogleAnalyticsSyncService,\n  LocalStorageSyncService,\n];\n\n\nfunction toAttributes(obj: Record): Record {\n  return Object.entries(obj).reduce>((attrs, [key, value]) => {\n    if (value != null) {\n      attrs[key] = `${value}`;\n    }\n\n    return attrs;\n  }, {});\n}\n\nfunction initCommands(options: AnalyticsOptions): IGoogleAnalyticsCommand[] {\n  const { appName, projectName, developmentMode } = options;\n\n  return [\n    {\n      command: 'set',\n      values: [toAttributes({\n        appName,\n        projectName,\n        developmentMode\n      })]\n    }\n  ];\n}\n\n\n@NgModule({\n  imports: [\n    NgxGoogleAnalyticsModule\n  ],\n  providers: [\n    ...EAGERLY_LOADED_SERVICES,\n\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: () => () => undefined,\n      deps: EAGERLY_LOADED_SERVICES\n    }\n  ]\n})\nexport class AnalyticsModule {\n  static forRoot(options: AnalyticsOptions): ModuleWithProviders {\n    const { providers = [] } = NgxGoogleAnalyticsModule.forRoot(\n      options.gaToken,\n      initCommands(options)\n    );\n\n    return { ngModule: AnalyticsModule, providers };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnalyticsOptions.html":{"url":"interfaces/AnalyticsOptions.html","title":"interface - AnalyticsOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnalyticsOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/analytics.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            appName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            developmentMode\n                                        \n                                \n                                \n                                        \n                                            gaToken\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            projectName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        developmentMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        developmentMode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gaToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gaToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { APP_INITIALIZER, Injector, ModuleWithProviders, NgModule } from '@angular/core';\nimport { IGoogleAnalyticsCommand, NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\nimport { ConsentService } from './consent.service';\nimport { GoogleAnalyticsSyncService } from './google-analytics-sync.service';\nimport { LocalStorageSyncService } from './local-storage-sync.service';\n\n\nexport interface AnalyticsOptions {\n  gaToken: string;\n\n  appName?: string;\n  projectName?: string;\n\n  developmentMode?: boolean;\n}\n\n\nconst EAGERLY_LOADED_SERVICES = [\n  ConsentService,\n  GoogleAnalyticsSyncService,\n  LocalStorageSyncService,\n];\n\n\nfunction toAttributes(obj: Record): Record {\n  return Object.entries(obj).reduce>((attrs, [key, value]) => {\n    if (value != null) {\n      attrs[key] = `${value}`;\n    }\n\n    return attrs;\n  }, {});\n}\n\nfunction initCommands(options: AnalyticsOptions): IGoogleAnalyticsCommand[] {\n  const { appName, projectName, developmentMode } = options;\n\n  return [\n    {\n      command: 'set',\n      values: [toAttributes({\n        appName,\n        projectName,\n        developmentMode\n      })]\n    }\n  ];\n}\n\n\n@NgModule({\n  imports: [\n    NgxGoogleAnalyticsModule\n  ],\n  providers: [\n    ...EAGERLY_LOADED_SERVICES,\n\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: () => () => undefined,\n      deps: EAGERLY_LOADED_SERVICES\n    }\n  ]\n})\nexport class AnalyticsModule {\n  static forRoot(options: AnalyticsOptions): ModuleWithProviders {\n    const { providers = [] } = NgxGoogleAnalyticsModule.forRoot(\n      options.gaToken,\n      initCommands(options)\n    );\n\n    return { ngModule: AnalyticsModule, providers };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiEndpointDataSourceOptions.html":{"url":"interfaces/ApiEndpointDataSourceOptions.html","title":"interface - ApiEndpointDataSourceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiEndpointDataSourceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hubmapToken\n                                        \n                                \n                                \n                                        \n                                            remoteApiEndpoint\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hubmapToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        remoteApiEndpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        remoteApiEndpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { Observable, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return globalConfig.getOption('remoteApiEndpoint').pipe(\n      take(1),\n      tap(endpoint => (api.configuration.basePath = endpoint)),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiEndpointDataSourceService.html":{"url":"injectables/ApiEndpointDataSourceService.html","title":"injectable - ApiEndpointDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiEndpointDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                doRequest\n                            \n                            \n                                    Private\n                                doRequest\n                            \n                            \n                                    Private\n                                doRequest\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: DefaultService, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:94\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                    DefaultService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        doRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    doRequest(method: RequestMethod, filter?: Filter | undefined, params?: P)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:188\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                RequestMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter | undefined\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            P\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        doRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    doRequest(method: RequestMethod, filter: Filter | undefined, params: P | undefined, reviver: DataReviver)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:193\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        P\n                        U\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                RequestMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            P | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviver\n                                    \n                                                DataReviver\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        doRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    doRequest(method: RequestMethod, filter: Filter | undefined, params?: P, reviver?: DataReviver)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:199\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                RequestMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            P\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    reviver\n                                    \n                                                DataReviver\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { Observable, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return globalConfig.getOption('remoteApiEndpoint').pipe(\n      take(1),\n      tap(endpoint => (api.configuration.basePath = endpoint)),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoCompleteOption.html":{"url":"interfaces/AutoCompleteOption.html","title":"interface - AutoCompleteOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AutoCompleteOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n        \n\n\n            \n                Description\n            \n            \n                A single suggestion to show in autocomplete\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            decorations\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        decorations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decorations:         Partial[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional styling of the label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    A unique id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The displayed label\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Inject, InjectionToken, Input, Output,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { bind as Bind } from 'bind-decorator';\nimport { from, Observable, ObservableInput } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, switchMap, take } from 'rxjs/operators';\n\nimport { DecoratedRange } from '../decorated-text/decorated-range';\n\n\n/** A single suggestion to show in autocomplete  */\nexport interface AutoCompleteOption {\n  /** A unique id */\n  id: unknown;\n  /** The displayed label */\n  label: string;\n  /** Optional styling of the label */\n  decorations?: Partial[];\n}\n\n/**\n * Token to provide a default for the maximum number of\n * autocomplete suggestions to show at the same time.\n */\nexport const DEFAULT_MAX_OPTIONS = new InjectionToken(\n  'Maximum number of autocomplete options displayed',\n  {\n    providedIn: 'root',\n    factory(): number {\n      return 10;\n    }\n  }\n);\n\n\n/**\n * A text search bar with optional autocompletion functionality.\n */\n@Component({\n  selector: 'ccf-text-search',\n  templateUrl: './text-search.component.html',\n  styleUrls: ['./text-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TextSearchComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-text-search';\n\n  /**\n   * Placeholder text for the search bar\n   */\n  @Input() placeholder = 'Search...';\n\n  /**\n   * The text to show on the search bar\n   */\n  @Input()\n  get value(): string {\n    return this.controller.value as string;\n  }\n\n  set value(val: string) {\n    this.controller.setValue(val, { emitEvent: false });\n  }\n\n  /**\n   * Maximum number of autocomplete suggestions to show simultaneously\n   */\n  @Input() maxOptions?: number;\n\n  /**\n   * Function providing the autocomplete suggestions.\n   * Receives the latest search bar text and the maximum of suggestions to provide.\n   */\n  @Input() autoCompleter?: (search: string, max: number) => ObservableInput;\n\n  /**\n   * Emits when the search bar text changes\n   */\n  @Output() readonly valueChange: Observable;\n\n  /**\n   * Emits when an autocomplete option has been selected\n   */\n  @Output() readonly optionSelected = new EventEmitter();\n\n  /**\n   * Form controller for search bar\n   */\n  readonly controller = new FormControl();\n\n  /**\n   * Emits the latest autocomplete suggestions\n   */\n  readonly options = (this.controller.valueChanges as Observable).pipe(\n    startWith(''),\n    distinctUntilChanged(),\n    switchMap(this.getOptions)\n  );\n\n  /**\n   * Creates an instance of text search component.\n   *\n   * @param defaultMaxOptions The default value for `maxOptions`\n   */\n  constructor(\n    @Inject(DEFAULT_MAX_OPTIONS) private readonly defaultMaxOptions: number\n  ) {\n    this.valueChange = this.controller.valueChanges;\n  }\n\n  /**\n   * Fetches the latest autocomplete suggestions for the provided search text.\n   *\n   * @param search The search text to find suggestions for\n   * @returns The found suggestions\n   */\n  @Bind\n  private async getOptions(search: string): Promise {\n    const { autoCompleter, maxOptions = this.defaultMaxOptions } = this;\n    if (!autoCompleter || maxOptions  array.length \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BodyUiModule.html":{"url":"modules/BodyUiModule.html","title":"module - BodyUiModule","body":"\n                   \n\n\n\n\n    Modules\n    BodyUiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BodyUiModule\n\n\n\ncluster_BodyUiModule_exports\n\n\n\ncluster_BodyUiModule_declarations\n\n\n\n\nBodyUiComponent\n\nBodyUiComponent\n\n\n\nBodyUiModule\n\nBodyUiModule\n\nBodyUiModule -->\n\nBodyUiComponent->BodyUiModule\n\n\n\n\n\nBodyUiComponent \n\nBodyUiComponent \n\nBodyUiComponent  -->\n\nBodyUiModule->BodyUiComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/body-ui/body-ui.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BodyUiComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BodyUiComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BodyUiComponent } from './body-ui.component';\n\n@NgModule({\n  declarations: [BodyUiComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [BodyUiComponent]\n})\nexport class BodyUiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CCFDatabaseDataSourceBaseService.html":{"url":"injectables/CCFDatabaseDataSourceBaseService.html","title":"injectable - CCFDatabaseDataSourceBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CCFDatabaseDataSourceBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DelegateDataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                database$\n                            \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                connectDatabase\n                            \n                            \n                                    Protected\n                                    Abstract\n                                createDatabase\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        connectDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectDatabase(manager: CCFDatabaseManager, config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    manager\n                                    \n                                                CCFDatabaseManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        createDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDatabase(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CCFDatabaseManager\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        database$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CCFDatabaseDataSourceService.html":{"url":"injectables/CCFDatabaseDataSourceService.html","title":"injectable - CCFDatabaseDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CCFDatabaseDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CCFDatabaseDataSourceBaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                database$\n                            \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createDatabase\n                            \n                            \n                                    Private\n                                    Async\n                                connectDatabase\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDatabase(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CCFDatabaseManager\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        connectDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectDatabase(manager: CCFDatabaseManager, config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    manager\n                                    \n                                                CCFDatabaseManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        database$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         CCFDatabaseDataSourceBaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         CCFDatabaseDataSourceBaseService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CCFDatabaseManager.html":{"url":"interfaces/CCFDatabaseManager.html","title":"interface - CCFDatabaseManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CCFDatabaseManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Unsubscribable\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            database\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        database:     CCFDatabase | Remote\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CCFDatabase | Remote\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsentService.html":{"url":"injectables/ConsentService.html","title":"injectable - ConsentService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/consent.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                consent\n                            \n                            \n                                    Readonly\n                                consentChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                setConsent\n                            \n                            \n                                unsetConsent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConsent\n                        \n                    \n                \n            \n            \n                \nsetConsent(value: Consent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsetConsent\n                        \n                    \n                \n            \n            \n                \nunsetConsent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        consent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Consent\n\n                    \n                \n                \n                    \n                        Default value : 'not-set'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        consentChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n\nexport type Consent = 'not-set' | 'given' | 'rescinded';\n\n\n@Injectable()\nexport class ConsentService implements OnDestroy {\n  consent: Consent = 'not-set';\n\n  readonly consentChange = new ReplaySubject(1);\n\n  constructor() {\n    this.consentChange.next(this.consent);\n  }\n\n  ngOnDestroy(): void {\n    this.consentChange.complete();\n  }\n\n  setConsent(value: Consent): void {\n    if (this.consent !== value) {\n      this.consent = value;\n      this.consentChange.next(value);\n    }\n  }\n\n  unsetConsent(): void {\n    this.setConsent('not-set');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSource.html":{"url":"interfaces/DataSource.html","title":"interface - DataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getAggregateResults\n                                    \n                                \n                                \n                                    \n                                        getCellTypeTermOccurences\n                                    \n                                \n                                \n                                    \n                                        getCellTypeTreeModel\n                                    \n                                \n                                \n                                    \n                                        getDatabaseStatus\n                                    \n                                \n                                \n                                    \n                                        getDatasetTechnologyNames\n                                    \n                                \n                                \n                                    \n                                        getOntologyTermOccurences\n                                    \n                                \n                                \n                                    \n                                        getOntologyTreeModel\n                                    \n                                \n                                \n                                    \n                                        getProviderNames\n                                    \n                                \n                                \n                                    \n                                        getReferenceOrgans\n                                    \n                                \n                                \n                                    \n                                        getReferenceOrganScene\n                                    \n                                \n                                \n                                    \n                                        getScene\n                                    \n                                \n                                \n                                    \n                                        getTissueBlockResults\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult\n} from 'ccf-database';\nimport { Observable, ObservableInput, ObservedValueOf } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n\nexport interface DataSource {\n  getDatabaseStatus(): Observable;\n  getProviderNames(): Observable;\n  getDatasetTechnologyNames(): Observable;\n  getOntologyTreeModel(): Observable;\n  getCellTypeTreeModel(): Observable;\n  getReferenceOrgans(): Observable;\n\n  getTissueBlockResults(filter?: Filter): Observable;\n  getAggregateResults(filter?: Filter): Observable;\n  getOntologyTermOccurences(filter?: Filter): Observable>;\n  getCellTypeTermOccurences(filter?: Filter): Observable>;\n  getScene(filter?: Filter): Observable;\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\nexport type DataSourceLike = {\n  [K in keyof DataSource]: DataSourceLikeMethod;\n};\n\nexport type DataSourceMethod = DataSource[K];\nexport type DataSourceLikeMethod =\n  (...args: Parameters>) => ObservableInput>;\nexport type DataSourceDataType =\n  ObservedValueOf>>;\n\n\nexport abstract class ForwardingDataSource implements DataSource {\n  getDatabaseStatus(): Observable {\n    return this.forwardCall('getDatabaseStatus');\n  }\n\n  getProviderNames(): Observable {\n    return this.forwardCall('getProviderNames');\n  }\n\n  getDatasetTechnologyNames(): Observable {\n    return this.forwardCall('getDatasetTechnologyNames');\n  }\n\n  getOntologyTreeModel(): Observable {\n    return this.forwardCall('getOntologyTreeModel');\n  }\n\n  getCellTypeTreeModel(): Observable {\n    return this.forwardCall('getCellTypeTreeModel');\n  }\n\n  getReferenceOrgans(): Observable {\n    return this.forwardCall('getReferenceOrgans');\n  }\n\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.forwardCall('getTissueBlockResults', filter);\n  }\n\n  getAggregateResults(filter?: Filter): Observable {\n    return this.forwardCall('getAggregateResults', filter);\n  }\n\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getOntologyTermOccurences', filter);\n  }\n\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getCellTypeTermOccurences', filter);\n  }\n\n  getScene(filter?: Filter): Observable {\n    return this.forwardCall('getScene', filter);\n  }\n\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.forwardCall('getReferenceOrganScene', organIri, filter);\n  }\n\n  protected abstract forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable>;\n}\n\n\nexport abstract class DelegateDataSource extends ForwardingDataSource {\n  abstract readonly impl$: Observable;\n\n  protected forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable> {\n    type AnyFunction = (...rest: unknown[]) => ObservableInput;\n\n    return this.impl$.pipe(\n      switchMap(impl => (impl[method] as AnyFunction)(...args))\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataSourceService.html":{"url":"injectables/DataSourceService.html","title":"injectable - DataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getAggregateResults\n                            \n                            \n                                    Abstract\n                                getCellTypeTermOccurences\n                            \n                            \n                                    Abstract\n                                getCellTypeTreeModel\n                            \n                            \n                                    Abstract\n                                getDatabaseStatus\n                            \n                            \n                                    Abstract\n                                getDatasetTechnologyNames\n                            \n                            \n                                    Abstract\n                                getOntologyTermOccurences\n                            \n                            \n                                    Abstract\n                                getOntologyTreeModel\n                            \n                            \n                                    Abstract\n                                getProviderNames\n                            \n                            \n                                    Abstract\n                                getReferenceOrgans\n                            \n                            \n                                    Abstract\n                                getReferenceOrganScene\n                            \n                            \n                                    Abstract\n                                getScene\n                            \n                            \n                                    Abstract\n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProviderNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getScene\n                        \n                    \n                \n            \n            \n                \n                    \n                    getScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { Observable } from 'rxjs';\n\nimport { DataSource } from './data-source';\n\n\n@Injectable()\nexport abstract class DataSourceService implements DataSource {\n  abstract getDatabaseStatus(): Observable;\n  abstract getProviderNames(): Observable;\n  abstract getDatasetTechnologyNames(): Observable;\n  abstract getOntologyTreeModel(): Observable;\n  abstract getCellTypeTreeModel(): Observable;\n  abstract getReferenceOrgans(): Observable;\n\n  abstract getTissueBlockResults(filter?: Filter): Observable;\n  abstract getAggregateResults(filter?: Filter): Observable;\n  abstract getOntologyTermOccurences(filter?: Filter): Observable>;\n  abstract getCellTypeTermOccurences(filter?: Filter): Observable>;\n  abstract getScene(filter?: Filter): Observable;\n  abstract getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DecoratedRange.html":{"url":"interfaces/DecoratedRange.html","title":"interface - DecoratedRange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DecoratedRange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n        \n\n\n            \n                Description\n            \n            \n                A range which should have the specified classes and styles applied\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            end\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                                \n                                        \n                                            styles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Classes to add\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    End index of range (exclusive). Negative indicies are allowed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start index of range (inclusive). Negative indicies are allowed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        styles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        styles:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Styles to set\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DecoratedRange {\n  /** Start index of range (inclusive). Negative indicies are allowed. */\n  start: number;\n  /** End index of range (exclusive). Negative indicies are allowed. */\n  end: number;\n  /** Classes to add */\n  classes: string[];\n  /** Styles to set */\n  styles: Record;\n}\n\n/**\n * Resolves and normalizes an index for indexing into an array of length `length`.\n *\n * @param index The index value to resolve. May be negative indicating an index from end.\n * @param length The length of the object on which this index will be used.\n * @returns A positive index in range [0, length]\n */\nfunction resolveIndex(index: number, length: number): number {\n  if (index >= 0 && index = length) {\n    return length;\n  } else if (index + length , length: number): DecoratedRange {\n  const start = resolveIndex(range.start ?? 0, length);\n  const end = resolveIndex(range.end ?? length, length);\n  const classes = range.classes ?? [];\n  const styles = range.styles ?? {};\n  return { start, end, classes, styles };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DecoratedTextComponent.html":{"url":"components/DecoratedTextComponent.html","title":"component - DecoratedTextComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DecoratedTextComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n\n\n\n    \n        Description\n    \n    \n        Class to display text with additional styling on ranges of the text.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-decorated-text\n            \n\n            \n                styleUrls\n                ./decorated-text.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./decorated-text.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                segments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createSegments\n                            \n                            \n                                    Private\n                                createStackOps\n                            \n                            \n                                    Private\n                                getNormalizedDecorations\n                            \n                            \n                                    Private\n                                makeDecoratedSegment\n                            \n                            \n                                    Private\n                                makeUndecoratedSegment\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Private\n                                updateStack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                decorations\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        decorations\n                    \n                \n                \n                    \n                        Type :         Partial[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:52\n                            \n                        \n                \n                    \n                        Classes and styles to apply to ranges of the text.\nFor overlapping ranges later values takes precedence.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:46\n                            \n                        \n                \n                    \n                        Text to display\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-decorated-text\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-decorated-text'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:41\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createSegments\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSegments()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:76\n                \n            \n\n\n            \n                \n                    Creates an array of decorated text segments based on\nthe latest text and decorations.\n\n\n                    \n                    \n                    \n                        Returns :         Segment[]\n\n                    \n                    \n                        The new segments\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createStackOps\n                        \n                    \n                \n            \n            \n                \n                    \n                    createStackOps(ranges: DecoratedRange[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:124\n                \n            \n\n\n            \n                \n                    Creates an ordered array of stack operations to apply when building segments.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ranges\n                                    \n                                                DecoratedRange[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The decorated ranges to apply\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         StackOp[]\n\n                    \n                    \n                        The array of operations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getNormalizedDecorations\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNormalizedDecorations()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:158\n                \n            \n\n\n            \n                \n                    Normalizes and filters valid decorated ranges.\n\n\n                    \n                    \n                    \n                        Returns :         DecoratedRange[]\n\n                    \n                    \n                        The normalized ranges with properties filled\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeDecoratedSegment\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeDecoratedSegment(text: string, decorations: DecoratedRange[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:184\n                \n            \n\n\n            \n                \n                    Creates a segment with decoration\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text for the segment\n\n                                    \n                                \n                                \n                                    decorations\n                                    \n                                                DecoratedRange[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Decorations for this segment\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Segment\n\n                    \n                    \n                        A decorated segment\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeUndecoratedSegment\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeUndecoratedSegment(text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:173\n                \n            \n\n\n            \n                \n                    Creates a segment without any decoration\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text for the segment\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Segment\n\n                    \n                    \n                        A segment without any decoration\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:64\n                \n            \n\n\n            \n                \n                    Apply changes and recalculate cached values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Instance properties that have changed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateStack\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStack(stack: DecoratedRange[], op: StackOp)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:145\n                \n            \n\n\n            \n                \n                    Applies the stack changes specified by the stack operation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    stack\n                                    \n                                                DecoratedRange[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current stack\n\n                                    \n                                \n                                \n                                    op\n                                    \n                                                StackOp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The operation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DecoratedRange[]\n\n                    \n                    \n                        The new stack\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-decorated-text'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:41\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        segments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Segment[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:57\n                        \n                    \n\n            \n                \n                    Computed segments of text with decorations resolved.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { DecoratedRange, normalize } from './decorated-range';\n\n\n// Reexport DecoratedRange\nexport { DecoratedRange };\n\n/** A segment of text with additional classes and styles */\ninterface Segment {\n  /** The piece of text to display */\n  text: string;\n  /** Classes to add to the text container */\n  classes: string[];\n  /** Styles to set on the text container */\n  styles: Record;\n}\n\n/** Represents an operation to apply to the stack when building segments */\ninterface StackOp {\n  /** Text index at which the changes takes effect */\n  index: number;\n  /** Decorations to add */\n  added: DecoratedRange[];\n  /** Decorations to remove */\n  removed: DecoratedRange[];\n}\n\n\n/**\n * Class to display text with additional styling on ranges of the text.\n */\n@Component({\n  selector: 'ccf-decorated-text',\n  templateUrl: './decorated-text.component.html',\n  styleUrls: ['./decorated-text.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DecoratedTextComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-decorated-text';\n\n  /**\n   * Text to display\n   */\n  @Input() text: string;\n\n  /**\n   * Classes and styles to apply to ranges of the text.\n   * For overlapping ranges later values takes precedence.\n   */\n  @Input() decorations?: Partial[];\n\n  /**\n   * Computed segments of text with decorations resolved.\n   */\n  segments: Segment[] = [];\n\n  /**\n   * Apply changes and recalculate cached values.\n   *\n   * @param changes Instance properties that have changed\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('text' in changes || 'decorations' in changes) {\n      this.segments = this.createSegments();\n    }\n  }\n\n  /**\n   * Creates an array of decorated text segments based on\n   * the latest text and decorations.\n   *\n   * @returns The new segments\n   */\n  private createSegments(): Segment[] {\n    const { text } = this;\n    if (!text) { // No styling can be applied to empty text fields\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const decorations = this.getNormalizedDecorations();\n    if (decorations.length === 0) { // No styling available\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const stackOps = this.createStackOps(decorations);\n    const segments: Segment[] = [];\n    let stack: DecoratedRange[] = [];\n    let lastIndex = 0;\n\n    // If the first op starts at index zero apply stack changes\n    // but don't push a segment by shifing out the first op\n    if (stackOps[0].index === 0) {\n      stack = this.updateStack(stack, stackOps.shift() as StackOp);\n    }\n\n    // Build segments based on the stack operations\n    for (const op of stackOps) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex, op.index), stack\n      ));\n\n      lastIndex = op.index;\n      stack = this.updateStack(stack, op);\n    }\n\n    // Push the last segment if not already done\n    if (lastIndex !== text.length) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex), stack\n      ));\n    }\n\n    return segments;\n  }\n\n  /**\n   * Creates an ordered array of stack operations to apply when building segments.\n   *\n   * @param ranges The decorated ranges to apply\n   * @returns The array of operations\n   */\n  private createStackOps(ranges: DecoratedRange[]): StackOp[] {\n    const ops: Record = {};\n    const getOp = (index: number) => (ops[index] ??= { index, added: [], removed: [] });\n\n    for (const range of ranges) {\n      getOp(range.start).added.push(range);\n      getOp(range.end).removed.push(range);\n    }\n\n    return Object.entries(ops)\n      .sort((i1, i2) => +i1[0] - +i2[0]) // Sort by index\n      .map(entry => entry[1]);\n  }\n\n  /**\n   * Applies the stack changes specified by the stack operation.\n   *\n   * @param stack The current stack\n   * @param op The operation\n   * @returns The new stack\n   */\n  private updateStack(stack: DecoratedRange[], op: StackOp): DecoratedRange[] {\n    return stack\n      .filter(item => !op.removed.includes(item))\n      // Note - A new array is created by the above filter statement\n      // so it is safe to modify it with concat\n      .concat(op.added);\n  }\n\n  /**\n   * Normalizes and filters valid decorated ranges.\n   *\n   * @returns The normalized ranges with properties filled\n   */\n  private getNormalizedDecorations(): DecoratedRange[] {\n    const { decorations = [], text: { length } } = this;\n    return decorations\n      // Turn partials into full objects\n      .map(range => normalize(range, length))\n      // Remove empty and out of bounds ranges\n      .filter(range => range.start (\n      (result, range) => result.concat(range.classes),\n      []\n    );\n    const styles = decorations.reduce(\n      (result, range) => ({ ...result, ...range.styles }),\n      {}\n    );\n\n    return { text, classes, styles };\n  }\n}\n\n    \n\n    \n        \n  {{ segment.text }}\n\n\n    \n\n    \n                \n                    ./decorated-text.component.scss\n                \n                :host {\n  display: flex;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ segment.text }}'\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'DecoratedTextComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DecoratedTextModule.html":{"url":"modules/DecoratedTextModule.html","title":"module - DecoratedTextModule","body":"\n                   \n\n\n\n\n    Modules\n    DecoratedTextModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DecoratedTextModule\n\n\n\ncluster_DecoratedTextModule_exports\n\n\n\ncluster_DecoratedTextModule_declarations\n\n\n\n\nDecoratedTextComponent\n\nDecoratedTextComponent\n\n\n\nDecoratedTextModule\n\nDecoratedTextModule\n\nDecoratedTextModule -->\n\nDecoratedTextComponent->DecoratedTextModule\n\n\n\n\n\nDecoratedTextComponent \n\nDecoratedTextComponent \n\nDecoratedTextComponent  -->\n\nDecoratedTextModule->DecoratedTextComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-text.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DecoratedTextComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DecoratedTextComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DecoratedTextComponent } from './decorated-text.component';\n\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [DecoratedTextComponent],\n  exports: [DecoratedTextComponent]\n})\nexport class DecoratedTextModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultParams.html":{"url":"interfaces/DefaultParams.html","title":"interface - DefaultParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DefaultParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { Observable, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return globalConfig.getOption('remoteApiEndpoint').pipe(\n      take(1),\n      tap(endpoint => (api.configuration.basePath = endpoint)),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DelegateDataSource.html":{"url":"classes/DelegateDataSource.html","title":"class - DelegateDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DelegateDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ForwardingDataSource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:91\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult\n} from 'ccf-database';\nimport { Observable, ObservableInput, ObservedValueOf } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n\nexport interface DataSource {\n  getDatabaseStatus(): Observable;\n  getProviderNames(): Observable;\n  getDatasetTechnologyNames(): Observable;\n  getOntologyTreeModel(): Observable;\n  getCellTypeTreeModel(): Observable;\n  getReferenceOrgans(): Observable;\n\n  getTissueBlockResults(filter?: Filter): Observable;\n  getAggregateResults(filter?: Filter): Observable;\n  getOntologyTermOccurences(filter?: Filter): Observable>;\n  getCellTypeTermOccurences(filter?: Filter): Observable>;\n  getScene(filter?: Filter): Observable;\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\nexport type DataSourceLike = {\n  [K in keyof DataSource]: DataSourceLikeMethod;\n};\n\nexport type DataSourceMethod = DataSource[K];\nexport type DataSourceLikeMethod =\n  (...args: Parameters>) => ObservableInput>;\nexport type DataSourceDataType =\n  ObservedValueOf>>;\n\n\nexport abstract class ForwardingDataSource implements DataSource {\n  getDatabaseStatus(): Observable {\n    return this.forwardCall('getDatabaseStatus');\n  }\n\n  getProviderNames(): Observable {\n    return this.forwardCall('getProviderNames');\n  }\n\n  getDatasetTechnologyNames(): Observable {\n    return this.forwardCall('getDatasetTechnologyNames');\n  }\n\n  getOntologyTreeModel(): Observable {\n    return this.forwardCall('getOntologyTreeModel');\n  }\n\n  getCellTypeTreeModel(): Observable {\n    return this.forwardCall('getCellTypeTreeModel');\n  }\n\n  getReferenceOrgans(): Observable {\n    return this.forwardCall('getReferenceOrgans');\n  }\n\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.forwardCall('getTissueBlockResults', filter);\n  }\n\n  getAggregateResults(filter?: Filter): Observable {\n    return this.forwardCall('getAggregateResults', filter);\n  }\n\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getOntologyTermOccurences', filter);\n  }\n\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getCellTypeTermOccurences', filter);\n  }\n\n  getScene(filter?: Filter): Observable {\n    return this.forwardCall('getScene', filter);\n  }\n\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.forwardCall('getReferenceOrganScene', organIri, filter);\n  }\n\n  protected abstract forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable>;\n}\n\n\nexport abstract class DelegateDataSource extends ForwardingDataSource {\n  abstract readonly impl$: Observable;\n\n  protected forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable> {\n    type AnyFunction = (...rest: unknown[]) => ObservableInput;\n\n    return this.impl$.pipe(\n      switchMap(impl => (impl[method] as AnyFunction)(...args))\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DocumentationContent.html":{"url":"interfaces/DocumentationContent.html","title":"interface - DocumentationContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DocumentationContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The structure to define how each documentation panel\nshould look like in the info dialog\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Content inside the panel\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Title of the panel\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nconst documentationURL = 'assets/docs/README.md';\n\n/**\n * The structure to define how each documentation panel\n * should look like in the info dialog\n */\n\nexport interface DocumentationContent {\n  /** Title of the panel */\n  title: string;\n\n  /** Content inside the panel */\n  content: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfoButtonService {\n\n  /** Subject to send the documentation data to the component when its done processing */\n  markdownContent: BehaviorSubject = new BehaviorSubject([]);\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Read the markdown file to split it by h1 tags.\n   */\n  readMarkdown(): void {\n    this.http.get(documentationURL, { responseType: 'text' }).subscribe((data: string) => {\n      const markdownContent: DocumentationContent[] = this.parseMarkdown(data);\n      this.markdownContent.next(markdownContent);\n    });\n  }\n\n  /**\n   * Function to parse the markdown file and convert to\n   * documentation content used by the info-dialog panels\n   *\n   * @param data Markdown file sent as a string after reading it\n   * @returns array of DocumentationContent\n   */\n  parseMarkdown(data: string): DocumentationContent[] {\n    const markdownContent: DocumentationContent[] = [];\n    const splitByHeaderTag: string[] = data.split('# ');\n    for (const split of splitByHeaderTag) {\n      if (split.length) {\n        const headerAndContent: string[] = split.split('\\n\\n');\n        markdownContent.push({\n          title: headerAndContent[0],\n          content: headerAndContent.splice(1).join('\\n\\n')\n        });\n      }\n    }\n    return markdownContent;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterParams.html":{"url":"interfaces/FilterParams.html","title":"interface - FilterParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            age\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ageRange\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bmi\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bmiRange\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cellTypeTerms\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ontologyTerms\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            providers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            technologies\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:     MinMax\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MinMax\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ageRange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ageRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bmi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bmi:     MinMax\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MinMax\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bmiRange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bmiRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cellTypeTerms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cellTypeTerms:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyTerms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyTerms:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        providers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"both\" | \"female\" | \"male\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"both\" | \"female\" | \"male\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        technologies:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { Observable, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return globalConfig.getOption('remoteApiEndpoint').pipe(\n      take(1),\n      tap(endpoint => (api.configuration.basePath = endpoint)),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForwardingDataSource.html":{"url":"classes/ForwardingDataSource.html","title":"class - ForwardingDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForwardingDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            DataSource\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:84\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult\n} from 'ccf-database';\nimport { Observable, ObservableInput, ObservedValueOf } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n\nexport interface DataSource {\n  getDatabaseStatus(): Observable;\n  getProviderNames(): Observable;\n  getDatasetTechnologyNames(): Observable;\n  getOntologyTreeModel(): Observable;\n  getCellTypeTreeModel(): Observable;\n  getReferenceOrgans(): Observable;\n\n  getTissueBlockResults(filter?: Filter): Observable;\n  getAggregateResults(filter?: Filter): Observable;\n  getOntologyTermOccurences(filter?: Filter): Observable>;\n  getCellTypeTermOccurences(filter?: Filter): Observable>;\n  getScene(filter?: Filter): Observable;\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\nexport type DataSourceLike = {\n  [K in keyof DataSource]: DataSourceLikeMethod;\n};\n\nexport type DataSourceMethod = DataSource[K];\nexport type DataSourceLikeMethod =\n  (...args: Parameters>) => ObservableInput>;\nexport type DataSourceDataType =\n  ObservedValueOf>>;\n\n\nexport abstract class ForwardingDataSource implements DataSource {\n  getDatabaseStatus(): Observable {\n    return this.forwardCall('getDatabaseStatus');\n  }\n\n  getProviderNames(): Observable {\n    return this.forwardCall('getProviderNames');\n  }\n\n  getDatasetTechnologyNames(): Observable {\n    return this.forwardCall('getDatasetTechnologyNames');\n  }\n\n  getOntologyTreeModel(): Observable {\n    return this.forwardCall('getOntologyTreeModel');\n  }\n\n  getCellTypeTreeModel(): Observable {\n    return this.forwardCall('getCellTypeTreeModel');\n  }\n\n  getReferenceOrgans(): Observable {\n    return this.forwardCall('getReferenceOrgans');\n  }\n\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.forwardCall('getTissueBlockResults', filter);\n  }\n\n  getAggregateResults(filter?: Filter): Observable {\n    return this.forwardCall('getAggregateResults', filter);\n  }\n\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getOntologyTermOccurences', filter);\n  }\n\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getCellTypeTermOccurences', filter);\n  }\n\n  getScene(filter?: Filter): Observable {\n    return this.forwardCall('getScene', filter);\n  }\n\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.forwardCall('getReferenceOrganScene', organIri, filter);\n  }\n\n  protected abstract forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable>;\n}\n\n\nexport abstract class DelegateDataSource extends ForwardingDataSource {\n  abstract readonly impl$: Observable;\n\n  protected forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable> {\n    type AnyFunction = (...rest: unknown[]) => ObservableInput;\n\n    return this.impl$.pipe(\n      switchMap(impl => (impl[method] as AnyFunction)(...args))\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalConfigState.html":{"url":"injectables/GlobalConfigState.html","title":"injectable - GlobalConfigState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GlobalConfigState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/config/global-config.state.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                optionCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                    Private\n                                getPathKey\n                            \n                            \n                                getProperty\n                            \n                            \n                                patchConfig\n                            \n                            \n                                setConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    config$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(k1: K1)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:42\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K1\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(k1: K1, k2: K2)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:43\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K1\n                        K2\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n                                    \n                                            K2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(k1: K1, k2: K2, k3: K3)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:44\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K1\n                        K2\n                        K3\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n                                    \n                                            K2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n                                    \n                                            K3\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(...path: (string | number)[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:45\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            (string | number)[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(...path: (string | number)[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            (string | number)[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getPathKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPathKey(path: (string | number)[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            (string | number)[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProperty\n                        \n                    \n                \n            \n            \n                \ngetProperty(path: PropertyKey[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:34\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            PropertyKey[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patchConfig\n                        \n                    \n                \n            \n            \n                \npatchConfig(config: ImmutablePatchValue)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            ImmutablePatchValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConfig\n                        \n                    \n                \n            \n            \n                \nsetConfig(config: ImmutableStateValue)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            ImmutableStateValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        optionCache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config$\n                    \n                \n\n                \n                    \n                        getconfig$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { Computed, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { ImmutablePatchValue, ImmutableStateValue } from '@ngxs-labs/data/typings';\nimport { State } from '@ngxs/store';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, pluck, shareReplay } from 'rxjs/operators';\n\n\n@StateRepository()\n@State({\n  name: 'globalConfig',\n  defaults: null\n})\n@Injectable()\nexport class GlobalConfigState extends NgxsImmutableDataRepository {\n  private readonly optionCache = new Map>();\n\n  @Computed()\n  get config$(): Observable> {\n    return this.state$.pipe(filterNulls(), shareReplay(1));\n  }\n\n  setConfig(config: ImmutableStateValue): void {\n    this.setState(config);\n  }\n\n  patchConfig(config: ImmutablePatchValue): void {\n    this.patchState(config);\n  }\n\n  getProperty(path: PropertyKey[]): Observable {\n    return this.config$.pipe(\n      pluck(...path as string[]),\n      distinctUntilChanged(),\n      shareReplay(1)\n    );\n  }\n\n  getOption(k1: K1): Observable;\n  getOption(k1: K1, k2: K2): Observable;\n  getOption(k1: K1, k2: K2, k3: K3): Observable;\n  getOption(...path: (string | number)[]): Observable;\n  getOption(...path: (string | number)[]): Observable {\n    const key = this.getPathKey(path);\n    if (this.optionCache.has(key)) {\n      return this.optionCache.get(key)!;\n    }\n\n    const obs = this.config$.pipe(\n      pluck(...(path as string[])),\n      distinctUntilChanged(),\n      shareReplay(1)\n    );\n\n    this.optionCache.set(key, obs);\n    return obs;\n  }\n\n  private getPathKey(path: (string | number)[]): string {\n    return `${path.length}:${path.join('.')}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalsService.html":{"url":"injectables/GlobalsService.html","title":"injectable - GlobalsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GlobalsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/globals/globals.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Provide functionality for interacting with the global object.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                findGlobalObject\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                remove\n                            \n                            \n                                set\n                            \n                            \n                                set\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    obj\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        findGlobalObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    findGlobalObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:109\n                \n            \n\n\n            \n                \n                    Attempt to locate the global object.\nCan be overridden in a subclass to check other locations\nor completely change the object. This is especially useful\nduring testing.\n\n\n                    \n                    \n                    \n                        Returns :         GlobalThis | undefined\n\n                    \n                    \n                        The global object if found\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: K)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:58\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n                    Gets a value from the global object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key for the value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: K, def: D)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:59\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                        D\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                            D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NonNullable | D\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: GlobalKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:60\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | null | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: GlobalKey, def: D)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:61\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        D\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                            D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | D\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: GlobalKey, def?)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has\n                        \n                    \n                \n            \n            \n                \nhas(key: GlobalKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:45\n                \n            \n\n\n            \n                \n                    Tests whether the global object has the specific key.\nThis method returns true even when the associated value\nis undefined or null as long as the key exists.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the key exists in the global object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(key: GlobalKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:93\n                \n            \n\n\n            \n                \n                    Removes a key from the global object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: K, value)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:76\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n                    Sets a value on the global object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key to set the value on\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: GlobalKey, value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:77\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: GlobalKey, value)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        obj\n                    \n                \n\n                \n                    \n                        getobj()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:22\n                                \n                            \n                    \n                        \n                                The found global object\n\n\n                                \n                                    Returns :         GlobalThis | undefined\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n\n/** Type of keys allowed in the global object */\nexport type GlobalKey = string | symbol;\n\n/** Type of the global object */\nexport type GlobalThis = typeof globalThis;\n\ndeclare let global: GlobalThis;\n\n/**\n * Provide functionality for interacting with the global object.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalsService {\n  /**\n   * The found global object\n   */\n  get obj(): GlobalThis | undefined {\n    const obj = this.findGlobalObject();\n    // Cache value on the instance\n    Object.defineProperties(this, {\n      obj: {\n        configurable: false,\n        writable: false,\n        value: obj\n      }\n    });\n\n    return obj;\n  }\n\n  /**\n   * Tests whether the global object has the specific key.\n   * This method returns true even when the associated value\n   * is undefined or null as long as the key exists.\n   *\n   * @param key The key\n   *\n   * @returns true if the key exists in the global object\n   */\n  has(key: GlobalKey): boolean {\n    const { obj } = this;\n    return obj != null && key in obj;\n  }\n\n  /**\n   * Gets a value from the global object.\n   *\n   * @param key The key for the value\n   * @param def An optional default value\n   *\n   * @returns The value if it exists otherwise the default value\n   */\n  get(key: K): GlobalThis[K];\n  get(key: K, def: D): NonNullable | D;\n  get(key: GlobalKey): T | null | undefined;\n  get(key: GlobalKey, def: D): T | D;\n\n  get(key: GlobalKey, def?: unknown): unknown {\n    const { obj } = this;\n    return (obj && obj[key] as unknown) ?? def;\n  }\n\n  /**\n   * Sets a value on the global object.\n   *\n   * @param key The key to set the value on\n   * @param value The new value\n   *\n   * @throws TypeError if the value is readonly\n   */\n  set(key: K, value: GlobalThis[K]): void;\n  set(key: GlobalKey, value: T): void;\n\n  set(key: GlobalKey, value: unknown): void {\n    const { obj } = this;\n    if (obj) {\n      obj[key] = value;\n    }\n  }\n\n  /**\n   * Removes a key from the global object.\n   *\n   * @param key The key to remove\n   *\n   * @throws TypeError if the key is not removable\n   */\n  remove(key: GlobalKey): void {\n    const { obj } = this;\n    if (obj) {\n      delete obj[key];\n    }\n  }\n\n  /**\n   * Attempt to locate the global object.\n   * Can be overridden in a subclass to check other locations\n   * or completely change the object. This is especially useful\n   * during testing.\n   *\n   * @returns The global object if found\n   */\n  /* istanbul ignore next This is really hard to test as it depends on the global environment */\n  protected findGlobalObject(): GlobalThis | undefined {\n    // This should pretty much always be available unless\n    // we are running in some outdated environment\n    if (typeof globalThis !== 'undefined') {\n      return globalThis;\n    }\n\n    // Check the common places for a global object\n    if (typeof global !== 'undefined') { // Node.js environment\n      return global;\n    } else if (typeof window !== 'undefined') { // Browser environment\n      return window;\n    } else if (typeof self !== 'undefined') { // Web worker environment\n      return self;\n    }\n\n    try {\n      // One last try - may fail depending on content security policy (CSP) settings\n      // eslint-disable-next-line no-new-func, @typescript-eslint/no-implied-eval\n      return (new Function('return this;'))() as GlobalThis | undefined;\n    } catch (_ignored) { /* Ignore errors */ }\n\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleAnalyticsSyncService.html":{"url":"injectables/GoogleAnalyticsSyncService.html","title":"injectable - GoogleAnalyticsSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GoogleAnalyticsSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                            \n                                    Private\n                                    Readonly\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                toggleGoogleAnalytics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consentService: ConsentService, window: Record | null, undefined: IGoogleAnalyticsSettings)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        window\n                                                  \n                                                        \n                                                                    Record | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                  \n                                                        \n                                                                    IGoogleAnalyticsSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        toggleGoogleAnalytics\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleGoogleAnalytics(disabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    disabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, OnDestroy } from '@angular/core';\nimport { IGoogleAnalyticsSettings, NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN, NGX_WINDOW } from 'ngx-google-analytics';\nimport { Subscription } from 'rxjs';\n\nimport { ConsentService } from './consent.service';\n\n\n@Injectable()\nexport class GoogleAnalyticsSyncService implements OnDestroy {\n  private readonly token: string;\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    consentService: ConsentService,\n    @Inject(NGX_WINDOW) private readonly window: Record | null,\n    @Inject(NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN) { trackingCode }: IGoogleAnalyticsSettings\n  ) {\n    this.token = trackingCode;\n\n    this.subscriptions.add(consentService.consentChange.subscribe(\n      consent => this.toggleGoogleAnalytics(consent === 'rescinded')\n    ));\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  private toggleGoogleAnalytics(disabled: boolean): void {\n    if (this.window) {\n      this.window[`ga-disable-${this.token}`] = disabled;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoButtonComponent.html":{"url":"components/InfoButtonComponent.html","title":"component - InfoButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Info button component: Information icon displays project details when clicked.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-button\n            \n\n            \n                styleUrls\n                ./info-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchInfoDialog\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onDialogButtonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                infoTitle\n                            \n                            \n                                videoID\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, infoButtonService: InfoButtonService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:29\n                            \n                        \n\n                \n                    \n                            Creates an instance of info button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the dialog creation service.\n\n                                                        \n                                                \n                                                \n                                                        infoButtonService\n                                                  \n                                                        \n                                                                        InfoButtonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the info button service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        infoTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:22\n                            \n                        \n                \n                    \n                        Title of the info dialog\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        videoID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:27\n                            \n                        \n                \n                    \n                        Whether the information is for the RUI or EUI\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        launchInfoDialog\n                        \n                    \n                \n            \n            \n                \nlaunchInfoDialog(data: DocumentationContent[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:56\n                \n            \n\n\n            \n                \n                    Opens the info dialogue with the project details\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DocumentationContent[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:49\n                \n            \n\n\n            \n                \n                    Unsubscribe to the observable when the component\nis destroyed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDialogButtonClick\n                        \n                    \n                \n            \n            \n                \nonDialogButtonClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:72\n                \n            \n\n\n            \n                \n                    Detects button click and reads markdown function\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\n\nimport { DocumentationContent } from '../info-button/info-button.service';\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\nimport { InfoButtonService } from './info-button.service';\n\n\n/**\n * Info button component: Information icon displays project details when clicked.\n */\n@Component({\n  selector: 'ccf-info-button',\n  templateUrl: './info-button.component.html',\n  styleUrls: ['./info-button.component.scss']\n})\nexport class InfoButtonComponent implements OnDestroy {\n  /**\n   * Title of the info dialog\n   */\n  @Input() infoTitle = '';\n\n  /**\n   * Whether the information is for the RUI or EUI\n   */\n  @Input() videoID: string;\n\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of info button component.\n   *\n   * @param dialog Reference to the dialog creation service.\n   * @param infoButtonService Reference to the info button service\n   */\n  constructor(private readonly dialog: MatDialog, private readonly infoButtonService: InfoButtonService) {\n    this.subscriptions.add(infoButtonService.markdownContent.subscribe(data => {\n      if (data.length) {\n        this.launchInfoDialog(data);\n      }\n    }));\n  }\n\n  /**\n    * Unsubscribe to the observable when the component\n    * is destroyed\n    */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the info dialogue with the project details\n   */\n  launchInfoDialog(data: DocumentationContent[]): void {\n    this.dialog.open(InfoDialogComponent, {\n      autoFocus: false,\n      panelClass: 'modal-animated',\n      width: '60rem',\n      data: {\n        title: this.infoTitle,\n        content: data,\n        videoID: this.videoID\n      }\n    });\n  }\n\n  /**\n   * Detects button click and reads markdown function\n   */\n  onDialogButtonClick(): void {\n    this.infoButtonService.readMarkdown();\n  }\n}\n\n    \n\n    \n        \n  \n    info\n  \n\n    \n\n    \n                \n                    ./info-button.component.scss\n                \n                .info-button-wrapper {\n  border-radius: 0.25rem;\n  padding: 0.65rem;\n  transition: 0.6s;\n\n  .ccf-info-button {\n    cursor: pointer;\n    transition: color .6s;\n    font-size: 1.5rem;\n    vertical-align: sub;\n  }\n  \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      info  '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoButtonModule.html":{"url":"modules/InfoButtonModule.html","title":"module - InfoButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InfoButtonModule\n\n\n\ncluster_InfoButtonModule_exports\n\n\n\ncluster_InfoButtonModule_imports\n\n\n\ncluster_InfoButtonModule_declarations\n\n\n\n\nInfoButtonComponent\n\nInfoButtonComponent\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nInfoButtonModule -->\n\nInfoButtonComponent->InfoButtonModule\n\n\n\n\n\nInfoButtonComponent \n\nInfoButtonComponent \n\nInfoButtonComponent  -->\n\nInfoButtonModule->InfoButtonComponent \n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoButtonModule -->\n\nInfoDialogModule->InfoButtonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-button/info-button.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoButtonComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InfoDialogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { InfoButtonComponent } from './info-button.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { InfoDialogModule } from '../info-dialog/info-dialog.module';\n\n@NgModule({\n  declarations: [InfoButtonComponent],\n  imports: [CommonModule, InfoDialogModule, MatIconModule, HttpClientModule],\n  exports: [InfoButtonComponent]\n})\nexport class InfoButtonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InfoButtonService.html":{"url":"injectables/InfoButtonService.html","title":"injectable - InfoButtonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InfoButtonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                markdownContent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                parseMarkdown\n                            \n                            \n                                readMarkdown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        parseMarkdown\n                        \n                    \n                \n            \n            \n                \nparseMarkdown(data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:48\n                \n            \n\n\n            \n                \n                    Function to parse the markdown file and convert to\ndocumentation content used by the info-dialog panels\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Markdown file sent as a string after reading it\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DocumentationContent[]\n\n                    \n                    \n                        array of DocumentationContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readMarkdown\n                        \n                    \n                \n            \n            \n                \nreadMarkdown()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:34\n                \n            \n\n\n            \n                \n                    Read the markdown file to split it by h1 tags.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        markdownContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:27\n                        \n                    \n\n            \n                \n                    Subject to send the documentation data to the component when its done processing\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nconst documentationURL = 'assets/docs/README.md';\n\n/**\n * The structure to define how each documentation panel\n * should look like in the info dialog\n */\n\nexport interface DocumentationContent {\n  /** Title of the panel */\n  title: string;\n\n  /** Content inside the panel */\n  content: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfoButtonService {\n\n  /** Subject to send the documentation data to the component when its done processing */\n  markdownContent: BehaviorSubject = new BehaviorSubject([]);\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Read the markdown file to split it by h1 tags.\n   */\n  readMarkdown(): void {\n    this.http.get(documentationURL, { responseType: 'text' }).subscribe((data: string) => {\n      const markdownContent: DocumentationContent[] = this.parseMarkdown(data);\n      this.markdownContent.next(markdownContent);\n    });\n  }\n\n  /**\n   * Function to parse the markdown file and convert to\n   * documentation content used by the info-dialog panels\n   *\n   * @param data Markdown file sent as a string after reading it\n   * @returns array of DocumentationContent\n   */\n  parseMarkdown(data: string): DocumentationContent[] {\n    const markdownContent: DocumentationContent[] = [];\n    const splitByHeaderTag: string[] = data.split('# ');\n    for (const split of splitByHeaderTag) {\n      if (split.length) {\n        const headerAndContent: string[] = split.split('\\n\\n');\n        markdownContent.push({\n          title: headerAndContent[0],\n          content: headerAndContent.splice(1).join('\\n\\n')\n        });\n      }\n    }\n    return markdownContent;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogComponent.html":{"url":"components/InfoDialogComponent.html","title":"component - InfoDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-dialog\n            \n\n            \n                styleUrls\n                ./info-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                documentationContents\n                            \n                            \n                                infoTitle\n                            \n                            \n                                videoID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: InfoDialogData)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:32\n                            \n                        \n\n                \n                    \n                            Creates an instance of info dialog component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the dialog that this component creates, used to call the dialog's methods\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        InfoDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data being injected into the dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:60\n                \n            \n\n\n            \n                \n                    Closes info dialog component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:51\n                \n            \n\n\n            \n                \n                    load the youtube player api in on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InfoDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:41\n                        \n                    \n\n            \n                \n                    Data being injected into the dialog\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:40\n                        \n                    \n\n            \n                \n                    A reference to the dialog that this component creates, used to call the dialog's methods\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        documentationContents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DocumentationContent[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:26\n                        \n                    \n\n            \n                \n                    Documentation contents\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        infoTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:30\n                        \n                    \n\n            \n                \n                    Title of the dialog\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        videoID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DocumentationContent } from '../info-button/info-button.service';\n\n/**\n * Data model for the dialog input\n */\nexport interface InfoDialogData {\n  content: DocumentationContent[];\n  title: string;\n  videoID: string;\n}\n\n/**\n * This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n */\n@Component({\n  selector: 'ccf-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss']\n})\nexport class InfoDialogComponent implements OnInit {\n  /**\n   * Documentation contents\n   */\n  documentationContents: DocumentationContent[];\n  /**\n   * Title of the dialog\n   */\n  infoTitle: string;\n\n  videoID: string;\n  /**\n   * Creates an instance of info dialog component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: InfoDialogData,\n  ) {\n    this.documentationContents = data.content || [];\n    this.infoTitle = data.title || '';\n    this.videoID = data.videoID;\n  }\n\n  /**\n   * load the youtube player api in on init\n   */\n  ngOnInit(): void {\n    const tag = document.createElement('script');\n    tag.src = 'https://www.youtube.com/iframe_api';\n    document.body.appendChild(tag);\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(() => {\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      clear\n    \n    \n      {{infoTitle}}\n      \n      \n        \n          \n            \n              {{content.title}}\n            \n              \n                \n                \n                   \n                \n              \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./info-dialog.component.scss\n                \n                ::ng-deep .mat-dialog-container {\n  padding: 0;\n}\n\n.rui-about.wrapper {\n  .container {\n    .content {\n      padding: 3rem;\n      text-align: left;\n    }\n\n    .description {\n      font-size: 0.875rem;\n      line-height: 1.5rem;\n      margin-bottom: 1rem;\n    }\n\n    .close {\n      .close-icon {\n        float: right;\n        cursor: pointer;\n      }\n    }\n\n    .title {\n      font-size: 1.5rem;\n      margin-bottom: 2.25rem;\n      text-align: center;\n    }\n\n    .subtitle {\n      font-size: 1rem;\n      margin-top: 0;\n      margin-bottom: 0.5rem;\n    }\n\n    .panel {\n      margin-bottom: 1.5rem;\n\n      .no-header-margin {\n        font-weight: 300;\n        margin-bottom: 0;\n      }\n\n      .top-padding {\n        display: flex;\n\n        markdown ::ng-deep ul {\n          margin-top: 0;\n          padding-left: 1.5rem;\n        }\n      }\n    }\n\n    .dialog-content {\n      height: 50rem;\n      min-height: 10rem;\n\n      .variable-binding {\n        font-weight: 300;\n\n        &.first {\n          padding-right: 3rem;\n          width: 50%;\n        }\n      }\n\n      .video-player {\n        position: relative;\n        width: 50%;\n\n        ::ng-deep iframe {\n          width: 100%;\n          height: 100%;\n          max-height: 17.5rem;\n        }\n      }\n    }\n\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear              {{infoTitle}}                                                        {{content.title}}                                                                                                                                         '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InfoDialogData.html":{"url":"interfaces/InfoDialogData.html","title":"interface - InfoDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InfoDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Data model for the dialog input\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            videoID\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         DocumentationContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DocumentationContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videoID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        videoID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DocumentationContent } from '../info-button/info-button.service';\n\n/**\n * Data model for the dialog input\n */\nexport interface InfoDialogData {\n  content: DocumentationContent[];\n  title: string;\n  videoID: string;\n}\n\n/**\n * This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n */\n@Component({\n  selector: 'ccf-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss']\n})\nexport class InfoDialogComponent implements OnInit {\n  /**\n   * Documentation contents\n   */\n  documentationContents: DocumentationContent[];\n  /**\n   * Title of the dialog\n   */\n  infoTitle: string;\n\n  videoID: string;\n  /**\n   * Creates an instance of info dialog component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: InfoDialogData,\n  ) {\n    this.documentationContents = data.content || [];\n    this.infoTitle = data.title || '';\n    this.videoID = data.videoID;\n  }\n\n  /**\n   * load the youtube player api in on init\n   */\n  ngOnInit(): void {\n    const tag = document.createElement('script');\n    tag.src = 'https://www.youtube.com/iframe_api';\n    document.body.appendChild(tag);\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(() => {\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoDialogModule.html":{"url":"modules/InfoDialogModule.html","title":"module - InfoDialogModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoDialogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InfoDialogModule\n\n\n\ncluster_InfoDialogModule_declarations\n\n\n\ncluster_InfoDialogModule_exports\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoDialogModule -->\n\nInfoDialogComponent->InfoDialogModule\n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nInfoDialogModule->InfoDialogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoDialogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoDialogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InfoDialogComponent } from './info-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { YouTubePlayerModule } from '@angular/youtube-player';\n\n\n@NgModule({\n  declarations: [InfoDialogComponent],\n  imports: [CommonModule, MatDialogModule, MatIconModule, MatExpansionModule, YouTubePlayerModule, MarkdownModule.forRoot({})],\n  exports: [InfoDialogComponent]\n})\nexport class InfoDialogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectorDelegateDataSourceService.html":{"url":"injectables/InjectorDelegateDataSourceService.html","title":"injectable - InjectorDelegateDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectorDelegateDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DelegateDataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                selectToken\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globalConfig: GlobalConfigState, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        selectToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectToken(config: C)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ProviderToken\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:11\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Injector, ProviderToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, shareReplay } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n@Injectable()\nexport abstract class InjectorDelegateDataSourceService extends DelegateDataSource {\n  readonly impl$: Observable;\n\n  constructor(\n    globalConfig: GlobalConfigState,\n    injector: Injector\n  ) {\n    super();\n\n    this.impl$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      map(config => this.selectToken(config)),\n      distinctUntilChanged(),\n      map(token => injector.get(token)),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract selectToken(config: C): ProviderToken;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageSyncService.html":{"url":"injectables/LocalStorageSyncService.html","title":"injectable - LocalStorageSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                storage\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadConsent\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                saveConsent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consentService: ConsentService, key: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadConsent\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadConsent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Consent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        saveConsent\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveConsent(value: Consent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        storage\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Consent, ConsentService } from './consent.service';\n\n\nexport const LOCAL_STORAGE_CONSENT_KEY = new InjectionToken('Key under which consent is stored', {\n  providedIn: 'root',\n  factory: () => 'ALLOW_TELEMETRY'\n});\n\n\n@Injectable()\nexport class LocalStorageSyncService implements OnDestroy {\n  private readonly storage?: typeof localStorage;\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    consentService: ConsentService,\n    @Inject(LOCAL_STORAGE_CONSENT_KEY) private readonly key: string\n  ) {\n    try {\n      this.storage = localStorage;\n    } catch (_error) { /* Ignored */ }\n\n    consentService.setConsent(this.loadConsent());\n    this.subscriptions.add(\n      consentService.consentChange.subscribe(consent => this.saveConsent(consent))\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  private loadConsent(): Consent {\n    const rawValue = this.storage?.getItem?.(this.key);\n    if (rawValue == null) {\n      return 'not-set';\n    }\n\n    const value = rawValue.trim().toLowerCase();\n    switch (value) {\n      case 'given': /* fallthrough */\n      case 'rescinded':\n        return value;\n      default:\n        return 'not-set';\n    }\n  }\n\n  private saveConsent(value: Consent): void {\n    this.storage?.setItem?.(this.key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MousePositionTrackerModule.html":{"url":"modules/MousePositionTrackerModule.html","title":"module - MousePositionTrackerModule","body":"\n                   \n\n\n\n\n    Modules\n    MousePositionTrackerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/analytics/mouse-position-tracker.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, NgModule } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { map, throttleTime } from 'rxjs/operators';\n\n\nexport function trackMousePosition(el: HTMLElement, ga: GoogleAnalyticsService): Subscription {\n  const formatData = (event: MouseEvent) => {\n    const { clientWidth, clientHeight } = el;\n    const { clientX, clientY } = event;\n    const points = [clientX, clientY, clientWidth, clientHeight];\n    return points.join('_');\n  };\n\n  const events = fromEvent(el, 'mousemove').pipe(\n    throttleTime(1000),\n    map(formatData)\n  );\n\n  return events.subscribe(data => ga.event('webpage', 'mousemove', data));\n}\n\n\n@NgModule()\nexport class MousePositionTrackerModule {\n  constructor(\n  // NOTE: Angular compiler fails when document is typed properly?!\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  @Inject(DOCUMENT) document: any,\n                    ga: GoogleAnalyticsService\n  ) {\n    if (document) {\n      trackMousePosition((document as Document).body, ga);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NumberDirective.html":{"url":"directives/NumberDirective.html","title":"directive - NumberDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NumberDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive for restricting an input element to integer only values.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        input[ccfNumbersOnly]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onInputChange\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts:9\n                            \n                        \n\n                \n                    \n                            Creates an instance of number directive.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to input element\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts:23\n                \n            \n\n\n            \n                \n                    Listens to input changes and updates the text to only include numbers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The input event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChange\n                        \n                    \n                \n            \n            \n                \nonInputChange(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('input', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts:23\n                \n            \n\n\n            \n                \n                    Listens to input changes and updates the text to only include numbers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The input event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, HostListener } from '@angular/core';\n\n/**\n * Directive for restricting an input element to integer only values.\n */\n@Directive({\n  selector: 'input[ccfNumbersOnly]'\n})\nexport class NumberDirective {\n  /**\n   * Creates an instance of number directive.\n   *\n   * @param el Reference to input element\n   */\n  constructor(private el: ElementRef) { }\n\n  /**\n   * Listens to input changes and updates the text to only include numbers.\n   *\n   * @param event The input event\n   */\n  @HostListener('input', ['$event'])\n  onInputChange(event: Event): void {\n    const initalValue = this.el.nativeElement.value;\n    this.el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');\n    if (initalValue !== this.el.nativeElement.value) {\n      event.stopPropagation();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NumbersOnlyModule.html":{"url":"modules/NumbersOnlyModule.html","title":"module - NumbersOnlyModule","body":"\n                   \n\n\n\n\n    Modules\n    NumbersOnlyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NumbersOnlyModule\n\n\n\ncluster_NumbersOnlyModule_declarations\n\n\n\ncluster_NumbersOnlyModule_exports\n\n\n\n\nNumberDirective\n\nNumberDirective\n\n\n\nNumbersOnlyModule\n\nNumbersOnlyModule\n\nNumbersOnlyModule -->\n\nNumberDirective->NumbersOnlyModule\n\n\n\n\n\nNumberDirective \n\nNumberDirective \n\nNumberDirective  -->\n\nNumbersOnlyModule->NumberDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NumberDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NumberDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { NumberDirective } from './numbers-only.directive';\n\n\n@NgModule({\n  declarations: [NumberDirective],\n  exports: [NumberDirective]\n})\nexport class NumbersOnlyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OpacitySliderComponent.html":{"url":"components/OpacitySliderComponent.html","title":"component - OpacitySliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OpacitySliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts\n\n\n\n    \n        Description\n    \n    \n        Slider for setting opacity on an anatomical structure\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-opacity-slider\n            \n\n            \n                styleUrls\n                ./opacity-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./opacity-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                prevOpacity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeOpacity\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                            \n                                resetOpacity\n                            \n                            \n                                toggleVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                opacity\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                opacityChange\n                            \n                            \n                                opacityReset\n                            \n                            \n                                visibilityToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        opacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:22\n                            \n                        \n                \n                    \n                        The value displayed in the slider\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:27\n                            \n                        \n                \n                    \n                        Whether the item is set to visible\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        opacityChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:32\n                            \n                        \n                \n                    \n                        Emits the updated opacity when the opacity changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        opacityReset\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:42\n                            \n                        \n                \n                    \n                        Emitter for resetting all opacity values to default\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visibilityToggle\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:37\n                            \n                        \n                \n                    \n                        Output  of opacity slider component\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-opacity-slider\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-opacity-slider'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeOpacity\n                        \n                    \n                \n            \n            \n                \nchangeOpacity(newOpacity: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:63\n                \n            \n\n\n            \n                \n                    Emits opacityChange with the new opacity value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    newOpacity\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The updated opacity value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetOpacity\n                        \n                    \n                \n            \n            \n                \nresetOpacity()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:82\n                \n            \n\n\n            \n                \n                    Emits signal to reset the opacity of the item\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleVisibility()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:71\n                \n            \n\n\n            \n                \n                    Emits signal to toggle the visibility of the item\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-opacity-slider'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prevOpacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, HostBinding, Input, Output, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n/**\n * Slider for setting opacity on an anatomical structure\n */\n@Component({\n  selector: 'ccf-opacity-slider',\n  templateUrl: './opacity-slider.component.html',\n  styleUrls: ['./opacity-slider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OpacitySliderComponent implements OnInit {\n\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-opacity-slider';\n\n  /**\n   * The value displayed in the slider\n   */\n  @Input() opacity = 20;\n\n  /**\n   * Whether the item is set to visible\n   */\n  @Input() visible = true;\n\n  /**\n   * Emits the updated opacity when the opacity changes\n   */\n  @Output() readonly opacityChange = new EventEmitter();\n\n  /**\n   * Output  of opacity slider component\n   */\n  @Output() readonly visibilityToggle = new EventEmitter();\n\n  /**\n   * Emitter for resetting all opacity values to default\n   */\n  @Output() readonly opacityReset = new EventEmitter();\n\n  prevOpacity: number;\n\n  ngOnInit(): void {\n    if (this.visible) {\n      this.prevOpacity = 0;\n    } else {\n      this.prevOpacity = 20;\n    }\n  }\n\n  reset(): void {\n    this.prevOpacity = 20;\n  }\n\n  /**\n   * Emits opacityChange with the new opacity value\n   *\n   * @param newOpacity The updated opacity value\n   */\n  changeOpacity(newOpacity: string): void {\n    this.opacity = parseInt(newOpacity, 10);\n    this.opacityChange.emit(this.opacity);\n  }\n\n  /**\n   * Emits signal to toggle the visibility of the item\n   */\n  toggleVisibility(): void {\n    const temp = this.opacity;\n    this.opacity = this.prevOpacity;\n    this.prevOpacity = temp;\n    this.visibilityToggle.emit();\n    this.opacityChange.emit(this.opacity);\n  }\n\n  /**\n   * Emits signal to reset the opacity of the item\n   */\n  resetOpacity(): void {\n    this.prevOpacity = 0;\n    this.opacityReset.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{opacity}}%\n  \n  \n    \n    \n    refresh\n  \n\n    \n\n    \n                \n                    ./opacity-slider.component.scss\n                \n                :host {\n  height: 2.25rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 0.1875rem;\n  \n\n  .slider-box {\n    display: flex;\n    width: 100%;\n    align-items: center;\n    justify-content: space-between;\n    height: 100%;\n\n    .slider-and-label {\n      width: 60%;\n      display: flex;\n      align-items: center;\n      height: 100%;\n\n      .slider {\n        width: 100%;\n        height: 100%;\n\n        ::ng-deep .mat-slider-wrapper {\n          top: 1.125rem;\n        }\n        \n        &.disabled {\n          pointer-events: none;\n          cursor: not-allowed;\n        }\n      }\n\n      .opacity-value {\n        width: 1.5rem;\n        margin-left: 0.5rem;\n      }\n    }\n\n    .icons {\n      display: flex;\n      cursor: pointer !important;\n\n      .reset {\n        margin-right: 1rem;\n        padding: 0.25rem;\n        cursor: pointer;\n        transition: .6s;\n        border-radius: 0.25rem;\n      }\n    \n      .visibility {\n        transition: .6s;\n        cursor: pointer;\n        padding: 0.25rem;\n        border-radius: 0.25rem;\n    \n        &.hidden {\n          display: none;\n        }\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{opacity}}%                refresh  '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'OpacitySliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpacitySliderModule.html":{"url":"modules/OpacitySliderModule.html","title":"module - OpacitySliderModule","body":"\n                   \n\n\n\n\n    Modules\n    OpacitySliderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OpacitySliderModule\n\n\n\ncluster_OpacitySliderModule_declarations\n\n\n\ncluster_OpacitySliderModule_exports\n\n\n\n\nOpacitySliderComponent\n\nOpacitySliderComponent\n\n\n\nOpacitySliderModule\n\nOpacitySliderModule\n\nOpacitySliderModule -->\n\nOpacitySliderComponent->OpacitySliderModule\n\n\n\n\n\nOpacitySliderComponent \n\nOpacitySliderComponent \n\nOpacitySliderComponent  -->\n\nOpacitySliderModule->OpacitySliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OpacitySliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OpacitySliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OpacitySliderComponent } from './opacity-slider.component';\nimport { MatSliderModule } from '@angular/material/slider';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRippleModule } from '@angular/material/core';\n\n@NgModule({\n  declarations: [OpacitySliderComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatSliderModule,\n    MatRippleModule\n  ],\n  exports: [OpacitySliderComponent]\n})\nexport class OpacitySliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganInfo.html":{"url":"interfaces/OrganInfo.html","title":"interface - OrganInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Contains the organ name and url of the icon svg\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hasSex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            side\n                                        \n                                \n                                \n                                        \n                                            src\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    True if the icon is disabled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasSex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasSex:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    True if applies to both sexes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    UBERON id for the organ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Label to display for the organ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the organ (to help match organs with left / right)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"male\" | \"female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"male\" | \"female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used for single sex only organs\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"left\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"right\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used for paired organs\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Used to fetch the url of the organ icon\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit, Component, ElementRef, EventEmitter, HostBinding, Input,\n  OnChanges, OnDestroy, Output, SimpleChanges, ViewChild\n} from '@angular/core';\nimport { ResizeSensor } from 'css-element-queries';\n\n/**\n * All organs that will eventually be displayed in the app\n */\nexport const ALL_POSSIBLE_ORGANS = [\n  {\n    src: 'app:skin',\n    organ: 'Skin',\n    name: 'Skin',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002097'\n  },\n  {\n    src: 'app:brain',\n    organ: 'Brain',\n    name: 'Brain',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000955'\n  },\n  {\n    disabled: true,\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000029'\n  },\n  {\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002509'\n  },\n  {\n    disabled: true,\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000970'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004548'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/FMA_54449'\n  },\n  {\n    disabled: true,\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0003889'\n  },\n  {\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001303'\n  },\n  {\n    src: 'app:fallopian-tube-right',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001302'\n  },\n  {\n    src: 'app:heart',\n    organ: 'Heart',\n    name: 'Heart',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000948'\n  },\n  {\n    disabled: true,\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002113'\n  },\n  {\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004538'\n  },\n  {\n    src: 'app:kidney-right',\n    organ: 'Kidney',\n    name: 'Kidney, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004539'\n  },\n  {\n    disabled: true,\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001465'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/FMA_24978'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/FMA_24977'\n  },\n  {\n    src: 'app:liver',\n    organ: 'Liver',\n    name: 'Liver',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002107'\n  },\n  {\n    disabled: true,\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002048'\n  },\n  {\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001004'\n  },\n  {\n    disabled: true,\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000992'\n  },\n  {\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/FMA_7214'\n  },\n  {\n    src: 'app:ovary-right',\n    organ: 'Ovary',\n    name: 'Ovary, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/FMA_7213'\n  },\n  {\n    src: 'app:pancreas',\n    organ: 'Pancreas',\n    name: 'Pancreas',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001264'\n  },\n  {\n    src: 'app:pelvis-f',\n    organ: 'Pelvis',\n    name: 'Pelvis',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001270'\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002367',\n    disabled: true\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000079'\n  },\n  {\n    src: 'app:small-intestine',\n    organ: 'Small Intestine',\n    name: 'Small Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002108'\n  },\n  {\n    src: 'app:large-intestine',\n    organ: 'Large Intestine',\n    name: 'Large Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000059'\n  },\n  {\n    src: 'app:spleen',\n    organ: 'Spleen',\n    name: 'Spleen',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002106'\n  },\n  {\n    src: 'app:thymus',\n    organ: 'Thymus',\n    name: 'Thymus',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002370'\n  },\n  {\n    disabled: true,\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000056'\n  },\n  {\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001223'\n  },\n  {\n    src: 'app:ureter-right',\n    organ: 'Ureter',\n    name: 'Ureter, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001222'\n  },\n  {\n    src: 'app:bladder',\n    organ: 'Urinary Bladder',\n    name: 'Urinary Bladder',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001255'\n  },\n  {\n    src: 'app:uterus',\n    organ: 'Uterus',\n    name: 'Uterus',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000995'\n  },\n  {\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004537'\n  },\n  {\n    disabled: true,\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002049'\n  }\n].sort((a, b) => a.name.localeCompare(b.name)) as OrganInfo[];\n\n/**\n * All organs which have not been disabled\n */\nexport const ALL_ORGANS = ALL_POSSIBLE_ORGANS.filter(organ => organ.disabled !== true);\n\n/**\n * Contains the organ name and url of the icon svg\n */\nexport interface OrganInfo {\n\n  /**\n   * Used to fetch the url of the organ icon\n   */\n  src: string;\n\n  /**\n   * Label to display for the organ\n   */\n  name: string;\n\n  /**\n   * Name of the organ (to help match organs with left / right)\n   */\n  organ: string;\n\n  /**\n   * True if the icon is disabled\n   */\n  disabled?: boolean;\n\n  /**\n   * Used for paired organs\n   */\n  side?: 'left' | 'right';\n\n  /**\n   * True if applies to both sexes\n   */\n  hasSex?: boolean;\n\n  /**\n   * Used for single sex only organs\n   */\n  sex?: 'male' | 'female';\n\n  /**\n   * UBERON id for the organ\n   */\n  id?: string;\n}\n\n/**\n * Organ carousel for selecting the organ to be viewed\n */\n@Component({\n  selector: 'ccf-organ-selector',\n  templateUrl: './organ-selector.component.html',\n  styleUrls: ['./organ-selector.component.scss']\n})\nexport class OrganSelectorComponent implements AfterViewInit, OnChanges, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly clsName = 'ccf-organ-selector';\n\n  @ViewChild('carouselContainer', { static: true }) carouselContainer: ElementRef;\n  @ViewChild('itemlist', { static: true }) itemList: ElementRef;\n  @ViewChild('itemcontainer', { static: true }) itemContainer: ElementRef;\n\n  /**\n   * If multiple selections should be allowed\n   */\n  @Input() multiselect = false;\n\n  @Input() displayErrors = false;\n\n  /**\n   * List of organs in the carousel\n   */\n  @Input() organList: OrganInfo[] = ALL_ORGANS;\n\n  /**\n   * Currently selected organ\n   */\n  @Input() selectedOrgans: OrganInfo[] = [];\n\n  /**\n   * If the organ selector is expanded\n   */\n  @Input() expanded = false;\n\n  /**\n   * Emits the name of the organ when selected\n   */\n  @Output() readonly organsChanged = new EventEmitter();\n\n  /**\n   * Determines whether the carousel is at the beginning\n   */\n  onLeft = true;\n\n  /**\n   * Determines whether the carousel is at the end\n   */\n  onRight = false;\n\n  /**\n   * Handles scrolling behavior\n   */\n  timeoutHandler?: unknown;\n\n  /**\n   * Distance the carousel moves in each shift (px)\n   */\n  step = 72;\n\n  /**\n   * Detects resizing of carousel\n   */\n  private sensor: ResizeSensor;\n\n  // eslint-disable-next-line\n  @Input()\n  set occurenceData(value: Record) {\n    // eslint-disable-next-line\n    this._occurenceData = value;\n  }\n\n  get occurenceData(): Record {\n    // eslint-disable-next-line\n    return this._occurenceData;\n  }\n\n  private _occurenceData: Record;\n\n  /**\n   * Set resize sensor on carousel\n   */\n  ngAfterViewInit(): void {\n    const { carouselContainer } = this;\n    this.sensor = new ResizeSensor(carouselContainer.nativeElement, () => {\n      this.set();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('organList' in changes) {\n      this.set();\n    }\n  }\n\n  /**\n   * Detaches resize sensor\n   */\n  ngOnDestroy(): void {\n    this.sensor.detach();\n  }\n\n  /**\n   * Decides whether or not an error has occured,\n   * used to display or hide error message.\n   */\n  get error(): boolean {\n    if (!this.displayErrors || this.selectedOrgans.length === 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Scrolls the carousel left or right by one step.\n   * Prevents scrolling past the beginning or end of the carousel.\n   *\n   * @param dir Direction to be scrolled\n   */\n  shift(dir: string): void {\n    const { itemList } = this;\n    let val = parseInt(itemList.nativeElement.style.left, 10) || 0;\n    if (this.onLeft && dir === 'left' || this.onRight && dir === 'right') {\n      return;\n    }\n    val = dir === 'right' ? val - this.step : val + this.step;\n    itemList.nativeElement.style.left = val + 'px';\n    this.setLeftRight(val);\n  }\n\n  /**\n   * Scrolls carousel continuously\n   *\n   * @param dir Direction to be scrolled\n   */\n  scroll(dir: string): void {\n    this.timeoutHandler = setInterval(() => {\n      this.shift(dir);\n    }, 200);\n  }\n\n  /**\n   * Stops carousel scrolling\n   */\n  stopScroll(): void {\n    if (this.timeoutHandler) {\n      // Minor hack to make typescript happy when there are mixed NodeJS and regular typings\n      clearInterval(this.timeoutHandler as undefined);\n      this.timeoutHandler = undefined;\n    }\n  }\n\n  /**\n   * Sets and emits currently selected organ(s)\n   *\n   * @param organ The organ selected\n   */\n  selectOrgan(organ: OrganInfo): void {\n    if (!this.multiselect) {\n      this.selectedOrgans = [organ];\n    } else {\n      if (this.selectedOrgans.includes(organ)) {\n        this.selectedOrgans = this.selectedOrgans.filter((selectedOrgan) => organ !== selectedOrgan);\n      } else {\n        this.selectedOrgans = this.selectedOrgans.concat([organ]);\n      }\n    }\n    this.organsChanged.emit(this.selectedOrgans);\n  }\n\n  /**\n   * Determines whether an icon represents a currently selected organ\n   *\n   * @param icon The icon of interest\n   * @returns true if selected\n   */\n  isSelected(organ: OrganInfo): boolean {\n    return this.selectedOrgans.includes(organ) ? true : false;\n  }\n\n  /**\n   * Disables scrolling if the list of organs is smaller than the container, otherwise sets onLeft and onRight as normal\n   */\n  set(): void {\n    const { itemList, itemContainer, carouselContainer } = this;\n    const val = parseInt(itemList.nativeElement.style.left, 10) || 0;\n    if (itemList.nativeElement.offsetWidth >= this.organList.length * this.step) {\n      itemList.nativeElement.style.left = '0px';\n      this.onLeft = true;\n      this.onRight = true;\n    } else {\n      this.setLeftRight(val);\n      const listLength = this.step * Math.floor(carouselContainer.nativeElement.offsetWidth / this.step) - 64;\n      itemContainer.nativeElement.style.width = `${listLength}px`;\n    }\n  }\n\n  /**\n   * Responsively sets width of the item container\n   */\n  setWidth(): void {\n    const { itemContainer, carouselContainer } = this;\n    const listLength = this.step * Math.floor(carouselContainer.nativeElement.offsetWidth / this.step) - 64;\n    itemContainer.nativeElement.style.width = `${listLength}px`;\n  }\n\n  /**\n   * Sets onLeft and onRight according to where the item list is scrolled\n   */\n  setLeftRight(val: number): void {\n    const { itemContainer } = this;\n    this.onLeft = val === 0 ? true : false;\n    this.onRight = val \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganSelectorModule.html":{"url":"modules/OrganSelectorModule.html","title":"module - OrganSelectorModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganSelectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrganSelectorModule\n\n\n\ncluster_OrganSelectorModule_declarations\n\n\n\ncluster_OrganSelectorModule_exports\n\n\n\n\nOrganSelectorComponent\n\nOrganSelectorComponent\n\n\n\nOrganSelectorModule\n\nOrganSelectorModule\n\nOrganSelectorModule -->\n\nOrganSelectorComponent->OrganSelectorModule\n\n\n\n\n\nOrganSelectorComponent \n\nOrganSelectorComponent \n\nOrganSelectorComponent  -->\n\nOrganSelectorModule->OrganSelectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/organ-selector/organ-selector.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OrganSelectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrganSelectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrganSelectorComponent } from './organ-selector.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [OrganSelectorComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatTooltipModule\n  ],\n  exports: [OrganSelectorComponent]\n})\nexport class OrganSelectorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluckUniqueOptions.html":{"url":"interfaces/PluckUniqueOptions.html","title":"interface - PluckUniqueOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PluckUniqueOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n        \n\n\n            \n                Description\n            \n            \n                Options for pluckUnique operator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            compare\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        compare\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        compare:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom comparison for determining distinct values\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { OperatorFunction } from 'rxjs';\nimport { distinctUntilChanged, pluck, shareReplay } from 'rxjs/operators';\n\n\n/**\n * Options for `pluckUnique` operator\n */\nexport interface PluckUniqueOptions {\n  /**\n   * Custom comparison for determining distinct values\n   */\n  compare?: (lhs: T, rhs: T) => boolean;\n}\n\n\n/**\n * Default options\n */\nconst DEFAULT_OPTIONS: PluckUniqueOptions = {};\n\n\n/**\n * Combines the functionaliy of `pluck` and `distinctUntilChanged`\n * as well as adding a `shareReplay`.\n *\n * @param {...string} props Properties to pluck\n * @param [opts] Additional options\n * @returns An `Observable` operator\n */\nexport function pluckUnique(k1: K1, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, k4: K4, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(...props: [string, ...string[]]): OperatorFunction;\nexport function pluckUnique(...props: [string, ...string[], PluckUniqueOptions]): OperatorFunction;\nexport function pluckUnique(...props: unknown[]): OperatorFunction {\n  const last = props[props.length - 1];\n  let keys = props as string[];\n  let opts = DEFAULT_OPTIONS;\n\n  if (typeof last === 'object') {\n    opts = last as PluckUniqueOptions;\n    keys = keys.slice(0, -1);\n  }\n\n  return source => source.pipe(\n    pluck(...keys),\n    distinctUntilChanged(opts.compare),\n    shareReplay(1)\n  );\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Segment.html":{"url":"interfaces/Segment.html","title":"interface - Segment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Segment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n        \n\n\n            \n                Description\n            \n            \n                A segment of text with additional classes and styles\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            styles\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Classes to add to the text container\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        styles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        styles:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Styles to set on the text container\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The piece of text to display\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { DecoratedRange, normalize } from './decorated-range';\n\n\n// Reexport DecoratedRange\nexport { DecoratedRange };\n\n/** A segment of text with additional classes and styles */\ninterface Segment {\n  /** The piece of text to display */\n  text: string;\n  /** Classes to add to the text container */\n  classes: string[];\n  /** Styles to set on the text container */\n  styles: Record;\n}\n\n/** Represents an operation to apply to the stack when building segments */\ninterface StackOp {\n  /** Text index at which the changes takes effect */\n  index: number;\n  /** Decorations to add */\n  added: DecoratedRange[];\n  /** Decorations to remove */\n  removed: DecoratedRange[];\n}\n\n\n/**\n * Class to display text with additional styling on ranges of the text.\n */\n@Component({\n  selector: 'ccf-decorated-text',\n  templateUrl: './decorated-text.component.html',\n  styleUrls: ['./decorated-text.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DecoratedTextComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-decorated-text';\n\n  /**\n   * Text to display\n   */\n  @Input() text: string;\n\n  /**\n   * Classes and styles to apply to ranges of the text.\n   * For overlapping ranges later values takes precedence.\n   */\n  @Input() decorations?: Partial[];\n\n  /**\n   * Computed segments of text with decorations resolved.\n   */\n  segments: Segment[] = [];\n\n  /**\n   * Apply changes and recalculate cached values.\n   *\n   * @param changes Instance properties that have changed\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('text' in changes || 'decorations' in changes) {\n      this.segments = this.createSegments();\n    }\n  }\n\n  /**\n   * Creates an array of decorated text segments based on\n   * the latest text and decorations.\n   *\n   * @returns The new segments\n   */\n  private createSegments(): Segment[] {\n    const { text } = this;\n    if (!text) { // No styling can be applied to empty text fields\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const decorations = this.getNormalizedDecorations();\n    if (decorations.length === 0) { // No styling available\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const stackOps = this.createStackOps(decorations);\n    const segments: Segment[] = [];\n    let stack: DecoratedRange[] = [];\n    let lastIndex = 0;\n\n    // If the first op starts at index zero apply stack changes\n    // but don't push a segment by shifing out the first op\n    if (stackOps[0].index === 0) {\n      stack = this.updateStack(stack, stackOps.shift() as StackOp);\n    }\n\n    // Build segments based on the stack operations\n    for (const op of stackOps) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex, op.index), stack\n      ));\n\n      lastIndex = op.index;\n      stack = this.updateStack(stack, op);\n    }\n\n    // Push the last segment if not already done\n    if (lastIndex !== text.length) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex), stack\n      ));\n    }\n\n    return segments;\n  }\n\n  /**\n   * Creates an ordered array of stack operations to apply when building segments.\n   *\n   * @param ranges The decorated ranges to apply\n   * @returns The array of operations\n   */\n  private createStackOps(ranges: DecoratedRange[]): StackOp[] {\n    const ops: Record = {};\n    const getOp = (index: number) => (ops[index] ??= { index, added: [], removed: [] });\n\n    for (const range of ranges) {\n      getOp(range.start).added.push(range);\n      getOp(range.end).removed.push(range);\n    }\n\n    return Object.entries(ops)\n      .sort((i1, i2) => +i1[0] - +i2[0]) // Sort by index\n      .map(entry => entry[1]);\n  }\n\n  /**\n   * Applies the stack changes specified by the stack operation.\n   *\n   * @param stack The current stack\n   * @param op The operation\n   * @returns The new stack\n   */\n  private updateStack(stack: DecoratedRange[], op: StackOp): DecoratedRange[] {\n    return stack\n      .filter(item => !op.removed.includes(item))\n      // Note - A new array is created by the above filter statement\n      // so it is safe to modify it with concat\n      .concat(op.added);\n  }\n\n  /**\n   * Normalizes and filters valid decorated ranges.\n   *\n   * @returns The normalized ranges with properties filled\n   */\n  private getNormalizedDecorations(): DecoratedRange[] {\n    const { decorations = [], text: { length } } = this;\n    return decorations\n      // Turn partials into full objects\n      .map(range => normalize(range, length))\n      // Remove empty and out of bounds ranges\n      .filter(range => range.start (\n      (result, range) => result.concat(range.classes),\n      []\n    );\n    const styles = decorations.reduce(\n      (result, range) => ({ ...result, ...range.styles }),\n      {}\n    );\n\n    return { text, classes, styles };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StackOp.html":{"url":"interfaces/StackOp.html","title":"interface - StackOp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StackOp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an operation to apply to the stack when building segments\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            added\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            removed\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        added\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        added:         DecoratedRange[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DecoratedRange[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Decorations to add\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text index at which the changes takes effect\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removed:         DecoratedRange[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DecoratedRange[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Decorations to remove\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { DecoratedRange, normalize } from './decorated-range';\n\n\n// Reexport DecoratedRange\nexport { DecoratedRange };\n\n/** A segment of text with additional classes and styles */\ninterface Segment {\n  /** The piece of text to display */\n  text: string;\n  /** Classes to add to the text container */\n  classes: string[];\n  /** Styles to set on the text container */\n  styles: Record;\n}\n\n/** Represents an operation to apply to the stack when building segments */\ninterface StackOp {\n  /** Text index at which the changes takes effect */\n  index: number;\n  /** Decorations to add */\n  added: DecoratedRange[];\n  /** Decorations to remove */\n  removed: DecoratedRange[];\n}\n\n\n/**\n * Class to display text with additional styling on ranges of the text.\n */\n@Component({\n  selector: 'ccf-decorated-text',\n  templateUrl: './decorated-text.component.html',\n  styleUrls: ['./decorated-text.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DecoratedTextComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-decorated-text';\n\n  /**\n   * Text to display\n   */\n  @Input() text: string;\n\n  /**\n   * Classes and styles to apply to ranges of the text.\n   * For overlapping ranges later values takes precedence.\n   */\n  @Input() decorations?: Partial[];\n\n  /**\n   * Computed segments of text with decorations resolved.\n   */\n  segments: Segment[] = [];\n\n  /**\n   * Apply changes and recalculate cached values.\n   *\n   * @param changes Instance properties that have changed\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('text' in changes || 'decorations' in changes) {\n      this.segments = this.createSegments();\n    }\n  }\n\n  /**\n   * Creates an array of decorated text segments based on\n   * the latest text and decorations.\n   *\n   * @returns The new segments\n   */\n  private createSegments(): Segment[] {\n    const { text } = this;\n    if (!text) { // No styling can be applied to empty text fields\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const decorations = this.getNormalizedDecorations();\n    if (decorations.length === 0) { // No styling available\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const stackOps = this.createStackOps(decorations);\n    const segments: Segment[] = [];\n    let stack: DecoratedRange[] = [];\n    let lastIndex = 0;\n\n    // If the first op starts at index zero apply stack changes\n    // but don't push a segment by shifing out the first op\n    if (stackOps[0].index === 0) {\n      stack = this.updateStack(stack, stackOps.shift() as StackOp);\n    }\n\n    // Build segments based on the stack operations\n    for (const op of stackOps) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex, op.index), stack\n      ));\n\n      lastIndex = op.index;\n      stack = this.updateStack(stack, op);\n    }\n\n    // Push the last segment if not already done\n    if (lastIndex !== text.length) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex), stack\n      ));\n    }\n\n    return segments;\n  }\n\n  /**\n   * Creates an ordered array of stack operations to apply when building segments.\n   *\n   * @param ranges The decorated ranges to apply\n   * @returns The array of operations\n   */\n  private createStackOps(ranges: DecoratedRange[]): StackOp[] {\n    const ops: Record = {};\n    const getOp = (index: number) => (ops[index] ??= { index, added: [], removed: [] });\n\n    for (const range of ranges) {\n      getOp(range.start).added.push(range);\n      getOp(range.end).removed.push(range);\n    }\n\n    return Object.entries(ops)\n      .sort((i1, i2) => +i1[0] - +i2[0]) // Sort by index\n      .map(entry => entry[1]);\n  }\n\n  /**\n   * Applies the stack changes specified by the stack operation.\n   *\n   * @param stack The current stack\n   * @param op The operation\n   * @returns The new stack\n   */\n  private updateStack(stack: DecoratedRange[], op: StackOp): DecoratedRange[] {\n    return stack\n      .filter(item => !op.removed.includes(item))\n      // Note - A new array is created by the above filter statement\n      // so it is safe to modify it with concat\n      .concat(op.added);\n  }\n\n  /**\n   * Normalizes and filters valid decorated ranges.\n   *\n   * @returns The normalized ranges with properties filled\n   */\n  private getNormalizedDecorations(): DecoratedRange[] {\n    const { decorations = [], text: { length } } = this;\n    return decorations\n      // Turn partials into full objects\n      .map(range => normalize(range, length))\n      // Remove empty and out of bounds ranges\n      .filter(range => range.start (\n      (result, range) => result.concat(range.classes),\n      []\n    );\n    const styles = decorations.reduce(\n      (result, range) => ({ ...result, ...range.styles }),\n      {}\n    );\n\n    return { text, classes, styles };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StoreDebugComponent.html":{"url":"components/StoreDebugComponent.html","title":"component - StoreDebugComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StoreDebugComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts\n\n\n\n    \n        Description\n    \n    \n        Simple component for displaying the current values in the data store.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-store-debug\n            \n\n            \n                styleUrls\n                ./store-debug.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./store-debug.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Private\n                                root\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:37\n                            \n                        \n\n                \n                    \n                            Creates an instance of store debug component.\nSets up the store data listeners.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The data store.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Change detection for this component.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-store-debug\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-store-debug'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:58\n                \n            \n\n\n            \n                \n                    Cleans up subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-store-debug'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record>\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:34\n                        \n                    \n\n            \n                \n                    Latest store data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:37\n                        \n                    \n\n            \n                \n                    Subscriptions managed by this component\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:26\n                                \n                            \n                    \n                        \n                                Gets the store data as a list of state name to key-value pairs\n\n\n                                \n                                    Returns :         KVList\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnDestroy, ChangeDetectorRef, HostBinding } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { Subscription } from 'rxjs';\n\n/** Key-Value pair */\nexport type KVPair = [string, T];\n/** Array of Key-Value pairs */\nexport type KVList = KVPair[];\n\n/**\n * Simple component for displaying the current values in the data store.\n */\n@Component({\n  selector: 'ccf-store-debug',\n  templateUrl: './store-debug.component.html',\n  styleUrls: ['./store-debug.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StoreDebugComponent implements OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-store-debug';\n\n  /**\n   * Gets the store data as a list of state name to key-value pairs\n   */\n  get data(): KVList {\n    const states: KVList> = Object.entries(this.root);\n    const stateValues: KVList = states.map(([key, values]) => [key, Object.entries(values)]);\n    const statesWithData = stateValues.filter(([_key, values]) => values.length > 0);\n    return statesWithData;\n  }\n\n  /** Latest store data */\n  private root: Record> = {};\n\n  /** Subscriptions managed by this component */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of store debug component.\n   * Sets up the store data listeners.\n   *\n   * @param store The data store.\n   * @param cdr Change detection for this component.\n   */\n  constructor(store: Store, cdr: ChangeDetectorRef) {\n    const sub = store.subscribe(root => {\n      this.root = root as Record>;\n      cdr.markForCheck();\n    });\n\n    this.subscriptions.add(sub);\n  }\n\n  /**\n   * Cleans up subscriptions\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  {{ state[0] }}\n  \n    \n      {{ kv[0] }}: {{ kv[1] | json }}\n    \n  \n\n\n    \n\n    \n                \n                    ./store-debug.component.scss\n                \n                :host {\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ state[0] }}            {{ kv[0] }}: {{ kv[1] | json }}      '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'StoreDebugComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreDebugModule.html":{"url":"modules/StoreDebugModule.html","title":"module - StoreDebugModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreDebugModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StoreDebugModule\n\n\n\ncluster_StoreDebugModule_declarations\n\n\n\ncluster_StoreDebugModule_exports\n\n\n\n\nStoreDebugComponent\n\nStoreDebugComponent\n\n\n\nStoreDebugModule\n\nStoreDebugModule\n\nStoreDebugModule -->\n\nStoreDebugComponent->StoreDebugModule\n\n\n\n\n\nStoreDebugComponent \n\nStoreDebugComponent \n\nStoreDebugComponent  -->\n\nStoreDebugModule->StoreDebugComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/store-debug/store-debug.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StoreDebugComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StoreDebugComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StoreDebugComponent } from './store-debug.component';\n\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [StoreDebugComponent],\n  exports: [StoreDebugComponent]\n})\nexport class StoreDebugModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextSearchComponent.html":{"url":"components/TextSearchComponent.html","title":"component - TextSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n\n\n\n    \n        Description\n    \n    \n        A text search bar with optional autocompletion functionality.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-text-search\n            \n\n            \n                styleUrls\n                ./text-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Readonly\n                                controller\n                            \n                            \n                                    Readonly\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                getOptions\n                            \n                            \n                                optionDisplay\n                            \n                            \n                                optionId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoCompleter\n                            \n                            \n                                maxOptions\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                optionSelected\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultMaxOptions: number)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:100\n                            \n                        \n\n                \n                    \n                            Creates an instance of text search component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultMaxOptions\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The default value for maxOptions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoCompleter\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:76\n                            \n                        \n                \n                    \n                        Function providing the autocomplete suggestions.\nReceives the latest search bar text and the maximum of suggestions to provide.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxOptions\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:70\n                            \n                        \n                \n                    \n                        Maximum number of autocomplete suggestions to show simultaneously\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Search...'\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:53\n                            \n                        \n                \n                    \n                        Placeholder text for the search bar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:59\n                            \n                        \n                \n                    \n                        The text to show on the search bar\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        optionSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:86\n                            \n                        \n                \n                    \n                        Emits when an autocomplete option has been selected\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:81\n                            \n                        \n                \n                    \n                        Emits when the search bar text changes\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-text-search\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-text-search'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:48\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(search: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:120\n                \n            \n\n\n            \n                \n                    Fetches the latest autocomplete suggestions for the provided search text.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    search\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The search text to find suggestions for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The found suggestions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionDisplay\n                        \n                    \n                \n            \n            \n                \noptionDisplay(option: AutoCompleteOption | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:139\n                \n            \n\n\n            \n                \n                    Text to show in search bar when an autocomplete option is selected.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                AutoCompleteOption | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The autocomplete option\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The displayed text\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionId\n                        \n                    \n                \n            \n            \n                \noptionId(_index: number, option: AutoCompleteOption)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:150\n                \n            \n\n\n            \n                \n                    Gets an unique identifier for an autocomplete option object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Unused\n\n                                    \n                                \n                                \n                                    option\n                                    \n                                                AutoCompleteOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The option object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-text-search'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:48\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        controller\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:91\n                        \n                    \n\n            \n                \n                    Form controller for search bar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (this.controller.valueChanges as Observable).pipe(\n    startWith(''),\n    distinctUntilChanged(),\n    switchMap(this.getOptions)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:96\n                        \n                    \n\n            \n                \n                    Emits the latest autocomplete suggestions\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:59\n                                \n                            \n                    \n                        \n                                The text to show on the search bar\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:63\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Inject, InjectionToken, Input, Output,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { bind as Bind } from 'bind-decorator';\nimport { from, Observable, ObservableInput } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, switchMap, take } from 'rxjs/operators';\n\nimport { DecoratedRange } from '../decorated-text/decorated-range';\n\n\n/** A single suggestion to show in autocomplete  */\nexport interface AutoCompleteOption {\n  /** A unique id */\n  id: unknown;\n  /** The displayed label */\n  label: string;\n  /** Optional styling of the label */\n  decorations?: Partial[];\n}\n\n/**\n * Token to provide a default for the maximum number of\n * autocomplete suggestions to show at the same time.\n */\nexport const DEFAULT_MAX_OPTIONS = new InjectionToken(\n  'Maximum number of autocomplete options displayed',\n  {\n    providedIn: 'root',\n    factory(): number {\n      return 10;\n    }\n  }\n);\n\n\n/**\n * A text search bar with optional autocompletion functionality.\n */\n@Component({\n  selector: 'ccf-text-search',\n  templateUrl: './text-search.component.html',\n  styleUrls: ['./text-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TextSearchComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-text-search';\n\n  /**\n   * Placeholder text for the search bar\n   */\n  @Input() placeholder = 'Search...';\n\n  /**\n   * The text to show on the search bar\n   */\n  @Input()\n  get value(): string {\n    return this.controller.value as string;\n  }\n\n  set value(val: string) {\n    this.controller.setValue(val, { emitEvent: false });\n  }\n\n  /**\n   * Maximum number of autocomplete suggestions to show simultaneously\n   */\n  @Input() maxOptions?: number;\n\n  /**\n   * Function providing the autocomplete suggestions.\n   * Receives the latest search bar text and the maximum of suggestions to provide.\n   */\n  @Input() autoCompleter?: (search: string, max: number) => ObservableInput;\n\n  /**\n   * Emits when the search bar text changes\n   */\n  @Output() readonly valueChange: Observable;\n\n  /**\n   * Emits when an autocomplete option has been selected\n   */\n  @Output() readonly optionSelected = new EventEmitter();\n\n  /**\n   * Form controller for search bar\n   */\n  readonly controller = new FormControl();\n\n  /**\n   * Emits the latest autocomplete suggestions\n   */\n  readonly options = (this.controller.valueChanges as Observable).pipe(\n    startWith(''),\n    distinctUntilChanged(),\n    switchMap(this.getOptions)\n  );\n\n  /**\n   * Creates an instance of text search component.\n   *\n   * @param defaultMaxOptions The default value for `maxOptions`\n   */\n  constructor(\n    @Inject(DEFAULT_MAX_OPTIONS) private readonly defaultMaxOptions: number\n  ) {\n    this.valueChange = this.controller.valueChanges;\n  }\n\n  /**\n   * Fetches the latest autocomplete suggestions for the provided search text.\n   *\n   * @param search The search text to find suggestions for\n   * @returns The found suggestions\n   */\n  @Bind\n  private async getOptions(search: string): Promise {\n    const { autoCompleter, maxOptions = this.defaultMaxOptions } = this;\n    if (!autoCompleter || maxOptions  array.length \n    \n\n    \n        \n  \n    \n      \n    \n\n    \n\n    \n      \n        \n        \n      \n    \n\n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./text-search.component.scss\n                \n                :host {\n  display: block;\n\n  .form .form-field {\n    width: 100%;\n\n    .input {\n      margin-left: 0.5rem;\n    }\n  }\n\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-wrapper {\n      margin: 0;\n\n      .mat-form-field-flex {\n        align-items: center;\n\n        .mat-form-field-infix {\n          height: 3rem;\n          border: none;\n        }\n\n        .mat-form-field-suffix {\n          top: 0;\n          border: none;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TextSearchModule.html":{"url":"modules/TextSearchModule.html","title":"module - TextSearchModule","body":"\n                   \n\n\n\n\n    Modules\n    TextSearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TextSearchModule\n\n\n\ncluster_TextSearchModule_declarations\n\n\n\ncluster_TextSearchModule_imports\n\n\n\ncluster_TextSearchModule_exports\n\n\n\n\nTextSearchComponent\n\nTextSearchComponent\n\n\n\nTextSearchModule\n\nTextSearchModule\n\nTextSearchModule -->\n\nTextSearchComponent->TextSearchModule\n\n\n\n\n\nMatPrefix \n\nMatPrefix \n\nMatPrefix  -->\n\nTextSearchModule->MatPrefix \n\n\n\n\n\nMatSuffix \n\nMatSuffix \n\nMatSuffix  -->\n\nTextSearchModule->MatSuffix \n\n\n\n\n\nTextSearchComponent \n\nTextSearchComponent \n\nTextSearchComponent  -->\n\nTextSearchModule->TextSearchComponent \n\n\n\n\n\nDecoratedTextModule\n\nDecoratedTextModule\n\nTextSearchModule -->\n\nDecoratedTextModule->TextSearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/text-search/text-search.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TextSearchComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DecoratedTextModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MatPrefix\n                        \n                        \n                            MatSuffix\n                        \n                        \n                            TextSearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule, MatPrefix, MatSuffix } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { DecoratedTextModule } from '../decorated-text/decorated-text.module';\nimport { TextSearchComponent } from './text-search.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n\n    DecoratedTextModule\n  ],\n  declarations: [TextSearchComponent],\n  exports: [\n    TextSearchComponent,\n\n    // Reexport prefix/suffix markers\n    MatPrefix,\n    MatSuffix\n  ]\n})\nexport class TextSearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrackingPopupComponent.html":{"url":"components/TrackingPopupComponent.html","title":"component - TrackingPopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TrackingPopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-tracking-popup\n            \n\n            \n                styleUrls\n                ./tracking-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tracking-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                container\n                            \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                            \n                                showButton\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    allowTelemetry\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, consentService: ConsentService, data: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-tracking-popup\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tracking-popup'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showButton\n                        \n                    \n                \n            \n            \n                \nshowButton(button: \"opt-in\" | \"opt-out\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    button\n                                    \n                                            \"opt-in\" | \"opt-out\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit(entry: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tracking-popup'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_SNACK_BAR_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        allowTelemetry\n                    \n                \n\n                \n                    \n                        getallowTelemetry()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:15\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\nimport { ConsentService, Consent } from 'ccf-shared/analytics';\n\n\n@Component({\n  selector: 'ccf-tracking-popup',\n  templateUrl: './tracking-popup.component.html',\n  styleUrls: ['./tracking-popup.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TrackingPopupComponent {\n  @HostBinding('class') readonly clsName = 'ccf-tracking-popup';\n\n  get allowTelemetry(): Consent {\n    return this.consentService.consent;\n  }\n\n  container: HTMLElement;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  constructor(elementRef: ElementRef, readonly consentService: ConsentService, @Inject(MAT_SNACK_BAR_DATA) public data: any) {\n    this.container = elementRef.nativeElement;\n  }\n\n  dismiss(): void {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    this.data.preClose();\n  }\n\n  submit(entry: boolean): void {\n    this.consentService.setConsent(entry ? 'given' : 'rescinded');\n    this.dismiss();\n  }\n\n  showButton(button: 'opt-in' | 'opt-out'): boolean {\n    const { allowTelemetry } = this;\n    if (allowTelemetry === 'not-set') {\n      return true;\n    } else {\n      return button === 'opt-in' ? allowTelemetry === 'rescinded' : allowTelemetry === 'given';\n    }\n  }\n}\n\n    \n\n    \n        We log usage to improve this service.\n\n  {{allowTelemetry === 'not-set' ? 'I understand' : 'Opt in'}}\n\nOpt out\n    \n\n    \n                \n                    ./tracking-popup.component.scss\n                \n                :host {\n  display: flex;\n  align-items: center;\n  min-width: 400px;\n  color: rgba(255, 255, 255, 0.7);\n  background: #323232;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n  z-index: 9999;\n\n  p {\n    margin: 24px;\n  }\n\n  button {\n    margin: 1rem;\n    min-width: 6rem;\n    background-color: #007cbe;\n    display: flex;\n    justify-content: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'We log usage to improve this service.  {{allowTelemetry === \\'not-set\\' ? \\'I understand\\' : \\'Opt in\\'}}Opt out'\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'TrackingPopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrackingPopupModule.html":{"url":"modules/TrackingPopupModule.html","title":"module - TrackingPopupModule","body":"\n                   \n\n\n\n\n    Modules\n    TrackingPopupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TrackingPopupModule\n\n\n\ncluster_TrackingPopupModule_exports\n\n\n\ncluster_TrackingPopupModule_declarations\n\n\n\n\nTrackingPopupComponent\n\nTrackingPopupComponent\n\n\n\nTrackingPopupModule\n\nTrackingPopupModule\n\nTrackingPopupModule -->\n\nTrackingPopupComponent->TrackingPopupModule\n\n\n\n\n\nTrackingPopupComponent \n\nTrackingPopupComponent \n\nTrackingPopupComponent  -->\n\nTrackingPopupModule->TrackingPopupComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TrackingPopupComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TrackingPopupComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TrackingPopupComponent } from './tracking-popup.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule\n  ],\n  declarations: [TrackingPopupComponent],\n  exports: [TrackingPopupComponent]\n})\nexport class TrackingPopupModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TrackingState.html":{"url":"injectables/TrackingState.html","title":"injectable - TrackingState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TrackingState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/analytics/tracking.state.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setAllowTelemetry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setAllowTelemetry\n                        \n                    \n                \n            \n            \n                \nsetAllowTelemetry(allowTelemetry: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/analytics/tracking.state.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    allowTelemetry\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\n\nexport interface TrackingStateModel {\n  allowTelemetry?: boolean;\n}\n\nexport const LOCAL_STORAGE_ALLOW_TELEMETRY_KEY = 'ALLOW_TELEMETRY';\nexport const INITIAL_TELEMETRY_SETTING = getTelemetryStorageSetting();\n\nfunction getTelemetryStorageSetting(): boolean | undefined {\n  const value = localStorage.getItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY);\n  return value === null ? undefined : value.toLowerCase() === 'true';\n}\n\n@StateRepository()\n@State({\n  name: 'tracking',\n  defaults: {\n    allowTelemetry: INITIAL_TELEMETRY_SETTING\n  }\n})\n@Injectable()\nexport class TrackingState extends NgxsImmutableDataRepository {\n  @DataAction()\n  setAllowTelemetry(allowTelemetry: boolean): void {\n    const oldValue = getTelemetryStorageSetting();\n    localStorage.setItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY, allowTelemetry.toString());\n    this.ctx.patchState({ allowTelemetry });\n\n    if (oldValue !== undefined || allowTelemetry === false) {\n      // This ensures that if telemetry is disabled that it _WONT_ send anything to Google Analytics\n      location.reload();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrackingStateModel.html":{"url":"interfaces/TrackingStateModel.html","title":"interface - TrackingStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TrackingStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/analytics/tracking.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            allowTelemetry\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowTelemetry\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowTelemetry:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\n\nexport interface TrackingStateModel {\n  allowTelemetry?: boolean;\n}\n\nexport const LOCAL_STORAGE_ALLOW_TELEMETRY_KEY = 'ALLOW_TELEMETRY';\nexport const INITIAL_TELEMETRY_SETTING = getTelemetryStorageSetting();\n\nfunction getTelemetryStorageSetting(): boolean | undefined {\n  const value = localStorage.getItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY);\n  return value === null ? undefined : value.toLowerCase() === 'true';\n}\n\n@StateRepository()\n@State({\n  name: 'tracking',\n  defaults: {\n    allowTelemetry: INITIAL_TELEMETRY_SETTING\n  }\n})\n@Injectable()\nexport class TrackingState extends NgxsImmutableDataRepository {\n  @DataAction()\n  setAllowTelemetry(allowTelemetry: boolean): void {\n    const oldValue = getTelemetryStorageSetting();\n    localStorage.setItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY, allowTelemetry.toString());\n    this.ctx.patchState({ allowTelemetry });\n\n    if (oldValue !== undefined || allowTelemetry === false) {\n      // This ensures that if telemetry is disabled that it _WONT_ send anything to Google Analytics\n      location.reload();\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkerCCFDatabaseDataSourceService.html":{"url":"injectables/WorkerCCFDatabaseDataSourceService.html","title":"injectable - WorkerCCFDatabaseDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WorkerCCFDatabaseDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CCFDatabaseDataSourceBaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                database$\n                            \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createDatabase\n                            \n                            \n                                    Protected\n                                    Abstract\n                                createWorker\n                            \n                            \n                                    Private\n                                    Async\n                                connectDatabase\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDatabase(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:65\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CCFDatabaseManager\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        createWorker\n                        \n                    \n                \n            \n            \n                \n                    \n                    createWorker(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Worker\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        connectDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectDatabase(manager: CCFDatabaseManager, config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    manager\n                                    \n                                                CCFDatabaseManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        database$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         CCFDatabaseDataSourceBaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         CCFDatabaseDataSourceBaseService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/XYZTriplet.html":{"url":"interfaces/XYZTriplet.html","title":"interface - XYZTriplet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  XYZTriplet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/body-ui/body-ui.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                                \n                                        \n                                            z\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit, Component, ElementRef, EventEmitter, HostBinding, Input, OnDestroy, Output, ViewChild,\n} from '@angular/core';\nimport { BodyUI, NodeClickEvent, NodeDragEvent, SpatialSceneNode } from 'ccf-body-ui';\nimport { Subscription } from 'rxjs';\n\n\ninterface XYZTriplet {\n  x: T;\n  y: T;\n  z: T;\n}\n\n/**\n * Component that handles displaying the 3D models in the stage\n */\n@Component({\n  selector: 'ccf-body-ui',\n  templateUrl: './body-ui.component.html',\n  styleUrls: ['./body-ui.component.scss']\n})\nexport class BodyUiComponent implements AfterViewInit, OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-body-ui';\n\n  @Input()\n  get scene(): SpatialSceneNode[] {\n    return this._scene;\n  }\n\n  set scene(nodes: SpatialSceneNode[]) {\n    this._scene = nodes;\n    this.bodyUI?.setScene(nodes);\n  }\n\n  @Input()\n  get rotation(): number {\n    return this._rotation;\n  }\n\n  set rotation(value: number) {\n    this._rotation = value;\n    this.bodyUI?.setRotation(value);\n  }\n\n  @Input()\n  get rotationX(): number {\n    return this._rotationX;\n  }\n\n  set rotationX(value: number) {\n    this._rotationX = value;\n    this.bodyUI?.setRotationX(value);\n  }\n\n  @Input()\n  get zoom(): number {\n    return this._zoom;\n  }\n\n  set zoom(value: number) {\n    this._zoom = value;\n    this.bodyUI?.setZoom(value);\n  }\n\n  @Input()\n  get target(): [number, number, number] {\n    return this._target;\n  }\n\n  set target(value: [number, number, number]) {\n    this._target = value;\n    this.bodyUI?.setTarget(value);\n  }\n\n  @Input()\n  get bounds(): XYZTriplet {\n    return this._bounds;\n  }\n\n  set bounds(value: XYZTriplet) {\n    this._bounds = value;\n    this.zoomToBounds(value);\n  }\n\n  @Input()\n  get camera(): string {\n    return this._camera;\n  }\n\n  set camera(value: string) {\n    this._camera = value;\n  }\n\n  @Output()\n  readonly rotationChange = new EventEmitter();\n\n  @Output()\n  readonly nodeDrag = new EventEmitter();\n\n  @Output()\n  readonly nodeClick = new EventEmitter();\n\n  @Output()\n  readonly nodeHoverStart = new EventEmitter();\n\n  @Output()\n  readonly nodeHoverStop = new EventEmitter();\n\n  @Output()\n  readonly initialized = new EventEmitter();\n\n  @Input()\n  get interactive(): boolean {\n    return this._interactive;\n  }\n\n  set interactive(value: boolean) {\n    this._interactive = value;\n    if (this.bodyUI) {\n      this.recreateBodyUI();\n    }\n  }\n\n  private _interactive = true;\n  private _rotation = 0;\n  private _rotationX = 0;\n  private _zoom = 9.5;\n  private _target: [number, number, number] = [0, 0, 0];\n  private _bounds: XYZTriplet;\n  private _scene: SpatialSceneNode[] = [];\n  private subscriptions: Subscription[] = [];\n  private _camera: string;\n\n  /**\n   * Instance of the body UI class for rendering the deckGL scene\n   */\n  bodyUI: BodyUI;\n\n  /**\n   * Reference to the div we are using to mount the body UI to.\n   */\n  @ViewChild('bodyCanvas', { read: ElementRef }) bodyCanvas: ElementRef;\n\n  /**\n   * Performs setup required after initialization\n   */\n  ngAfterViewInit(): void {\n    this.setupBodyUI();\n  }\n\n  zoomToBounds(bounds: XYZTriplet, margin = { x: 48, y: 48 }): void {\n    if (this.bodyCanvas) {\n      const { width, height } = this.bodyCanvas.nativeElement;\n      const pxRatio = window.devicePixelRatio;\n      const zoom = Math.min(\n        Math.log2((width - margin.x) / pxRatio / bounds.x),\n        Math.log2((height - margin.y) / pxRatio / bounds.y)\n      );\n      this.zoom = zoom;\n    }\n  }\n\n  /**\n   * Set up required to render the body UI with the scene nodes.\n   */\n  private async setupBodyUI(): Promise {\n    const canvas = this.bodyCanvas.nativeElement;\n    const bodyUI = new BodyUI({\n      id: 'body-ui',\n      canvas,\n      zoom: this.zoom,\n      target: [0, 0, 0],\n      rotation: 0,\n      minRotationX: -75,\n      maxRotationX: 75,\n      interactive: this.interactive,\n      camera: this.camera\n    });\n    canvas.addEventListener('contextmenu', evt => evt.preventDefault());\n    await bodyUI.initialize();\n    this.bodyUI = bodyUI;\n    (window as unknown as { bodyUI: unknown }).bodyUI = bodyUI;\n    if (this.scene?.length > 0) {\n      this.bodyUI.setScene(this.scene);\n    }\n    if (this.bounds) {\n      this.zoomToBounds(this.bounds);\n    }\n    this.subscriptions = [\n      this.bodyUI.sceneRotation$.subscribe((rotation) => this.rotationChange.next(rotation)),\n      this.bodyUI.nodeDrag$.subscribe((event) => this.nodeDrag.emit(event)),\n      this.bodyUI.nodeClick$.subscribe((event) => this.nodeClick.emit(event)),\n      this.bodyUI.nodeHoverStart$.subscribe((event) => this.nodeHoverStart.emit(event)),\n      this.bodyUI.nodeHoverStop$.subscribe((event) => this.nodeHoverStop.emit(event))\n    ];\n    this.initialized.emit();\n  }\n\n  private recreateBodyUI(): void {\n    this.clearSubscriptions();\n    this.bodyUI.finalize();\n    this.setupBodyUI();\n  }\n\n  private clearSubscriptions(): void {\n    this.subscriptions.forEach(s => s.unsubscribe());\n    this.subscriptions = [];\n  }\n\n  ngOnDestroy(): void {\n    this.clearSubscriptions();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Common Coordinate Framework (CCF) User Interfaces\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            interface\n            AnalyticsOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            function\n            initCommands\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            function\n            toAttributes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            variable\n            EAGERLY_LOADED_SERVICES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/consent.service.ts\n            \n            injectable\n            ConsentService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts\n            \n            injectable\n            GoogleAnalyticsSyncService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n            \n            injectable\n            LocalStorageSyncService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n            \n            variable\n            LOCAL_STORAGE_CONSENT_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/filter-nulls.ts\n            \n            function\n            filterNulls\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/flatten.ts\n            \n            function\n            flatten\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/inner-map.ts\n            \n            function\n            innerMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            interface\n            PluckUniqueOptions\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            variable\n            DEFAULT_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/src/public-api.ts\n            \n            variable\n            placeholder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/mouse-position-tracker.module.ts\n            \n            function\n            trackMousePosition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            injectable\n            TrackingState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            interface\n            TrackingStateModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            function\n            getTelemetryStorageSetting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            variable\n            INITIAL_TELEMETRY_SETTING\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            variable\n            LOCAL_STORAGE_ALLOW_TELEMETRY_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/body-ui/body-ui.component.ts\n            \n            component\n            BodyUiComponent\n            \n                20 %\n                (7/34)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/body-ui/body-ui.component.ts\n            \n            interface\n            XYZTriplet\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n            \n            interface\n            DecoratedRange\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n            \n            function\n            normalize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n            \n            function\n            resolveIndex\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n            \n            component\n            DecoratedTextComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n            \n            interface\n            Segment\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n            \n            interface\n            StackOp\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts\n            \n            component\n            InfoButtonComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n            \n            injectable\n            InfoButtonService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n            \n            interface\n            DocumentationContent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n            \n            variable\n            documentationURL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n            \n            component\n            InfoDialogComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n            \n            interface\n            InfoDialogData\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts\n            \n            component\n            OpacitySliderComponent\n            \n                78 %\n                (11/14)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            component\n            OrganSelectorComponent\n            \n                76 %\n                (23/30)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            interface\n            OrganInfo\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            variable\n            ALL_ORGANS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            variable\n            ALL_POSSIBLE_ORGANS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts\n            \n            component\n            StoreDebugComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n            \n            component\n            TextSearchComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n            \n            interface\n            AutoCompleteOption\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n            \n            variable\n            DEFAULT_MAX_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts\n            \n            component\n            TrackingPopupComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/config/global-config.state.ts\n            \n            injectable\n            GlobalConfigState\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts\n            \n            directive\n            NumberDirective\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            injectable\n            ApiEndpointDataSourceService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            interface\n            ApiEndpointDataSourceOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            interface\n            DefaultParams\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            interface\n            FilterParams\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            cast\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            filterToParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            rangeToMinMax\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            spatialSceneNodeReviver\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            variable\n            buster$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            variable\n            CACHE_CONFIG_NO_PARAMS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            variable\n            CACHE_CONFIG_PARAMS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            injectable\n            CCFDatabaseDataSourceBaseService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            injectable\n            CCFDatabaseDataSourceService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            injectable\n            WorkerCCFDatabaseDataSourceService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            interface\n            CCFDatabaseManager\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.service.ts\n            \n            injectable\n            DataSourceService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.ts\n            \n            class\n            DelegateDataSource\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.ts\n            \n            class\n            ForwardingDataSource\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.ts\n            \n            interface\n            DataSource\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts\n            \n            injectable\n            InjectorDelegateDataSourceService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/globals/globals.service.ts\n            \n            injectable\n            GlobalsService\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/globals/globals.service.ts\n            \n            variable\n            global\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/common : ^15.126.1\n        \n            @angular/animations : ^12.1.1\n        \n            @angular/cdk : ^12.1.1\n        \n            @angular/common : ^12.1.1\n        \n            @angular/compiler : ^12.1.1\n        \n            @angular/core : ^12.1.1\n        \n            @angular/elements : ^12.1.1\n        \n            @angular/forms : ^12.1.1\n        \n            @angular/material : ^12.1.3\n        \n            @angular/platform-browser : ^12.1.1\n        \n            @angular/platform-browser-dynamic : ^12.1.1\n        \n            @angular/router : ^12.1.1\n        \n            @angular/youtube-player : ^12.1.1\n        \n            @deck.gl/core : ^8.5.7\n        \n            @deck.gl/geo-layers : ^8.5.7\n        \n            @deck.gl/layers : ^8.5.7\n        \n            @deck.gl/mesh-layers : ^8.5.7\n        \n            @loaders.gl/core : ^3.0.12\n        \n            @loaders.gl/draco : ^3.0.12\n        \n            @loaders.gl/gltf : ^3.0.12\n        \n            @luma.gl/core : ^8.5.7\n        \n            @math.gl/core : ^3.5.5\n        \n            @ngxs-labs/data : ^6.2.0\n        \n            @ngxs/logger-plugin : ^3.7.1\n        \n            @ngxs/storage-plugin : ^3.7.1\n        \n            @ngxs/store : ^3.7.1\n        \n            @rdfjs/data-model : ^1.2.0\n        \n            @types/lru-cache : ^5.1.1\n        \n            @webcomponents/webcomponentsjs : ^2.5.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.19.0\n        \n            cannon-es : ^0.18.0\n        \n            comlink : ^4.3.0\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.7.2\n        \n            dotenv : ^10.0.0\n        \n            express : ^4.17.1\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^10.0.0\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^4.6.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.0.1\n        \n            jsonld : ^5.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : ^6.0.0\n        \n            n3 : ^1.8.1\n        \n            ng5-slider : ^1.2.6\n        \n            ngx-google-analytics : ^11.2.1\n        \n            ngx-markdown : ^12.0.1\n        \n            node-fetch : ^2.6.7\n        \n            qs : ^6.10.2\n        \n            rdf-literal : ^1.2.0\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^3.6.0\n        \n            rxjs : ^6.6.7\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^6.5.1\n        \n            ts-cacheable : ^1.0.6\n        \n            tslib : ^2.1.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cast   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            filterNulls   (projects/.../filter-nulls.ts)\n                        \n                        \n                            filterToParams   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            flatten   (projects/.../flatten.ts)\n                        \n                        \n                            getTelemetryStorageSetting   (projects/.../tracking.state.ts)\n                        \n                        \n                            initCommands   (projects/.../analytics.module.ts)\n                        \n                        \n                            innerMap   (projects/.../inner-map.ts)\n                        \n                        \n                            normalize   (projects/.../decorated-range.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            rangeToMinMax   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            resolveIndex   (projects/.../decorated-range.ts)\n                        \n                        \n                            spatialSceneNodeReviver   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            toAttributes   (projects/.../analytics.module.ts)\n                        \n                        \n                            trackMousePosition   (projects/.../mouse-position-tracker.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cast\n                        \n                    \n                \n            \n            \n                \ncast()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterToParams\n                        \n                    \n                \n            \n            \n                \nfilterToParams(filter?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterParams\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rangeToMinMax\n                        \n                    \n                \n            \n            \n                \nrangeToMinMax(range, low, high)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    range\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    low\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    high\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinMax | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spatialSceneNodeReviver\n                        \n                    \n                \n            \n            \n                \nspatialSceneNodeReviver(nodes)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/filter-nulls.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        filterNulls\n                        \n                    \n                \n            \n            \n                \nfilterNulls()\n                \n            \n\n\n\n\n            \n                \n                    Removes all null and undefined values from a stream.\n\n\n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/flatten.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        flatten\n                        \n                    \n                \n            \n            \n                \nflatten()\n                \n            \n\n\n\n\n            \n                \n                    Flattens a single level of nested arrays.\n\n\n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/src/lib/analytics/tracking.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getTelemetryStorageSetting\n                        \n                    \n                \n            \n            \n                \ngetTelemetryStorageSetting()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     boolean | undefined\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/analytics/src/lib/analytics.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initCommands\n                        \n                    \n                \n            \n            \n                \ninitCommands(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     IGoogleAnalyticsCommand[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toAttributes\n                        \n                    \n                \n            \n            \n                \ntoAttributes(obj)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/inner-map.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        innerMap\n                        \n                    \n                \n            \n            \n                \ninnerMap(project)\n                \n            \n\n\n\n\n            \n                \n                    Maps the values of each emitted array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    project\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Mapping callback invoked for each element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        normalize\n                        \n                    \n                \n            \n            \n                \nnormalize(range, length)\n                \n            \n\n\n\n\n            \n                \n                    Produces a new range object based on the input where all properties have been normalized.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    range\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object to normalize.\n\n                                    \n                                \n                                \n                                    length\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Max length for indices.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DecoratedRange\n\n                    \n                    \n                        A new object where all undefined values have been replaced with defaults and\nwhere all indices have been constrained to the range [0, length].\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveIndex\n                        \n                    \n                \n            \n            \n                \nresolveIndex(index, length)\n                \n            \n\n\n\n\n            \n                \n                    Resolves and normalizes an index for indexing into an array of length length.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The index value to resolve. May be negative indicating an index from end.\n\n                                    \n                                \n                                \n                                    length\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The length of the object on which this index will be used.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        A positive index in range [0, length]\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, opts?)\n                \n            \n\n\n\n\n            \n                \n                    Combines the functionaliy of pluck and distinctUntilChanged\nas well as adding a shareReplay.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Additional options\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, k3, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, k3, k4, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k4\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, k3, k4, k5, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k4\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k5\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, k3, k4, k5, k6, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k4\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k5\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k6\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(...props: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(...props: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(...props: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-shared/src/lib/analytics/mouse-position-tracker.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        trackMousePosition\n                        \n                    \n                \n            \n            \n                \ntrackMousePosition(el, ga)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ga\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCommon Coordinate Framework (CCF) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the CCF-EUI, CCF-RUI, and CCF-Organ-Info.\nWebsite Links\n\nCCF Exploration User Interface (CCF-EUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nCCF Registration User Interface (CCF-RUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nCCF Organ Info Component (CCF-Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\n\nBackground and More Information\nFor more information about the Common Coordinate Framework (CCF), see the HuBMAP CCF Portal at https://hubmapconsortium.github.io/ccf/.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AnalyticsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BodyUiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DecoratedTextModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoDialogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MousePositionTrackerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NumbersOnlyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpacitySliderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganSelectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreDebugModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TextSearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrackingPopupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AnalyticsModule\n\n\n\ncluster_AnalyticsModule_providers\n\n\n\ncluster_BodyUiModule\n\n\n\ncluster_BodyUiModule_declarations\n\n\n\ncluster_BodyUiModule_exports\n\n\n\ncluster_DecoratedTextModule\n\n\n\ncluster_DecoratedTextModule_declarations\n\n\n\ncluster_DecoratedTextModule_exports\n\n\n\ncluster_InfoButtonModule\n\n\n\ncluster_InfoButtonModule_declarations\n\n\n\ncluster_InfoButtonModule_imports\n\n\n\ncluster_InfoButtonModule_exports\n\n\n\ncluster_InfoDialogModule\n\n\n\ncluster_InfoDialogModule_declarations\n\n\n\ncluster_InfoDialogModule_exports\n\n\n\ncluster_NumbersOnlyModule\n\n\n\ncluster_NumbersOnlyModule_declarations\n\n\n\ncluster_NumbersOnlyModule_exports\n\n\n\ncluster_OpacitySliderModule\n\n\n\ncluster_OpacitySliderModule_declarations\n\n\n\ncluster_OpacitySliderModule_exports\n\n\n\ncluster_OrganSelectorModule\n\n\n\ncluster_OrganSelectorModule_declarations\n\n\n\ncluster_OrganSelectorModule_exports\n\n\n\ncluster_StoreDebugModule\n\n\n\ncluster_StoreDebugModule_declarations\n\n\n\ncluster_StoreDebugModule_exports\n\n\n\ncluster_TextSearchModule\n\n\n\ncluster_TextSearchModule_declarations\n\n\n\ncluster_TextSearchModule_exports\n\n\n\ncluster_TrackingPopupModule\n\n\n\ncluster_TrackingPopupModule_declarations\n\n\n\ncluster_TrackingPopupModule_exports\n\n\n\n\nConsentService\n\nConsentService\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAnalyticsModule -->\n\nConsentService->AnalyticsModule\n\n\n\n\n\nGoogleAnalyticsSyncService\n\nGoogleAnalyticsSyncService\n\nAnalyticsModule -->\n\nGoogleAnalyticsSyncService->AnalyticsModule\n\n\n\n\n\nLocalStorageSyncService\n\nLocalStorageSyncService\n\nAnalyticsModule -->\n\nLocalStorageSyncService->AnalyticsModule\n\n\n\n\n\nBodyUiComponent\n\nBodyUiComponent\n\n\n\nBodyUiModule\n\nBodyUiModule\n\nBodyUiModule -->\n\nBodyUiComponent->BodyUiModule\n\n\n\n\n\nBodyUiComponent \n\nBodyUiComponent \n\nBodyUiComponent  -->\n\nBodyUiModule->BodyUiComponent \n\n\n\n\n\nDecoratedTextComponent\n\nDecoratedTextComponent\n\n\n\nDecoratedTextModule\n\nDecoratedTextModule\n\nDecoratedTextModule -->\n\nDecoratedTextComponent->DecoratedTextModule\n\n\n\n\n\nDecoratedTextComponent \n\nDecoratedTextComponent \n\nDecoratedTextComponent  -->\n\nDecoratedTextModule->DecoratedTextComponent \n\n\n\n\n\nTextSearchModule\n\nTextSearchModule\n\nTextSearchModule -->\n\nDecoratedTextModule->TextSearchModule\n\n\n\n\n\nInfoButtonComponent\n\nInfoButtonComponent\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nInfoButtonModule -->\n\nInfoButtonComponent->InfoButtonModule\n\n\n\n\n\nInfoButtonComponent \n\nInfoButtonComponent \n\nInfoButtonComponent  -->\n\nInfoButtonModule->InfoButtonComponent \n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoButtonModule -->\n\nInfoDialogModule->InfoButtonModule\n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nInfoDialogModule->InfoDialogComponent \n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nInfoDialogModule -->\n\nInfoDialogComponent->InfoDialogModule\n\n\n\n\n\nNumberDirective\n\nNumberDirective\n\n\n\nNumbersOnlyModule\n\nNumbersOnlyModule\n\nNumbersOnlyModule -->\n\nNumberDirective->NumbersOnlyModule\n\n\n\n\n\nNumberDirective \n\nNumberDirective \n\nNumberDirective  -->\n\nNumbersOnlyModule->NumberDirective \n\n\n\n\n\nOpacitySliderComponent\n\nOpacitySliderComponent\n\n\n\nOpacitySliderModule\n\nOpacitySliderModule\n\nOpacitySliderModule -->\n\nOpacitySliderComponent->OpacitySliderModule\n\n\n\n\n\nOpacitySliderComponent \n\nOpacitySliderComponent \n\nOpacitySliderComponent  -->\n\nOpacitySliderModule->OpacitySliderComponent \n\n\n\n\n\nOrganSelectorComponent\n\nOrganSelectorComponent\n\n\n\nOrganSelectorModule\n\nOrganSelectorModule\n\nOrganSelectorModule -->\n\nOrganSelectorComponent->OrganSelectorModule\n\n\n\n\n\nOrganSelectorComponent \n\nOrganSelectorComponent \n\nOrganSelectorComponent  -->\n\nOrganSelectorModule->OrganSelectorComponent \n\n\n\n\n\nStoreDebugComponent\n\nStoreDebugComponent\n\n\n\nStoreDebugModule\n\nStoreDebugModule\n\nStoreDebugModule -->\n\nStoreDebugComponent->StoreDebugModule\n\n\n\n\n\nStoreDebugComponent \n\nStoreDebugComponent \n\nStoreDebugComponent  -->\n\nStoreDebugModule->StoreDebugComponent \n\n\n\n\n\nTextSearchComponent\n\nTextSearchComponent\n\nTextSearchModule -->\n\nTextSearchComponent->TextSearchModule\n\n\n\n\n\nMatPrefix \n\nMatPrefix \n\nMatPrefix  -->\n\nTextSearchModule->MatPrefix \n\n\n\n\n\nMatSuffix \n\nMatSuffix \n\nMatSuffix  -->\n\nTextSearchModule->MatSuffix \n\n\n\n\n\nTextSearchComponent \n\nTextSearchComponent \n\nTextSearchComponent  -->\n\nTextSearchModule->TextSearchComponent \n\n\n\n\n\nTrackingPopupComponent\n\nTrackingPopupComponent\n\n\n\nTrackingPopupModule\n\nTrackingPopupModule\n\nTrackingPopupModule -->\n\nTrackingPopupComponent->TrackingPopupModule\n\n\n\n\n\nTrackingPopupComponent \n\nTrackingPopupComponent \n\nTrackingPopupComponent  -->\n\nTrackingPopupModule->TrackingPopupComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Consent   (projects/.../consent.service.ts)\n                        \n                        \n                            DataReviver   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            DataSourceDataType   (projects/.../data-source.ts)\n                        \n                        \n                            DataSourceLike   (projects/.../data-source.ts)\n                        \n                        \n                            DataSourceLikeMethod   (projects/.../data-source.ts)\n                        \n                        \n                            DataSourceMethod   (projects/.../data-source.ts)\n                        \n                        \n                            GlobalKey   (projects/.../globals.service.ts)\n                        \n                        \n                            GlobalThis   (projects/.../globals.service.ts)\n                        \n                        \n                            IObservableCacheConfig   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            KVList   (projects/.../store-debug.component.ts)\n                        \n                        \n                            KVPair   (projects/.../store-debug.component.ts)\n                        \n                        \n                            RequestMethod   (projects/.../api-endpoint.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-shared/analytics/src/lib/consent.service.ts\n    \n    \n        \n            \n                \n                    \n                    Consent\n                \n            \n            \n                \n                        \"not-set\" | \"given\" | \"rescinded\"\n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n    \n    \n        \n            \n                \n                    \n                    DataReviver\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IObservableCacheConfig\n                \n            \n            \n                \n                        NonNullable<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RequestMethod\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/services/data-source/data-source.ts\n    \n    \n        \n            \n                \n                    \n                    DataSourceDataType\n                \n            \n            \n                \n                            ObservedValueOf>>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataSourceLike\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataSourceLikeMethod\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataSourceMethod\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/services/globals/globals.service.ts\n    \n    \n        \n            \n                \n                    \n                    GlobalKey\n                \n            \n            \n                \n                    Type of keys allowed in the global object\n\n                \n            \n            \n                \n                        string | symbol\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GlobalThis\n                \n            \n            \n                \n                    Type of the global object\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts\n    \n    \n        \n            \n                \n                    \n                    KVList\n                \n            \n            \n                \n                    Array of Key-Value pairs\n\n                \n            \n            \n                \n                            KVPair[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    KVPair\n                \n            \n            \n                \n                    Key-Value pair\n\n                \n            \n            \n                \n                        [string, T]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALL_ORGANS   (projects/.../organ-selector.component.ts)\n                        \n                        \n                            ALL_POSSIBLE_ORGANS   (projects/.../organ-selector.component.ts)\n                        \n                        \n                            buster$   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            CACHE_CONFIG_NO_PARAMS   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            CACHE_CONFIG_PARAMS   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            DEFAULT_MAX_OPTIONS   (projects/.../text-search.component.ts)\n                        \n                        \n                            DEFAULT_OPTIONS   (projects/.../pluck-unique.ts)\n                        \n                        \n                            documentationURL   (projects/.../info-button.service.ts)\n                        \n                        \n                            EAGERLY_LOADED_SERVICES   (projects/.../analytics.module.ts)\n                        \n                        \n                            global   (projects/.../globals.service.ts)\n                        \n                        \n                            INITIAL_TELEMETRY_SETTING   (projects/.../tracking.state.ts)\n                        \n                        \n                            LOCAL_STORAGE_ALLOW_TELEMETRY_KEY   (projects/.../tracking.state.ts)\n                        \n                        \n                            LOCAL_STORAGE_CONSENT_KEY   (projects/.../local-storage-sync.service.ts)\n                        \n                        \n                            placeholder   (projects/.../public-api.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALL_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALL_POSSIBLE_ORGANS.filter(organ => organ.disabled !== true)\n                    \n                \n\n            \n                \n                    All organs which have not been disabled\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ALL_POSSIBLE_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [\n  {\n    src: 'app:skin',\n    organ: 'Skin',\n    name: 'Skin',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002097'\n  },\n  {\n    src: 'app:brain',\n    organ: 'Brain',\n    name: 'Brain',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000955'\n  },\n  {\n    disabled: true,\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000029'\n  },\n  {\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002509'\n  },\n  {\n    disabled: true,\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000970'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004548'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/FMA_54449'\n  },\n  {\n    disabled: true,\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0003889'\n  },\n  {\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001303'\n  },\n  {\n    src: 'app:fallopian-tube-right',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001302'\n  },\n  {\n    src: 'app:heart',\n    organ: 'Heart',\n    name: 'Heart',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000948'\n  },\n  {\n    disabled: true,\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002113'\n  },\n  {\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004538'\n  },\n  {\n    src: 'app:kidney-right',\n    organ: 'Kidney',\n    name: 'Kidney, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004539'\n  },\n  {\n    disabled: true,\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001465'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/FMA_24978'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/FMA_24977'\n  },\n  {\n    src: 'app:liver',\n    organ: 'Liver',\n    name: 'Liver',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002107'\n  },\n  {\n    disabled: true,\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002048'\n  },\n  {\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001004'\n  },\n  {\n    disabled: true,\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000992'\n  },\n  {\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/FMA_7214'\n  },\n  {\n    src: 'app:ovary-right',\n    organ: 'Ovary',\n    name: 'Ovary, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/FMA_7213'\n  },\n  {\n    src: 'app:pancreas',\n    organ: 'Pancreas',\n    name: 'Pancreas',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001264'\n  },\n  {\n    src: 'app:pelvis-f',\n    organ: 'Pelvis',\n    name: 'Pelvis',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001270'\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002367',\n    disabled: true\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000079'\n  },\n  {\n    src: 'app:small-intestine',\n    organ: 'Small Intestine',\n    name: 'Small Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002108'\n  },\n  {\n    src: 'app:large-intestine',\n    organ: 'Large Intestine',\n    name: 'Large Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000059'\n  },\n  {\n    src: 'app:spleen',\n    organ: 'Spleen',\n    name: 'Spleen',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002106'\n  },\n  {\n    src: 'app:thymus',\n    organ: 'Thymus',\n    name: 'Thymus',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002370'\n  },\n  {\n    disabled: true,\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000056'\n  },\n  {\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001223'\n  },\n  {\n    src: 'app:ureter-right',\n    organ: 'Ureter',\n    name: 'Ureter, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001222'\n  },\n  {\n    src: 'app:bladder',\n    organ: 'Urinary Bladder',\n    name: 'Urinary Bladder',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001255'\n  },\n  {\n    src: 'app:uterus',\n    organ: 'Uterus',\n    name: 'Uterus',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000995'\n  },\n  {\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004537'\n  },\n  {\n    disabled: true,\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002049'\n  }\n].sort((a, b) => a.name.localeCompare(b.name)) as OrganInfo[]\n                    \n                \n\n            \n                \n                    All organs that will eventually be displayed in the app\n\n                \n            \n\n        \n    \n\n    projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buster$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CACHE_CONFIG_NO_PARAMS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IObservableCacheConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  cacheBusterObserver: buster$\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CACHE_CONFIG_PARAMS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IObservableCacheConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n}\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_MAX_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'Maximum number of autocomplete options displayed',\n  {\n    providedIn: 'root',\n    factory(): number {\n      return 10;\n    }\n  }\n)\n                    \n                \n\n            \n                \n                    Token to provide a default for the maximum number of\nautocomplete suggestions to show at the same time.\n\n                \n            \n\n        \n    \n\n    projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PluckUniqueOptions<>\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n            \n                \n                    Default options\n\n                \n            \n\n        \n    \n\n    projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        documentationURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/docs/README.md'\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/analytics/src/lib/analytics.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EAGERLY_LOADED_SERVICES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ConsentService,\n  GoogleAnalyticsSyncService,\n  LocalStorageSyncService,\n]\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/src/lib/services/globals/globals.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        global\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalThis\n\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/src/lib/analytics/tracking.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        INITIAL_TELEMETRY_SETTING\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getTelemetryStorageSetting()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOCAL_STORAGE_ALLOW_TELEMETRY_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ALLOW_TELEMETRY'\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOCAL_STORAGE_CONSENT_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Key under which consent is stored', {\n  providedIn: 'root',\n  factory: () => 'ALLOW_TELEMETRY'\n})\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/rxjs-ext/src/public-api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        placeholder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : undefined\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
