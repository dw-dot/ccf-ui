var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AnalyticsModule.html",[0,1.486,1,2.477]],["body/modules/AnalyticsModule.html",[1,4.964,2,1.685,3,2.171,4,3.903,5,3.903,6,3.442,7,0.018,8,4.094,9,4.094,10,2.387,11,1.853,12,1.406,13,0.179,14,0.226,15,0.179,16,0.173,17,2.945,18,3.865,19,1.033,20,4.501,21,4.524,22,5.028,23,4.966,24,1.033,25,4.524,26,1.033,27,0.748,28,0.403,29,0.678,30,3.112,31,0.748,32,5.562,33,0.388,34,5.028,35,2.641,36,0.324,37,4.501,38,5.028,39,2.742,40,3.112,41,2.937,42,3.189,43,5.028,44,3.903,45,2.945,46,0.291,47,0.324,48,3.903,49,0.871,50,5.562,51,5.562,52,5.562,53,1.947,54,1.066,55,4.544,56,1.894,57,3.494,58,2.781,59,1.126,60,3.903,61,2.568,62,1.681,63,2.159,64,3.903,65,3.903,66,4.501,67,3.903,68,1.538,69,2.159,70,3.189,71,2.048,72,2.742,73,3.903,74,2.159,75,3.903,76,1.538,77,3.903,78,0.202,79,3.903,80,3.903,81,0.01,82,0.013,83,0.01]],["title/interfaces/AnalyticsOptions.html",[23,2.683,47,0.272]],["body/interfaces/AnalyticsOptions.html",[1,3.834,6,2.811,7,0.018,8,3.343,9,3.343,13,0.182,14,0.229,15,0.182,16,0.137,17,2.994,18,3.688,20,3.553,22,3.969,23,4.829,28,0.611,29,1.086,30,2.456,32,5.082,33,0.39,34,5.082,35,2.662,36,0.329,37,4.55,38,5.082,39,2.788,40,3.145,41,2.969,42,3.242,43,5.082,44,3.969,45,2.994,46,0.294,47,0.329,48,5.911,49,1.018,50,6.251,51,6.251,52,6.251,53,2.796,54,1.075,55,4.58,56,1.914,57,3.553,58,2.811,59,1.133,60,3.969,61,2.611,62,1.694,63,2.195,64,3.969,65,3.969,66,4.55,67,3.969,68,1.564,69,2.195,70,3.242,71,2.083,72,2.788,73,3.969,74,2.195,75,3.969,76,1.564,77,3.969,78,0.206,79,3.969,80,3.969,81,0.01,82,0.013,83,0.01,84,1.43,85,0.438,86,0.928]],["title/interfaces/ApiEndpointDataSourceOptions.html",[47,0.272,87,2.307]],["body/interfaces/ApiEndpointDataSourceOptions.html",[7,0.018,13,0.131,14,0.234,15,0.131,16,0.098,18,1.869,28,0.562,29,0.704,33,0.387,36,0.236,46,0.234,47,0.392,49,1,54,1.044,56,1.527,59,1.232,76,2.423,78,0.147,81,0.007,82,0.01,83,0.007,84,1.024,85,0.314,86,0.74,87,2.847,88,1.12,89,1.759,90,1.759,91,4.208,92,4.208,93,0.777,94,2.322,95,2.144,96,1.759,97,2.477,98,1.759,99,1.759,100,2.613,101,1.759,102,0.981,103,1.349,104,1.759,105,3.311,106,3.886,107,3.311,108,2.322,109,2.322,110,2.144,111,3.311,112,2.34,113,2.508,114,0.719,115,1.349,116,1.924,117,1.869,118,2.322,119,1.12,120,3.564,121,3.058,122,2.021,123,1.66,124,1.66,125,2.242,126,2.04,127,2.322,128,3.318,129,2.322,130,3.886,131,5.217,132,3.618,133,3.564,134,2.613,135,2.322,136,1.996,137,3.188,138,1.869,139,2.144,140,2.322,141,2.144,142,2.322,143,2.322,144,2.322,145,1.869,146,1.996,147,1.996,148,1.996,149,2.144,150,2.322,151,1.572,152,1.491,153,3.318,154,0.938,155,1.996,156,3.058,157,1.996,158,2.144,159,1.996,160,2.322,161,3.825,162,1.349,163,1.996,164,2.127,165,1.94,166,3.058,167,2.144,168,1.996,169,3.311,170,1.759,171,2.322,172,1.869,173,2.322,174,2.322,175,1.227,176,1.12,177,1.996,178,0.937,179,1.024,180,1.877,181,0.895,182,2.508,183,2.508,184,2.322,185,1.417,186,3.859,187,2.322,188,4.449,189,1.417,190,2.322,191,1.417,192,2.322,193,1.417,194,4.953,195,2.322,196,1.417,197,2.322,198,1.417,199,2.322,200,4.625,201,1.417,202,2.322,203,1.417,204,2.322,205,1.417,206,2.322,207,1.417,208,2.322,209,1.417,210,2.322,211,2.847,212,1.417,213,2.322,214,1.417,215,3.859,216,2.356,217,3.859,218,2.322,219,2.144,220,2.322,221,2.322,222,2.322,223,2.322,224,2.322,225,2.322,226,2.322,227,2.322,228,2.322,229,2.322,230,2.322]],["title/injectables/ApiEndpointDataSourceService.html",[93,0.63,177,2.307]],["body/injectables/ApiEndpointDataSourceService.html",[7,0.018,13,0.098,14,0.19,15,0.098,16,0.215,18,1.405,19,0.868,24,1.634,26,1.588,27,1.1,28,0.638,29,0.997,31,1.174,33,0.359,36,0.177,46,0.19,47,0.331,49,0.928,54,0.927,56,1.235,59,1.174,76,2.467,78,0.111,81,0.005,82,0.008,83,0.005,85,0.236,87,1.5,88,2.45,89,3.849,90,1.322,91,1.745,92,1.745,93,0.629,94,1.745,95,1.611,96,1.322,97,2.545,98,1.322,99,1.322,100,2.208,101,1.322,102,0.794,103,1.014,104,1.322,105,3.66,106,3.38,107,2.68,108,1.745,109,1.745,110,1.611,111,2.68,112,2.374,113,2.03,114,0.541,115,1.014,116,1.557,117,1.405,118,1.745,119,0.841,120,3.013,121,2.475,122,2.234,123,1.248,124,1.248,125,1.814,126,1.838,127,1.745,128,2.805,129,1.745,130,4.33,131,5.174,132,4.214,133,4.008,134,2.673,135,2.68,136,1.5,137,2.772,138,1.405,139,1.611,140,1.745,141,1.611,142,1.745,143,1.745,144,1.745,145,1.405,146,1.5,147,1.5,148,1.5,149,1.611,150,1.745,151,1.181,152,1.121,153,2.805,154,0.759,155,1.5,156,2.475,157,1.5,158,1.611,159,1.5,160,1.745,161,3.395,162,1.014,163,1.5,164,1.721,165,1.687,166,2.475,167,1.611,168,1.5,169,2.68,170,1.322,171,1.745,172,1.405,173,1.745,174,1.745,175,0.922,176,0.841,177,2.304,178,0.705,179,1.182,180,2.013,181,0.725,182,2.471,183,2.772,184,1.745,185,2.234,186,3.262,187,1.745,188,4.689,189,2.234,190,1.745,191,2.234,192,1.745,193,2.234,194,4.593,195,1.745,196,2.234,197,1.745,198,2.234,199,1.745,200,4.84,201,1.636,202,1.745,203,1.636,204,1.745,205,1.636,206,1.745,207,1.636,208,1.745,209,1.636,210,1.745,211,2.304,212,1.636,213,1.745,214,1.636,215,4.593,216,2.545,217,4.34,218,1.745,219,1.611,220,1.745,221,1.745,222,1.745,223,1.745,224,1.745,225,1.745,226,1.745,227,1.745,228,1.745,229,1.745,230,1.745,231,0.967,232,1.916,233,1.916,234,1.916,235,1.916,236,1.916,237,1.916,238,2.476,239,2.476,240,4.628,241,2.476,242,3.012,243,2.476,244,2.476,245,3.411,246,2.476,247,2.476,248,2.476,249,2.476,250,2.476,251,2.476,252,2.476,253,2.476,254,2.476,255,2.476,256,2.476,257,2.476]],["title/interfaces/AutoCompleteOption.html",[47,0.272,258,2.683]],["body/interfaces/AutoCompleteOption.html",[7,0.018,13,0.147,14,0.185,15,0.147,16,0.11,27,0.614,28,0.455,29,0.988,30,2.727,31,0.614,33,0.376,36,0.266,46,0.291,47,0.266,49,0.961,54,0.845,56,1.206,59,0.845,62,1.331,68,1.261,72,3.095,78,0.228,81,0.008,82,0.011,83,0.008,84,1.153,85,0.353,86,0.804,102,1.066,112,1.587,114,0.811,115,1.52,116,1.52,117,2.106,119,1.261,137,1.981,154,1.165,162,1.52,164,1.68,165,2.269,170,1.981,175,1.382,176,1.261,179,1.153,180,1.519,181,1.299,258,3.599,259,2.415,260,2.415,261,2.615,262,1.206,263,3.599,264,4.406,265,4.649,266,5.576,267,4.094,268,4.131,269,5.014,270,3.801,271,3.095,272,4.406,273,3.539,274,1.981,275,1.394,276,3.324,277,1.77,278,1.981,279,3.599,280,2.702,281,3.801,282,4.406,283,2.615,284,4.858,285,2.866,286,3.324,287,3.095,288,4.406,289,1.87,290,1.597,291,1.77,292,1.816,293,4.858,294,5.495,295,2.866,296,2.866,297,2.615,298,2.615,299,2.249,300,2.905,301,5.822,302,5.265,303,3.201,304,2.866,305,1.382,306,1.52,307,3.201,308,1.52,309,3.201,310,1.981,311,1.981,312,1.597,313,1.597,314,1.77,315,1.77,316,3.324,317,3.201,318,3.201,319,3.201,320,3.201,321,1.981,322,3.201,323,5.427,324,3.201,325,3.201,326,3.118,327,5.038,328,4.115,329,1.87,330,3.201,331,2.866,332,2.615,333,3.201,334,2.866,335,4.406,336,4.406,337,3.201,338,3.201,339,1.77,340,1.597,341,1.736,342,4.406,343,3.201,344,3.201,345,3.201,346,2.615,347,3.201,348,2.866,349,2.106,350,3.201,351,2.106,352,3.201,353,3.201]],["title/modules/BodyUiModule.html",[0,1.486,354,2.683]],["body/modules/BodyUiModule.html",[2,2.077,3,2.471,7,0.017,10,2.717,11,2.284,12,1.733,13,0.221,14,0.278,15,0.221,16,0.166,33,0.39,35,2.717,36,0.399,46,0.278,71,2.524,78,0.249,81,0.012,82,0.014,83,0.012,354,5.409,355,4.811,356,4.811,357,4.811,358,3.567,359,4.306,360,4.306,361,5.576,362,3.165,363,3.165,364,3.344,365,2.524,366,2.524,367,5.576]],["title/injectables/CCFDatabaseDataSourceBaseService.html",[93,0.63,368,2.307]],["body/injectables/CCFDatabaseDataSourceBaseService.html",[7,0.018,13,0.13,14,0.297,15,0.13,16,0.188,19,1.069,24,1.726,26,1.677,27,1.178,28,0.654,29,1.067,31,1.231,33,0.372,36,0.235,46,0.233,47,0.235,49,0.633,54,0.903,59,0.903,76,1.114,78,0.244,81,0.007,82,0.01,83,0.007,85,0.312,86,0.737,88,2.142,93,0.985,97,2.475,102,0.685,103,2.825,112,2.359,114,0.716,115,1.343,116,1.343,119,1.114,122,2.564,123,1.653,124,1.653,126,1.019,151,1.564,152,2.852,154,0.654,175,1.221,176,1.114,179,1.019,180,1.624,181,1.249,183,1.751,185,2.35,189,2.35,191,2.35,193,2.35,196,2.35,198,2.35,201,1.411,203,1.411,205,1.411,207,1.411,209,1.411,212,1.411,214,1.411,216,1.411,231,1.28,232,2.36,233,2.36,234,2.36,235,2.36,236,2.36,237,2.36,242,2.966,349,3.1,351,2.657,368,3.61,369,4.101,370,2.134,371,2.852,372,2.843,373,2.916,374,3.849,375,3.476,376,3.303,377,3.616,378,2.657,379,3.048,380,4.682,381,2.532,382,4.254,383,5.019,384,3.279,385,4.199,386,4.199,387,3.279,388,1.987,389,2.916,390,2.657,391,4.814,392,3.701,393,2.134,394,2.134,395,2.134,396,2.134,397,2.134,398,2.134,399,2.134,400,2.134,401,2.134,402,2.134,403,2.134,404,2.134,405,2.134,406,2.532,407,3.3,408,3.3,409,2.311,410,3.3,411,2.311,412,2.134,413,3.3,414,2.837,415,1.751,416,1.653,417,2.134,418,2.134,419,2.311,420,2.134,421,2.311,422,2.311,423,1.114,424,2.311,425,2.311,426,2.311,427,2.311,428,2.311,429,1.861,430,3.3,431,2.311,432,2.134,433,2.134,434,2.311,435,1.987,436,2.311,437,3.048,438,1.987,439,2.311,440,3.048,441,2.311,442,2.311,443,2.311,444,2.311]],["title/injectables/CCFDatabaseDataSourceService.html",[93,0.63,435,2.307]],["body/injectables/CCFDatabaseDataSourceService.html",[7,0.018,13,0.132,14,0.3,15,0.132,16,0.099,19,1.084,24,1.723,26,1.668,27,1.166,28,0.651,29,1.056,31,1.235,33,0.374,36,0.239,46,0.237,47,0.239,49,0.641,54,0.913,59,0.913,76,1.135,78,0.247,81,0.007,82,0.01,83,0.007,85,0.318,86,0.747,88,1.135,93,0.994,97,2.481,102,0.698,103,2.839,112,2.364,114,0.73,115,1.368,116,1.368,119,1.135,122,2.042,123,1.684,124,1.684,126,1.038,151,1.594,152,2.873,154,0.667,175,1.244,176,1.135,180,1.641,181,1.257,185,2.375,189,2.375,191,2.375,193,2.375,196,2.375,198,2.375,201,1.437,203,1.437,205,1.437,207,1.437,209,1.437,212,1.437,214,1.437,216,1.437,231,1.304,232,2.392,233,2.392,234,2.392,235,2.392,236,2.392,237,2.392,242,2.985,349,3.132,351,2.693,368,4.11,369,2.174,370,2.174,371,2.873,372,2.633,373,2.946,374,3.889,375,3.493,376,3.028,377,3.665,378,2.693,379,2.174,381,2.58,382,4.273,383,5.039,385,4.235,386,4.235,388,2.024,389,2.946,390,2.693,391,4.91,392,3.712,393,2.174,394,2.174,395,2.174,396,2.174,397,2.174,398,2.174,399,2.174,400,2.174,401,2.174,402,2.174,403,2.174,404,2.174,405,2.174,406,2.58,407,3.344,408,3.344,409,2.354,410,3.344,411,2.354,412,2.174,413,3.344,414,2.875,415,1.783,416,1.684,417,2.174,418,2.174,419,2.354,420,2.174,421,2.354,422,2.354,423,1.135,424,2.354,425,2.354,426,2.354,427,2.354,428,2.354,429,1.896,430,3.344,431,2.354,432,2.174,433,2.174,434,2.354,435,2.875,436,2.354,437,3.088,438,2.024,439,2.354,440,3.088,441,2.354,442,2.354,443,2.354,444,2.354,445,3.34,446,2.882,447,2.882]],["title/interfaces/CCFDatabaseManager.html",[47,0.272,382,2.307]],["body/interfaces/CCFDatabaseManager.html",[7,0.018,13,0.176,14,0.337,15,0.176,16,0.132,28,0.397,33,0.403,36,0.319,46,0.287,47,0.319,54,1.058,59,1.058,76,1.513,78,0.286,81,0.01,82,0.013,83,0.01,84,1.383,85,0.424,86,0.908,88,1.513,93,1.119,97,1.446,102,0.929,103,3.068,112,2.103,114,0.972,115,1.823,116,1.823,119,1.513,122,2.481,123,2.243,124,2.243,126,1.383,151,2.123,152,2.61,154,0.888,175,1.658,176,1.513,180,1.323,181,1.099,349,2.526,351,2.526,368,3.877,369,2.897,370,2.897,371,3.173,372,2.751,373,2.376,374,3.137,375,3.411,376,3.411,379,2.897,382,4.43,383,5.062,385,4.509,386,4.509,407,4.064,408,4.769,409,3.137,410,4.769,411,3.137,412,2.897,413,4.509,414,3.494,415,2.376,416,2.243,417,2.897,418,2.897,419,3.137,420,2.897,421,3.137,422,3.137,423,1.513,424,3.137,425,3.137,426,3.137,427,3.137,428,3.137,429,2.526,430,4.064,431,3.137,432,2.897,433,2.897,434,3.137,435,2.697,436,3.137,437,3.753,438,2.697,439,3.137,440,3.753,441,3.137,442,3.137,443,3.137,444,3.137]],["title/injectables/ConsentService.html",[6,1.816,93,0.63]],["body/injectables/ConsentService.html",[6,2.958,7,0.017,13,0.198,14,0.249,15,0.198,16,0.223,19,1.416,24,1.689,26,1.139,27,0.825,28,0.601,29,0.747,31,1.116,33,0.342,36,0.357,46,0.309,62,1.892,68,2.398,78,0.223,81,0.011,82,0.013,83,0.011,85,0.475,86,0.976,93,1.025,114,1.09,154,1.237,178,1.419,179,2.097,181,1.286,231,1.947,292,2.205,448,3.853,449,4.632,450,6.745,451,4.005,452,6.199,453,7.056,454,6.199,455,4.988,456,2.015,457,6.199,458,4.988,459,4.988,460,4.988,461,6.199,462,3.518,463,4.988,464,3.516,465,3.247,466,4.988,467,4.988,468,6.199,469,4.988,470,4.988]],["title/interfaces/DataSource.html",[47,0.272,125,1.816]],["body/interfaces/DataSource.html",[7,0.017,13,0.14,14,0.177,15,0.14,16,0.221,19,1.13,24,1.686,26,1.632,27,1.112,28,0.652,29,1.007,31,1.221,33,0.314,46,0.344,47,0.254,49,0.833,59,1.23,78,0.221,81,0.008,82,0.011,83,0.008,84,1.101,85,0.337,88,2.528,96,1.892,97,2.576,98,1.892,99,1.892,100,1.691,101,1.892,102,0.74,103,1.452,104,1.892,112,2.466,114,0.774,116,1.452,119,1.204,125,2.943,162,1.452,178,1.008,181,0.676,185,2.791,189,2.791,191,2.791,193,2.791,196,2.791,198,2.791,201,2.452,203,2.452,205,2.452,207,2.452,209,2.452,212,2.452,214,2.128,216,2.128,232,2.493,233,2.493,234,2.493,235,2.493,236,2.493,237,2.493,242,3.042,286,3.709,371,1.604,372,1.691,373,1.892,375,2.493,376,3.108,378,2.807,389,3.043,390,3.234,392,2.493,416,1.786,471,4.507,472,2.307,473,3.544,474,3.544,475,3.544,476,3.544,477,3.544,478,3.544,479,3.544,480,3.544,481,3.544,482,3.544,483,3.544,484,3.544,485,3.486,486,2.737,487,3.486,488,2.498,489,2.737,490,2.498,491,2.737,492,2.737,493,2.737,494,2.737,495,2.737,496,2.737,497,2.737,498,2.737,499,2.737,500,2.737,501,2.737,502,2.737,503,2.737,504,2.737,505,2.737,506,2.737,507,2.737,508,2.737]],["title/injectables/DataSourceService.html",[93,0.63,509,2.94]],["body/injectables/DataSourceService.html",[7,0.017,13,0.16,14,0.27,15,0.16,16,0.226,19,1.238,24,1.723,26,1.598,27,1.157,28,0.623,29,1.048,31,1.248,33,0.359,36,0.29,46,0.202,49,0.825,78,0.181,81,0.009,82,0.012,83,0.009,85,0.386,88,2.58,93,0.896,96,2.162,97,2.564,98,2.162,99,2.162,100,1.932,101,2.162,102,0.846,103,1.659,104,2.162,112,2.445,114,0.884,125,2.585,126,1.259,178,1.152,185,2.806,189,2.806,191,2.806,193,2.806,196,2.806,198,2.806,201,2.332,203,2.332,205,2.332,207,2.332,209,2.332,212,2.332,214,1.742,231,1.581,232,2.731,233,2.731,234,2.731,235,2.731,236,2.731,237,2.731,242,3.167,376,4.016,471,4.6,509,4.185,510,3.493,511,4.049,512,4.049,513,4.049,514,4.049,515,4.049,516,4.049,517,4.049,518,4.049,519,4.049,520,4.049,521,4.049,522,4.049]],["title/interfaces/DecoratedRange.html",[47,0.272,289,1.918]],["body/interfaces/DecoratedRange.html",[7,0.018,13,0.183,14,0.231,15,0.183,16,0.138,28,0.612,31,0.765,46,0.231,47,0.331,49,0.88,54,1.136,56,1.503,58,3.108,59,0.978,62,1.205,68,2.009,81,0.01,82,0.013,83,0.01,84,1.437,85,0.739,86,0.931,164,3.285,165,2.47,262,1.503,289,3.283,291,2.206,341,2.009,423,2.214,523,2.624,524,3.571,525,3.259,526,4.28,527,3.414,528,3.01,529,5.825,530,7.468,531,4.166,532,5.91,533,6.121,534,6.865,535,4.468,536,5.91,537,3.99,538,3.01,539,3.99,540,2.331,541,5.031,542,3.99,543,3.99,544,2.802,545,2.469,546,3.99,547,3.99,548,4.624,549,4.624,550,4.624,551,3.259]],["title/components/DecoratedTextComponent.html",[275,0.909,552,1.559]],["body/components/DecoratedTextComponent.html",[7,0.018,12,1.118,13,0.175,14,0.115,15,0.091,16,0.204,19,0.821,24,1.542,26,1.238,27,1.099,28,0.581,29,0.812,31,1.099,33,0.198,36,0.165,46,0.179,47,0.257,49,0.862,54,1.079,58,1.716,59,0.992,62,1.153,68,0.783,69,2.384,78,0.277,81,0.011,82,0.008,83,0.005,85,0.571,86,0.905,97,0.749,102,1.461,154,1.082,164,2.262,165,1.169,178,1.023,180,2.1,181,0.843,245,1.161,262,1.866,267,4.596,270,2.341,271,3.028,274,1.23,275,1.056,277,1.099,280,1.812,289,3.614,290,3.124,291,3.265,292,1.573,300,3.005,305,2.515,306,1.473,308,1.473,310,1.92,311,1.92,312,0.991,313,2.332,314,1.716,315,2.11,326,1.92,329,3.287,339,2.74,340,1.547,341,1.698,358,1.043,366,1.043,423,1.503,456,0.979,523,3.884,525,2.534,526,3.26,527,2.81,528,1.5,531,2.534,538,2.341,540,3.024,541,2.341,551,1.624,552,2.047,553,1.812,554,1.308,555,1.308,556,1.23,557,1.624,558,2.74,559,2.68,560,5.453,561,3.117,562,1.161,563,3.416,564,2.777,565,5.404,566,3.859,567,3.596,568,3.859,569,3.596,570,3.596,571,3.596,572,3.596,573,2.534,574,2.341,575,2.304,576,5.037,577,2.777,578,2.777,579,3.416,580,2.777,581,2.304,582,3.596,583,2.304,584,2.879,585,4.667,586,2.777,587,2.304,588,2.777,589,5.638,590,4.186,591,3.416,592,3.905,593,2.304,594,2.777,595,2.777,596,2.534,597,2.777,598,2.304,599,2.304,600,4.423,601,2.304,602,2.304,603,2.777,604,2.534,605,3.522,606,2.304,607,2.777,608,2.777,609,2.534,610,2.777,611,4.793,612,2.304,613,2.534,614,4.186,615,2.534,616,2.304,617,2.534,618,2.534,619,1.5,620,1.624,621,1.779,622,2.041,623,1.624,624,1.624,625,2.534,626,2.534,627,2.534,628,1.779,629,1.779,630,2.777,631,1.779,632,2.777,633,1.779,634,1.779,635,1.396,636,2.777,637,1.779,638,3.416,639,2.341,640,1.624,641,1.779,642,1.779,643,2.777,644,1.779,645,1.779,646,2.777,647,1.779,648,1.624,649,2.777,650,2.777,651,2.777,652,1.5,653,1.779,654,1.396,655,1.779,656,1.779,657,1.779,658,1.779,659,1.779,660,1.779,661,1.779,662,1.779,663,1.779,664,1.779,665,1.779,666,1.779,667,1.779,668,1.779,669,1.779,670,1.779,671,1.5,672,1.624,673,1.5,674,1.779,675,1.779,676,1.624,677,1.624,678,1.779,679,1.624,680,1.779,681,1.396,682,1.779,683,1.779,684,1.624,685,1.624,686,1.779,687,1.779,688,1.779,689,1.779,690,3.596,691,1.5,692,1.5,693,1.308,694,1.547,695,1.043,696,2.836,697,1.308,698,1.308,699,1.308,700,1.043,701,1.308,702,0.991,703,1.308,704,1.043,705,1.161,706,1.308,707,1.043,708,0.991,709,1.308,710,1.043,711,1.23,712,1.308,713,1.308,714,1.043,715,1.099,716,1.23,717,1.23,718,0.991,719,1.23,720,1.308]],["title/modules/DecoratedTextModule.html",[0,1.486,721,2.477]],["body/modules/DecoratedTextModule.html",[2,2.084,3,2.476,7,0.017,10,2.722,11,2.291,12,1.738,13,0.222,14,0.279,15,0.222,16,0.166,33,0.391,35,2.722,36,0.4,46,0.279,71,2.532,78,0.25,81,0.012,82,0.014,83,0.012,290,2.407,291,2.669,362,3.171,363,3.171,364,3.35,365,2.532,523,3.175,552,3.229,721,4.998,722,4.826,723,4.826,724,4.826,725,5.593,726,5.593]],["title/interfaces/DefaultParams.html",[47,0.272,136,2.307]],["body/interfaces/DefaultParams.html",[7,0.018,13,0.131,14,0.235,15,0.131,16,0.099,18,1.882,28,0.534,29,0.707,33,0.388,36,0.237,46,0.235,47,0.393,49,0.985,54,1.047,56,1.534,59,1.233,76,2.426,78,0.148,81,0.007,82,0.01,83,0.007,84,1.03,85,0.316,86,0.743,87,2.009,88,1.127,89,1.77,90,1.77,91,2.337,92,2.337,93,0.781,94,2.337,95,2.158,96,1.77,97,2.478,98,1.77,99,1.77,100,2.622,101,1.77,102,0.986,103,1.358,104,1.77,105,3.326,106,3.897,107,3.326,108,2.337,109,2.337,110,2.158,111,3.326,112,2.342,113,2.52,114,0.724,115,1.358,116,1.933,117,1.882,118,2.337,119,1.127,120,3.577,121,3.072,122,2.031,123,1.671,124,1.671,125,2.252,126,2.044,127,2.337,128,3.33,129,2.337,130,3.897,131,5.223,132,3.629,133,3.577,134,2.622,135,2.337,136,2.86,137,3.613,138,1.882,139,2.158,140,2.337,141,2.158,142,2.337,143,2.337,144,2.337,145,1.882,146,2.009,147,2.009,148,2.009,149,2.158,150,2.337,151,1.582,152,1.501,153,3.33,154,0.942,155,2.009,156,3.072,157,2.009,158,2.158,159,2.009,160,2.337,161,3.835,162,1.358,163,2.009,164,2.137,165,1.946,166,3.072,167,2.158,168,2.009,169,3.326,170,1.77,171,2.337,172,1.882,173,2.337,174,2.337,175,1.235,176,1.127,177,2.009,178,0.943,179,1.03,180,1.882,181,0.9,182,2.52,183,2.52,184,2.337,185,1.427,186,3.873,187,2.337,188,4.46,189,1.427,190,2.337,191,1.427,192,2.337,193,1.427,194,4.961,195,2.337,196,1.427,197,2.337,198,1.427,199,2.337,200,4.635,201,1.427,202,2.337,203,1.427,204,2.337,205,1.427,206,2.337,207,1.427,208,2.337,209,1.427,210,2.337,211,2.86,212,1.427,213,2.337,214,1.427,215,3.873,216,2.365,217,3.873,218,2.337,219,2.158,220,2.337,221,2.337,222,2.337,223,2.337,224,2.337,225,2.337,226,2.337,227,2.337,228,2.337,229,2.337,230,2.337]],["title/classes/DelegateDataSource.html",[78,0.17,372,1.816]],["body/classes/DelegateDataSource.html",[7,0.017,13,0.136,14,0.171,15,0.136,16,0.144,19,1.104,24,1.701,26,1.689,27,1.13,28,0.664,29,1.024,31,1.224,33,0.309,46,0.341,47,0.245,49,0.821,59,1.224,78,0.216,81,0.007,82,0.011,83,0.007,85,0.326,86,0.761,88,1.642,96,1.83,97,2.571,98,1.83,99,1.83,100,1.635,101,1.83,102,0.716,103,1.404,104,1.83,112,2.465,114,0.749,116,1.404,119,1.165,125,2.67,162,1.404,178,0.975,181,1.067,185,2.757,189,2.757,191,2.757,193,2.757,196,2.757,198,2.757,201,2.408,203,2.408,205,2.408,207,2.408,209,2.408,212,2.408,214,2.079,216,2.408,232,2.436,233,2.436,234,2.436,235,2.436,236,2.436,237,2.436,242,3.01,286,3.643,371,2.187,372,2.306,373,2.988,375,3.063,376,3.351,378,3.449,388,2.077,389,3.55,390,3.637,391,4.815,392,3.797,393,2.231,394,2.231,395,2.231,396,2.231,397,2.231,398,2.231,399,2.231,400,2.231,401,2.231,402,2.231,403,2.231,404,2.231,405,2.231,416,1.728,471,2.928,472,2.231,485,3.406,486,2.647,487,3.406,488,2.416,489,2.647,490,2.416,491,2.647,492,2.647,493,2.647,494,2.647,495,2.647,496,2.647,497,2.647,498,2.647,499,2.647,500,2.647,501,2.647,502,2.647,503,2.647,504,2.647,505,2.647,506,2.647,507,2.647,508,2.647,526,1.945,727,3.427]],["title/interfaces/DocumentationContent.html",[47,0.272,728,2.16]],["body/interfaces/DocumentationContent.html",[7,0.018,13,0.27,14,0.227,15,0.27,16,0.135,28,0.521,31,0.752,33,0.356,36,0.325,46,0.292,47,0.325,49,1.031,54,1.195,56,1.478,59,0.752,78,0.203,81,0.01,82,0.013,83,0.01,84,1.413,85,0.433,86,0.921,93,0.967,113,2.428,114,0.993,126,1.817,154,0.907,175,1.694,176,1.546,181,0.867,262,1.478,275,1.086,300,1.775,341,1.546,456,1.238,540,2.292,545,2.428,654,2.756,728,4.1,729,2.292,730,2.428,731,3.205,732,4.121,733,5.045,734,4.121,735,3.872,736,5.091,737,4.516,738,3.917,739,3.974,740,4.782,741,5.045,742,5.576,743,5.045,744,3.512,745,3.205,746,3.512,747,2.96,748,3.205,749,3.512,750,5.886,751,3.205,752,3.923,753,3.512,754,3.917,755,5.045,756,3.923,757,3.923,758,3.923,759,3.923,760,3.923,761,3.923,762,3.923,763,3.923,764,3.923,765,3.923,766,3.923,767,3.923,768,3.923,769,3.923,770,5.045,771,3.923,772,3.923,773,3.923,774,3.923,775,3.923,776,3.923,777,3.923]],["title/interfaces/FilterParams.html",[47,0.272,138,2.16]],["body/interfaces/FilterParams.html",[7,0.018,13,0.121,14,0.222,15,0.121,16,0.091,18,3.275,28,0.646,29,1.132,33,0.381,36,0.219,46,0.222,47,0.376,49,1.028,54,1.014,56,1.448,59,1.218,76,2.384,78,0.137,81,0.007,82,0.01,83,0.007,84,0.951,85,0.291,86,0.702,87,1.855,88,1.04,89,1.634,90,1.634,91,2.157,92,2.157,93,0.737,94,2.157,95,1.992,96,1.634,97,2.455,98,1.634,99,1.634,100,2.507,101,1.634,102,0.931,103,1.254,104,1.634,105,3.141,106,4.407,107,4.068,108,2.157,109,2.157,110,1.992,111,3.141,112,2.317,113,2.379,114,0.669,115,1.254,116,1.825,117,1.737,118,2.157,119,1.04,120,3.42,121,2.9,122,1.917,123,1.543,124,1.543,125,2.126,126,1.989,127,2.157,128,3.184,129,2.157,130,3.756,131,5.154,132,3.497,133,3.42,134,2.507,135,2.157,136,1.855,137,3.081,138,2.529,139,3.756,140,4.068,141,3.756,142,4.068,143,4.068,144,4.068,145,3.275,146,3.184,147,3.184,148,3.184,149,3.756,150,4.068,151,1.46,152,1.386,153,3.184,154,0.889,155,1.855,156,2.9,157,1.855,158,1.992,159,1.855,160,2.157,161,3.717,162,1.254,163,1.855,164,2.017,165,1.875,166,2.9,167,1.992,168,1.855,169,3.141,170,1.634,171,2.157,172,1.737,173,2.157,174,2.157,175,1.14,176,1.04,177,1.855,178,0.871,179,0.951,180,1.824,181,0.849,182,2.379,183,2.379,184,2.157,185,1.317,186,3.703,187,2.157,188,4.323,189,1.317,190,2.157,191,1.317,192,2.157,193,1.317,194,4.865,195,2.157,196,1.317,197,2.157,198,1.317,199,2.157,200,4.511,201,1.317,202,2.157,203,1.317,204,2.157,205,1.317,206,2.157,207,1.317,208,2.157,209,1.317,210,2.157,211,2.7,212,1.317,213,2.157,214,1.317,215,3.703,216,2.261,217,3.703,218,2.157,219,1.992,220,2.157,221,2.157,222,2.157,223,2.157,224,2.157,225,2.157,226,2.157,227,2.157,228,2.157,229,2.157,230,2.157]],["title/classes/ForwardingDataSource.html",[78,0.17,392,1.918]],["body/classes/ForwardingDataSource.html",[7,0.017,13,0.136,14,0.171,15,0.136,16,0.222,19,1.104,24,1.69,26,1.69,27,1.13,28,0.659,29,1.024,31,1.224,33,0.309,46,0.341,47,0.246,49,0.821,59,1.224,78,0.216,81,0.007,82,0.011,83,0.007,85,0.327,88,2.532,96,1.832,97,2.571,98,1.832,99,1.832,100,1.637,101,1.832,102,0.716,103,1.405,104,1.832,112,2.463,114,0.749,116,1.405,119,1.166,125,2.901,162,1.405,178,1.376,181,0.654,185,2.758,189,2.758,191,2.758,193,2.758,196,2.758,198,2.758,201,2.409,203,2.409,205,2.409,207,2.409,209,2.409,212,2.409,214,2.081,216,2.409,232,2.437,233,2.437,234,2.437,235,2.437,236,2.437,237,2.437,242,3.011,286,3.645,371,1.553,372,1.637,373,1.832,375,3.065,376,3.352,378,3.451,388,2.079,389,3.551,390,3.638,392,2.822,416,1.729,471,4.515,472,2.233,485,3.408,486,2.65,487,3.408,488,2.418,489,2.65,490,2.418,491,2.65,492,2.65,493,2.65,494,2.65,495,2.65,496,2.65,497,2.65,498,2.65,499,2.65,500,2.65,501,2.65,502,2.65,503,2.65,504,2.65,505,2.65,506,2.65,507,2.65,508,2.65,526,1.947,778,3.431,779,3.431,780,3.431,781,3.431,782,3.431,783,3.431,784,3.431,785,3.431,786,3.431,787,3.431,788,3.431,789,3.431,790,3.431]],["title/injectables/GlobalConfigState.html",[93,0.63,122,1.638]],["body/injectables/GlobalConfigState.html",[7,0.018,13,0.143,14,0.179,15,0.143,16,0.22,19,1.142,24,1.676,26,1.714,27,1.201,28,0.669,29,1.074,31,1.186,33,0.395,36,0.258,46,0.179,49,1.007,54,0.827,59,1.079,61,2.042,62,0.938,63,1.717,78,0.161,81,0.008,82,0.011,83,0.008,85,0.343,86,0.787,93,0.827,102,0.751,112,2.332,114,0.786,115,2.048,119,1.223,122,2.151,152,2.953,154,0.998,165,2.33,180,2.008,181,1.095,183,1.921,231,1.405,287,3.481,292,1.28,371,2.263,415,1.921,429,3.26,456,1.691,617,3.523,791,6.385,792,3.104,793,4.437,794,5.745,795,7.261,796,4.999,797,4.999,798,4.999,799,4.999,800,3.254,801,6.752,802,5.828,803,3.598,804,5.795,805,3.598,806,5.349,807,3.598,808,6.208,809,3.598,810,3.861,811,5.356,812,3.598,813,4.999,814,3.598,815,4.999,816,5.745,817,3.598,818,4.999,819,6.208,820,3.598,821,4.999,822,6.208,823,3.598,824,3.598,825,3.598,826,3.598,827,3.598,828,2.342,829,3.598,830,3.861,831,4.049,832,2.779,833,2.779,834,3.598,835,3.523,836,2.342,837,2.779,838,2.342,839,3.598,840,2.779,841,2.536,842,3.598,843,3.598,844,3.598,845,4.999,846,3.598,847,3.598,848,3.598,849,3.598,850,5.745,851,3.598,852,3.598,853,3.598]],["title/injectables/GlobalsService.html",[93,0.63,854,2.94]],["body/injectables/GlobalsService.html",[7,0.018,13,0.106,14,0.134,15,0.106,16,0.21,19,0.923,24,1.597,26,1.658,27,1.124,28,0.662,29,1.034,31,1.191,33,0.148,36,0.192,46,0.242,49,0.363,53,1.739,54,0.96,59,1.103,61,4.367,62,1.993,63,2.77,68,2.215,72,2.45,74,2.583,76,2.427,78,0.12,81,0.006,82,0.009,83,0.006,85,0.256,93,0.669,134,3.242,151,1.28,154,1.08,162,2.217,175,1,176,0.912,181,0.512,216,1.739,231,1.048,242,1.215,262,1.887,292,1.438,304,3.122,321,2.158,340,1.155,341,2.074,348,4.18,375,2.451,389,3.733,440,1.747,456,1.775,535,1.747,544,4.556,626,3.815,635,1.626,652,1.747,739,1.433,800,2.631,854,3.122,855,1.891,856,4.042,857,5.333,858,5.412,859,6.261,860,2.684,861,4.042,862,4.042,863,4.042,864,4.042,865,4.863,866,4.042,867,4.042,868,2.849,869,4.042,870,4.042,871,3.488,872,3.488,873,5.247,874,6.794,875,2.684,876,3.122,877,6.901,878,6.993,879,2.684,880,3.488,881,6.461,882,2.684,883,2.684,884,2.684,885,4.042,886,2.684,887,4.042,888,2.631,889,3.488,890,4.042,891,3.122,892,4.042,893,5.806,894,4.042,895,2.684,896,3.122,897,6.102,898,2.684,899,3.122,900,2.684,901,2.684,902,2.684,903,2.684,904,2.073,905,2.315,906,4.484,907,2.684,908,2.684,909,2.684,910,2.684,911,2.684,912,2.073,913,4.042,914,4.863,915,4.042,916,4.042,917,2.684,918,2.684,919,2.684,920,4.042,921,2.631,922,2.684,923,2.684,924,2.315,925,2.684,926,5.806,927,2.684,928,2.315,929,2.684,930,2.684,931,2.684,932,2.684,933,2.073,934,2.684,935,2.684,936,3.122,937,1.891,938,4.042,939,2.315,940,3.122,941,1.891,942,2.315,943,2.315,944,2.684,945,2.684,946,2.684,947,2.684,948,1.891,949,1.747,950,1.747,951,2.684,952,1.626,953,2.073,954,2.315,955,2.684,956,2.684,957,2.315,958,2.684,959,2.684]],["title/injectables/GoogleAnalyticsSyncService.html",[8,2.16,93,0.63]],["body/injectables/GoogleAnalyticsSyncService.html",[6,3.468,7,0.017,8,3.368,13,0.184,14,0.232,15,0.184,16,0.216,19,1.356,24,1.624,26,1.356,27,0.982,28,0.582,29,0.889,31,0.982,33,0.379,36,0.333,39,2.821,40,2.485,41,3.723,42,3.281,46,0.232,49,0.802,53,2.812,58,3.118,62,1.213,63,3.118,76,1.582,78,0.208,81,0.01,82,0.013,83,0.01,85,0.443,86,0.935,93,0.982,114,1.017,137,3.489,154,1.184,178,1.325,179,1.845,180,2.263,181,1.408,231,1.817,278,2.485,292,1.656,449,2.821,451,3.906,456,1.874,462,3.368,465,3.03,936,5.047,949,3.03,960,6.271,961,3.281,962,4.253,963,5.935,964,4.016,965,6.882,966,5.935,967,4.655,968,5.935,969,4.655,970,3.597,971,3.709,972,4.655,973,4.655,974,4.655,975,4.655,976,4.655,977,5.935,978,5.935,979,4.655,980,4.655,981,3.281,982,4.655,983,4.655]],["title/components/InfoButtonComponent.html",[275,0.909,700,1.723]],["body/components/InfoButtonComponent.html",[7,0.018,13,0.308,14,0.169,15,0.134,16,0.207,19,1.095,24,1.555,26,1.095,27,1.055,28,0.539,29,0.718,31,0.92,33,0.365,36,0.243,46,0.169,49,0.751,56,1.557,62,1.249,78,0.151,81,0.007,82,0.01,83,0.007,85,0.323,86,0.755,102,1.529,112,1.49,114,0.74,126,1.729,154,0.957,178,1.364,179,1.053,180,1.798,181,1.216,262,1.557,275,1.689,280,2.278,290,1.458,292,1.705,300,1.323,305,2.728,306,1.963,308,1.963,312,1.458,313,2.062,321,1.809,339,2.287,340,2.062,341,1.629,358,1.534,366,1.534,437,3.12,451,3.432,456,1.804,462,3.156,527,1.534,552,1.388,553,2.416,554,1.923,555,1.923,556,1.809,562,1.708,573,3.378,693,1.923,694,2.062,695,1.534,696,3.432,697,1.923,698,1.923,699,1.923,700,2.737,701,1.923,702,2.062,703,1.923,704,1.534,705,1.708,706,1.923,707,1.534,708,1.458,709,1.923,710,1.534,711,1.809,712,1.923,713,1.923,714,1.534,715,1.617,716,1.809,717,1.809,718,1.458,719,1.809,720,1.923,728,3.432,729,3.506,730,3.777,738,4.127,739,1.809,740,3.62,747,4.528,751,2.388,754,2.905,888,3.12,962,3.62,971,3.156,981,2.388,984,2.923,985,5.656,986,3.936,987,3.378,988,3.702,989,3.936,990,5.217,991,4.793,992,5.562,993,4.793,994,4.793,995,6.046,996,4.295,997,4.67,998,3.388,999,6.046,1000,4.793,1001,3.664,1002,4.793,1003,5.217,1004,3.388,1005,3.388,1006,3.378,1007,3.702,1008,4.793,1009,3.388,1010,4.793,1011,4.793,1012,3.388,1013,4.793,1014,3.388,1015,4.135,1016,4.135,1017,4.793,1018,2.388,1019,3.702,1020,2.053,1021,2.923,1022,3.388,1023,3.388,1024,3.388,1025,3.388,1026,3.388,1027,3.388,1028,2.388,1029,3.388,1030,1.809,1031,3.388,1032,2.617,1033,2.617,1034,3.388,1035,2.617,1036,2.617,1037,2.923,1038,2.923,1039,2.617,1040,3.388,1041,4.135,1042,3.388,1043,2.617,1044,2.617,1045,2.617,1046,2.923,1047,2.923,1048,2.923,1049,2.617,1050,3.388,1051,2.205,1052,2.923]],["title/modules/InfoButtonModule.html",[0,1.486,1053,2.683]],["body/modules/InfoButtonModule.html",[2,1.995,3,2.412,7,0.017,10,2.653,11,2.194,12,1.665,13,0.276,14,0.267,15,0.212,16,0.159,33,0.415,35,2.653,36,0.383,46,0.267,71,2.932,78,0.239,81,0.012,82,0.014,83,0.012,362,3.09,363,3.09,364,3.264,365,2.425,700,3.55,729,2.7,730,2.86,744,4.137,1020,3.246,1053,5.451,1054,4.622,1055,4.622,1056,4.622,1057,4.622,1058,4.898,1059,5.357,1060,4.565,1061,3.776,1062,5.357,1063,6.477,1064,5.357]],["title/injectables/InfoButtonService.html",[93,0.63,747,2.477]],["body/injectables/InfoButtonService.html",[7,0.018,13,0.262,14,0.209,15,0.286,16,0.205,19,1.267,24,1.51,26,1.267,27,0.917,28,0.554,29,0.831,31,1.028,33,0.343,36,0.3,46,0.276,47,0.3,49,1.01,54,1.169,56,1.802,59,0.693,62,1.093,78,0.187,81,0.009,82,0.012,83,0.009,85,0.399,86,0.873,93,0.917,113,2.961,114,0.916,126,2.055,154,1.107,175,1.562,176,1.425,179,1.303,181,0.799,231,1.637,262,1.362,275,1.324,292,1.491,300,1.637,341,1.425,456,1.51,540,2.795,545,2.961,654,3.361,728,4.09,729,3.466,730,3.672,731,2.955,732,2.955,733,3.617,734,2.955,735,3.903,736,4.38,737,3.238,738,3.766,739,3.672,740,4.045,741,3.617,742,5.933,743,5.705,744,3.238,745,2.955,746,3.238,747,3.61,748,3.909,749,4.283,750,6.096,751,2.955,752,4.784,753,4.283,754,4.282,755,5.361,756,4.784,757,4.784,758,5.705,759,3.617,760,3.617,761,3.617,762,3.617,763,3.617,764,4.784,765,4.784,766,4.784,767,4.784,768,4.784,769,4.784,770,4.784,771,3.617,772,3.617,773,3.617,774,3.617,775,3.617,776,3.617,777,3.617,1065,5.546,1066,4.193,1067,5.546,1068,4.193,1069,4.193]],["title/components/InfoDialogComponent.html",[275,0.909,702,1.638]],["body/components/InfoDialogComponent.html",[7,0.018,12,0.946,13,0.292,14,0.152,15,0.121,16,0.205,19,1.398,24,1.544,26,0.695,27,0.952,28,0.569,29,0.456,31,0.734,33,0.289,36,0.218,46,0.221,47,0.218,49,0.863,54,0.504,78,0.136,81,0.007,82,0.01,83,0.007,85,0.29,86,0.699,102,1.482,126,2.177,168,1.845,170,1.626,178,1.263,179,1.38,182,2.37,245,1.535,262,1.702,275,1.713,278,1.626,280,1.247,290,1.31,300,2.045,305,2.674,306,1.818,308,1.818,312,1.31,313,1.91,339,2.92,340,1.91,341,1.509,358,1.379,366,1.379,423,1.957,456,1.568,527,1.379,545,2.797,552,1.247,553,2.238,554,1.728,555,1.728,556,1.626,558,1.453,562,1.535,622,2.519,639,1.982,681,2.69,692,1.982,693,1.728,694,1.91,695,1.379,696,3.267,697,1.728,698,1.728,699,1.728,700,1.379,701,1.728,702,2.477,703,1.728,704,1.379,705,1.535,706,1.728,707,1.379,708,1.31,709,1.728,710,1.379,711,1.626,712,1.728,713,1.728,714,1.379,715,1.453,716,1.626,717,1.626,718,1.31,719,1.626,720,1.728,728,3.267,729,3.475,730,1.626,735,2.519,736,2.146,738,4.513,739,2.797,740,3.747,754,1.845,950,1.982,986,2.889,987,2.146,988,3.429,989,2.889,996,4.727,997,4.446,1001,3.175,1006,2.146,1018,2.146,1019,2.352,1020,4.178,1028,3.129,1030,2.797,1032,2.352,1033,2.352,1039,4.727,1043,2.352,1044,2.352,1047,5.28,1048,4.52,1049,4.446,1051,2.889,1070,2.352,1071,3.129,1072,2.889,1073,3.83,1074,3.83,1075,3.83,1076,4.046,1077,4.52,1078,3.83,1079,4.503,1080,5.28,1081,4.52,1082,5.512,1083,4.446,1084,3.045,1085,5.28,1086,4.314,1087,4.439,1088,4.046,1089,4.52,1090,4.046,1091,4.52,1092,3.045,1093,3.83,1094,3.045,1095,3.429,1096,3.429,1097,3.692,1098,3.83,1099,3.83,1100,3.045,1101,3.045,1102,3.045,1103,3.83,1104,3.045,1105,2.627,1106,2.352,1107,2.627,1108,2.627,1109,2.627,1110,2.627,1111,2.627,1112,2.627,1113,2.627,1114,2.627,1115,2.627,1116,2.627,1117,2.627,1118,2.627,1119,2.627,1120,2.627,1121,2.627,1122,2.627,1123,4.439,1124,4.439,1125,4.046,1126,4.046,1127,2.352,1128,3.045,1129,3.83,1130,2.69,1131,3.045,1132,4.314,1133,4.4,1134,6.12,1135,3.429,1136,3.045,1137,2.889,1138,2.627,1139,1.982,1140,3.045,1141,4.046,1142,2.352,1143,3.045,1144,4.439,1145,4.439,1146,3.045,1147,3.045,1148,3.045,1149,2.627,1150,3.045,1151,3.83,1152,2.627,1153,1.982,1154,3.045,1155,3.045,1156,3.129,1157,3.045]],["title/interfaces/InfoDialogData.html",[47,0.272,1086,2.683]],["body/interfaces/InfoDialogData.html",[7,0.018,12,1.399,13,0.29,14,0.224,15,0.178,16,0.134,19,1.028,28,0.573,33,0.355,36,0.322,46,0.29,47,0.322,49,1.003,54,0.745,78,0.201,81,0.01,82,0.013,83,0.01,84,1.399,85,0.429,86,0.915,102,0.94,126,2.187,178,1.281,179,1.399,182,2.403,262,1.463,275,1.72,278,2.403,280,2.379,305,1.677,306,1.844,308,1.844,339,2.772,340,1.937,341,1.974,456,1.582,545,2.403,681,2.728,702,1.937,728,3.993,729,2.269,730,2.403,735,2.555,738,4.501,739,3.629,740,4.579,986,2.93,988,3.476,989,2.93,996,3.476,997,5.434,1001,2.728,1018,3.172,1019,3.476,1020,2.728,1028,3.172,1032,3.476,1033,3.476,1070,3.476,1071,3.172,1072,2.93,1073,3.883,1074,3.883,1075,3.883,1076,4.486,1077,3.883,1078,3.883,1079,4.094,1080,5.012,1081,3.883,1082,3.883,1083,3.476,1085,5.012,1086,4.533,1088,3.476,1089,3.883,1090,3.476,1091,3.883,1093,3.883,1095,3.476,1096,3.476,1097,3.172,1098,3.883,1099,3.883,1103,3.883,1105,3.883,1106,4.486,1107,3.883,1108,3.883,1109,3.883,1110,3.883,1111,3.883,1112,3.883,1113,3.883,1114,3.883,1115,3.883,1116,3.883,1117,3.883,1118,3.883,1119,3.883,1120,3.883,1121,3.883,1122,3.883]],["title/modules/InfoDialogModule.html",[0,1.486,1058,2.477]],["body/modules/InfoDialogModule.html",[2,1.986,3,2.406,7,0.017,10,2.646,11,2.184,12,1.658,13,0.256,14,0.266,15,0.211,16,0.159,33,0.423,35,2.646,36,0.382,39,3.232,46,0.266,71,2.414,78,0.238,81,0.012,82,0.014,83,0.012,362,3.082,363,3.082,364,3.256,365,2.414,702,3.373,729,2.688,754,3.232,1018,3.759,1020,3.232,1021,4.601,1058,4.951,1060,4.552,1061,3.759,1097,3.759,1158,4.601,1159,4.601,1160,4.601,1161,5.333,1162,6.459,1163,6.459,1164,5.333,1165,5.333,1166,6.459,1167,4.601,1168,5.333]],["title/injectables/InjectorDelegateDataSourceService.html",[93,0.63,1169,2.94]],["body/injectables/InjectorDelegateDataSourceService.html",[7,0.017,13,0.153,14,0.319,15,0.153,16,0.177,19,1.199,24,1.748,26,1.71,27,1.205,28,0.662,29,1.091,31,1.254,33,0.369,36,0.277,46,0.193,49,0.709,78,0.173,81,0.008,82,0.011,83,0.008,85,0.368,86,0.827,88,2.027,93,0.868,97,2.513,112,2.388,114,0.844,115,1.583,119,1.313,122,2.753,123,1.948,124,1.948,126,1.201,152,1.749,179,1.632,181,1.137,183,2.803,185,2.566,189,2.566,191,2.566,193,2.566,196,2.566,198,2.566,201,1.663,203,1.663,205,1.663,207,1.663,209,1.663,212,1.663,214,1.663,216,1.663,231,1.509,232,2.646,233,2.646,234,2.646,235,2.646,236,2.646,237,2.646,242,3.124,287,3.182,371,2.377,372,3.053,373,3.184,375,3.372,376,3.225,378,2.98,379,2.515,388,2.342,389,3.184,390,2.98,391,4.935,392,3.8,393,2.515,394,2.515,395,2.515,396,2.515,397,2.515,398,2.515,399,2.515,400,2.515,401,2.515,402,2.515,403,2.515,404,2.515,405,2.515,415,2.063,416,1.948,417,2.515,418,2.515,420,2.515,429,2.193,1169,4.055,1170,5.145,1171,3.334,1172,5.25,1173,7.059,1174,3.864,1175,5.25,1176,5.145,1177,3.864,1178,5.963,1179,3.864,1180,3.864,1181,3.864,1182,3.864,1183,3.864]],["title/injectables/LocalStorageSyncService.html",[9,2.16,93,0.63]],["body/injectables/LocalStorageSyncService.html",[6,3.412,7,0.018,9,3.238,13,0.173,14,0.218,15,0.173,16,0.217,19,1.303,24,1.633,26,1.303,27,0.944,28,0.508,29,1.008,31,1.05,33,0.35,36,0.313,42,3.086,45,4.903,46,0.284,49,0.858,54,1.05,59,1.05,61,3.602,62,1.864,63,2.089,68,1.939,78,0.196,81,0.01,82,0.012,83,0.01,85,0.417,86,0.899,93,0.944,114,0.957,154,1.267,175,1.631,176,1.488,178,1.246,179,1.773,180,2.282,181,1.388,231,1.71,278,2.338,279,3.086,292,2.03,298,3.086,449,4.413,451,3.817,456,1.832,462,3.238,464,3.086,465,2.85,906,3.382,940,3.382,957,3.778,961,3.086,962,4.131,964,3.778,971,3.602,981,3.086,1184,5.625,1185,6.725,1186,5.706,1187,5.706,1188,4.379,1189,4.379,1190,5.706,1191,4.379,1192,4.379,1193,3.382,1194,3.778,1195,3.778,1196,3.778,1197,3.086,1198,5.706,1199,4.379,1200,4.379,1201,4.379,1202,4.379,1203,4.379,1204,4.379,1205,4.379,1206,4.379,1207,5.706,1208,4.379,1209,4.379,1210,4.379,1211,5.706,1212,4.379,1213,4.379]],["title/modules/MousePositionTrackerModule.html",[0,1.486,1214,2.94]],["body/modules/MousePositionTrackerModule.html",[0,1.97,2,1.879,7,0.018,13,0.2,14,0.252,15,0.2,16,0.15,33,0.401,35,2.557,36,0.361,39,3.057,40,2.694,41,2.543,46,0.311,54,1.204,56,1.639,59,1.033,78,0.225,81,0.011,82,0.014,83,0.011,114,1.102,115,2.066,119,1.715,126,1.568,179,1.568,278,2.694,365,2.284,671,3.284,828,3.284,921,3.284,948,3.556,949,3.284,950,3.284,952,3.783,953,3.896,971,3.543,1153,3.284,1214,4.822,1215,3.896,1216,3.896,1217,6.112,1218,6.78,1219,5.045,1220,5.045,1221,4.352,1222,4.352,1223,5.849,1224,5.045,1225,4.822,1226,5.045,1227,6.243,1228,6.243,1229,3.896,1230,6.243,1231,6.243,1232,5.045,1233,5.045,1234,4.352,1235,5.045,1236,5.045,1237,5.045,1238,5.045,1239,5.045,1240,5.045,1241,5.045,1242,5.045,1243,4.352,1244,5.045,1245,5.045,1246,4.352,1247,4.352,1248,4.352,1249,3.896,1250,5.045,1251,5.045,1252,5.045]],["title/directives/NumberDirective.html",[695,1.723,718,1.638]],["body/directives/NumberDirective.html",[7,0.017,13,0.186,14,0.234,15,0.186,16,0.205,19,1.362,24,1.498,26,1.498,27,1.085,28,0.532,29,0.983,31,0.776,33,0.259,36,0.336,46,0.234,54,0.776,69,2.846,78,0.21,81,0.01,82,0.013,83,0.01,85,0.447,165,1.938,179,1.458,245,2.365,262,2.243,280,3.158,300,2.561,305,2.222,329,3.306,339,2.846,340,2.567,341,2.027,456,1.625,562,2.365,694,2.97,695,3.297,717,2.505,718,2.567,719,3.185,751,3.307,1001,3.615,1225,5.954,1229,5.065,1253,5.33,1254,5.33,1255,4.048,1256,5.965,1257,5.965,1258,5.965,1259,5.965,1260,4.691,1261,4.864,1262,4.691,1263,4.691,1264,5.965,1265,6.558,1266,5.658,1267,5.658,1268,5.658,1269,5.965,1270,5.965,1271,4.691,1272,5.965,1273,6.558,1274,4.691,1275,4.691,1276,4.691]],["title/modules/NumbersOnlyModule.html",[0,1.486,1277,2.683]],["body/modules/NumbersOnlyModule.html",[2,2.107,3,2.492,7,0.017,10,2.74,11,2.317,12,1.758,13,0.224,14,0.282,15,0.224,16,0.168,33,0.369,35,2.74,36,0.405,46,0.282,78,0.253,81,0.012,82,0.015,83,0.012,362,3.192,363,3.192,718,3.396,1253,4.368,1254,4.368,1268,4.88,1277,5.424,1278,4.88,1279,4.88,1280,4.88,1281,5.656,1282,5.656]],["title/components/OpacitySliderComponent.html",[275,0.909,704,1.723]],["body/components/OpacitySliderComponent.html",[7,0.018,11,2.654,13,0.201,14,0.143,15,0.114,16,0.215,19,0.973,24,1.637,26,0.657,27,1.072,28,0.605,29,0.431,31,0.989,33,0.159,36,0.206,46,0.143,49,0.757,53,1.238,54,0.476,62,1.828,68,1.447,69,2.032,74,2.032,78,0.28,81,0.006,82,0.009,83,0.006,85,0.274,86,0.671,102,1.523,154,1.193,165,1.647,178,1.212,181,1.194,245,1.45,262,1.384,269,2.028,273,2.58,274,1.536,275,1.428,276,4.217,277,1.373,280,2.076,281,4.076,290,1.238,292,2.227,299,1.744,300,1.123,305,2.643,306,1.744,308,1.744,310,2.274,311,2.274,312,1.238,313,2.573,314,2.032,315,2.419,328,4.689,329,2.146,341,0.978,358,1.303,366,1.303,423,1.447,456,1.883,527,1.303,535,1.873,552,1.179,553,2.146,554,1.633,555,1.633,556,1.536,558,2.853,562,1.45,573,3.001,574,2.772,691,1.873,692,3.647,693,1.633,694,1.832,695,1.303,696,3.18,697,1.633,698,1.633,699,1.633,700,1.303,701,1.633,702,1.238,703,1.633,704,2.536,705,3.914,706,1.633,707,1.303,708,1.238,709,1.633,710,1.303,711,1.536,712,1.633,713,1.633,714,1.303,715,1.373,716,1.536,717,1.536,718,1.238,719,1.536,720,1.633,732,3.001,739,2.274,888,2.772,970,1.744,1030,2.991,1035,2.222,1036,3.915,1037,4.373,1038,4.834,1039,3.289,1041,3.674,1043,4.327,1044,4.327,1046,3.674,1049,2.222,1051,3.299,1076,3.915,1083,4.327,1125,2.222,1126,2.222,1127,2.222,1130,1.744,1132,3.949,1133,2.772,1135,2.222,1137,1.873,1138,2.482,1139,3.299,1141,2.222,1142,2.222,1156,4.215,1234,2.482,1283,5.587,1284,5.587,1285,2.482,1286,6.333,1287,4.258,1288,3.674,1289,5.069,1290,4.258,1291,5.069,1292,4.258,1293,5.603,1294,5.603,1295,5.98,1296,3.674,1297,5.98,1298,5.069,1299,5.069,1300,4.834,1301,2.877,1302,2.877,1303,4.836,1304,2.877,1305,4.834,1306,2.877,1307,4.258,1308,4.258,1309,2.877,1310,4.258,1311,4.258,1312,2.877,1313,4.258,1314,2.877,1315,2.877,1316,2.877,1317,5.603,1318,2.877,1319,3.674,1320,5.069,1321,2.877,1322,2.877,1323,6.262,1324,5.069,1325,2.877,1326,4.258,1327,4.258,1328,2.877,1329,2.877,1330,3.674,1331,3.915,1332,3.674,1333,4.258,1334,3.674,1335,2.877,1336,2.222,1337,2.482,1338,2.877,1339,3.674,1340,2.482,1341,2.877,1342,2.482]],["title/modules/OpacitySliderModule.html",[0,1.486,1343,2.683]],["body/modules/OpacitySliderModule.html",[2,2.02,3,2.43,7,0.017,10,2.672,11,2.221,12,1.685,13,0.215,14,0.27,15,0.215,16,0.161,33,0.416,35,2.672,36,0.388,46,0.27,71,2.455,78,0.242,81,0.012,82,0.014,83,0.012,362,3.113,363,3.113,364,3.288,365,2.455,704,3.555,705,2.733,1060,4.598,1061,3.822,1283,4.188,1284,4.188,1343,5.379,1344,4.678,1345,4.678,1346,4.678,1347,5.423,1348,5.423,1349,6.524,1350,5.423,1351,6.524,1352,5.423]],["title/interfaces/OrganInfo.html",[47,0.272,1353,2.683]],["body/interfaces/OrganInfo.html",[7,0.018,13,0.069,14,0.087,15,0.069,16,0.052,20,2.843,27,1.256,28,0.5,29,0.897,31,0.29,33,0.159,36,0.125,46,0.213,47,0.125,49,0.876,53,2.415,54,0.991,58,1.756,59,0.781,62,0.457,68,1.251,74,3.658,76,0.981,78,0.129,81,0.004,82,0.006,83,0.004,84,0.545,85,0.167,86,0.455,102,0.603,145,3.733,146,1.749,147,3.629,148,2.861,154,0.576,162,0.718,165,0.569,172,2.423,178,0.499,180,0.858,181,0.55,262,0.569,263,2.035,268,4.579,269,2.035,273,1.062,275,0.689,276,1.879,277,0.836,280,2.2,281,1.879,299,1.749,305,1.59,306,0.718,308,0.718,313,0.754,314,0.836,315,0.836,321,3.555,328,2.035,329,0.883,332,3.58,341,1.451,423,1.451,451,0.994,456,1.631,462,1.638,529,2.229,535,1.141,545,2.867,558,1.756,561,2.035,604,1.235,605,2.035,613,2.035,622,1.638,623,1.235,694,0.754,707,0.793,708,3.337,734,1.235,810,3.923,888,2.778,899,3.297,912,1.353,921,2.396,941,1.235,948,2.594,949,2.396,950,2.396,952,1.062,970,4.08,987,4.098,1015,1.512,1030,0.936,1071,1.235,1130,4.368,1137,4.426,1261,3.008,1303,2.229,1353,3.785,1354,1.235,1355,1.235,1356,1.353,1357,2.887,1358,4.268,1359,2.49,1360,6.496,1361,5.419,1362,6.496,1363,2.49,1364,2.887,1365,2.49,1366,2.49,1367,4.625,1368,2.49,1369,2.49,1370,2.49,1371,1.512,1372,2.887,1373,1.512,1374,1.512,1375,1.512,1376,1.512,1377,1.353,1378,1.512,1379,2.49,1380,1.512,1381,1.512,1382,2.49,1383,1.512,1384,2.49,1385,2.035,1386,3.683,1387,1.512,1388,1.512,1389,3.176,1390,4.382,1391,5.409,1392,1.512,1393,1.512,1394,1.512,1395,3.176,1396,5.017,1397,4.382,1398,1.512,1399,1.512,1400,1.512,1401,1.512,1402,2.49,1403,1.512,1404,3.176,1405,3.923,1406,1.512,1407,1.512,1408,1.512,1409,3.176,1410,4.382,1411,1.512,1412,1.512,1413,1.512,1414,1.512,1415,2.49,1416,1.512,1417,2.49,1418,2.49,1419,2.49,1420,1.512,1421,1.512,1422,3.176,1423,4.382,1424,1.512,1425,1.512,1426,1.512,1427,1.512,1428,2.49,1429,1.512,1430,1.512,1431,1.512,1432,2.49,1433,1.512,1434,2.49,1435,3.683,1436,1.512,1437,1.512,1438,1.512,1439,4.382,1440,2.49,1441,1.512,1442,1.512,1443,2.49,1444,1.512,1445,1.512,1446,2.49,1447,1.512,1448,1.512,1449,2.49,1450,1.512,1451,3.176,1452,4.382,1453,1.512,1454,1.512,1455,1.512,1456,1.512,1457,2.49,1458,2.49,1459,1.512,1460,1.512,1461,2.49,1462,1.512,1463,2.49,1464,2.49,1465,3.683,1466,3.683,1467,1.512,1468,1.512,1469,1.512,1470,1.512,1471,1.512,1472,2.229,1473,1.512,1474,1.512,1475,5.296,1476,1.512,1477,1.752,1478,1.752,1479,1.752,1480,1.752,1481,4.268,1482,1.752,1483,3.681,1484,1.752,1485,4.268,1486,1.512,1487,1.752,1488,1.752,1489,1.752,1490,2.843,1491,2.887,1492,3.176,1493,1.752,1494,2.49,1495,1.752,1496,3.681,1497,2.887,1498,3.681,1499,3.681,1500,4.268,1501,1.752,1502,1.752,1503,1.752,1504,1.752,1505,1.752,1506,2.887,1507,2.887,1508,1.752,1509,1.752,1510,3.681,1511,1.752,1512,2.887,1513,1.752,1514,1.752,1515,2.887,1516,1.512,1517,1.752,1518,1.752,1519,2.887,1520,1.752,1521,1.752,1522,1.752,1523,3.681,1524,1.752,1525,1.752,1526,1.752,1527,1.752,1528,1.752,1529,2.887,1530,1.752,1531,1.752,1532,4.72,1533,2.887,1534,3.681,1535,1.752,1536,4.841,1537,2.887,1538,3.681,1539,3.681,1540,5.37,1541,2.887,1542,2.887,1543,1.752,1544,1.752,1545,3.681,1546,1.752,1547,1.752,1548,1.752,1549,1.752,1550,1.752,1551,1.512,1552,1.752,1553,1.752,1554,1.752,1555,1.752,1556,1.752,1557,1.752,1558,1.752,1559,1.752,1560,1.752,1561,1.752,1562,1.752,1563,3.681,1564,2.887,1565,1.752,1566,1.752,1567,1.752,1568,1.752,1569,1.512,1570,1.752,1571,1.752,1572,1.752,1573,1.752,1574,1.752,1575,1.752,1576,1.512,1577,2.887,1578,2.887,1579,2.887,1580,2.887,1581,2.887,1582,1.752,1583,1.752,1584,1.752,1585,1.752]],["title/modules/OrganSelectorModule.html",[0,1.486,1586,2.683]],["body/modules/OrganSelectorModule.html",[2,2.039,3,2.444,7,0.017,10,2.687,11,2.242,12,1.701,13,0.217,14,0.273,15,0.217,16,0.163,33,0.411,35,2.687,36,0.392,46,0.273,71,2.477,78,0.245,81,0.012,82,0.014,83,0.012,362,3.13,363,3.13,364,3.307,365,2.477,707,3.559,708,2.355,1060,4.624,1061,3.857,1354,3.857,1355,3.857,1586,5.389,1587,4.722,1588,4.722,1589,4.722,1590,5.473,1591,5.473,1592,6.56,1593,5.473]],["title/interfaces/PluckUniqueOptions.html",[47,0.272,1594,2.683]],["body/interfaces/PluckUniqueOptions.html",[7,0.017,13,0.176,14,0.287,15,0.176,16,0.132,28,0.395,29,0.862,30,3.608,31,0.733,33,0.317,46,0.376,47,0.317,49,0.969,53,1.908,54,0.951,56,2.47,59,0.733,69,2.745,81,0.01,82,0.013,83,0.01,84,1.378,85,0.422,86,1.006,112,1.378,114,0.968,119,1.507,134,2.745,162,1.816,262,1.441,287,3.486,292,1.577,341,1.955,415,3.071,429,2.516,544,2.687,559,2.687,652,4.156,802,5.542,804,5.83,806,5.718,838,2.886,840,4.932,904,4.443,906,3.424,1594,5.358,1595,3.125,1596,3.125,1597,4.443,1598,5.509,1599,6.757,1600,5.752,1601,5.752,1602,5.752,1603,5.752,1604,6.512,1605,4.434,1606,4.434,1607,4.443,1608,3.825,1609,3.825,1610,3.825,1611,3.825,1612,4.963,1613,6.456,1614,6.19,1615,6.19,1616,5.83,1617,4.963,1618,5.509,1619,4.434,1620,4.443,1621,4.434,1622,4.434,1623,4.434,1624,4.434]],["title/interfaces/Segment.html",[47,0.272,585,2.477]],["body/interfaces/Segment.html",[7,0.018,12,1.392,13,0.122,14,0.154,15,0.122,16,0.092,27,0.51,28,0.47,31,0.958,33,0.247,36,0.221,46,0.223,47,0.321,49,0.894,54,1.162,58,2.763,59,1.095,68,1.522,69,2.137,78,0.236,81,0.013,82,0.01,83,0.007,84,0.958,85,0.63,86,0.912,97,1.002,102,0.935,154,1.053,164,2.621,165,1.455,178,0.877,180,1.722,181,0.588,262,1.002,267,4.501,270,2.006,271,3.197,274,1.646,275,1.069,277,1.471,280,2.161,289,3.54,290,2.919,291,1.471,300,3.024,305,1.148,306,1.262,308,1.262,310,1.646,311,1.646,313,1.326,314,1.471,315,1.471,326,1.646,329,3.337,339,2.137,340,1.326,341,1.968,423,1.793,456,0.839,523,1.749,525,2.172,526,3.987,527,3.221,528,2.006,531,3.718,538,2.006,540,2.918,541,2.915,551,2.172,552,1.262,557,2.172,558,2.763,559,3.197,560,5.341,561,3.156,563,2.38,564,2.38,565,5.341,566,2.38,568,2.38,576,4.956,577,2.38,578,2.38,579,3.459,580,2.38,584,2.915,585,4.501,586,2.38,588,2.38,589,5.695,590,4.074,591,3.459,592,3.769,594,2.38,595,2.38,596,2.172,597,2.38,604,2.172,605,3.156,607,2.38,608,2.38,609,2.172,610,2.38,611,4.956,613,2.172,614,4.074,615,2.172,617,2.172,618,2.172,619,2.006,620,2.172,621,3.459,622,3.286,623,2.172,624,2.172,625,3.156,626,3.156,627,3.156,628,2.38,629,2.38,630,3.459,631,2.38,632,3.459,633,2.38,634,2.38,635,1.868,636,3.459,637,2.38,638,4.074,639,2.915,640,2.172,641,2.38,642,2.38,643,3.459,644,2.38,645,2.38,646,3.459,647,2.38,648,2.172,649,3.459,650,3.459,651,3.459,652,2.006,653,2.38,654,1.868,655,2.38,656,2.38,657,2.38,658,2.38,659,2.38,660,2.38,661,2.38,662,2.38,663,2.38,664,2.38,665,2.38,666,2.38,667,2.38,668,2.38,669,2.38,670,2.38,671,2.006,672,2.172,673,2.006,674,2.38,675,2.38,676,2.172,677,2.172,678,2.38,679,2.172,680,2.38,681,1.868,682,2.38,683,2.38,684,2.172,685,2.172,686,2.38,687,2.38,688,2.38,689,2.38]],["title/interfaces/StackOp.html",[47,0.272,592,2.477]],["body/interfaces/StackOp.html",[7,0.018,12,1.393,13,0.122,14,0.154,15,0.122,16,0.092,27,0.51,28,0.47,31,0.958,33,0.247,36,0.221,46,0.223,47,0.321,49,0.713,54,1.162,58,2.138,59,1.095,68,1.048,69,2.138,78,0.236,81,0.013,82,0.01,83,0.007,84,0.959,85,0.678,86,0.912,97,1.002,102,0.936,154,1.053,164,2.622,165,1.882,178,0.878,180,1.722,181,0.588,262,1.002,267,4.633,270,2.008,271,3.198,274,1.647,275,1.07,277,1.472,280,2.162,289,3.691,290,2.919,291,1.472,300,2.982,305,1.149,306,1.264,308,1.264,310,1.647,311,1.647,313,1.327,314,1.472,315,1.472,326,1.647,329,3.42,339,2.138,340,1.327,341,1.969,423,1.794,456,0.84,523,1.751,525,2.174,526,3.492,527,2.906,528,2.008,531,3.72,538,2.008,540,2.92,541,2.917,551,2.174,552,1.264,557,2.174,558,2.518,559,2.716,560,5.342,561,3.158,563,2.383,564,2.383,565,5.426,566,2.383,568,2.383,576,5.115,577,2.383,578,2.383,579,4.076,580,2.383,584,2.917,585,4.311,586,2.383,588,2.383,589,5.731,590,4.076,591,4.076,592,4.004,594,2.383,595,2.383,596,2.174,597,2.383,604,2.174,605,3.158,607,2.383,608,2.383,609,2.174,610,2.383,611,4.957,613,2.174,614,4.474,615,2.174,617,2.174,618,2.174,619,2.008,620,2.174,621,2.383,622,2.543,623,3.158,624,3.158,625,4.336,626,3.72,627,4.336,628,2.383,629,2.383,630,3.461,631,2.383,632,3.461,633,2.383,634,2.383,635,1.869,636,3.461,637,2.383,638,4.076,639,2.917,640,2.174,641,2.383,642,2.383,643,3.461,644,2.383,645,2.383,646,3.461,647,2.383,648,2.174,649,3.461,650,3.461,651,3.461,652,2.008,653,2.383,654,1.869,655,2.383,656,2.383,657,2.383,658,2.383,659,2.383,660,2.383,661,2.383,662,2.383,663,2.383,664,2.383,665,2.383,666,2.383,667,2.383,668,2.383,669,2.383,670,2.383,671,2.008,672,2.174,673,2.008,674,2.383,675,2.383,676,2.174,677,2.174,678,2.383,679,2.174,680,2.383,681,1.869,682,2.383,683,2.383,684,2.174,685,2.174,686,2.383,687,2.383,688,2.383,689,2.383]],["title/components/StoreDebugComponent.html",[275,0.909,710,1.723]],["body/components/StoreDebugComponent.html",[7,0.018,13,0.218,14,0.166,15,0.132,16,0.206,19,1.08,24,1.547,26,0.759,27,1.165,28,0.587,29,0.498,31,0.782,33,0.303,36,0.238,46,0.274,49,0.639,54,0.992,58,2.626,59,0.55,61,3.595,62,1.804,69,2.861,78,0.294,81,0.007,82,0.01,83,0.007,85,0.317,86,0.745,102,1.558,114,0.726,126,2.287,134,1.586,154,0.944,176,2.038,178,1.346,179,1.033,180,1.958,181,1.049,245,1.676,262,1.537,274,1.775,275,1.725,277,1.586,290,1.431,292,2.133,300,1.298,305,2.718,306,1.937,308,1.937,310,2.525,311,2.525,312,1.431,313,2.726,314,2.256,315,2.626,326,2.525,339,2.256,340,2.035,341,1.607,358,1.505,366,1.505,423,1.13,451,3.403,456,1.288,462,3.124,527,1.505,540,1.676,552,1.362,553,2.384,554,1.887,555,1.887,556,1.775,558,1.586,562,1.676,574,3.078,615,3.333,691,2.164,693,1.887,694,2.035,695,1.505,696,3.403,697,1.887,698,1.887,699,1.887,700,1.505,701,1.887,702,1.431,703,1.887,704,1.505,705,1.676,706,1.887,707,1.505,708,1.431,709,1.887,710,2.714,711,4.168,712,1.887,713,1.887,714,1.505,715,1.586,716,1.775,717,1.775,718,1.431,719,1.775,720,1.887,800,3.078,835,3.333,836,2.164,868,3.333,876,3.652,899,3.652,962,4.408,971,3.124,981,2.343,1052,2.868,1072,3.078,1490,3.652,1625,4.879,1626,4.879,1627,2.568,1628,4.08,1629,6.922,1630,5.504,1631,4.729,1632,4.729,1633,5.995,1634,5.995,1635,4.729,1636,4.63,1637,4.729,1638,4.729,1639,4.729,1640,3.325,1641,4.729,1642,3.325,1643,4.729,1644,3.325,1645,3.325,1646,4.749,1647,5.465,1648,2.868,1649,4.08,1650,3.325,1651,3.325,1652,3.325,1653,3.325,1654,3.325,1655,4.729,1656,3.325,1657,3.325,1658,3.325,1659,3.325,1660,3.325,1661,3.325,1662,4.729,1663,4.729,1664,4.729,1665,4.08,1666,2.568]],["title/modules/StoreDebugModule.html",[0,1.486,1667,2.683]],["body/modules/StoreDebugModule.html",[2,2.084,3,2.476,7,0.017,10,2.722,11,2.291,12,1.738,13,0.222,14,0.279,15,0.222,16,0.166,33,0.391,35,2.722,36,0.4,46,0.279,71,2.532,78,0.25,81,0.012,82,0.014,83,0.012,362,3.171,363,3.171,364,3.35,365,2.532,710,3.569,711,2.986,1625,3.942,1626,3.942,1667,5.412,1668,4.826,1669,4.826,1670,4.826,1671,5.593,1672,5.593]],["title/components/TextSearchComponent.html",[275,0.909,312,1.638]],["body/components/TextSearchComponent.html",[7,0.018,13,0.183,14,0.123,15,0.097,16,0.214,19,0.864,24,1.632,26,1.276,27,1.118,28,0.619,29,0.95,30,2.762,31,0.924,33,0.325,36,0.176,46,0.23,47,0.176,49,0.957,54,0.626,56,1.497,59,0.626,62,1.787,63,1.804,68,0.836,72,2.793,78,0.264,81,0.005,82,0.008,83,0.005,85,0.234,86,0.596,102,1.48,112,1.432,114,0.537,115,1.007,116,1.007,117,1.395,119,0.836,137,1.313,154,1.033,162,1.007,164,1.113,165,2.256,170,1.313,175,0.916,176,0.836,179,1.175,180,1.539,181,1.307,245,1.906,258,3.936,259,4.687,260,4.687,261,1.733,262,1.815,263,1.733,264,2.121,265,4.469,266,5.52,267,1.6,268,2.292,269,3.248,270,1.6,271,1.49,272,3.263,273,2.793,274,1.313,275,1.333,276,3,277,1.173,278,1.313,279,2.665,280,2.416,281,3,282,3.976,283,1.733,284,4.313,285,1.899,286,2.461,287,2.793,288,3.976,289,1.239,290,1.627,291,1.173,292,2.255,293,4.555,294,5.473,295,1.899,296,1.899,297,1.733,298,1.733,299,1.49,300,2.973,301,5.882,302,5.421,303,3.263,304,2.921,305,2.554,306,1.549,307,3.263,308,1.549,309,3.976,310,2.019,311,2.019,312,2.226,313,2.403,314,1.804,315,2.199,316,3.635,317,2.121,318,2.121,319,2.121,320,2.121,321,1.313,322,3.263,323,5.3,324,3.263,325,3.263,326,3.149,327,4.818,328,4.157,329,1.906,330,3.976,331,5.023,332,3.248,333,3.976,334,5.023,335,4.818,336,3.976,337,3.263,338,3.263,339,1.804,340,1.627,341,1.285,342,3.976,343,2.121,344,2.121,345,3.263,346,2.665,347,3.263,348,2.921,349,2.615,350,3.263,351,2.146,352,2.121,353,2.121,358,1.113,366,1.113,423,1.285,456,0.67,527,1.113,544,2.292,552,1.007,553,1.906,554,1.395,555,1.395,556,1.313,558,1.173,562,1.239,573,2.665,574,2.461,691,1.6,692,1.6,693,1.395,694,1.627,695,1.113,696,2.936,697,1.395,698,1.395,699,1.395,700,1.113,701,1.395,702,1.058,703,1.395,704,1.113,705,1.239,706,1.395,707,1.113,708,1.058,709,1.395,710,1.113,711,1.313,712,1.395,713,1.395,714,1.113,715,1.173,716,1.313,717,1.313,718,1.058,719,1.313,720,1.395,800,2.461,876,1.899,1030,1.313,1035,1.899,1036,2.921,1051,1.6,1125,1.899,1126,1.899,1127,4.313,1129,2.121,1130,1.49,1132,1.733,1133,2.461,1139,1.6,1141,1.899,1142,1.899,1156,1.733,1296,3.263,1331,1.899,1339,3.263,1536,2.121,1666,1.899,1673,3.782,1674,3.782,1675,3.782,1676,2.459,1677,2.459,1678,2.459,1679,2.459,1680,2.459,1681,3.782,1682,2.459,1683,2.459,1684,3.782,1685,2.459,1686,2.459,1687,2.459,1688,2.459,1689,2.459,1690,2.121,1691,2.459,1692,2.459,1693,2.459,1694,2.459,1695,2.459,1696,2.459,1697,2.459,1698,4.555,1699,2.459,1700,2.459,1701,2.459,1702,2.459]],["title/modules/TextSearchModule.html",[0,1.486,1703,2.683]],["body/modules/TextSearchModule.html",[2,1.877,3,2.323,7,0.017,10,2.555,11,2.064,12,1.566,13,0.2,14,0.251,15,0.2,16,0.15,33,0.419,35,2.555,36,0.361,46,0.251,71,2.824,78,0.225,81,0.011,82,0.014,83,0.011,259,3.279,260,3.279,283,3.551,290,2.168,291,2.404,300,1.967,312,3.349,362,2.976,363,2.976,364,3.144,365,2.281,620,3.551,721,4.826,1698,3.891,1703,5.46,1704,4.346,1705,4.346,1706,5.038,1707,4.346,1708,6.485,1709,6.485,1710,5.038,1711,6.238,1712,6.238,1713,6.238,1714,5.038,1715,6.238,1716,5.038,1717,6.238,1718,5.038,1719,5.038,1720,5.038,1721,5.038,1722,5.038]],["title/components/TrackingPopupComponent.html",[275,0.909,714,1.723]],["body/components/TrackingPopupComponent.html",[0,1.302,6,3.234,7,0.017,12,1.971,13,0.218,14,0.166,15,0.132,16,0.213,19,1.082,24,1.61,26,1.259,27,1.09,28,0.604,29,0.826,31,0.912,33,0.304,36,0.239,46,0.166,49,0.45,53,2.729,54,0.551,59,0.912,62,1.235,68,1.874,74,1.591,78,0.246,81,0.007,82,0.01,83,0.007,85,0.451,86,0.746,102,1.567,126,1.971,132,2.02,168,2.872,179,1.036,181,1.144,245,2.388,274,1.78,275,1.316,277,1.591,278,1.78,290,1.435,292,1.685,300,1.302,302,2.575,305,2.72,306,1.941,308,1.941,310,2.53,311,2.53,312,1.435,313,2.039,314,2.261,315,2.63,358,1.509,366,1.509,423,2.239,449,2.872,456,1.635,464,3.34,465,3.084,527,1.509,552,1.366,553,2.388,554,1.892,555,1.892,556,1.78,558,2.261,562,1.68,574,3.084,622,3.129,691,2.17,692,3.084,693,1.892,694,2.039,695,1.509,696,3.407,697,1.892,698,1.892,699,1.892,700,1.509,701,1.892,702,1.435,703,1.892,704,1.509,705,1.68,706,1.892,707,1.509,708,1.435,709,1.892,710,1.509,711,1.78,712,1.892,713,1.892,714,2.718,715,3.484,716,3.619,717,1.78,718,1.435,719,1.78,720,1.892,739,1.78,800,3.084,921,3.084,948,3.34,949,3.084,950,3.084,952,3.638,953,4.258,985,4.258,1003,4.088,1030,2.53,1045,3.66,1051,2.17,1079,3.885,1088,2.575,1133,3.084,1135,2.575,1139,3.084,1222,4.088,1246,2.876,1247,2.876,1248,2.876,1249,2.575,1261,4.469,1331,2.575,1332,2.876,1336,2.575,1576,5.471,1723,5.52,1724,5.52,1725,2.876,1726,5.513,1727,4.739,1728,6.003,1729,4.739,1730,4.739,1731,5.443,1732,4.739,1733,4.739,1734,4.739,1735,3.334,1736,4.739,1737,7.147,1738,3.334,1739,4.739,1740,3.334,1741,3.334,1742,4.739,1743,3.334,1744,3.334,1745,3.334,1746,3.334,1747,3.334,1748,3.334,1749,3.334,1750,3.334,1751,3.334,1752,4.739,1753,3.334,1754,3.334,1755,3.334,1756,3.334,1757,3.334,1758,4.088,1759,4.739,1760,4.088,1761,4.739,1762,3.334,1763,3.334,1764,4.739,1765,3.334,1766,3.66,1767,3.334,1768,3.334,1769,3.334,1770,3.334,1771,4.739,1772,5.513,1773,3.334,1774,3.334,1775,3.334,1776,3.334,1777,3.334,1778,3.334,1779,2.876,1780,3.334,1781,3.334,1782,3.334,1783,3.334,1784,3.334]],["title/modules/TrackingPopupModule.html",[0,1.486,1785,2.683]],["body/modules/TrackingPopupModule.html",[2,2.058,3,2.457,7,0.017,10,2.702,11,2.263,12,1.717,13,0.219,14,0.275,15,0.219,16,0.164,33,0.403,35,2.702,36,0.395,46,0.275,71,2.501,78,0.247,81,0.012,82,0.014,83,0.012,362,3.148,363,3.148,364,3.325,365,2.501,714,3.563,715,2.636,1723,4.266,1724,4.266,1785,5.399,1786,4.766,1787,4.766,1788,4.766,1789,5.524,1790,6.597,1791,5.524,1792,5.524]],["title/injectables/TrackingState.html",[93,0.63,1793,2.683]],["body/injectables/TrackingState.html",[7,0.018,13,0.197,14,0.248,15,0.197,16,0.184,19,1.412,24,1.134,26,1.134,27,1.023,28,0.443,29,0.744,31,0.822,33,0.388,36,0.356,40,2.652,41,2.504,46,0.351,47,0.356,53,3.119,54,1.165,56,1.614,59,0.822,62,1.612,63,2.37,74,2.37,76,2.288,78,0.222,81,0.011,82,0.013,83,0.011,85,0.473,93,1.023,231,1.939,245,2.504,321,2.652,371,2.799,456,1.684,715,2.37,748,3.501,793,5.2,830,4.776,831,4.358,832,3.836,833,3.836,835,4.358,836,3.233,841,3.501,970,3.01,1197,3.501,1731,5.598,1793,4.358,1794,3.233,1795,6.183,1796,5.335,1797,5.809,1798,4.967,1799,3.501,1800,3.501,1801,4.358,1802,4.382,1803,4.285,1804,4.285,1805,5.335,1806,4.285,1807,4.285,1808,4.285,1809,4.285,1810,3.836,1811,4.285,1812,4.285,1813,4.285]],["title/interfaces/TrackingStateModel.html",[47,0.272,1799,2.683]],["body/interfaces/TrackingStateModel.html",[7,0.018,13,0.2,14,0.252,15,0.2,16,0.151,27,0.837,28,0.451,29,0.937,33,0.391,36,0.362,40,2.701,41,2.55,46,0.354,47,0.362,53,3.135,54,1.173,56,1.644,59,0.837,62,1.63,63,2.414,74,2.414,76,2.307,78,0.226,81,0.011,82,0.014,83,0.011,84,1.572,85,0.482,86,0.985,93,1.034,321,2.701,371,2.29,456,1.378,715,2.414,748,3.566,793,4.83,830,4.83,831,4.408,832,3.907,833,3.907,835,4.408,836,3.293,841,3.566,970,3.066,1197,3.566,1731,5.81,1793,3.566,1794,3.293,1796,4.365,1797,5.396,1799,4.408,1800,3.566,1801,4.408,1802,4.419,1803,4.365,1804,4.365,1805,5.396,1806,4.365,1807,4.365,1808,4.365,1809,4.365,1810,3.907,1811,4.365,1812,4.365,1813,4.365]],["title/injectables/WorkerCCFDatabaseDataSourceService.html",[93,0.63,438,2.307]],["body/injectables/WorkerCCFDatabaseDataSourceService.html",[7,0.018,13,0.13,14,0.297,15,0.13,16,0.139,19,1.067,24,1.726,26,1.676,27,1.177,28,0.654,29,1.066,31,1.238,33,0.372,36,0.234,46,0.233,47,0.234,49,0.631,54,0.902,59,0.902,76,1.111,78,0.244,81,0.007,82,0.01,83,0.007,85,0.311,86,0.736,88,1.588,93,0.984,97,2.474,102,0.683,103,2.823,112,2.358,114,0.714,115,1.339,116,1.339,119,1.111,122,2.011,123,1.648,124,1.648,126,1.016,151,1.56,152,2.964,154,0.653,175,1.218,176,1.111,180,1.622,181,1.248,185,2.347,189,2.347,191,2.347,193,2.347,196,2.347,198,2.347,201,1.407,203,1.407,205,1.407,207,1.407,209,1.407,212,1.407,214,1.407,216,1.407,231,1.276,232,2.355,233,2.355,234,2.355,235,2.355,236,2.355,237,2.355,242,2.964,349,3.095,351,2.652,368,4.084,369,3.042,370,2.128,371,2.849,372,2.602,373,2.912,374,3.844,375,3.587,376,3.3,377,3.609,378,2.652,379,2.128,381,2.525,382,4.251,383,5.128,385,4.194,386,4.194,388,1.981,389,2.912,390,2.652,391,4.896,392,3.699,393,2.128,394,2.128,395,2.128,396,2.128,397,2.128,398,2.128,399,2.128,400,2.128,401,2.128,402,2.128,403,2.128,404,2.128,405,2.128,406,2.525,407,3.294,408,3.294,409,2.304,410,3.294,411,2.304,412,2.128,413,3.294,414,2.832,415,1.746,416,1.648,417,2.128,418,2.128,419,2.304,420,2.128,421,2.304,422,2.304,423,1.111,424,2.304,425,2.304,426,2.304,427,2.304,428,2.304,429,1.856,430,3.294,431,2.304,432,2.128,433,2.128,434,2.304,435,1.981,436,2.304,437,3.042,438,2.832,439,3.294,440,3.55,441,2.304,442,2.304,443,2.304,444,2.304,446,2.821,447,2.821,1814,4.673,1815,3.27,1816,3.27]],["title/interfaces/XYZTriplet.html",[47,0.272,1817,2.94]],["body/interfaces/XYZTriplet.html",[7,0.018,10,2.425,13,0.128,14,0.161,15,0.128,16,0.096,27,0.535,28,0.483,33,0.299,36,0.231,46,0.161,47,0.231,49,0.732,53,1.995,54,1.037,59,1.137,62,1.751,68,2.378,74,1.543,78,0.242,81,0.007,82,0.01,83,0.007,84,1.005,85,0.308,86,0.73,100,2.825,102,1.132,114,0.706,134,3.338,154,1.341,162,1.899,165,2.414,178,0.92,180,2.159,181,1.28,268,1.96,275,1.294,276,4.372,277,1.543,280,2.866,281,4.372,305,1.205,306,1.325,308,1.325,313,1.391,314,1.543,315,1.543,340,1.391,349,1.835,351,1.835,358,1.464,359,2.498,360,2.498,366,3.167,414,1.96,423,2.413,433,2.105,451,1.835,456,1.707,462,2.631,685,2.279,753,2.498,936,2.498,962,2.105,971,2.631,1001,1.96,1030,1.727,1071,2.279,1072,2.105,1132,2.279,1133,2.105,1261,3.82,1370,4,1371,2.79,1385,3.268,1516,2.79,1636,2.498,1779,5.108,1817,5.037,1818,2.79,1819,6.267,1820,6.267,1821,6.997,1822,3.234,1823,3.234,1824,5.188,1825,2.79,1826,3.234,1827,2.79,1828,3.234,1829,3.234,1830,4.676,1831,4.636,1832,3.234,1833,3.234,1834,4.636,1835,4.636,1836,3.234,1837,3.234,1838,3.234,1839,4.636,1840,3.234,1841,3.234,1842,4.636,1843,3.234,1844,3.234,1845,4.636,1846,4.636,1847,3.234,1848,3.234,1849,4.636,1850,3.234,1851,3.234,1852,4.636,1853,4.636,1854,3.234,1855,3.234,1856,3.234,1857,3.234,1858,3.234,1859,3.234,1860,3.234,1861,4.636,1862,4.636,1863,3.234,1864,4.636,1865,3.234,1866,3.234,1867,3.234,1868,3.234,1869,3.234,1870,3.234,1871,3.234,1872,3.234,1873,3.234,1874,3.234,1875,3.234,1876,3.234,1877,3.234,1878,3.234,1879,3.234,1880,3.234,1881,3.234,1882,2.79,1883,4,1884,3.234,1885,4.636,1886,3.234,1887,4.636,1888,3.234,1889,4.636,1890,5.42,1891,3.234,1892,3.234,1893,3.234,1894,3.234,1895,3.234,1896,3.234,1897,3.234,1898,3.234,1899,4.636,1900,3.234,1901,3.234,1902,4.636,1903,3.234,1904,4.636,1905,3.234,1906,3.234,1907,3.234,1908,3.234,1909,3.234,1910,3.234,1911,3.234,1912,3.234,1913,3.234,1914,3.234,1915,3.234,1916,4.636,1917,3.234,1918,3.234,1919,3.234,1920,3.234,1921,3.234,1922,3.234,1923,3.234,1924,3.234,1925,3.234,1926,3.234,1927,3.234,1928,3.234,1929,4.636,1930,3.234,1931,3.234,1932,3.234,1933,3.234]],["title/changelog.html",[1934,2.454,1935,2.24,1936,2.454]],["body/changelog.html",[3,1.547,7,0.013,13,0.209,18,0.951,24,0.383,28,0.149,29,0.251,30,1.485,40,0.894,41,0.844,47,0.377,68,1.411,81,0.004,82,0.006,83,0.012,84,0.521,86,0.264,97,1.349,102,1.501,103,1.887,117,0.951,126,2.163,132,1.015,139,1.81,141,1.09,145,1.579,146,1.686,149,1.09,152,0.758,154,1.141,159,1.015,165,0.544,176,0.569,182,2.811,183,0.894,265,1.96,268,1.015,271,3.011,273,1.686,275,0.991,292,0.596,299,3.011,301,4.672,305,1.036,316,1.09,326,2.217,329,1.798,331,2.148,332,1.181,334,1.294,346,1.181,366,2.589,414,2.516,432,1.81,527,0.758,528,1.09,545,1.485,553,1.402,556,0.894,558,2.198,559,1.015,562,2.093,584,1.09,603,1.294,609,1.96,618,1.96,622,0.951,624,1.181,625,5.49,627,1.96,635,2.161,639,1.09,640,1.181,654,1.015,671,1.81,672,1.96,673,1.09,679,1.181,681,1.686,694,0.721,705,0.844,708,3.049,716,0.894,732,1.96,735,2.82,736,1.181,737,1.294,738,2.161,749,2.148,828,2.998,868,1.181,871,2.4,872,3.974,889,1.445,891,1.294,896,1.294,921,3.426,924,1.445,928,1.445,933,2.148,937,1.96,939,4.287,940,2.148,941,1.181,942,1.445,943,1.445,952,1.686,985,2.148,986,1.09,987,1.181,989,2.321,990,1.445,1001,3.82,1006,5.235,1007,5.553,1016,1.445,1028,1.181,1030,0.894,1045,3.207,1072,1.09,1079,1.181,1090,1.294,1095,3.207,1096,1.294,1130,1.015,1137,1.09,1152,1.445,1153,1.09,1243,1.445,1249,1.294,1266,3.974,1267,1.445,1288,3.077,1303,1.294,1305,5.809,1319,2.4,1330,3.582,1334,1.445,1336,2.148,1340,1.445,1342,1.445,1361,1.294,1363,1.445,1365,1.445,1366,2.4,1367,4.949,1368,1.445,1405,2.754,1475,2.4,1476,2.4,1490,2.148,1492,3.077,1494,2.4,1551,4.287,1569,1.445,1620,2.148,1628,1.445,1636,3.558,1665,1.445,1666,2.754,1698,1.294,1760,1.445,1766,1.294,1810,1.294,1824,4.672,1825,5.61,1827,3.582,1830,4.754,1882,3.077,1883,1.445,1935,2.514,1936,2.148,1937,1.445,1938,1.445,1939,4.754,1940,2.781,1941,4.152,1942,4.606,1943,1.675,1944,2.781,1945,2.781,1946,4.969,1947,2.781,1948,1.675,1949,1.675,1950,1.675,1951,6.05,1952,2.781,1953,4.066,1954,4.542,1955,1.675,1956,5.264,1957,1.675,1958,1.675,1959,2.781,1960,4.152,1961,5.51,1962,1.675,1963,1.675,1964,4.152,1965,2.781,1966,6.408,1967,3.566,1968,1.675,1969,2.781,1970,3.566,1971,1.675,1972,1.675,1973,1.675,1974,1.675,1975,1.675,1976,6.408,1977,1.675,1978,1.675,1979,1.445,1980,1.445,1981,1.445,1982,1.675,1983,2.781,1984,1.445,1985,1.675,1986,2.781,1987,4.152,1988,4.152,1989,1.675,1990,3.566,1991,1.675,1992,1.675,1993,2.781,1994,1.675,1995,1.675,1996,4.969,1997,3.974,1998,3.077,1999,1.675,2000,5.896,2001,3.974,2002,1.675,2003,2.781,2004,1.675,2005,3.566,2006,4.754,2007,6.303,2008,2.781,2009,1.675,2010,1.675,2011,2.781,2012,6.05,2013,3.077,2014,1.675,2015,4.969,2016,4.606,2017,1.675,2018,1.675,2019,4.606,2020,1.675,2021,1.675,2022,1.675,2023,1.675,2024,3.566,2025,1.675,2026,2.4,2027,2.4,2028,5.264,2029,1.675,2030,4.754,2031,1.675,2032,1.675,2033,1.675,2034,1.675,2035,1.675,2036,1.675,2037,3.974,2038,4.416,2039,3.974,2040,1.675,2041,2.781,2042,2.781,2043,2.781,2044,2.781,2045,2.781,2046,1.675,2047,1.675,2048,1.675,2049,1.675,2050,3.077,2051,2.781,2052,2.781,2053,1.675,2054,2.781,2055,2.781,2056,2.781,2057,4.152,2058,2.4,2059,1.675,2060,1.675,2061,1.675,2062,1.675,2063,2.781,2064,1.675,2065,1.675,2066,2.4,2067,1.675,2068,3.566,2069,2.781,2070,4.969,2071,2.4,2072,2.781,2073,4.152,2074,1.675,2075,1.675,2076,2.4,2077,4.152,2078,1.675,2079,1.675,2080,1.445,2081,1.675,2082,2.781,2083,1.675,2084,1.675,2085,2.781,2086,1.675,2087,2.781,2088,1.675,2089,1.445,2090,1.675,2091,1.675,2092,1.675,2093,1.675,2094,1.675,2095,1.675,2096,1.675,2097,1.675,2098,1.675,2099,1.675,2100,1.675,2101,1.675,2102,1.675,2103,1.675,2104,2.781,2105,1.675,2106,4.969,2107,1.675,2108,1.675,2109,3.566,2110,3.566,2111,2.4,2112,1.675,2113,1.675,2114,1.675,2115,2.781,2116,2.781,2117,1.675,2118,1.675,2119,1.675,2120,2.781,2121,2.781,2122,3.566,2123,1.675,2124,1.675,2125,1.675,2126,1.675,2127,2.781,2128,1.675,2129,2.781,2130,4.152,2131,1.675,2132,1.675,2133,1.675,2134,4.969,2135,2.781,2136,1.675,2137,1.675,2138,3.566,2139,2.781,2140,2.781,2141,4.152,2142,1.675,2143,1.675,2144,1.675,2145,2.781,2146,1.675,2147,1.675,2148,1.675,2149,1.675,2150,1.675,2151,4.152,2152,1.675,2153,3.566,2154,4.152,2155,1.675,2156,3.566,2157,4.606,2158,2.781,2159,2.781,2160,2.781,2161,3.566,2162,4.152,2163,4.606,2164,3.566,2165,1.675,2166,1.675,2167,5.264,2168,3.566,2169,1.675,2170,4.152,2171,4.152,2172,5.718,2173,1.675,2174,1.675,2175,1.675,2176,1.675,2177,1.675,2178,1.675,2179,2.781,2180,1.675,2181,1.675,2182,1.675,2183,1.675,2184,2.781,2185,1.675,2186,1.675,2187,2.781,2188,3.077,2189,2.781,2190,3.566,2191,1.675,2192,1.675,2193,1.675,2194,1.675,2195,1.675,2196,1.675,2197,1.675,2198,1.675,2199,4.969,2200,2.781,2201,3.566,2202,2.781,2203,1.675,2204,1.675,2205,1.675,2206,1.675,2207,3.566,2208,1.675,2209,1.675,2210,1.675,2211,2.781,2212,2.781,2213,2.781,2214,3.566,2215,1.675,2216,1.675,2217,1.675,2218,1.675,2219,1.675,2220,1.445,2221,1.675,2222,1.675,2223,1.675,2224,2.781,2225,1.675,2226,1.675,2227,2.781,2228,1.675,2229,1.675,2230,1.675,2231,1.675,2232,1.675,2233,1.675,2234,1.675,2235,1.675,2236,1.675,2237,1.675,2238,5.51,2239,1.675,2240,3.077,2241,5.51,2242,3.566,2243,4.152,2244,2.781,2245,3.566,2246,1.675,2247,2.781,2248,1.675,2249,1.675,2250,2.781,2251,2.781,2252,1.675,2253,1.675,2254,2.781,2255,1.675,2256,1.675,2257,1.675,2258,3.582,2259,1.675,2260,1.675,2261,1.675,2262,1.675,2263,1.675,2264,1.675,2265,1.675,2266,1.675,2267,1.675,2268,1.675,2269,3.582,2270,1.675,2271,1.675,2272,1.675,2273,1.675,2274,1.675,2275,1.675,2276,1.675,2277,1.675,2278,1.675,2279,1.675,2280,1.675,2281,2.781,2282,1.675,2283,2.781,2284,1.675,2285,2.781,2286,2.781,2287,4.152,2288,4.152,2289,2.781,2290,2.781,2291,1.675,2292,1.675,2293,1.675,2294,3.566,2295,1.675,2296,1.445,2297,1.675,2298,1.675,2299,1.675,2300,1.675,2301,1.675,2302,1.675,2303,2.781,2304,5.896,2305,3.566,2306,2.781,2307,1.675,2308,2.781,2309,1.675,2310,1.675,2311,1.675,2312,1.675,2313,1.675,2314,1.675,2315,1.675,2316,2.781,2317,4.542,2318,2.781,2319,1.675,2320,1.675,2321,1.675,2322,1.675,2323,1.675,2324,3.207,2325,1.675,2326,2.781,2327,1.675,2328,1.675,2329,1.675,2330,2.781,2331,1.675,2332,1.675,2333,1.675,2334,1.675,2335,2.781,2336,2.781,2337,2.4,2338,1.675,2339,1.675,2340,1.675,2341,1.675,2342,1.675,2343,1.675,2344,1.675,2345,1.675,2346,1.675,2347,1.445,2348,1.675,2349,2.4,2350,1.675,2351,1.675,2352,1.675,2353,1.675,2354,1.675,2355,1.675,2356,2.781,2357,1.675,2358,2.781,2359,1.675,2360,1.675,2361,1.675,2362,1.675,2363,1.675,2364,1.675,2365,1.675,2366,1.675,2367,1.675,2368,1.675,2369,2.781,2370,1.675,2371,1.675,2372,1.675,2373,1.675,2374,2.781,2375,1.675,2376,1.675,2377,1.675,2378,1.675,2379,1.675,2380,1.675,2381,1.675,2382,1.675,2383,1.675]],["title/coverage.html",[2324,4.014]],["body/coverage.html",[6,1.36,7,0.017,8,1.617,9,1.617,15,0.113,16,0.238,17,3.629,23,2.008,28,0.254,41,1.436,45,2.752,47,0.525,55,2.008,56,2.452,70,2.008,78,0.189,81,0.006,82,0.009,83,0.006,87,1.727,88,2.545,89,3.735,90,3.735,93,1.184,122,1.226,125,1.36,136,1.727,138,1.617,153,1.727,154,0.569,155,1.727,157,1.727,161,1.727,163,1.727,177,1.727,211,1.727,258,2.008,259,3.281,260,3.281,261,3.552,275,1.618,289,1.436,291,2.977,297,2.008,312,1.226,316,1.855,358,1.29,359,3.265,360,3.265,368,1.727,369,3.629,370,3.629,372,1.36,382,1.727,392,1.436,423,2.678,435,1.727,438,1.727,448,2.201,471,3.379,472,3.281,509,2.201,510,2.458,523,3.541,524,3.893,552,1.167,557,3.552,585,1.855,592,1.855,619,1.855,695,1.29,700,1.29,702,1.226,704,1.29,707,1.29,710,1.29,714,1.29,718,1.226,728,1.617,729,3.145,730,2.977,731,3.552,735,1.617,745,2.008,747,1.855,791,2.458,792,2.458,837,2.201,838,4.738,854,2.201,855,2.98,857,2.008,960,2.458,961,3.552,984,2.458,1020,2.562,1070,3.265,1086,2.008,1149,6.23,1151,2.458,1153,1.855,1156,5.298,1169,2.201,1170,2.458,1171,2.458,1184,3.265,1193,2.201,1215,2.201,1216,2.201,1253,2.201,1254,2.201,1255,2.458,1283,2.201,1284,2.201,1285,2.458,1300,2.458,1337,2.458,1353,2.008,1354,3.93,1355,3.93,1356,4.307,1377,2.201,1472,2.201,1594,2.008,1595,4.931,1596,4.931,1597,5.234,1607,2.201,1625,2.008,1626,2.008,1627,2.201,1690,2.458,1723,2.201,1724,2.201,1725,2.458,1793,2.008,1794,3.877,1799,2.008,1800,2.008,1801,2.008,1802,1.855,1817,2.201,1818,3.647,2324,2.201,2384,2.85,2385,2.85,2386,2.458,2387,7.637,2388,4.228,2389,2.85,2390,2.458,2391,2.458,2392,6.896,2393,2.458,2394,2.458,2395,2.458,2396,2.458,2397,2.458,2398,2.85,2399,2.458,2400,2.458,2401,2.458,2402,5.576,2403,2.85,2404,2.85,2405,2.85,2406,2.458,2407,2.85,2408,5.576,2409,2.85,2410,2.85,2411,2.85,2412,2.85,2413,2.85,2414,2.85,2415,2.85,2416,2.85,2417,2.85,2418,2.85,2419,2.85,2420,2.85,2421,2.85,2422,2.85,2423,2.85,2424,2.85,2425,4.228,2426,4.228,2427,2.85,2428,2.458,2429,4.228,2430,2.85,2431,4.228,2432,2.85,2433,2.85,2434,2.85,2435,2.85,2436,2.85]],["title/dependencies.html",[3,1.705,1984,2.741]],["body/dependencies.html",[3,1.635,7,0.018,15,0.174,36,0.314,39,3.463,40,2.344,41,2.213,81,0.01,82,0.012,83,0.01,95,2.857,114,0.959,120,2.857,121,2.857,151,2.727,172,2.491,283,3.094,284,3.39,285,3.39,365,1.987,366,1.987,412,2.857,677,3.094,694,2.459,754,2.66,811,3.787,828,2.857,831,3.094,836,2.857,937,4.028,1097,3.094,1106,3.39,1167,3.787,1217,3.787,1286,3.787,1369,3.787,1373,3.787,1374,3.787,2001,3.787,2026,3.787,2066,3.787,2071,3.787,2188,3.787,2240,4.931,2437,4.39,2438,4.39,2439,4.39,2440,7.591,2441,4.39,2442,4.39,2443,4.39,2444,4.39,2445,4.39,2446,5.715,2447,4.39,2448,4.39,2449,4.39,2450,4.39,2451,4.39,2452,4.39,2453,6.732,2454,4.39,2455,5.715,2456,4.39,2457,4.39,2458,4.39,2459,4.39,2460,6.355,2461,4.39,2462,4.39,2463,4.39,2464,4.39,2465,4.39,2466,4.39,2467,4.39,2468,4.39,2469,4.39,2470,5.715,2471,5.715,2472,4.39,2473,4.39,2474,4.39,2475,4.39,2476,4.39,2477,4.39,2478,5.715,2479,4.39,2480,4.39,2481,4.39,2482,4.39,2483,4.39,2484,4.39,2485,4.39,2486,4.39,2487,4.39,2488,4.39,2489,4.39,2490,4.39,2491,4.39,2492,3.787,2493,4.39,2494,4.39,2495,4.39,2496,4.39,2497,4.39,2498,4.39,2499,5.715,2500,4.39,2501,4.39,2502,4.39,2503,4.39,2504,4.39,2505,4.39,2506,4.39,2507,4.39,2508,4.39,2509,4.39,2510,4.39,2511,4.39,2512,4.39,2513,4.39,2514,4.39,2515,4.39,2516,4.39,2517,4.39,2518,4.39,2519,4.39,2520,4.39,2521,4.39,2522,4.39,2523,4.39,2524,4.39,2525,4.39,2526,4.39,2527,4.39,2528,4.39,2529,4.39,2530,4.931,2531,4.39,2532,4.39,2533,4.39,2534,4.39,2535,4.39,2536,4.39,2537,4.39,2538,4.39,2539,4.39,2540,4.39,2541,4.39]],["title/miscellaneous/functions.html",[2542,1.926,2543,3.95]],["body/miscellaneous/functions.html",[7,0.017,16,0.212,17,2.264,26,1.739,27,1.26,29,1.141,30,2.607,31,1.276,37,2.686,53,1.496,57,2.686,58,1.659,62,0.907,63,1.659,66,2.686,69,2.692,70,3.441,76,2.332,81,0.008,82,0.011,83,0.008,85,0.653,86,0.548,88,1.182,89,1.857,90,3.44,97,1.13,100,1.659,106,2.264,112,1.901,134,1.659,138,1.974,154,0.974,161,3.419,163,2.958,164,2.917,165,1.13,166,3.178,167,3.178,170,1.857,211,2.958,219,2.264,242,3.106,262,1.988,263,2.451,280,1.425,287,2.108,289,1.753,291,1.659,415,1.857,423,1.659,523,1.974,524,4.357,529,2.686,533,3,537,3,538,2.264,539,3,540,2.461,541,4.694,542,3,543,3,544,3.707,545,1.857,546,3,547,3,559,2.108,584,2.264,596,2.451,619,3.672,684,2.451,694,1.496,734,3.441,802,5.159,804,5.569,806,5.408,837,4.357,838,3.981,840,2.686,841,2.451,859,3,896,2.686,971,1.974,989,2.264,1153,3.178,1215,2.686,1216,3.77,1221,3,1223,4.212,1229,2.686,1385,2.451,1595,2.451,1596,5.082,1597,5.881,1598,5.277,1604,6.348,1608,3,1609,3,1610,3,1611,3,1612,4.867,1613,6.348,1614,5.763,1615,5.763,1616,5.277,1617,4.212,1618,4.867,1794,2.264,1802,3.672,2089,3,2349,3,2386,4.212,2390,3,2391,4.212,2393,3,2394,4.867,2395,3,2396,4.212,2397,4.212,2401,4.212,2406,4.212,2428,4.212,2530,3,2542,2.108,2543,3,2544,4.724,2545,3.478,2546,3.478,2547,3,2548,4.212,2549,3.478,2550,4.882,2551,6.14,2552,3.478,2553,3.478,2554,3.478,2555,3.478,2556,3.478,2557,3.478,2558,3.478,2559,3.478,2560,3.478,2561,3.478,2562,3.478,2563,3.478,2564,4.882,2565,3.478,2566,3.478]],["title/index.html",[85,0.303,1934,2.454,1935,2.24]],["body/index.html",[7,0.013,13,0.286,47,0.437,81,0.011,82,0.013,83,0.011,84,1.514,102,1.665,110,4.554,182,3.736,275,1.163,326,2.601,648,3.434,708,2.872,828,3.171,868,3.434,933,4.718,941,3.434,952,2.952,986,3.976,1006,4.305,1007,5.154,1139,3.171,1486,4.203,1758,4.203,1766,3.763,1824,3.763,1936,3.763,1937,5.27,1938,5.27,1939,5.758,1953,3.763,1979,4.203,1980,4.203,1981,4.203,1997,6.217,1998,6.037,2006,5.27,2013,4.203,2027,5.27,2030,4.203,2038,5.404,2039,4.203,2050,4.203,2076,5.27,2269,5.27,2337,4.203,2347,4.203,2567,6.109,2568,4.872,2569,4.872,2570,4.872,2571,5.27,2572,4.872,2573,4.872,2574,6.109,2575,6.109,2576,6.109,2577,6.674,2578,4.872,2579,4.872,2580,6.997,2581,6.674,2582,4.872,2583,4.872,2584,6.109,2585,4.872,2586,4.872,2587,4.872,2588,6.109,2589,4.872,2590,4.872,2591,4.872,2592,4.872,2593,4.872,2594,4.872,2595,4.872,2596,4.872,2597,4.872,2598,4.872,2599,4.872,2600,4.872,2601,4.872,2602,4.872,2603,4.872,2604,4.872,2605,4.872,2606,4.872,2607,4.872]],["title/license.html",[1934,2.454,1935,2.24,2608,2.741]],["body/license.html",[7,0.014,12,1.665,81,0.012,82,0.014,83,0.012,113,2.86,346,3.776,603,5.377,673,3.487,676,3.776,735,3.04,888,3.487,891,4.137,912,4.137,954,4.622,1176,4.622,1225,4.137,2037,5.588,2038,4.137,2080,5.588,2220,5.588,2296,4.622,2317,4.622,2492,4.622,2571,6.672,2608,4.622,2609,5.357,2610,6.962,2611,5.357,2612,6.477,2613,5.357,2614,5.357,2615,5.357,2616,5.357,2617,5.357,2618,5.357,2619,6.477,2620,5.357,2621,5.357,2622,5.357,2623,5.357,2624,5.357,2625,5.357,2626,5.357,2627,5.357,2628,5.357,2629,5.357,2630,5.357,2631,6.477,2632,5.357,2633,5.357,2634,5.357,2635,5.357,2636,5.357,2637,6.477,2638,5.357,2639,5.357,2640,5.357,2641,5.357,2642,5.357,2643,5.357,2644,5.357,2645,5.357,2646,5.357,2647,5.357,2648,5.357,2649,5.357,2650,5.357,2651,5.357,2652,5.357,2653,5.357,2654,5.357,2655,5.357,2656,5.357,2657,5.357,2658,5.357,2659,5.357,2660,5.357]],["title/modules.html",[2,1.936]],["body/modules.html",[1,3.67,2,2.1,7,0.015,81,0.012,82,0.015,83,0.012,354,3.974,635,3.417,721,3.67,937,5.543,1053,3.974,1058,3.67,1214,4.354,1277,3.974,1343,3.974,1359,6.785,1586,3.974,1667,3.974,1703,3.974,1785,3.974,1954,6.785,2661,7.89,2662,5.638]],["title/overview.html",[2663,4.483]],["body/overview.html",[1,4.818,2,1.649,3,2.141,4,3.82,5,3.82,6,3.045,7,0.017,8,3.622,9,3.622,10,2.354,11,1.814,12,1.376,81,0.01,82,0.013,83,0.01,84,1.376,231,1.729,312,3.142,354,4.933,355,3.82,356,3.82,357,3.82,358,3.306,526,2.513,552,2.991,553,2.232,695,2.005,700,3.306,702,3.142,704,3.306,707,3.306,710,3.306,714,3.306,718,3.142,721,4.669,722,3.82,723,3.82,724,3.82,1053,5.146,1054,3.82,1055,3.82,1056,3.82,1057,3.82,1058,4.669,1158,3.82,1159,3.82,1160,3.82,1277,4.933,1278,3.82,1279,3.82,1280,3.82,1343,4.933,1344,3.82,1345,3.82,1346,3.82,1586,4.933,1587,3.82,1588,3.82,1589,3.82,1620,3.42,1667,4.933,1668,3.82,1669,3.82,1670,3.82,1703,5.273,1704,3.82,1705,3.82,1707,3.82,1708,5.827,1709,5.827,1785,4.933,1786,3.82,1787,3.82,1788,3.82,1953,3.42,2058,3.82,2111,3.82,2258,3.82,2663,3.82,2664,4.428]],["title/miscellaneous/typealiases.html",[2542,1.926,2665,4.578]],["body/miscellaneous/typealiases.html",[7,0.016,16,0.22,28,0.619,49,0.873,56,2.258,61,3.666,62,1.684,68,1.813,81,0.012,82,0.014,83,0.012,85,0.508,88,2.195,89,2.847,90,3.856,128,3.914,130,4.204,133,4.204,134,2.545,416,3.256,448,4.119,449,3.914,464,3.759,465,3.471,471,3.232,472,4.814,485,3.759,487,4.552,488,4.552,490,4.552,535,3.471,540,2.688,544,3.914,855,3.759,857,4.552,873,4.988,880,4.601,881,5.572,904,4.119,905,4.601,1625,3.759,1626,3.759,1627,5.366,1646,4.601,1647,5.572,1648,4.601,1649,5.994,2542,3.232,2544,5.366,2666,5.333,2667,5.333,2668,7.221,2669,5.572,2670,6.459]],["title/miscellaneous/variables.html",[2542,1.926,2671,3.95]],["body/miscellaneous/variables.html",[6,1.217,7,0.017,8,1.448,9,1.448,16,0.2,17,1.66,27,1.28,28,0.555,30,2.077,45,2.532,49,0.525,55,2.741,59,0.422,62,1.824,72,1.546,74,3.702,76,0.867,81,0.006,82,0.008,83,0.006,85,0.243,88,0.867,89,1.362,90,2.816,113,1.362,128,2.357,137,1.362,145,3.731,147,3.771,148,2.357,153,3.196,154,0.941,155,2.357,156,2.532,157,2.357,158,1.66,159,1.546,165,1.532,172,2.993,175,1.449,176,1.322,259,1.66,260,1.66,261,2.741,265,1.798,266,3.004,268,4.689,273,2.357,279,1.798,292,2.538,293,3.004,294,1.97,295,1.97,296,1.97,297,2.741,298,2.741,299,1.546,316,2.532,321,3.51,449,1.546,708,3.329,729,1.286,730,1.362,731,2.741,745,2.741,746,1.97,810,4.621,838,2.532,855,1.798,857,2.741,873,1.97,961,2.741,970,4.132,1130,4.468,1137,4.365,1184,1.97,1193,3.004,1194,2.2,1195,2.2,1196,2.2,1197,2.741,1353,1.798,1354,1.798,1355,1.798,1356,3.641,1360,6.676,1361,5.632,1362,6.676,1367,3.004,1375,2.2,1376,2.2,1377,3.004,1378,2.2,1379,3.356,1380,2.2,1381,2.2,1382,3.356,1383,2.2,1384,3.356,1385,2.741,1386,4.55,1387,2.2,1388,2.2,1389,4.067,1390,5.162,1391,5.965,1392,2.2,1393,2.2,1394,2.2,1395,4.067,1396,5.671,1397,5.162,1398,2.2,1399,2.2,1400,2.2,1401,2.2,1402,3.356,1403,2.2,1404,4.067,1405,4.621,1406,2.2,1407,2.2,1408,2.2,1409,4.067,1410,5.162,1411,2.2,1412,2.2,1413,2.2,1414,2.2,1415,3.356,1416,2.2,1417,3.356,1418,3.356,1419,3.356,1420,2.2,1421,2.2,1422,4.067,1423,5.162,1424,2.2,1425,2.2,1426,2.2,1427,2.2,1428,3.356,1429,2.2,1430,2.2,1431,2.2,1432,3.356,1433,2.2,1434,3.356,1435,4.55,1436,2.2,1437,2.2,1438,2.2,1439,5.162,1440,3.356,1441,2.2,1442,2.2,1443,3.356,1444,2.2,1445,2.2,1446,3.356,1447,2.2,1448,2.2,1449,3.356,1450,2.2,1451,4.067,1452,5.162,1453,2.2,1454,2.2,1455,2.2,1456,2.2,1457,3.356,1458,3.356,1459,2.2,1460,2.2,1461,3.356,1462,2.2,1463,3.356,1464,3.356,1465,4.55,1466,4.55,1467,2.2,1468,2.2,1469,2.2,1470,2.2,1471,2.2,1472,3.004,1473,2.2,1474,2.2,1594,1.798,1595,1.798,1596,2.741,1607,3.004,1794,1.66,1800,2.741,1801,2.741,1802,1.66,2399,2.2,2400,3.356,2542,1.546,2544,3.641,2547,3.356,2548,2.2,2551,2.2,2669,2.2,2671,2.2,2672,3.89,2673,2.551,2674,2.551,2675,2.551,2676,2.551]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":423,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.1.0",{"_index":2374,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":2541,"title":{},"body":{"dependencies.html":{}}}],["0.12",{"_index":1778,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.14",{"_index":1776,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.18.0",{"_index":2482,"title":{},"body":{"dependencies.html":{}}}],["0.1875rem",{"_index":1335,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["0.2",{"_index":1773,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.2.0",{"_index":2369,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":2500,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":1038,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["0.5.0",{"_index":2358,"title":{},"body":{"changelog.html":{}}}],["0.5rem",{"_index":1142,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["0.6.0",{"_index":2337,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.65rem",{"_index":1040,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["0.6s",{"_index":1042,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["0.7",{"_index":1765,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.875rem",{"_index":1131,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["0/1",{"_index":2387,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2425,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2431,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2433,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2432,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2426,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2430,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2429,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2402,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2427,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2404,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2385,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2389,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2388,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2424,"title":{},"body":{"coverage.html":{}}}],["007cbe",{"_index":1783,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["01",{"_index":2002,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":2208,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":2157,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1942,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":2130,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":2306,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1960,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":2318,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":2057,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":1576,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{}}}],["1",{"_index":1620,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"changelog.html":{},"overview.html":{}}}],["1.0",{"_index":2241,"title":{},"body":{"changelog.html":{}}}],["1.0.0",{"_index":2304,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":2477,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":2484,"title":{},"body":{"dependencies.html":{}}}],["1.0.6",{"_index":2536,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2281,"title":{},"body":{"changelog.html":{}}}],["1.125rem",{"_index":1338,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["1.16.0",{"_index":2517,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":2479,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":2240,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.3",{"_index":2487,"title":{},"body":{"dependencies.html":{}}}],["1.2.6",{"_index":2519,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":2207,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":2188,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":2502,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":2156,"title":{},"body":{"changelog.html":{}}}],["1.5rem",{"_index":1049,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["1.6.0",{"_index":2141,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":2129,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":2489,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2392,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2416,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":299,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":2498,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1156,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{},"coverage.html":{}}}],["10px",{"_index":1775,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["10rem",{"_index":1148,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["10x",{"_index":2293,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":2190,"title":{},"body":{"changelog.html":{}}}],["11.2.1",{"_index":2520,"title":{},"body":{"dependencies.html":{}}}],["11/14",{"_index":2418,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1953,"title":{},"body":{"changelog.html":{},"index.html":{},"overview.html":{}}}],["12.0.1",{"_index":2521,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":2440,"title":{},"body":{"dependencies.html":{}}}],["12.1.3",{"_index":2445,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":2058,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["13/13",{"_index":2407,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1943,"title":{},"body":{"changelog.html":{}}}],["15.126.1",{"_index":2438,"title":{},"body":{"dependencies.html":{}}}],["15/15",{"_index":2423,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":2111,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["16.0.0",{"_index":2491,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":2008,"title":{},"body":{"changelog.html":{}}}],["17.5rem",{"_index":1157,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["18px",{"_index":1777,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["1px",{"_index":1771,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["1rem",{"_index":1135,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["2",{"_index":2258,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["2.0.0",{"_index":2110,"title":{},"body":{"changelog.html":{}}}],["2.0.5",{"_index":2495,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2071,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.2.0",{"_index":2066,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.25rem",{"_index":1138,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["2.3.0",{"_index":2063,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":2056,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":2044,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":2026,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.6.7",{"_index":2522,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":2486,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":2398,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1300,"title":{},"body":{"components/OpacitySliderComponent.html":{},"coverage.html":{}}}],["200",{"_index":1548,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["2019",{"_index":2317,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":2243,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":2007,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":1941,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":2131,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":2307,"title":{},"body":{"changelog.html":{}}}],["23/30",{"_index":2420,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":2359,"title":{},"body":{"changelog.html":{}}}],["24px",{"_index":1781,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["25",{"_index":2415,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":1122,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["255",{"_index":1764,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["26",{"_index":2158,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":2193,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":2003,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":2227,"title":{},"body":{"changelog.html":{}}}],["3.0",{"_index":2575,"title":{},"body":{"index.html":{}}}],["3.0.0",{"_index":2001,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.0.12",{"_index":2460,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":1959,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":1952,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":1940,"title":{},"body":{"changelog.html":{}}}],["3.5.5",{"_index":2464,"title":{},"body":{"dependencies.html":{}}}],["3.5.7",{"_index":2466,"title":{},"body":{"dependencies.html":{}}}],["3.6",{"_index":2596,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":2531,"title":{},"body":{"dependencies.html":{}}}],["3.7.1",{"_index":2471,"title":{},"body":{"dependencies.html":{}}}],["3.7.3",{"_index":2473,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2412,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2411,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2072,"title":{},"body":{"changelog.html":{}}}],["300",{"_index":1145,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["31",{"_index":2282,"title":{},"body":{"changelog.html":{}}}],["323232",{"_index":1767,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["3d",{"_index":1825,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["3px",{"_index":1769,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["3rem",{"_index":1129,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/TextSearchComponent.html":{}}}],["4",{"_index":159,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["4.17.1",{"_index":2493,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":2514,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":2483,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":2504,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2408,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":1762,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["48",{"_index":1887,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["5.0.0",{"_index":2507,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":2512,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":2405,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1151,"title":{},"body":{"components/InfoDialogComponent.html":{},"coverage.html":{}}}],["50rem",{"_index":1147,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["5px",{"_index":1770,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["6.0.1",{"_index":2510,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":2524,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":2468,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":2535,"title":{},"body":{"dependencies.html":{}}}],["6.6.7",{"_index":2532,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":2434,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1337,"title":{},"body":{"components/OpacitySliderComponent.html":{},"coverage.html":{}}}],["60rem",{"_index":1031,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["64",{"_index":1579,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["6px",{"_index":1774,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["6rem",{"_index":1782,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["6s",{"_index":1046,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["7/34",{"_index":2403,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":2422,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":2410,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":1508,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["75",{"_index":1904,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["76",{"_index":2419,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":2417,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":2135,"title":{},"body":{"changelog.html":{}}}],["8.3.2",{"_index":2539,"title":{},"body":{"dependencies.html":{}}}],["8.5.7",{"_index":2453,"title":{},"body":{"dependencies.html":{}}}],["8.7.8",{"_index":2456,"title":{},"body":{"dependencies.html":{}}}],["8/9",{"_index":2414,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2368,"title":{},"body":{"changelog.html":{}}}],["87",{"_index":2409,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":2413,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":2664,"title":{},"body":{"overview.html":{}}}],["9.5",{"_index":1870,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["9/9",{"_index":2421,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2323,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":1947,"title":{},"body":{"changelog.html":{}}}],["9999",{"_index":1780,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["9]*/g",{"_index":1275,"title":{},"body":{"directives/NumberDirective.html":{}}}],["9th",{"_index":2166,"title":{},"body":{"changelog.html":{}}}],["_bounds",{"_index":1872,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_camera",{"_index":1874,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_error",{"_index":1201,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["_ignored",{"_index":958,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["_index",{"_index":1691,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["_interactive",{"_index":1866,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_occurencedata",{"_index":1514,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["_rotation",{"_index":1867,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_rotationx",{"_index":1868,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_scene",{"_index":1873,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_target",{"_index":1871,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_wont_",{"_index":1811,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["_zoom",{"_index":1869,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["a.name.localecompare(b.name",{"_index":1471,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["ability",{"_index":2085,"title":{},"body":{"changelog.html":{}}}],["about.wrapper",{"_index":1128,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["above",{"_index":673,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"license.html":{}}}],["abstract",{"_index":376,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["access",{"_index":1754,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["accessors",{"_index":800,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["according",{"_index":1584,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["accurate",{"_index":2155,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":2655,"title":{},"body":{"license.html":{}}}],["actions",{"_index":2231,"title":{},"body":{"changelog.html":{}}}],["actual_component",{"_index":720,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["add",{"_index":531,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["added",{"_index":625,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["adding",{"_index":1611,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["additional",{"_index":559,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["addressed",{"_index":2276,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":1963,"title":{},"body":{"changelog.html":{}}}],["adjusting",{"_index":2271,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":2186,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":2113,"title":{},"body":{"changelog.html":{}}}],["afterviewinit",{"_index":1370,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["again",{"_index":2251,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":139,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{}}}],["agerange",{"_index":140,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["aggregateresult",{"_index":96,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["ala",{"_index":2061,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":2666,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1051,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["all_organs",{"_index":1472,"title":{},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["all_possible_organs",{"_index":1377,"title":{},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["all_possible_organs.filter(organ",{"_index":1473,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["allow_telemetry",{"_index":1197,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/variables.html":{}}}],["allowed",{"_index":535,"title":{},"body":{"interfaces/DecoratedRange.html":{},"injectables/GlobalsService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/typealiases.html":{}}}],["allows",{"_index":2173,"title":{},"body":{"changelog.html":{}}}],["allowtelemetry",{"_index":1731,"title":{},"body":{"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["allowtelemetry.tostring",{"_index":1807,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["alpha",{"_index":2348,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":2330,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":2326,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":2316,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":653,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["alt",{"_index":2579,"title":{},"body":{"index.html":{}}}],["always",{"_index":929,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["analytics",{"_index":41,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{}}}],["analyticsmodule",{"_index":1,"title":{"modules/AnalyticsModule.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules.html":{},"overview.html":{}}}],["analyticsoptions",{"_index":23,"title":{"interfaces/AnalyticsOptions.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{}}}],["anatomical",{"_index":1288,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["and/or",{"_index":2629,"title":{},"body":{"license.html":{}}}],["angular",{"_index":828,"title":{},"body":{"injectables/GlobalConfigState.html":{},"modules/MousePositionTrackerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":2439,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2441,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":365,"title":{},"body":{"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":744,"title":{},"body":{"interfaces/DocumentationContent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{}}}],["angular/compiler",{"_index":2442,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":36,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":2443,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":283,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2444,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1714,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["angular/material/button",{"_index":1791,"title":{},"body":{"modules/TrackingPopupModule.html":{}}}],["angular/material/core",{"_index":1352,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["angular/material/dialog",{"_index":1018,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{}}}],["angular/material/expansion",{"_index":1164,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["angular/material/form",{"_index":1716,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["angular/material/icon",{"_index":1061,"title":{},"body":{"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{}}}],["angular/material/input",{"_index":1718,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["angular/material/slider",{"_index":1350,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["angular/material/snack",{"_index":1747,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["angular/material/tooltip",{"_index":1593,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["angular/platform",{"_index":2446,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":2448,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":1167,"title":{},"body":{"modules/InfoDialogModule.html":{},"dependencies.html":{}}}],["animate",{"_index":1118,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["animated",{"_index":1029,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["animated')[0]?.classlist.add('modal",{"_index":1117,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["anyfunction",{"_index":503,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["anyfunction)(...args",{"_index":508,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["anything",{"_index":1812,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["api",{"_index":182,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{},"index.html":{}}}],["api.configuration.basepath",{"_index":225,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["api.hubmapconsortium.org",{"_index":2589,"title":{},"body":{"index.html":{}}}],["api.ts",{"_index":2400,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiendpointdatasourceoptions",{"_index":87,"title":{"interfaces/ApiEndpointDataSourceOptions.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{}}}],["apiendpointdatasourceservice",{"_index":177,"title":{"injectables/ApiEndpointDataSourceService.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{}}}],["app",{"_index":1376,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:bladder",{"_index":1456,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:brain",{"_index":1381,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:eye",{"_index":1389,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:fallopian",{"_index":1395,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:heart",{"_index":1401,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:kidney",{"_index":1404,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:knee",{"_index":1409,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:large",{"_index":1442,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:liver",{"_index":1414,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:lung",{"_index":1417,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:lymph",{"_index":1384,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:ovary",{"_index":1422,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:pancreas",{"_index":1427,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:pelvis",{"_index":1430,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:prostate",{"_index":1434,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:skin",{"_index":1378,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:small",{"_index":1438,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:spleen",{"_index":1445,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:thymus",{"_index":1448,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:ureter",{"_index":1451,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:uterus",{"_index":1460,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:vasculature",{"_index":1463,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app_initializer",{"_index":34,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["appear",{"_index":2020,"title":{},"body":{"changelog.html":{}}}],["appearance",{"_index":1699,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["application",{"_index":2177,"title":{},"body":{"changelog.html":{}}}],["applied",{"_index":528,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["applies",{"_index":613,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["apply",{"_index":576,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["appname",{"_index":50,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["appropriate",{"_index":1983,"title":{},"body":{"changelog.html":{}}}],["april",{"_index":2165,"title":{},"body":{"changelog.html":{}}}],["args",{"_index":390,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["arguments",{"_index":1263,"title":{},"body":{"directives/NumberDirective.html":{}}}],["arising",{"_index":2658,"title":{},"body":{"license.html":{}}}],["array",{"_index":540,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["array.length",{"_index":353,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["arrays",{"_index":2557,"title":{},"body":{"miscellaneous/functions.html":{}}}],["asct+b",{"_index":2009,"title":{},"body":{"changelog.html":{}}}],["assets/docs/readme.md",{"_index":746,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"miscellaneous/variables.html":{}}}],["assignment/selection",{"_index":2143,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":891,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{},"license.html":{}}}],["async",{"_index":349,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["attempt",{"_index":861,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["attempts",{"_index":2047,"title":{},"body":{"changelog.html":{}}}],["attrs",{"_index":65,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["attrs[key",{"_index":64,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["authors",{"_index":2649,"title":{},"body":{"license.html":{}}}],["autocomplete",{"_index":266,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["autocompleteoption",{"_index":258,"title":{"interfaces/AutoCompleteOption.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"coverage.html":{}}}],["autocompleter",{"_index":327,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["autocompletion",{"_index":303,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["autofocus",{"_index":1026,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["automatic",{"_index":2260,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":2215,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":635,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"modules.html":{}}}],["avoid",{"_index":2099,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":433,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["award",{"_index":2606,"title":{},"body":{"index.html":{}}}],["b",{"_index":1470,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["backend",{"_index":2033,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":1766,"title":{},"body":{"components/TrackingPopupComponent.html":{},"changelog.html":{},"index.html":{}}}],["bar",{"_index":302,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["base",{"_index":2335,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":584,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["basic",{"_index":2112,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":2024,"title":{},"body":{"changelog.html":{}}}],["beginning",{"_index":1497,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["behavior",{"_index":1501,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["behaviorsubject",{"_index":742,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["being",{"_index":1090,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["beta",{"_index":2006,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":2073,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1334,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["bind",{"_index":284,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"dependencies.html":{}}}],["binding",{"_index":1150,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["bladder",{"_index":1458,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["block",{"_index":1666,"title":{},"body":{"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["blocks",{"_index":1967,"title":{},"body":{"changelog.html":{}}}],["blood",{"_index":1465,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["bmi",{"_index":141,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{}}}],["bmirange",{"_index":142,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["board",{"_index":2328,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":366,"title":{},"body":{"modules/BodyUiModule.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"dependencies.html":{}}}],["bodycanvas",{"_index":1880,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bodyui",{"_index":1821,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bodyui.initialize",{"_index":1911,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bodyuicomponent",{"_index":358,"title":{},"body":{"modules/BodyUiModule.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"overview.html":{}}}],["bodyuimodule",{"_index":354,"title":{"modules/BodyUiModule.html":{}},"body":{"modules/BodyUiModule.html":{},"modules.html":{},"overview.html":{}}}],["boolean",{"_index":53,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["border",{"_index":1036,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["both",{"_index":146,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["bottom",{"_index":1134,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["boundary",{"_index":1248,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["bounds",{"_index":685,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"interfaces/XYZTriplet.html":{}}}],["bounds(value",{"_index":1850,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bounds.x",{"_index":1895,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bounds.y",{"_index":1898,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["box",{"_index":1336,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["brain",{"_index":1382,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["breaking",{"_index":2124,"title":{},"body":{"changelog.html":{}}}],["bringing",{"_index":2136,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":2661,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":937,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browserify",{"_index":2533,"title":{},"body":{"dependencies.html":{}}}],["browsing",{"_index":2379,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":2000,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":648,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"index.html":{}}}],["building",{"_index":591,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["builds",{"_index":1999,"title":{},"body":{"changelog.html":{}}}],["buster",{"_index":153,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":985,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":701,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["button.component",{"_index":1062,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["button.component.html",{"_index":993,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.scss",{"_index":992,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts",{"_index":984,"title":{},"body":{"components/InfoButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:22",{"_index":1004,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:27",{"_index":1005,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:29",{"_index":1000,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:49",{"_index":1012,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:56",{"_index":1009,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:72",{"_index":1014,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.module.ts",{"_index":1059,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["button.service",{"_index":1019,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["button.service.ts",{"_index":731,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["button.service.ts:27",{"_index":1067,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["button.service.ts:34",{"_index":1069,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["button.service.ts:48",{"_index":1068,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["button/info",{"_index":730,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["c",{"_index":1176,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"license.html":{}}}],["cache",{"_index":151,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"dependencies.html":{}}}],["cache_config_no_params",{"_index":155,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cache_config_params",{"_index":157,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cacheable",{"_index":120,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"dependencies.html":{}}}],["cacheable(cache_config_no_params",{"_index":188,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["cacheable(cache_config_params",{"_index":200,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["cachebusterobserver",{"_index":156,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/variables.html":{}}}],["cached",{"_index":608,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["cacheresults",{"_index":430,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["call",{"_index":1088,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/TrackingPopupComponent.html":{}}}],["callback",{"_index":2089,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["called",{"_index":2127,"title":{},"body":{"changelog.html":{}}}],["camera",{"_index":1852,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["camera(value",{"_index":1854,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["cancelregistration",{"_index":2088,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":2309,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":2480,"title":{},"body":{"dependencies.html":{}}}],["canvas",{"_index":1902,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["canvas.addeventlistener('contextmenu",{"_index":1908,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["card",{"_index":2117,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":1475,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["carouselcontainer",{"_index":1481,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["case",{"_index":1211,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["cases",{"_index":2280,"title":{},"body":{"changelog.html":{}}}],["cast",{"_index":161,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["catch",{"_index":957,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["ccf",{"_index":102,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":2236,"title":{},"body":{"changelog.html":{}}}],["ccfdatabase",{"_index":408,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabase(config",{"_index":436,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice",{"_index":368,"title":{"injectables/CCFDatabaseDataSourceBaseService.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["ccfdatabasedatasourcebaseservice:20",{"_index":447,"title":{},"body":{"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice:39",{"_index":446,"title":{},"body":{"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice:53",{"_index":445,"title":{},"body":{"injectables/CCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice:65",{"_index":1815,"title":{},"body":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourceservice",{"_index":435,"title":{"injectables/CCFDatabaseDataSourceService.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["ccfdatabasemanager",{"_index":382,"title":{"interfaces/CCFDatabaseManager.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["ccfdatabaseoptions",{"_index":383,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["cdr",{"_index":1633,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["cdr.markforcheck",{"_index":1660,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["cell",{"_index":1964,"title":{},"body":{"changelog.html":{}}}],["celltypeterms",{"_index":144,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["center",{"_index":1139,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"index.html":{}}}],["change",{"_index":868,"title":{},"body":{"injectables/GlobalsService.html":{},"components/StoreDebugComponent.html":{},"changelog.html":{},"index.html":{}}}],["changed",{"_index":609,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["changedetection",{"_index":310,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["changedetectionstrategy",{"_index":274,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":311,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["changedetectorref",{"_index":1634,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["changelog",{"_index":1936,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changeopacity",{"_index":1292,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["changeopacity(newopacity",{"_index":1311,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["changes",{"_index":329,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["charge",{"_index":2616,"title":{},"body":{"license.html":{}}}],["check",{"_index":865,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["choose",{"_index":2256,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":2234,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":2652,"title":{},"body":{"license.html":{}}}],["class",{"_index":78,"title":{"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["classes",{"_index":526,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"overview.html":{}}}],["cleans",{"_index":1641,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["cleanup",{"_index":2005,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":1123,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["clearinterval(this.timeouthandler",{"_index":1559,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["clearsubscriptions",{"_index":1931,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["click",{"_index":1016,"title":{},"body":{"components/InfoButtonComponent.html":{},"changelog.html":{}}}],["clicked",{"_index":991,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["clicking",{"_index":2121,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":110,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"index.html":{}}}],["clientheight",{"_index":1228,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clientwidth",{"_index":1227,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clientx",{"_index":1230,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clienty",{"_index":1231,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["close",{"_index":1082,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["closes",{"_index":1093,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["clsname",{"_index":315,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["cluster_analyticsmodule",{"_index":4,"title":{},"body":{"modules/AnalyticsModule.html":{},"overview.html":{}}}],["cluster_analyticsmodule_providers",{"_index":5,"title":{},"body":{"modules/AnalyticsModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule",{"_index":355,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule_declarations",{"_index":357,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule_exports",{"_index":356,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_decoratedtextmodule",{"_index":722,"title":{},"body":{"modules/DecoratedTextModule.html":{},"overview.html":{}}}],["cluster_decoratedtextmodule_declarations",{"_index":724,"title":{},"body":{"modules/DecoratedTextModule.html":{},"overview.html":{}}}],["cluster_decoratedtextmodule_exports",{"_index":723,"title":{},"body":{"modules/DecoratedTextModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule",{"_index":1054,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_declarations",{"_index":1057,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_exports",{"_index":1055,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_imports",{"_index":1056,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule",{"_index":1158,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule_declarations",{"_index":1159,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule_exports",{"_index":1160,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_numbersonlymodule",{"_index":1278,"title":{},"body":{"modules/NumbersOnlyModule.html":{},"overview.html":{}}}],["cluster_numbersonlymodule_declarations",{"_index":1279,"title":{},"body":{"modules/NumbersOnlyModule.html":{},"overview.html":{}}}],["cluster_numbersonlymodule_exports",{"_index":1280,"title":{},"body":{"modules/NumbersOnlyModule.html":{},"overview.html":{}}}],["cluster_opacityslidermodule",{"_index":1344,"title":{},"body":{"modules/OpacitySliderModule.html":{},"overview.html":{}}}],["cluster_opacityslidermodule_declarations",{"_index":1345,"title":{},"body":{"modules/OpacitySliderModule.html":{},"overview.html":{}}}],["cluster_opacityslidermodule_exports",{"_index":1346,"title":{},"body":{"modules/OpacitySliderModule.html":{},"overview.html":{}}}],["cluster_organselectormodule",{"_index":1587,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_organselectormodule_declarations",{"_index":1588,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_organselectormodule_exports",{"_index":1589,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_storedebugmodule",{"_index":1668,"title":{},"body":{"modules/StoreDebugModule.html":{},"overview.html":{}}}],["cluster_storedebugmodule_declarations",{"_index":1669,"title":{},"body":{"modules/StoreDebugModule.html":{},"overview.html":{}}}],["cluster_storedebugmodule_exports",{"_index":1670,"title":{},"body":{"modules/StoreDebugModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule",{"_index":1704,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule_declarations",{"_index":1705,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule_exports",{"_index":1707,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule_imports",{"_index":1706,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["cluster_trackingpopupmodule",{"_index":1786,"title":{},"body":{"modules/TrackingPopupModule.html":{},"overview.html":{}}}],["cluster_trackingpopupmodule_declarations",{"_index":1788,"title":{},"body":{"modules/TrackingPopupModule.html":{},"overview.html":{}}}],["cluster_trackingpopupmodule_exports",{"_index":1787,"title":{},"body":{"modules/TrackingPopupModule.html":{},"overview.html":{}}}],["code",{"_index":1996,"title":{},"body":{"changelog.html":{}}}],["codebase",{"_index":2246,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":2292,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":2342,"title":{},"body":{"changelog.html":{}}}],["collaboration",{"_index":2244,"title":{},"body":{"changelog.html":{}}}],["collisions",{"_index":2262,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":1045,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["colorizing",{"_index":2301,"title":{},"body":{"changelog.html":{}}}],["combination",{"_index":2257,"title":{},"body":{"changelog.html":{}}}],["combinelatest",{"_index":111,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["combines",{"_index":1608,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["come",{"_index":2297,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":2289,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":412,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"dependencies.html":{}}}],["command",{"_index":67,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["common",{"_index":933,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{},"index.html":{}}}],["commonmodule",{"_index":364,"title":{},"body":{"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}}}],["compare",{"_index":1599,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["comparison",{"_index":1601,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["compiler",{"_index":1242,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["completely",{"_index":867,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["complexity",{"_index":2150,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":1994,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":275,"title":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":697,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["components",{"_index":553,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"overview.html":{}}}],["computed",{"_index":617,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalConfigState.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["comunica/query",{"_index":2449,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":677,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"dependencies.html":{}}}],["concat(op.added",{"_index":678,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["conditions",{"_index":2636,"title":{},"body":{"license.html":{}}}],["config",{"_index":152,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["config.state",{"_index":124,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["config.state.ts",{"_index":792,"title":{},"body":{"injectables/GlobalConfigState.html":{},"coverage.html":{}}}],["config.state.ts:19",{"_index":824,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:22",{"_index":826,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:26",{"_index":823,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:30",{"_index":820,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:34",{"_index":817,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:42",{"_index":803,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:43",{"_index":805,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:44",{"_index":807,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:45",{"_index":809,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:46",{"_index":812,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:62",{"_index":814,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config/global",{"_index":123,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["configurable",{"_index":910,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["configuration",{"_index":2077,"title":{},"body":{"changelog.html":{}}}],["configurations",{"_index":2084,"title":{},"body":{"changelog.html":{}}}],["confirmation",{"_index":2046,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":2094,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":2031,"title":{},"body":{"changelog.html":{}}}],["connectdatabase",{"_index":374,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["connectdatabase(manager",{"_index":381,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["connection",{"_index":2659,"title":{},"body":{"license.html":{}}}],["consent",{"_index":449,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["consent.service",{"_index":42,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["consentchange",{"_index":450,"title":{},"body":{"injectables/ConsentService.html":{}}}],["consentservice",{"_index":6,"title":{"injectables/ConsentService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["consentservice.consentchange.subscribe(consent",{"_index":1205,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["consentservice.setconsent(this.loadconsent",{"_index":1203,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["consortium",{"_index":2611,"title":{},"body":{"license.html":{}}}],["const",{"_index":54,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["constrained",{"_index":2566,"title":{},"body":{"miscellaneous/functions.html":{}}}],["constructor",{"_index":179,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/ConsentService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["constructor(api",{"_index":238,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["constructor(consentservice",{"_index":964,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["constructor(defaultmaxoptions",{"_index":1676,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["constructor(dialog",{"_index":998,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["constructor(dialogref",{"_index":1084,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor(el",{"_index":1260,"title":{},"body":{"directives/NumberDirective.html":{}}}],["constructor(elementref",{"_index":1732,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["constructor(globalconfig",{"_index":379,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["constructor(http",{"_index":1066,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["constructor(private",{"_index":751,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"directives/NumberDirective.html":{}}}],["constructor(store",{"_index":1632,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["container",{"_index":622,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["containers",{"_index":2075,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":2570,"title":{},"body":{"index.html":{}}}],["contains",{"_index":1357,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["content",{"_index":739,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["content.title",{"_index":1124,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["contents",{"_index":1103,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["continuously",{"_index":1543,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["contract",{"_index":2656,"title":{},"body":{"license.html":{}}}],["control",{"_index":2203,"title":{},"body":{"changelog.html":{}}}],["controller",{"_index":335,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["convert",{"_index":765,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["coordinate",{"_index":1937,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["copies",{"_index":2631,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2619,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2610,"title":{},"body":{"license.html":{}}}],["cors",{"_index":2485,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":2324,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["created",{"_index":672,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["createdatabase",{"_index":377,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["createdatabase(config",{"_index":386,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["creates",{"_index":339,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{}}}],["createsegments",{"_index":566,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["createstackops",{"_index":567,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["createstackops(ranges",{"_index":586,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["createworker",{"_index":1814,"title":{},"body":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["createworker(config",{"_index":439,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["creation",{"_index":1002,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["credits",{"_index":2597,"title":{},"body":{"index.html":{}}}],["csp",{"_index":946,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["css",{"_index":1373,"title":{},"body":{"interfaces/OrganInfo.html":{},"dependencies.html":{}}}],["cuboid",{"_index":2322,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":2321,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":615,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{}}}],["currently",{"_index":1492,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["cursor",{"_index":1043,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["custom",{"_index":1600,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["cyberinfrastructure",{"_index":2599,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":2160,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":878,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["damages",{"_index":2653,"title":{},"body":{"license.html":{}}}],["dark/light",{"_index":2090,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":126,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"modules/MousePositionTrackerModule.html":{},"components/StoreDebugComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["data.content",{"_index":1108,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["data.length",{"_index":1023,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["data.split",{"_index":771,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["data.title",{"_index":1109,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["data.videoid",{"_index":1110,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dataaction",{"_index":1797,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["database",{"_index":103,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["database.service.ts",{"_index":370,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["database.service.ts:20",{"_index":380,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{}}}],["database.service.ts:37",{"_index":387,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{}}}],["database.service.ts:39",{"_index":384,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{}}}],["database.service.ts:63",{"_index":1816,"title":{},"body":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["database[releaseproxy",{"_index":443,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["databasestatus",{"_index":104,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["datareviver",{"_index":133,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/typealiases.html":{}}}],["datasets",{"_index":2171,"title":{},"body":{"changelog.html":{}}}],["datasource",{"_index":125,"title":{"interfaces/DataSource.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"coverage.html":{}}}],["datasource[k",{"_index":489,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["datasourcedatatype",{"_index":490,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["datasourcelike",{"_index":416,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/typealiases.html":{}}}],["datasourcelikemethod",{"_index":487,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["datasourcemethod",{"_index":488,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["datasourceservice",{"_index":509,"title":{"injectables/DataSourceService.html":{}},"body":{"injectables/DataSourceService.html":{},"coverage.html":{}}}],["deal",{"_index":2621,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2660,"title":{},"body":{"license.html":{}}}],["debug",{"_index":1629,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug'},{'name",{"_index":712,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["debug.component",{"_index":1672,"title":{},"body":{"modules/StoreDebugModule.html":{}}}],["debug.component.html",{"_index":1631,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.scss",{"_index":1630,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts",{"_index":1627,"title":{},"body":{"components/StoreDebugComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["debug.component.ts:21",{"_index":1639,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:26",{"_index":1645,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:34",{"_index":1642,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:37",{"_index":1635,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:58",{"_index":1640,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.module.ts",{"_index":1671,"title":{},"body":{"modules/StoreDebugModule.html":{}}}],["debug/store",{"_index":1626,"title":{},"body":{"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["december",{"_index":2252,"title":{},"body":{"changelog.html":{}}}],["decides",{"_index":1522,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["deck.gl/core",{"_index":2452,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/geo",{"_index":2454,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":2457,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":2458,"title":{},"body":{"dependencies.html":{}}}],["deckgl",{"_index":1876,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["declarations",{"_index":362,"title":{},"body":{"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}}}],["declare",{"_index":907,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["decorated",{"_index":290,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{}}}],["decoratedrange",{"_index":289,"title":{"interfaces/DecoratedRange.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["decoratedtextcomponent",{"_index":552,"title":{"components/DecoratedTextComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["decoratedtextmodule",{"_index":721,"title":{"modules/DecoratedTextModule.html":{}},"body":{"modules/DecoratedTextModule.html":{},"modules/TextSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["decoration",{"_index":600,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["decorations",{"_index":267,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{}}}],["decorations.length",{"_index":634,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["decorations.reduce",{"_index":689,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["decorator",{"_index":285,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"dependencies.html":{}}}],["decorators",{"_index":245,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{}}}],["deep",{"_index":1126,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["deeply",{"_index":2035,"title":{},"body":{"changelog.html":{}}}],["def",{"_index":877,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["default",{"_index":292,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/ConsentService.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/PluckUniqueOptions.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_max_options",{"_index":297,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_options",{"_index":1607,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultmaxoptions",{"_index":342,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["defaultparams",{"_index":136,"title":{"interfaces/DefaultParams.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{}}}],["defaults",{"_index":841,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/functions.html":{}}}],["defaultservice",{"_index":105,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["define",{"_index":733,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["defined",{"_index":24,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["delegate.service.ts",{"_index":1171,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"coverage.html":{}}}],["delegate.service.ts:11",{"_index":1174,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["delegate.service.ts:28",{"_index":1177,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["delegatedatasource",{"_index":372,"title":{"classes/DelegateDataSource.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["delegatedatasource:11",{"_index":1179,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["delegatedatasource:19",{"_index":406,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["delete",{"_index":918,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["demo",{"_index":2054,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":943,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["depends",{"_index":925,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["deps",{"_index":77,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["description",{"_index":262,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["destroyed",{"_index":1013,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["detaches",{"_index":1520,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["details",{"_index":990,"title":{},"body":{"components/InfoButtonComponent.html":{},"changelog.html":{}}}],["detection",{"_index":1638,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["detects",{"_index":1015,"title":{},"body":{"components/InfoButtonComponent.html":{},"interfaces/OrganInfo.html":{}}}],["determines",{"_index":1496,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["determining",{"_index":1602,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["dev",{"_index":431,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["developed",{"_index":2598,"title":{},"body":{"index.html":{}}}],["developmentmode",{"_index":52,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["developments",{"_index":2347,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":738,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["dialog's",{"_index":1089,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialog'},{'name",{"_index":703,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["dialog.component",{"_index":1021,"title":{},"body":{"components/InfoButtonComponent.html":{},"modules/InfoDialogModule.html":{}}}],["dialog.component.html",{"_index":1078,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialog.component.scss",{"_index":1077,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialog.component.ts",{"_index":1070,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"coverage.html":{}}}],["dialog.component.ts:26",{"_index":1102,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":1104,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:32",{"_index":1087,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:40",{"_index":1101,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:41",{"_index":1100,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:51",{"_index":1094,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:60",{"_index":1092,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.module",{"_index":1064,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["dialog.module.ts",{"_index":1161,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["dialog/info",{"_index":1020,"title":{},"body":{"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"coverage.html":{}}}],["dialogref",{"_index":1080,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialogue",{"_index":1011,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["different",{"_index":2074,"title":{},"body":{"changelog.html":{}}}],["digits",{"_index":2228,"title":{},"body":{"changelog.html":{}}}],["dir",{"_index":1532,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["direct",{"_index":2365,"title":{},"body":{"changelog.html":{}}}],["direction",{"_index":1533,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["directive",{"_index":695,"title":{"directives/NumberDirective.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":717,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["directly",{"_index":2290,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":949,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{}}}],["disabled",{"_index":970,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/variables.html":{}}}],["disables",{"_index":1571,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["dismiss",{"_index":1728,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["display",{"_index":558,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["displayed",{"_index":273,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["displayerrors",{"_index":1489,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["displaying",{"_index":1072,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["displays",{"_index":988,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["distance",{"_index":1503,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["distinct",{"_index":1603,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["distinctuntilchanged",{"_index":287,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["distinctuntilchanged(opts.compare",{"_index":1624,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["distribute",{"_index":2627,"title":{},"body":{"license.html":{}}}],["div",{"_index":1877,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["doc",{"_index":2333,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1217,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"dependencies.html":{}}}],["document).body",{"_index":1252,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["document.body.appendchild(tag",{"_index":1115,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["document.createelement('script",{"_index":1112,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["document.getelementsbyclassname('modal",{"_index":1116,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["documentation",{"_index":735,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documentationcontent",{"_index":728,"title":{"interfaces/DocumentationContent.html":{}},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"coverage.html":{}}}],["documentationcontents",{"_index":1081,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["documentationurl",{"_index":745,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dom",{"_index":555,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["don't",{"_index":642,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["done",{"_index":654,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["donor",{"_index":2116,"title":{},"body":{"changelog.html":{}}}],["donors",{"_index":2174,"title":{},"body":{"changelog.html":{}}}],["dorequest",{"_index":215,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["dorequest(method",{"_index":240,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["dotenv",{"_index":2490,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":2356,"title":{},"body":{"changelog.html":{}}}],["during",{"_index":871,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["dynamic",{"_index":2447,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":1968,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":734,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/functions.html":{}}}],["eagerly_loaded_services",{"_index":55,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["easier",{"_index":1974,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":624,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["efficiency",{"_index":2195,"title":{},"body":{"changelog.html":{}}}],["el",{"_index":1229,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"miscellaneous/functions.html":{}}}],["element",{"_index":694,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["elementref",{"_index":1261,"title":{},"body":{"directives/NumberDirective.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["elementref.nativeelement",{"_index":1751,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["embedded",{"_index":2082,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":2070,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":2068,"title":{},"body":{"changelog.html":{}}}],["emitevent",{"_index":320,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["emits",{"_index":328,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{}}}],["emitted",{"_index":2560,"title":{},"body":{"miscellaneous/functions.html":{}}}],["emitter",{"_index":1307,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["empty",{"_index":630,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["end",{"_index":529,"title":{},"body":{"interfaces/DecoratedRange.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/functions.html":{}}}],["endpoint",{"_index":226,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["endpoint.service.ts",{"_index":90,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["endpoint.service.ts:104",{"_index":249,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:109",{"_index":253,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:114",{"_index":250,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:119",{"_index":252,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:127",{"_index":248,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:135",{"_index":254,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:143",{"_index":257,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:151",{"_index":246,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:159",{"_index":251,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:167",{"_index":247,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:175",{"_index":256,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:183",{"_index":255,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:190",{"_index":241,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:195",{"_index":243,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:201",{"_index":244,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:96",{"_index":239,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["ensures",{"_index":1809,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["entry",{"_index":1741,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["entry[1",{"_index":668,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["environment",{"_index":926,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["error",{"_index":1523,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["errors",{"_index":959,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["es",{"_index":2481,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":948,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{}}}],["eslint/explicit",{"_index":1247,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["eslint/no",{"_index":953,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["especially",{"_index":869,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["etc",{"_index":2098,"title":{},"body":{"changelog.html":{}}}],["eui",{"_index":1007,"title":{},"body":{"components/InfoButtonComponent.html":{},"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":1990,"title":{},"body":{"changelog.html":{}}}],["eval",{"_index":955,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["even",{"_index":890,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["event",{"_index":1225,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"license.html":{}}}],["event.stoppropagation",{"_index":1276,"title":{},"body":{"directives/NumberDirective.html":{}}}],["eventemitter",{"_index":276,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["events",{"_index":1234,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/OpacitySliderComponent.html":{}}}],["events.subscribe(data",{"_index":1239,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["eventually",{"_index":1375,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["evt",{"_index":1909,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["evt.preventdefault",{"_index":1910,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["exclusive",{"_index":532,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["exists",{"_index":893,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["expanded",{"_index":1494,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["explicit",{"_index":1246,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["exploration",{"_index":2573,"title":{},"body":{"index.html":{}}}],["export",{"_index":46,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["exported",{"_index":127,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["exports",{"_index":363,"title":{},"body":{"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}}}],["express",{"_index":2492,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["ext/operators",{"_index":839,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["ext/operators/src/lib/filter",{"_index":2390,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ext/operators/src/lib/flatten.ts",{"_index":2393,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ext/operators/src/lib/inner",{"_index":2395,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ext/operators/src/lib/pluck",{"_index":1595,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ext/src/public",{"_index":2399,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["extends",{"_index":371,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["external",{"_index":2087,"title":{},"body":{"changelog.html":{}}}],["extra",{"_index":2497,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":2051,"title":{},"body":{"changelog.html":{}}}],["eye",{"_index":1390,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["f",{"_index":1431,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":298,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/LocalStorageSyncService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["fade",{"_index":1119,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["fail",{"_index":942,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["fails",{"_index":1243,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"changelog.html":{}}}],["fallopian",{"_index":1397,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["fallthrough",{"_index":1212,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["false",{"_index":321,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/variables.html":{}}}],["favor",{"_index":2239,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":1965,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":2161,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":2194,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":147,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":1369,"title":{},"body":{"interfaces/OrganInfo.html":{},"dependencies.html":{}}}],["fetches",{"_index":345,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["field",{"_index":1698,"title":{},"body":{"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"changelog.html":{}}}],["fields",{"_index":631,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["file",{"_index":15,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":2620,"title":{},"body":{"license.html":{}}}],["filled",{"_index":597,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["filter",{"_index":97,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["filter(config",{"_index":421,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["filter(item",{"_index":669,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["filter(range",{"_index":686,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["filternulls",{"_index":837,"title":{},"body":{"injectables/GlobalConfigState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["filterparams",{"_index":138,"title":{"interfaces/FilterParams.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["filters",{"_index":594,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["filtertoparams",{"_index":2428,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["filtertoparams(filter",{"_index":219,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["final",{"_index":2242,"title":{},"body":{"changelog.html":{}}}],["find",{"_index":347,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["findglobalobject",{"_index":858,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["finishing",{"_index":2049,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":639,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["fit",{"_index":2168,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":2645,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":2152,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":1951,"title":{},"body":{"changelog.html":{}}}],["fixes/performance",{"_index":2302,"title":{},"body":{"changelog.html":{}}}],["flatten",{"_index":2394,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["flattens",{"_index":2555,"title":{},"body":{"miscellaneous/functions.html":{}}}],["flex",{"_index":692,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["float",{"_index":1136,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["fly",{"_index":2373,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":2635,"title":{},"body":{"license.html":{}}}],["font",{"_index":1047,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{}}}],["form",{"_index":334,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["format",{"_index":2265,"title":{},"body":{"changelog.html":{}}}],["formatdata",{"_index":1224,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["formcontrol",{"_index":282,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["formsmodule",{"_index":1711,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["forroot",{"_index":21,"title":{},"body":{"modules/AnalyticsModule.html":{}}}],["forroot(options",{"_index":22,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["forwardcall",{"_index":378,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardcall(method",{"_index":388,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource",{"_index":392,"title":{"classes/ForwardingDataSource.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["forwardingdatasource:36",{"_index":397,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:40",{"_index":401,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:44",{"_index":398,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:48",{"_index":400,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:52",{"_index":396,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:56",{"_index":402,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:60",{"_index":405,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:64",{"_index":394,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:68",{"_index":399,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:72",{"_index":395,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:76",{"_index":404,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:80",{"_index":403,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:93",{"_index":393,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["found",{"_index":348,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GlobalsService.html":{},"components/TextSearchComponent.html":{}}}],["frame",{"_index":2175,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":1938,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["free",{"_index":2615,"title":{},"body":{"license.html":{}}}],["fromevent",{"_index":1219,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["fromevent(el",{"_index":1235,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["fs",{"_index":2496,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":681,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["fullscreen",{"_index":2329,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":2162,"title":{},"body":{"changelog.html":{}}}],["func",{"_index":951,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["function",{"_index":56,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["function('return",{"_index":956,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["functionality",{"_index":304,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GlobalsService.html":{},"components/TextSearchComponent.html":{}}}],["functionaliy",{"_index":1609,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":2543,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":2604,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":2634,"title":{},"body":{"license.html":{}}}],["further",{"_index":2325,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":2153,"title":{},"body":{"changelog.html":{}}}],["ga",{"_index":1223,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["ga.event('webpage",{"_index":1240,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["gatoken",{"_index":48,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["generate",{"_index":1969,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":1995,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":1977,"title":{},"body":{"changelog.html":{}}}],["get(key",{"_index":874,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["getaggregateresults",{"_index":232,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getaggregateresults(filter",{"_index":203,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getallowtelemetry",{"_index":1744,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["getcelltypetermoccurences",{"_index":233,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getcelltypetermoccurences(filter",{"_index":207,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getcelltypetreemodel",{"_index":196,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getconfig",{"_index":825,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getdata",{"_index":1644,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["getdatabasestatus",{"_index":185,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getdatasettechnologynames",{"_index":191,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getnormalizeddecorations",{"_index":568,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getobj",{"_index":902,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["getontologytermoccurences",{"_index":234,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getontologytermoccurences(filter",{"_index":205,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getontologytreemodel",{"_index":193,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getop",{"_index":657,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getop(range.end).removed.push(range",{"_index":660,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getop(range.start).added.push(range",{"_index":659,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getoption",{"_index":795,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getoption(...path",{"_index":808,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getoption(k1",{"_index":801,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getoptions",{"_index":1673,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["getoptions(search",{"_index":350,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["getpathkey",{"_index":796,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getpathkey(path",{"_index":813,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getproperty",{"_index":797,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getproperty(path",{"_index":815,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getprovidernames",{"_index":189,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getreferenceorgans",{"_index":198,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getreferenceorganscene",{"_index":235,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getreferenceorganscene(organiri",{"_index":212,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["gets",{"_index":876,"title":{},"body":{"injectables/GlobalsService.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{}}}],["getscene",{"_index":236,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getscene(filter",{"_index":209,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["gettelemetrystoragesetting",{"_index":1802,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":1934,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettissueblockresults",{"_index":237,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["gettissueblockresults(filter",{"_index":201,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getvalue",{"_index":1695,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["github",{"_index":2230,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":464,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/typealiases.html":{}}}],["gizmo",{"_index":2102,"title":{},"body":{"changelog.html":{}}}],["global",{"_index":857,"title":{},"body":{"injectables/GlobalsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["globalconfig",{"_index":183,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"changelog.html":{}}}],["globalconfig.config$.pipe",{"_index":420,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["globalconfig.getoption('hubmaptoken",{"_index":221,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["globalconfig.getoption('hubmaptoken').subscribe(buster",{"_index":184,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["globalconfig.getoption('remoteapiendpoint",{"_index":220,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["globalconfigstate",{"_index":122,"title":{"injectables/GlobalConfigState.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["globalkey",{"_index":881,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{}}}],["globalsservice",{"_index":854,"title":{"injectables/GlobalsService.html":{}},"body":{"injectables/GlobalsService.html":{},"coverage.html":{}}}],["globalthis",{"_index":873,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["globalthis[k",{"_index":913,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["good",{"_index":2275,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":40,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"changelog.html":{},"dependencies.html":{}}}],["googleanalyticsservice",{"_index":1218,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["googleanalyticssyncservice",{"_index":8,"title":{"injectables/GoogleAnalyticsSyncService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["granted",{"_index":2614,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2662,"title":{},"body":{"modules.html":{}}}],["graphical",{"_index":1950,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":2499,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":2064,"title":{},"body":{"changelog.html":{}}}],["gtex",{"_index":1970,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":2267,"title":{},"body":{"changelog.html":{}}}],["h1",{"_index":756,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["hack",{"_index":1552,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["hand",{"_index":2272,"title":{},"body":{"changelog.html":{}}}],["handles",{"_index":1071,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["happen",{"_index":2310,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":2250,"title":{},"body":{"changelog.html":{}}}],["happy",{"_index":1554,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["hard",{"_index":923,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["has(key",{"_index":885,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["hassex",{"_index":1360,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":1143,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["headerandcontent",{"_index":773,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["headerandcontent.splice(1).join('\\n\\n",{"_index":777,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["headerandcontent[0",{"_index":776,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["heart",{"_index":1402,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":1132,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["helmet",{"_index":2503,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":1365,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["here",{"_index":2270,"title":{},"body":{"changelog.html":{}}}],["hereby",{"_index":2613,"title":{},"body":{"license.html":{}}}],["hex",{"_index":2505,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":1342,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["hide",{"_index":1525,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["hiding",{"_index":1073,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["high",{"_index":167,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["highlight",{"_index":2040,"title":{},"body":{"changelog.html":{}}}],["highlights",{"_index":2041,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":2650,"title":{},"body":{"license.html":{}}}],["hooked",{"_index":2201,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":691,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["hostbinding",{"_index":277,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["hostbinding('class",{"_index":314,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["hostbindings",{"_index":574,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["hostlistener",{"_index":1271,"title":{},"body":{"directives/NumberDirective.html":{}}}],["hostlistener('input",{"_index":1270,"title":{},"body":{"directives/NumberDirective.html":{}}}],["hostlisteners",{"_index":1259,"title":{},"body":{"directives/NumberDirective.html":{}}}],["hovering",{"_index":2118,"title":{},"body":{"changelog.html":{}}}],["html",{"_index":313,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["htmlelement",{"_index":1222,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["http",{"_index":752,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["http://purl.obolibrary.org/obo/fma_24977",{"_index":1413,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/fma_24978",{"_index":1412,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/fma_54449",{"_index":1394,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/fma_7213",{"_index":1426,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/fma_7214",{"_index":1425,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000029",{"_index":1387,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000056",{"_index":1453,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000059",{"_index":1444,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000079",{"_index":1437,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000948",{"_index":1403,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000955",{"_index":1383,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000970",{"_index":1392,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000992",{"_index":1424,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000995",{"_index":1462,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001004",{"_index":1421,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001222",{"_index":1455,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001223",{"_index":1454,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001255",{"_index":1459,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001264",{"_index":1429,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001270",{"_index":1433,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001302",{"_index":1400,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001303",{"_index":1399,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001465",{"_index":1411,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002048",{"_index":1420,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002049",{"_index":1468,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002097",{"_index":1380,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002106",{"_index":1447,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002107",{"_index":1416,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002108",{"_index":1441,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002113",{"_index":1406,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002367",{"_index":1436,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002370",{"_index":1450,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002509",{"_index":1388,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0003889",{"_index":1398,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004537",{"_index":1467,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004538",{"_index":1407,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004539",{"_index":1408,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004548",{"_index":1393,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":743,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["httpclientmodule",{"_index":1063,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["https://beta",{"_index":2576,"title":{},"body":{"index.html":{}}}],["https://ccf",{"_index":2588,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":2581,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":2580,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":2583,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":2578,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":2367,"title":{},"body":{"changelog.html":{}}}],["https://www.youtube.com/iframe_api",{"_index":1114,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["hubmap",{"_index":2038,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["hubmaptoken",{"_index":91,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["i1[0",{"_index":664,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["i2",{"_index":663,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["i2[0",{"_index":665,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["icon",{"_index":987,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["icons",{"_index":1340,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["id",{"_index":268,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["idb",{"_index":2508,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":1690,"title":{},"body":{"components/TextSearchComponent.html":{},"coverage.html":{}}}],["iec",{"_index":2245,"title":{},"body":{"changelog.html":{}}}],["iframe",{"_index":1155,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["ignore",{"_index":920,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["ignored",{"_index":1202,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["igoogleanalyticscommand",{"_index":37,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["igoogleanalyticssettings",{"_index":965,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["image",{"_index":2238,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":2288,"title":{},"body":{"changelog.html":{}}}],["immutable",{"_index":827,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["immutablepatchvalue",{"_index":819,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["immutablestatevalue",{"_index":822,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["impl",{"_index":373,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["impl[method",{"_index":507,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["implementation",{"_index":2029,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":2199,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":2332,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":178,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["implied",{"_index":954,"title":{},"body":{"injectables/GlobalsService.html":{},"license.html":{}}}],["import",{"_index":33,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["important",{"_index":1341,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["imports",{"_index":71,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}}}],["improve",{"_index":1760,"title":{},"body":{"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["improved",{"_index":1987,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":1946,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":2065,"title":{},"body":{"changelog.html":{}}}],["in\\'}}opt",{"_index":1784,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["include",{"_index":1267,"title":{},"body":{"directives/NumberDirective.html":{},"changelog.html":{}}}],["included",{"_index":2638,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2376,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":2037,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["inclusive",{"_index":536,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["increase",{"_index":2223,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":2327,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":85,"title":{"index.html":{}},"body":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexing",{"_index":539,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["indiana",{"_index":2602,"title":{},"body":{"index.html":{}}}],["indicating",{"_index":543,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["indices",{"_index":2564,"title":{},"body":{"miscellaneous/functions.html":{}}}],["indicies",{"_index":534,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["individual",{"_index":2205,"title":{},"body":{"changelog.html":{}}}],["infix",{"_index":1701,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["info",{"_index":13,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["infobuttoncomponent",{"_index":700,"title":{"components/InfoButtonComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["infobuttonmodule",{"_index":1053,"title":{"modules/InfoButtonModule.html":{}},"body":{"modules/InfoButtonModule.html":{},"modules.html":{},"overview.html":{}}}],["infobuttonservice",{"_index":747,"title":{"injectables/InfoButtonService.html":{}},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"coverage.html":{}}}],["infodialogcomponent",{"_index":702,"title":{"components/InfoDialogComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["infodialogdata",{"_index":1086,"title":{"interfaces/InfoDialogData.html":{}},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"coverage.html":{}}}],["infodialogmodule",{"_index":1058,"title":{"modules/InfoDialogModule.html":{}},"body":{"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules.html":{},"overview.html":{}}}],["information",{"_index":986,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{},"index.html":{}}}],["infotitle",{"_index":996,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["infrastructure",{"_index":2291,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":2255,"title":{},"body":{"changelog.html":{}}}],["inherited",{"_index":391,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["init",{"_index":1098,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["initalvalue",{"_index":1272,"title":{},"body":{"directives/NumberDirective.html":{}}}],["initalvalue.replace(/[^0",{"_index":1274,"title":{},"body":{"directives/NumberDirective.html":{}}}],["initcommands",{"_index":2386,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["initcommands(options",{"_index":66,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["initial",{"_index":2134,"title":{},"body":{"changelog.html":{}}}],["initial_telemetry_setting",{"_index":1801,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialization",{"_index":1884,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["initialized",{"_index":1860,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["inject",{"_index":278,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["inject(default_max_options",{"_index":343,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["inject(document",{"_index":1250,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["inject(local_storage_consent_key",{"_index":1199,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["inject(mat_dialog_data",{"_index":1099,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["inject(mat_snack_bar_data",{"_index":1742,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["inject(ngx_google_analytics_settings_token",{"_index":976,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["inject(ngx_window",{"_index":975,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["injectable",{"_index":93,"title":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["injectables",{"_index":231,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"overview.html":{}}}],["injected",{"_index":1091,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["injectiontoken",{"_index":279,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/LocalStorageSyncService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('key",{"_index":1194,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":1173,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["injector.get(token",{"_index":1183,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["injectordelegatedatasourceservice",{"_index":1169,"title":{"injectables/InjectorDelegateDataSourceService.html":{}},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"coverage.html":{}}}],["innermap",{"_index":2397,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["innermap(project",{"_index":2558,"title":{},"body":{"miscellaneous/functions.html":{}}}],["input",{"_index":280,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["input[ccfnumbersonly",{"_index":719,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["inputs",{"_index":573,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["inside",{"_index":741,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["instance",{"_index":340,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["instead",{"_index":2128,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":2069,"title":{},"body":{"changelog.html":{}}}],["integer",{"_index":1257,"title":{},"body":{"directives/NumberDirective.html":{}}}],["integrated",{"_index":2163,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":2034,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":2254,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":2181,"title":{},"body":{"changelog.html":{}}}],["interact",{"_index":2147,"title":{},"body":{"changelog.html":{}}}],["interacting",{"_index":856,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["interactions",{"_index":2313,"title":{},"body":{"changelog.html":{}}}],["interactive",{"_index":1861,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["interactive(value",{"_index":1863,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["interest",{"_index":1569,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["interface",{"_index":47,"title":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":84,"title":{},"body":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":2237,"title":{},"body":{"changelog.html":{}}}],["intestine",{"_index":1439,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["invoked",{"_index":2562,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iobservablecacheconfig",{"_index":128,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["isdevmode",{"_index":407,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["isselected(organ",{"_index":1570,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["issue",{"_index":2219,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":2016,"title":{},"body":{"changelog.html":{}}}],["istanbul",{"_index":919,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["it's",{"_index":2032,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":1303,"title":{},"body":{"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["itemcontainer",{"_index":1485,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemcontainer.nativeelement.style.width",{"_index":1580,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemlist",{"_index":1483,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemlist.nativeelement.offsetwidth",{"_index":1574,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemlist.nativeelement.style.left",{"_index":1541,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["items",{"_index":1331,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["iu",{"_index":2345,"title":{},"body":{"changelog.html":{}}}],["javascript",{"_index":1981,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["json",{"_index":1665,"title":{},"body":{"components/StoreDebugComponent.html":{},"changelog.html":{}}}],["jsonld",{"_index":2511,"title":{},"body":{"dependencies.html":{}}}],["july",{"_index":2312,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":2353,"title":{},"body":{"changelog.html":{}}}],["justify",{"_index":1332,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["k",{"_index":389,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["k1",{"_index":802,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k2",{"_index":804,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k3",{"_index":806,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k4",{"_index":1615,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k5",{"_index":1616,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k6",{"_index":1617,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["key",{"_index":61,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["keyboard",{"_index":2351,"title":{},"body":{"changelog.html":{}}}],["keyof",{"_index":486,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["keys",{"_index":904,"title":{},"body":{"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/typealiases.html":{}}}],["keys.slice(0",{"_index":1621,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["keyval",{"_index":2509,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":1405,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":2642,"title":{},"body":{"license.html":{}}}],["knee",{"_index":1410,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["known",{"_index":2015,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":2248,"title":{},"body":{"changelog.html":{}}}],["kv[0",{"_index":1663,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["kv[1",{"_index":1664,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["kvlist",{"_index":1647,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["kvpair",{"_index":1649,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["l",{"_index":1391,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":269,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{}}}],["labs/data",{"_index":2467,"title":{},"body":{"dependencies.html":{}}}],["labs/data/decorators",{"_index":832,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["labs/data/repositories",{"_index":833,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["labs/data/typings",{"_index":834,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["landmarks",{"_index":2053,"title":{},"body":{"changelog.html":{}}}],["large",{"_index":1443,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["larger",{"_index":1975,"title":{},"body":{"changelog.html":{}}}],["last",{"_index":652,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["lastindex",{"_index":638,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["later",{"_index":578,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["latest",{"_index":326,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"index.html":{}}}],["launchinfodialog",{"_index":994,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["launchinfodialog(data",{"_index":1008,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["layers",{"_index":2455,"title":{},"body":{"dependencies.html":{}}}],["ld",{"_index":2264,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":2218,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":2048,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":1130,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["left/right",{"_index":2062,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":693,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["length",{"_index":541,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["level",{"_index":2349,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["levels",{"_index":2362,"title":{},"body":{"changelog.html":{}}}],["lhs",{"_index":1605,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["liability",{"_index":2654,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2651,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":1979,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":2189,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":2608,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":2043,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":2623,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2296,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":950,"title":{},"body":{"injectables/GlobalsService.html":{},"components/InfoDialogComponent.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{}}}],["link",{"_index":2055,"title":{},"body":{"changelog.html":{}}}],["linkage",{"_index":2314,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":2115,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":2013,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":1490,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{},"changelog.html":{}}}],["listeners",{"_index":1637,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["listens",{"_index":1265,"title":{},"body":{"directives/NumberDirective.html":{}}}],["listlength",{"_index":1577,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["listlength}px",{"_index":1581,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["literal",{"_index":2526,"title":{},"body":{"dependencies.html":{}}}],["little",{"_index":2145,"title":{},"body":{"changelog.html":{}}}],["liver",{"_index":1415,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":1095,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["loadconsent",{"_index":1185,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["loaded",{"_index":2315,"title":{},"body":{"changelog.html":{}}}],["loaders.gl/core",{"_index":2459,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/draco",{"_index":2461,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":2462,"title":{},"body":{"dependencies.html":{}}}],["local",{"_index":44,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["local_storage_allow_telemetry_key",{"_index":1800,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["local_storage_consent_key",{"_index":1193,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localstorage",{"_index":1198,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["localstorage.getitem(local_storage_allow_telemetry_key",{"_index":1803,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["localstorage.setitem(local_storage_allow_telemetry_key",{"_index":1806,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["localstoragesyncservice",{"_index":9,"title":{"injectables/LocalStorageSyncService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["locate",{"_index":862,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["location",{"_index":2224,"title":{},"body":{"changelog.html":{}}}],["location.reload",{"_index":1813,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["locations",{"_index":866,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["lodash",{"_index":2513,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1758,"title":{},"body":{"components/TrackingPopupComponent.html":{},"index.html":{}}}],["logging",{"_index":1972,"title":{},"body":{"changelog.html":{}}}],["long",{"_index":892,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["longer",{"_index":2126,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":737,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"changelog.html":{}}}],["low",{"_index":166,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["lru",{"_index":2515,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":2463,"title":{},"body":{"dependencies.html":{}}}],["lung",{"_index":1418,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["lungs",{"_index":1419,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["lymph",{"_index":1386,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["made",{"_index":2247,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":1944,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":1553,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["makedecoratedsegment",{"_index":569,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["makedecoratedsegment(text",{"_index":598,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["makes",{"_index":1973,"title":{},"body":{"changelog.html":{}}}],["makeundecoratedsegment",{"_index":570,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["makeundecoratedsegment(text",{"_index":601,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["making",{"_index":2025,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":148,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["managed",{"_index":1643,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["manager",{"_index":385,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["manager.database",{"_index":428,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["manager.database.connect(config",{"_index":434,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["managers",{"_index":1985,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":115,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"modules/MousePositionTrackerModule.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["map(config",{"_index":1180,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["map(data",{"_index":229,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["map(entry",{"_index":667,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["map(formatdata",{"_index":1238,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["map(manager",{"_index":427,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["map(range",{"_index":683,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["map(token",{"_index":1182,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["map.ts",{"_index":2396,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapping",{"_index":2561,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maps",{"_index":2559,"title":{},"body":{"miscellaneous/functions.html":{}}}],["march",{"_index":2192,"title":{},"body":{"changelog.html":{}}}],["margin",{"_index":1133,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["margin.x",{"_index":1894,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["margin.y",{"_index":1897,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["markdown",{"_index":754,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"dependencies.html":{}}}],["markdowncontent",{"_index":750,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["markdowncontent.push",{"_index":775,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["markdownmodule",{"_index":1165,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["markdownmodule.forroot",{"_index":1168,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["markers",{"_index":1722,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["mat",{"_index":1127,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["mat_dialog_data",{"_index":1105,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["mat_snack_bar_data",{"_index":1746,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["matautocompletemodule",{"_index":1713,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["matbuttonmodule",{"_index":1790,"title":{},"body":{"modules/TrackingPopupModule.html":{}}}],["match",{"_index":1366,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["matching",{"_index":82,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":999,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["matdialogmodule",{"_index":1162,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["matdialogref",{"_index":1085,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["matexpansionmodule",{"_index":1163,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["matformfieldmodule",{"_index":1715,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["math.floor(carouselcontainer.nativeelement.offsetwidth",{"_index":1578,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["math.gl/core",{"_index":95,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"dependencies.html":{}}}],["math.gl/culling",{"_index":2465,"title":{},"body":{"dependencies.html":{}}}],["math.log2((height",{"_index":1896,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["math.log2((width",{"_index":1893,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["math.min",{"_index":1892,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["maticonmodule",{"_index":1060,"title":{},"body":{"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{}}}],["matinputmodule",{"_index":1717,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["matprefix",{"_index":1708,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["matripplemodule",{"_index":1351,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["matrix4",{"_index":94,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["matrix4(node.transformmatrix",{"_index":174,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["matslidermodule",{"_index":1349,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["matsuffix",{"_index":1709,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["mattooltipmodule",{"_index":1592,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["max",{"_index":170,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/InfoDialogComponent.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["maxcachecount",{"_index":158,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":293,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["maxoptions",{"_index":323,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["maxrotationx",{"_index":1905,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["mc",{"_index":2344,"title":{},"body":{"changelog.html":{}}}],["member",{"_index":1753,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["memory",{"_index":2217,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":2273,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":2644,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2625,"title":{},"body":{"license.html":{}}}],["message",{"_index":1526,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["metadata",{"_index":562,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["method",{"_index":216,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["method(requestparams",{"_index":228,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["methods",{"_index":19,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["min",{"_index":168,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/InfoDialogComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["minmax",{"_index":106,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["minor",{"_index":1551,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["minrotationx",{"_index":1903,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["miscellaneous",{"_index":2542,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2609,"title":{},"body":{"license.html":{}}}],["mixed",{"_index":1555,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["mock",{"_index":2340,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":1028,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["mode",{"_index":432,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["model",{"_index":1106,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"dependencies.html":{}}}],["models",{"_index":1826,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["modify",{"_index":676,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"license.html":{}}}],["module",{"_index":0,"title":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":32,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["monorepo",{"_index":2568,"title":{},"body":{"index.html":{}}}],["more",{"_index":2269,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mount",{"_index":1878,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["mouseevent",{"_index":1226,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mousemove",{"_index":1241,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mousemove').pipe",{"_index":1236,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mousepositiontrackermodule",{"_index":1214,"title":{"modules/MousePositionTrackerModule.html":{}},"body":{"modules/MousePositionTrackerModule.html":{},"modules.html":{}}}],["moved",{"_index":2357,"title":{},"body":{"changelog.html":{}}}],["moves",{"_index":1504,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["much",{"_index":928,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["multi",{"_index":73,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["multiple",{"_index":1486,"title":{},"body":{"interfaces/OrganInfo.html":{},"index.html":{}}}],["multiselect",{"_index":1488,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["n3",{"_index":2516,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":27,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":2095,"title":{},"body":{"changelog.html":{}}}],["navigation",{"_index":2352,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":2196,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":2200,"title":{},"body":{"changelog.html":{}}}],["negative",{"_index":533,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["nested",{"_index":2556,"title":{},"body":{"miscellaneous/functions.html":{}}}],["network",{"_index":2600,"title":{},"body":{"index.html":{}}}],["new",{"_index":154,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["newopacity",{"_index":1313,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["next",{"_index":921,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["ng",{"_index":1125,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["ng5",{"_index":2518,"title":{},"body":{"dependencies.html":{}}}],["ngafterviewinit",{"_index":1516,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["ngmodule",{"_index":35,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}}}],["ngonchanges",{"_index":571,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["ngonchanges(changes",{"_index":604,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["ngondestroy",{"_index":451,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["ngoninit",{"_index":1083,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{}}}],["ngx",{"_index":39,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"dependencies.html":{}}}],["ngx_google_analytics_settings_token",{"_index":973,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["ngx_window",{"_index":974,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["ngxgoogleanalyticsmodule",{"_index":38,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["ngxgoogleanalyticsmodule.forroot",{"_index":79,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["ngxs",{"_index":831,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"dependencies.html":{}}}],["ngxs/logger",{"_index":2469,"title":{},"body":{"dependencies.html":{}}}],["ngxs/storage",{"_index":2472,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":836,"title":{},"body":{"injectables/GlobalConfigState.html":{},"components/StoreDebugComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"dependencies.html":{}}}],["ngxsimmutabledatarepository",{"_index":793,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["nih",{"_index":2605,"title":{},"body":{"index.html":{}}}],["node",{"_index":172,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":935,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["nodeclick",{"_index":1857,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodeclickevent",{"_index":1822,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodedrag",{"_index":1856,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodedragevent",{"_index":1823,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodehoverstart",{"_index":1858,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodehoverstop",{"_index":1859,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodejs",{"_index":1556,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["nodes",{"_index":1385,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["none",{"_index":1339,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["noninfringement",{"_index":2648,"title":{},"body":{"license.html":{}}}],["nonnullable",{"_index":880,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{}}}],["nonnullable[0",{"_index":129,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["normal",{"_index":1573,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["normalize",{"_index":619,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalize(range",{"_index":684,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["normalized",{"_index":596,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["normalizes",{"_index":538,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["note",{"_index":671,"title":{},"body":{"components/DecoratedTextComponent.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["notice",{"_index":2220,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":1976,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":63,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/functions.html":{}}}],["nulls.ts",{"_index":2391,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":165,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["numberdirective",{"_index":718,"title":{"directives/NumberDirective.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["numbers",{"_index":1268,"title":{},"body":{"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{}}}],["numbersonlymodule",{"_index":1277,"title":{"modules/NumbersOnlyModule.html":{}},"body":{"modules/NumbersOnlyModule.html":{},"modules.html":{},"overview.html":{}}}],["numeric",{"_index":2225,"title":{},"body":{"changelog.html":{}}}],["obj",{"_index":859,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/functions.html":{}}}],["obj[key",{"_index":914,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["object",{"_index":544,"title":{},"body":{"interfaces/DecoratedRange.html":{},"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["object.defineproperties(this",{"_index":909,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["object.entries(obj).reduce>((attrs",{"_index":60,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["object.entries(ops",{"_index":661,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["object.entries(this.root",{"_index":1651,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["object.entries(values",{"_index":1654,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["object.keys(config).length",{"_index":422,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["objects",{"_index":682,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["obs",{"_index":850,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["observable",{"_index":112,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"components/InfoButtonComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["observable).pipe",{"_index":337,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["observableinput",{"_index":286,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"components/TextSearchComponent.html":{}}}],["observedvalueof",{"_index":485,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["obtaining",{"_index":2618,"title":{},"body":{"license.html":{}}}],["occured",{"_index":1524,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["occurencedata",{"_index":1513,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["occurencedata(value",{"_index":1511,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["off/on",{"_index":2198,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":2311,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":2582,"title":{},"body":{"index.html":{}}}],["oldvalue",{"_index":1805,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["onchanges",{"_index":561,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["ondestroy",{"_index":462,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["ondialogbuttonclick",{"_index":995,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["one",{"_index":941,"title":{},"body":{"injectables/GlobalsService.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{},"index.html":{}}}],["oninit",{"_index":1076,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{}}}],["oninputchange",{"_index":1258,"title":{},"body":{"directives/NumberDirective.html":{}}}],["oninputchange(event",{"_index":1269,"title":{},"body":{"directives/NumberDirective.html":{}}}],["onleft",{"_index":1498,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["online",{"_index":2320,"title":{},"body":{"changelog.html":{}}}],["only.directive",{"_index":1282,"title":{},"body":{"modules/NumbersOnlyModule.html":{}}}],["only.directive.ts",{"_index":1255,"title":{},"body":{"directives/NumberDirective.html":{},"coverage.html":{}}}],["only.directive.ts:23",{"_index":1264,"title":{},"body":{"directives/NumberDirective.html":{}}}],["only.directive.ts:9",{"_index":1262,"title":{},"body":{"directives/NumberDirective.html":{}}}],["only.module.ts",{"_index":1281,"title":{},"body":{"modules/NumbersOnlyModule.html":{}}}],["only/numbers",{"_index":1254,"title":{},"body":{"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"coverage.html":{}}}],["onright",{"_index":1499,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["ontological",{"_index":2372,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":2266,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":1961,"title":{},"body":{"changelog.html":{}}}],["ontologyterms",{"_index":143,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["ontologytreemodel",{"_index":98,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["op",{"_index":611,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["op.index",{"_index":651,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["op.removed.includes(item",{"_index":670,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["opacities",{"_index":2204,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":705,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["opacitychange",{"_index":1297,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["opacityreset",{"_index":1298,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["opacityslidercomponent",{"_index":704,"title":{"components/OpacitySliderComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["opacityslidermodule",{"_index":1343,"title":{"modules/OpacitySliderModule.html":{}},"body":{"modules/OpacitySliderModule.html":{},"modules.html":{},"overview.html":{}}}],["openapi",{"_index":2027,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/angular",{"_index":109,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["openapi/js",{"_index":2593,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":2595,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":2594,"title":{},"body":{"index.html":{}}}],["opens",{"_index":1010,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["operation",{"_index":614,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["operations",{"_index":590,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["operator",{"_index":1598,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["operatorfunction",{"_index":1604,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["ops",{"_index":656,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["ops[index",{"_index":658,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["opt",{"_index":1737,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["optimization",{"_index":2144,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":2303,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":2180,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":331,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["optional",{"_index":29,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optioncache",{"_index":794,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["optiondisplay",{"_index":1674,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["optiondisplay(option",{"_index":1686,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["optionid",{"_index":1675,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["optionid(_index",{"_index":1688,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["options",{"_index":30,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.gatoken",{"_index":80,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["optionselected",{"_index":333,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["opts",{"_index":1613,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["ordered",{"_index":588,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["organ",{"_index":708,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["organ(s",{"_index":1560,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["organ.disabled",{"_index":1474,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["organinfo",{"_index":1353,"title":{"interfaces/OrganInfo.html":{}},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organiri",{"_index":214,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["organlist",{"_index":1491,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["organs",{"_index":1367,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["organs/anatomical",{"_index":2206,"title":{},"body":{"changelog.html":{}}}],["organschanged",{"_index":1495,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["organselectorcomponent",{"_index":707,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["organselectormodule",{"_index":1586,"title":{"modules/OrganSelectorModule.html":{}},"body":{"modules/OrganSelectorModule.html":{},"modules.html":{},"overview.html":{}}}],["orthographic",{"_index":2108,"title":{},"body":{"changelog.html":{}}}],["ot2od026671",{"_index":2607,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":912,"title":{},"body":{"injectables/GlobalsService.html":{},"interfaces/OrganInfo.html":{},"license.html":{}}}],["out",{"_index":12,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"license.html":{},"overview.html":{}}}],["outdated",{"_index":932,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["outline",{"_index":1700,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["output",{"_index":281,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["outputs",{"_index":1296,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["ovary",{"_index":1423,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["over",{"_index":2232,"title":{},"body":{"changelog.html":{}}}],["overlapping",{"_index":577,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["overlay",{"_index":1075,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["overlays",{"_index":2363,"title":{},"body":{"changelog.html":{}}}],["overridden",{"_index":863,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["overview",{"_index":2663,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":132,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["package",{"_index":1984,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["padding",{"_index":1039,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["pages",{"_index":2067,"title":{},"body":{"changelog.html":{}}}],["pair",{"_index":1648,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["paired",{"_index":1368,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["pairs",{"_index":1646,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["pancreas",{"_index":1428,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":2169,"title":{},"body":{"changelog.html":{}}}],["panel",{"_index":736,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["panelclass",{"_index":1027,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["panels",{"_index":766,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["param",{"_index":341,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":131,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["parent",{"_index":2060,"title":{},"body":{"changelog.html":{}}}],["parse",{"_index":764,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["parseint(itemlist.nativeelement.style.left",{"_index":1537,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["parseint(newopacity",{"_index":1325,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["parsemarkdown",{"_index":1065,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["parsemarkdown(data",{"_index":769,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["parser",{"_index":2478,"title":{},"body":{"dependencies.html":{}}}],["partial",{"_index":270,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{}}}],["partials",{"_index":680,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["particular",{"_index":2646,"title":{},"body":{"license.html":{}}}],["partly",{"_index":2191,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":2122,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":1531,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["patchconfig",{"_index":798,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["patchconfig(config",{"_index":818,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["path",{"_index":811,"title":{},"body":{"injectables/GlobalConfigState.html":{},"dependencies.html":{}}}],["path.length}:${path.join",{"_index":853,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["pelvis",{"_index":1432,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["performance",{"_index":1988,"title":{},"body":{"changelog.html":{}}}],["performs",{"_index":1881,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["permission",{"_index":2612,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2632,"title":{},"body":{"license.html":{}}}],["person",{"_index":2617,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2633,"title":{},"body":{"license.html":{}}}],["piece",{"_index":621,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["pipe",{"_index":222,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["placeholder",{"_index":316,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["placement",{"_index":2268,"title":{},"body":{"changelog.html":{}}}],["places",{"_index":934,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["player",{"_index":1097,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"dependencies.html":{}}}],["pluck",{"_index":840,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["pluck(...(path",{"_index":851,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["pluck(...keys",{"_index":1623,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["pluck(...path",{"_index":846,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["pluckunique",{"_index":1597,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pluckunique(...props",{"_index":1618,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["pluckunique(k1",{"_index":1614,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["pluckuniqueoptions",{"_index":1594,"title":{"interfaces/PluckUniqueOptions.html":{}},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["plugin",{"_index":2470,"title":{},"body":{"dependencies.html":{}}}],["pointer",{"_index":1044,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["points",{"_index":1232,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["points.join('_",{"_index":1233,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["policy",{"_index":945,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["popup",{"_index":716,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["popup.component",{"_index":1792,"title":{},"body":{"modules/TrackingPopupModule.html":{}}}],["popup.component.html",{"_index":1727,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.scss",{"_index":1726,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts",{"_index":1725,"title":{},"body":{"components/TrackingPopupComponent.html":{},"coverage.html":{}}}],["popup.component.ts:13",{"_index":1734,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:15",{"_index":1745,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:19",{"_index":1733,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:22",{"_index":1743,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:26",{"_index":1735,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:31",{"_index":1740,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:36",{"_index":1738,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.module.ts",{"_index":1789,"title":{},"body":{"modules/TrackingPopupModule.html":{}}}],["popup/tracking",{"_index":1724,"title":{},"body":{"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"coverage.html":{}}}],["portal",{"_index":2039,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["portal's",{"_index":2295,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":2640,"title":{},"body":{"license.html":{}}}],["position",{"_index":1153,"title":{},"body":{"components/InfoDialogComponent.html":{},"modules/MousePositionTrackerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["positive",{"_index":546,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["possible",{"_index":2249,"title":{},"body":{"changelog.html":{}}}],["precedence",{"_index":580,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["preferences",{"_index":2092,"title":{},"body":{"changelog.html":{}}}],["prefix/suffix",{"_index":1721,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["preparation",{"_index":2346,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":2361,"title":{},"body":{"changelog.html":{}}}],["pretty",{"_index":927,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["prevent",{"_index":1957,"title":{},"body":{"changelog.html":{}}}],["prevents",{"_index":1530,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["preview",{"_index":2105,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":2211,"title":{},"body":{"changelog.html":{}}}],["previously",{"_index":2017,"title":{},"body":{"changelog.html":{}}}],["prevopacity",{"_index":1291,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["private",{"_index":180,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["process",{"_index":2331,"title":{},"body":{"changelog.html":{}}}],["processed",{"_index":2286,"title":{},"body":{"changelog.html":{}}}],["processing",{"_index":749,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"changelog.html":{}}}],["produces",{"_index":2563,"title":{},"body":{"miscellaneous/functions.html":{}}}],["production",{"_index":1997,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":1978,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":989,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["projectname",{"_index":51,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["projects",{"_index":2569,"title":{},"body":{"index.html":{}}}],["projects/.../analytics.module.ts",{"_index":2548,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../api",{"_index":2544,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../consent.service.ts",{"_index":2667,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../data",{"_index":2668,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../decorated",{"_index":2550,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../filter",{"_index":2545,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../flatten.ts",{"_index":2546,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../globals.service.ts",{"_index":2669,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../info",{"_index":2674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../inner",{"_index":2549,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../local",{"_index":2675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../mouse",{"_index":2552,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../organ",{"_index":2672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../pluck",{"_index":2551,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../public",{"_index":2676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../store",{"_index":2670,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../text",{"_index":2673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../tracking.state.ts",{"_index":2547,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/ccf",{"_index":16,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":351,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["properly",{"_index":1245,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["properties",{"_index":86,"title":{},"body":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["propertykey",{"_index":816,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["props",{"_index":1612,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["props[props.length",{"_index":1619,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["prostate",{"_index":1435,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["protected",{"_index":375,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["provide",{"_index":72,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/GlobalsService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":346,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":175,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":18,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{}}}],["providertoken",{"_index":1178,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["providing",{"_index":324,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["public",{"_index":1079,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["publish",{"_index":2626,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":1982,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":2647,"title":{},"body":{"license.html":{}}}],["push",{"_index":643,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["pushed",{"_index":2159,"title":{},"body":{"changelog.html":{}}}],["px",{"_index":1506,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["pxratio",{"_index":1890,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["python",{"_index":1980,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["qs",{"_index":2523,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":2299,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":2042,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":1374,"title":{},"body":{"interfaces/OrganInfo.html":{},"dependencies.html":{}}}],["query",{"_index":2370,"title":{},"body":{"changelog.html":{}}}],["quickly",{"_index":2279,"title":{},"body":{"changelog.html":{}}}],["r",{"_index":810,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["radius",{"_index":1037,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["range",{"_index":164,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["range.classes",{"_index":550,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["range.start",{"_index":687,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["range.styles",{"_index":551,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["range.ts",{"_index":524,"title":{},"body":{"interfaces/DecoratedRange.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["range[0",{"_index":169,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["range[1",{"_index":171,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["ranges",{"_index":560,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["rangetominmax",{"_index":163,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rangetominmax(range",{"_index":2553,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rawspatialscenenode",{"_index":108,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["rawvalue",{"_index":1207,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["rawvalue.trim().tolowercase",{"_index":1209,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["rc.1",{"_index":2305,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":2525,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":2451,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":2474,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":2527,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":1712,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["read",{"_index":753,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/XYZTriplet.html":{}}}],["readable",{"_index":2529,"title":{},"body":{"dependencies.html":{}}}],["reading",{"_index":768,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["readmarkdown",{"_index":758,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["readonly",{"_index":181,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["reads",{"_index":1017,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["real",{"_index":2319,"title":{},"body":{"changelog.html":{}}}],["really",{"_index":922,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["recalculate",{"_index":607,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["receives",{"_index":325,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["record",{"_index":58,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/functions.html":{}}}],["recreatebodyui",{"_index":1928,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rectify",{"_index":2023,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":2149,"title":{},"body":{"changelog.html":{}}}],["reduction",{"_index":1948,"title":{},"body":{"changelog.html":{}}}],["reexport",{"_index":620,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"modules/TextSearchModule.html":{}}}],["reference",{"_index":1001,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["refernced",{"_index":2059,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":1330,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["regions",{"_index":2364,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":2488,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":2018,"title":{},"body":{"changelog.html":{}}}],["registration",{"_index":2050,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["registrations",{"_index":2138,"title":{},"body":{"changelog.html":{}}}],["regular",{"_index":1557,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["related",{"_index":2184,"title":{},"body":{"changelog.html":{}}}],["relative",{"_index":1154,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["release",{"_index":2012,"title":{},"body":{"changelog.html":{}}}],["releaseproxy",{"_index":409,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["reliability",{"_index":2222,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":2101,"title":{},"body":{"changelog.html":{}}}],["remote",{"_index":410,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["remoteapiendpoint",{"_index":92,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["removable",{"_index":917,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["remove",{"_index":626,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["remove(key",{"_index":894,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["removed",{"_index":627,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["removes",{"_index":896,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["render",{"_index":1900,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rendering",{"_index":1875,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["replaced",{"_index":2565,"title":{},"body":{"miscellaneous/functions.html":{}}}],["replaysubject",{"_index":463,"title":{},"body":{"injectables/ConsentService.html":{}}}],["replaysubject(1",{"_index":461,"title":{},"body":{"injectables/ConsentService.html":{}}}],["repository",{"_index":2567,"title":{},"body":{"index.html":{}}}],["represents",{"_index":623,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["requestmethod",{"_index":130,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/typealiases.html":{}}}],["requestparams",{"_index":218,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["requestparams['token",{"_index":227,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["required",{"_index":1883,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["rescinded",{"_index":465,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/typealiases.html":{}}}],["reset",{"_index":11,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"overview.html":{}}}],["resetopacity",{"_index":1293,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["resets",{"_index":2123,"title":{},"body":{"changelog.html":{}}}],["resetting",{"_index":1308,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["resize",{"_index":1515,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resizesensor",{"_index":1372,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resizesensor(carouselcontainer.nativeelement",{"_index":1518,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resizing",{"_index":1509,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resolve",{"_index":542,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["resolved",{"_index":618,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["resolveindex",{"_index":2406,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["resolveindex(index",{"_index":547,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["resolveindex(range.end",{"_index":549,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["resolveindex(range.start",{"_index":548,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["resolves",{"_index":537,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["respond",{"_index":2120,"title":{},"body":{"changelog.html":{}}}],["responsetype",{"_index":760,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["responsively",{"_index":1582,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["rest",{"_index":504,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["restricting",{"_index":1256,"title":{},"body":{"directives/NumberDirective.html":{}}}],["restriction",{"_index":2622,"title":{},"body":{"license.html":{}}}],["result",{"_index":81,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.concat(range.classes",{"_index":688,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["results",{"_index":83,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":59,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":31,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["reviver",{"_index":217,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["reviver(data",{"_index":230,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["rgb",{"_index":2506,"title":{},"body":{"dependencies.html":{}}}],["rgba(0",{"_index":1772,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["rgba(255",{"_index":1763,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["rhs",{"_index":1606,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["right",{"_index":1137,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["rights",{"_index":2624,"title":{},"body":{"license.html":{}}}],["root",{"_index":176,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["rotates",{"_index":2103,"title":{},"body":{"changelog.html":{}}}],["rotation",{"_index":1834,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotation(value",{"_index":1836,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotationchange",{"_index":1855,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotationx",{"_index":1838,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotationx(value",{"_index":1840,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["round",{"_index":2209,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":2226,"title":{},"body":{"changelog.html":{}}}],["ru/common",{"_index":2437,"title":{},"body":{"dependencies.html":{}}}],["ru/common/typings",{"_index":829,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["rui",{"_index":1006,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["rui_locations.jsonld",{"_index":1971,"title":{},"body":{"changelog.html":{}}}],["running",{"_index":931,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["rxjs",{"_index":114,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/PluckUniqueOptions.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":119,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["s.unsubscribe",{"_index":1933,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["safe",{"_index":675,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["same",{"_index":295,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["sample",{"_index":2375,"title":{},"body":{"changelog.html":{}}}],["samples",{"_index":2151,"title":{},"body":{"changelog.html":{}}}],["saveconsent",{"_index":1186,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["saveconsent(value",{"_index":1190,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["saver",{"_index":2494,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":2336,"title":{},"body":{"changelog.html":{}}}],["scene",{"_index":1830,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["scene(nodes",{"_index":1832,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["scheduled",{"_index":2164,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":2338,"title":{},"body":{"changelog.html":{}}}],["schemes",{"_index":2300,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":2601,"title":{},"body":{"index.html":{}}}],["screen",{"_index":1074,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["scroll(dir",{"_index":1544,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["scrolled",{"_index":1534,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["scrolling",{"_index":1500,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["scrolls",{"_index":1529,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["search",{"_index":301,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["search'},{'name",{"_index":713,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["search.component",{"_index":1720,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["search.component.html",{"_index":307,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["search.component.scss",{"_index":309,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["search.component.ts",{"_index":261,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["search.component.ts:100",{"_index":1677,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:120",{"_index":1685,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:139",{"_index":1687,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:150",{"_index":1689,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:48",{"_index":1684,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:53",{"_index":1680,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:59",{"_index":1681,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:63",{"_index":1697,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:70",{"_index":1679,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:76",{"_index":1678,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:81",{"_index":1683,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:86",{"_index":1682,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:91",{"_index":1693,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:96",{"_index":1694,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.module.ts",{"_index":1710,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["search/text",{"_index":260,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["section",{"_index":2139,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":944,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["see",{"_index":2076,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["segment",{"_index":585,"title":{"interfaces/Segment.html":{}},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{}}}],["segment.text",{"_index":690,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["segments",{"_index":565,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["segments.push(this.makedecoratedsegment",{"_index":649,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["select",{"_index":2081,"title":{},"body":{"changelog.html":{}}}],["selected",{"_index":332,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["selectedorgan",{"_index":1566,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selectedorgans",{"_index":1493,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selecting",{"_index":1476,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["selections",{"_index":1487,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selector",{"_index":305,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["selector'},{'name",{"_index":709,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["selector.component",{"_index":1591,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["selector.component.html",{"_index":1478,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selector.component.scss",{"_index":1479,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selector.component.ts",{"_index":1356,"title":{},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector.module.ts",{"_index":1590,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["selector/organ",{"_index":1355,"title":{},"body":{"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectorgan(organ",{"_index":1561,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selects",{"_index":2354,"title":{},"body":{"changelog.html":{}}}],["selecttoken",{"_index":1172,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["selecttoken(config",{"_index":1175,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["self",{"_index":938,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["sell",{"_index":2630,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":2360,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":748,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["sennet",{"_index":1992,"title":{},"body":{"changelog.html":{}}}],["sensor",{"_index":1510,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["sent",{"_index":767,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["server",{"_index":2341,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":1003,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["set",{"_index":68,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/ConsentService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["set(key",{"_index":897,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["setallowtelemetry",{"_index":1795,"title":{},"body":{"injectables/TrackingState.html":{}}}],["setallowtelemetry(allowtelemetry",{"_index":1796,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["setconfig",{"_index":799,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["setconfig(config",{"_index":821,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["setconsent",{"_index":452,"title":{},"body":{"injectables/ConsentService.html":{}}}],["setconsent(value",{"_index":457,"title":{},"body":{"injectables/ConsentService.html":{}}}],["setinterval",{"_index":1546,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["setleftright(val",{"_index":1585,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["sets",{"_index":899,"title":{},"body":{"injectables/GlobalsService.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{}}}],["settimeout",{"_index":1120,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["setting",{"_index":1287,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["settings",{"_index":947,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["setup",{"_index":1882,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["setupbodyui",{"_index":1901,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["setvalue(val",{"_index":1696,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["setwidth",{"_index":1583,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["sex",{"_index":145,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["sexes",{"_index":1363,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["shadow",{"_index":1768,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["shall",{"_index":2637,"title":{},"body":{"license.html":{}}}],["shared",{"_index":2096,"title":{},"body":{"changelog.html":{}}}],["shared/analytics",{"_index":1748,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["shared/analytics/src/lib/analytics.module.ts",{"_index":17,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["shared/analytics/src/lib/analytics.module.ts:68",{"_index":25,"title":{},"body":{"modules/AnalyticsModule.html":{}}}],["shared/analytics/src/lib/consent.service.ts",{"_index":448,"title":{},"body":{"injectables/ConsentService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["shared/analytics/src/lib/consent.service.ts:10",{"_index":460,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:12",{"_index":454,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:18",{"_index":455,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:22",{"_index":458,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:29",{"_index":459,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/google",{"_index":960,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"coverage.html":{}}}],["shared/analytics/src/lib/local",{"_index":1184,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/rxjs",{"_index":838,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/analytics/mouse",{"_index":1215,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["shared/src/lib/analytics/tracking.state.ts",{"_index":1794,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/analytics/tracking.state.ts:29",{"_index":1798,"title":{},"body":{"injectables/TrackingState.html":{}}}],["shared/src/lib/components/body",{"_index":359,"title":{},"body":{"modules/BodyUiModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["shared/src/lib/components/decorated",{"_index":523,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["shared/src/lib/components/info/info",{"_index":729,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/components/opacity",{"_index":1283,"title":{},"body":{"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"coverage.html":{}}}],["shared/src/lib/components/organ",{"_index":1354,"title":{},"body":{"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/components/store",{"_index":1625,"title":{},"body":{"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["shared/src/lib/components/text",{"_index":259,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/components/tracking",{"_index":1723,"title":{},"body":{"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"coverage.html":{}}}],["shared/src/lib/config/global",{"_index":791,"title":{},"body":{"injectables/GlobalConfigState.html":{},"coverage.html":{}}}],["shared/src/lib/directives/numbers",{"_index":1253,"title":{},"body":{"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"coverage.html":{}}}],["shared/src/lib/services/data",{"_index":88,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/services/globals/globals.service.ts",{"_index":855,"title":{},"body":{"injectables/GlobalsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:109",{"_index":860,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:22",{"_index":903,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:45",{"_index":886,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:58",{"_index":875,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:59",{"_index":879,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:60",{"_index":882,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:61",{"_index":883,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:63",{"_index":884,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:76",{"_index":898,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:77",{"_index":900,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:79",{"_index":901,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:93",{"_index":895,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["sharereplay",{"_index":415,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["sharereplay(1",{"_index":429,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["shifing",{"_index":644,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["shift",{"_index":1505,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["shift(dir",{"_index":1535,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["shortest",{"_index":2501,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":265,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["showbutton",{"_index":1729,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["showbutton(button",{"_index":1736,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["showing",{"_index":2285,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":2294,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":2045,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":1361,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["sides",{"_index":2259,"title":{},"body":{"changelog.html":{}}}],["signal",{"_index":1317,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["significant",{"_index":2125,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":1628,"title":{},"body":{"components/StoreDebugComponent.html":{},"changelog.html":{}}}],["simplechanges",{"_index":605,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["simplifies",{"_index":2133,"title":{},"body":{"changelog.html":{}}}],["simultaneously",{"_index":322,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["single",{"_index":263,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["sites",{"_index":2052,"title":{},"body":{"changelog.html":{}}}],["sizable",{"_index":2221,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":1048,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{}}}],["skin",{"_index":1379,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["slider",{"_index":1286,"title":{},"body":{"components/OpacitySliderComponent.html":{},"dependencies.html":{}}}],["slider'},{'name",{"_index":706,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["slider.component",{"_index":1348,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["slider.component.html",{"_index":1290,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.scss",{"_index":1289,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts",{"_index":1285,"title":{},"body":{"components/OpacitySliderComponent.html":{},"coverage.html":{}}}],["slider.component.ts:17",{"_index":1310,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:22",{"_index":1301,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:27",{"_index":1302,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:32",{"_index":1304,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:37",{"_index":1309,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:42",{"_index":1306,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:44",{"_index":1321,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:46",{"_index":1314,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:54",{"_index":1315,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:63",{"_index":1312,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:71",{"_index":1318,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:82",{"_index":1316,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.module.ts",{"_index":1347,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["slider/opacity",{"_index":1284,"title":{},"body":{"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"coverage.html":{}}}],["slightly",{"_index":2021,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":2146,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":1440,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["smaller",{"_index":1572,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["software",{"_index":2571,"title":{},"body":{"index.html":{},"license.html":{}}}],["solved",{"_index":2216,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":2277,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":1986,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":2142,"title":{},"body":{"changelog.html":{}}}],["sort",{"_index":666,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["sort((a",{"_index":1469,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["sort((i1",{"_index":662,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["source",{"_index":14,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["source.pipe",{"_index":1622,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["source.service.ts",{"_index":510,"title":{},"body":{"injectables/DataSourceService.html":{},"coverage.html":{}}}],["source.service.ts:12",{"_index":514,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:13",{"_index":518,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:14",{"_index":515,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:15",{"_index":517,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:16",{"_index":513,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:17",{"_index":519,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:19",{"_index":522,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:20",{"_index":511,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:21",{"_index":516,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:22",{"_index":512,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:23",{"_index":521,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:24",{"_index":520,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.ts",{"_index":472,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["source.ts:10",{"_index":480,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:11",{"_index":477,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:12",{"_index":479,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:13",{"_index":475,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:14",{"_index":481,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:16",{"_index":484,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:17",{"_index":473,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:18",{"_index":478,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:19",{"_index":474,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:20",{"_index":483,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:21",{"_index":482,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:36",{"_index":782,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:40",{"_index":786,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:44",{"_index":783,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:48",{"_index":785,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:52",{"_index":781,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:56",{"_index":787,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:60",{"_index":790,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:64",{"_index":779,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:68",{"_index":784,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:72",{"_index":780,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:76",{"_index":789,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:80",{"_index":788,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:84",{"_index":778,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:9",{"_index":476,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:91",{"_index":727,"title":{},"body":{"classes/DelegateDataSource.html":{}}}],["source/api",{"_index":89,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["source/ccf",{"_index":369,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["source/data",{"_index":471,"title":{},"body":{"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["source/injector",{"_index":1170,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"coverage.html":{}}}],["sources",{"_index":2086,"title":{},"body":{"changelog.html":{}}}],["space",{"_index":1333,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["sparc",{"_index":2137,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":2450,"title":{},"body":{"dependencies.html":{}}}],["spatial",{"_index":150,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["spatialentity",{"_index":99,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["spatialscenenode",{"_index":100,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["spatialscenenodereviver",{"_index":211,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spatialscenenodereviver(nodes",{"_index":2554,"title":{},"body":{"miscellaneous/functions.html":{}}}],["spatialsearch",{"_index":107,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["spec",{"_index":2028,"title":{},"body":{"changelog.html":{}}}],["spec.yaml",{"_index":2592,"title":{},"body":{"index.html":{}}}],["specific",{"_index":889,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["specification",{"_index":2591,"title":{},"body":{"index.html":{}}}],["specified",{"_index":525,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["speed",{"_index":1945,"title":{},"body":{"changelog.html":{}}}],["spinning",{"_index":2339,"title":{},"body":{"changelog.html":{}}}],["spleen",{"_index":1446,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["split",{"_index":755,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["split.length",{"_index":772,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["split.split('\\n\\n",{"_index":774,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["splitbyheadertag",{"_index":770,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["sprint",{"_index":2167,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":1362,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":589,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stackop",{"_index":592,"title":{"interfaces/StackOp.html":{}},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{}}}],["stackops",{"_index":636,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stackops.shift",{"_index":647,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stackops[0].index",{"_index":645,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stage",{"_index":1827,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["staging",{"_index":1998,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["staging.herokuapp.com",{"_index":2590,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":2212,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":2263,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":2343,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":2574,"title":{},"body":{"index.html":{}}}],["start",{"_index":530,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["started",{"_index":1935,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["starts",{"_index":640,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["startup",{"_index":2132,"title":{},"body":{"changelog.html":{}}}],["startwith",{"_index":288,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["state",{"_index":835,"title":{},"body":{"injectables/GlobalConfigState.html":{},"components/StoreDebugComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["state[0",{"_index":1662,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["statement",{"_index":674,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["statements",{"_index":2384,"title":{},"body":{"coverage.html":{}}}],["staterepository",{"_index":830,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["states",{"_index":1650,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["states.map(([key",{"_index":1653,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["stateswithdata",{"_index":1655,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["statevalues",{"_index":1652,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["statevalues.filter(([_key",{"_index":1656,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["static",{"_index":20,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/OrganInfo.html":{}}}],["stay",{"_index":2381,"title":{},"body":{"changelog.html":{}}}],["step",{"_index":1507,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["still",{"_index":2154,"title":{},"body":{"changelog.html":{}}}],["stops",{"_index":1549,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["stopscroll",{"_index":1550,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["storage",{"_index":45,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":711,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["store.subscribe(root",{"_index":1658,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["stored",{"_index":1196,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["storedebugcomponent",{"_index":710,"title":{"components/StoreDebugComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["storedebugmodule",{"_index":1667,"title":{"modules/StoreDebugModule.html":{}},"body":{"modules/StoreDebugModule.html":{},"modules.html":{},"overview.html":{}}}],["stories",{"_index":2334,"title":{},"body":{"changelog.html":{}}}],["stream",{"_index":2530,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["streaming",{"_index":2528,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":49,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":732,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["structures",{"_index":2170,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":527,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":308,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["styling",{"_index":271,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["sub",{"_index":1052,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/StoreDebugComponent.html":{}}}],["subclass",{"_index":864,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["subject",{"_index":113,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/InfoButtonService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["sublicense",{"_index":2628,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1730,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["submit(entry",{"_index":1739,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["subscribe((data",{"_index":761,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["subscription",{"_index":971,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["subscriptions",{"_index":962,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["substantial",{"_index":2639,"title":{},"body":{"license.html":{}}}],["subtitle",{"_index":1140,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["suffix",{"_index":1702,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["suggestion",{"_index":264,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["suggestions",{"_index":294,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":417,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["support",{"_index":1954,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":1359,"title":{},"body":{"interfaces/OrganInfo.html":{},"modules.html":{}}}],["swiper",{"_index":2534,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":1210,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["switched",{"_index":2229,"title":{},"body":{"changelog.html":{}}}],["switchmap",{"_index":116,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["switchmap(config",{"_index":424,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["switchmap(impl",{"_index":506,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["switchmap(this.getoptions",{"_index":338,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["symbol",{"_index":905,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{}}}],["sync",{"_index":2104,"title":{},"body":{"changelog.html":{}}}],["sync.service",{"_index":43,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["sync.service.ts",{"_index":961,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sync.service.ts:10",{"_index":972,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:11",{"_index":966,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:15",{"_index":1192,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:16",{"_index":1187,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:25",{"_index":967,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:29",{"_index":969,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:32",{"_index":1189,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:36",{"_index":1188,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:52",{"_index":1191,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["t",{"_index":134,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":2436,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":2010,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2435,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1111,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["tag.src",{"_index":1113,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["tagging",{"_index":2261,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":757,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["take",{"_index":117,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["take(1",{"_index":223,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["takes",{"_index":579,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["tap",{"_index":118,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["tap(([endpoint",{"_index":224,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["target",{"_index":1845,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["target(value",{"_index":1847,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["technologies",{"_index":149,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{}}}],["technology",{"_index":2202,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":1810,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"changelog.html":{}}}],["temp",{"_index":1327,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["template",{"_index":554,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["templateurl",{"_index":306,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["test",{"_index":924,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["testing",{"_index":872,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["tests",{"_index":887,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["text",{"_index":300,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{}}}],["text'},{'name",{"_index":699,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["text.component",{"_index":726,"title":{},"body":{"modules/DecoratedTextModule.html":{}}}],["text.component.html",{"_index":564,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text.component.scss",{"_index":563,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text.component.ts",{"_index":557,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{}}}],["text.component.ts:124",{"_index":587,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:145",{"_index":612,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:158",{"_index":593,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:173",{"_index":602,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:184",{"_index":599,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:41",{"_index":582,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:46",{"_index":581,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:52",{"_index":575,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:57",{"_index":616,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:64",{"_index":606,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:76",{"_index":583,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.length",{"_index":655,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text.module",{"_index":1719,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["text.module.ts",{"_index":725,"title":{},"body":{"modules/DecoratedTextModule.html":{}}}],["text.slice(lastindex",{"_index":650,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text/decorated",{"_index":291,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["textsearchcomponent",{"_index":312,"title":{"components/TextSearchComponent.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["textsearchmodule",{"_index":1703,"title":{"modules/TextSearchModule.html":{}},"body":{"modules/TextSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["theme",{"_index":1993,"title":{},"body":{"changelog.html":{}}}],["themes",{"_index":1991,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":1989,"title":{},"body":{"changelog.html":{}}}],["thick",{"_index":1464,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["this._bounds",{"_index":1849,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._camera",{"_index":1853,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._interactive",{"_index":1862,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._occurencedata",{"_index":1512,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this._rotation",{"_index":1835,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._rotationx",{"_index":1839,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._scene",{"_index":1831,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._target",{"_index":1846,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._zoom",{"_index":1842,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.api.aggregateresults(params",{"_index":204,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.celltypetermoccurences(params",{"_index":208,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.celltypetreemodel(params",{"_index":197,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.dbstatus(params",{"_index":187,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.ontologytermoccurences(params",{"_index":206,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.ontologytreemodel(params",{"_index":195,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.providernames(params",{"_index":190,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.referenceorgans(params",{"_index":199,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.referenceorganscene(params",{"_index":213,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.scene(params",{"_index":210,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.technologynames(params",{"_index":192,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.tissueblocks(params",{"_index":202,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.bodycanvas",{"_index":1888,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodycanvas.nativeelement",{"_index":1889,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui",{"_index":1864,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.finalize",{"_index":1930,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodeclick$.subscribe((event",{"_index":1921,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodedrag$.subscribe((event",{"_index":1919,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodehoverstart$.subscribe((event",{"_index":1923,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodehoverstop$.subscribe((event",{"_index":1925,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.scenerotation$.subscribe((rotation",{"_index":1917,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.setscene(this.scene",{"_index":1913,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setrotation(value",{"_index":1837,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setrotationx(value",{"_index":1841,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setscene(nodes",{"_index":1833,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.settarget(value",{"_index":1848,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setzoom(value",{"_index":1844,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bounds",{"_index":1914,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.camera",{"_index":1907,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.clearsubscriptions",{"_index":1929,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.config$.pipe",{"_index":845,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.connectdatabase(manager",{"_index":426,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.consent",{"_index":468,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.complete",{"_index":467,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.next(this.consent",{"_index":466,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.next(value",{"_index":469,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentservice.consent",{"_index":1749,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.consentservice.setconsent(entry",{"_index":1756,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.container",{"_index":1750,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.controller.setvalue(val",{"_index":319,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.controller.value",{"_index":317,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.controller.valuechanges",{"_index":336,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.createdatabase(config",{"_index":425,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.createsegments",{"_index":629,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.createstackops(decorations",{"_index":637,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.createworker(config",{"_index":441,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.ctx.patchstate",{"_index":1808,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["this.data.preclose",{"_index":1755,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.database",{"_index":419,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.defaultmaxoptions",{"_index":352,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.dialog.open(infodialogcomponent",{"_index":1025,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.dialogref.close",{"_index":1121,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.dismiss",{"_index":1757,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.displayerrors",{"_index":1527,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.documentationcontents",{"_index":1107,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.dorequest",{"_index":194,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.dorequest(params",{"_index":186,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.el.nativeelement.value",{"_index":1273,"title":{},"body":{"directives/NumberDirective.html":{}}}],["this.findglobalobject",{"_index":908,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["this.forwardcall('getaggregateresults",{"_index":498,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getcelltypetermoccurences",{"_index":500,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getcelltypetreemodel",{"_index":495,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getdatabasestatus",{"_index":491,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getdatasettechnologynames",{"_index":493,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getontologytermoccurences",{"_index":499,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getontologytreemodel",{"_index":494,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getprovidernames",{"_index":492,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getreferenceorgans",{"_index":496,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getreferenceorganscene",{"_index":502,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getscene",{"_index":501,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('gettissueblockresults",{"_index":497,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.getnormalizeddecorations",{"_index":633,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.getpathkey(path",{"_index":847,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.http.get(documentationurl",{"_index":759,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["this.impl",{"_index":418,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.impl$.pipe",{"_index":505,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.infobuttonservice.readmarkdown",{"_index":1034,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.infotitle",{"_index":1032,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.initialized.emit",{"_index":1927,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.interactive",{"_index":1906,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.launchinfodialog(data",{"_index":1024,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.makeundecoratedsegment(text",{"_index":632,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.markdowncontent.next(markdowncontent",{"_index":763,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["this.multiselect",{"_index":1562,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.nodeclick.emit(event",{"_index":1922,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.nodedrag.emit(event",{"_index":1920,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.nodehoverstart.emit(event",{"_index":1924,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.nodehoverstop.emit(event",{"_index":1926,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.onleft",{"_index":1538,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.onright",{"_index":1539,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.opacity",{"_index":1324,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.opacitychange.emit(this.opacity",{"_index":1326,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.opacityreset.emit",{"_index":1329,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.optioncache.get(key",{"_index":849,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.optioncache.has(key",{"_index":848,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.optioncache.set(key",{"_index":852,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.organlist.length",{"_index":1575,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.organschanged.emit(this.selectedorgans",{"_index":1568,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.parsemarkdown(data",{"_index":762,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["this.patchstate(config",{"_index":844,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.prevopacity",{"_index":1323,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.recreatebodyui",{"_index":1865,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.root",{"_index":1659,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["this.rotationchange.next(rotation",{"_index":1918,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.saveconsent(consent",{"_index":1206,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.scene?.length",{"_index":1912,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.segments",{"_index":628,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.selectedorgans",{"_index":1563,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.concat([organ",{"_index":1567,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.filter((selectedorgan",{"_index":1565,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.includes(organ",{"_index":1564,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.length",{"_index":1528,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selecttoken(config",{"_index":1181,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["this.sensor",{"_index":1517,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.sensor.detach",{"_index":1521,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.set",{"_index":1519,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.setconsent('not",{"_index":470,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.setleftright(val",{"_index":1542,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.setstate(config",{"_index":843,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.setupbodyui",{"_index":1885,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.shift(dir",{"_index":1547,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.state$.pipe(filternulls",{"_index":842,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.step",{"_index":1540,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.storage",{"_index":1200,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.storage?.getitem?.(this.key",{"_index":1208,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.storage?.setitem?.(this.key",{"_index":1213,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.subscriptions",{"_index":1916,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.subscriptions.add",{"_index":1204,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.subscriptions.add(consentservice.consentchange.subscribe",{"_index":979,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.subscriptions.add(infobuttonservice.markdowncontent.subscribe(data",{"_index":1022,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.subscriptions.add(sub",{"_index":1661,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["this.subscriptions.foreach(s",{"_index":1932,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.subscriptions.unsubscribe",{"_index":981,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"components/StoreDebugComponent.html":{}}}],["this.timeouthandler",{"_index":1545,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.togglegoogleanalytics(consent",{"_index":980,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.token",{"_index":978,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.updatestack(stack",{"_index":646,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.valuechange",{"_index":344,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.videoid",{"_index":1033,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.visibilitytoggle.emit",{"_index":1328,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.visible",{"_index":1322,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.window",{"_index":982,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.window[`ga",{"_index":983,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.zoom",{"_index":1899,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.zoomtobounds(this.bounds",{"_index":1915,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.zoomtobounds(value",{"_index":1851,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["throttletime",{"_index":1220,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["throttletime(1000",{"_index":1237,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["through",{"_index":2278,"title":{},"body":{"changelog.html":{}}}],["throws",{"_index":915,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["thumbnails",{"_index":2179,"title":{},"body":{"changelog.html":{}}}],["thymus",{"_index":1449,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["tied",{"_index":2182,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":2287,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":296,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["timeouthandler",{"_index":1502,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["timeouts",{"_index":1958,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":1949,"title":{},"body":{"changelog.html":{}}}],["tissue",{"_index":1966,"title":{},"body":{"changelog.html":{}}}],["tissueblockresult",{"_index":101,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["tissues",{"_index":2019,"title":{},"body":{"changelog.html":{}}}],["title",{"_index":740,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["tmc",{"_index":2371,"title":{},"body":{"changelog.html":{}}}],["toattributes",{"_index":70,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["toattributes(obj",{"_index":57,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["toggle",{"_index":1319,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["togglegoogleanalytics",{"_index":963,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["togglegoogleanalytics(disabled",{"_index":968,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["togglevisibility",{"_index":1294,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["token",{"_index":137,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":2213,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":1141,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["tort",{"_index":2657,"title":{},"body":{"license.html":{}}}],["tracker.module.ts",{"_index":1216,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tracking",{"_index":715,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["tracking/telemetry",{"_index":2114,"title":{},"body":{"changelog.html":{}}}],["trackingcode",{"_index":977,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["trackingpopupcomponent",{"_index":714,"title":{"components/TrackingPopupComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"coverage.html":{},"overview.html":{}}}],["trackingpopupmodule",{"_index":1785,"title":{"modules/TrackingPopupModule.html":{}},"body":{"modules/TrackingPopupModule.html":{},"modules.html":{},"overview.html":{}}}],["trackingstate",{"_index":1793,"title":{"injectables/TrackingState.html":{}},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{}}}],["trackingstatemodel",{"_index":1799,"title":{"interfaces/TrackingStateModel.html":{}},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{}}}],["trackmouseposition",{"_index":2401,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["trackmouseposition((document",{"_index":1251,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["trackmouseposition(el",{"_index":1221,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["transformmatrix",{"_index":173,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["transition",{"_index":1041,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["transparency",{"_index":2214,"title":{},"body":{"changelog.html":{}}}],["travisci",{"_index":2233,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":556,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["true",{"_index":74,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GlobalsService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":940,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{},"changelog.html":{}}}],["ts",{"_index":121,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"dependencies.html":{}}}],["tslib",{"_index":2537,"title":{},"body":{"dependencies.html":{}}}],["tube",{"_index":1396,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["tuned",{"_index":2382,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":679,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["turned",{"_index":2185,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":2183,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":2083,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":2298,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":28,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2665,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":1244,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["typeerror",{"_index":916,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["typeof",{"_index":906,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/PluckUniqueOptions.html":{}}}],["types",{"_index":1249,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["types/lru",{"_index":2475,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":952,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":2350,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":1558,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["u",{"_index":135,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["uberon",{"_index":1364,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["ufl",{"_index":2178,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":1824,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["ui'},{'name",{"_index":698,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["ui.component",{"_index":367,"title":{},"body":{"modules/BodyUiModule.html":{}}}],["ui.component.html",{"_index":1828,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["ui.component.scss",{"_index":1829,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["ui.component.ts",{"_index":1818,"title":{},"body":{"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["ui.module.ts",{"_index":361,"title":{},"body":{"modules/BodyUiModule.html":{}}}],["ui.netlify.app",{"_index":2577,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":2587,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":2584,"title":{},"body":{"index.html":{}}}],["ui/body",{"_index":360,"title":{},"body":{"modules/BodyUiModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["ui/organ",{"_index":2586,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":2585,"title":{},"body":{"index.html":{}}}],["ul",{"_index":1146,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["undefined",{"_index":76,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/OrganInfo.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1195,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["understand",{"_index":1761,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["unique",{"_index":272,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["unique.ts",{"_index":1596,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["university",{"_index":2603,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":162,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["unless",{"_index":930,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["unnecessary",{"_index":2100,"title":{},"body":{"changelog.html":{}}}],["unsafe",{"_index":1752,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["unselect",{"_index":2148,"title":{},"body":{"changelog.html":{}}}],["unsetconsent",{"_index":453,"title":{},"body":{"injectables/ConsentService.html":{}}}],["unsubscribable",{"_index":413,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["unsubscribe",{"_index":437,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/InfoButtonComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["until",{"_index":2187,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":1692,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["up",{"_index":1636,"title":{},"body":{"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["update",{"_index":2093,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":1305,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["updates",{"_index":1266,"title":{},"body":{"directives/NumberDirective.html":{},"changelog.html":{}}}],["updatestack",{"_index":572,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["updatestack(stack",{"_index":610,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["upgraded",{"_index":2283,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":2355,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":2119,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":2210,"title":{},"body":{"changelog.html":{}}}],["ureter",{"_index":1452,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["urinary",{"_index":1457,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":1358,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["usage",{"_index":1759,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["use",{"_index":2080,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["used",{"_index":545,"title":{},"body":{"interfaces/DecoratedRange.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["usefactory",{"_index":75,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["useful",{"_index":870,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["user",{"_index":1939,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["user/os",{"_index":2091,"title":{},"body":{"changelog.html":{}}}],["users",{"_index":2366,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":2107,"title":{},"body":{"changelog.html":{}}}],["using",{"_index":414,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["uterus",{"_index":1461,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["utilities",{"_index":2097,"title":{},"body":{"changelog.html":{}}}],["utility",{"_index":160,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["uuid",{"_index":2538,"title":{},"body":{"dependencies.html":{}}}],["v1.1",{"_index":2011,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":2197,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":2014,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":2004,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":1962,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":1536,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{}}}],["valid",{"_index":595,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["value",{"_index":62,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/ConsentService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value(val",{"_index":318,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["value.tolowercase",{"_index":1804,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["valuechange",{"_index":330,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["values",{"_index":69,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/DecoratedTextComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/functions.html":{}}}],["values.length",{"_index":1657,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["var",{"_index":696,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["variable",{"_index":1149,"title":{},"body":{"components/InfoDialogComponent.html":{},"coverage.html":{}}}],["variables",{"_index":2671,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vasculature",{"_index":1466,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":2030,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["vertical",{"_index":1050,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["very",{"_index":2274,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":1956,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":1152,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["videoid",{"_index":997,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["view",{"_index":2106,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":1371,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["viewchild('bodycanvas",{"_index":1879,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["viewchild('carouselcontainer",{"_index":1480,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewchild('itemcontainer",{"_index":1484,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewchild('itemlist",{"_index":1482,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewed",{"_index":1477,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewer",{"_index":2172,"title":{},"body":{"changelog.html":{}}}],["views",{"_index":2109,"title":{},"body":{"changelog.html":{}}}],["visibility",{"_index":1320,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["visibilitytoggle",{"_index":1299,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["visible",{"_index":1295,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["visual",{"_index":2378,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":2140,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":2284,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":456,"title":{},"body":{"injectables/ConsentService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["vs",{"_index":2079,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":2377,"title":{},"body":{"changelog.html":{}}}],["warming",{"_index":1955,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":2308,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":2643,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2641,"title":{},"body":{"license.html":{}}}],["web",{"_index":939,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["webcomponent",{"_index":2078,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":2476,"title":{},"body":{"dependencies.html":{}}}],["webpages",{"_index":2036,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":2572,"title":{},"body":{"index.html":{}}}],["week",{"_index":2383,"title":{},"body":{"changelog.html":{}}}],["weight",{"_index":1144,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["well",{"_index":1610,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["whether",{"_index":888,"title":{},"body":{"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"license.html":{}}}],["whole",{"_index":2380,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":1030,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["window",{"_index":936,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/XYZTriplet.html":{}}}],["window.devicepixelratio",{"_index":1891,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["within",{"_index":2176,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":603,"title":{},"body":{"components/DecoratedTextComponent.html":{},"changelog.html":{},"license.html":{}}}],["worker",{"_index":440,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/GlobalsService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["worker.terminate",{"_index":444,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["workerccfdatabasedatasourceservice",{"_index":438,"title":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["workflows",{"_index":2235,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":2022,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":2253,"title":{},"body":{"changelog.html":{}}}],["wrap",{"_index":411,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["wrap(worker",{"_index":442,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["wrapper",{"_index":1035,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["writable",{"_index":911,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["x",{"_index":1819,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["xyztriplet",{"_index":1817,"title":{"interfaces/XYZTriplet.html":{}},"body":{"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["y",{"_index":1820,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["yes",{"_index":242,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["youtube",{"_index":1096,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["youtubeplayermodule",{"_index":1166,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["z",{"_index":1779,"title":{},"body":{"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["zero",{"_index":641,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["zone.js",{"_index":2540,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":10,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"interfaces/XYZTriplet.html":{},"overview.html":{}}}],["zoom(value",{"_index":1843,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["zoomtobounds(bounds",{"_index":1886,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AnalyticsModule.html":{"url":"modules/AnalyticsModule.html","title":"module - AnalyticsModule","body":"\n                   \n\n\n\n\n    Modules\n    AnalyticsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AnalyticsModule\n\n\n\ncluster_AnalyticsModule_providers\n\n\n\n\nConsentService\n\nConsentService\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAnalyticsModule -->\n\nConsentService->AnalyticsModule\n\n\n\n\n\nGoogleAnalyticsSyncService\n\nGoogleAnalyticsSyncService\n\nAnalyticsModule -->\n\nGoogleAnalyticsSyncService->AnalyticsModule\n\n\n\n\n\nLocalStorageSyncService\n\nLocalStorageSyncService\n\nAnalyticsModule -->\n\nLocalStorageSyncService->AnalyticsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/analytics.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConsentService\n                        \n                        \n                            GoogleAnalyticsSyncService\n                        \n                        \n                            LocalStorageSyncService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: AnalyticsOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/analytics.module.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AnalyticsOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { IGoogleAnalyticsCommand, NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\nimport { ConsentService } from './consent.service';\nimport { GoogleAnalyticsSyncService } from './google-analytics-sync.service';\nimport { LocalStorageSyncService } from './local-storage-sync.service';\n\n\nexport interface AnalyticsOptions {\n  gaToken: string;\n\n  appName?: string;\n  projectName?: string;\n\n  developmentMode?: boolean;\n}\n\n\nconst EAGERLY_LOADED_SERVICES = [\n  ConsentService,\n  GoogleAnalyticsSyncService,\n  LocalStorageSyncService,\n];\n\n\nfunction toAttributes(obj: Record): Record {\n  return Object.entries(obj).reduce>((attrs, [key, value]) => {\n    if (value != null) {\n      attrs[key] = `${value}`;\n    }\n\n    return attrs;\n  }, {});\n}\n\nfunction initCommands(options: AnalyticsOptions): IGoogleAnalyticsCommand[] {\n  const { appName, projectName, developmentMode } = options;\n\n  return [\n    {\n      command: 'set',\n      values: [toAttributes({\n        appName,\n        projectName,\n        developmentMode\n      })]\n    }\n  ];\n}\n\n\n@NgModule({\n  imports: [\n    NgxGoogleAnalyticsModule\n  ],\n  providers: [\n    ...EAGERLY_LOADED_SERVICES,\n\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: () => () => undefined,\n      deps: EAGERLY_LOADED_SERVICES\n    }\n  ]\n})\nexport class AnalyticsModule {\n  static forRoot(options: AnalyticsOptions): ModuleWithProviders {\n    const { providers = [] } = NgxGoogleAnalyticsModule.forRoot(\n      options.gaToken,\n      initCommands(options)\n    );\n\n    return { ngModule: AnalyticsModule, providers };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnalyticsOptions.html":{"url":"interfaces/AnalyticsOptions.html","title":"interface - AnalyticsOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnalyticsOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/analytics.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            appName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            developmentMode\n                                        \n                                \n                                \n                                        \n                                            gaToken\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            projectName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        developmentMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        developmentMode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gaToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gaToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { IGoogleAnalyticsCommand, NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\nimport { ConsentService } from './consent.service';\nimport { GoogleAnalyticsSyncService } from './google-analytics-sync.service';\nimport { LocalStorageSyncService } from './local-storage-sync.service';\n\n\nexport interface AnalyticsOptions {\n  gaToken: string;\n\n  appName?: string;\n  projectName?: string;\n\n  developmentMode?: boolean;\n}\n\n\nconst EAGERLY_LOADED_SERVICES = [\n  ConsentService,\n  GoogleAnalyticsSyncService,\n  LocalStorageSyncService,\n];\n\n\nfunction toAttributes(obj: Record): Record {\n  return Object.entries(obj).reduce>((attrs, [key, value]) => {\n    if (value != null) {\n      attrs[key] = `${value}`;\n    }\n\n    return attrs;\n  }, {});\n}\n\nfunction initCommands(options: AnalyticsOptions): IGoogleAnalyticsCommand[] {\n  const { appName, projectName, developmentMode } = options;\n\n  return [\n    {\n      command: 'set',\n      values: [toAttributes({\n        appName,\n        projectName,\n        developmentMode\n      })]\n    }\n  ];\n}\n\n\n@NgModule({\n  imports: [\n    NgxGoogleAnalyticsModule\n  ],\n  providers: [\n    ...EAGERLY_LOADED_SERVICES,\n\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: () => () => undefined,\n      deps: EAGERLY_LOADED_SERVICES\n    }\n  ]\n})\nexport class AnalyticsModule {\n  static forRoot(options: AnalyticsOptions): ModuleWithProviders {\n    const { providers = [] } = NgxGoogleAnalyticsModule.forRoot(\n      options.gaToken,\n      initCommands(options)\n    );\n\n    return { ngModule: AnalyticsModule, providers };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiEndpointDataSourceOptions.html":{"url":"interfaces/ApiEndpointDataSourceOptions.html","title":"interface - ApiEndpointDataSourceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiEndpointDataSourceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hubmapToken\n                                        \n                                \n                                \n                                        \n                                            remoteApiEndpoint\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hubmapToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        remoteApiEndpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        remoteApiEndpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSearch, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n  spatial?: SpatialSearch[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return combineLatest([\n      globalConfig.getOption('remoteApiEndpoint'),\n      globalConfig.getOption('hubmapToken')\n    ]).pipe(\n      take(1),\n      tap(([endpoint, token]) => {\n        api.configuration.basePath = endpoint;\n        if (token) {\n          requestParams['token'] = token;\n        }\n      }),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiEndpointDataSourceService.html":{"url":"injectables/ApiEndpointDataSourceService.html","title":"injectable - ApiEndpointDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiEndpointDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                doRequest\n                            \n                            \n                                    Private\n                                doRequest\n                            \n                            \n                                    Private\n                                doRequest\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: DefaultService, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:96\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                    DefaultService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        doRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    doRequest(method: RequestMethod, filter?: Filter | undefined, params?: P)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:190\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                RequestMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter | undefined\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            P\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        doRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    doRequest(method: RequestMethod, filter: Filter | undefined, params: P | undefined, reviver: DataReviver)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:195\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        P\n                        U\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                RequestMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            P | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviver\n                                    \n                                                DataReviver\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        doRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    doRequest(method: RequestMethod, filter: Filter | undefined, params?: P, reviver?: DataReviver)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:201\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                RequestMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            P\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    reviver\n                                    \n                                                DataReviver\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSearch, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n  spatial?: SpatialSearch[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return combineLatest([\n      globalConfig.getOption('remoteApiEndpoint'),\n      globalConfig.getOption('hubmapToken')\n    ]).pipe(\n      take(1),\n      tap(([endpoint, token]) => {\n        api.configuration.basePath = endpoint;\n        if (token) {\n          requestParams['token'] = token;\n        }\n      }),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoCompleteOption.html":{"url":"interfaces/AutoCompleteOption.html","title":"interface - AutoCompleteOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AutoCompleteOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n        \n\n\n            \n                Description\n            \n            \n                A single suggestion to show in autocomplete\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            decorations\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        decorations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decorations:         Partial[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional styling of the label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    A unique id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The displayed label\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Inject, InjectionToken, Input, Output,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { bind as Bind } from 'bind-decorator';\nimport { from, Observable, ObservableInput } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, switchMap, take } from 'rxjs/operators';\n\nimport { DecoratedRange } from '../decorated-text/decorated-range';\n\n\n/** A single suggestion to show in autocomplete  */\nexport interface AutoCompleteOption {\n  /** A unique id */\n  id: unknown;\n  /** The displayed label */\n  label: string;\n  /** Optional styling of the label */\n  decorations?: Partial[];\n}\n\n/**\n * Token to provide a default for the maximum number of\n * autocomplete suggestions to show at the same time.\n */\nexport const DEFAULT_MAX_OPTIONS = new InjectionToken(\n  'Maximum number of autocomplete options displayed',\n  {\n    providedIn: 'root',\n    factory(): number {\n      return 10;\n    }\n  }\n);\n\n\n/**\n * A text search bar with optional autocompletion functionality.\n */\n@Component({\n  selector: 'ccf-text-search',\n  templateUrl: './text-search.component.html',\n  styleUrls: ['./text-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TextSearchComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-text-search';\n\n  /**\n   * Placeholder text for the search bar\n   */\n  @Input() placeholder = 'Search...';\n\n  /**\n   * The text to show on the search bar\n   */\n  @Input()\n  get value(): string {\n    return this.controller.value as string;\n  }\n\n  set value(val: string) {\n    this.controller.setValue(val, { emitEvent: false });\n  }\n\n  /**\n   * Maximum number of autocomplete suggestions to show simultaneously\n   */\n  @Input() maxOptions?: number;\n\n  /**\n   * Function providing the autocomplete suggestions.\n   * Receives the latest search bar text and the maximum of suggestions to provide.\n   */\n  @Input() autoCompleter?: (search: string, max: number) => ObservableInput;\n\n  /**\n   * Emits when the search bar text changes\n   */\n  @Output() readonly valueChange: Observable;\n\n  /**\n   * Emits when an autocomplete option has been selected\n   */\n  @Output() readonly optionSelected = new EventEmitter();\n\n  /**\n   * Form controller for search bar\n   */\n  readonly controller = new FormControl();\n\n  /**\n   * Emits the latest autocomplete suggestions\n   */\n  readonly options = (this.controller.valueChanges as Observable).pipe(\n    startWith(''),\n    distinctUntilChanged(),\n    switchMap(this.getOptions)\n  );\n\n  /**\n   * Creates an instance of text search component.\n   *\n   * @param defaultMaxOptions The default value for `maxOptions`\n   */\n  constructor(\n    @Inject(DEFAULT_MAX_OPTIONS) private readonly defaultMaxOptions: number\n  ) {\n    this.valueChange = this.controller.valueChanges;\n  }\n\n  /**\n   * Fetches the latest autocomplete suggestions for the provided search text.\n   *\n   * @param search The search text to find suggestions for\n   * @returns The found suggestions\n   */\n  @Bind\n  private async getOptions(search: string): Promise {\n    const { autoCompleter, maxOptions = this.defaultMaxOptions } = this;\n    if (!autoCompleter || maxOptions  array.length \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BodyUiModule.html":{"url":"modules/BodyUiModule.html","title":"module - BodyUiModule","body":"\n                   \n\n\n\n\n    Modules\n    BodyUiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BodyUiModule\n\n\n\ncluster_BodyUiModule_exports\n\n\n\ncluster_BodyUiModule_declarations\n\n\n\n\nBodyUiComponent\n\nBodyUiComponent\n\n\n\nBodyUiModule\n\nBodyUiModule\n\nBodyUiModule -->\n\nBodyUiComponent->BodyUiModule\n\n\n\n\n\nBodyUiComponent \n\nBodyUiComponent \n\nBodyUiComponent  -->\n\nBodyUiModule->BodyUiComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/body-ui/body-ui.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BodyUiComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BodyUiComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BodyUiComponent } from './body-ui.component';\n\n@NgModule({\n  declarations: [BodyUiComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [BodyUiComponent]\n})\nexport class BodyUiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CCFDatabaseDataSourceBaseService.html":{"url":"injectables/CCFDatabaseDataSourceBaseService.html","title":"injectable - CCFDatabaseDataSourceBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CCFDatabaseDataSourceBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DelegateDataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                database$\n                            \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                connectDatabase\n                            \n                            \n                                    Protected\n                                    Abstract\n                                createDatabase\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        connectDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectDatabase(manager: CCFDatabaseManager, config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    manager\n                                    \n                                                CCFDatabaseManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        createDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDatabase(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CCFDatabaseManager\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        database$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CCFDatabaseDataSourceService.html":{"url":"injectables/CCFDatabaseDataSourceService.html","title":"injectable - CCFDatabaseDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CCFDatabaseDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CCFDatabaseDataSourceBaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                database$\n                            \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createDatabase\n                            \n                            \n                                    Private\n                                    Async\n                                connectDatabase\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDatabase(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CCFDatabaseManager\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        connectDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectDatabase(manager: CCFDatabaseManager, config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    manager\n                                    \n                                                CCFDatabaseManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        database$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         CCFDatabaseDataSourceBaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         CCFDatabaseDataSourceBaseService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CCFDatabaseManager.html":{"url":"interfaces/CCFDatabaseManager.html","title":"interface - CCFDatabaseManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CCFDatabaseManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Unsubscribable\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            database\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        database:     CCFDatabase | Remote\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CCFDatabase | Remote\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsentService.html":{"url":"injectables/ConsentService.html","title":"injectable - ConsentService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/consent.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                consent\n                            \n                            \n                                    Readonly\n                                consentChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                setConsent\n                            \n                            \n                                unsetConsent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConsent\n                        \n                    \n                \n            \n            \n                \nsetConsent(value: Consent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsetConsent\n                        \n                    \n                \n            \n            \n                \nunsetConsent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        consent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Consent\n\n                    \n                \n                \n                    \n                        Default value : 'not-set'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        consentChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n\nexport type Consent = 'not-set' | 'given' | 'rescinded';\n\n\n@Injectable()\nexport class ConsentService implements OnDestroy {\n  consent: Consent = 'not-set';\n\n  readonly consentChange = new ReplaySubject(1);\n\n  constructor() {\n    this.consentChange.next(this.consent);\n  }\n\n  ngOnDestroy(): void {\n    this.consentChange.complete();\n  }\n\n  setConsent(value: Consent): void {\n    if (this.consent !== value) {\n      this.consent = value;\n      this.consentChange.next(value);\n    }\n  }\n\n  unsetConsent(): void {\n    this.setConsent('not-set');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSource.html":{"url":"interfaces/DataSource.html","title":"interface - DataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getAggregateResults\n                                    \n                                \n                                \n                                    \n                                        getCellTypeTermOccurences\n                                    \n                                \n                                \n                                    \n                                        getCellTypeTreeModel\n                                    \n                                \n                                \n                                    \n                                        getDatabaseStatus\n                                    \n                                \n                                \n                                    \n                                        getDatasetTechnologyNames\n                                    \n                                \n                                \n                                    \n                                        getOntologyTermOccurences\n                                    \n                                \n                                \n                                    \n                                        getOntologyTreeModel\n                                    \n                                \n                                \n                                    \n                                        getProviderNames\n                                    \n                                \n                                \n                                    \n                                        getReferenceOrgans\n                                    \n                                \n                                \n                                    \n                                        getReferenceOrganScene\n                                    \n                                \n                                \n                                    \n                                        getScene\n                                    \n                                \n                                \n                                    \n                                        getTissueBlockResults\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult\n} from 'ccf-database';\nimport { Observable, ObservableInput, ObservedValueOf } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n\nexport interface DataSource {\n  getDatabaseStatus(): Observable;\n  getProviderNames(): Observable;\n  getDatasetTechnologyNames(): Observable;\n  getOntologyTreeModel(): Observable;\n  getCellTypeTreeModel(): Observable;\n  getReferenceOrgans(): Observable;\n\n  getTissueBlockResults(filter?: Filter): Observable;\n  getAggregateResults(filter?: Filter): Observable;\n  getOntologyTermOccurences(filter?: Filter): Observable>;\n  getCellTypeTermOccurences(filter?: Filter): Observable>;\n  getScene(filter?: Filter): Observable;\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\nexport type DataSourceLike = {\n  [K in keyof DataSource]: DataSourceLikeMethod;\n};\n\nexport type DataSourceMethod = DataSource[K];\nexport type DataSourceLikeMethod =\n  (...args: Parameters>) => ObservableInput>;\nexport type DataSourceDataType =\n  ObservedValueOf>>;\n\n\nexport abstract class ForwardingDataSource implements DataSource {\n  getDatabaseStatus(): Observable {\n    return this.forwardCall('getDatabaseStatus');\n  }\n\n  getProviderNames(): Observable {\n    return this.forwardCall('getProviderNames');\n  }\n\n  getDatasetTechnologyNames(): Observable {\n    return this.forwardCall('getDatasetTechnologyNames');\n  }\n\n  getOntologyTreeModel(): Observable {\n    return this.forwardCall('getOntologyTreeModel');\n  }\n\n  getCellTypeTreeModel(): Observable {\n    return this.forwardCall('getCellTypeTreeModel');\n  }\n\n  getReferenceOrgans(): Observable {\n    return this.forwardCall('getReferenceOrgans');\n  }\n\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.forwardCall('getTissueBlockResults', filter);\n  }\n\n  getAggregateResults(filter?: Filter): Observable {\n    return this.forwardCall('getAggregateResults', filter);\n  }\n\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getOntologyTermOccurences', filter);\n  }\n\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getCellTypeTermOccurences', filter);\n  }\n\n  getScene(filter?: Filter): Observable {\n    return this.forwardCall('getScene', filter);\n  }\n\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.forwardCall('getReferenceOrganScene', organIri, filter);\n  }\n\n  protected abstract forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable>;\n}\n\n\nexport abstract class DelegateDataSource extends ForwardingDataSource {\n  abstract readonly impl$: Observable;\n\n  protected forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable> {\n    type AnyFunction = (...rest: unknown[]) => ObservableInput;\n\n    return this.impl$.pipe(\n      switchMap(impl => (impl[method] as AnyFunction)(...args))\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataSourceService.html":{"url":"injectables/DataSourceService.html","title":"injectable - DataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getAggregateResults\n                            \n                            \n                                    Abstract\n                                getCellTypeTermOccurences\n                            \n                            \n                                    Abstract\n                                getCellTypeTreeModel\n                            \n                            \n                                    Abstract\n                                getDatabaseStatus\n                            \n                            \n                                    Abstract\n                                getDatasetTechnologyNames\n                            \n                            \n                                    Abstract\n                                getOntologyTermOccurences\n                            \n                            \n                                    Abstract\n                                getOntologyTreeModel\n                            \n                            \n                                    Abstract\n                                getProviderNames\n                            \n                            \n                                    Abstract\n                                getReferenceOrgans\n                            \n                            \n                                    Abstract\n                                getReferenceOrganScene\n                            \n                            \n                                    Abstract\n                                getScene\n                            \n                            \n                                    Abstract\n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProviderNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getScene\n                        \n                    \n                \n            \n            \n                \n                    \n                    getScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { Observable } from 'rxjs';\n\nimport { DataSource } from './data-source';\n\n\n@Injectable()\nexport abstract class DataSourceService implements DataSource {\n  abstract getDatabaseStatus(): Observable;\n  abstract getProviderNames(): Observable;\n  abstract getDatasetTechnologyNames(): Observable;\n  abstract getOntologyTreeModel(): Observable;\n  abstract getCellTypeTreeModel(): Observable;\n  abstract getReferenceOrgans(): Observable;\n\n  abstract getTissueBlockResults(filter?: Filter): Observable;\n  abstract getAggregateResults(filter?: Filter): Observable;\n  abstract getOntologyTermOccurences(filter?: Filter): Observable>;\n  abstract getCellTypeTermOccurences(filter?: Filter): Observable>;\n  abstract getScene(filter?: Filter): Observable;\n  abstract getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DecoratedRange.html":{"url":"interfaces/DecoratedRange.html","title":"interface - DecoratedRange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DecoratedRange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n        \n\n\n            \n                Description\n            \n            \n                A range which should have the specified classes and styles applied\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            end\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                                \n                                        \n                                            styles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Classes to add\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    End index of range (exclusive). Negative indicies are allowed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start index of range (inclusive). Negative indicies are allowed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        styles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        styles:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Styles to set\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DecoratedRange {\n  /** Start index of range (inclusive). Negative indicies are allowed. */\n  start: number;\n  /** End index of range (exclusive). Negative indicies are allowed. */\n  end: number;\n  /** Classes to add */\n  classes: string[];\n  /** Styles to set */\n  styles: Record;\n}\n\n/**\n * Resolves and normalizes an index for indexing into an array of length `length`.\n *\n * @param index The index value to resolve. May be negative indicating an index from end.\n * @param length The length of the object on which this index will be used.\n * @returns A positive index in range [0, length]\n */\nfunction resolveIndex(index: number, length: number): number {\n  if (index >= 0 && index = length) {\n    return length;\n  } else if (index + length , length: number): DecoratedRange {\n  const start = resolveIndex(range.start ?? 0, length);\n  const end = resolveIndex(range.end ?? length, length);\n  const classes = range.classes ?? [];\n  const styles = range.styles ?? {};\n  return { start, end, classes, styles };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DecoratedTextComponent.html":{"url":"components/DecoratedTextComponent.html","title":"component - DecoratedTextComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DecoratedTextComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n\n\n\n    \n        Description\n    \n    \n        Class to display text with additional styling on ranges of the text.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-decorated-text\n            \n\n            \n                styleUrls\n                ./decorated-text.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./decorated-text.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                segments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createSegments\n                            \n                            \n                                    Private\n                                createStackOps\n                            \n                            \n                                    Private\n                                getNormalizedDecorations\n                            \n                            \n                                    Private\n                                makeDecoratedSegment\n                            \n                            \n                                    Private\n                                makeUndecoratedSegment\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Private\n                                updateStack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                decorations\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        decorations\n                    \n                \n                \n                    \n                        Type :         Partial[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:52\n                            \n                        \n                \n                    \n                        Classes and styles to apply to ranges of the text.\nFor overlapping ranges later values takes precedence.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:46\n                            \n                        \n                \n                    \n                        Text to display\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-decorated-text\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-decorated-text'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:41\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createSegments\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSegments()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:76\n                \n            \n\n\n            \n                \n                    Creates an array of decorated text segments based on\nthe latest text and decorations.\n\n\n                    \n                    \n                    \n                        Returns :         Segment[]\n\n                    \n                    \n                        The new segments\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createStackOps\n                        \n                    \n                \n            \n            \n                \n                    \n                    createStackOps(ranges: DecoratedRange[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:124\n                \n            \n\n\n            \n                \n                    Creates an ordered array of stack operations to apply when building segments.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ranges\n                                    \n                                                DecoratedRange[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The decorated ranges to apply\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         StackOp[]\n\n                    \n                    \n                        The array of operations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getNormalizedDecorations\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNormalizedDecorations()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:158\n                \n            \n\n\n            \n                \n                    Normalizes and filters valid decorated ranges.\n\n\n                    \n                    \n                    \n                        Returns :         DecoratedRange[]\n\n                    \n                    \n                        The normalized ranges with properties filled\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeDecoratedSegment\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeDecoratedSegment(text: string, decorations: DecoratedRange[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:184\n                \n            \n\n\n            \n                \n                    Creates a segment with decoration\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text for the segment\n\n                                    \n                                \n                                \n                                    decorations\n                                    \n                                                DecoratedRange[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Decorations for this segment\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Segment\n\n                    \n                    \n                        A decorated segment\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeUndecoratedSegment\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeUndecoratedSegment(text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:173\n                \n            \n\n\n            \n                \n                    Creates a segment without any decoration\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text for the segment\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Segment\n\n                    \n                    \n                        A segment without any decoration\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:64\n                \n            \n\n\n            \n                \n                    Apply changes and recalculate cached values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Instance properties that have changed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateStack\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStack(stack: DecoratedRange[], op: StackOp)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:145\n                \n            \n\n\n            \n                \n                    Applies the stack changes specified by the stack operation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    stack\n                                    \n                                                DecoratedRange[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current stack\n\n                                    \n                                \n                                \n                                    op\n                                    \n                                                StackOp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The operation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DecoratedRange[]\n\n                    \n                    \n                        The new stack\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-decorated-text'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:41\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        segments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Segment[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:57\n                        \n                    \n\n            \n                \n                    Computed segments of text with decorations resolved.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { DecoratedRange, normalize } from './decorated-range';\n\n\n// Reexport DecoratedRange\nexport { DecoratedRange };\n\n/** A segment of text with additional classes and styles */\ninterface Segment {\n  /** The piece of text to display */\n  text: string;\n  /** Classes to add to the text container */\n  classes: string[];\n  /** Styles to set on the text container */\n  styles: Record;\n}\n\n/** Represents an operation to apply to the stack when building segments */\ninterface StackOp {\n  /** Text index at which the changes takes effect */\n  index: number;\n  /** Decorations to add */\n  added: DecoratedRange[];\n  /** Decorations to remove */\n  removed: DecoratedRange[];\n}\n\n\n/**\n * Class to display text with additional styling on ranges of the text.\n */\n@Component({\n  selector: 'ccf-decorated-text',\n  templateUrl: './decorated-text.component.html',\n  styleUrls: ['./decorated-text.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DecoratedTextComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-decorated-text';\n\n  /**\n   * Text to display\n   */\n  @Input() text: string;\n\n  /**\n   * Classes and styles to apply to ranges of the text.\n   * For overlapping ranges later values takes precedence.\n   */\n  @Input() decorations?: Partial[];\n\n  /**\n   * Computed segments of text with decorations resolved.\n   */\n  segments: Segment[] = [];\n\n  /**\n   * Apply changes and recalculate cached values.\n   *\n   * @param changes Instance properties that have changed\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('text' in changes || 'decorations' in changes) {\n      this.segments = this.createSegments();\n    }\n  }\n\n  /**\n   * Creates an array of decorated text segments based on\n   * the latest text and decorations.\n   *\n   * @returns The new segments\n   */\n  private createSegments(): Segment[] {\n    const { text } = this;\n    if (!text) { // No styling can be applied to empty text fields\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const decorations = this.getNormalizedDecorations();\n    if (decorations.length === 0) { // No styling available\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const stackOps = this.createStackOps(decorations);\n    const segments: Segment[] = [];\n    let stack: DecoratedRange[] = [];\n    let lastIndex = 0;\n\n    // If the first op starts at index zero apply stack changes\n    // but don't push a segment by shifing out the first op\n    if (stackOps[0].index === 0) {\n      stack = this.updateStack(stack, stackOps.shift() as StackOp);\n    }\n\n    // Build segments based on the stack operations\n    for (const op of stackOps) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex, op.index), stack\n      ));\n\n      lastIndex = op.index;\n      stack = this.updateStack(stack, op);\n    }\n\n    // Push the last segment if not already done\n    if (lastIndex !== text.length) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex), stack\n      ));\n    }\n\n    return segments;\n  }\n\n  /**\n   * Creates an ordered array of stack operations to apply when building segments.\n   *\n   * @param ranges The decorated ranges to apply\n   * @returns The array of operations\n   */\n  private createStackOps(ranges: DecoratedRange[]): StackOp[] {\n    const ops: Record = {};\n    const getOp = (index: number) => (ops[index] ??= { index, added: [], removed: [] });\n\n    for (const range of ranges) {\n      getOp(range.start).added.push(range);\n      getOp(range.end).removed.push(range);\n    }\n\n    return Object.entries(ops)\n      .sort((i1, i2) => +i1[0] - +i2[0]) // Sort by index\n      .map(entry => entry[1]);\n  }\n\n  /**\n   * Applies the stack changes specified by the stack operation.\n   *\n   * @param stack The current stack\n   * @param op The operation\n   * @returns The new stack\n   */\n  private updateStack(stack: DecoratedRange[], op: StackOp): DecoratedRange[] {\n    return stack\n      .filter(item => !op.removed.includes(item))\n      // Note - A new array is created by the above filter statement\n      // so it is safe to modify it with concat\n      .concat(op.added);\n  }\n\n  /**\n   * Normalizes and filters valid decorated ranges.\n   *\n   * @returns The normalized ranges with properties filled\n   */\n  private getNormalizedDecorations(): DecoratedRange[] {\n    const { decorations = [], text: { length } } = this;\n    return decorations\n      // Turn partials into full objects\n      .map(range => normalize(range, length))\n      // Remove empty and out of bounds ranges\n      .filter(range => range.start (\n      (result, range) => result.concat(range.classes),\n      []\n    );\n    const styles = decorations.reduce(\n      (result, range) => ({ ...result, ...range.styles }),\n      {}\n    );\n\n    return { text, classes, styles };\n  }\n}\n\n    \n\n    \n        \n  {{ segment.text }}\n\n\n    \n\n    \n                \n                    ./decorated-text.component.scss\n                \n                :host {\n  display: flex;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ segment.text }}'\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'DecoratedTextComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DecoratedTextModule.html":{"url":"modules/DecoratedTextModule.html","title":"module - DecoratedTextModule","body":"\n                   \n\n\n\n\n    Modules\n    DecoratedTextModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DecoratedTextModule\n\n\n\ncluster_DecoratedTextModule_exports\n\n\n\ncluster_DecoratedTextModule_declarations\n\n\n\n\nDecoratedTextComponent\n\nDecoratedTextComponent\n\n\n\nDecoratedTextModule\n\nDecoratedTextModule\n\nDecoratedTextModule -->\n\nDecoratedTextComponent->DecoratedTextModule\n\n\n\n\n\nDecoratedTextComponent \n\nDecoratedTextComponent \n\nDecoratedTextComponent  -->\n\nDecoratedTextModule->DecoratedTextComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-text.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DecoratedTextComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DecoratedTextComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DecoratedTextComponent } from './decorated-text.component';\n\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [DecoratedTextComponent],\n  exports: [DecoratedTextComponent]\n})\nexport class DecoratedTextModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultParams.html":{"url":"interfaces/DefaultParams.html","title":"interface - DefaultParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DefaultParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSearch, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n  spatial?: SpatialSearch[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return combineLatest([\n      globalConfig.getOption('remoteApiEndpoint'),\n      globalConfig.getOption('hubmapToken')\n    ]).pipe(\n      take(1),\n      tap(([endpoint, token]) => {\n        api.configuration.basePath = endpoint;\n        if (token) {\n          requestParams['token'] = token;\n        }\n      }),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DelegateDataSource.html":{"url":"classes/DelegateDataSource.html","title":"class - DelegateDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DelegateDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ForwardingDataSource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:91\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult\n} from 'ccf-database';\nimport { Observable, ObservableInput, ObservedValueOf } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n\nexport interface DataSource {\n  getDatabaseStatus(): Observable;\n  getProviderNames(): Observable;\n  getDatasetTechnologyNames(): Observable;\n  getOntologyTreeModel(): Observable;\n  getCellTypeTreeModel(): Observable;\n  getReferenceOrgans(): Observable;\n\n  getTissueBlockResults(filter?: Filter): Observable;\n  getAggregateResults(filter?: Filter): Observable;\n  getOntologyTermOccurences(filter?: Filter): Observable>;\n  getCellTypeTermOccurences(filter?: Filter): Observable>;\n  getScene(filter?: Filter): Observable;\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\nexport type DataSourceLike = {\n  [K in keyof DataSource]: DataSourceLikeMethod;\n};\n\nexport type DataSourceMethod = DataSource[K];\nexport type DataSourceLikeMethod =\n  (...args: Parameters>) => ObservableInput>;\nexport type DataSourceDataType =\n  ObservedValueOf>>;\n\n\nexport abstract class ForwardingDataSource implements DataSource {\n  getDatabaseStatus(): Observable {\n    return this.forwardCall('getDatabaseStatus');\n  }\n\n  getProviderNames(): Observable {\n    return this.forwardCall('getProviderNames');\n  }\n\n  getDatasetTechnologyNames(): Observable {\n    return this.forwardCall('getDatasetTechnologyNames');\n  }\n\n  getOntologyTreeModel(): Observable {\n    return this.forwardCall('getOntologyTreeModel');\n  }\n\n  getCellTypeTreeModel(): Observable {\n    return this.forwardCall('getCellTypeTreeModel');\n  }\n\n  getReferenceOrgans(): Observable {\n    return this.forwardCall('getReferenceOrgans');\n  }\n\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.forwardCall('getTissueBlockResults', filter);\n  }\n\n  getAggregateResults(filter?: Filter): Observable {\n    return this.forwardCall('getAggregateResults', filter);\n  }\n\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getOntologyTermOccurences', filter);\n  }\n\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getCellTypeTermOccurences', filter);\n  }\n\n  getScene(filter?: Filter): Observable {\n    return this.forwardCall('getScene', filter);\n  }\n\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.forwardCall('getReferenceOrganScene', organIri, filter);\n  }\n\n  protected abstract forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable>;\n}\n\n\nexport abstract class DelegateDataSource extends ForwardingDataSource {\n  abstract readonly impl$: Observable;\n\n  protected forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable> {\n    type AnyFunction = (...rest: unknown[]) => ObservableInput;\n\n    return this.impl$.pipe(\n      switchMap(impl => (impl[method] as AnyFunction)(...args))\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DocumentationContent.html":{"url":"interfaces/DocumentationContent.html","title":"interface - DocumentationContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DocumentationContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The structure to define how each documentation panel\nshould look like in the info dialog\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Content inside the panel\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Title of the panel\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nconst documentationURL = 'assets/docs/README.md';\n\n/**\n * The structure to define how each documentation panel\n * should look like in the info dialog\n */\n\nexport interface DocumentationContent {\n  /** Title of the panel */\n  title: string;\n\n  /** Content inside the panel */\n  content: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfoButtonService {\n\n  /** Subject to send the documentation data to the component when its done processing */\n  markdownContent: BehaviorSubject = new BehaviorSubject([]);\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Read the markdown file to split it by h1 tags.\n   */\n  readMarkdown(): void {\n    this.http.get(documentationURL, { responseType: 'text' }).subscribe((data: string) => {\n      const markdownContent: DocumentationContent[] = this.parseMarkdown(data);\n      this.markdownContent.next(markdownContent);\n    });\n  }\n\n  /**\n   * Function to parse the markdown file and convert to\n   * documentation content used by the info-dialog panels\n   *\n   * @param data Markdown file sent as a string after reading it\n   * @returns array of DocumentationContent\n   */\n  parseMarkdown(data: string): DocumentationContent[] {\n    const markdownContent: DocumentationContent[] = [];\n    const splitByHeaderTag: string[] = data.split('# ');\n    for (const split of splitByHeaderTag) {\n      if (split.length) {\n        const headerAndContent: string[] = split.split('\\n\\n');\n        markdownContent.push({\n          title: headerAndContent[0],\n          content: headerAndContent.splice(1).join('\\n\\n')\n        });\n      }\n    }\n    return markdownContent;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterParams.html":{"url":"interfaces/FilterParams.html","title":"interface - FilterParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            age\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ageRange\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bmi\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bmiRange\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cellTypeTerms\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ontologyTerms\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            providers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            spatial\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            technologies\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:     MinMax\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MinMax\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ageRange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ageRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bmi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bmi:     MinMax\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MinMax\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bmiRange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bmiRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cellTypeTerms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cellTypeTerms:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyTerms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyTerms:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        providers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"both\" | \"female\" | \"male\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"both\" | \"female\" | \"male\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spatial\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spatial:     SpatialSearch[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpatialSearch[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        technologies:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSearch, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n  spatial?: SpatialSearch[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return combineLatest([\n      globalConfig.getOption('remoteApiEndpoint'),\n      globalConfig.getOption('hubmapToken')\n    ]).pipe(\n      take(1),\n      tap(([endpoint, token]) => {\n        api.configuration.basePath = endpoint;\n        if (token) {\n          requestParams['token'] = token;\n        }\n      }),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForwardingDataSource.html":{"url":"classes/ForwardingDataSource.html","title":"class - ForwardingDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForwardingDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            DataSource\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:84\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult\n} from 'ccf-database';\nimport { Observable, ObservableInput, ObservedValueOf } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n\nexport interface DataSource {\n  getDatabaseStatus(): Observable;\n  getProviderNames(): Observable;\n  getDatasetTechnologyNames(): Observable;\n  getOntologyTreeModel(): Observable;\n  getCellTypeTreeModel(): Observable;\n  getReferenceOrgans(): Observable;\n\n  getTissueBlockResults(filter?: Filter): Observable;\n  getAggregateResults(filter?: Filter): Observable;\n  getOntologyTermOccurences(filter?: Filter): Observable>;\n  getCellTypeTermOccurences(filter?: Filter): Observable>;\n  getScene(filter?: Filter): Observable;\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\nexport type DataSourceLike = {\n  [K in keyof DataSource]: DataSourceLikeMethod;\n};\n\nexport type DataSourceMethod = DataSource[K];\nexport type DataSourceLikeMethod =\n  (...args: Parameters>) => ObservableInput>;\nexport type DataSourceDataType =\n  ObservedValueOf>>;\n\n\nexport abstract class ForwardingDataSource implements DataSource {\n  getDatabaseStatus(): Observable {\n    return this.forwardCall('getDatabaseStatus');\n  }\n\n  getProviderNames(): Observable {\n    return this.forwardCall('getProviderNames');\n  }\n\n  getDatasetTechnologyNames(): Observable {\n    return this.forwardCall('getDatasetTechnologyNames');\n  }\n\n  getOntologyTreeModel(): Observable {\n    return this.forwardCall('getOntologyTreeModel');\n  }\n\n  getCellTypeTreeModel(): Observable {\n    return this.forwardCall('getCellTypeTreeModel');\n  }\n\n  getReferenceOrgans(): Observable {\n    return this.forwardCall('getReferenceOrgans');\n  }\n\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.forwardCall('getTissueBlockResults', filter);\n  }\n\n  getAggregateResults(filter?: Filter): Observable {\n    return this.forwardCall('getAggregateResults', filter);\n  }\n\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getOntologyTermOccurences', filter);\n  }\n\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getCellTypeTermOccurences', filter);\n  }\n\n  getScene(filter?: Filter): Observable {\n    return this.forwardCall('getScene', filter);\n  }\n\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.forwardCall('getReferenceOrganScene', organIri, filter);\n  }\n\n  protected abstract forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable>;\n}\n\n\nexport abstract class DelegateDataSource extends ForwardingDataSource {\n  abstract readonly impl$: Observable;\n\n  protected forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable> {\n    type AnyFunction = (...rest: unknown[]) => ObservableInput;\n\n    return this.impl$.pipe(\n      switchMap(impl => (impl[method] as AnyFunction)(...args))\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalConfigState.html":{"url":"injectables/GlobalConfigState.html","title":"injectable - GlobalConfigState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GlobalConfigState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/config/global-config.state.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                optionCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                    Private\n                                getPathKey\n                            \n                            \n                                getProperty\n                            \n                            \n                                patchConfig\n                            \n                            \n                                setConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    config$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(k1: K1)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:42\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K1\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(k1: K1, k2: K2)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:43\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K1\n                        K2\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n                                    \n                                            K2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(k1: K1, k2: K2, k3: K3)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:44\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K1\n                        K2\n                        K3\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n                                    \n                                            K2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n                                    \n                                            K3\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(...path: (string | number)[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:45\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            (string | number)[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(...path: (string | number)[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            (string | number)[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getPathKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPathKey(path: (string | number)[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            (string | number)[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProperty\n                        \n                    \n                \n            \n            \n                \ngetProperty(path: PropertyKey[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:34\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            PropertyKey[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patchConfig\n                        \n                    \n                \n            \n            \n                \npatchConfig(config: ImmutablePatchValue)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            ImmutablePatchValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConfig\n                        \n                    \n                \n            \n            \n                \nsetConfig(config: ImmutableStateValue)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            ImmutableStateValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        optionCache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config$\n                    \n                \n\n                \n                    \n                        getconfig$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { Computed, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { ImmutablePatchValue, ImmutableStateValue } from '@ngxs-labs/data/typings';\nimport { State } from '@ngxs/store';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, pluck, shareReplay } from 'rxjs/operators';\n\n\n@StateRepository()\n@State({\n  name: 'globalConfig',\n  defaults: null\n})\n@Injectable()\nexport class GlobalConfigState extends NgxsImmutableDataRepository {\n  private readonly optionCache = new Map>();\n\n  @Computed()\n  get config$(): Observable> {\n    return this.state$.pipe(filterNulls(), shareReplay(1));\n  }\n\n  setConfig(config: ImmutableStateValue): void {\n    this.setState(config);\n  }\n\n  patchConfig(config: ImmutablePatchValue): void {\n    this.patchState(config);\n  }\n\n  getProperty(path: PropertyKey[]): Observable {\n    return this.config$.pipe(\n      pluck(...path as string[]),\n      distinctUntilChanged(),\n      shareReplay(1)\n    );\n  }\n\n  getOption(k1: K1): Observable;\n  getOption(k1: K1, k2: K2): Observable;\n  getOption(k1: K1, k2: K2, k3: K3): Observable;\n  getOption(...path: (string | number)[]): Observable;\n  getOption(...path: (string | number)[]): Observable {\n    const key = this.getPathKey(path);\n    if (this.optionCache.has(key)) {\n      return this.optionCache.get(key)!;\n    }\n\n    const obs = this.config$.pipe(\n      pluck(...(path as string[])),\n      distinctUntilChanged(),\n      shareReplay(1)\n    );\n\n    this.optionCache.set(key, obs);\n    return obs;\n  }\n\n  private getPathKey(path: (string | number)[]): string {\n    return `${path.length}:${path.join('.')}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalsService.html":{"url":"injectables/GlobalsService.html","title":"injectable - GlobalsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GlobalsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/globals/globals.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Provide functionality for interacting with the global object.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                findGlobalObject\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                remove\n                            \n                            \n                                set\n                            \n                            \n                                set\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    obj\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        findGlobalObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    findGlobalObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:109\n                \n            \n\n\n            \n                \n                    Attempt to locate the global object.\nCan be overridden in a subclass to check other locations\nor completely change the object. This is especially useful\nduring testing.\n\n\n                    \n                    \n                    \n                        Returns :         GlobalThis | undefined\n\n                    \n                    \n                        The global object if found\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: K)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:58\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n                    Gets a value from the global object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key for the value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: K, def: D)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:59\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                        D\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                            D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NonNullable | D\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: GlobalKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:60\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | null | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: GlobalKey, def: D)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:61\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        D\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                            D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | D\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: GlobalKey, def?)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has\n                        \n                    \n                \n            \n            \n                \nhas(key: GlobalKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:45\n                \n            \n\n\n            \n                \n                    Tests whether the global object has the specific key.\nThis method returns true even when the associated value\nis undefined or null as long as the key exists.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the key exists in the global object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(key: GlobalKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:93\n                \n            \n\n\n            \n                \n                    Removes a key from the global object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: K, value)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:76\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n                    Sets a value on the global object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key to set the value on\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: GlobalKey, value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:77\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: GlobalKey, value)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        obj\n                    \n                \n\n                \n                    \n                        getobj()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:22\n                                \n                            \n                    \n                        \n                                The found global object\n\n\n                                \n                                    Returns :         GlobalThis | undefined\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n\n/** Type of keys allowed in the global object */\nexport type GlobalKey = string | symbol;\n\n/** Type of the global object */\nexport type GlobalThis = typeof globalThis;\n\ndeclare let global: GlobalThis;\n\n/**\n * Provide functionality for interacting with the global object.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalsService {\n  /**\n   * The found global object\n   */\n  get obj(): GlobalThis | undefined {\n    const obj = this.findGlobalObject();\n    // Cache value on the instance\n    Object.defineProperties(this, {\n      obj: {\n        configurable: false,\n        writable: false,\n        value: obj\n      }\n    });\n\n    return obj;\n  }\n\n  /**\n   * Tests whether the global object has the specific key.\n   * This method returns true even when the associated value\n   * is undefined or null as long as the key exists.\n   *\n   * @param key The key\n   *\n   * @returns true if the key exists in the global object\n   */\n  has(key: GlobalKey): boolean {\n    const { obj } = this;\n    return obj != null && key in obj;\n  }\n\n  /**\n   * Gets a value from the global object.\n   *\n   * @param key The key for the value\n   * @param def An optional default value\n   *\n   * @returns The value if it exists otherwise the default value\n   */\n  get(key: K): GlobalThis[K];\n  get(key: K, def: D): NonNullable | D;\n  get(key: GlobalKey): T | null | undefined;\n  get(key: GlobalKey, def: D): T | D;\n\n  get(key: GlobalKey, def?: unknown): unknown {\n    const { obj } = this;\n    return (obj && obj[key] as unknown) ?? def;\n  }\n\n  /**\n   * Sets a value on the global object.\n   *\n   * @param key The key to set the value on\n   * @param value The new value\n   *\n   * @throws TypeError if the value is readonly\n   */\n  set(key: K, value: GlobalThis[K]): void;\n  set(key: GlobalKey, value: T): void;\n\n  set(key: GlobalKey, value: unknown): void {\n    const { obj } = this;\n    if (obj) {\n      obj[key] = value;\n    }\n  }\n\n  /**\n   * Removes a key from the global object.\n   *\n   * @param key The key to remove\n   *\n   * @throws TypeError if the key is not removable\n   */\n  remove(key: GlobalKey): void {\n    const { obj } = this;\n    if (obj) {\n      delete obj[key];\n    }\n  }\n\n  /**\n   * Attempt to locate the global object.\n   * Can be overridden in a subclass to check other locations\n   * or completely change the object. This is especially useful\n   * during testing.\n   *\n   * @returns The global object if found\n   */\n  /* istanbul ignore next This is really hard to test as it depends on the global environment */\n  protected findGlobalObject(): GlobalThis | undefined {\n    // This should pretty much always be available unless\n    // we are running in some outdated environment\n    if (typeof globalThis !== 'undefined') {\n      return globalThis;\n    }\n\n    // Check the common places for a global object\n    if (typeof global !== 'undefined') { // Node.js environment\n      return global;\n    } else if (typeof window !== 'undefined') { // Browser environment\n      return window;\n    } else if (typeof self !== 'undefined') { // Web worker environment\n      return self;\n    }\n\n    try {\n      // One last try - may fail depending on content security policy (CSP) settings\n      // eslint-disable-next-line no-new-func, @typescript-eslint/no-implied-eval\n      return (new Function('return this;'))() as GlobalThis | undefined;\n    } catch (_ignored) { /* Ignore errors */ }\n\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleAnalyticsSyncService.html":{"url":"injectables/GoogleAnalyticsSyncService.html","title":"injectable - GoogleAnalyticsSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GoogleAnalyticsSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                            \n                                    Private\n                                    Readonly\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                toggleGoogleAnalytics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consentService: ConsentService, window: Record | null, undefined: IGoogleAnalyticsSettings)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        window\n                                                  \n                                                        \n                                                                    Record | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                  \n                                                        \n                                                                    IGoogleAnalyticsSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        toggleGoogleAnalytics\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleGoogleAnalytics(disabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    disabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, OnDestroy } from '@angular/core';\nimport { IGoogleAnalyticsSettings, NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN, NGX_WINDOW } from 'ngx-google-analytics';\nimport { Subscription } from 'rxjs';\n\nimport { ConsentService } from './consent.service';\n\n\n@Injectable()\nexport class GoogleAnalyticsSyncService implements OnDestroy {\n  private readonly token: string;\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    consentService: ConsentService,\n    @Inject(NGX_WINDOW) private readonly window: Record | null,\n    @Inject(NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN) { trackingCode }: IGoogleAnalyticsSettings\n  ) {\n    this.token = trackingCode;\n\n    this.subscriptions.add(consentService.consentChange.subscribe(\n      consent => this.toggleGoogleAnalytics(consent === 'rescinded')\n    ));\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  private toggleGoogleAnalytics(disabled: boolean): void {\n    if (this.window) {\n      this.window[`ga-disable-${this.token}`] = disabled;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoButtonComponent.html":{"url":"components/InfoButtonComponent.html","title":"component - InfoButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Info button component: Information icon displays project details when clicked.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-button\n            \n\n            \n                styleUrls\n                ./info-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchInfoDialog\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onDialogButtonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                infoTitle\n                            \n                            \n                                videoID\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, infoButtonService: InfoButtonService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:29\n                            \n                        \n\n                \n                    \n                            Creates an instance of info button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the dialog creation service.\n\n                                                        \n                                                \n                                                \n                                                        infoButtonService\n                                                  \n                                                        \n                                                                        InfoButtonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the info button service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        infoTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:22\n                            \n                        \n                \n                    \n                        Title of the info dialog\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        videoID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:27\n                            \n                        \n                \n                    \n                        Whether the information is for the RUI or EUI\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        launchInfoDialog\n                        \n                    \n                \n            \n            \n                \nlaunchInfoDialog(data: DocumentationContent[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:56\n                \n            \n\n\n            \n                \n                    Opens the info dialogue with the project details\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DocumentationContent[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:49\n                \n            \n\n\n            \n                \n                    Unsubscribe to the observable when the component\nis destroyed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDialogButtonClick\n                        \n                    \n                \n            \n            \n                \nonDialogButtonClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:72\n                \n            \n\n\n            \n                \n                    Detects button click and reads markdown function\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\n\nimport { DocumentationContent } from '../info-button/info-button.service';\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\nimport { InfoButtonService } from './info-button.service';\n\n\n/**\n * Info button component: Information icon displays project details when clicked.\n */\n@Component({\n  selector: 'ccf-info-button',\n  templateUrl: './info-button.component.html',\n  styleUrls: ['./info-button.component.scss']\n})\nexport class InfoButtonComponent implements OnDestroy {\n  /**\n   * Title of the info dialog\n   */\n  @Input() infoTitle = '';\n\n  /**\n   * Whether the information is for the RUI or EUI\n   */\n  @Input() videoID: string;\n\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of info button component.\n   *\n   * @param dialog Reference to the dialog creation service.\n   * @param infoButtonService Reference to the info button service\n   */\n  constructor(private readonly dialog: MatDialog, private readonly infoButtonService: InfoButtonService) {\n    this.subscriptions.add(infoButtonService.markdownContent.subscribe(data => {\n      if (data.length) {\n        this.launchInfoDialog(data);\n      }\n    }));\n  }\n\n  /**\n    * Unsubscribe to the observable when the component\n    * is destroyed\n    */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the info dialogue with the project details\n   */\n  launchInfoDialog(data: DocumentationContent[]): void {\n    this.dialog.open(InfoDialogComponent, {\n      autoFocus: false,\n      panelClass: 'modal-animated',\n      width: '60rem',\n      data: {\n        title: this.infoTitle,\n        content: data,\n        videoID: this.videoID\n      }\n    });\n  }\n\n  /**\n   * Detects button click and reads markdown function\n   */\n  onDialogButtonClick(): void {\n    this.infoButtonService.readMarkdown();\n  }\n}\n\n    \n\n    \n        \n  \n    info\n  \n\n    \n\n    \n                \n                    ./info-button.component.scss\n                \n                .info-button-wrapper {\n  border-radius: 0.25rem;\n  padding: 0.65rem;\n  transition: 0.6s;\n\n  .ccf-info-button {\n    cursor: pointer;\n    transition: color .6s;\n    font-size: 1.5rem;\n    vertical-align: sub;\n  }\n  \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      info  '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoButtonModule.html":{"url":"modules/InfoButtonModule.html","title":"module - InfoButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InfoButtonModule\n\n\n\ncluster_InfoButtonModule_exports\n\n\n\ncluster_InfoButtonModule_imports\n\n\n\ncluster_InfoButtonModule_declarations\n\n\n\n\nInfoButtonComponent\n\nInfoButtonComponent\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nInfoButtonModule -->\n\nInfoButtonComponent->InfoButtonModule\n\n\n\n\n\nInfoButtonComponent \n\nInfoButtonComponent \n\nInfoButtonComponent  -->\n\nInfoButtonModule->InfoButtonComponent \n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoButtonModule -->\n\nInfoDialogModule->InfoButtonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-button/info-button.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoButtonComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InfoDialogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { InfoButtonComponent } from './info-button.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { InfoDialogModule } from '../info-dialog/info-dialog.module';\n\n@NgModule({\n  declarations: [InfoButtonComponent],\n  imports: [CommonModule, InfoDialogModule, MatIconModule, HttpClientModule],\n  exports: [InfoButtonComponent]\n})\nexport class InfoButtonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InfoButtonService.html":{"url":"injectables/InfoButtonService.html","title":"injectable - InfoButtonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InfoButtonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                markdownContent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                parseMarkdown\n                            \n                            \n                                readMarkdown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        parseMarkdown\n                        \n                    \n                \n            \n            \n                \nparseMarkdown(data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:48\n                \n            \n\n\n            \n                \n                    Function to parse the markdown file and convert to\ndocumentation content used by the info-dialog panels\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Markdown file sent as a string after reading it\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DocumentationContent[]\n\n                    \n                    \n                        array of DocumentationContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readMarkdown\n                        \n                    \n                \n            \n            \n                \nreadMarkdown()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:34\n                \n            \n\n\n            \n                \n                    Read the markdown file to split it by h1 tags.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        markdownContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:27\n                        \n                    \n\n            \n                \n                    Subject to send the documentation data to the component when its done processing\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nconst documentationURL = 'assets/docs/README.md';\n\n/**\n * The structure to define how each documentation panel\n * should look like in the info dialog\n */\n\nexport interface DocumentationContent {\n  /** Title of the panel */\n  title: string;\n\n  /** Content inside the panel */\n  content: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfoButtonService {\n\n  /** Subject to send the documentation data to the component when its done processing */\n  markdownContent: BehaviorSubject = new BehaviorSubject([]);\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Read the markdown file to split it by h1 tags.\n   */\n  readMarkdown(): void {\n    this.http.get(documentationURL, { responseType: 'text' }).subscribe((data: string) => {\n      const markdownContent: DocumentationContent[] = this.parseMarkdown(data);\n      this.markdownContent.next(markdownContent);\n    });\n  }\n\n  /**\n   * Function to parse the markdown file and convert to\n   * documentation content used by the info-dialog panels\n   *\n   * @param data Markdown file sent as a string after reading it\n   * @returns array of DocumentationContent\n   */\n  parseMarkdown(data: string): DocumentationContent[] {\n    const markdownContent: DocumentationContent[] = [];\n    const splitByHeaderTag: string[] = data.split('# ');\n    for (const split of splitByHeaderTag) {\n      if (split.length) {\n        const headerAndContent: string[] = split.split('\\n\\n');\n        markdownContent.push({\n          title: headerAndContent[0],\n          content: headerAndContent.splice(1).join('\\n\\n')\n        });\n      }\n    }\n    return markdownContent;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogComponent.html":{"url":"components/InfoDialogComponent.html","title":"component - InfoDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-dialog\n            \n\n            \n                styleUrls\n                ./info-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                documentationContents\n                            \n                            \n                                infoTitle\n                            \n                            \n                                videoID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: InfoDialogData)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:32\n                            \n                        \n\n                \n                    \n                            Creates an instance of info dialog component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the dialog that this component creates, used to call the dialog's methods\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        InfoDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data being injected into the dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:60\n                \n            \n\n\n            \n                \n                    Closes info dialog component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:51\n                \n            \n\n\n            \n                \n                    load the youtube player api in on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InfoDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:41\n                        \n                    \n\n            \n                \n                    Data being injected into the dialog\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:40\n                        \n                    \n\n            \n                \n                    A reference to the dialog that this component creates, used to call the dialog's methods\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        documentationContents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DocumentationContent[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:26\n                        \n                    \n\n            \n                \n                    Documentation contents\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        infoTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:30\n                        \n                    \n\n            \n                \n                    Title of the dialog\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        videoID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DocumentationContent } from '../info-button/info-button.service';\n\n/**\n * Data model for the dialog input\n */\nexport interface InfoDialogData {\n  content: DocumentationContent[];\n  title: string;\n  videoID: string;\n}\n\n/**\n * This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n */\n@Component({\n  selector: 'ccf-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss']\n})\nexport class InfoDialogComponent implements OnInit {\n  /**\n   * Documentation contents\n   */\n  documentationContents: DocumentationContent[];\n  /**\n   * Title of the dialog\n   */\n  infoTitle: string;\n\n  videoID: string;\n  /**\n   * Creates an instance of info dialog component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: InfoDialogData,\n  ) {\n    this.documentationContents = data.content || [];\n    this.infoTitle = data.title || '';\n    this.videoID = data.videoID;\n  }\n\n  /**\n   * load the youtube player api in on init\n   */\n  ngOnInit(): void {\n    const tag = document.createElement('script');\n    tag.src = 'https://www.youtube.com/iframe_api';\n    document.body.appendChild(tag);\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(() => {\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      clear\n    \n    \n      {{infoTitle}}\n      \n      \n        \n          \n            \n              {{content.title}}\n            \n              \n                \n                \n                   \n                \n              \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./info-dialog.component.scss\n                \n                ::ng-deep .mat-dialog-container {\n  padding: 0;\n}\n\n.rui-about.wrapper {\n  .container {\n    .content {\n      padding: 3rem;\n      text-align: left;\n    }\n\n    .description {\n      font-size: 0.875rem;\n      line-height: 1.5rem;\n      margin-bottom: 1rem;\n    }\n\n    .close {\n      .close-icon {\n        float: right;\n        cursor: pointer;\n      }\n    }\n\n    .title {\n      font-size: 1.5rem;\n      margin-bottom: 2.25rem;\n      text-align: center;\n    }\n\n    .subtitle {\n      font-size: 1rem;\n      margin-top: 0;\n      margin-bottom: 0.5rem;\n    }\n\n    .panel {\n      margin-bottom: 1.5rem;\n\n      .no-header-margin {\n        font-weight: 300;\n        margin-bottom: 0;\n      }\n\n      .top-padding {\n        display: flex;\n\n        markdown ::ng-deep ul {\n          margin-top: 0;\n          padding-left: 1.5rem;\n        }\n      }\n    }\n\n    .dialog-content {\n      height: 50rem;\n      min-height: 10rem;\n\n      .variable-binding {\n        font-weight: 300;\n\n        &.first {\n          padding-right: 3rem;\n          width: 50%;\n        }\n      }\n\n      .video-player {\n        position: relative;\n        width: 50%;\n\n        ::ng-deep iframe {\n          width: 100%;\n          height: 100%;\n          max-height: 17.5rem;\n        }\n      }\n    }\n\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear              {{infoTitle}}                                                        {{content.title}}                                                                                                                                         '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InfoDialogData.html":{"url":"interfaces/InfoDialogData.html","title":"interface - InfoDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InfoDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Data model for the dialog input\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            videoID\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         DocumentationContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DocumentationContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videoID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        videoID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DocumentationContent } from '../info-button/info-button.service';\n\n/**\n * Data model for the dialog input\n */\nexport interface InfoDialogData {\n  content: DocumentationContent[];\n  title: string;\n  videoID: string;\n}\n\n/**\n * This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n */\n@Component({\n  selector: 'ccf-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss']\n})\nexport class InfoDialogComponent implements OnInit {\n  /**\n   * Documentation contents\n   */\n  documentationContents: DocumentationContent[];\n  /**\n   * Title of the dialog\n   */\n  infoTitle: string;\n\n  videoID: string;\n  /**\n   * Creates an instance of info dialog component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: InfoDialogData,\n  ) {\n    this.documentationContents = data.content || [];\n    this.infoTitle = data.title || '';\n    this.videoID = data.videoID;\n  }\n\n  /**\n   * load the youtube player api in on init\n   */\n  ngOnInit(): void {\n    const tag = document.createElement('script');\n    tag.src = 'https://www.youtube.com/iframe_api';\n    document.body.appendChild(tag);\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(() => {\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoDialogModule.html":{"url":"modules/InfoDialogModule.html","title":"module - InfoDialogModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoDialogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InfoDialogModule\n\n\n\ncluster_InfoDialogModule_declarations\n\n\n\ncluster_InfoDialogModule_exports\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoDialogModule -->\n\nInfoDialogComponent->InfoDialogModule\n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nInfoDialogModule->InfoDialogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoDialogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoDialogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InfoDialogComponent } from './info-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { YouTubePlayerModule } from '@angular/youtube-player';\n\n\n@NgModule({\n  declarations: [InfoDialogComponent],\n  imports: [CommonModule, MatDialogModule, MatIconModule, MatExpansionModule, YouTubePlayerModule, MarkdownModule.forRoot({})],\n  exports: [InfoDialogComponent]\n})\nexport class InfoDialogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectorDelegateDataSourceService.html":{"url":"injectables/InjectorDelegateDataSourceService.html","title":"injectable - InjectorDelegateDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectorDelegateDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DelegateDataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                selectToken\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globalConfig: GlobalConfigState, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        selectToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectToken(config: C)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ProviderToken\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:11\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Injector, ProviderToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, shareReplay } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n@Injectable()\nexport abstract class InjectorDelegateDataSourceService extends DelegateDataSource {\n  readonly impl$: Observable;\n\n  constructor(\n    globalConfig: GlobalConfigState,\n    injector: Injector\n  ) {\n    super();\n\n    this.impl$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      map(config => this.selectToken(config)),\n      distinctUntilChanged(),\n      map(token => injector.get(token)),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract selectToken(config: C): ProviderToken;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageSyncService.html":{"url":"injectables/LocalStorageSyncService.html","title":"injectable - LocalStorageSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                storage\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadConsent\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                saveConsent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consentService: ConsentService, key: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadConsent\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadConsent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Consent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        saveConsent\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveConsent(value: Consent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        storage\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Consent, ConsentService } from './consent.service';\n\n\nexport const LOCAL_STORAGE_CONSENT_KEY = new InjectionToken('Key under which consent is stored', {\n  providedIn: 'root',\n  factory: () => 'ALLOW_TELEMETRY'\n});\n\n\n@Injectable()\nexport class LocalStorageSyncService implements OnDestroy {\n  private readonly storage?: typeof localStorage;\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    consentService: ConsentService,\n    @Inject(LOCAL_STORAGE_CONSENT_KEY) private readonly key: string\n  ) {\n    try {\n      this.storage = localStorage;\n    } catch (_error) { /* Ignored */ }\n\n    consentService.setConsent(this.loadConsent());\n    this.subscriptions.add(\n      consentService.consentChange.subscribe(consent => this.saveConsent(consent))\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  private loadConsent(): Consent {\n    const rawValue = this.storage?.getItem?.(this.key);\n    if (rawValue == null) {\n      return 'not-set';\n    }\n\n    const value = rawValue.trim().toLowerCase();\n    switch (value) {\n      case 'given': /* fallthrough */\n      case 'rescinded':\n        return value;\n      default:\n        return 'not-set';\n    }\n  }\n\n  private saveConsent(value: Consent): void {\n    this.storage?.setItem?.(this.key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MousePositionTrackerModule.html":{"url":"modules/MousePositionTrackerModule.html","title":"module - MousePositionTrackerModule","body":"\n                   \n\n\n\n\n    Modules\n    MousePositionTrackerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/analytics/mouse-position-tracker.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, NgModule } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { map, throttleTime } from 'rxjs/operators';\n\n\nexport function trackMousePosition(el: HTMLElement, ga: GoogleAnalyticsService): Subscription {\n  const formatData = (event: MouseEvent) => {\n    const { clientWidth, clientHeight } = el;\n    const { clientX, clientY } = event;\n    const points = [clientX, clientY, clientWidth, clientHeight];\n    return points.join('_');\n  };\n\n  const events = fromEvent(el, 'mousemove').pipe(\n    throttleTime(1000),\n    map(formatData)\n  );\n\n  return events.subscribe(data => ga.event('webpage', 'mousemove', data));\n}\n\n\n@NgModule()\nexport class MousePositionTrackerModule {\n  constructor(\n  // NOTE: Angular compiler fails when document is typed properly?!\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  @Inject(DOCUMENT) document: any,\n                    ga: GoogleAnalyticsService\n  ) {\n    if (document) {\n      trackMousePosition((document as Document).body, ga);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NumberDirective.html":{"url":"directives/NumberDirective.html","title":"directive - NumberDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NumberDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive for restricting an input element to integer only values.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        input[ccfNumbersOnly]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onInputChange\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts:9\n                            \n                        \n\n                \n                    \n                            Creates an instance of number directive.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to input element\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts:23\n                \n            \n\n\n            \n                \n                    Listens to input changes and updates the text to only include numbers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The input event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChange\n                        \n                    \n                \n            \n            \n                \nonInputChange(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('input', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts:23\n                \n            \n\n\n            \n                \n                    Listens to input changes and updates the text to only include numbers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The input event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, HostListener } from '@angular/core';\n\n/**\n * Directive for restricting an input element to integer only values.\n */\n@Directive({\n  selector: 'input[ccfNumbersOnly]'\n})\nexport class NumberDirective {\n  /**\n   * Creates an instance of number directive.\n   *\n   * @param el Reference to input element\n   */\n  constructor(private el: ElementRef) { }\n\n  /**\n   * Listens to input changes and updates the text to only include numbers.\n   *\n   * @param event The input event\n   */\n  @HostListener('input', ['$event'])\n  onInputChange(event: Event): void {\n    const initalValue = this.el.nativeElement.value;\n    this.el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');\n    if (initalValue !== this.el.nativeElement.value) {\n      event.stopPropagation();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NumbersOnlyModule.html":{"url":"modules/NumbersOnlyModule.html","title":"module - NumbersOnlyModule","body":"\n                   \n\n\n\n\n    Modules\n    NumbersOnlyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NumbersOnlyModule\n\n\n\ncluster_NumbersOnlyModule_declarations\n\n\n\ncluster_NumbersOnlyModule_exports\n\n\n\n\nNumberDirective\n\nNumberDirective\n\n\n\nNumbersOnlyModule\n\nNumbersOnlyModule\n\nNumbersOnlyModule -->\n\nNumberDirective->NumbersOnlyModule\n\n\n\n\n\nNumberDirective \n\nNumberDirective \n\nNumberDirective  -->\n\nNumbersOnlyModule->NumberDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NumberDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NumberDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { NumberDirective } from './numbers-only.directive';\n\n\n@NgModule({\n  declarations: [NumberDirective],\n  exports: [NumberDirective]\n})\nexport class NumbersOnlyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OpacitySliderComponent.html":{"url":"components/OpacitySliderComponent.html","title":"component - OpacitySliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OpacitySliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts\n\n\n\n    \n        Description\n    \n    \n        Slider for setting opacity on an anatomical structure\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-opacity-slider\n            \n\n            \n                styleUrls\n                ./opacity-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./opacity-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                prevOpacity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeOpacity\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                            \n                                resetOpacity\n                            \n                            \n                                toggleVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                opacity\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                opacityChange\n                            \n                            \n                                opacityReset\n                            \n                            \n                                visibilityToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        opacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:22\n                            \n                        \n                \n                    \n                        The value displayed in the slider\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:27\n                            \n                        \n                \n                    \n                        Whether the item is set to visible\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        opacityChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:32\n                            \n                        \n                \n                    \n                        Emits the updated opacity when the opacity changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        opacityReset\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:42\n                            \n                        \n                \n                    \n                        Emitter for resetting all opacity values to default\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visibilityToggle\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:37\n                            \n                        \n                \n                    \n                        Output  of opacity slider component\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-opacity-slider\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-opacity-slider'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeOpacity\n                        \n                    \n                \n            \n            \n                \nchangeOpacity(newOpacity: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:63\n                \n            \n\n\n            \n                \n                    Emits opacityChange with the new opacity value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    newOpacity\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The updated opacity value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetOpacity\n                        \n                    \n                \n            \n            \n                \nresetOpacity()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:82\n                \n            \n\n\n            \n                \n                    Emits signal to reset the opacity of the item\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleVisibility()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:71\n                \n            \n\n\n            \n                \n                    Emits signal to toggle the visibility of the item\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-opacity-slider'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prevOpacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, HostBinding, Input, Output, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n/**\n * Slider for setting opacity on an anatomical structure\n */\n@Component({\n  selector: 'ccf-opacity-slider',\n  templateUrl: './opacity-slider.component.html',\n  styleUrls: ['./opacity-slider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OpacitySliderComponent implements OnInit {\n\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-opacity-slider';\n\n  /**\n   * The value displayed in the slider\n   */\n  @Input() opacity = 20;\n\n  /**\n   * Whether the item is set to visible\n   */\n  @Input() visible = true;\n\n  /**\n   * Emits the updated opacity when the opacity changes\n   */\n  @Output() readonly opacityChange = new EventEmitter();\n\n  /**\n   * Output  of opacity slider component\n   */\n  @Output() readonly visibilityToggle = new EventEmitter();\n\n  /**\n   * Emitter for resetting all opacity values to default\n   */\n  @Output() readonly opacityReset = new EventEmitter();\n\n  prevOpacity: number;\n\n  ngOnInit(): void {\n    if (this.visible) {\n      this.prevOpacity = 0;\n    } else {\n      this.prevOpacity = 20;\n    }\n  }\n\n  reset(): void {\n    this.prevOpacity = 20;\n  }\n\n  /**\n   * Emits opacityChange with the new opacity value\n   *\n   * @param newOpacity The updated opacity value\n   */\n  changeOpacity(newOpacity: string): void {\n    this.opacity = parseInt(newOpacity, 10);\n    this.opacityChange.emit(this.opacity);\n  }\n\n  /**\n   * Emits signal to toggle the visibility of the item\n   */\n  toggleVisibility(): void {\n    const temp = this.opacity;\n    this.opacity = this.prevOpacity;\n    this.prevOpacity = temp;\n    this.visibilityToggle.emit();\n    this.opacityChange.emit(this.opacity);\n  }\n\n  /**\n   * Emits signal to reset the opacity of the item\n   */\n  resetOpacity(): void {\n    this.prevOpacity = 0;\n    this.opacityReset.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{opacity}}%\n  \n  \n    \n    \n    refresh\n  \n\n    \n\n    \n                \n                    ./opacity-slider.component.scss\n                \n                :host {\n  height: 2.25rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 0.1875rem;\n  \n\n  .slider-box {\n    display: flex;\n    width: 100%;\n    align-items: center;\n    justify-content: space-between;\n    height: 100%;\n\n    .slider-and-label {\n      width: 60%;\n      display: flex;\n      align-items: center;\n      height: 100%;\n\n      .slider {\n        width: 100%;\n        height: 100%;\n\n        ::ng-deep .mat-slider-wrapper {\n          top: 1.125rem;\n        }\n        \n        &.disabled {\n          pointer-events: none;\n          cursor: not-allowed;\n        }\n      }\n\n      .opacity-value {\n        width: 1.5rem;\n        margin-left: 0.5rem;\n      }\n    }\n\n    .icons {\n      display: flex;\n      cursor: pointer !important;\n\n      .reset {\n        margin-right: 1rem;\n        padding: 0.25rem;\n        cursor: pointer;\n        transition: .6s;\n        border-radius: 0.25rem;\n      }\n    \n      .visibility {\n        transition: .6s;\n        cursor: pointer;\n        padding: 0.25rem;\n        border-radius: 0.25rem;\n    \n        &.hidden {\n          display: none;\n        }\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{opacity}}%                refresh  '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'OpacitySliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpacitySliderModule.html":{"url":"modules/OpacitySliderModule.html","title":"module - OpacitySliderModule","body":"\n                   \n\n\n\n\n    Modules\n    OpacitySliderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OpacitySliderModule\n\n\n\ncluster_OpacitySliderModule_declarations\n\n\n\ncluster_OpacitySliderModule_exports\n\n\n\n\nOpacitySliderComponent\n\nOpacitySliderComponent\n\n\n\nOpacitySliderModule\n\nOpacitySliderModule\n\nOpacitySliderModule -->\n\nOpacitySliderComponent->OpacitySliderModule\n\n\n\n\n\nOpacitySliderComponent \n\nOpacitySliderComponent \n\nOpacitySliderComponent  -->\n\nOpacitySliderModule->OpacitySliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OpacitySliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OpacitySliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OpacitySliderComponent } from './opacity-slider.component';\nimport { MatSliderModule } from '@angular/material/slider';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRippleModule } from '@angular/material/core';\n\n@NgModule({\n  declarations: [OpacitySliderComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatSliderModule,\n    MatRippleModule\n  ],\n  exports: [OpacitySliderComponent]\n})\nexport class OpacitySliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganInfo.html":{"url":"interfaces/OrganInfo.html","title":"interface - OrganInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Contains the organ name and url of the icon svg\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hasSex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            side\n                                        \n                                \n                                \n                                        \n                                            src\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    True if the icon is disabled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasSex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasSex:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    True if applies to both sexes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    UBERON id for the organ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Label to display for the organ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the organ (to help match organs with left / right)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"male\" | \"female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"male\" | \"female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used for single sex only organs\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"left\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"right\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used for paired organs\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Used to fetch the url of the organ icon\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit, Component, ElementRef, EventEmitter, HostBinding, Input,\n  OnChanges, OnDestroy, Output, SimpleChanges, ViewChild\n} from '@angular/core';\nimport { ResizeSensor } from 'css-element-queries';\n\n/**\n * All organs that will eventually be displayed in the app\n */\nexport const ALL_POSSIBLE_ORGANS = [\n  {\n    src: 'app:skin',\n    organ: 'Skin',\n    name: 'Skin',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002097'\n  },\n  {\n    src: 'app:brain',\n    organ: 'Brain',\n    name: 'Brain',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000955'\n  },\n  {\n    disabled: true,\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000029'\n  },\n  {\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002509'\n  },\n  {\n    disabled: true,\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000970'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004548'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/FMA_54449'\n  },\n  {\n    disabled: true,\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0003889'\n  },\n  {\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001303'\n  },\n  {\n    src: 'app:fallopian-tube-right',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001302'\n  },\n  {\n    src: 'app:heart',\n    organ: 'Heart',\n    name: 'Heart',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000948'\n  },\n  {\n    disabled: true,\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002113'\n  },\n  {\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004538'\n  },\n  {\n    src: 'app:kidney-right',\n    organ: 'Kidney',\n    name: 'Kidney, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004539'\n  },\n  {\n    disabled: true,\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001465'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/FMA_24978'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/FMA_24977'\n  },\n  {\n    src: 'app:liver',\n    organ: 'Liver',\n    name: 'Liver',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002107'\n  },\n  {\n    disabled: true,\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002048'\n  },\n  {\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001004'\n  },\n  {\n    disabled: true,\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000992'\n  },\n  {\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/FMA_7214'\n  },\n  {\n    src: 'app:ovary-right',\n    organ: 'Ovary',\n    name: 'Ovary, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/FMA_7213'\n  },\n  {\n    src: 'app:pancreas',\n    organ: 'Pancreas',\n    name: 'Pancreas',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001264'\n  },\n  {\n    src: 'app:pelvis-f',\n    organ: 'Pelvis',\n    name: 'Pelvis',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001270'\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002367',\n    disabled: true\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000079'\n  },\n  {\n    src: 'app:small-intestine',\n    organ: 'Small Intestine',\n    name: 'Small Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002108'\n  },\n  {\n    src: 'app:large-intestine',\n    organ: 'Large Intestine',\n    name: 'Large Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000059'\n  },\n  {\n    src: 'app:spleen',\n    organ: 'Spleen',\n    name: 'Spleen',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002106'\n  },\n  {\n    src: 'app:thymus',\n    organ: 'Thymus',\n    name: 'Thymus',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002370'\n  },\n  {\n    disabled: true,\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000056'\n  },\n  {\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001223'\n  },\n  {\n    src: 'app:ureter-right',\n    organ: 'Ureter',\n    name: 'Ureter, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001222'\n  },\n  {\n    src: 'app:bladder',\n    organ: 'Urinary Bladder',\n    name: 'Urinary Bladder',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001255'\n  },\n  {\n    src: 'app:uterus',\n    organ: 'Uterus',\n    name: 'Uterus',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000995'\n  },\n  {\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004537'\n  },\n  {\n    disabled: true,\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002049'\n  }\n].sort((a, b) => a.name.localeCompare(b.name)) as OrganInfo[];\n\n/**\n * All organs which have not been disabled\n */\nexport const ALL_ORGANS = ALL_POSSIBLE_ORGANS.filter(organ => organ.disabled !== true);\n\n/**\n * Contains the organ name and url of the icon svg\n */\nexport interface OrganInfo {\n\n  /**\n   * Used to fetch the url of the organ icon\n   */\n  src: string;\n\n  /**\n   * Label to display for the organ\n   */\n  name: string;\n\n  /**\n   * Name of the organ (to help match organs with left / right)\n   */\n  organ: string;\n\n  /**\n   * True if the icon is disabled\n   */\n  disabled?: boolean;\n\n  /**\n   * Used for paired organs\n   */\n  side?: 'left' | 'right';\n\n  /**\n   * True if applies to both sexes\n   */\n  hasSex?: boolean;\n\n  /**\n   * Used for single sex only organs\n   */\n  sex?: 'male' | 'female';\n\n  /**\n   * UBERON id for the organ\n   */\n  id?: string;\n}\n\n/**\n * Organ carousel for selecting the organ to be viewed\n */\n@Component({\n  selector: 'ccf-organ-selector',\n  templateUrl: './organ-selector.component.html',\n  styleUrls: ['./organ-selector.component.scss']\n})\nexport class OrganSelectorComponent implements AfterViewInit, OnChanges, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly clsName = 'ccf-organ-selector';\n\n  @ViewChild('carouselContainer', { static: true }) carouselContainer: ElementRef;\n  @ViewChild('itemlist', { static: true }) itemList: ElementRef;\n  @ViewChild('itemcontainer', { static: true }) itemContainer: ElementRef;\n\n  /**\n   * If multiple selections should be allowed\n   */\n  @Input() multiselect = false;\n\n  @Input() displayErrors = false;\n\n  /**\n   * List of organs in the carousel\n   */\n  @Input() organList: OrganInfo[] = ALL_ORGANS;\n\n  /**\n   * Currently selected organ\n   */\n  @Input() selectedOrgans: OrganInfo[] = [];\n\n  /**\n   * If the organ selector is expanded\n   */\n  @Input() expanded = false;\n\n  /**\n   * Emits the name of the organ when selected\n   */\n  @Output() readonly organsChanged = new EventEmitter();\n\n  /**\n   * Determines whether the carousel is at the beginning\n   */\n  onLeft = true;\n\n  /**\n   * Determines whether the carousel is at the end\n   */\n  onRight = false;\n\n  /**\n   * Handles scrolling behavior\n   */\n  timeoutHandler?: unknown;\n\n  /**\n   * Distance the carousel moves in each shift (px)\n   */\n  step = 72;\n\n  /**\n   * Detects resizing of carousel\n   */\n  private sensor: ResizeSensor;\n\n  // eslint-disable-next-line\n  @Input()\n  set occurenceData(value: Record) {\n    // eslint-disable-next-line\n    this._occurenceData = value;\n  }\n\n  get occurenceData(): Record {\n    // eslint-disable-next-line\n    return this._occurenceData;\n  }\n\n  private _occurenceData: Record;\n\n  /**\n   * Set resize sensor on carousel\n   */\n  ngAfterViewInit(): void {\n    const { carouselContainer } = this;\n    this.sensor = new ResizeSensor(carouselContainer.nativeElement, () => {\n      this.set();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('organList' in changes) {\n      this.set();\n    }\n  }\n\n  /**\n   * Detaches resize sensor\n   */\n  ngOnDestroy(): void {\n    this.sensor.detach();\n  }\n\n  /**\n   * Decides whether or not an error has occured,\n   * used to display or hide error message.\n   */\n  get error(): boolean {\n    if (!this.displayErrors || this.selectedOrgans.length === 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Scrolls the carousel left or right by one step.\n   * Prevents scrolling past the beginning or end of the carousel.\n   *\n   * @param dir Direction to be scrolled\n   */\n  shift(dir: string): void {\n    const { itemList } = this;\n    let val = parseInt(itemList.nativeElement.style.left, 10) || 0;\n    if (this.onLeft && dir === 'left' || this.onRight && dir === 'right') {\n      return;\n    }\n    val = dir === 'right' ? val - this.step : val + this.step;\n    itemList.nativeElement.style.left = val + 'px';\n    this.setLeftRight(val);\n  }\n\n  /**\n   * Scrolls carousel continuously\n   *\n   * @param dir Direction to be scrolled\n   */\n  scroll(dir: string): void {\n    this.timeoutHandler = setInterval(() => {\n      this.shift(dir);\n    }, 200);\n  }\n\n  /**\n   * Stops carousel scrolling\n   */\n  stopScroll(): void {\n    if (this.timeoutHandler) {\n      // Minor hack to make typescript happy when there are mixed NodeJS and regular typings\n      clearInterval(this.timeoutHandler as undefined);\n      this.timeoutHandler = undefined;\n    }\n  }\n\n  /**\n   * Sets and emits currently selected organ(s)\n   *\n   * @param organ The organ selected\n   */\n  selectOrgan(organ: OrganInfo): void {\n    if (!this.multiselect) {\n      this.selectedOrgans = [organ];\n    } else {\n      if (this.selectedOrgans.includes(organ)) {\n        this.selectedOrgans = this.selectedOrgans.filter((selectedOrgan) => organ !== selectedOrgan);\n      } else {\n        this.selectedOrgans = this.selectedOrgans.concat([organ]);\n      }\n    }\n    this.organsChanged.emit(this.selectedOrgans);\n  }\n\n  /**\n   * Determines whether an icon represents a currently selected organ\n   *\n   * @param icon The icon of interest\n   * @returns true if selected\n   */\n  isSelected(organ: OrganInfo): boolean {\n    return this.selectedOrgans.includes(organ) ? true : false;\n  }\n\n  /**\n   * Disables scrolling if the list of organs is smaller than the container, otherwise sets onLeft and onRight as normal\n   */\n  set(): void {\n    const { itemList, itemContainer, carouselContainer } = this;\n    const val = parseInt(itemList.nativeElement.style.left, 10) || 0;\n    if (itemList.nativeElement.offsetWidth >= this.organList.length * this.step) {\n      itemList.nativeElement.style.left = '0px';\n      this.onLeft = true;\n      this.onRight = true;\n    } else {\n      this.setLeftRight(val);\n      const listLength = this.step * Math.floor(carouselContainer.nativeElement.offsetWidth / this.step) - 64;\n      itemContainer.nativeElement.style.width = `${listLength}px`;\n    }\n  }\n\n  /**\n   * Responsively sets width of the item container\n   */\n  setWidth(): void {\n    const { itemContainer, carouselContainer } = this;\n    const listLength = this.step * Math.floor(carouselContainer.nativeElement.offsetWidth / this.step) - 64;\n    itemContainer.nativeElement.style.width = `${listLength}px`;\n  }\n\n  /**\n   * Sets onLeft and onRight according to where the item list is scrolled\n   */\n  setLeftRight(val: number): void {\n    const { itemContainer } = this;\n    this.onLeft = val === 0 ? true : false;\n    this.onRight = val \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganSelectorModule.html":{"url":"modules/OrganSelectorModule.html","title":"module - OrganSelectorModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganSelectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrganSelectorModule\n\n\n\ncluster_OrganSelectorModule_declarations\n\n\n\ncluster_OrganSelectorModule_exports\n\n\n\n\nOrganSelectorComponent\n\nOrganSelectorComponent\n\n\n\nOrganSelectorModule\n\nOrganSelectorModule\n\nOrganSelectorModule -->\n\nOrganSelectorComponent->OrganSelectorModule\n\n\n\n\n\nOrganSelectorComponent \n\nOrganSelectorComponent \n\nOrganSelectorComponent  -->\n\nOrganSelectorModule->OrganSelectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/organ-selector/organ-selector.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OrganSelectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrganSelectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrganSelectorComponent } from './organ-selector.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [OrganSelectorComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatTooltipModule\n  ],\n  exports: [OrganSelectorComponent]\n})\nexport class OrganSelectorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluckUniqueOptions.html":{"url":"interfaces/PluckUniqueOptions.html","title":"interface - PluckUniqueOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PluckUniqueOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n        \n\n\n            \n                Description\n            \n            \n                Options for pluckUnique operator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            compare\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        compare\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        compare:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom comparison for determining distinct values\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { OperatorFunction } from 'rxjs';\nimport { distinctUntilChanged, pluck, shareReplay } from 'rxjs/operators';\n\n\n/**\n * Options for `pluckUnique` operator\n */\nexport interface PluckUniqueOptions {\n  /**\n   * Custom comparison for determining distinct values\n   */\n  compare?: (lhs: T, rhs: T) => boolean;\n}\n\n\n/**\n * Default options\n */\nconst DEFAULT_OPTIONS: PluckUniqueOptions = {};\n\n\n/**\n * Combines the functionaliy of `pluck` and `distinctUntilChanged`\n * as well as adding a `shareReplay`.\n *\n * @param {...string} props Properties to pluck\n * @param [opts] Additional options\n * @returns An `Observable` operator\n */\nexport function pluckUnique(k1: K1, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, k4: K4, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(...props: [string, ...string[]]): OperatorFunction;\nexport function pluckUnique(...props: [string, ...string[], PluckUniqueOptions]): OperatorFunction;\nexport function pluckUnique(...props: unknown[]): OperatorFunction {\n  const last = props[props.length - 1];\n  let keys = props as string[];\n  let opts = DEFAULT_OPTIONS;\n\n  if (typeof last === 'object') {\n    opts = last as PluckUniqueOptions;\n    keys = keys.slice(0, -1);\n  }\n\n  return source => source.pipe(\n    pluck(...keys),\n    distinctUntilChanged(opts.compare),\n    shareReplay(1)\n  );\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Segment.html":{"url":"interfaces/Segment.html","title":"interface - Segment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Segment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n        \n\n\n            \n                Description\n            \n            \n                A segment of text with additional classes and styles\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            styles\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Classes to add to the text container\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        styles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        styles:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Styles to set on the text container\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The piece of text to display\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { DecoratedRange, normalize } from './decorated-range';\n\n\n// Reexport DecoratedRange\nexport { DecoratedRange };\n\n/** A segment of text with additional classes and styles */\ninterface Segment {\n  /** The piece of text to display */\n  text: string;\n  /** Classes to add to the text container */\n  classes: string[];\n  /** Styles to set on the text container */\n  styles: Record;\n}\n\n/** Represents an operation to apply to the stack when building segments */\ninterface StackOp {\n  /** Text index at which the changes takes effect */\n  index: number;\n  /** Decorations to add */\n  added: DecoratedRange[];\n  /** Decorations to remove */\n  removed: DecoratedRange[];\n}\n\n\n/**\n * Class to display text with additional styling on ranges of the text.\n */\n@Component({\n  selector: 'ccf-decorated-text',\n  templateUrl: './decorated-text.component.html',\n  styleUrls: ['./decorated-text.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DecoratedTextComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-decorated-text';\n\n  /**\n   * Text to display\n   */\n  @Input() text: string;\n\n  /**\n   * Classes and styles to apply to ranges of the text.\n   * For overlapping ranges later values takes precedence.\n   */\n  @Input() decorations?: Partial[];\n\n  /**\n   * Computed segments of text with decorations resolved.\n   */\n  segments: Segment[] = [];\n\n  /**\n   * Apply changes and recalculate cached values.\n   *\n   * @param changes Instance properties that have changed\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('text' in changes || 'decorations' in changes) {\n      this.segments = this.createSegments();\n    }\n  }\n\n  /**\n   * Creates an array of decorated text segments based on\n   * the latest text and decorations.\n   *\n   * @returns The new segments\n   */\n  private createSegments(): Segment[] {\n    const { text } = this;\n    if (!text) { // No styling can be applied to empty text fields\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const decorations = this.getNormalizedDecorations();\n    if (decorations.length === 0) { // No styling available\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const stackOps = this.createStackOps(decorations);\n    const segments: Segment[] = [];\n    let stack: DecoratedRange[] = [];\n    let lastIndex = 0;\n\n    // If the first op starts at index zero apply stack changes\n    // but don't push a segment by shifing out the first op\n    if (stackOps[0].index === 0) {\n      stack = this.updateStack(stack, stackOps.shift() as StackOp);\n    }\n\n    // Build segments based on the stack operations\n    for (const op of stackOps) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex, op.index), stack\n      ));\n\n      lastIndex = op.index;\n      stack = this.updateStack(stack, op);\n    }\n\n    // Push the last segment if not already done\n    if (lastIndex !== text.length) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex), stack\n      ));\n    }\n\n    return segments;\n  }\n\n  /**\n   * Creates an ordered array of stack operations to apply when building segments.\n   *\n   * @param ranges The decorated ranges to apply\n   * @returns The array of operations\n   */\n  private createStackOps(ranges: DecoratedRange[]): StackOp[] {\n    const ops: Record = {};\n    const getOp = (index: number) => (ops[index] ??= { index, added: [], removed: [] });\n\n    for (const range of ranges) {\n      getOp(range.start).added.push(range);\n      getOp(range.end).removed.push(range);\n    }\n\n    return Object.entries(ops)\n      .sort((i1, i2) => +i1[0] - +i2[0]) // Sort by index\n      .map(entry => entry[1]);\n  }\n\n  /**\n   * Applies the stack changes specified by the stack operation.\n   *\n   * @param stack The current stack\n   * @param op The operation\n   * @returns The new stack\n   */\n  private updateStack(stack: DecoratedRange[], op: StackOp): DecoratedRange[] {\n    return stack\n      .filter(item => !op.removed.includes(item))\n      // Note - A new array is created by the above filter statement\n      // so it is safe to modify it with concat\n      .concat(op.added);\n  }\n\n  /**\n   * Normalizes and filters valid decorated ranges.\n   *\n   * @returns The normalized ranges with properties filled\n   */\n  private getNormalizedDecorations(): DecoratedRange[] {\n    const { decorations = [], text: { length } } = this;\n    return decorations\n      // Turn partials into full objects\n      .map(range => normalize(range, length))\n      // Remove empty and out of bounds ranges\n      .filter(range => range.start (\n      (result, range) => result.concat(range.classes),\n      []\n    );\n    const styles = decorations.reduce(\n      (result, range) => ({ ...result, ...range.styles }),\n      {}\n    );\n\n    return { text, classes, styles };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StackOp.html":{"url":"interfaces/StackOp.html","title":"interface - StackOp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StackOp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an operation to apply to the stack when building segments\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            added\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            removed\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        added\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        added:         DecoratedRange[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DecoratedRange[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Decorations to add\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text index at which the changes takes effect\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removed:         DecoratedRange[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DecoratedRange[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Decorations to remove\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { DecoratedRange, normalize } from './decorated-range';\n\n\n// Reexport DecoratedRange\nexport { DecoratedRange };\n\n/** A segment of text with additional classes and styles */\ninterface Segment {\n  /** The piece of text to display */\n  text: string;\n  /** Classes to add to the text container */\n  classes: string[];\n  /** Styles to set on the text container */\n  styles: Record;\n}\n\n/** Represents an operation to apply to the stack when building segments */\ninterface StackOp {\n  /** Text index at which the changes takes effect */\n  index: number;\n  /** Decorations to add */\n  added: DecoratedRange[];\n  /** Decorations to remove */\n  removed: DecoratedRange[];\n}\n\n\n/**\n * Class to display text with additional styling on ranges of the text.\n */\n@Component({\n  selector: 'ccf-decorated-text',\n  templateUrl: './decorated-text.component.html',\n  styleUrls: ['./decorated-text.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DecoratedTextComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-decorated-text';\n\n  /**\n   * Text to display\n   */\n  @Input() text: string;\n\n  /**\n   * Classes and styles to apply to ranges of the text.\n   * For overlapping ranges later values takes precedence.\n   */\n  @Input() decorations?: Partial[];\n\n  /**\n   * Computed segments of text with decorations resolved.\n   */\n  segments: Segment[] = [];\n\n  /**\n   * Apply changes and recalculate cached values.\n   *\n   * @param changes Instance properties that have changed\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('text' in changes || 'decorations' in changes) {\n      this.segments = this.createSegments();\n    }\n  }\n\n  /**\n   * Creates an array of decorated text segments based on\n   * the latest text and decorations.\n   *\n   * @returns The new segments\n   */\n  private createSegments(): Segment[] {\n    const { text } = this;\n    if (!text) { // No styling can be applied to empty text fields\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const decorations = this.getNormalizedDecorations();\n    if (decorations.length === 0) { // No styling available\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const stackOps = this.createStackOps(decorations);\n    const segments: Segment[] = [];\n    let stack: DecoratedRange[] = [];\n    let lastIndex = 0;\n\n    // If the first op starts at index zero apply stack changes\n    // but don't push a segment by shifing out the first op\n    if (stackOps[0].index === 0) {\n      stack = this.updateStack(stack, stackOps.shift() as StackOp);\n    }\n\n    // Build segments based on the stack operations\n    for (const op of stackOps) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex, op.index), stack\n      ));\n\n      lastIndex = op.index;\n      stack = this.updateStack(stack, op);\n    }\n\n    // Push the last segment if not already done\n    if (lastIndex !== text.length) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex), stack\n      ));\n    }\n\n    return segments;\n  }\n\n  /**\n   * Creates an ordered array of stack operations to apply when building segments.\n   *\n   * @param ranges The decorated ranges to apply\n   * @returns The array of operations\n   */\n  private createStackOps(ranges: DecoratedRange[]): StackOp[] {\n    const ops: Record = {};\n    const getOp = (index: number) => (ops[index] ??= { index, added: [], removed: [] });\n\n    for (const range of ranges) {\n      getOp(range.start).added.push(range);\n      getOp(range.end).removed.push(range);\n    }\n\n    return Object.entries(ops)\n      .sort((i1, i2) => +i1[0] - +i2[0]) // Sort by index\n      .map(entry => entry[1]);\n  }\n\n  /**\n   * Applies the stack changes specified by the stack operation.\n   *\n   * @param stack The current stack\n   * @param op The operation\n   * @returns The new stack\n   */\n  private updateStack(stack: DecoratedRange[], op: StackOp): DecoratedRange[] {\n    return stack\n      .filter(item => !op.removed.includes(item))\n      // Note - A new array is created by the above filter statement\n      // so it is safe to modify it with concat\n      .concat(op.added);\n  }\n\n  /**\n   * Normalizes and filters valid decorated ranges.\n   *\n   * @returns The normalized ranges with properties filled\n   */\n  private getNormalizedDecorations(): DecoratedRange[] {\n    const { decorations = [], text: { length } } = this;\n    return decorations\n      // Turn partials into full objects\n      .map(range => normalize(range, length))\n      // Remove empty and out of bounds ranges\n      .filter(range => range.start (\n      (result, range) => result.concat(range.classes),\n      []\n    );\n    const styles = decorations.reduce(\n      (result, range) => ({ ...result, ...range.styles }),\n      {}\n    );\n\n    return { text, classes, styles };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StoreDebugComponent.html":{"url":"components/StoreDebugComponent.html","title":"component - StoreDebugComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StoreDebugComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts\n\n\n\n    \n        Description\n    \n    \n        Simple component for displaying the current values in the data store.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-store-debug\n            \n\n            \n                styleUrls\n                ./store-debug.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./store-debug.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Private\n                                root\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:37\n                            \n                        \n\n                \n                    \n                            Creates an instance of store debug component.\nSets up the store data listeners.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The data store.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Change detection for this component.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-store-debug\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-store-debug'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:58\n                \n            \n\n\n            \n                \n                    Cleans up subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-store-debug'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record>\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:34\n                        \n                    \n\n            \n                \n                    Latest store data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:37\n                        \n                    \n\n            \n                \n                    Subscriptions managed by this component\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:26\n                                \n                            \n                    \n                        \n                                Gets the store data as a list of state name to key-value pairs\n\n\n                                \n                                    Returns :         KVList\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnDestroy, ChangeDetectorRef, HostBinding } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { Subscription } from 'rxjs';\n\n/** Key-Value pair */\nexport type KVPair = [string, T];\n/** Array of Key-Value pairs */\nexport type KVList = KVPair[];\n\n/**\n * Simple component for displaying the current values in the data store.\n */\n@Component({\n  selector: 'ccf-store-debug',\n  templateUrl: './store-debug.component.html',\n  styleUrls: ['./store-debug.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StoreDebugComponent implements OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-store-debug';\n\n  /**\n   * Gets the store data as a list of state name to key-value pairs\n   */\n  get data(): KVList {\n    const states: KVList> = Object.entries(this.root);\n    const stateValues: KVList = states.map(([key, values]) => [key, Object.entries(values)]);\n    const statesWithData = stateValues.filter(([_key, values]) => values.length > 0);\n    return statesWithData;\n  }\n\n  /** Latest store data */\n  private root: Record> = {};\n\n  /** Subscriptions managed by this component */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of store debug component.\n   * Sets up the store data listeners.\n   *\n   * @param store The data store.\n   * @param cdr Change detection for this component.\n   */\n  constructor(store: Store, cdr: ChangeDetectorRef) {\n    const sub = store.subscribe(root => {\n      this.root = root as Record>;\n      cdr.markForCheck();\n    });\n\n    this.subscriptions.add(sub);\n  }\n\n  /**\n   * Cleans up subscriptions\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  {{ state[0] }}\n  \n    \n      {{ kv[0] }}: {{ kv[1] | json }}\n    \n  \n\n\n    \n\n    \n                \n                    ./store-debug.component.scss\n                \n                :host {\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ state[0] }}            {{ kv[0] }}: {{ kv[1] | json }}      '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'StoreDebugComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreDebugModule.html":{"url":"modules/StoreDebugModule.html","title":"module - StoreDebugModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreDebugModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StoreDebugModule\n\n\n\ncluster_StoreDebugModule_declarations\n\n\n\ncluster_StoreDebugModule_exports\n\n\n\n\nStoreDebugComponent\n\nStoreDebugComponent\n\n\n\nStoreDebugModule\n\nStoreDebugModule\n\nStoreDebugModule -->\n\nStoreDebugComponent->StoreDebugModule\n\n\n\n\n\nStoreDebugComponent \n\nStoreDebugComponent \n\nStoreDebugComponent  -->\n\nStoreDebugModule->StoreDebugComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/store-debug/store-debug.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StoreDebugComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StoreDebugComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StoreDebugComponent } from './store-debug.component';\n\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [StoreDebugComponent],\n  exports: [StoreDebugComponent]\n})\nexport class StoreDebugModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextSearchComponent.html":{"url":"components/TextSearchComponent.html","title":"component - TextSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n\n\n\n    \n        Description\n    \n    \n        A text search bar with optional autocompletion functionality.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-text-search\n            \n\n            \n                styleUrls\n                ./text-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Readonly\n                                controller\n                            \n                            \n                                    Readonly\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                getOptions\n                            \n                            \n                                optionDisplay\n                            \n                            \n                                optionId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoCompleter\n                            \n                            \n                                maxOptions\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                optionSelected\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultMaxOptions: number)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:100\n                            \n                        \n\n                \n                    \n                            Creates an instance of text search component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultMaxOptions\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The default value for maxOptions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoCompleter\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:76\n                            \n                        \n                \n                    \n                        Function providing the autocomplete suggestions.\nReceives the latest search bar text and the maximum of suggestions to provide.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxOptions\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:70\n                            \n                        \n                \n                    \n                        Maximum number of autocomplete suggestions to show simultaneously\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Search...'\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:53\n                            \n                        \n                \n                    \n                        Placeholder text for the search bar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:59\n                            \n                        \n                \n                    \n                        The text to show on the search bar\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        optionSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:86\n                            \n                        \n                \n                    \n                        Emits when an autocomplete option has been selected\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:81\n                            \n                        \n                \n                    \n                        Emits when the search bar text changes\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-text-search\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-text-search'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:48\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(search: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:120\n                \n            \n\n\n            \n                \n                    Fetches the latest autocomplete suggestions for the provided search text.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    search\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The search text to find suggestions for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The found suggestions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionDisplay\n                        \n                    \n                \n            \n            \n                \noptionDisplay(option: AutoCompleteOption | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:139\n                \n            \n\n\n            \n                \n                    Text to show in search bar when an autocomplete option is selected.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                AutoCompleteOption | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The autocomplete option\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The displayed text\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionId\n                        \n                    \n                \n            \n            \n                \noptionId(_index: number, option: AutoCompleteOption)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:150\n                \n            \n\n\n            \n                \n                    Gets an unique identifier for an autocomplete option object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Unused\n\n                                    \n                                \n                                \n                                    option\n                                    \n                                                AutoCompleteOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The option object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-text-search'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:48\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        controller\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:91\n                        \n                    \n\n            \n                \n                    Form controller for search bar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (this.controller.valueChanges as Observable).pipe(\n    startWith(''),\n    distinctUntilChanged(),\n    switchMap(this.getOptions)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:96\n                        \n                    \n\n            \n                \n                    Emits the latest autocomplete suggestions\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:59\n                                \n                            \n                    \n                        \n                                The text to show on the search bar\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:63\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Inject, InjectionToken, Input, Output,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { bind as Bind } from 'bind-decorator';\nimport { from, Observable, ObservableInput } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, switchMap, take } from 'rxjs/operators';\n\nimport { DecoratedRange } from '../decorated-text/decorated-range';\n\n\n/** A single suggestion to show in autocomplete  */\nexport interface AutoCompleteOption {\n  /** A unique id */\n  id: unknown;\n  /** The displayed label */\n  label: string;\n  /** Optional styling of the label */\n  decorations?: Partial[];\n}\n\n/**\n * Token to provide a default for the maximum number of\n * autocomplete suggestions to show at the same time.\n */\nexport const DEFAULT_MAX_OPTIONS = new InjectionToken(\n  'Maximum number of autocomplete options displayed',\n  {\n    providedIn: 'root',\n    factory(): number {\n      return 10;\n    }\n  }\n);\n\n\n/**\n * A text search bar with optional autocompletion functionality.\n */\n@Component({\n  selector: 'ccf-text-search',\n  templateUrl: './text-search.component.html',\n  styleUrls: ['./text-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TextSearchComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-text-search';\n\n  /**\n   * Placeholder text for the search bar\n   */\n  @Input() placeholder = 'Search...';\n\n  /**\n   * The text to show on the search bar\n   */\n  @Input()\n  get value(): string {\n    return this.controller.value as string;\n  }\n\n  set value(val: string) {\n    this.controller.setValue(val, { emitEvent: false });\n  }\n\n  /**\n   * Maximum number of autocomplete suggestions to show simultaneously\n   */\n  @Input() maxOptions?: number;\n\n  /**\n   * Function providing the autocomplete suggestions.\n   * Receives the latest search bar text and the maximum of suggestions to provide.\n   */\n  @Input() autoCompleter?: (search: string, max: number) => ObservableInput;\n\n  /**\n   * Emits when the search bar text changes\n   */\n  @Output() readonly valueChange: Observable;\n\n  /**\n   * Emits when an autocomplete option has been selected\n   */\n  @Output() readonly optionSelected = new EventEmitter();\n\n  /**\n   * Form controller for search bar\n   */\n  readonly controller = new FormControl();\n\n  /**\n   * Emits the latest autocomplete suggestions\n   */\n  readonly options = (this.controller.valueChanges as Observable).pipe(\n    startWith(''),\n    distinctUntilChanged(),\n    switchMap(this.getOptions)\n  );\n\n  /**\n   * Creates an instance of text search component.\n   *\n   * @param defaultMaxOptions The default value for `maxOptions`\n   */\n  constructor(\n    @Inject(DEFAULT_MAX_OPTIONS) private readonly defaultMaxOptions: number\n  ) {\n    this.valueChange = this.controller.valueChanges;\n  }\n\n  /**\n   * Fetches the latest autocomplete suggestions for the provided search text.\n   *\n   * @param search The search text to find suggestions for\n   * @returns The found suggestions\n   */\n  @Bind\n  private async getOptions(search: string): Promise {\n    const { autoCompleter, maxOptions = this.defaultMaxOptions } = this;\n    if (!autoCompleter || maxOptions  array.length \n    \n\n    \n        \n  \n    \n      \n    \n\n    \n\n    \n      \n        \n        \n      \n    \n\n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./text-search.component.scss\n                \n                :host {\n  display: block;\n\n  .form .form-field {\n    width: 100%;\n\n    .input {\n      margin-left: 0.5rem;\n    }\n  }\n\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-wrapper {\n      margin: 0;\n\n      .mat-form-field-flex {\n        align-items: center;\n\n        .mat-form-field-infix {\n          height: 3rem;\n          border: none;\n        }\n\n        .mat-form-field-suffix {\n          top: 0;\n          border: none;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TextSearchModule.html":{"url":"modules/TextSearchModule.html","title":"module - TextSearchModule","body":"\n                   \n\n\n\n\n    Modules\n    TextSearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TextSearchModule\n\n\n\ncluster_TextSearchModule_declarations\n\n\n\ncluster_TextSearchModule_imports\n\n\n\ncluster_TextSearchModule_exports\n\n\n\n\nTextSearchComponent\n\nTextSearchComponent\n\n\n\nTextSearchModule\n\nTextSearchModule\n\nTextSearchModule -->\n\nTextSearchComponent->TextSearchModule\n\n\n\n\n\nMatPrefix \n\nMatPrefix \n\nMatPrefix  -->\n\nTextSearchModule->MatPrefix \n\n\n\n\n\nMatSuffix \n\nMatSuffix \n\nMatSuffix  -->\n\nTextSearchModule->MatSuffix \n\n\n\n\n\nTextSearchComponent \n\nTextSearchComponent \n\nTextSearchComponent  -->\n\nTextSearchModule->TextSearchComponent \n\n\n\n\n\nDecoratedTextModule\n\nDecoratedTextModule\n\nTextSearchModule -->\n\nDecoratedTextModule->TextSearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/text-search/text-search.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TextSearchComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DecoratedTextModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MatPrefix\n                        \n                        \n                            MatSuffix\n                        \n                        \n                            TextSearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule, MatPrefix, MatSuffix } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { DecoratedTextModule } from '../decorated-text/decorated-text.module';\nimport { TextSearchComponent } from './text-search.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n\n    DecoratedTextModule\n  ],\n  declarations: [TextSearchComponent],\n  exports: [\n    TextSearchComponent,\n\n    // Reexport prefix/suffix markers\n    MatPrefix,\n    MatSuffix\n  ]\n})\nexport class TextSearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrackingPopupComponent.html":{"url":"components/TrackingPopupComponent.html","title":"component - TrackingPopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TrackingPopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-tracking-popup\n            \n\n            \n                styleUrls\n                ./tracking-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tracking-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                container\n                            \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                            \n                                showButton\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    allowTelemetry\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, consentService: ConsentService, data: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-tracking-popup\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tracking-popup'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showButton\n                        \n                    \n                \n            \n            \n                \nshowButton(button: \"opt-in\" | \"opt-out\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    button\n                                    \n                                            \"opt-in\" | \"opt-out\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit(entry: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tracking-popup'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_SNACK_BAR_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        allowTelemetry\n                    \n                \n\n                \n                    \n                        getallowTelemetry()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:15\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\nimport { ConsentService, Consent } from 'ccf-shared/analytics';\n\n\n@Component({\n  selector: 'ccf-tracking-popup',\n  templateUrl: './tracking-popup.component.html',\n  styleUrls: ['./tracking-popup.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TrackingPopupComponent {\n  @HostBinding('class') readonly clsName = 'ccf-tracking-popup';\n\n  get allowTelemetry(): Consent {\n    return this.consentService.consent;\n  }\n\n  container: HTMLElement;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  constructor(elementRef: ElementRef, readonly consentService: ConsentService, @Inject(MAT_SNACK_BAR_DATA) public data: any) {\n    this.container = elementRef.nativeElement;\n  }\n\n  dismiss(): void {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    this.data.preClose();\n  }\n\n  submit(entry: boolean): void {\n    this.consentService.setConsent(entry ? 'given' : 'rescinded');\n    this.dismiss();\n  }\n\n  showButton(button: 'opt-in' | 'opt-out'): boolean {\n    const { allowTelemetry } = this;\n    if (allowTelemetry === 'not-set') {\n      return true;\n    } else {\n      return button === 'opt-in' ? allowTelemetry === 'rescinded' : allowTelemetry === 'given';\n    }\n  }\n}\n\n    \n\n    \n        We log usage to improve this service.\n\n  {{allowTelemetry === 'not-set' ? 'I understand' : 'Opt in'}}\n\nOpt out\n    \n\n    \n                \n                    ./tracking-popup.component.scss\n                \n                :host {\n  display: flex;\n  align-items: center;\n  min-width: 400px;\n  color: rgba(255, 255, 255, 0.7);\n  background: #323232;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n  z-index: 9999;\n\n  p {\n    margin: 24px;\n  }\n\n  button {\n    margin: 1rem;\n    min-width: 6rem;\n    background-color: #007cbe;\n    display: flex;\n    justify-content: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'We log usage to improve this service.  {{allowTelemetry === \\'not-set\\' ? \\'I understand\\' : \\'Opt in\\'}}Opt out'\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'TrackingPopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrackingPopupModule.html":{"url":"modules/TrackingPopupModule.html","title":"module - TrackingPopupModule","body":"\n                   \n\n\n\n\n    Modules\n    TrackingPopupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TrackingPopupModule\n\n\n\ncluster_TrackingPopupModule_exports\n\n\n\ncluster_TrackingPopupModule_declarations\n\n\n\n\nTrackingPopupComponent\n\nTrackingPopupComponent\n\n\n\nTrackingPopupModule\n\nTrackingPopupModule\n\nTrackingPopupModule -->\n\nTrackingPopupComponent->TrackingPopupModule\n\n\n\n\n\nTrackingPopupComponent \n\nTrackingPopupComponent \n\nTrackingPopupComponent  -->\n\nTrackingPopupModule->TrackingPopupComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TrackingPopupComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TrackingPopupComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TrackingPopupComponent } from './tracking-popup.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule\n  ],\n  declarations: [TrackingPopupComponent],\n  exports: [TrackingPopupComponent]\n})\nexport class TrackingPopupModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TrackingState.html":{"url":"injectables/TrackingState.html","title":"injectable - TrackingState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TrackingState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/analytics/tracking.state.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setAllowTelemetry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setAllowTelemetry\n                        \n                    \n                \n            \n            \n                \nsetAllowTelemetry(allowTelemetry: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/analytics/tracking.state.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    allowTelemetry\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\n\nexport interface TrackingStateModel {\n  allowTelemetry?: boolean;\n}\n\nexport const LOCAL_STORAGE_ALLOW_TELEMETRY_KEY = 'ALLOW_TELEMETRY';\nexport const INITIAL_TELEMETRY_SETTING = getTelemetryStorageSetting();\n\nfunction getTelemetryStorageSetting(): boolean | undefined {\n  const value = localStorage.getItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY);\n  return value === null ? undefined : value.toLowerCase() === 'true';\n}\n\n@StateRepository()\n@State({\n  name: 'tracking',\n  defaults: {\n    allowTelemetry: INITIAL_TELEMETRY_SETTING\n  }\n})\n@Injectable()\nexport class TrackingState extends NgxsImmutableDataRepository {\n  @DataAction()\n  setAllowTelemetry(allowTelemetry: boolean): void {\n    const oldValue = getTelemetryStorageSetting();\n    localStorage.setItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY, allowTelemetry.toString());\n    this.ctx.patchState({ allowTelemetry });\n\n    if (oldValue !== undefined || allowTelemetry === false) {\n      // This ensures that if telemetry is disabled that it _WONT_ send anything to Google Analytics\n      location.reload();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrackingStateModel.html":{"url":"interfaces/TrackingStateModel.html","title":"interface - TrackingStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TrackingStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/analytics/tracking.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            allowTelemetry\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowTelemetry\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowTelemetry:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\n\nexport interface TrackingStateModel {\n  allowTelemetry?: boolean;\n}\n\nexport const LOCAL_STORAGE_ALLOW_TELEMETRY_KEY = 'ALLOW_TELEMETRY';\nexport const INITIAL_TELEMETRY_SETTING = getTelemetryStorageSetting();\n\nfunction getTelemetryStorageSetting(): boolean | undefined {\n  const value = localStorage.getItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY);\n  return value === null ? undefined : value.toLowerCase() === 'true';\n}\n\n@StateRepository()\n@State({\n  name: 'tracking',\n  defaults: {\n    allowTelemetry: INITIAL_TELEMETRY_SETTING\n  }\n})\n@Injectable()\nexport class TrackingState extends NgxsImmutableDataRepository {\n  @DataAction()\n  setAllowTelemetry(allowTelemetry: boolean): void {\n    const oldValue = getTelemetryStorageSetting();\n    localStorage.setItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY, allowTelemetry.toString());\n    this.ctx.patchState({ allowTelemetry });\n\n    if (oldValue !== undefined || allowTelemetry === false) {\n      // This ensures that if telemetry is disabled that it _WONT_ send anything to Google Analytics\n      location.reload();\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkerCCFDatabaseDataSourceService.html":{"url":"injectables/WorkerCCFDatabaseDataSourceService.html","title":"injectable - WorkerCCFDatabaseDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WorkerCCFDatabaseDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CCFDatabaseDataSourceBaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                database$\n                            \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createDatabase\n                            \n                            \n                                    Protected\n                                    Abstract\n                                createWorker\n                            \n                            \n                                    Private\n                                    Async\n                                connectDatabase\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDatabase(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:65\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CCFDatabaseManager\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        createWorker\n                        \n                    \n                \n            \n            \n                \n                    \n                    createWorker(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Worker\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        connectDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectDatabase(manager: CCFDatabaseManager, config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    manager\n                                    \n                                                CCFDatabaseManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        database$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         CCFDatabaseDataSourceBaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         CCFDatabaseDataSourceBaseService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/XYZTriplet.html":{"url":"interfaces/XYZTriplet.html","title":"interface - XYZTriplet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  XYZTriplet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/body-ui/body-ui.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                                \n                                        \n                                            z\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit, Component, ElementRef, EventEmitter, HostBinding, Input, OnDestroy, Output, ViewChild,\n} from '@angular/core';\nimport { BodyUI, NodeClickEvent, NodeDragEvent, SpatialSceneNode } from 'ccf-body-ui';\nimport { Subscription } from 'rxjs';\n\n\ninterface XYZTriplet {\n  x: T;\n  y: T;\n  z: T;\n}\n\n/**\n * Component that handles displaying the 3D models in the stage\n */\n@Component({\n  selector: 'ccf-body-ui',\n  templateUrl: './body-ui.component.html',\n  styleUrls: ['./body-ui.component.scss']\n})\nexport class BodyUiComponent implements AfterViewInit, OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-body-ui';\n\n  @Input()\n  get scene(): SpatialSceneNode[] {\n    return this._scene;\n  }\n\n  set scene(nodes: SpatialSceneNode[]) {\n    this._scene = nodes;\n    this.bodyUI?.setScene(nodes);\n  }\n\n  @Input()\n  get rotation(): number {\n    return this._rotation;\n  }\n\n  set rotation(value: number) {\n    this._rotation = value;\n    this.bodyUI?.setRotation(value);\n  }\n\n  @Input()\n  get rotationX(): number {\n    return this._rotationX;\n  }\n\n  set rotationX(value: number) {\n    this._rotationX = value;\n    this.bodyUI?.setRotationX(value);\n  }\n\n  @Input()\n  get zoom(): number {\n    return this._zoom;\n  }\n\n  set zoom(value: number) {\n    this._zoom = value;\n    this.bodyUI?.setZoom(value);\n  }\n\n  @Input()\n  get target(): [number, number, number] {\n    return this._target;\n  }\n\n  set target(value: [number, number, number]) {\n    this._target = value;\n    this.bodyUI?.setTarget(value);\n  }\n\n  @Input()\n  get bounds(): XYZTriplet {\n    return this._bounds;\n  }\n\n  set bounds(value: XYZTriplet) {\n    this._bounds = value;\n    this.zoomToBounds(value);\n  }\n\n  @Input()\n  get camera(): string {\n    return this._camera;\n  }\n\n  set camera(value: string) {\n    this._camera = value;\n  }\n\n  @Output()\n  readonly rotationChange = new EventEmitter();\n\n  @Output()\n  readonly nodeDrag = new EventEmitter();\n\n  @Output()\n  readonly nodeClick = new EventEmitter();\n\n  @Output()\n  readonly nodeHoverStart = new EventEmitter();\n\n  @Output()\n  readonly nodeHoverStop = new EventEmitter();\n\n  @Output()\n  readonly initialized = new EventEmitter();\n\n  @Input()\n  get interactive(): boolean {\n    return this._interactive;\n  }\n\n  set interactive(value: boolean) {\n    this._interactive = value;\n    if (this.bodyUI) {\n      this.recreateBodyUI();\n    }\n  }\n\n  private _interactive = true;\n  private _rotation = 0;\n  private _rotationX = 0;\n  private _zoom = 9.5;\n  private _target: [number, number, number] = [0, 0, 0];\n  private _bounds: XYZTriplet;\n  private _scene: SpatialSceneNode[] = [];\n  private subscriptions: Subscription[] = [];\n  private _camera: string;\n\n  /**\n   * Instance of the body UI class for rendering the deckGL scene\n   */\n  bodyUI: BodyUI;\n\n  /**\n   * Reference to the div we are using to mount the body UI to.\n   */\n  @ViewChild('bodyCanvas', { read: ElementRef }) bodyCanvas: ElementRef;\n\n  /**\n   * Performs setup required after initialization\n   */\n  ngAfterViewInit(): void {\n    this.setupBodyUI();\n  }\n\n  zoomToBounds(bounds: XYZTriplet, margin = { x: 48, y: 48 }): void {\n    if (this.bodyCanvas) {\n      const { width, height } = this.bodyCanvas.nativeElement;\n      const pxRatio = window.devicePixelRatio;\n      const zoom = Math.min(\n        Math.log2((width - margin.x) / pxRatio / bounds.x),\n        Math.log2((height - margin.y) / pxRatio / bounds.y)\n      );\n      this.zoom = zoom;\n    }\n  }\n\n  /**\n   * Set up required to render the body UI with the scene nodes.\n   */\n  private async setupBodyUI(): Promise {\n    const canvas = this.bodyCanvas.nativeElement;\n    const bodyUI = new BodyUI({\n      id: 'body-ui',\n      canvas,\n      zoom: this.zoom,\n      target: [0, 0, 0],\n      rotation: 0,\n      minRotationX: -75,\n      maxRotationX: 75,\n      interactive: this.interactive,\n      camera: this.camera\n    });\n    canvas.addEventListener('contextmenu', evt => evt.preventDefault());\n    await bodyUI.initialize();\n    this.bodyUI = bodyUI;\n    (window as unknown as { bodyUI: unknown }).bodyUI = bodyUI;\n    if (this.scene?.length > 0) {\n      this.bodyUI.setScene(this.scene);\n    }\n    if (this.bounds) {\n      this.zoomToBounds(this.bounds);\n    }\n    this.subscriptions = [\n      this.bodyUI.sceneRotation$.subscribe((rotation) => this.rotationChange.next(rotation)),\n      this.bodyUI.nodeDrag$.subscribe((event) => this.nodeDrag.emit(event)),\n      this.bodyUI.nodeClick$.subscribe((event) => this.nodeClick.emit(event)),\n      this.bodyUI.nodeHoverStart$.subscribe((event) => this.nodeHoverStart.emit(event)),\n      this.bodyUI.nodeHoverStop$.subscribe((event) => this.nodeHoverStop.emit(event))\n    ];\n    this.initialized.emit();\n  }\n\n  private recreateBodyUI(): void {\n    this.clearSubscriptions();\n    this.bodyUI.finalize();\n    this.setupBodyUI();\n  }\n\n  private clearSubscriptions(): void {\n    this.subscriptions.forEach(s => s.unsubscribe());\n    this.subscriptions = [];\n  }\n\n  ngOnDestroy(): void {\n    this.clearSubscriptions();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Common Coordinate Framework (CCF) User Interfaces\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            interface\n            AnalyticsOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            function\n            initCommands\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            function\n            toAttributes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            variable\n            EAGERLY_LOADED_SERVICES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/consent.service.ts\n            \n            injectable\n            ConsentService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts\n            \n            injectable\n            GoogleAnalyticsSyncService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n            \n            injectable\n            LocalStorageSyncService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n            \n            variable\n            LOCAL_STORAGE_CONSENT_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/filter-nulls.ts\n            \n            function\n            filterNulls\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/flatten.ts\n            \n            function\n            flatten\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/inner-map.ts\n            \n            function\n            innerMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            interface\n            PluckUniqueOptions\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            variable\n            DEFAULT_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/src/public-api.ts\n            \n            variable\n            placeholder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/mouse-position-tracker.module.ts\n            \n            function\n            trackMousePosition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            injectable\n            TrackingState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            interface\n            TrackingStateModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            function\n            getTelemetryStorageSetting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            variable\n            INITIAL_TELEMETRY_SETTING\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            variable\n            LOCAL_STORAGE_ALLOW_TELEMETRY_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/body-ui/body-ui.component.ts\n            \n            component\n            BodyUiComponent\n            \n                20 %\n                (7/34)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/body-ui/body-ui.component.ts\n            \n            interface\n            XYZTriplet\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n            \n            interface\n            DecoratedRange\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n            \n            function\n            normalize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n            \n            function\n            resolveIndex\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n            \n            component\n            DecoratedTextComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n            \n            interface\n            Segment\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n            \n            interface\n            StackOp\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts\n            \n            component\n            InfoButtonComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n            \n            injectable\n            InfoButtonService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n            \n            interface\n            DocumentationContent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n            \n            variable\n            documentationURL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n            \n            component\n            InfoDialogComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n            \n            interface\n            InfoDialogData\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts\n            \n            component\n            OpacitySliderComponent\n            \n                78 %\n                (11/14)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            component\n            OrganSelectorComponent\n            \n                76 %\n                (23/30)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            interface\n            OrganInfo\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            variable\n            ALL_ORGANS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            variable\n            ALL_POSSIBLE_ORGANS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts\n            \n            component\n            StoreDebugComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n            \n            component\n            TextSearchComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n            \n            interface\n            AutoCompleteOption\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n            \n            variable\n            DEFAULT_MAX_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts\n            \n            component\n            TrackingPopupComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/config/global-config.state.ts\n            \n            injectable\n            GlobalConfigState\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts\n            \n            directive\n            NumberDirective\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            injectable\n            ApiEndpointDataSourceService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            interface\n            ApiEndpointDataSourceOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            interface\n            DefaultParams\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            interface\n            FilterParams\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            cast\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            filterToParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            rangeToMinMax\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            spatialSceneNodeReviver\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            variable\n            buster$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            variable\n            CACHE_CONFIG_NO_PARAMS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            variable\n            CACHE_CONFIG_PARAMS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            injectable\n            CCFDatabaseDataSourceBaseService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            injectable\n            CCFDatabaseDataSourceService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            injectable\n            WorkerCCFDatabaseDataSourceService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            interface\n            CCFDatabaseManager\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.service.ts\n            \n            injectable\n            DataSourceService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.ts\n            \n            class\n            DelegateDataSource\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.ts\n            \n            class\n            ForwardingDataSource\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.ts\n            \n            interface\n            DataSource\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts\n            \n            injectable\n            InjectorDelegateDataSourceService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/globals/globals.service.ts\n            \n            injectable\n            GlobalsService\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/globals/globals.service.ts\n            \n            variable\n            global\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/common : ^15.126.1\n        \n            @angular/animations : ^12.1.1\n        \n            @angular/cdk : ^12.1.1\n        \n            @angular/common : ^12.1.1\n        \n            @angular/compiler : ^12.1.1\n        \n            @angular/core : ^12.1.1\n        \n            @angular/elements : ^12.1.1\n        \n            @angular/forms : ^12.1.1\n        \n            @angular/material : ^12.1.3\n        \n            @angular/platform-browser : ^12.1.1\n        \n            @angular/platform-browser-dynamic : ^12.1.1\n        \n            @angular/router : ^12.1.1\n        \n            @angular/youtube-player : ^12.1.1\n        \n            @comunica/query-sparql-rdfjs : ^2.2.0\n        \n            @deck.gl/core : ^8.5.7\n        \n            @deck.gl/geo-layers : ^8.7.8\n        \n            @deck.gl/layers : ^8.5.7\n        \n            @deck.gl/mesh-layers : ^8.5.7\n        \n            @loaders.gl/core : ^3.0.12\n        \n            @loaders.gl/draco : ^3.0.12\n        \n            @loaders.gl/gltf : ^3.0.12\n        \n            @luma.gl/core : ^8.5.7\n        \n            @math.gl/core : ^3.5.5\n        \n            @math.gl/culling : ^3.5.7\n        \n            @ngxs-labs/data : ^6.2.0\n        \n            @ngxs/logger-plugin : ^3.7.1\n        \n            @ngxs/storage-plugin : ^3.7.1\n        \n            @ngxs/store : ^3.7.3\n        \n            @rdfjs/data-model : ^1.2.0\n        \n            @types/lru-cache : \n        \n            @webcomponents/webcomponentsjs : ^2.5.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.19.0\n        \n            cannon-es : ^0.18.0\n        \n            comlink : ^4.3.0\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.7.2\n        \n            dotenv : ^16.0.0\n        \n            express : ^4.17.1\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^10.0.0\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^4.6.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.0.1\n        \n            jsonld : ^5.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : \n        \n            n3 : ^1.16.0\n        \n            ng5-slider : ^1.2.6\n        \n            ngx-google-analytics : ^11.2.1\n        \n            ngx-markdown : ^12.0.1\n        \n            node-fetch : ^2.6.7\n        \n            qs : ^6.10.2\n        \n            rdf-literal : ^1.2.0\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^3.6.0\n        \n            rxjs : ^6.6.7\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^6.5.1\n        \n            ts-cacheable : ^1.0.6\n        \n            tslib : ^2.1.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cast   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            filterNulls   (projects/.../filter-nulls.ts)\n                        \n                        \n                            filterToParams   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            flatten   (projects/.../flatten.ts)\n                        \n                        \n                            getTelemetryStorageSetting   (projects/.../tracking.state.ts)\n                        \n                        \n                            initCommands   (projects/.../analytics.module.ts)\n                        \n                        \n                            innerMap   (projects/.../inner-map.ts)\n                        \n                        \n                            normalize   (projects/.../decorated-range.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            rangeToMinMax   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            resolveIndex   (projects/.../decorated-range.ts)\n                        \n                        \n                            spatialSceneNodeReviver   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            toAttributes   (projects/.../analytics.module.ts)\n                        \n                        \n                            trackMousePosition   (projects/.../mouse-position-tracker.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cast\n                        \n                    \n                \n            \n            \n                \ncast()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterToParams\n                        \n                    \n                \n            \n            \n                \nfilterToParams(filter?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterParams\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rangeToMinMax\n                        \n                    \n                \n            \n            \n                \nrangeToMinMax(range, low, high)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    range\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    low\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    high\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinMax | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spatialSceneNodeReviver\n                        \n                    \n                \n            \n            \n                \nspatialSceneNodeReviver(nodes)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/filter-nulls.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        filterNulls\n                        \n                    \n                \n            \n            \n                \nfilterNulls()\n                \n            \n\n\n\n\n            \n                \n                    Removes all null and undefined values from a stream.\n\n\n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/flatten.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        flatten\n                        \n                    \n                \n            \n            \n                \nflatten()\n                \n            \n\n\n\n\n            \n                \n                    Flattens a single level of nested arrays.\n\n\n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/src/lib/analytics/tracking.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getTelemetryStorageSetting\n                        \n                    \n                \n            \n            \n                \ngetTelemetryStorageSetting()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     boolean | undefined\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/analytics/src/lib/analytics.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initCommands\n                        \n                    \n                \n            \n            \n                \ninitCommands(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     IGoogleAnalyticsCommand[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toAttributes\n                        \n                    \n                \n            \n            \n                \ntoAttributes(obj)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/inner-map.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        innerMap\n                        \n                    \n                \n            \n            \n                \ninnerMap(project)\n                \n            \n\n\n\n\n            \n                \n                    Maps the values of each emitted array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    project\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Mapping callback invoked for each element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        normalize\n                        \n                    \n                \n            \n            \n                \nnormalize(range, length)\n                \n            \n\n\n\n\n            \n                \n                    Produces a new range object based on the input where all properties have been normalized.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    range\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object to normalize.\n\n                                    \n                                \n                                \n                                    length\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Max length for indices.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DecoratedRange\n\n                    \n                    \n                        A new object where all undefined values have been replaced with defaults and\nwhere all indices have been constrained to the range [0, length].\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveIndex\n                        \n                    \n                \n            \n            \n                \nresolveIndex(index, length)\n                \n            \n\n\n\n\n            \n                \n                    Resolves and normalizes an index for indexing into an array of length length.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The index value to resolve. May be negative indicating an index from end.\n\n                                    \n                                \n                                \n                                    length\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The length of the object on which this index will be used.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        A positive index in range [0, length]\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, opts?)\n                \n            \n\n\n\n\n            \n                \n                    Combines the functionaliy of pluck and distinctUntilChanged\nas well as adding a shareReplay.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Additional options\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, k3, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, k3, k4, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k4\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, k3, k4, k5, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k4\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k5\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, k3, k4, k5, k6, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k4\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k5\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k6\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(...props: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(...props: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(...props: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-shared/src/lib/analytics/mouse-position-tracker.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        trackMousePosition\n                        \n                    \n                \n            \n            \n                \ntrackMousePosition(el, ga)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ga\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCommon Coordinate Framework (CCF) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the CCF-EUI, CCF-RUI, and CCF-Organ-Info.\nWebsite Links\n\nCCF Exploration User Interface (CCF-EUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nCCF Registration User Interface (CCF-RUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nCCF Organ Info Component (CCF-Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nCCF API\nProduction: https://ccf-api.hubmapconsortium.org\nStaging: https://ccf-api--staging.herokuapp.com\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nCCF API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\n\nBackground and More Information\nFor more information about the Common Coordinate Framework (CCF), see the HuBMAP CCF Portal at https://hubmapconsortium.github.io/ccf/.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AnalyticsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BodyUiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DecoratedTextModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoDialogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MousePositionTrackerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NumbersOnlyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpacitySliderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganSelectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreDebugModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TextSearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrackingPopupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AnalyticsModule\n\n\n\ncluster_AnalyticsModule_providers\n\n\n\ncluster_BodyUiModule\n\n\n\ncluster_BodyUiModule_declarations\n\n\n\ncluster_BodyUiModule_exports\n\n\n\ncluster_DecoratedTextModule\n\n\n\ncluster_DecoratedTextModule_declarations\n\n\n\ncluster_DecoratedTextModule_exports\n\n\n\ncluster_InfoButtonModule\n\n\n\ncluster_InfoButtonModule_declarations\n\n\n\ncluster_InfoButtonModule_imports\n\n\n\ncluster_InfoButtonModule_exports\n\n\n\ncluster_InfoDialogModule\n\n\n\ncluster_InfoDialogModule_declarations\n\n\n\ncluster_InfoDialogModule_exports\n\n\n\ncluster_NumbersOnlyModule\n\n\n\ncluster_NumbersOnlyModule_declarations\n\n\n\ncluster_NumbersOnlyModule_exports\n\n\n\ncluster_OpacitySliderModule\n\n\n\ncluster_OpacitySliderModule_declarations\n\n\n\ncluster_OpacitySliderModule_exports\n\n\n\ncluster_OrganSelectorModule\n\n\n\ncluster_OrganSelectorModule_declarations\n\n\n\ncluster_OrganSelectorModule_exports\n\n\n\ncluster_StoreDebugModule\n\n\n\ncluster_StoreDebugModule_declarations\n\n\n\ncluster_StoreDebugModule_exports\n\n\n\ncluster_TextSearchModule\n\n\n\ncluster_TextSearchModule_declarations\n\n\n\ncluster_TextSearchModule_exports\n\n\n\ncluster_TrackingPopupModule\n\n\n\ncluster_TrackingPopupModule_declarations\n\n\n\ncluster_TrackingPopupModule_exports\n\n\n\n\nConsentService\n\nConsentService\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAnalyticsModule -->\n\nConsentService->AnalyticsModule\n\n\n\n\n\nGoogleAnalyticsSyncService\n\nGoogleAnalyticsSyncService\n\nAnalyticsModule -->\n\nGoogleAnalyticsSyncService->AnalyticsModule\n\n\n\n\n\nLocalStorageSyncService\n\nLocalStorageSyncService\n\nAnalyticsModule -->\n\nLocalStorageSyncService->AnalyticsModule\n\n\n\n\n\nBodyUiComponent\n\nBodyUiComponent\n\n\n\nBodyUiModule\n\nBodyUiModule\n\nBodyUiModule -->\n\nBodyUiComponent->BodyUiModule\n\n\n\n\n\nBodyUiComponent \n\nBodyUiComponent \n\nBodyUiComponent  -->\n\nBodyUiModule->BodyUiComponent \n\n\n\n\n\nDecoratedTextComponent\n\nDecoratedTextComponent\n\n\n\nDecoratedTextModule\n\nDecoratedTextModule\n\nDecoratedTextModule -->\n\nDecoratedTextComponent->DecoratedTextModule\n\n\n\n\n\nDecoratedTextComponent \n\nDecoratedTextComponent \n\nDecoratedTextComponent  -->\n\nDecoratedTextModule->DecoratedTextComponent \n\n\n\n\n\nTextSearchModule\n\nTextSearchModule\n\nTextSearchModule -->\n\nDecoratedTextModule->TextSearchModule\n\n\n\n\n\nInfoButtonComponent\n\nInfoButtonComponent\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nInfoButtonModule -->\n\nInfoButtonComponent->InfoButtonModule\n\n\n\n\n\nInfoButtonComponent \n\nInfoButtonComponent \n\nInfoButtonComponent  -->\n\nInfoButtonModule->InfoButtonComponent \n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoButtonModule -->\n\nInfoDialogModule->InfoButtonModule\n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nInfoDialogModule->InfoDialogComponent \n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nInfoDialogModule -->\n\nInfoDialogComponent->InfoDialogModule\n\n\n\n\n\nNumberDirective\n\nNumberDirective\n\n\n\nNumbersOnlyModule\n\nNumbersOnlyModule\n\nNumbersOnlyModule -->\n\nNumberDirective->NumbersOnlyModule\n\n\n\n\n\nNumberDirective \n\nNumberDirective \n\nNumberDirective  -->\n\nNumbersOnlyModule->NumberDirective \n\n\n\n\n\nOpacitySliderComponent\n\nOpacitySliderComponent\n\n\n\nOpacitySliderModule\n\nOpacitySliderModule\n\nOpacitySliderModule -->\n\nOpacitySliderComponent->OpacitySliderModule\n\n\n\n\n\nOpacitySliderComponent \n\nOpacitySliderComponent \n\nOpacitySliderComponent  -->\n\nOpacitySliderModule->OpacitySliderComponent \n\n\n\n\n\nOrganSelectorComponent\n\nOrganSelectorComponent\n\n\n\nOrganSelectorModule\n\nOrganSelectorModule\n\nOrganSelectorModule -->\n\nOrganSelectorComponent->OrganSelectorModule\n\n\n\n\n\nOrganSelectorComponent \n\nOrganSelectorComponent \n\nOrganSelectorComponent  -->\n\nOrganSelectorModule->OrganSelectorComponent \n\n\n\n\n\nStoreDebugComponent\n\nStoreDebugComponent\n\n\n\nStoreDebugModule\n\nStoreDebugModule\n\nStoreDebugModule -->\n\nStoreDebugComponent->StoreDebugModule\n\n\n\n\n\nStoreDebugComponent \n\nStoreDebugComponent \n\nStoreDebugComponent  -->\n\nStoreDebugModule->StoreDebugComponent \n\n\n\n\n\nTextSearchComponent\n\nTextSearchComponent\n\nTextSearchModule -->\n\nTextSearchComponent->TextSearchModule\n\n\n\n\n\nMatPrefix \n\nMatPrefix \n\nMatPrefix  -->\n\nTextSearchModule->MatPrefix \n\n\n\n\n\nMatSuffix \n\nMatSuffix \n\nMatSuffix  -->\n\nTextSearchModule->MatSuffix \n\n\n\n\n\nTextSearchComponent \n\nTextSearchComponent \n\nTextSearchComponent  -->\n\nTextSearchModule->TextSearchComponent \n\n\n\n\n\nTrackingPopupComponent\n\nTrackingPopupComponent\n\n\n\nTrackingPopupModule\n\nTrackingPopupModule\n\nTrackingPopupModule -->\n\nTrackingPopupComponent->TrackingPopupModule\n\n\n\n\n\nTrackingPopupComponent \n\nTrackingPopupComponent \n\nTrackingPopupComponent  -->\n\nTrackingPopupModule->TrackingPopupComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Consent   (projects/.../consent.service.ts)\n                        \n                        \n                            DataReviver   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            DataSourceDataType   (projects/.../data-source.ts)\n                        \n                        \n                            DataSourceLike   (projects/.../data-source.ts)\n                        \n                        \n                            DataSourceLikeMethod   (projects/.../data-source.ts)\n                        \n                        \n                            DataSourceMethod   (projects/.../data-source.ts)\n                        \n                        \n                            GlobalKey   (projects/.../globals.service.ts)\n                        \n                        \n                            GlobalThis   (projects/.../globals.service.ts)\n                        \n                        \n                            IObservableCacheConfig   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            KVList   (projects/.../store-debug.component.ts)\n                        \n                        \n                            KVPair   (projects/.../store-debug.component.ts)\n                        \n                        \n                            RequestMethod   (projects/.../api-endpoint.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-shared/analytics/src/lib/consent.service.ts\n    \n    \n        \n            \n                \n                    \n                    Consent\n                \n            \n            \n                \n                        \"not-set\" | \"given\" | \"rescinded\"\n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n    \n    \n        \n            \n                \n                    \n                    DataReviver\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IObservableCacheConfig\n                \n            \n            \n                \n                        NonNullable<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RequestMethod\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/services/data-source/data-source.ts\n    \n    \n        \n            \n                \n                    \n                    DataSourceDataType\n                \n            \n            \n                \n                            ObservedValueOf>>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataSourceLike\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataSourceLikeMethod\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataSourceMethod\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/services/globals/globals.service.ts\n    \n    \n        \n            \n                \n                    \n                    GlobalKey\n                \n            \n            \n                \n                    Type of keys allowed in the global object\n\n                \n            \n            \n                \n                        string | symbol\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GlobalThis\n                \n            \n            \n                \n                    Type of the global object\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts\n    \n    \n        \n            \n                \n                    \n                    KVList\n                \n            \n            \n                \n                    Array of Key-Value pairs\n\n                \n            \n            \n                \n                            KVPair[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    KVPair\n                \n            \n            \n                \n                    Key-Value pair\n\n                \n            \n            \n                \n                        [string, T]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALL_ORGANS   (projects/.../organ-selector.component.ts)\n                        \n                        \n                            ALL_POSSIBLE_ORGANS   (projects/.../organ-selector.component.ts)\n                        \n                        \n                            buster$   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            CACHE_CONFIG_NO_PARAMS   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            CACHE_CONFIG_PARAMS   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            DEFAULT_MAX_OPTIONS   (projects/.../text-search.component.ts)\n                        \n                        \n                            DEFAULT_OPTIONS   (projects/.../pluck-unique.ts)\n                        \n                        \n                            documentationURL   (projects/.../info-button.service.ts)\n                        \n                        \n                            EAGERLY_LOADED_SERVICES   (projects/.../analytics.module.ts)\n                        \n                        \n                            global   (projects/.../globals.service.ts)\n                        \n                        \n                            INITIAL_TELEMETRY_SETTING   (projects/.../tracking.state.ts)\n                        \n                        \n                            LOCAL_STORAGE_ALLOW_TELEMETRY_KEY   (projects/.../tracking.state.ts)\n                        \n                        \n                            LOCAL_STORAGE_CONSENT_KEY   (projects/.../local-storage-sync.service.ts)\n                        \n                        \n                            placeholder   (projects/.../public-api.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALL_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALL_POSSIBLE_ORGANS.filter(organ => organ.disabled !== true)\n                    \n                \n\n            \n                \n                    All organs which have not been disabled\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ALL_POSSIBLE_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [\n  {\n    src: 'app:skin',\n    organ: 'Skin',\n    name: 'Skin',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002097'\n  },\n  {\n    src: 'app:brain',\n    organ: 'Brain',\n    name: 'Brain',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000955'\n  },\n  {\n    disabled: true,\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000029'\n  },\n  {\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002509'\n  },\n  {\n    disabled: true,\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000970'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004548'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/FMA_54449'\n  },\n  {\n    disabled: true,\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0003889'\n  },\n  {\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001303'\n  },\n  {\n    src: 'app:fallopian-tube-right',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001302'\n  },\n  {\n    src: 'app:heart',\n    organ: 'Heart',\n    name: 'Heart',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000948'\n  },\n  {\n    disabled: true,\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002113'\n  },\n  {\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004538'\n  },\n  {\n    src: 'app:kidney-right',\n    organ: 'Kidney',\n    name: 'Kidney, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004539'\n  },\n  {\n    disabled: true,\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001465'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/FMA_24978'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/FMA_24977'\n  },\n  {\n    src: 'app:liver',\n    organ: 'Liver',\n    name: 'Liver',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002107'\n  },\n  {\n    disabled: true,\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002048'\n  },\n  {\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001004'\n  },\n  {\n    disabled: true,\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000992'\n  },\n  {\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/FMA_7214'\n  },\n  {\n    src: 'app:ovary-right',\n    organ: 'Ovary',\n    name: 'Ovary, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/FMA_7213'\n  },\n  {\n    src: 'app:pancreas',\n    organ: 'Pancreas',\n    name: 'Pancreas',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001264'\n  },\n  {\n    src: 'app:pelvis-f',\n    organ: 'Pelvis',\n    name: 'Pelvis',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001270'\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002367',\n    disabled: true\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000079'\n  },\n  {\n    src: 'app:small-intestine',\n    organ: 'Small Intestine',\n    name: 'Small Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002108'\n  },\n  {\n    src: 'app:large-intestine',\n    organ: 'Large Intestine',\n    name: 'Large Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000059'\n  },\n  {\n    src: 'app:spleen',\n    organ: 'Spleen',\n    name: 'Spleen',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002106'\n  },\n  {\n    src: 'app:thymus',\n    organ: 'Thymus',\n    name: 'Thymus',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002370'\n  },\n  {\n    disabled: true,\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000056'\n  },\n  {\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001223'\n  },\n  {\n    src: 'app:ureter-right',\n    organ: 'Ureter',\n    name: 'Ureter, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001222'\n  },\n  {\n    src: 'app:bladder',\n    organ: 'Urinary Bladder',\n    name: 'Urinary Bladder',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001255'\n  },\n  {\n    src: 'app:uterus',\n    organ: 'Uterus',\n    name: 'Uterus',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000995'\n  },\n  {\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004537'\n  },\n  {\n    disabled: true,\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002049'\n  }\n].sort((a, b) => a.name.localeCompare(b.name)) as OrganInfo[]\n                    \n                \n\n            \n                \n                    All organs that will eventually be displayed in the app\n\n                \n            \n\n        \n    \n\n    projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buster$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CACHE_CONFIG_NO_PARAMS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IObservableCacheConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  cacheBusterObserver: buster$\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CACHE_CONFIG_PARAMS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IObservableCacheConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n}\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_MAX_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'Maximum number of autocomplete options displayed',\n  {\n    providedIn: 'root',\n    factory(): number {\n      return 10;\n    }\n  }\n)\n                    \n                \n\n            \n                \n                    Token to provide a default for the maximum number of\nautocomplete suggestions to show at the same time.\n\n                \n            \n\n        \n    \n\n    projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PluckUniqueOptions<>\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n            \n                \n                    Default options\n\n                \n            \n\n        \n    \n\n    projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        documentationURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/docs/README.md'\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/analytics/src/lib/analytics.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EAGERLY_LOADED_SERVICES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ConsentService,\n  GoogleAnalyticsSyncService,\n  LocalStorageSyncService,\n]\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/src/lib/services/globals/globals.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        global\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalThis\n\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/src/lib/analytics/tracking.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        INITIAL_TELEMETRY_SETTING\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getTelemetryStorageSetting()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOCAL_STORAGE_ALLOW_TELEMETRY_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ALLOW_TELEMETRY'\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOCAL_STORAGE_CONSENT_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Key under which consent is stored', {\n  providedIn: 'root',\n  factory: () => 'ALLOW_TELEMETRY'\n})\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/rxjs-ext/src/public-api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        placeholder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : undefined\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
