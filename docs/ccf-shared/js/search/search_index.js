var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AnalyticsModule.html",[0,1.486,1,2.477]],["body/modules/AnalyticsModule.html",[1,4.964,2,1.685,3,2.17,4,3.902,5,3.902,6,3.442,7,0.018,8,4.094,9,4.094,10,2.387,11,1.853,12,1.406,13,0.179,14,0.225,15,0.179,16,0.173,17,2.944,18,3.864,19,1.033,20,4.5,21,4.523,22,5.027,23,4.966,24,1.033,25,4.523,26,1.033,27,0.748,28,0.403,29,0.678,30,3.111,31,0.748,32,5.562,33,0.388,34,5.027,35,2.641,36,0.324,37,4.5,38,5.027,39,2.741,40,3.111,41,2.937,42,3.188,43,5.027,44,3.902,45,2.944,46,0.291,47,0.324,48,3.902,49,0.871,50,5.562,51,5.562,52,5.562,53,1.946,54,1.066,55,4.544,56,1.893,57,3.493,58,2.78,59,1.126,60,3.902,61,2.567,62,1.68,63,2.158,64,3.902,65,3.902,66,4.5,67,3.902,68,1.537,69,2.158,70,3.188,71,2.047,72,2.741,73,3.902,74,2.158,75,3.902,76,1.537,77,3.902,78,0.202,79,3.902,80,3.902,81,0.01,82,0.013,83,0.01]],["title/interfaces/AnalyticsOptions.html",[23,2.683,47,0.272]],["body/interfaces/AnalyticsOptions.html",[1,3.834,6,2.81,7,0.018,8,3.343,9,3.343,13,0.182,14,0.229,15,0.182,16,0.137,17,2.993,18,3.688,20,3.552,22,3.968,23,4.829,28,0.611,29,1.086,30,2.456,32,5.081,33,0.39,34,5.081,35,2.662,36,0.329,37,4.549,38,5.081,39,2.787,40,3.145,41,2.969,42,3.241,43,5.081,44,3.968,45,2.993,46,0.294,47,0.329,48,5.911,49,1.018,50,6.251,51,6.251,52,6.251,53,2.796,54,1.075,55,4.58,56,1.914,57,3.552,58,2.81,59,1.133,60,3.968,61,2.61,62,1.694,63,2.194,64,3.968,65,3.968,66,4.549,67,3.968,68,1.563,69,2.194,70,3.241,71,2.082,72,2.787,73,3.968,74,2.194,75,3.968,76,1.563,77,3.968,78,0.206,79,3.968,80,3.968,81,0.01,82,0.013,83,0.01,84,1.429,85,0.438,86,0.928]],["title/interfaces/ApiEndpointDataSourceOptions.html",[47,0.272,87,2.307]],["body/interfaces/ApiEndpointDataSourceOptions.html",[7,0.018,13,0.131,14,0.235,15,0.131,16,0.098,18,1.874,28,0.563,29,0.705,33,0.388,36,0.236,46,0.235,47,0.392,49,1,54,1.045,56,1.529,59,1.233,76,2.424,78,0.148,81,0.007,82,0.01,83,0.007,84,1.026,85,0.314,86,0.741,87,2.852,88,1.122,89,1.763,90,1.763,91,4.212,92,4.212,93,0.778,94,2.327,95,2.149,96,1.763,97,2.477,98,1.763,99,1.763,100,2.616,101,1.763,102,0.983,103,1.352,104,1.763,105,3.317,106,3.89,107,2.327,108,2.327,109,2.149,110,3.317,111,2.341,112,2.512,113,0.721,114,1.352,115,1.928,116,1.874,117,2.327,118,1.122,119,3.569,120,3.063,121,2.025,122,1.664,123,1.664,124,2.245,125,2.041,126,2.327,127,3.323,128,2.327,129,3.89,130,5.219,131,3.622,132,3.569,133,2.616,134,2.327,135,2.001,136,3.191,137,1.874,138,2.149,139,2.327,140,2.149,141,2.327,142,2.327,143,2.327,144,1.874,145,2.001,146,2.001,147,2.001,148,2.149,149,1.575,150,1.495,151,3.323,152,0.939,153,2.001,154,3.063,155,2.001,156,2.149,157,2.001,158,2.327,159,3.829,160,1.352,161,2.001,162,2.13,163,1.942,164,3.063,165,2.149,166,2.001,167,3.317,168,1.763,169,2.327,170,1.874,171,2.327,172,2.327,173,1.23,174,1.122,175,2.001,176,0.94,177,1.026,178,1.879,179,0.897,180,2.512,181,2.512,182,2.327,183,1.421,184,3.864,185,2.327,186,4.453,187,1.421,188,2.327,189,1.421,190,2.327,191,1.421,192,4.956,193,2.327,194,1.421,195,2.327,196,1.421,197,2.327,198,4.629,199,1.421,200,2.327,201,1.421,202,2.327,203,1.421,204,2.327,205,1.421,206,2.327,207,1.421,208,2.327,209,2.852,210,1.421,211,2.327,212,1.421,213,3.864,214,2.359,215,3.864,216,2.327,217,2.149,218,2.327,219,2.327,220,2.327,221,2.327,222,2.327,223,2.327,224,2.327,225,2.327,226,2.327,227,2.327,228,2.327]],["title/injectables/ApiEndpointDataSourceService.html",[93,0.63,175,2.307]],["body/injectables/ApiEndpointDataSourceService.html",[7,0.018,13,0.098,14,0.19,15,0.098,16,0.215,18,1.407,19,0.869,24,1.635,26,1.589,27,1.101,28,0.638,29,0.997,31,1.174,33,0.359,36,0.177,46,0.19,47,0.332,49,0.928,54,0.927,56,1.237,59,1.174,76,2.467,78,0.111,81,0.005,82,0.008,83,0.005,85,0.236,87,1.503,88,2.451,89,3.85,90,1.324,91,1.748,92,1.748,93,0.63,94,1.748,95,1.614,96,1.324,97,2.546,98,1.324,99,1.324,100,2.211,101,1.324,102,0.795,103,1.016,104,1.324,105,3.663,106,3.383,107,1.748,108,1.748,109,1.614,110,2.683,111,2.374,112,2.032,113,0.542,114,1.016,115,1.559,116,1.407,117,1.748,118,0.843,119,3.015,120,2.478,121,2.236,122,1.25,123,1.25,124,1.816,125,1.839,126,1.748,127,2.807,128,1.748,129,4.332,130,5.175,131,4.215,132,4.01,133,2.675,134,2.683,135,1.503,136,2.775,137,1.407,138,1.614,139,1.748,140,1.614,141,1.748,142,1.748,143,1.748,144,1.407,145,1.503,146,1.503,147,1.503,148,1.614,149,1.183,150,1.123,151,2.807,152,0.76,153,1.503,154,2.478,155,1.503,156,1.614,157,1.503,158,1.748,159,3.398,160,1.016,161,1.503,162,1.723,163,1.689,164,2.478,165,1.614,166,1.503,167,2.683,168,1.324,169,1.748,170,1.407,171,1.748,172,1.748,173,0.924,174,0.843,175,2.307,176,0.706,177,1.183,178,2.013,179,0.726,180,2.474,181,2.775,182,1.748,183,2.236,184,3.265,185,1.748,186,4.691,187,2.236,188,1.748,189,2.236,190,1.748,191,2.236,192,4.595,193,1.748,194,2.236,195,1.748,196,2.236,197,1.748,198,4.842,199,1.638,200,1.748,201,1.638,202,1.748,203,1.638,204,1.748,205,1.638,206,1.748,207,1.638,208,1.748,209,2.307,210,1.638,211,1.748,212,1.638,213,4.595,214,2.546,215,4.343,216,1.748,217,1.614,218,1.748,219,1.748,220,1.748,221,1.748,222,1.748,223,1.748,224,1.748,225,1.748,226,1.748,227,1.748,228,1.748,229,0.968,230,1.919,231,1.919,232,1.919,233,1.919,234,1.919,235,1.919,236,2.48,237,2.48,238,4.633,239,2.48,240,3.013,241,2.48,242,2.48,243,3.413,244,2.48,245,2.48,246,2.48,247,2.48,248,2.48,249,2.48,250,2.48,251,2.48,252,2.48,253,2.48,254,2.48,255,2.48]],["title/interfaces/AutoCompleteOption.html",[47,0.272,256,2.683]],["body/interfaces/AutoCompleteOption.html",[7,0.018,13,0.147,14,0.185,15,0.147,16,0.11,27,0.614,28,0.455,29,0.988,30,2.726,31,0.614,33,0.376,36,0.266,46,0.291,47,0.266,49,0.961,54,0.844,56,1.205,59,0.844,62,1.331,68,1.261,72,3.094,78,0.228,81,0.008,82,0.011,83,0.008,84,1.153,85,0.353,86,0.804,102,1.066,111,1.587,113,0.81,114,1.519,115,1.519,116,2.105,118,1.261,136,1.98,152,1.165,160,1.519,162,1.679,163,2.269,168,1.98,173,1.382,174,1.261,177,1.153,178,1.518,179,1.299,256,3.598,257,2.414,258,2.414,259,2.614,260,1.205,261,3.598,262,4.405,263,4.648,264,5.576,265,4.094,266,4.13,267,5.014,268,3.8,269,3.094,270,4.405,271,3.538,272,1.98,273,1.394,274,3.323,275,1.77,276,1.98,277,3.598,278,2.701,279,3.8,280,4.405,281,2.614,282,4.857,283,2.865,284,3.323,285,3.094,286,4.405,287,1.87,288,1.596,289,1.77,290,1.816,291,4.857,292,5.494,293,2.865,294,2.865,295,2.614,296,2.614,297,2.248,298,2.904,299,5.822,300,5.264,301,3.2,302,2.865,303,1.382,304,1.519,305,3.2,306,1.519,307,3.2,308,1.98,309,1.98,310,1.596,311,1.596,312,1.77,313,1.77,314,3.323,315,3.2,316,3.2,317,3.2,318,3.2,319,1.98,320,3.2,321,5.426,322,3.2,323,3.2,324,3.117,325,5.037,326,4.115,327,1.87,328,3.2,329,2.865,330,2.614,331,3.2,332,2.865,333,4.405,334,4.405,335,3.2,336,3.2,337,1.77,338,1.596,339,1.735,340,4.405,341,3.2,342,3.2,343,3.2,344,2.614,345,3.2,346,2.865,347,2.105,348,3.2,349,2.105,350,3.2,351,3.2]],["title/modules/BodyUiModule.html",[0,1.486,352,2.683]],["body/modules/BodyUiModule.html",[2,2.077,3,2.471,7,0.017,10,2.717,11,2.284,12,1.733,13,0.221,14,0.278,15,0.221,16,0.166,33,0.39,35,2.717,36,0.399,46,0.278,71,2.524,78,0.249,81,0.012,82,0.014,83,0.012,352,5.409,353,4.81,354,4.81,355,4.81,356,3.567,357,4.306,358,4.306,359,5.575,360,3.165,361,3.165,362,3.344,363,2.524,364,2.524,365,5.575]],["title/injectables/CCFDatabaseDataSourceBaseService.html",[93,0.63,366,2.307]],["body/injectables/CCFDatabaseDataSourceBaseService.html",[7,0.018,13,0.13,14,0.297,15,0.13,16,0.187,19,1.069,24,1.726,26,1.677,27,1.178,28,0.654,29,1.067,31,1.231,33,0.372,36,0.235,46,0.233,47,0.235,49,0.632,54,0.903,59,0.903,76,1.114,78,0.244,81,0.007,82,0.01,83,0.007,85,0.312,86,0.737,88,2.141,93,0.985,97,2.475,102,0.684,103,2.825,111,2.359,113,0.716,114,1.342,115,1.342,118,1.114,121,2.563,122,1.652,123,1.652,125,1.019,149,1.564,150,2.852,152,0.654,173,1.221,174,1.114,177,1.019,178,1.624,179,1.249,181,1.75,183,2.35,187,2.35,189,2.35,191,2.35,194,2.35,196,2.35,199,1.41,201,1.41,203,1.41,205,1.41,207,1.41,210,1.41,212,1.41,214,1.41,229,1.279,230,2.359,231,2.359,232,2.359,233,2.359,234,2.359,235,2.359,240,2.966,347,3.099,349,2.657,366,3.61,367,4.1,368,2.133,369,2.852,370,2.842,371,2.915,372,3.849,373,3.476,374,3.302,375,3.615,376,2.657,377,3.047,378,4.681,379,2.531,380,4.254,381,5.019,382,3.277,383,4.198,384,4.198,385,3.277,386,1.986,387,2.915,388,2.657,389,4.814,390,3.7,391,2.133,392,2.133,393,2.133,394,2.133,395,2.133,396,2.133,397,2.133,398,2.133,399,2.133,400,2.133,401,2.133,402,2.133,403,2.133,404,2.531,405,3.299,406,3.299,407,2.31,408,3.299,409,2.31,410,2.133,411,3.299,412,2.837,413,1.75,414,1.652,415,2.133,416,2.133,417,2.31,418,2.133,419,2.31,420,2.31,421,1.114,422,2.31,423,2.31,424,2.31,425,2.31,426,2.31,427,1.86,428,3.299,429,2.31,430,2.133,431,2.133,432,2.31,433,1.986,434,2.31,435,3.047,436,1.986,437,2.31,438,3.047,439,2.31,440,2.31,441,2.31,442,2.31]],["title/injectables/CCFDatabaseDataSourceService.html",[93,0.63,433,2.307]],["body/injectables/CCFDatabaseDataSourceService.html",[7,0.018,13,0.132,14,0.299,15,0.132,16,0.099,19,1.083,24,1.723,26,1.668,27,1.166,28,0.651,29,1.056,31,1.235,33,0.374,36,0.239,46,0.236,47,0.239,49,0.641,54,0.913,59,0.913,76,1.135,78,0.247,81,0.007,82,0.01,83,0.007,85,0.318,86,0.747,88,1.135,93,0.994,97,2.48,102,0.697,103,2.839,111,2.364,113,0.729,114,1.368,115,1.368,118,1.135,121,2.041,122,1.683,123,1.683,125,1.038,149,1.593,150,2.872,152,0.666,173,1.244,174,1.135,178,1.641,179,1.257,183,2.374,187,2.374,189,2.374,191,2.374,194,2.374,196,2.374,199,1.437,201,1.437,203,1.437,205,1.437,207,1.437,210,1.437,212,1.437,214,1.437,229,1.304,230,2.391,231,2.391,232,2.391,233,2.391,234,2.391,235,2.391,240,2.984,347,3.131,349,2.692,366,4.109,367,2.173,368,2.173,369,2.872,370,2.632,371,2.946,372,3.888,373,3.493,374,3.028,375,3.664,376,2.692,377,2.173,379,2.579,380,4.272,381,5.039,383,4.234,384,4.234,386,2.023,387,2.946,388,2.692,389,4.91,390,3.712,391,2.173,392,2.173,393,2.173,394,2.173,395,2.173,396,2.173,397,2.173,398,2.173,399,2.173,400,2.173,401,2.173,402,2.173,403,2.173,404,2.579,405,3.343,406,3.343,407,2.353,408,3.343,409,2.353,410,2.173,411,3.343,412,2.875,413,1.783,414,1.683,415,2.173,416,2.173,417,2.353,418,2.173,419,2.353,420,2.353,421,1.135,422,2.353,423,2.353,424,2.353,425,2.353,426,2.353,427,1.895,428,3.343,429,2.353,430,2.173,431,2.173,432,2.353,433,2.875,434,2.353,435,3.087,436,2.023,437,2.353,438,3.087,439,2.353,440,2.353,441,2.353,442,2.353,443,3.339,444,2.881,445,2.881]],["title/interfaces/CCFDatabaseManager.html",[47,0.272,380,2.307]],["body/interfaces/CCFDatabaseManager.html",[7,0.018,13,0.176,14,0.337,15,0.176,16,0.132,28,0.396,33,0.403,36,0.318,46,0.287,47,0.318,54,1.058,59,1.058,76,1.512,78,0.286,81,0.01,82,0.013,83,0.01,84,1.383,85,0.424,86,0.908,88,1.512,93,1.119,97,1.446,102,0.929,103,3.067,111,2.103,113,0.972,114,1.822,115,1.822,118,1.512,121,2.481,122,2.242,123,2.242,125,1.383,149,2.123,150,2.61,152,0.888,173,1.657,174,1.512,178,1.323,179,1.099,347,2.525,349,2.525,366,3.876,367,2.896,368,2.896,369,3.173,370,2.751,371,2.375,372,3.136,373,3.41,374,3.41,377,2.896,380,4.43,381,5.062,383,4.508,384,4.508,405,4.063,406,4.769,407,3.136,408,4.769,409,3.136,410,2.896,411,4.508,412,3.494,413,2.375,414,2.242,415,2.896,416,2.896,417,3.136,418,2.896,419,3.136,420,3.136,421,1.512,422,3.136,423,3.136,424,3.136,425,3.136,426,3.136,427,2.525,428,4.063,429,3.136,430,2.896,431,2.896,432,3.136,433,2.696,434,3.136,435,3.753,436,2.696,437,3.136,438,3.753,439,3.136,440,3.136,441,3.136,442,3.136]],["title/injectables/ConsentService.html",[6,1.816,93,0.63]],["body/injectables/ConsentService.html",[6,2.958,7,0.017,13,0.198,14,0.249,15,0.198,16,0.223,19,1.416,24,1.689,26,1.139,27,0.825,28,0.601,29,0.747,31,1.116,33,0.342,36,0.357,46,0.309,62,1.892,68,2.398,78,0.223,81,0.011,82,0.013,83,0.011,85,0.475,86,0.976,93,1.025,113,1.089,152,1.237,176,1.419,177,2.096,179,1.286,229,1.947,290,2.205,446,3.852,447,4.631,448,6.745,449,4.004,450,6.199,451,7.056,452,6.199,453,4.987,454,2.014,455,6.199,456,4.987,457,4.987,458,4.987,459,6.199,460,3.518,461,4.987,462,3.515,463,3.246,464,4.987,465,4.987,466,6.199,467,4.987,468,4.987]],["title/interfaces/DataSource.html",[47,0.272,124,1.816]],["body/interfaces/DataSource.html",[7,0.017,13,0.14,14,0.177,15,0.14,16,0.221,19,1.129,24,1.686,26,1.632,27,1.111,28,0.652,29,1.007,31,1.221,33,0.314,46,0.344,47,0.254,49,0.833,59,1.23,78,0.221,81,0.008,82,0.011,83,0.008,84,1.101,85,0.337,88,2.528,96,1.891,97,2.576,98,1.891,99,1.891,100,1.69,101,1.891,102,0.74,103,1.451,104,1.891,111,2.466,113,0.774,115,1.451,118,1.204,124,2.942,160,1.451,176,1.008,179,0.675,183,2.791,187,2.791,189,2.791,191,2.791,194,2.791,196,2.791,199,2.451,201,2.451,203,2.451,205,2.451,207,2.451,210,2.451,212,2.128,214,2.128,230,2.493,231,2.493,232,2.493,233,2.493,234,2.493,235,2.493,240,3.042,284,3.708,369,1.604,370,1.69,371,1.891,373,2.493,374,3.108,376,2.807,387,3.042,388,3.233,390,2.493,414,1.785,469,4.507,470,2.306,471,3.542,472,3.542,473,3.542,474,3.542,475,3.542,476,3.542,477,3.542,478,3.542,479,3.542,480,3.542,481,3.542,482,3.542,483,3.485,484,2.736,485,3.485,486,2.497,487,2.736,488,2.497,489,2.736,490,2.736,491,2.736,492,2.736,493,2.736,494,2.736,495,2.736,496,2.736,497,2.736,498,2.736,499,2.736,500,2.736,501,2.736,502,2.736,503,2.736,504,2.736,505,2.736,506,2.736]],["title/injectables/DataSourceService.html",[93,0.63,507,2.94]],["body/injectables/DataSourceService.html",[7,0.017,13,0.16,14,0.27,15,0.16,16,0.226,19,1.237,24,1.723,26,1.598,27,1.157,28,0.623,29,1.048,31,1.248,33,0.359,36,0.29,46,0.202,49,0.825,78,0.181,81,0.009,82,0.012,83,0.009,85,0.385,88,2.58,93,0.896,96,2.161,97,2.563,98,2.161,99,2.161,100,1.931,101,2.161,102,0.845,103,1.658,104,2.161,111,2.445,113,0.884,124,2.585,125,1.258,176,1.152,183,2.806,187,2.806,189,2.806,191,2.806,194,2.806,196,2.806,199,2.331,201,2.331,203,2.331,205,2.331,207,2.331,210,2.331,212,1.742,229,1.58,230,2.731,231,2.731,232,2.731,233,2.731,234,2.731,235,2.731,240,3.167,374,4.016,469,4.6,507,4.184,508,3.492,509,4.048,510,4.048,511,4.048,512,4.048,513,4.048,514,4.048,515,4.048,516,4.048,517,4.048,518,4.048,519,4.048,520,4.048]],["title/interfaces/DecoratedRange.html",[47,0.272,287,1.918]],["body/interfaces/DecoratedRange.html",[7,0.018,13,0.183,14,0.23,15,0.183,16,0.138,28,0.612,31,0.765,46,0.23,47,0.331,49,0.88,54,1.135,56,1.502,58,3.108,59,0.977,62,1.205,68,2.009,81,0.01,82,0.013,83,0.01,84,1.437,85,0.739,86,0.931,162,3.284,163,2.47,260,1.502,287,3.283,289,2.206,339,2.009,421,2.214,521,2.624,522,3.571,523,3.258,524,4.28,525,3.414,526,3.009,527,5.825,528,7.468,529,4.165,530,5.909,531,6.12,532,6.864,533,4.468,534,5.909,535,3.989,536,3.009,537,3.989,538,2.33,539,5.031,540,3.989,541,3.989,542,2.802,543,2.468,544,3.989,545,3.989,546,4.623,547,4.623,548,4.623,549,3.258]],["title/components/DecoratedTextComponent.html",[273,0.909,550,1.559]],["body/components/DecoratedTextComponent.html",[7,0.018,12,1.117,13,0.175,14,0.115,15,0.091,16,0.204,19,0.821,24,1.542,26,1.237,27,1.099,28,0.581,29,0.812,31,1.099,33,0.198,36,0.165,46,0.179,47,0.257,49,0.861,54,1.079,58,1.715,59,0.992,62,1.152,68,0.783,69,2.384,78,0.277,81,0.011,82,0.008,83,0.005,85,0.571,86,0.904,97,0.748,102,1.461,152,1.081,162,2.261,163,1.168,176,1.023,178,2.099,179,0.843,243,1.161,260,1.866,265,4.595,268,2.339,269,3.027,272,1.229,273,1.055,275,1.099,278,1.811,287,3.614,288,3.124,289,3.265,290,1.573,298,3.005,303,2.514,304,1.472,306,1.472,308,1.919,309,1.919,310,0.991,311,2.331,312,1.715,313,2.109,324,1.919,327,3.287,337,2.74,338,1.547,339,1.698,356,1.042,364,1.042,421,1.503,454,0.979,521,3.883,523,2.533,524,3.259,525,2.809,526,1.499,529,2.533,536,2.339,538,3.023,539,2.339,549,1.623,550,2.046,551,1.812,552,1.307,553,1.307,554,1.229,555,1.623,556,2.74,557,2.679,558,5.453,559,3.116,560,1.161,561,3.415,562,2.776,563,5.403,564,3.858,565,3.594,566,3.858,567,3.594,568,3.594,569,3.594,570,3.594,571,2.533,572,2.339,573,2.303,574,5.036,575,2.776,576,2.776,577,3.415,578,2.776,579,2.303,580,3.594,581,2.303,582,2.878,583,4.667,584,2.776,585,2.303,586,2.776,587,5.637,588,4.185,589,3.415,590,3.904,591,2.303,592,2.776,593,2.776,594,2.533,595,2.776,596,2.303,597,2.303,598,4.421,599,2.303,600,2.303,601,2.776,602,2.533,603,3.521,604,2.303,605,2.776,606,2.776,607,2.533,608,2.776,609,4.792,610,2.303,611,2.533,612,4.185,613,2.533,614,2.303,615,2.533,616,2.533,617,1.499,618,1.623,619,1.778,620,2.04,621,1.623,622,1.623,623,2.533,624,2.533,625,2.533,626,1.778,627,1.778,628,2.776,629,1.778,630,2.776,631,1.778,632,1.778,633,1.395,634,2.776,635,1.778,636,3.415,637,2.339,638,1.623,639,1.778,640,1.778,641,2.776,642,1.778,643,1.778,644,2.776,645,1.778,646,1.623,647,2.776,648,2.776,649,2.776,650,1.499,651,1.778,652,1.395,653,1.778,654,1.778,655,1.778,656,1.778,657,1.778,658,1.778,659,1.778,660,1.778,661,1.778,662,1.778,663,1.778,664,1.778,665,1.778,666,1.778,667,1.778,668,1.778,669,1.499,670,1.623,671,1.499,672,1.778,673,1.778,674,1.623,675,1.623,676,1.778,677,1.623,678,1.778,679,1.395,680,1.778,681,1.778,682,1.623,683,1.623,684,1.778,685,1.778,686,1.778,687,1.778,688,3.594,689,1.499,690,1.499,691,1.307,692,1.547,693,1.042,694,2.835,695,1.307,696,1.307,697,1.307,698,1.042,699,1.307,700,0.991,701,1.307,702,1.042,703,1.161,704,1.307,705,1.042,706,0.991,707,1.307,708,1.042,709,1.229,710,1.307,711,1.307,712,1.042,713,1.099,714,1.229,715,1.229,716,0.991,717,1.229,718,1.307]],["title/modules/DecoratedTextModule.html",[0,1.486,719,2.477]],["body/modules/DecoratedTextModule.html",[2,2.083,3,2.476,7,0.017,10,2.722,11,2.291,12,1.738,13,0.222,14,0.279,15,0.222,16,0.166,33,0.391,35,2.722,36,0.4,46,0.279,71,2.532,78,0.25,81,0.012,82,0.014,83,0.012,288,2.407,289,2.669,360,3.171,361,3.171,362,3.35,363,2.532,521,3.174,550,3.229,719,4.998,720,4.825,721,4.825,722,4.825,723,5.593,724,5.593]],["title/interfaces/DefaultParams.html",[47,0.272,135,2.307]],["body/interfaces/DefaultParams.html",[7,0.018,13,0.132,14,0.236,15,0.132,16,0.099,18,1.886,28,0.534,29,0.708,33,0.388,36,0.238,46,0.236,47,0.394,49,0.986,54,1.048,56,1.536,59,1.234,76,2.428,78,0.149,81,0.007,82,0.01,83,0.007,84,1.033,85,0.316,86,0.745,87,2.014,88,1.13,89,1.774,90,1.774,91,2.342,92,2.342,93,0.782,94,2.342,95,2.163,96,1.774,97,2.479,98,1.774,99,1.774,100,2.626,101,1.774,102,0.987,103,1.361,104,1.774,105,3.332,106,3.902,107,2.342,108,2.342,109,2.163,110,3.332,111,2.343,112,2.524,113,0.726,114,1.361,115,1.936,116,1.886,117,2.342,118,1.13,119,3.582,120,3.077,121,2.034,122,1.675,123,1.675,124,2.256,125,2.046,126,2.342,127,3.335,128,2.342,129,3.902,130,5.224,131,3.632,132,3.582,133,2.626,134,2.342,135,2.865,136,3.616,137,1.886,138,2.163,139,2.342,140,2.163,141,2.342,142,2.342,143,2.342,144,1.886,145,2.014,146,2.014,147,2.014,148,2.163,149,1.586,150,1.504,151,3.335,152,0.944,153,2.014,154,3.077,155,2.014,156,2.163,157,2.014,158,2.342,159,3.838,160,1.361,161,2.014,162,2.14,163,1.948,164,3.077,165,2.163,166,2.014,167,3.332,168,1.774,169,2.342,170,1.886,171,2.342,172,2.342,173,1.238,174,1.13,175,2.014,176,0.946,177,1.033,178,1.883,179,0.901,180,2.524,181,2.524,182,2.342,183,1.43,184,3.878,185,2.342,186,4.464,187,1.43,188,2.342,189,1.43,190,2.342,191,1.43,192,4.963,193,2.342,194,1.43,195,2.342,196,1.43,197,2.342,198,4.639,199,1.43,200,2.342,201,1.43,202,2.342,203,1.43,204,2.342,205,1.43,206,2.342,207,1.43,208,2.342,209,2.865,210,1.43,211,2.342,212,1.43,213,3.878,214,2.368,215,3.878,216,2.342,217,2.163,218,2.342,219,2.342,220,2.342,221,2.342,222,2.342,223,2.342,224,2.342,225,2.342,226,2.342,227,2.342,228,2.342]],["title/classes/DelegateDataSource.html",[78,0.17,370,1.816]],["body/classes/DelegateDataSource.html",[7,0.017,13,0.136,14,0.171,15,0.136,16,0.144,19,1.103,24,1.701,26,1.689,27,1.13,28,0.664,29,1.024,31,1.223,33,0.308,46,0.341,47,0.245,49,0.821,59,1.223,78,0.216,81,0.007,82,0.011,83,0.007,85,0.326,86,0.761,88,1.642,96,1.829,97,2.571,98,1.829,99,1.829,100,1.635,101,1.829,102,0.715,103,1.403,104,1.829,111,2.465,113,0.748,115,1.403,118,1.164,124,2.67,160,1.403,176,0.975,179,1.067,183,2.757,187,2.757,189,2.757,191,2.757,194,2.757,196,2.757,199,2.408,201,2.408,203,2.408,205,2.408,207,2.408,210,2.408,212,2.079,214,2.408,230,2.435,231,2.435,232,2.435,233,2.435,234,2.435,235,2.435,240,3.009,284,3.642,369,2.187,370,2.305,371,2.987,373,3.063,374,3.351,376,3.449,386,2.076,387,3.549,388,3.636,389,4.815,390,3.797,391,2.23,392,2.23,393,2.23,394,2.23,395,2.23,396,2.23,397,2.23,398,2.23,399,2.23,400,2.23,401,2.23,402,2.23,403,2.23,414,1.727,469,2.927,470,2.23,483,3.405,484,2.646,485,3.405,486,2.415,487,2.646,488,2.415,489,2.646,490,2.646,491,2.646,492,2.646,493,2.646,494,2.646,495,2.646,496,2.646,497,2.646,498,2.646,499,2.646,500,2.646,501,2.646,502,2.646,503,2.646,504,2.646,505,2.646,506,2.646,524,1.944,725,3.426]],["title/interfaces/DocumentationContent.html",[47,0.272,726,2.16]],["body/interfaces/DocumentationContent.html",[7,0.018,13,0.27,14,0.227,15,0.27,16,0.135,28,0.521,31,0.752,33,0.356,36,0.325,46,0.291,47,0.325,49,1.031,54,1.195,56,1.477,59,0.752,78,0.203,81,0.01,82,0.013,83,0.01,84,1.413,85,0.433,86,0.921,93,0.967,112,2.427,113,0.993,125,1.817,152,0.907,173,1.693,174,1.545,179,0.867,260,1.477,273,1.085,298,1.775,339,1.545,454,1.238,538,2.291,543,2.427,652,2.755,726,4.1,727,2.291,728,2.427,729,3.204,730,4.12,731,5.044,732,4.12,733,3.872,734,5.091,735,4.515,736,3.916,737,3.974,738,4.782,739,5.044,740,5.575,741,5.044,742,3.511,743,3.204,744,3.511,745,2.959,746,3.204,747,3.511,748,5.885,749,3.204,750,3.922,751,3.511,752,3.916,753,5.044,754,3.922,755,3.922,756,3.922,757,3.922,758,3.922,759,3.922,760,3.922,761,3.922,762,3.922,763,3.922,764,3.922,765,3.922,766,3.922,767,3.922,768,5.044,769,3.922,770,3.922,771,3.922,772,3.922,773,3.922,774,3.922,775,3.922]],["title/interfaces/FilterParams.html",[47,0.272,137,2.16]],["body/interfaces/FilterParams.html",[7,0.018,13,0.122,14,0.224,15,0.122,16,0.092,18,3.291,28,0.641,29,1.124,33,0.381,36,0.221,46,0.224,47,0.378,49,1.029,54,1.018,56,1.458,59,1.22,76,2.389,78,0.138,81,0.007,82,0.01,83,0.007,84,0.961,85,0.294,86,0.707,87,1.873,88,1.051,89,1.651,90,1.651,91,2.179,92,2.179,93,0.742,94,2.179,95,2.012,96,1.651,97,2.458,98,1.651,99,1.651,100,2.521,101,1.651,102,0.937,103,1.266,104,1.651,105,3.163,106,4.419,107,2.179,108,2.179,109,2.012,110,3.163,111,2.32,112,2.396,113,0.675,114,1.266,115,1.838,116,1.755,117,2.179,118,1.051,119,3.439,120,2.921,121,1.931,122,1.558,123,1.558,124,2.142,125,1.996,126,2.179,127,3.202,128,2.179,129,3.774,130,5.163,131,3.514,132,3.439,133,2.521,134,2.179,135,1.873,136,3.096,137,2.547,138,3.774,139,4.087,140,3.774,141,4.087,142,4.087,143,4.087,144,3.291,145,3.202,146,3.202,147,3.202,148,3.774,149,1.475,150,1.399,151,3.202,152,0.896,153,1.873,154,2.921,155,1.873,156,2.012,157,1.873,158,2.179,159,3.731,160,1.266,161,1.873,162,2.032,163,1.884,164,2.921,165,2.012,166,1.873,167,3.163,168,1.651,169,2.179,170,1.755,171,2.179,172,2.179,173,1.152,174,1.051,175,1.873,176,0.88,177,0.961,178,1.831,179,0.856,180,2.396,181,2.396,182,2.179,183,1.33,184,3.724,185,2.179,186,4.34,187,1.33,188,2.179,189,1.33,190,2.179,191,1.33,192,4.877,193,2.179,194,1.33,195,2.179,196,1.33,197,2.179,198,4.527,199,1.33,200,2.179,201,1.33,202,2.179,203,1.33,204,2.179,205,1.33,206,2.179,207,1.33,208,2.179,209,2.72,210,1.33,211,2.179,212,1.33,213,3.724,214,2.274,215,3.724,216,2.179,217,2.012,218,2.179,219,2.179,220,2.179,221,2.179,222,2.179,223,2.179,224,2.179,225,2.179,226,2.179,227,2.179,228,2.179]],["title/classes/ForwardingDataSource.html",[78,0.17,390,1.918]],["body/classes/ForwardingDataSource.html",[7,0.017,13,0.136,14,0.171,15,0.136,16,0.222,19,1.104,24,1.69,26,1.69,27,1.13,28,0.659,29,1.024,31,1.224,33,0.309,46,0.341,47,0.245,49,0.821,59,1.224,78,0.216,81,0.007,82,0.011,83,0.007,85,0.327,88,2.532,96,1.831,97,2.571,98,1.831,99,1.831,100,1.636,101,1.831,102,0.716,103,1.405,104,1.831,111,2.463,113,0.749,115,1.405,118,1.166,124,2.901,160,1.405,176,1.376,179,0.654,183,2.758,187,2.758,189,2.758,191,2.758,194,2.758,196,2.758,199,2.409,201,2.409,203,2.409,205,2.409,207,2.409,210,2.409,212,2.08,214,2.409,230,2.436,231,2.436,232,2.436,233,2.436,234,2.436,235,2.436,240,3.01,284,3.644,369,1.552,370,1.636,371,1.831,373,3.064,374,3.352,376,3.45,386,2.078,387,3.55,388,3.637,390,2.822,414,1.728,469,4.514,470,2.232,483,3.407,484,2.649,485,3.407,486,2.417,487,2.649,488,2.417,489,2.649,490,2.649,491,2.649,492,2.649,493,2.649,494,2.649,495,2.649,496,2.649,497,2.649,498,2.649,499,2.649,500,2.649,501,2.649,502,2.649,503,2.649,504,2.649,505,2.649,506,2.649,524,1.946,776,3.429,777,3.429,778,3.429,779,3.429,780,3.429,781,3.429,782,3.429,783,3.429,784,3.429,785,3.429,786,3.429,787,3.429,788,3.429]],["title/injectables/GlobalConfigState.html",[93,0.63,121,1.638]],["body/injectables/GlobalConfigState.html",[7,0.018,13,0.142,14,0.179,15,0.142,16,0.22,19,1.141,24,1.676,26,1.714,27,1.201,28,0.669,29,1.074,31,1.186,33,0.395,36,0.257,46,0.179,49,1.007,54,0.827,59,1.079,61,2.041,62,0.937,63,1.716,78,0.161,81,0.008,82,0.011,83,0.008,85,0.342,86,0.787,93,0.827,102,0.751,111,2.332,113,0.786,114,2.047,118,1.222,121,2.15,150,2.953,152,0.997,163,2.33,178,2.008,179,1.095,181,1.92,229,1.404,285,3.481,290,1.279,369,2.262,413,1.92,427,3.26,454,1.69,615,3.522,789,6.385,790,3.103,791,4.436,792,5.743,793,7.261,794,4.997,795,4.997,796,4.997,797,4.997,798,3.253,799,6.751,800,5.828,801,3.596,802,5.795,803,3.596,804,5.348,805,3.596,806,6.207,807,3.596,808,3.86,809,5.355,810,3.596,811,4.997,812,3.596,813,4.997,814,5.743,815,3.596,816,4.997,817,6.207,818,3.596,819,4.997,820,6.207,821,3.596,822,3.596,823,3.596,824,3.596,825,3.596,826,2.341,827,3.596,828,3.86,829,4.048,830,2.778,831,2.778,832,3.596,833,3.522,834,2.341,835,2.778,836,2.341,837,3.596,838,2.778,839,2.535,840,3.596,841,3.596,842,3.596,843,4.997,844,3.596,845,3.596,846,3.596,847,3.596,848,5.743,849,3.596,850,3.596,851,3.596]],["title/injectables/GlobalsService.html",[93,0.63,852,2.94]],["body/injectables/GlobalsService.html",[7,0.018,13,0.106,14,0.134,15,0.106,16,0.21,19,0.923,24,1.597,26,1.657,27,1.124,28,0.662,29,1.034,31,1.191,33,0.148,36,0.192,46,0.242,49,0.362,53,1.739,54,0.96,59,1.103,61,4.367,62,1.993,63,2.77,68,2.215,72,2.449,74,2.582,76,2.427,78,0.12,81,0.006,82,0.009,83,0.006,85,0.255,93,0.668,133,3.241,149,1.28,152,1.08,160,2.216,173,0.999,174,0.912,179,0.511,214,1.739,229,1.047,240,1.214,260,1.886,290,1.437,302,3.121,319,2.157,338,1.154,339,2.074,346,4.179,373,2.45,387,3.733,438,1.746,454,1.775,533,1.746,542,4.555,624,3.814,633,1.625,650,1.746,737,1.432,798,2.63,852,3.121,853,1.89,854,4.041,855,5.333,856,5.411,857,6.261,858,2.682,859,4.041,860,4.041,861,4.041,862,4.041,863,4.861,864,4.041,865,4.041,866,2.848,867,4.041,868,4.041,869,3.486,870,3.486,871,5.247,872,6.793,873,2.682,874,3.121,875,6.9,876,6.992,877,2.682,878,3.486,879,6.461,880,2.682,881,2.682,882,2.682,883,4.041,884,2.682,885,4.041,886,2.63,887,3.486,888,4.041,889,3.121,890,4.041,891,5.805,892,4.041,893,2.682,894,3.121,895,6.101,896,2.682,897,3.121,898,2.682,899,2.682,900,2.682,901,2.682,902,2.072,903,2.314,904,4.483,905,2.682,906,2.682,907,2.682,908,2.682,909,2.682,910,2.072,911,4.041,912,4.861,913,4.041,914,4.041,915,2.682,916,2.682,917,2.682,918,4.041,919,2.63,920,2.682,921,2.682,922,2.314,923,2.682,924,5.805,925,2.682,926,2.314,927,2.682,928,2.682,929,2.682,930,2.682,931,2.072,932,2.682,933,2.682,934,3.121,935,1.89,936,4.041,937,2.314,938,3.121,939,1.89,940,2.314,941,2.314,942,2.682,943,2.682,944,2.682,945,2.682,946,1.89,947,1.746,948,1.746,949,2.682,950,1.625,951,2.072,952,2.314,953,2.682,954,2.682,955,2.314,956,2.682,957,2.682]],["title/injectables/GoogleAnalyticsSyncService.html",[8,2.16,93,0.63]],["body/injectables/GoogleAnalyticsSyncService.html",[6,3.468,7,0.017,8,3.368,13,0.184,14,0.232,15,0.184,16,0.216,19,1.355,24,1.623,26,1.355,27,0.982,28,0.582,29,0.889,31,0.982,33,0.379,36,0.333,39,2.82,40,2.485,41,3.723,42,3.28,46,0.232,49,0.802,53,2.811,58,3.117,62,1.213,63,3.117,76,1.582,78,0.208,81,0.01,82,0.013,83,0.01,85,0.443,86,0.935,93,0.982,113,1.016,136,3.488,152,1.184,176,1.324,177,1.844,178,2.263,179,1.408,229,1.817,276,2.485,290,1.655,447,2.82,449,3.905,454,1.874,460,3.368,463,3.029,934,5.046,947,3.029,958,6.27,959,3.28,960,4.253,961,5.934,962,4.015,963,6.881,964,5.934,965,4.653,966,5.934,967,4.653,968,3.596,969,3.708,970,4.653,971,4.653,972,4.653,973,4.653,974,4.653,975,5.934,976,5.934,977,4.653,978,4.653,979,3.28,980,4.653,981,4.653]],["title/components/InfoButtonComponent.html",[273,0.909,698,1.723]],["body/components/InfoButtonComponent.html",[7,0.018,13,0.308,14,0.169,15,0.134,16,0.207,19,1.094,24,1.555,26,1.094,27,1.055,28,0.539,29,0.718,31,0.92,33,0.365,36,0.242,46,0.169,49,0.751,56,1.557,62,1.249,78,0.151,81,0.007,82,0.01,83,0.007,85,0.322,86,0.755,102,1.529,111,1.489,113,0.74,125,1.728,152,0.956,176,1.364,177,1.053,178,1.798,179,1.216,260,1.557,273,1.689,278,2.278,288,1.457,290,1.704,298,1.322,303,2.728,304,1.963,306,1.963,310,1.457,311,2.062,319,1.808,337,2.286,338,2.062,339,1.629,356,1.533,364,1.533,435,3.119,449,3.431,454,1.804,460,3.156,525,1.533,550,1.387,551,2.415,552,1.922,553,1.922,554,1.808,560,1.707,571,3.377,691,1.922,692,2.062,693,1.533,694,3.431,695,1.922,696,1.922,697,1.922,698,2.737,699,1.922,700,2.062,701,1.922,702,1.533,703,1.707,704,1.922,705,1.533,706,1.457,707,1.922,708,1.533,709,1.808,710,1.922,711,1.922,712,1.533,713,1.616,714,1.808,715,1.808,716,1.457,717,1.808,718,1.922,726,3.431,727,3.506,728,3.777,736,4.126,737,1.808,738,3.619,745,4.527,749,2.387,752,2.904,886,3.119,960,3.619,969,3.156,979,2.387,982,2.922,983,5.656,984,3.935,985,3.377,986,3.701,987,3.935,988,5.216,989,4.792,990,5.56,991,4.792,992,4.792,993,6.045,994,4.294,995,4.669,996,3.387,997,6.045,998,4.792,999,3.663,1000,4.792,1001,5.216,1002,3.387,1003,3.387,1004,3.377,1005,3.701,1006,4.792,1007,3.387,1008,4.792,1009,4.792,1010,3.387,1011,4.792,1012,3.387,1013,4.134,1014,4.134,1015,4.792,1016,2.387,1017,3.701,1018,2.052,1019,2.922,1020,3.387,1021,3.387,1022,3.387,1023,3.387,1024,3.387,1025,3.387,1026,2.387,1027,3.387,1028,1.808,1029,3.387,1030,2.616,1031,2.616,1032,3.387,1033,2.616,1034,2.616,1035,2.922,1036,2.922,1037,2.616,1038,3.387,1039,4.134,1040,3.387,1041,2.616,1042,2.616,1043,2.616,1044,2.922,1045,2.922,1046,2.922,1047,2.616,1048,3.387,1049,2.204,1050,2.922]],["title/modules/InfoButtonModule.html",[0,1.486,1051,2.683]],["body/modules/InfoButtonModule.html",[2,1.995,3,2.412,7,0.017,10,2.653,11,2.194,12,1.665,13,0.276,14,0.267,15,0.212,16,0.159,33,0.415,35,2.653,36,0.383,46,0.267,71,2.932,78,0.239,81,0.012,82,0.014,83,0.012,360,3.09,361,3.09,362,3.264,363,2.425,698,3.55,727,2.7,728,2.86,742,4.137,1018,3.246,1051,5.451,1052,4.621,1053,4.621,1054,4.621,1055,4.621,1056,4.898,1057,5.356,1058,4.564,1059,3.775,1060,5.356,1061,6.476,1062,5.356]],["title/injectables/InfoButtonService.html",[93,0.63,745,2.477]],["body/injectables/InfoButtonService.html",[7,0.018,13,0.262,14,0.209,15,0.286,16,0.205,19,1.266,24,1.51,26,1.266,27,0.917,28,0.554,29,0.831,31,1.028,33,0.343,36,0.3,46,0.276,47,0.3,49,1.01,54,1.169,56,1.802,59,0.693,62,1.093,78,0.187,81,0.009,82,0.012,83,0.009,85,0.399,86,0.873,93,0.917,112,2.96,113,0.916,125,2.055,152,1.107,173,1.561,174,1.425,177,1.303,179,0.799,229,1.636,260,1.362,273,1.324,290,1.491,298,1.636,339,1.425,454,1.51,538,2.795,543,2.96,652,3.36,726,4.09,727,3.466,728,3.671,729,2.954,730,2.954,731,3.616,732,2.954,733,3.903,734,4.379,735,3.237,736,3.765,737,3.671,738,4.044,739,3.616,740,5.933,741,5.704,742,3.237,743,2.954,744,3.237,745,3.609,746,3.908,747,4.282,748,6.095,749,2.954,750,4.783,751,4.282,752,4.281,753,5.36,754,4.783,755,4.783,756,5.704,757,3.616,758,3.616,759,3.616,760,3.616,761,3.616,762,4.783,763,4.783,764,4.783,765,4.783,766,4.783,767,4.783,768,4.783,769,3.616,770,3.616,771,3.616,772,3.616,773,3.616,774,3.616,775,3.616,1063,5.544,1064,4.191,1065,5.544,1066,4.191,1067,4.191]],["title/components/InfoDialogComponent.html",[273,0.909,700,1.638]],["body/components/InfoDialogComponent.html",[7,0.018,12,0.946,13,0.292,14,0.152,15,0.121,16,0.205,19,1.398,24,1.544,26,0.695,27,0.952,28,0.569,29,0.456,31,0.734,33,0.289,36,0.218,46,0.221,47,0.218,49,0.863,54,0.503,78,0.136,81,0.007,82,0.01,83,0.007,85,0.29,86,0.699,102,1.482,125,2.177,166,1.844,168,1.625,176,1.263,177,1.379,180,2.369,243,1.534,260,1.702,273,1.713,276,1.625,278,1.247,288,1.31,298,2.045,303,2.673,304,1.818,306,1.818,310,1.31,311,1.91,337,2.92,338,1.91,339,1.508,356,1.378,364,1.378,421,1.956,454,1.568,525,1.378,543,2.796,550,1.247,551,2.237,552,1.727,553,1.727,554,1.625,556,1.452,560,1.534,620,2.519,637,1.981,679,2.689,690,1.981,691,1.727,692,1.91,693,1.378,694,3.267,695,1.727,696,1.727,697,1.727,698,1.378,699,1.727,700,2.477,701,1.727,702,1.378,703,1.534,704,1.727,705,1.378,706,1.31,707,1.727,708,1.378,709,1.625,710,1.727,711,1.727,712,1.378,713,1.452,714,1.625,715,1.625,716,1.31,717,1.625,718,1.727,726,3.267,727,3.474,728,1.625,733,2.519,734,2.145,736,4.513,737,2.796,738,3.746,752,1.844,948,1.981,984,2.888,985,2.145,986,3.427,987,2.888,994,4.726,995,4.445,999,3.174,1004,2.145,1016,2.145,1017,2.351,1018,4.177,1026,3.128,1028,2.796,1030,2.351,1031,2.351,1037,4.726,1041,2.351,1042,2.351,1045,5.279,1046,4.518,1047,4.445,1049,2.888,1068,2.351,1069,3.128,1070,2.888,1071,3.829,1072,3.829,1073,3.829,1074,4.045,1075,4.518,1076,3.829,1077,4.502,1078,5.279,1079,4.518,1080,5.511,1081,4.445,1082,3.044,1083,5.279,1084,4.313,1085,4.438,1086,4.045,1087,4.518,1088,4.045,1089,4.518,1090,3.044,1091,3.829,1092,3.044,1093,3.427,1094,3.427,1095,3.691,1096,3.829,1097,3.829,1098,3.044,1099,3.044,1100,3.044,1101,3.829,1102,3.044,1103,2.626,1104,2.351,1105,2.626,1106,2.626,1107,2.626,1108,2.626,1109,2.626,1110,2.626,1111,2.626,1112,2.626,1113,2.626,1114,2.626,1115,2.626,1116,2.626,1117,2.626,1118,2.626,1119,2.626,1120,2.626,1121,4.438,1122,4.438,1123,4.045,1124,4.045,1125,2.351,1126,3.044,1127,3.829,1128,2.689,1129,3.044,1130,4.313,1131,4.4,1132,6.119,1133,3.427,1134,3.044,1135,2.888,1136,2.626,1137,1.981,1138,3.044,1139,4.045,1140,2.351,1141,3.044,1142,4.438,1143,4.438,1144,3.044,1145,3.044,1146,3.044,1147,2.626,1148,3.044,1149,3.829,1150,2.626,1151,1.981,1152,3.044,1153,3.044,1154,3.128,1155,3.044]],["title/interfaces/InfoDialogData.html",[47,0.272,1084,2.683]],["body/interfaces/InfoDialogData.html",[7,0.018,12,1.399,13,0.29,14,0.224,15,0.178,16,0.134,19,1.028,28,0.573,33,0.355,36,0.322,46,0.29,47,0.322,49,1.003,54,0.744,78,0.201,81,0.01,82,0.013,83,0.01,84,1.399,85,0.428,86,0.915,102,0.94,125,2.186,176,1.281,177,1.399,180,2.403,260,1.462,273,1.72,276,2.403,278,2.379,303,1.676,304,1.843,306,1.843,337,2.771,338,1.936,339,1.974,454,1.582,543,2.403,679,2.727,700,1.936,726,3.993,727,2.268,728,2.403,733,2.554,736,4.501,737,3.628,738,4.579,984,2.929,986,3.475,987,2.929,994,3.475,995,5.433,999,2.727,1016,3.172,1017,3.475,1018,2.727,1026,3.172,1030,3.475,1031,3.475,1068,3.475,1069,3.172,1070,2.929,1071,3.882,1072,3.882,1073,3.882,1074,4.486,1075,3.882,1076,3.882,1077,4.093,1078,5.011,1079,3.882,1080,3.882,1081,3.475,1083,5.011,1084,4.533,1086,3.475,1087,3.882,1088,3.475,1089,3.882,1091,3.882,1093,3.475,1094,3.475,1095,3.172,1096,3.882,1097,3.882,1101,3.882,1103,3.882,1104,4.486,1105,3.882,1106,3.882,1107,3.882,1108,3.882,1109,3.882,1110,3.882,1111,3.882,1112,3.882,1113,3.882,1114,3.882,1115,3.882,1116,3.882,1117,3.882,1118,3.882,1119,3.882,1120,3.882]],["title/modules/InfoDialogModule.html",[0,1.486,1056,2.477]],["body/modules/InfoDialogModule.html",[2,1.986,3,2.406,7,0.017,10,2.645,11,2.184,12,1.657,13,0.256,14,0.266,15,0.211,16,0.159,33,0.423,35,2.645,36,0.382,39,3.231,46,0.266,71,2.414,78,0.238,81,0.012,82,0.014,83,0.012,360,3.082,361,3.082,362,3.255,363,2.414,700,3.373,727,2.688,752,3.231,1016,3.758,1018,3.231,1019,4.6,1056,4.951,1058,4.552,1059,3.758,1095,3.758,1156,4.6,1157,4.6,1158,4.6,1159,5.332,1160,6.458,1161,6.458,1162,5.332,1163,5.332,1164,6.458,1165,4.6,1166,5.332]],["title/injectables/InjectorDelegateDataSourceService.html",[93,0.63,1167,2.94]],["body/injectables/InjectorDelegateDataSourceService.html",[7,0.017,13,0.153,14,0.319,15,0.153,16,0.177,19,1.199,24,1.748,26,1.71,27,1.204,28,0.662,29,1.091,31,1.254,33,0.369,36,0.276,46,0.193,49,0.709,78,0.173,81,0.008,82,0.011,83,0.008,85,0.368,86,0.827,88,2.026,93,0.868,97,2.513,111,2.388,113,0.844,114,1.582,118,1.313,121,2.753,122,1.947,123,1.947,125,1.201,150,1.749,177,1.631,179,1.137,181,2.803,183,2.566,187,2.566,189,2.566,191,2.566,194,2.566,196,2.566,199,1.662,201,1.662,203,1.662,205,1.662,207,1.662,210,1.662,212,1.662,214,1.662,229,1.508,230,2.646,231,2.646,232,2.646,233,2.646,234,2.646,235,2.646,240,3.124,285,3.181,369,2.376,370,3.052,371,3.183,373,3.372,374,3.224,376,2.979,377,2.514,386,2.341,387,3.183,388,2.979,389,4.935,390,3.8,391,2.514,392,2.514,393,2.514,394,2.514,395,2.514,396,2.514,397,2.514,398,2.514,399,2.514,400,2.514,401,2.514,402,2.514,403,2.514,413,2.062,414,1.947,415,2.514,416,2.514,418,2.514,427,2.192,1167,4.054,1168,5.144,1169,3.332,1170,5.249,1171,7.059,1172,3.863,1173,5.249,1174,5.144,1175,3.863,1176,5.962,1177,3.863,1178,3.863,1179,3.863,1180,3.863,1181,3.863]],["title/injectables/LocalStorageSyncService.html",[9,2.16,93,0.63]],["body/injectables/LocalStorageSyncService.html",[6,3.412,7,0.018,9,3.238,13,0.173,14,0.218,15,0.173,16,0.217,19,1.303,24,1.633,26,1.303,27,0.944,28,0.508,29,1.008,31,1.05,33,0.35,36,0.313,42,3.085,45,4.903,46,0.284,49,0.857,54,1.05,59,1.05,61,3.602,62,1.864,63,2.089,68,1.939,78,0.196,81,0.01,82,0.012,83,0.01,85,0.417,86,0.899,93,0.944,113,0.956,152,1.267,173,1.631,174,1.488,176,1.246,177,1.773,178,2.282,179,1.388,229,1.709,276,2.337,277,3.085,290,2.029,296,3.085,447,4.413,449,3.817,454,1.831,460,3.238,462,3.085,463,2.849,904,3.381,938,3.381,955,3.777,959,3.085,960,4.131,962,3.777,969,3.602,979,3.085,1182,5.624,1183,6.725,1184,5.705,1185,5.705,1186,4.378,1187,4.378,1188,5.705,1189,4.378,1190,4.378,1191,3.381,1192,3.777,1193,3.777,1194,3.777,1195,3.085,1196,5.705,1197,4.378,1198,4.378,1199,4.378,1200,4.378,1201,4.378,1202,4.378,1203,4.378,1204,4.378,1205,5.705,1206,4.378,1207,4.378,1208,4.378,1209,5.705,1210,4.378,1211,4.378]],["title/modules/MousePositionTrackerModule.html",[0,1.486,1212,2.94]],["body/modules/MousePositionTrackerModule.html",[0,1.969,2,1.879,7,0.018,13,0.2,14,0.251,15,0.2,16,0.15,33,0.401,35,2.557,36,0.361,39,3.057,40,2.693,41,2.542,46,0.311,54,1.204,56,1.639,59,1.033,78,0.225,81,0.011,82,0.014,83,0.011,113,1.102,114,2.066,118,1.714,125,1.568,177,1.568,276,2.693,363,2.283,669,3.283,826,3.283,919,3.283,946,3.555,947,3.283,948,3.283,950,3.783,951,3.896,969,3.543,1151,3.283,1212,4.821,1213,3.896,1214,3.896,1215,6.112,1216,6.779,1217,5.044,1218,5.044,1219,4.352,1220,4.352,1221,5.849,1222,5.044,1223,4.821,1224,5.044,1225,6.242,1226,6.242,1227,3.896,1228,6.242,1229,6.242,1230,5.044,1231,5.044,1232,4.352,1233,5.044,1234,5.044,1235,5.044,1236,5.044,1237,5.044,1238,5.044,1239,5.044,1240,5.044,1241,4.352,1242,5.044,1243,5.044,1244,4.352,1245,4.352,1246,4.352,1247,3.896,1248,5.044,1249,5.044,1250,5.044]],["title/directives/NumberDirective.html",[693,1.723,716,1.638]],["body/directives/NumberDirective.html",[7,0.017,13,0.186,14,0.234,15,0.186,16,0.205,19,1.362,24,1.498,26,1.498,27,1.085,28,0.531,29,0.983,31,0.776,33,0.259,36,0.336,46,0.234,54,0.776,69,2.846,78,0.21,81,0.01,82,0.013,83,0.01,85,0.447,163,1.938,177,1.458,243,2.364,260,2.243,278,3.158,298,2.56,303,2.222,327,3.305,337,2.846,338,2.566,339,2.027,454,1.624,560,2.364,692,2.97,693,3.297,715,2.504,716,2.566,717,3.184,749,3.306,999,3.614,1223,5.954,1227,5.065,1251,5.33,1252,5.33,1253,4.047,1254,5.964,1255,5.964,1256,5.964,1257,5.964,1258,4.69,1259,4.864,1260,4.69,1261,4.69,1262,5.964,1263,6.558,1264,5.658,1265,5.658,1266,5.658,1267,5.964,1268,5.964,1269,4.69,1270,5.964,1271,6.558,1272,4.69,1273,4.69,1274,4.69]],["title/modules/NumbersOnlyModule.html",[0,1.486,1275,2.683]],["body/modules/NumbersOnlyModule.html",[2,2.107,3,2.492,7,0.017,10,2.74,11,2.316,12,1.758,13,0.224,14,0.282,15,0.224,16,0.168,33,0.369,35,2.74,36,0.405,46,0.282,78,0.253,81,0.012,82,0.015,83,0.012,360,3.192,361,3.192,716,3.396,1251,4.368,1252,4.368,1266,4.879,1275,5.424,1276,4.879,1277,4.879,1278,4.879,1279,5.655,1280,5.655]],["title/components/OpacitySliderComponent.html",[273,0.909,702,1.723]],["body/components/OpacitySliderComponent.html",[7,0.018,11,2.654,13,0.201,14,0.143,15,0.114,16,0.215,19,0.972,24,1.637,26,0.657,27,1.072,28,0.605,29,0.431,31,0.989,33,0.159,36,0.206,46,0.143,49,0.757,53,1.237,54,0.476,62,1.827,68,1.447,69,2.031,74,2.031,78,0.28,81,0.006,82,0.009,83,0.006,85,0.274,86,0.67,102,1.522,152,1.193,163,1.647,176,1.211,179,1.193,243,1.45,260,1.383,267,2.027,271,2.579,272,1.535,273,1.427,274,4.217,275,1.372,278,2.076,279,4.075,288,1.237,290,2.227,297,1.743,298,1.123,303,2.643,304,1.744,306,1.744,308,2.273,309,2.273,310,1.237,311,2.573,312,2.031,313,2.418,326,4.688,327,2.145,339,0.977,356,1.302,364,1.302,421,1.447,454,1.882,525,1.302,533,1.872,550,1.178,551,2.145,552,1.632,553,1.632,554,1.535,556,2.853,560,1.45,571,3,572,2.771,689,1.872,690,3.646,691,1.632,692,1.832,693,1.302,694,3.179,695,1.632,696,1.632,697,1.632,698,1.302,699,1.632,700,1.237,701,1.632,702,2.536,703,3.914,704,1.632,705,1.302,706,1.237,707,1.632,708,1.302,709,1.535,710,1.632,711,1.632,712,1.302,713,1.372,714,1.535,715,1.535,716,1.237,717,1.535,718,1.632,730,3,737,2.273,886,2.771,968,1.743,1028,2.991,1033,2.221,1034,3.914,1035,4.372,1036,4.832,1037,3.288,1039,3.672,1041,4.326,1042,4.326,1044,3.672,1047,2.221,1049,3.298,1074,3.914,1081,4.326,1123,2.221,1124,2.221,1125,2.221,1128,1.743,1130,3.948,1131,2.771,1133,2.221,1135,1.872,1136,2.481,1137,3.298,1139,2.221,1140,2.221,1154,4.214,1232,2.481,1281,5.587,1282,5.587,1283,2.481,1284,6.333,1285,4.257,1286,3.672,1287,5.068,1288,4.257,1289,5.068,1290,4.257,1291,5.601,1292,5.601,1293,5.979,1294,3.672,1295,5.979,1296,5.068,1297,5.068,1298,4.832,1299,2.876,1300,2.876,1301,4.835,1302,2.876,1303,4.832,1304,2.876,1305,4.257,1306,4.257,1307,2.876,1308,4.257,1309,4.257,1310,2.876,1311,4.257,1312,2.876,1313,2.876,1314,2.876,1315,5.601,1316,2.876,1317,3.672,1318,5.068,1319,2.876,1320,2.876,1321,6.26,1322,5.068,1323,2.876,1324,4.257,1325,4.257,1326,2.876,1327,2.876,1328,3.672,1329,3.914,1330,3.672,1331,4.257,1332,3.672,1333,2.876,1334,2.221,1335,2.481,1336,2.876,1337,3.672,1338,2.481,1339,2.876,1340,2.481]],["title/modules/OpacitySliderModule.html",[0,1.486,1341,2.683]],["body/modules/OpacitySliderModule.html",[2,2.02,3,2.43,7,0.017,10,2.672,11,2.221,12,1.685,13,0.215,14,0.27,15,0.215,16,0.161,33,0.416,35,2.672,36,0.388,46,0.27,71,2.454,78,0.242,81,0.012,82,0.014,83,0.012,360,3.113,361,3.113,362,3.288,363,2.454,702,3.555,703,2.733,1058,4.598,1059,3.821,1281,4.187,1282,4.187,1341,5.379,1342,4.678,1343,4.678,1344,4.678,1345,5.422,1346,5.422,1347,6.524,1348,5.422,1349,6.524,1350,5.422]],["title/interfaces/OrganInfo.html",[47,0.272,1351,2.683]],["body/interfaces/OrganInfo.html",[7,0.018,13,0.069,14,0.087,15,0.069,16,0.052,20,2.842,27,1.256,28,0.5,29,0.897,31,0.29,33,0.159,36,0.125,46,0.213,47,0.125,49,0.876,53,2.414,54,0.99,58,1.756,59,0.78,62,0.456,68,1.251,74,3.658,76,0.981,78,0.129,81,0.004,82,0.006,83,0.004,84,0.544,85,0.167,86,0.454,102,0.603,144,3.732,145,1.748,146,3.628,147,2.86,152,0.576,160,0.717,163,0.569,170,2.422,176,0.498,178,0.858,179,0.55,260,0.569,261,2.033,266,4.579,267,2.033,271,1.061,273,0.689,274,1.878,275,0.836,278,2.199,279,1.878,297,1.748,303,1.589,304,0.717,306,0.717,311,0.753,312,0.836,313,0.836,319,3.555,326,2.033,327,0.883,330,3.578,339,1.45,421,1.45,449,0.994,454,1.631,460,1.637,527,2.228,533,1.14,543,2.866,556,1.756,559,2.033,602,1.234,603,2.033,611,2.033,620,1.637,621,1.234,692,0.753,705,0.793,706,3.337,732,1.234,808,3.921,886,2.777,897,3.295,910,1.352,919,2.395,939,1.234,946,2.593,947,2.395,948,2.395,950,1.061,968,4.08,985,4.097,1013,1.511,1028,0.935,1069,1.234,1128,4.367,1135,4.426,1259,3.007,1301,2.228,1351,3.784,1352,1.234,1353,1.234,1354,1.352,1355,2.885,1356,4.267,1357,2.489,1358,6.495,1359,5.418,1360,6.495,1361,2.489,1362,2.885,1363,2.489,1364,2.489,1365,4.624,1366,2.489,1367,2.489,1368,2.489,1369,1.511,1370,2.885,1371,1.511,1372,1.511,1373,1.511,1374,1.511,1375,1.352,1376,1.511,1377,2.489,1378,1.511,1379,1.511,1380,2.489,1381,1.511,1382,2.489,1383,2.033,1384,3.681,1385,1.511,1386,1.511,1387,3.174,1388,4.38,1389,5.407,1390,1.511,1391,1.511,1392,1.511,1393,3.174,1394,5.015,1395,4.38,1396,1.511,1397,1.511,1398,1.511,1399,1.511,1400,2.489,1401,1.511,1402,3.174,1403,3.921,1404,1.511,1405,1.511,1406,1.511,1407,3.174,1408,4.38,1409,1.511,1410,1.511,1411,1.511,1412,1.511,1413,2.489,1414,1.511,1415,2.489,1416,2.489,1417,2.489,1418,1.511,1419,1.511,1420,3.174,1421,4.38,1422,1.511,1423,1.511,1424,1.511,1425,1.511,1426,2.489,1427,1.511,1428,1.511,1429,1.511,1430,2.489,1431,1.511,1432,2.489,1433,3.681,1434,1.511,1435,1.511,1436,1.511,1437,4.38,1438,2.489,1439,1.511,1440,1.511,1441,2.489,1442,1.511,1443,1.511,1444,2.489,1445,1.511,1446,1.511,1447,2.489,1448,1.511,1449,3.174,1450,4.38,1451,1.511,1452,1.511,1453,1.511,1454,1.511,1455,2.489,1456,2.489,1457,1.511,1458,1.511,1459,2.489,1460,1.511,1461,2.489,1462,2.489,1463,3.681,1464,3.681,1465,1.511,1466,1.511,1467,1.511,1468,1.511,1469,1.511,1470,2.228,1471,1.511,1472,1.511,1473,5.295,1474,1.511,1475,1.751,1476,1.751,1477,1.751,1478,1.751,1479,4.267,1480,1.751,1481,3.679,1482,1.751,1483,4.267,1484,1.511,1485,1.751,1486,1.751,1487,1.751,1488,2.842,1489,2.885,1490,3.174,1491,1.751,1492,2.489,1493,1.751,1494,3.679,1495,2.885,1496,3.679,1497,3.679,1498,4.267,1499,1.751,1500,1.751,1501,1.751,1502,1.751,1503,1.751,1504,2.885,1505,2.885,1506,1.751,1507,1.751,1508,3.679,1509,1.751,1510,2.885,1511,1.751,1512,1.751,1513,2.885,1514,1.511,1515,1.751,1516,1.751,1517,2.885,1518,1.751,1519,1.751,1520,1.751,1521,3.679,1522,1.751,1523,1.751,1524,1.751,1525,1.751,1526,1.751,1527,2.885,1528,1.751,1529,1.751,1530,4.719,1531,2.885,1532,3.679,1533,1.751,1534,4.84,1535,2.885,1536,3.679,1537,3.679,1538,5.369,1539,2.885,1540,2.885,1541,1.751,1542,1.751,1543,3.679,1544,1.751,1545,1.751,1546,1.751,1547,1.751,1548,1.751,1549,1.511,1550,1.751,1551,1.751,1552,1.751,1553,1.751,1554,1.751,1555,1.751,1556,1.751,1557,1.751,1558,1.751,1559,1.751,1560,1.751,1561,3.679,1562,2.885,1563,1.751,1564,1.751,1565,1.751,1566,1.751,1567,1.511,1568,1.751,1569,1.751,1570,1.751,1571,1.751,1572,1.751,1573,1.751,1574,1.511,1575,2.885,1576,2.885,1577,2.885,1578,2.885,1579,2.885,1580,1.751,1581,1.751,1582,1.751,1583,1.751]],["title/modules/OrganSelectorModule.html",[0,1.486,1584,2.683]],["body/modules/OrganSelectorModule.html",[2,2.038,3,2.444,7,0.017,10,2.687,11,2.241,12,1.701,13,0.217,14,0.273,15,0.217,16,0.163,33,0.411,35,2.687,36,0.392,46,0.273,71,2.477,78,0.245,81,0.012,82,0.014,83,0.012,360,3.13,361,3.13,362,3.306,363,2.477,705,3.559,706,2.355,1058,4.623,1059,3.857,1352,3.857,1353,3.857,1584,5.389,1585,4.721,1586,4.721,1587,4.721,1588,5.472,1589,5.472,1590,6.56,1591,5.472]],["title/interfaces/PluckUniqueOptions.html",[47,0.272,1592,2.683]],["body/interfaces/PluckUniqueOptions.html",[7,0.017,13,0.176,14,0.287,15,0.176,16,0.132,28,0.395,29,0.862,30,3.607,31,0.733,33,0.317,46,0.376,47,0.317,49,0.969,53,1.907,54,0.951,56,2.47,59,0.733,69,2.744,81,0.01,82,0.013,83,0.01,84,1.378,85,0.422,86,1.006,111,1.378,113,0.968,118,1.506,133,2.744,160,1.816,260,1.44,285,3.485,290,1.577,339,1.955,413,3.071,427,2.516,542,2.686,557,2.686,650,4.156,800,5.541,802,5.83,804,5.718,836,2.885,838,4.931,902,4.442,904,3.423,1592,5.358,1593,3.124,1594,3.124,1595,4.442,1596,5.508,1597,6.757,1598,5.751,1599,5.751,1600,5.751,1601,5.751,1602,6.512,1603,4.432,1604,4.432,1605,4.442,1606,3.824,1607,3.824,1608,3.824,1609,3.824,1610,4.962,1611,6.456,1612,6.19,1613,6.19,1614,5.829,1615,4.962,1616,5.508,1617,4.432,1618,4.442,1619,4.432,1620,4.432,1621,4.432,1622,4.432]],["title/interfaces/Segment.html",[47,0.272,583,2.477]],["body/interfaces/Segment.html",[7,0.018,12,1.391,13,0.122,14,0.154,15,0.122,16,0.092,27,0.51,28,0.47,31,0.957,33,0.247,36,0.221,46,0.223,47,0.32,49,0.894,54,1.162,58,2.762,59,1.095,68,1.522,69,2.136,78,0.236,81,0.013,82,0.01,83,0.007,84,0.958,85,0.63,86,0.912,97,1.001,102,0.935,152,1.052,162,2.621,163,1.455,176,0.877,178,1.721,179,0.587,260,1.001,265,4.5,268,2.005,269,3.196,272,1.645,273,1.069,275,1.47,278,2.16,287,3.54,288,2.918,289,1.47,298,3.024,303,1.148,304,1.262,306,1.262,308,1.645,309,1.645,311,1.326,312,1.47,313,1.47,324,1.645,327,3.337,337,2.136,338,1.326,339,1.967,421,1.792,454,0.839,521,1.748,523,2.171,524,3.986,525,3.221,526,2.005,529,3.717,536,2.005,538,2.918,539,2.914,549,2.171,550,1.262,555,2.171,556,2.762,557,3.196,558,5.34,559,3.155,561,2.379,562,2.379,563,5.34,564,2.379,566,2.379,574,4.955,575,2.379,576,2.379,577,3.458,578,2.379,582,2.914,583,4.5,584,2.379,586,2.379,587,5.694,588,4.073,589,3.458,590,3.768,592,2.379,593,2.379,594,2.171,595,2.379,602,2.171,603,3.155,605,2.379,606,2.379,607,2.171,608,2.379,609,4.955,611,2.171,612,4.073,613,2.171,615,2.171,616,2.171,617,2.005,618,2.171,619,3.458,620,3.285,621,2.171,622,2.171,623,3.155,624,3.155,625,3.155,626,2.379,627,2.379,628,3.458,629,2.379,630,3.458,631,2.379,632,2.379,633,1.867,634,3.458,635,2.379,636,4.073,637,2.914,638,2.171,639,2.379,640,2.379,641,3.458,642,2.379,643,2.379,644,3.458,645,2.379,646,2.171,647,3.458,648,3.458,649,3.458,650,2.005,651,2.379,652,1.867,653,2.379,654,2.379,655,2.379,656,2.379,657,2.379,658,2.379,659,2.379,660,2.379,661,2.379,662,2.379,663,2.379,664,2.379,665,2.379,666,2.379,667,2.379,668,2.379,669,2.005,670,2.171,671,2.005,672,2.379,673,2.379,674,2.171,675,2.171,676,2.379,677,2.171,678,2.379,679,1.867,680,2.379,681,2.379,682,2.171,683,2.171,684,2.379,685,2.379,686,2.379,687,2.379]],["title/interfaces/StackOp.html",[47,0.272,590,2.477]],["body/interfaces/StackOp.html",[7,0.018,12,1.392,13,0.122,14,0.154,15,0.122,16,0.092,27,0.51,28,0.47,31,0.958,33,0.247,36,0.221,46,0.223,47,0.321,49,0.713,54,1.162,58,2.137,59,1.095,68,1.048,69,2.137,78,0.236,81,0.013,82,0.01,83,0.007,84,0.958,85,0.678,86,0.912,97,1.002,102,0.936,152,1.053,162,2.622,163,1.882,176,0.877,178,1.722,179,0.588,260,1.002,265,4.632,268,2.007,269,3.197,272,1.646,273,1.069,275,1.471,278,2.161,287,3.69,288,2.919,289,1.471,298,2.982,303,1.149,304,1.263,306,1.263,308,1.646,309,1.646,311,1.327,312,1.471,313,1.471,324,1.646,327,3.419,337,2.137,338,1.327,339,1.968,421,1.793,454,0.84,521,1.75,523,2.173,524,3.491,525,2.905,526,2.007,529,3.719,536,2.007,538,2.919,539,2.916,549,2.173,550,1.263,555,2.173,556,2.518,557,2.715,558,5.341,559,3.157,561,2.381,562,2.381,563,5.425,564,2.381,566,2.381,574,5.114,575,2.381,576,2.381,577,4.075,578,2.381,582,2.916,583,4.31,584,2.381,586,2.381,587,5.731,588,4.075,589,4.075,590,4.004,592,2.381,593,2.381,594,2.173,595,2.381,602,2.173,603,3.157,605,2.381,606,2.381,607,2.173,608,2.381,609,4.956,611,2.173,612,4.473,613,2.173,615,2.173,616,2.173,617,2.007,618,2.173,619,2.381,620,2.542,621,3.157,622,3.157,623,4.335,624,3.719,625,4.335,626,2.381,627,2.381,628,3.46,629,2.381,630,3.46,631,2.381,632,2.381,633,1.869,634,3.46,635,2.381,636,4.075,637,2.916,638,2.173,639,2.381,640,2.381,641,3.46,642,2.381,643,2.381,644,3.46,645,2.381,646,2.173,647,3.46,648,3.46,649,3.46,650,2.007,651,2.381,652,1.869,653,2.381,654,2.381,655,2.381,656,2.381,657,2.381,658,2.381,659,2.381,660,2.381,661,2.381,662,2.381,663,2.381,664,2.381,665,2.381,666,2.381,667,2.381,668,2.381,669,2.007,670,2.173,671,2.007,672,2.381,673,2.381,674,2.173,675,2.173,676,2.381,677,2.173,678,2.381,679,1.869,680,2.381,681,2.381,682,2.173,683,2.173,684,2.381,685,2.381,686,2.381,687,2.381]],["title/components/StoreDebugComponent.html",[273,0.909,708,1.723]],["body/components/StoreDebugComponent.html",[7,0.018,13,0.218,14,0.166,15,0.132,16,0.206,19,1.08,24,1.547,26,0.759,27,1.165,28,0.587,29,0.498,31,0.782,33,0.303,36,0.238,46,0.274,49,0.639,54,0.991,58,2.626,59,0.55,61,3.595,62,1.804,69,2.86,78,0.294,81,0.007,82,0.01,83,0.007,85,0.316,86,0.745,102,1.558,113,0.726,125,2.287,133,1.586,152,0.944,174,2.037,176,1.345,177,1.033,178,1.957,179,1.049,243,1.675,260,1.536,272,1.774,273,1.725,275,1.586,288,1.43,290,2.132,298,1.297,303,2.718,304,1.936,306,1.936,308,2.524,309,2.524,310,1.43,311,2.725,312,2.256,313,2.626,324,2.524,337,2.256,338,2.034,339,1.607,356,1.504,364,1.504,421,1.13,449,3.402,454,1.288,460,3.123,525,1.504,538,1.675,550,1.361,551,2.383,552,1.886,553,1.886,554,1.774,556,1.586,560,1.675,572,3.077,613,3.332,689,2.163,691,1.886,692,2.034,693,1.504,694,3.402,695,1.886,696,1.886,697,1.886,698,1.504,699,1.886,700,1.43,701,1.886,702,1.504,703,1.675,704,1.886,705,1.504,706,1.43,707,1.886,708,2.714,709,4.168,710,1.886,711,1.886,712,1.504,713,1.586,714,1.774,715,1.774,716,1.43,717,1.774,718,1.886,798,3.077,833,3.332,834,2.163,866,3.332,874,3.651,897,3.651,960,4.408,969,3.123,979,2.342,1050,2.867,1070,3.077,1488,3.651,1623,4.878,1624,4.878,1625,2.567,1626,4.079,1627,6.921,1628,5.503,1629,4.728,1630,4.728,1631,5.994,1632,5.994,1633,4.728,1634,4.629,1635,4.728,1636,4.728,1637,4.728,1638,3.323,1639,4.728,1640,3.323,1641,4.728,1642,3.323,1643,3.323,1644,4.747,1645,5.464,1646,2.867,1647,4.079,1648,3.323,1649,3.323,1650,3.323,1651,3.323,1652,3.323,1653,4.728,1654,3.323,1655,3.323,1656,3.323,1657,3.323,1658,3.323,1659,3.323,1660,4.728,1661,4.728,1662,4.728,1663,4.079,1664,2.567]],["title/modules/StoreDebugModule.html",[0,1.486,1665,2.683]],["body/modules/StoreDebugModule.html",[2,2.083,3,2.476,7,0.017,10,2.722,11,2.291,12,1.738,13,0.222,14,0.279,15,0.222,16,0.166,33,0.391,35,2.722,36,0.4,46,0.279,71,2.532,78,0.25,81,0.012,82,0.014,83,0.012,360,3.171,361,3.171,362,3.35,363,2.532,708,3.569,709,2.986,1623,3.942,1624,3.942,1665,5.412,1666,4.825,1667,4.825,1668,4.825,1669,5.593,1670,5.593]],["title/components/TextSearchComponent.html",[273,0.909,310,1.638]],["body/components/TextSearchComponent.html",[7,0.018,13,0.183,14,0.123,15,0.097,16,0.214,19,0.863,24,1.632,26,1.275,27,1.117,28,0.619,29,0.95,30,2.762,31,0.924,33,0.325,36,0.176,46,0.23,47,0.176,49,0.957,54,0.625,56,1.497,59,0.625,62,1.787,63,1.804,68,0.835,72,2.792,78,0.263,81,0.005,82,0.008,83,0.005,85,0.234,86,0.595,102,1.48,111,1.432,113,0.537,114,1.007,115,1.007,116,1.395,118,0.835,136,1.312,152,1.032,160,1.007,162,1.112,163,2.256,168,1.312,173,0.915,174,0.835,177,1.175,178,1.538,179,1.307,243,1.905,256,3.935,257,4.686,258,4.686,259,1.732,260,1.814,261,1.732,262,2.12,263,4.468,264,5.519,265,1.599,266,2.291,267,3.247,268,1.599,269,1.489,270,3.261,271,2.792,272,1.312,273,1.333,274,2.998,275,1.172,276,1.312,277,2.664,278,2.415,279,2.998,280,3.974,281,1.732,282,4.312,283,1.898,284,2.46,285,2.792,286,3.974,287,1.239,288,1.627,289,1.172,290,2.255,291,4.554,292,5.473,293,1.898,294,1.898,295,1.732,296,1.732,297,1.489,298,2.973,299,5.881,300,5.421,301,3.261,302,2.92,303,2.554,304,1.548,305,3.261,306,1.548,307,3.974,308,2.018,309,2.018,310,2.226,311,2.403,312,1.804,313,2.198,314,3.634,315,2.12,316,2.12,317,2.12,318,2.12,319,1.312,320,3.261,321,5.299,322,3.261,323,3.261,324,3.148,325,4.817,326,4.156,327,1.905,328,3.974,329,5.022,330,3.247,331,3.974,332,5.022,333,4.817,334,3.974,335,3.261,336,3.261,337,1.804,338,1.627,339,1.285,340,3.974,341,2.12,342,2.12,343,3.261,344,2.664,345,3.261,346,2.92,347,2.615,348,3.261,349,2.145,350,2.12,351,2.12,356,1.112,364,1.112,421,1.285,454,0.669,525,1.112,542,2.291,550,1.007,551,1.905,552,1.395,553,1.395,554,1.312,556,1.172,560,1.239,571,2.664,572,2.46,689,1.599,690,1.599,691,1.395,692,1.627,693,1.112,694,2.936,695,1.395,696,1.395,697,1.395,698,1.112,699,1.395,700,1.057,701,1.395,702,1.112,703,1.239,704,1.395,705,1.112,706,1.057,707,1.395,708,1.112,709,1.312,710,1.395,711,1.395,712,1.112,713,1.172,714,1.312,715,1.312,716,1.057,717,1.312,718,1.395,798,2.46,874,1.898,1028,1.312,1033,1.898,1034,2.92,1049,1.599,1123,1.898,1124,1.898,1125,4.312,1127,2.12,1128,1.489,1130,1.732,1131,2.46,1137,1.599,1139,1.898,1140,1.898,1154,1.732,1294,3.261,1329,1.898,1337,3.261,1534,2.12,1664,1.898,1671,3.78,1672,3.78,1673,3.78,1674,2.457,1675,2.457,1676,2.457,1677,2.457,1678,2.457,1679,3.78,1680,2.457,1681,2.457,1682,3.78,1683,2.457,1684,2.457,1685,2.457,1686,2.457,1687,2.457,1688,2.12,1689,2.457,1690,2.457,1691,2.457,1692,2.457,1693,2.457,1694,2.457,1695,2.457,1696,4.554,1697,2.457,1698,2.457,1699,2.457,1700,2.457]],["title/modules/TextSearchModule.html",[0,1.486,1701,2.683]],["body/modules/TextSearchModule.html",[2,1.876,3,2.323,7,0.017,10,2.555,11,2.063,12,1.565,13,0.2,14,0.251,15,0.2,16,0.15,33,0.419,35,2.555,36,0.361,46,0.251,71,2.823,78,0.225,81,0.011,82,0.014,83,0.011,257,3.278,258,3.278,281,3.55,288,2.167,289,2.403,298,1.966,310,3.349,360,2.976,361,2.976,362,3.144,363,2.28,618,3.55,719,4.826,1696,3.89,1701,5.46,1702,4.345,1703,4.345,1704,5.037,1705,4.345,1706,6.484,1707,6.484,1708,5.037,1709,6.237,1710,6.237,1711,6.237,1712,5.037,1713,6.237,1714,5.037,1715,6.237,1716,5.037,1717,5.037,1718,5.037,1719,5.037,1720,5.037]],["title/components/TrackingPopupComponent.html",[273,0.909,712,1.723]],["body/components/TrackingPopupComponent.html",[0,1.301,6,3.234,7,0.017,12,1.971,13,0.218,14,0.166,15,0.132,16,0.213,19,1.082,24,1.609,26,1.259,27,1.09,28,0.604,29,0.826,31,0.912,33,0.304,36,0.239,46,0.166,49,0.45,53,2.728,54,0.551,59,0.912,62,1.235,68,1.873,74,1.59,78,0.246,81,0.007,82,0.01,83,0.007,85,0.451,86,0.746,102,1.567,125,1.971,131,2.02,166,2.871,177,1.036,179,1.144,243,2.388,272,1.779,273,1.316,275,1.59,276,1.779,288,1.434,290,1.685,298,1.301,300,2.574,303,2.72,304,1.94,306,1.94,308,2.529,309,2.529,310,1.434,311,2.038,312,2.26,313,2.63,356,1.509,364,1.509,421,2.239,447,2.871,454,1.635,462,3.339,463,3.083,525,1.509,550,1.365,551,2.388,552,1.891,553,1.891,554,1.779,556,2.26,560,1.68,572,3.083,620,3.128,689,2.169,690,3.083,691,1.891,692,2.038,693,1.509,694,3.406,695,1.891,696,1.891,697,1.891,698,1.509,699,1.891,700,1.434,701,1.891,702,1.509,703,1.68,704,1.891,705,1.509,706,1.434,707,1.891,708,1.509,709,1.779,710,1.891,711,1.891,712,2.717,713,3.484,714,3.618,715,1.779,716,1.434,717,1.779,718,1.891,737,1.779,798,3.083,919,3.083,946,3.339,947,3.083,948,3.083,950,3.637,951,4.257,983,4.257,1001,4.087,1028,2.529,1043,3.659,1049,2.169,1077,3.884,1086,2.574,1131,3.083,1133,2.574,1137,3.083,1220,4.087,1244,2.875,1245,2.875,1246,2.875,1247,2.574,1259,4.469,1329,2.574,1330,2.875,1334,2.574,1574,5.47,1721,5.52,1722,5.52,1723,2.875,1724,5.511,1725,4.737,1726,6.002,1727,4.737,1728,4.737,1729,5.443,1730,4.737,1731,4.737,1732,4.737,1733,3.333,1734,4.737,1735,7.147,1736,3.333,1737,4.737,1738,3.333,1739,3.333,1740,4.737,1741,3.333,1742,3.333,1743,3.333,1744,3.333,1745,3.333,1746,3.333,1747,3.333,1748,3.333,1749,3.333,1750,4.737,1751,3.333,1752,3.333,1753,3.333,1754,3.333,1755,3.333,1756,4.087,1757,4.737,1758,4.087,1759,4.737,1760,3.333,1761,3.333,1762,4.737,1763,3.333,1764,3.659,1765,3.333,1766,3.333,1767,3.333,1768,3.333,1769,4.737,1770,5.511,1771,3.333,1772,3.333,1773,3.333,1774,3.333,1775,3.333,1776,3.333,1777,2.875,1778,3.333,1779,3.333,1780,3.333,1781,3.333,1782,3.333]],["title/modules/TrackingPopupModule.html",[0,1.486,1783,2.683]],["body/modules/TrackingPopupModule.html",[2,2.057,3,2.457,7,0.017,10,2.702,11,2.262,12,1.717,13,0.219,14,0.275,15,0.219,16,0.164,33,0.403,35,2.702,36,0.395,46,0.275,71,2.5,78,0.247,81,0.012,82,0.014,83,0.012,360,3.147,361,3.147,362,3.325,363,2.5,712,3.563,713,2.635,1721,4.266,1722,4.266,1783,5.399,1784,4.765,1785,4.765,1786,4.765,1787,5.523,1788,6.597,1789,5.523,1790,5.523]],["title/injectables/TrackingState.html",[93,0.63,1791,2.683]],["body/injectables/TrackingState.html",[7,0.018,13,0.197,14,0.248,15,0.197,16,0.184,19,1.412,24,1.134,26,1.134,27,1.023,28,0.443,29,0.744,31,0.821,33,0.388,36,0.355,40,2.652,41,2.503,46,0.351,47,0.355,53,3.119,54,1.165,56,1.614,59,0.821,62,1.612,63,2.37,74,2.37,76,2.288,78,0.222,81,0.011,82,0.013,83,0.011,85,0.473,93,1.023,229,1.939,243,2.503,319,2.652,369,2.799,454,1.684,713,2.37,746,3.5,791,5.199,828,4.775,829,4.357,830,3.836,831,3.836,833,4.357,834,3.232,839,3.5,968,3.01,1195,3.5,1729,5.597,1791,4.357,1792,3.232,1793,6.182,1794,5.334,1795,5.808,1796,4.966,1797,3.5,1798,3.5,1799,4.357,1800,4.382,1801,4.285,1802,4.285,1803,5.334,1804,4.285,1805,4.285,1806,4.285,1807,4.285,1808,3.836,1809,4.285,1810,4.285,1811,4.285]],["title/interfaces/TrackingStateModel.html",[47,0.272,1797,2.683]],["body/interfaces/TrackingStateModel.html",[7,0.018,13,0.2,14,0.252,15,0.2,16,0.151,27,0.837,28,0.451,29,0.937,33,0.391,36,0.362,40,2.701,41,2.55,46,0.354,47,0.362,53,3.135,54,1.173,56,1.644,59,0.837,62,1.63,63,2.414,74,2.414,76,2.307,78,0.226,81,0.011,82,0.014,83,0.011,84,1.572,85,0.482,86,0.985,93,1.034,319,2.701,369,2.29,454,1.378,713,2.414,746,3.565,791,4.83,828,4.83,829,4.407,830,3.907,831,3.907,833,4.407,834,3.292,839,3.565,968,3.065,1195,3.565,1729,5.81,1791,3.565,1792,3.292,1794,4.364,1795,5.395,1797,4.407,1798,3.565,1799,4.407,1800,4.418,1801,4.364,1802,4.364,1803,5.395,1804,4.364,1805,4.364,1806,4.364,1807,4.364,1808,3.907,1809,4.364,1810,4.364,1811,4.364]],["title/injectables/WorkerCCFDatabaseDataSourceService.html",[93,0.63,436,2.307]],["body/injectables/WorkerCCFDatabaseDataSourceService.html",[7,0.018,13,0.129,14,0.297,15,0.129,16,0.139,19,1.067,24,1.726,26,1.676,27,1.177,28,0.654,29,1.066,31,1.238,33,0.371,36,0.234,46,0.233,47,0.234,49,0.631,54,0.902,59,0.902,76,1.111,78,0.244,81,0.007,82,0.01,83,0.007,85,0.311,86,0.736,88,1.588,93,0.984,97,2.474,102,0.683,103,2.823,111,2.358,113,0.714,114,1.339,115,1.339,118,1.111,121,2.01,122,1.647,123,1.647,125,1.016,149,1.559,150,2.963,152,0.652,173,1.217,174,1.111,178,1.621,179,1.248,183,2.346,187,2.346,189,2.346,191,2.346,194,2.346,196,2.346,199,1.406,201,1.406,203,1.406,205,1.406,207,1.406,210,1.406,212,1.406,214,1.406,229,1.276,230,2.355,231,2.355,232,2.355,233,2.355,234,2.355,235,2.355,240,2.963,347,3.094,349,2.651,366,4.084,367,3.041,368,2.127,369,2.849,370,2.601,371,2.911,372,3.843,373,3.587,374,3.299,375,3.608,376,2.651,377,2.127,379,2.524,380,4.251,381,5.128,383,4.193,384,4.193,386,1.98,387,2.911,388,2.651,389,4.896,390,3.699,391,2.127,392,2.127,393,2.127,394,2.127,395,2.127,396,2.127,397,2.127,398,2.127,399,2.127,400,2.127,401,2.127,402,2.127,403,2.127,404,2.524,405,3.293,406,3.293,407,2.303,408,3.293,409,2.303,410,2.127,411,3.293,412,2.831,413,1.745,414,1.647,415,2.127,416,2.127,417,2.303,418,2.127,419,2.303,420,2.303,421,1.111,422,2.303,423,2.303,424,2.303,425,2.303,426,2.303,427,1.855,428,3.293,429,2.303,430,2.127,431,2.127,432,2.303,433,1.98,434,2.303,435,3.041,436,2.831,437,3.293,438,3.549,439,2.303,440,2.303,441,2.303,442,2.303,444,2.82,445,2.82,1812,4.672,1813,3.268,1814,3.268]],["title/interfaces/XYZTriplet.html",[47,0.272,1815,2.94]],["body/interfaces/XYZTriplet.html",[7,0.018,10,2.425,13,0.128,14,0.161,15,0.128,16,0.096,27,0.535,28,0.483,33,0.299,36,0.231,46,0.161,47,0.231,49,0.732,53,1.994,54,1.036,59,1.137,62,1.751,68,2.378,74,1.542,78,0.242,81,0.007,82,0.01,83,0.007,84,1.005,85,0.308,86,0.73,100,2.824,102,1.132,113,0.706,133,3.338,152,1.34,160,1.899,163,2.414,176,0.92,178,2.159,179,1.28,266,1.959,273,1.294,274,4.372,275,1.542,278,2.866,279,4.372,303,1.204,304,1.324,306,1.324,311,1.391,312,1.542,313,1.542,338,1.391,347,1.835,349,1.835,356,1.463,357,2.496,358,2.496,364,3.167,412,1.959,421,2.413,431,2.104,449,1.835,454,1.707,460,2.631,683,2.278,751,2.496,934,2.496,960,2.104,969,2.631,999,1.959,1028,1.726,1069,2.278,1070,2.104,1130,2.278,1131,2.104,1259,3.819,1368,3.999,1369,2.789,1383,3.267,1514,2.789,1634,2.496,1777,5.107,1815,5.037,1816,2.789,1817,6.266,1818,6.266,1819,6.996,1820,3.232,1821,3.232,1822,5.188,1823,2.789,1824,3.232,1825,2.789,1826,3.232,1827,3.232,1828,4.675,1829,4.635,1830,3.232,1831,3.232,1832,4.635,1833,4.635,1834,3.232,1835,3.232,1836,3.232,1837,4.635,1838,3.232,1839,3.232,1840,4.635,1841,3.232,1842,3.232,1843,4.635,1844,4.635,1845,3.232,1846,3.232,1847,4.635,1848,3.232,1849,3.232,1850,4.635,1851,4.635,1852,3.232,1853,3.232,1854,3.232,1855,3.232,1856,3.232,1857,3.232,1858,3.232,1859,4.635,1860,4.635,1861,3.232,1862,4.635,1863,3.232,1864,3.232,1865,3.232,1866,3.232,1867,3.232,1868,3.232,1869,3.232,1870,3.232,1871,3.232,1872,3.232,1873,3.232,1874,3.232,1875,3.232,1876,3.232,1877,3.232,1878,3.232,1879,3.232,1880,2.789,1881,3.999,1882,3.232,1883,4.635,1884,3.232,1885,4.635,1886,3.232,1887,4.635,1888,5.419,1889,3.232,1890,3.232,1891,3.232,1892,3.232,1893,3.232,1894,3.232,1895,3.232,1896,3.232,1897,4.635,1898,3.232,1899,3.232,1900,4.635,1901,3.232,1902,4.635,1903,3.232,1904,3.232,1905,3.232,1906,3.232,1907,3.232,1908,3.232,1909,3.232,1910,3.232,1911,3.232,1912,3.232,1913,3.232,1914,4.635,1915,3.232,1916,3.232,1917,3.232,1918,3.232,1919,3.232,1920,3.232,1921,3.232,1922,3.232,1923,3.232,1924,3.232,1925,3.232,1926,3.232,1927,4.635,1928,3.232,1929,3.232,1930,3.232,1931,3.232]],["title/changelog.html",[1932,2.454,1933,2.24,1934,2.454]],["body/changelog.html",[3,1.546,7,0.013,13,0.209,18,0.95,24,0.382,28,0.149,29,0.251,30,1.484,40,0.894,41,0.844,47,0.377,68,1.411,81,0.004,82,0.006,83,0.012,84,0.52,86,0.264,97,1.349,102,1.501,103,1.886,116,0.95,125,2.162,131,1.015,138,1.809,140,1.09,144,1.578,145,1.685,148,1.09,150,0.758,152,1.141,157,1.015,163,0.544,174,0.569,180,2.81,181,0.894,263,1.959,266,1.015,269,3.01,271,1.685,273,0.991,290,0.595,297,3.01,299,4.671,303,1.036,314,1.09,324,2.216,327,1.797,329,2.147,330,1.18,332,1.293,344,1.18,364,2.588,412,2.515,430,1.809,525,0.758,526,1.09,543,1.484,551,1.401,554,0.894,556,2.197,557,1.015,560,2.092,582,1.09,601,1.293,607,1.959,616,1.959,620,0.95,622,1.18,623,5.49,625,1.959,633,2.16,637,1.09,638,1.18,652,1.015,669,1.809,670,1.959,671,1.09,677,1.18,679,1.685,692,0.72,703,0.844,706,3.049,714,0.894,730,1.959,733,2.819,734,1.18,735,1.293,736,2.16,747,2.147,826,2.997,866,1.18,869,2.398,870,3.973,887,1.444,889,1.293,894,1.293,919,3.425,922,1.444,926,1.444,931,2.147,935,1.959,937,4.285,938,2.147,939,1.18,940,1.444,941,1.444,950,1.685,983,2.147,984,1.09,985,1.18,987,2.32,988,1.444,999,3.819,1004,5.235,1005,5.552,1014,1.444,1026,1.18,1028,0.894,1043,3.206,1070,1.09,1077,1.18,1088,1.293,1093,3.206,1094,1.293,1128,1.015,1135,1.09,1150,1.444,1151,1.09,1241,1.444,1247,1.293,1264,3.973,1265,1.444,1286,3.075,1301,1.293,1303,5.808,1317,2.398,1328,3.581,1332,1.444,1334,2.147,1338,1.444,1340,1.444,1359,1.293,1361,1.444,1363,1.444,1364,2.398,1365,4.948,1366,1.444,1403,2.753,1473,2.398,1474,2.398,1488,2.147,1490,3.075,1492,2.398,1549,4.285,1567,1.444,1618,2.147,1626,1.444,1634,3.556,1663,1.444,1664,2.753,1696,1.293,1758,1.444,1764,1.293,1808,1.293,1822,4.671,1823,5.609,1825,3.581,1828,4.753,1880,3.075,1881,1.444,1933,2.512,1934,2.147,1935,1.444,1936,1.444,1937,4.753,1938,2.78,1939,4.151,1940,4.605,1941,1.674,1942,2.78,1943,2.78,1944,4.967,1945,2.78,1946,1.674,1947,1.674,1948,1.674,1949,6.048,1950,2.78,1951,4.065,1952,4.54,1953,1.674,1954,5.263,1955,1.674,1956,1.674,1957,2.78,1958,4.151,1959,5.509,1960,1.674,1961,1.674,1962,4.151,1963,2.78,1964,6.407,1965,3.565,1966,1.674,1967,2.78,1968,3.565,1969,1.674,1970,1.674,1971,1.674,1972,1.674,1973,1.674,1974,6.407,1975,1.674,1976,1.674,1977,1.444,1978,1.444,1979,1.444,1980,1.674,1981,2.78,1982,1.444,1983,1.674,1984,2.78,1985,4.151,1986,4.151,1987,1.674,1988,3.565,1989,1.674,1990,1.674,1991,2.78,1992,1.674,1993,1.674,1994,4.967,1995,3.973,1996,3.075,1997,1.674,1998,5.894,1999,3.973,2000,1.674,2001,2.78,2002,1.674,2003,3.565,2004,4.753,2005,6.302,2006,2.78,2007,1.674,2008,1.674,2009,2.78,2010,6.048,2011,3.075,2012,1.674,2013,4.967,2014,4.605,2015,1.674,2016,1.674,2017,4.605,2018,1.674,2019,1.674,2020,1.674,2021,1.674,2022,3.565,2023,1.674,2024,2.398,2025,2.398,2026,5.263,2027,1.674,2028,4.753,2029,1.674,2030,1.674,2031,1.674,2032,1.674,2033,1.674,2034,1.674,2035,3.973,2036,4.415,2037,3.973,2038,1.674,2039,2.78,2040,2.78,2041,2.78,2042,2.78,2043,2.78,2044,1.674,2045,1.674,2046,1.674,2047,1.674,2048,3.075,2049,2.78,2050,2.78,2051,1.674,2052,2.78,2053,2.78,2054,2.78,2055,4.151,2056,2.398,2057,1.674,2058,1.674,2059,1.674,2060,1.674,2061,2.78,2062,1.674,2063,1.674,2064,2.398,2065,1.674,2066,3.565,2067,2.78,2068,4.967,2069,2.398,2070,2.78,2071,4.151,2072,1.674,2073,1.674,2074,2.398,2075,4.151,2076,1.674,2077,1.674,2078,1.444,2079,1.674,2080,2.78,2081,1.674,2082,1.674,2083,2.78,2084,1.674,2085,2.78,2086,1.674,2087,1.444,2088,1.674,2089,1.674,2090,1.674,2091,1.674,2092,1.674,2093,1.674,2094,1.674,2095,1.674,2096,1.674,2097,1.674,2098,1.674,2099,1.674,2100,1.674,2101,1.674,2102,2.78,2103,1.674,2104,4.967,2105,1.674,2106,1.674,2107,3.565,2108,3.565,2109,2.398,2110,1.674,2111,1.674,2112,1.674,2113,2.78,2114,2.78,2115,1.674,2116,1.674,2117,1.674,2118,2.78,2119,2.78,2120,3.565,2121,1.674,2122,1.674,2123,1.674,2124,1.674,2125,2.78,2126,1.674,2127,2.78,2128,4.151,2129,1.674,2130,1.674,2131,1.674,2132,4.967,2133,2.78,2134,1.674,2135,1.674,2136,3.565,2137,2.78,2138,2.78,2139,4.151,2140,1.674,2141,1.674,2142,1.674,2143,2.78,2144,1.674,2145,1.674,2146,1.674,2147,1.674,2148,1.674,2149,4.151,2150,1.674,2151,3.565,2152,4.151,2153,1.674,2154,3.565,2155,4.605,2156,2.78,2157,2.78,2158,2.78,2159,3.565,2160,4.151,2161,4.605,2162,3.565,2163,1.674,2164,1.674,2165,5.263,2166,3.565,2167,1.674,2168,4.151,2169,4.151,2170,5.717,2171,1.674,2172,1.674,2173,1.674,2174,1.674,2175,1.674,2176,1.674,2177,2.78,2178,1.674,2179,1.674,2180,1.674,2181,1.674,2182,2.78,2183,1.674,2184,1.674,2185,2.78,2186,3.075,2187,2.78,2188,3.565,2189,1.674,2190,1.674,2191,1.674,2192,1.674,2193,1.674,2194,1.674,2195,1.674,2196,1.674,2197,4.967,2198,2.78,2199,3.565,2200,2.78,2201,1.674,2202,1.674,2203,1.674,2204,1.674,2205,3.565,2206,1.674,2207,1.674,2208,1.674,2209,2.78,2210,2.78,2211,2.78,2212,3.565,2213,1.674,2214,1.674,2215,1.674,2216,1.674,2217,1.674,2218,1.444,2219,1.674,2220,1.674,2221,1.674,2222,2.78,2223,1.674,2224,1.674,2225,2.78,2226,1.674,2227,1.674,2228,1.674,2229,1.674,2230,1.674,2231,1.674,2232,1.674,2233,1.674,2234,1.674,2235,1.674,2236,5.509,2237,1.674,2238,3.075,2239,5.509,2240,3.565,2241,4.151,2242,2.78,2243,3.565,2244,1.674,2245,2.78,2246,1.674,2247,1.674,2248,2.78,2249,2.78,2250,1.674,2251,1.674,2252,2.78,2253,1.674,2254,1.674,2255,1.674,2256,3.581,2257,1.674,2258,1.674,2259,1.674,2260,1.674,2261,1.674,2262,1.674,2263,1.674,2264,1.674,2265,1.674,2266,1.674,2267,3.581,2268,1.674,2269,1.674,2270,1.674,2271,1.674,2272,1.674,2273,1.674,2274,1.674,2275,1.674,2276,1.674,2277,1.674,2278,1.674,2279,2.78,2280,1.674,2281,2.78,2282,1.674,2283,2.78,2284,2.78,2285,4.151,2286,4.151,2287,2.78,2288,2.78,2289,1.674,2290,1.674,2291,1.674,2292,3.565,2293,1.674,2294,1.444,2295,1.674,2296,1.674,2297,1.674,2298,1.674,2299,1.674,2300,1.674,2301,2.78,2302,5.894,2303,3.565,2304,2.78,2305,1.674,2306,2.78,2307,1.674,2308,1.674,2309,1.674,2310,1.674,2311,1.674,2312,1.674,2313,1.674,2314,2.78,2315,4.54,2316,2.78,2317,1.674,2318,1.674,2319,1.674,2320,1.674,2321,1.674,2322,3.206,2323,1.674,2324,2.78,2325,1.674,2326,1.674,2327,1.674,2328,2.78,2329,1.674,2330,1.674,2331,1.674,2332,1.674,2333,2.78,2334,2.78,2335,2.398,2336,1.674,2337,1.674,2338,1.674,2339,1.674,2340,1.674,2341,1.674,2342,1.674,2343,1.674,2344,1.674,2345,1.444,2346,1.674,2347,2.398,2348,1.674,2349,1.674,2350,1.674,2351,1.674,2352,1.674,2353,1.674,2354,2.78,2355,1.674,2356,2.78,2357,1.674,2358,1.674,2359,1.674,2360,1.674,2361,1.674,2362,1.674,2363,1.674,2364,1.674,2365,1.674,2366,1.674,2367,2.78,2368,1.674,2369,1.674,2370,1.674,2371,1.674,2372,2.78,2373,1.674,2374,1.674,2375,1.674,2376,1.674,2377,1.674,2378,1.674,2379,1.674,2380,1.674,2381,1.674]],["title/coverage.html",[2322,4.014]],["body/coverage.html",[6,1.359,7,0.017,8,1.616,9,1.616,15,0.113,16,0.238,17,3.629,23,2.007,28,0.254,41,1.436,45,2.751,47,0.525,55,2.007,56,2.452,70,2.007,78,0.189,81,0.006,82,0.009,83,0.006,87,1.726,88,2.544,89,3.735,90,3.735,93,1.184,121,1.226,124,1.359,135,1.726,137,1.616,151,1.726,152,0.568,153,1.726,155,1.726,159,1.726,161,1.726,175,1.726,209,1.726,256,2.007,257,3.28,258,3.28,259,3.551,273,1.618,287,1.436,289,2.977,295,2.007,310,1.226,314,1.854,356,1.289,357,3.264,358,3.264,366,1.726,367,3.629,368,3.629,370,1.359,380,1.726,390,1.436,421,2.678,433,1.726,436,1.726,446,2.2,469,3.378,470,3.28,507,2.2,508,2.457,521,3.541,522,3.892,550,1.167,555,3.551,583,1.854,590,1.854,617,1.854,693,1.289,698,1.289,700,1.226,702,1.289,705,1.289,708,1.289,712,1.289,716,1.226,726,1.616,727,3.144,728,2.976,729,3.551,733,1.616,743,2.007,745,1.854,789,2.457,790,2.457,835,2.2,836,4.737,852,2.2,853,2.979,855,2.007,958,2.457,959,3.551,982,2.457,1018,2.561,1068,3.264,1084,2.007,1147,6.23,1149,2.457,1151,1.854,1154,5.298,1167,2.2,1168,2.457,1169,2.457,1182,3.264,1191,2.2,1213,2.2,1214,2.2,1251,2.2,1252,2.2,1253,2.457,1281,2.2,1282,2.2,1283,2.457,1298,2.457,1335,2.457,1351,2.007,1352,3.929,1353,3.929,1354,4.306,1375,2.2,1470,2.2,1592,2.007,1593,4.93,1594,4.93,1595,5.233,1605,2.2,1623,2.007,1624,2.007,1625,2.2,1688,2.457,1721,2.2,1722,2.2,1723,2.457,1791,2.007,1792,3.876,1797,2.007,1798,2.007,1799,2.007,1800,1.854,1815,2.2,1816,3.646,2322,2.2,2382,2.848,2383,2.848,2384,2.457,2385,7.637,2386,4.226,2387,2.848,2388,2.457,2389,2.457,2390,6.895,2391,2.457,2392,2.457,2393,2.457,2394,2.457,2395,2.457,2396,2.848,2397,2.457,2398,2.457,2399,2.457,2400,5.575,2401,2.848,2402,2.848,2403,2.848,2404,2.457,2405,2.848,2406,5.575,2407,2.848,2408,2.848,2409,2.848,2410,2.848,2411,2.848,2412,2.848,2413,2.848,2414,2.848,2415,2.848,2416,2.848,2417,2.848,2418,2.848,2419,2.848,2420,2.848,2421,2.848,2422,2.848,2423,2.848,2424,4.226,2425,2.848,2426,2.848,2427,2.457,2428,4.226,2429,2.848,2430,4.226,2431,2.848,2432,2.848,2433,2.848,2434,2.848,2435,2.848]],["title/dependencies.html",[3,1.705,1982,2.741]],["body/dependencies.html",[3,1.637,7,0.018,15,0.174,36,0.315,39,3.466,40,2.346,41,2.215,81,0.01,82,0.012,83,0.01,95,2.86,113,0.96,119,2.86,120,2.86,149,2.729,170,2.494,281,3.097,282,3.394,283,3.394,363,1.989,364,1.989,410,2.86,675,3.097,692,2.461,752,2.663,809,3.791,826,2.86,829,3.097,834,2.86,935,4.031,1095,3.097,1104,3.394,1165,3.791,1215,3.791,1284,3.791,1367,3.791,1371,3.791,1372,3.791,1999,3.791,2024,3.791,2064,3.791,2069,3.791,2186,3.791,2238,4.934,2436,4.394,2437,4.394,2438,4.394,2439,7.592,2440,4.394,2441,4.394,2442,4.394,2443,4.394,2444,4.394,2445,5.719,2446,4.394,2447,4.394,2448,4.394,2449,4.394,2450,4.394,2451,4.394,2452,6.982,2453,4.394,2454,5.719,2455,4.394,2456,4.394,2457,4.394,2458,6.358,2459,4.394,2460,4.394,2461,4.394,2462,4.394,2463,4.394,2464,4.394,2465,4.394,2466,5.719,2467,6.358,2468,4.394,2469,4.394,2470,4.394,2471,4.394,2472,4.394,2473,4.394,2474,5.719,2475,4.394,2476,4.394,2477,4.394,2478,4.394,2479,4.394,2480,4.394,2481,4.394,2482,4.394,2483,4.394,2484,4.394,2485,4.394,2486,4.394,2487,5.719,2488,3.791,2489,4.394,2490,4.394,2491,4.394,2492,4.394,2493,4.394,2494,5.719,2495,4.394,2496,4.394,2497,4.394,2498,4.394,2499,4.394,2500,4.394,2501,4.394,2502,4.394,2503,4.394,2504,4.394,2505,4.394,2506,4.394,2507,4.394,2508,4.394,2509,4.394,2510,4.394,2511,4.394,2512,4.394,2513,4.394,2514,4.394,2515,4.394,2516,4.394,2517,4.394,2518,4.394,2519,4.394,2520,4.394,2521,4.394,2522,4.394,2523,4.394,2524,4.394,2525,4.394,2526,4.934,2527,4.394,2528,4.394,2529,4.394,2530,4.394,2531,4.394,2532,4.394,2533,4.394,2534,4.394,2535,4.394,2536,4.394,2537,4.394]],["title/miscellaneous/functions.html",[2538,1.926,2539,3.95]],["body/miscellaneous/functions.html",[7,0.017,16,0.212,17,2.263,26,1.739,27,1.259,29,1.141,30,2.606,31,1.276,37,2.685,53,1.496,57,2.685,58,1.659,62,0.906,63,1.659,66,2.685,69,2.691,70,3.44,76,2.331,81,0.008,82,0.011,83,0.008,85,0.653,86,0.548,88,1.182,89,1.856,90,3.439,97,1.13,100,1.659,106,2.263,111,1.901,133,1.659,137,1.973,152,0.974,159,3.418,161,2.958,162,2.916,163,1.13,164,3.177,165,3.177,168,1.856,209,2.958,217,2.263,240,3.105,260,1.987,261,2.45,278,1.424,285,2.107,287,1.752,289,1.659,413,1.856,421,1.659,521,1.973,522,4.356,527,2.685,531,2.999,535,2.999,536,2.263,537,2.999,538,2.46,539,4.693,540,2.999,541,2.999,542,3.706,543,1.856,544,2.999,545,2.999,557,2.107,582,2.263,594,2.45,617,3.671,682,2.45,692,1.496,732,3.44,800,5.158,802,5.569,804,5.408,835,4.356,836,3.981,838,2.685,839,2.45,857,2.999,894,2.685,969,1.973,987,2.263,1151,3.177,1213,2.685,1214,3.769,1219,2.999,1221,4.211,1227,2.685,1383,2.45,1593,2.45,1594,5.082,1595,5.881,1596,5.276,1602,6.347,1606,2.999,1607,2.999,1608,2.999,1609,2.999,1610,4.866,1611,6.347,1612,5.762,1613,5.762,1614,5.276,1615,4.211,1616,4.866,1792,2.263,1800,3.671,2087,2.999,2347,2.999,2384,4.211,2388,2.999,2389,4.211,2391,2.999,2392,4.866,2393,2.999,2394,4.211,2395,4.211,2399,4.211,2404,4.211,2427,4.211,2526,2.999,2538,2.107,2539,2.999,2540,4.723,2541,3.476,2542,3.476,2543,2.999,2544,4.211,2545,3.476,2546,4.881,2547,6.139,2548,3.476,2549,3.476,2550,3.476,2551,3.476,2552,3.476,2553,3.476,2554,3.476,2555,3.476,2556,3.476,2557,3.476,2558,3.476,2559,3.476,2560,4.881,2561,3.476,2562,3.476]],["title/index.html",[85,0.303,1932,2.454,1933,2.24]],["body/index.html",[7,0.013,13,0.286,47,0.437,81,0.011,82,0.013,83,0.011,84,1.514,102,1.665,109,4.554,180,3.736,273,1.163,324,2.601,646,3.433,706,2.871,826,3.17,866,3.433,931,4.717,939,3.433,950,2.952,984,3.976,1004,4.305,1005,5.154,1137,3.17,1484,4.202,1756,4.202,1764,3.762,1822,3.762,1934,3.762,1935,5.27,1936,5.27,1937,5.757,1951,3.762,1977,4.202,1978,4.202,1979,4.202,1995,6.217,1996,6.036,2004,5.27,2011,4.202,2025,5.27,2028,4.202,2036,5.404,2037,4.202,2048,4.202,2074,5.27,2267,5.27,2335,4.202,2345,4.202,2563,6.108,2564,4.871,2565,4.871,2566,4.871,2567,5.27,2568,4.871,2569,4.871,2570,6.108,2571,6.108,2572,6.108,2573,6.673,2574,4.871,2575,4.871,2576,6.997,2577,6.673,2578,4.871,2579,4.871,2580,6.108,2581,4.871,2582,4.871,2583,4.871,2584,6.108,2585,4.871,2586,4.871,2587,4.871,2588,4.871,2589,4.871,2590,4.871,2591,4.871,2592,4.871,2593,4.871,2594,4.871,2595,4.871,2596,4.871,2597,4.871,2598,4.871,2599,4.871,2600,4.871,2601,4.871,2602,4.871,2603,4.871]],["title/license.html",[1932,2.454,1933,2.24,2604,2.741]],["body/license.html",[7,0.014,12,1.665,81,0.012,82,0.014,83,0.012,112,2.86,344,3.775,601,5.376,671,3.486,674,3.775,733,3.04,886,3.486,889,4.137,910,4.137,952,4.621,1174,4.621,1223,4.137,2035,5.587,2036,4.137,2078,5.587,2218,5.587,2294,4.621,2315,4.621,2488,4.621,2567,6.672,2604,4.621,2605,5.356,2606,6.961,2607,5.356,2608,6.476,2609,5.356,2610,5.356,2611,5.356,2612,5.356,2613,5.356,2614,5.356,2615,6.476,2616,5.356,2617,5.356,2618,5.356,2619,5.356,2620,5.356,2621,5.356,2622,5.356,2623,5.356,2624,5.356,2625,5.356,2626,5.356,2627,6.476,2628,5.356,2629,5.356,2630,5.356,2631,5.356,2632,5.356,2633,6.476,2634,5.356,2635,5.356,2636,5.356,2637,5.356,2638,5.356,2639,5.356,2640,5.356,2641,5.356,2642,5.356,2643,5.356,2644,5.356,2645,5.356,2646,5.356,2647,5.356,2648,5.356,2649,5.356,2650,5.356,2651,5.356,2652,5.356,2653,5.356,2654,5.356,2655,5.356,2656,5.356]],["title/modules.html",[2,1.936]],["body/modules.html",[1,3.669,2,2.1,7,0.015,81,0.012,82,0.015,83,0.012,352,3.973,633,3.416,719,3.669,935,5.543,1051,3.973,1056,3.669,1212,4.354,1275,3.973,1341,3.973,1357,6.785,1584,3.973,1665,3.973,1701,3.973,1783,3.973,1952,6.785,2657,7.89,2658,5.637]],["title/overview.html",[2659,4.483]],["body/overview.html",[1,4.818,2,1.649,3,2.141,4,3.819,5,3.819,6,3.045,7,0.017,8,3.621,9,3.621,10,2.354,11,1.813,12,1.376,81,0.01,82,0.013,83,0.01,84,1.376,229,1.728,310,3.142,352,4.933,353,3.819,354,3.819,355,3.819,356,3.305,524,2.512,550,2.991,551,2.231,693,2.004,698,3.305,700,3.142,702,3.305,705,3.305,708,3.305,712,3.305,716,3.142,719,4.668,720,3.819,721,3.819,722,3.819,1051,5.146,1052,3.819,1053,3.819,1054,3.819,1055,3.819,1056,4.668,1156,3.819,1157,3.819,1158,3.819,1275,4.933,1276,3.819,1277,3.819,1278,3.819,1341,4.933,1342,3.819,1343,3.819,1344,3.819,1584,4.933,1585,3.819,1586,3.819,1587,3.819,1618,3.419,1665,4.933,1666,3.819,1667,3.819,1668,3.819,1701,5.273,1702,3.819,1703,3.819,1705,3.819,1706,5.826,1707,5.826,1783,4.933,1784,3.819,1785,3.819,1786,3.819,1951,3.419,2056,3.819,2109,3.819,2256,3.819,2659,3.819,2660,4.427]],["title/miscellaneous/typealiases.html",[2538,1.926,2661,4.578]],["body/miscellaneous/typealiases.html",[7,0.016,16,0.22,28,0.619,49,0.873,56,2.258,61,3.665,62,1.684,68,1.812,81,0.012,82,0.014,83,0.012,85,0.508,88,2.195,89,2.847,90,3.855,127,3.914,129,4.204,132,4.204,133,2.544,414,3.255,446,4.118,447,3.914,462,3.758,463,3.471,469,3.231,470,4.814,483,3.758,485,4.552,486,4.552,488,4.552,533,3.471,538,2.688,542,3.914,853,3.758,855,4.552,871,4.988,878,4.6,879,5.572,902,4.118,903,4.6,1623,3.758,1624,3.758,1625,5.366,1644,4.6,1645,5.572,1646,4.6,1647,5.994,2538,3.231,2540,5.366,2662,5.332,2663,5.332,2664,7.221,2665,5.572,2666,6.458]],["title/miscellaneous/variables.html",[2538,1.926,2667,3.95]],["body/miscellaneous/variables.html",[6,1.216,7,0.017,8,1.447,9,1.447,16,0.2,17,1.659,27,1.28,28,0.554,30,2.076,45,2.531,49,0.525,55,2.74,59,0.422,62,1.824,72,1.545,74,3.702,76,0.866,81,0.006,82,0.008,83,0.006,85,0.243,88,0.866,89,1.361,90,2.815,112,1.361,127,2.356,136,1.361,144,3.73,146,3.77,147,2.356,151,3.195,152,0.941,153,2.356,154,2.531,155,2.356,156,1.659,157,1.545,163,1.531,170,2.992,173,1.448,174,1.321,257,1.659,258,1.659,259,2.74,263,1.797,264,3.003,266,4.689,271,2.356,277,1.797,290,2.538,291,3.003,292,1.969,293,1.969,294,1.969,295,2.74,296,2.74,297,1.545,314,2.531,319,3.509,447,1.545,706,3.329,727,1.285,728,1.361,729,2.74,743,2.74,744,1.969,808,4.62,836,2.531,853,1.797,855,2.74,871,1.969,959,2.74,968,4.131,1128,4.468,1135,4.364,1182,1.969,1191,3.003,1192,2.199,1193,2.199,1194,2.199,1195,2.74,1351,1.797,1352,1.797,1353,1.797,1354,3.64,1358,6.675,1359,5.632,1360,6.675,1365,3.003,1373,2.199,1374,2.199,1375,3.003,1376,2.199,1377,3.354,1378,2.199,1379,2.199,1380,3.354,1381,2.199,1382,3.354,1383,2.74,1384,4.549,1385,2.199,1386,2.199,1387,4.066,1388,5.161,1389,5.964,1390,2.199,1391,2.199,1392,2.199,1393,4.066,1394,5.67,1395,5.161,1396,2.199,1397,2.199,1398,2.199,1399,2.199,1400,3.354,1401,2.199,1402,4.066,1403,4.62,1404,2.199,1405,2.199,1406,2.199,1407,4.066,1408,5.161,1409,2.199,1410,2.199,1411,2.199,1412,2.199,1413,3.354,1414,2.199,1415,3.354,1416,3.354,1417,3.354,1418,2.199,1419,2.199,1420,4.066,1421,5.161,1422,2.199,1423,2.199,1424,2.199,1425,2.199,1426,3.354,1427,2.199,1428,2.199,1429,2.199,1430,3.354,1431,2.199,1432,3.354,1433,4.549,1434,2.199,1435,2.199,1436,2.199,1437,5.161,1438,3.354,1439,2.199,1440,2.199,1441,3.354,1442,2.199,1443,2.199,1444,3.354,1445,2.199,1446,2.199,1447,3.354,1448,2.199,1449,4.066,1450,5.161,1451,2.199,1452,2.199,1453,2.199,1454,2.199,1455,3.354,1456,3.354,1457,2.199,1458,2.199,1459,3.354,1460,2.199,1461,3.354,1462,3.354,1463,4.549,1464,4.549,1465,2.199,1466,2.199,1467,2.199,1468,2.199,1469,2.199,1470,3.003,1471,2.199,1472,2.199,1592,1.797,1593,1.797,1594,2.74,1605,3.003,1792,1.659,1798,2.74,1799,2.74,1800,1.659,2397,2.199,2398,3.354,2538,1.545,2540,3.64,2543,3.354,2544,2.199,2547,2.199,2665,2.199,2667,2.199,2668,3.888,2669,2.549,2670,2.549,2671,2.549,2672,2.549]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":421,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.1.0",{"_index":2372,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":2537,"title":{},"body":{"dependencies.html":{}}}],["0.12",{"_index":1776,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.14",{"_index":1774,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.18.0",{"_index":2478,"title":{},"body":{"dependencies.html":{}}}],["0.1875rem",{"_index":1333,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["0.2",{"_index":1771,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.2.0",{"_index":2367,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":2495,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":1036,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["0.5.0",{"_index":2356,"title":{},"body":{"changelog.html":{}}}],["0.5rem",{"_index":1140,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["0.6.0",{"_index":2335,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.65rem",{"_index":1038,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["0.6s",{"_index":1040,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["0.7",{"_index":1763,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.875rem",{"_index":1129,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["0/1",{"_index":2385,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2426,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2423,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2430,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2432,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2431,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2424,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2429,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2428,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2400,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2425,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2402,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2383,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2387,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2386,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2422,"title":{},"body":{"coverage.html":{}}}],["007cbe",{"_index":1781,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["01",{"_index":2000,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":2206,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":2155,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":1940,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":2128,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":2304,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1958,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":2316,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":2055,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":1574,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{}}}],["1",{"_index":1618,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"changelog.html":{},"overview.html":{}}}],["1.0",{"_index":2239,"title":{},"body":{"changelog.html":{}}}],["1.0.0",{"_index":2302,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":2473,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":2480,"title":{},"body":{"dependencies.html":{}}}],["1.0.6",{"_index":2532,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2279,"title":{},"body":{"changelog.html":{}}}],["1.125rem",{"_index":1336,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["1.16.0",{"_index":2513,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":2475,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":2238,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.3",{"_index":2483,"title":{},"body":{"dependencies.html":{}}}],["1.2.6",{"_index":2515,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":2205,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":2186,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":2497,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":2154,"title":{},"body":{"changelog.html":{}}}],["1.5rem",{"_index":1047,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["1.6.0",{"_index":2139,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":2127,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":2485,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2390,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2414,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":297,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":2487,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":1154,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{},"coverage.html":{}}}],["10px",{"_index":1773,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["10rem",{"_index":1146,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["10x",{"_index":2291,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":2188,"title":{},"body":{"changelog.html":{}}}],["11.2.1",{"_index":2516,"title":{},"body":{"dependencies.html":{}}}],["11/14",{"_index":2416,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1951,"title":{},"body":{"changelog.html":{},"index.html":{},"overview.html":{}}}],["12.0.1",{"_index":2517,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":2439,"title":{},"body":{"dependencies.html":{}}}],["12.1.3",{"_index":2444,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":2056,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["13/13",{"_index":2405,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":1941,"title":{},"body":{"changelog.html":{}}}],["15.126.1",{"_index":2437,"title":{},"body":{"dependencies.html":{}}}],["15/15",{"_index":2421,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":2109,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["17",{"_index":2006,"title":{},"body":{"changelog.html":{}}}],["17.5rem",{"_index":1155,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["18px",{"_index":1775,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["1px",{"_index":1769,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["1rem",{"_index":1133,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["2",{"_index":2256,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["2.0.0",{"_index":2108,"title":{},"body":{"changelog.html":{}}}],["2.0.5",{"_index":2491,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2069,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.2.0",{"_index":2064,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.25rem",{"_index":1136,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["2.3.0",{"_index":2061,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":2054,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":2042,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":2024,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.6.7",{"_index":2518,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":2482,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":2396,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1298,"title":{},"body":{"components/OpacitySliderComponent.html":{},"coverage.html":{}}}],["200",{"_index":1546,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["2019",{"_index":2315,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":2241,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":2005,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":1939,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":2129,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":2305,"title":{},"body":{"changelog.html":{}}}],["23/30",{"_index":2418,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":2357,"title":{},"body":{"changelog.html":{}}}],["24px",{"_index":1779,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["25",{"_index":2413,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":1120,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["255",{"_index":1762,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["26",{"_index":2156,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":2191,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":2001,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":2225,"title":{},"body":{"changelog.html":{}}}],["3.0",{"_index":2571,"title":{},"body":{"index.html":{}}}],["3.0.0",{"_index":1999,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.0.12",{"_index":2458,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":1957,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":1950,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":1938,"title":{},"body":{"changelog.html":{}}}],["3.5.5",{"_index":2462,"title":{},"body":{"dependencies.html":{}}}],["3.6",{"_index":2592,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":2527,"title":{},"body":{"dependencies.html":{}}}],["3.7.1",{"_index":2467,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2410,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2409,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2070,"title":{},"body":{"changelog.html":{}}}],["300",{"_index":1143,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["31",{"_index":2280,"title":{},"body":{"changelog.html":{}}}],["323232",{"_index":1765,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["3d",{"_index":1823,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["3px",{"_index":1767,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["3rem",{"_index":1127,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/TextSearchComponent.html":{}}}],["4",{"_index":157,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["4.17.1",{"_index":2489,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":2509,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":2479,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":2499,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2406,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":1760,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["48",{"_index":1885,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["5.0.0",{"_index":2502,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":2471,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":2507,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":2403,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1149,"title":{},"body":{"components/InfoDialogComponent.html":{},"coverage.html":{}}}],["50rem",{"_index":1145,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["5px",{"_index":1768,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["6.0.0",{"_index":2511,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":2505,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":2520,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":2464,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":2531,"title":{},"body":{"dependencies.html":{}}}],["6.6.7",{"_index":2528,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":2433,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1335,"title":{},"body":{"components/OpacitySliderComponent.html":{},"coverage.html":{}}}],["60rem",{"_index":1029,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["64",{"_index":1577,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["6px",{"_index":1772,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["6rem",{"_index":1780,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["6s",{"_index":1044,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["7/34",{"_index":2401,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":2420,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":2408,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":1506,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["75",{"_index":1902,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["76",{"_index":2417,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":2415,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":2133,"title":{},"body":{"changelog.html":{}}}],["8.3.2",{"_index":2535,"title":{},"body":{"dependencies.html":{}}}],["8.5.7",{"_index":2452,"title":{},"body":{"dependencies.html":{}}}],["8/9",{"_index":2412,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2366,"title":{},"body":{"changelog.html":{}}}],["87",{"_index":2407,"title":{},"body":{"coverage.html":{}}}],["88",{"_index":2411,"title":{},"body":{"coverage.html":{}}}],["9",{"_index":2660,"title":{},"body":{"overview.html":{}}}],["9.5",{"_index":1868,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["9/9",{"_index":2419,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2321,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":1945,"title":{},"body":{"changelog.html":{}}}],["9999",{"_index":1778,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["9]*/g",{"_index":1273,"title":{},"body":{"directives/NumberDirective.html":{}}}],["9th",{"_index":2164,"title":{},"body":{"changelog.html":{}}}],["_bounds",{"_index":1870,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_camera",{"_index":1872,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_error",{"_index":1199,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["_ignored",{"_index":956,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["_index",{"_index":1689,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["_interactive",{"_index":1864,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_occurencedata",{"_index":1512,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["_rotation",{"_index":1865,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_rotationx",{"_index":1866,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_scene",{"_index":1871,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_target",{"_index":1869,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_wont_",{"_index":1809,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["_zoom",{"_index":1867,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["a.name.localecompare(b.name",{"_index":1469,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["ability",{"_index":2083,"title":{},"body":{"changelog.html":{}}}],["about.wrapper",{"_index":1126,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["above",{"_index":671,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"license.html":{}}}],["abstract",{"_index":374,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["access",{"_index":1752,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["accessors",{"_index":798,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["according",{"_index":1582,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["accurate",{"_index":2153,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":2651,"title":{},"body":{"license.html":{}}}],["actions",{"_index":2229,"title":{},"body":{"changelog.html":{}}}],["actual_component",{"_index":718,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["add",{"_index":529,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["added",{"_index":623,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["adding",{"_index":1609,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["additional",{"_index":557,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["addressed",{"_index":2274,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":1961,"title":{},"body":{"changelog.html":{}}}],["adjusting",{"_index":2269,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":2184,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":2111,"title":{},"body":{"changelog.html":{}}}],["afterviewinit",{"_index":1368,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["again",{"_index":2249,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":138,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{}}}],["agerange",{"_index":139,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["aggregateresult",{"_index":96,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["ala",{"_index":2059,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":2662,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1049,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["all_organs",{"_index":1470,"title":{},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["all_possible_organs",{"_index":1375,"title":{},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["all_possible_organs.filter(organ",{"_index":1471,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["allow_telemetry",{"_index":1195,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/variables.html":{}}}],["allowed",{"_index":533,"title":{},"body":{"interfaces/DecoratedRange.html":{},"injectables/GlobalsService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/typealiases.html":{}}}],["allows",{"_index":2171,"title":{},"body":{"changelog.html":{}}}],["allowtelemetry",{"_index":1729,"title":{},"body":{"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["allowtelemetry.tostring",{"_index":1805,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["alpha",{"_index":2346,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":2328,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":2324,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":2314,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":651,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["alt",{"_index":2575,"title":{},"body":{"index.html":{}}}],["always",{"_index":927,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["analytics",{"_index":41,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{}}}],["analyticsmodule",{"_index":1,"title":{"modules/AnalyticsModule.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules.html":{},"overview.html":{}}}],["analyticsoptions",{"_index":23,"title":{"interfaces/AnalyticsOptions.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{}}}],["anatomical",{"_index":1286,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["and/or",{"_index":2625,"title":{},"body":{"license.html":{}}}],["angular",{"_index":826,"title":{},"body":{"injectables/GlobalConfigState.html":{},"modules/MousePositionTrackerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":2438,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2440,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":363,"title":{},"body":{"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":742,"title":{},"body":{"interfaces/DocumentationContent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{}}}],["angular/compiler",{"_index":2441,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":36,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":2442,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":281,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2443,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1712,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["angular/material/button",{"_index":1789,"title":{},"body":{"modules/TrackingPopupModule.html":{}}}],["angular/material/core",{"_index":1350,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["angular/material/dialog",{"_index":1016,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{}}}],["angular/material/expansion",{"_index":1162,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["angular/material/form",{"_index":1714,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["angular/material/icon",{"_index":1059,"title":{},"body":{"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{}}}],["angular/material/input",{"_index":1716,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["angular/material/slider",{"_index":1348,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["angular/material/snack",{"_index":1745,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["angular/material/tooltip",{"_index":1591,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["angular/platform",{"_index":2445,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":2447,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":1165,"title":{},"body":{"modules/InfoDialogModule.html":{},"dependencies.html":{}}}],["animate",{"_index":1116,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["animated",{"_index":1027,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["animated')[0]?.classlist.add('modal",{"_index":1115,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["anyfunction",{"_index":501,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["anyfunction)(...args",{"_index":506,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["anything",{"_index":1810,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["api",{"_index":180,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{},"index.html":{}}}],["api.configuration.basepath",{"_index":223,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["api.hubmapconsortium.org",{"_index":2585,"title":{},"body":{"index.html":{}}}],["api.ts",{"_index":2398,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiendpointdatasourceoptions",{"_index":87,"title":{"interfaces/ApiEndpointDataSourceOptions.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{}}}],["apiendpointdatasourceservice",{"_index":175,"title":{"injectables/ApiEndpointDataSourceService.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{}}}],["app",{"_index":1374,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:bladder",{"_index":1454,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:brain",{"_index":1379,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:eye",{"_index":1387,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:fallopian",{"_index":1393,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:heart",{"_index":1399,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:kidney",{"_index":1402,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:knee",{"_index":1407,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:large",{"_index":1440,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:liver",{"_index":1412,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:lung",{"_index":1415,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:lymph",{"_index":1382,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:ovary",{"_index":1420,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:pancreas",{"_index":1425,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:pelvis",{"_index":1428,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:prostate",{"_index":1432,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:skin",{"_index":1376,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:small",{"_index":1436,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:spleen",{"_index":1443,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:thymus",{"_index":1446,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:ureter",{"_index":1449,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:uterus",{"_index":1458,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:vasculature",{"_index":1461,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app_initializer",{"_index":34,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["appear",{"_index":2018,"title":{},"body":{"changelog.html":{}}}],["appearance",{"_index":1697,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["application",{"_index":2175,"title":{},"body":{"changelog.html":{}}}],["applied",{"_index":526,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["applies",{"_index":611,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["apply",{"_index":574,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["appname",{"_index":50,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["appropriate",{"_index":1981,"title":{},"body":{"changelog.html":{}}}],["april",{"_index":2163,"title":{},"body":{"changelog.html":{}}}],["args",{"_index":388,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["arguments",{"_index":1261,"title":{},"body":{"directives/NumberDirective.html":{}}}],["arising",{"_index":2654,"title":{},"body":{"license.html":{}}}],["array",{"_index":538,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["array.length",{"_index":351,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["arrays",{"_index":2553,"title":{},"body":{"miscellaneous/functions.html":{}}}],["asct+b",{"_index":2007,"title":{},"body":{"changelog.html":{}}}],["assets/docs/readme.md",{"_index":744,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"miscellaneous/variables.html":{}}}],["assignment/selection",{"_index":2141,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":889,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{},"license.html":{}}}],["async",{"_index":347,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["attempt",{"_index":859,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["attempts",{"_index":2045,"title":{},"body":{"changelog.html":{}}}],["attrs",{"_index":65,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["attrs[key",{"_index":64,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["authors",{"_index":2645,"title":{},"body":{"license.html":{}}}],["autocomplete",{"_index":264,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["autocompleteoption",{"_index":256,"title":{"interfaces/AutoCompleteOption.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"coverage.html":{}}}],["autocompleter",{"_index":325,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["autocompletion",{"_index":301,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["autofocus",{"_index":1024,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["automatic",{"_index":2258,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":2213,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":633,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"modules.html":{}}}],["avoid",{"_index":2097,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":431,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["award",{"_index":2602,"title":{},"body":{"index.html":{}}}],["b",{"_index":1468,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["backend",{"_index":2031,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":1764,"title":{},"body":{"components/TrackingPopupComponent.html":{},"changelog.html":{},"index.html":{}}}],["bar",{"_index":300,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["base",{"_index":2333,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":582,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["basic",{"_index":2110,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":2022,"title":{},"body":{"changelog.html":{}}}],["beginning",{"_index":1495,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["behavior",{"_index":1499,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["behaviorsubject",{"_index":740,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["being",{"_index":1088,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["beta",{"_index":2004,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":2071,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1332,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["bind",{"_index":282,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"dependencies.html":{}}}],["binding",{"_index":1148,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["bladder",{"_index":1456,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["block",{"_index":1664,"title":{},"body":{"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["blocks",{"_index":1965,"title":{},"body":{"changelog.html":{}}}],["blood",{"_index":1463,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["bmi",{"_index":140,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{}}}],["bmirange",{"_index":141,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["board",{"_index":2326,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":364,"title":{},"body":{"modules/BodyUiModule.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"dependencies.html":{}}}],["bodycanvas",{"_index":1878,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bodyui",{"_index":1819,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bodyui.initialize",{"_index":1909,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bodyuicomponent",{"_index":356,"title":{},"body":{"modules/BodyUiModule.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"overview.html":{}}}],["bodyuimodule",{"_index":352,"title":{"modules/BodyUiModule.html":{}},"body":{"modules/BodyUiModule.html":{},"modules.html":{},"overview.html":{}}}],["boolean",{"_index":53,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["border",{"_index":1034,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["both",{"_index":145,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["bottom",{"_index":1132,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["boundary",{"_index":1246,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["bounds",{"_index":683,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"interfaces/XYZTriplet.html":{}}}],["bounds(value",{"_index":1848,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bounds.x",{"_index":1893,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bounds.y",{"_index":1896,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["box",{"_index":1334,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["brain",{"_index":1380,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["breaking",{"_index":2122,"title":{},"body":{"changelog.html":{}}}],["bringing",{"_index":2134,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":2657,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":935,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browserify",{"_index":2529,"title":{},"body":{"dependencies.html":{}}}],["browsing",{"_index":2377,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":1998,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":646,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"index.html":{}}}],["building",{"_index":589,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["builds",{"_index":1997,"title":{},"body":{"changelog.html":{}}}],["buster",{"_index":151,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":983,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":699,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["button.component",{"_index":1060,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["button.component.html",{"_index":991,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.scss",{"_index":990,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts",{"_index":982,"title":{},"body":{"components/InfoButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:22",{"_index":1002,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:27",{"_index":1003,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:29",{"_index":998,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:49",{"_index":1010,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:56",{"_index":1007,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:72",{"_index":1012,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.module.ts",{"_index":1057,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["button.service",{"_index":1017,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["button.service.ts",{"_index":729,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["button.service.ts:27",{"_index":1065,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["button.service.ts:34",{"_index":1067,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["button.service.ts:48",{"_index":1066,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["button/info",{"_index":728,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["c",{"_index":1174,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"license.html":{}}}],["cache",{"_index":149,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"dependencies.html":{}}}],["cache_config_no_params",{"_index":153,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cache_config_params",{"_index":155,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cacheable",{"_index":119,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"dependencies.html":{}}}],["cacheable(cache_config_no_params",{"_index":186,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["cacheable(cache_config_params",{"_index":198,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["cachebusterobserver",{"_index":154,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/variables.html":{}}}],["cached",{"_index":606,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["cacheresults",{"_index":428,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["call",{"_index":1086,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/TrackingPopupComponent.html":{}}}],["callback",{"_index":2087,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["called",{"_index":2125,"title":{},"body":{"changelog.html":{}}}],["camera",{"_index":1850,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["camera(value",{"_index":1852,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["cancelregistration",{"_index":2086,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":2307,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":2476,"title":{},"body":{"dependencies.html":{}}}],["canvas",{"_index":1900,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["canvas.addeventlistener('contextmenu",{"_index":1906,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["card",{"_index":2115,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":1473,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["carouselcontainer",{"_index":1479,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["case",{"_index":1209,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["cases",{"_index":2278,"title":{},"body":{"changelog.html":{}}}],["cast",{"_index":159,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["catch",{"_index":955,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["ccf",{"_index":102,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":2234,"title":{},"body":{"changelog.html":{}}}],["ccfdatabase",{"_index":406,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabase(config",{"_index":434,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice",{"_index":366,"title":{"injectables/CCFDatabaseDataSourceBaseService.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["ccfdatabasedatasourcebaseservice:20",{"_index":445,"title":{},"body":{"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice:39",{"_index":444,"title":{},"body":{"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice:53",{"_index":443,"title":{},"body":{"injectables/CCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice:65",{"_index":1813,"title":{},"body":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourceservice",{"_index":433,"title":{"injectables/CCFDatabaseDataSourceService.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["ccfdatabasemanager",{"_index":380,"title":{"interfaces/CCFDatabaseManager.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["ccfdatabaseoptions",{"_index":381,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["cdr",{"_index":1631,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["cdr.markforcheck",{"_index":1658,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["cell",{"_index":1962,"title":{},"body":{"changelog.html":{}}}],["celltypeterms",{"_index":143,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["center",{"_index":1137,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"index.html":{}}}],["change",{"_index":866,"title":{},"body":{"injectables/GlobalsService.html":{},"components/StoreDebugComponent.html":{},"changelog.html":{},"index.html":{}}}],["changed",{"_index":607,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["changedetection",{"_index":308,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["changedetectionstrategy",{"_index":272,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":309,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["changedetectorref",{"_index":1632,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["changelog",{"_index":1934,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changeopacity",{"_index":1290,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["changeopacity(newopacity",{"_index":1309,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["changes",{"_index":327,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["charge",{"_index":2612,"title":{},"body":{"license.html":{}}}],["check",{"_index":863,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["choose",{"_index":2254,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":2232,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":2648,"title":{},"body":{"license.html":{}}}],["class",{"_index":78,"title":{"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["classes",{"_index":524,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"overview.html":{}}}],["cleans",{"_index":1639,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["cleanup",{"_index":2003,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":1121,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["clearinterval(this.timeouthandler",{"_index":1557,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["clearsubscriptions",{"_index":1929,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["click",{"_index":1014,"title":{},"body":{"components/InfoButtonComponent.html":{},"changelog.html":{}}}],["clicked",{"_index":989,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["clicking",{"_index":2119,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":109,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"index.html":{}}}],["clientheight",{"_index":1226,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clientwidth",{"_index":1225,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clientx",{"_index":1228,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clienty",{"_index":1229,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["close",{"_index":1080,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["closes",{"_index":1091,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["clsname",{"_index":313,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["cluster_analyticsmodule",{"_index":4,"title":{},"body":{"modules/AnalyticsModule.html":{},"overview.html":{}}}],["cluster_analyticsmodule_providers",{"_index":5,"title":{},"body":{"modules/AnalyticsModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule",{"_index":353,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule_declarations",{"_index":355,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule_exports",{"_index":354,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_decoratedtextmodule",{"_index":720,"title":{},"body":{"modules/DecoratedTextModule.html":{},"overview.html":{}}}],["cluster_decoratedtextmodule_declarations",{"_index":722,"title":{},"body":{"modules/DecoratedTextModule.html":{},"overview.html":{}}}],["cluster_decoratedtextmodule_exports",{"_index":721,"title":{},"body":{"modules/DecoratedTextModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule",{"_index":1052,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_declarations",{"_index":1055,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_exports",{"_index":1053,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_imports",{"_index":1054,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule",{"_index":1156,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule_declarations",{"_index":1157,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule_exports",{"_index":1158,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_numbersonlymodule",{"_index":1276,"title":{},"body":{"modules/NumbersOnlyModule.html":{},"overview.html":{}}}],["cluster_numbersonlymodule_declarations",{"_index":1277,"title":{},"body":{"modules/NumbersOnlyModule.html":{},"overview.html":{}}}],["cluster_numbersonlymodule_exports",{"_index":1278,"title":{},"body":{"modules/NumbersOnlyModule.html":{},"overview.html":{}}}],["cluster_opacityslidermodule",{"_index":1342,"title":{},"body":{"modules/OpacitySliderModule.html":{},"overview.html":{}}}],["cluster_opacityslidermodule_declarations",{"_index":1343,"title":{},"body":{"modules/OpacitySliderModule.html":{},"overview.html":{}}}],["cluster_opacityslidermodule_exports",{"_index":1344,"title":{},"body":{"modules/OpacitySliderModule.html":{},"overview.html":{}}}],["cluster_organselectormodule",{"_index":1585,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_organselectormodule_declarations",{"_index":1586,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_organselectormodule_exports",{"_index":1587,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_storedebugmodule",{"_index":1666,"title":{},"body":{"modules/StoreDebugModule.html":{},"overview.html":{}}}],["cluster_storedebugmodule_declarations",{"_index":1667,"title":{},"body":{"modules/StoreDebugModule.html":{},"overview.html":{}}}],["cluster_storedebugmodule_exports",{"_index":1668,"title":{},"body":{"modules/StoreDebugModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule",{"_index":1702,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule_declarations",{"_index":1703,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule_exports",{"_index":1705,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule_imports",{"_index":1704,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["cluster_trackingpopupmodule",{"_index":1784,"title":{},"body":{"modules/TrackingPopupModule.html":{},"overview.html":{}}}],["cluster_trackingpopupmodule_declarations",{"_index":1786,"title":{},"body":{"modules/TrackingPopupModule.html":{},"overview.html":{}}}],["cluster_trackingpopupmodule_exports",{"_index":1785,"title":{},"body":{"modules/TrackingPopupModule.html":{},"overview.html":{}}}],["code",{"_index":1994,"title":{},"body":{"changelog.html":{}}}],["codebase",{"_index":2244,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":2290,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":2340,"title":{},"body":{"changelog.html":{}}}],["collaboration",{"_index":2242,"title":{},"body":{"changelog.html":{}}}],["collisions",{"_index":2260,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":1043,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["colorizing",{"_index":2299,"title":{},"body":{"changelog.html":{}}}],["combination",{"_index":2255,"title":{},"body":{"changelog.html":{}}}],["combinelatest",{"_index":110,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["combines",{"_index":1606,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["come",{"_index":2295,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":2287,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":410,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"dependencies.html":{}}}],["command",{"_index":67,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["common",{"_index":931,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{},"index.html":{}}}],["commonmodule",{"_index":362,"title":{},"body":{"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}}}],["compare",{"_index":1597,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["comparison",{"_index":1599,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["compiler",{"_index":1240,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["completely",{"_index":865,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["complexity",{"_index":2148,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":1992,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":273,"title":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":695,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["components",{"_index":551,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"overview.html":{}}}],["computed",{"_index":615,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalConfigState.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["comunica/query",{"_index":2448,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":675,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"dependencies.html":{}}}],["concat(op.added",{"_index":676,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["conditions",{"_index":2632,"title":{},"body":{"license.html":{}}}],["config",{"_index":150,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["config.state",{"_index":123,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["config.state.ts",{"_index":790,"title":{},"body":{"injectables/GlobalConfigState.html":{},"coverage.html":{}}}],["config.state.ts:19",{"_index":822,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:22",{"_index":824,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:26",{"_index":821,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:30",{"_index":818,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:34",{"_index":815,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:42",{"_index":801,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:43",{"_index":803,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:44",{"_index":805,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:45",{"_index":807,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:46",{"_index":810,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:62",{"_index":812,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config/global",{"_index":122,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["configurable",{"_index":908,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["configuration",{"_index":2075,"title":{},"body":{"changelog.html":{}}}],["configurations",{"_index":2082,"title":{},"body":{"changelog.html":{}}}],["confirmation",{"_index":2044,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":2092,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":2029,"title":{},"body":{"changelog.html":{}}}],["connectdatabase",{"_index":372,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["connectdatabase(manager",{"_index":379,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["connection",{"_index":2655,"title":{},"body":{"license.html":{}}}],["consent",{"_index":447,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["consent.service",{"_index":42,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["consentchange",{"_index":448,"title":{},"body":{"injectables/ConsentService.html":{}}}],["consentservice",{"_index":6,"title":{"injectables/ConsentService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["consentservice.consentchange.subscribe(consent",{"_index":1203,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["consentservice.setconsent(this.loadconsent",{"_index":1201,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["consortium",{"_index":2607,"title":{},"body":{"license.html":{}}}],["const",{"_index":54,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["constrained",{"_index":2562,"title":{},"body":{"miscellaneous/functions.html":{}}}],["constructor",{"_index":177,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/ConsentService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["constructor(api",{"_index":236,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["constructor(consentservice",{"_index":962,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["constructor(defaultmaxoptions",{"_index":1674,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["constructor(dialog",{"_index":996,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["constructor(dialogref",{"_index":1082,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor(el",{"_index":1258,"title":{},"body":{"directives/NumberDirective.html":{}}}],["constructor(elementref",{"_index":1730,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["constructor(globalconfig",{"_index":377,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["constructor(http",{"_index":1064,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["constructor(private",{"_index":749,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"directives/NumberDirective.html":{}}}],["constructor(store",{"_index":1630,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["container",{"_index":620,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["containers",{"_index":2073,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":2566,"title":{},"body":{"index.html":{}}}],["contains",{"_index":1355,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["content",{"_index":737,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["content.title",{"_index":1122,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["contents",{"_index":1101,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["continuously",{"_index":1541,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["contract",{"_index":2652,"title":{},"body":{"license.html":{}}}],["control",{"_index":2201,"title":{},"body":{"changelog.html":{}}}],["controller",{"_index":333,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["convert",{"_index":763,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["coordinate",{"_index":1935,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["copies",{"_index":2627,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2615,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2606,"title":{},"body":{"license.html":{}}}],["cors",{"_index":2481,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":2322,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["created",{"_index":670,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["createdatabase",{"_index":375,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["createdatabase(config",{"_index":384,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["creates",{"_index":337,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{}}}],["createsegments",{"_index":564,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["createstackops",{"_index":565,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["createstackops(ranges",{"_index":584,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["createworker",{"_index":1812,"title":{},"body":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["createworker(config",{"_index":437,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["creation",{"_index":1000,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["credits",{"_index":2593,"title":{},"body":{"index.html":{}}}],["csp",{"_index":944,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["css",{"_index":1371,"title":{},"body":{"interfaces/OrganInfo.html":{},"dependencies.html":{}}}],["cuboid",{"_index":2320,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":2319,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":613,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{}}}],["currently",{"_index":1490,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["cursor",{"_index":1041,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["custom",{"_index":1598,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["cyberinfrastructure",{"_index":2595,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":2158,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":876,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["damages",{"_index":2649,"title":{},"body":{"license.html":{}}}],["dark/light",{"_index":2088,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":125,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"modules/MousePositionTrackerModule.html":{},"components/StoreDebugComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["data.content",{"_index":1106,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["data.length",{"_index":1021,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["data.split",{"_index":769,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["data.title",{"_index":1107,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["data.videoid",{"_index":1108,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dataaction",{"_index":1795,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["database",{"_index":103,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["database.service.ts",{"_index":368,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["database.service.ts:20",{"_index":378,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{}}}],["database.service.ts:37",{"_index":385,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{}}}],["database.service.ts:39",{"_index":382,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{}}}],["database.service.ts:63",{"_index":1814,"title":{},"body":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["database[releaseproxy",{"_index":441,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["databasestatus",{"_index":104,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["datareviver",{"_index":132,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/typealiases.html":{}}}],["datasets",{"_index":2169,"title":{},"body":{"changelog.html":{}}}],["datasource",{"_index":124,"title":{"interfaces/DataSource.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"coverage.html":{}}}],["datasource[k",{"_index":487,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["datasourcedatatype",{"_index":488,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["datasourcelike",{"_index":414,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/typealiases.html":{}}}],["datasourcelikemethod",{"_index":485,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["datasourcemethod",{"_index":486,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["datasourceservice",{"_index":507,"title":{"injectables/DataSourceService.html":{}},"body":{"injectables/DataSourceService.html":{},"coverage.html":{}}}],["deal",{"_index":2617,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2656,"title":{},"body":{"license.html":{}}}],["debug",{"_index":1627,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug'},{'name",{"_index":710,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["debug.component",{"_index":1670,"title":{},"body":{"modules/StoreDebugModule.html":{}}}],["debug.component.html",{"_index":1629,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.scss",{"_index":1628,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts",{"_index":1625,"title":{},"body":{"components/StoreDebugComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["debug.component.ts:21",{"_index":1637,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:26",{"_index":1643,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:34",{"_index":1640,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:37",{"_index":1633,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:58",{"_index":1638,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.module.ts",{"_index":1669,"title":{},"body":{"modules/StoreDebugModule.html":{}}}],["debug/store",{"_index":1624,"title":{},"body":{"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["december",{"_index":2250,"title":{},"body":{"changelog.html":{}}}],["decides",{"_index":1520,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["deck.gl/core",{"_index":2451,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/geo",{"_index":2453,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":2455,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":2456,"title":{},"body":{"dependencies.html":{}}}],["deckgl",{"_index":1874,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["declarations",{"_index":360,"title":{},"body":{"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}}}],["declare",{"_index":905,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["decorated",{"_index":288,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{}}}],["decoratedrange",{"_index":287,"title":{"interfaces/DecoratedRange.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["decoratedtextcomponent",{"_index":550,"title":{"components/DecoratedTextComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["decoratedtextmodule",{"_index":719,"title":{"modules/DecoratedTextModule.html":{}},"body":{"modules/DecoratedTextModule.html":{},"modules/TextSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["decoration",{"_index":598,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["decorations",{"_index":265,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{}}}],["decorations.length",{"_index":632,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["decorations.reduce",{"_index":687,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["decorator",{"_index":283,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"dependencies.html":{}}}],["decorators",{"_index":243,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{}}}],["deep",{"_index":1124,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["deeply",{"_index":2033,"title":{},"body":{"changelog.html":{}}}],["def",{"_index":875,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["default",{"_index":290,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/ConsentService.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/PluckUniqueOptions.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_max_options",{"_index":295,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_options",{"_index":1605,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultmaxoptions",{"_index":340,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["defaultparams",{"_index":135,"title":{"interfaces/DefaultParams.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{}}}],["defaults",{"_index":839,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/functions.html":{}}}],["defaultservice",{"_index":105,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["define",{"_index":731,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["defined",{"_index":24,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["delegate.service.ts",{"_index":1169,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"coverage.html":{}}}],["delegate.service.ts:11",{"_index":1172,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["delegate.service.ts:28",{"_index":1175,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["delegatedatasource",{"_index":370,"title":{"classes/DelegateDataSource.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["delegatedatasource:11",{"_index":1177,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["delegatedatasource:19",{"_index":404,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["delete",{"_index":916,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["demo",{"_index":2052,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":941,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["depends",{"_index":923,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["deps",{"_index":77,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["description",{"_index":260,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["destroyed",{"_index":1011,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["detaches",{"_index":1518,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["details",{"_index":988,"title":{},"body":{"components/InfoButtonComponent.html":{},"changelog.html":{}}}],["detection",{"_index":1636,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["detects",{"_index":1013,"title":{},"body":{"components/InfoButtonComponent.html":{},"interfaces/OrganInfo.html":{}}}],["determines",{"_index":1494,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["determining",{"_index":1600,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["dev",{"_index":429,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["developed",{"_index":2594,"title":{},"body":{"index.html":{}}}],["developmentmode",{"_index":52,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["developments",{"_index":2345,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":736,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["dialog's",{"_index":1087,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialog'},{'name",{"_index":701,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["dialog.component",{"_index":1019,"title":{},"body":{"components/InfoButtonComponent.html":{},"modules/InfoDialogModule.html":{}}}],["dialog.component.html",{"_index":1076,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialog.component.scss",{"_index":1075,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialog.component.ts",{"_index":1068,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"coverage.html":{}}}],["dialog.component.ts:26",{"_index":1100,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":1102,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:32",{"_index":1085,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:40",{"_index":1099,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:41",{"_index":1098,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:51",{"_index":1092,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:60",{"_index":1090,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.module",{"_index":1062,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["dialog.module.ts",{"_index":1159,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["dialog/info",{"_index":1018,"title":{},"body":{"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"coverage.html":{}}}],["dialogref",{"_index":1078,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialogue",{"_index":1009,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["different",{"_index":2072,"title":{},"body":{"changelog.html":{}}}],["digits",{"_index":2226,"title":{},"body":{"changelog.html":{}}}],["dir",{"_index":1530,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["direct",{"_index":2363,"title":{},"body":{"changelog.html":{}}}],["direction",{"_index":1531,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["directive",{"_index":693,"title":{"directives/NumberDirective.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":715,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["directly",{"_index":2288,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":947,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{}}}],["disabled",{"_index":968,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/variables.html":{}}}],["disables",{"_index":1569,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["dismiss",{"_index":1726,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["display",{"_index":556,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["displayed",{"_index":271,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["displayerrors",{"_index":1487,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["displaying",{"_index":1070,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["displays",{"_index":986,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["distance",{"_index":1501,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["distinct",{"_index":1601,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["distinctuntilchanged",{"_index":285,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["distinctuntilchanged(opts.compare",{"_index":1622,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["distribute",{"_index":2623,"title":{},"body":{"license.html":{}}}],["div",{"_index":1875,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["doc",{"_index":2331,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1215,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"dependencies.html":{}}}],["document).body",{"_index":1250,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["document.body.appendchild(tag",{"_index":1113,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["document.createelement('script",{"_index":1110,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["document.getelementsbyclassname('modal",{"_index":1114,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["documentation",{"_index":733,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documentationcontent",{"_index":726,"title":{"interfaces/DocumentationContent.html":{}},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"coverage.html":{}}}],["documentationcontents",{"_index":1079,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["documentationurl",{"_index":743,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dom",{"_index":553,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["don't",{"_index":640,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["done",{"_index":652,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["donor",{"_index":2114,"title":{},"body":{"changelog.html":{}}}],["donors",{"_index":2172,"title":{},"body":{"changelog.html":{}}}],["dorequest",{"_index":213,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["dorequest(method",{"_index":238,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["dotenv",{"_index":2486,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":2354,"title":{},"body":{"changelog.html":{}}}],["during",{"_index":869,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["dynamic",{"_index":2446,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":1966,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":732,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/functions.html":{}}}],["eagerly_loaded_services",{"_index":55,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["easier",{"_index":1972,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":622,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["efficiency",{"_index":2193,"title":{},"body":{"changelog.html":{}}}],["el",{"_index":1227,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"miscellaneous/functions.html":{}}}],["element",{"_index":692,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["elementref",{"_index":1259,"title":{},"body":{"directives/NumberDirective.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["elementref.nativeelement",{"_index":1749,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["embedded",{"_index":2080,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":2068,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":2066,"title":{},"body":{"changelog.html":{}}}],["emitevent",{"_index":318,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["emits",{"_index":326,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{}}}],["emitted",{"_index":2556,"title":{},"body":{"miscellaneous/functions.html":{}}}],["emitter",{"_index":1305,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["empty",{"_index":628,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["end",{"_index":527,"title":{},"body":{"interfaces/DecoratedRange.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/functions.html":{}}}],["endpoint",{"_index":224,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["endpoint.service.ts",{"_index":90,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["endpoint.service.ts:102",{"_index":247,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:107",{"_index":251,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:112",{"_index":248,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:117",{"_index":250,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:125",{"_index":246,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:133",{"_index":252,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:141",{"_index":255,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:149",{"_index":244,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:157",{"_index":249,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:165",{"_index":245,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:173",{"_index":254,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:181",{"_index":253,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:188",{"_index":239,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:193",{"_index":241,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:199",{"_index":242,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:94",{"_index":237,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["ensures",{"_index":1807,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["entry",{"_index":1739,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["entry[1",{"_index":666,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["environment",{"_index":924,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["error",{"_index":1521,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["errors",{"_index":957,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["es",{"_index":2477,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":946,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{}}}],["eslint/explicit",{"_index":1245,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["eslint/no",{"_index":951,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["especially",{"_index":867,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["etc",{"_index":2096,"title":{},"body":{"changelog.html":{}}}],["eui",{"_index":1005,"title":{},"body":{"components/InfoButtonComponent.html":{},"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":1988,"title":{},"body":{"changelog.html":{}}}],["eval",{"_index":953,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["even",{"_index":888,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["event",{"_index":1223,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"license.html":{}}}],["event.stoppropagation",{"_index":1274,"title":{},"body":{"directives/NumberDirective.html":{}}}],["eventemitter",{"_index":274,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["events",{"_index":1232,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/OpacitySliderComponent.html":{}}}],["events.subscribe(data",{"_index":1237,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["eventually",{"_index":1373,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["evt",{"_index":1907,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["evt.preventdefault",{"_index":1908,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["exclusive",{"_index":530,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["exists",{"_index":891,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["expanded",{"_index":1492,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["explicit",{"_index":1244,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["exploration",{"_index":2569,"title":{},"body":{"index.html":{}}}],["export",{"_index":46,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["exported",{"_index":126,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["exports",{"_index":361,"title":{},"body":{"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}}}],["express",{"_index":2488,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["ext/operators",{"_index":837,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["ext/operators/src/lib/filter",{"_index":2388,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ext/operators/src/lib/flatten.ts",{"_index":2391,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ext/operators/src/lib/inner",{"_index":2393,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ext/operators/src/lib/pluck",{"_index":1593,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ext/src/public",{"_index":2397,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["extends",{"_index":369,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["external",{"_index":2085,"title":{},"body":{"changelog.html":{}}}],["extra",{"_index":2493,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":2049,"title":{},"body":{"changelog.html":{}}}],["eye",{"_index":1388,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["f",{"_index":1429,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":296,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/LocalStorageSyncService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["fade",{"_index":1117,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["fail",{"_index":940,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["fails",{"_index":1241,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"changelog.html":{}}}],["fallopian",{"_index":1395,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["fallthrough",{"_index":1210,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["false",{"_index":319,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/variables.html":{}}}],["favor",{"_index":2237,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":1963,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":2159,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":2192,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":146,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":1367,"title":{},"body":{"interfaces/OrganInfo.html":{},"dependencies.html":{}}}],["fetches",{"_index":343,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["field",{"_index":1696,"title":{},"body":{"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"changelog.html":{}}}],["fields",{"_index":629,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["file",{"_index":15,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":2616,"title":{},"body":{"license.html":{}}}],["filled",{"_index":595,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["filter",{"_index":97,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["filter(config",{"_index":419,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["filter(item",{"_index":667,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["filter(range",{"_index":684,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["filternulls",{"_index":835,"title":{},"body":{"injectables/GlobalConfigState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["filterparams",{"_index":137,"title":{"interfaces/FilterParams.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["filters",{"_index":592,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["filtertoparams",{"_index":2427,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["filtertoparams(filter",{"_index":217,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["final",{"_index":2240,"title":{},"body":{"changelog.html":{}}}],["find",{"_index":345,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["findglobalobject",{"_index":856,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["finishing",{"_index":2047,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":637,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["fit",{"_index":2166,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":2641,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":2150,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":1949,"title":{},"body":{"changelog.html":{}}}],["fixes/performance",{"_index":2300,"title":{},"body":{"changelog.html":{}}}],["flatten",{"_index":2392,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["flattens",{"_index":2551,"title":{},"body":{"miscellaneous/functions.html":{}}}],["flex",{"_index":690,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["float",{"_index":1134,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["fly",{"_index":2371,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":2631,"title":{},"body":{"license.html":{}}}],["font",{"_index":1045,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{}}}],["form",{"_index":332,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["format",{"_index":2263,"title":{},"body":{"changelog.html":{}}}],["formatdata",{"_index":1222,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["formcontrol",{"_index":280,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["formsmodule",{"_index":1709,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["forroot",{"_index":21,"title":{},"body":{"modules/AnalyticsModule.html":{}}}],["forroot(options",{"_index":22,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["forwardcall",{"_index":376,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardcall(method",{"_index":386,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource",{"_index":390,"title":{"classes/ForwardingDataSource.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["forwardingdatasource:36",{"_index":395,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:40",{"_index":399,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:44",{"_index":396,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:48",{"_index":398,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:52",{"_index":394,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:56",{"_index":400,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:60",{"_index":403,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:64",{"_index":392,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:68",{"_index":397,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:72",{"_index":393,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:76",{"_index":402,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:80",{"_index":401,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:93",{"_index":391,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["found",{"_index":346,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GlobalsService.html":{},"components/TextSearchComponent.html":{}}}],["frame",{"_index":2173,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":1936,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["free",{"_index":2611,"title":{},"body":{"license.html":{}}}],["fromevent",{"_index":1217,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["fromevent(el",{"_index":1233,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["fs",{"_index":2492,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":679,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["fullscreen",{"_index":2327,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":2160,"title":{},"body":{"changelog.html":{}}}],["func",{"_index":949,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["function",{"_index":56,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["function('return",{"_index":954,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["functionality",{"_index":302,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GlobalsService.html":{},"components/TextSearchComponent.html":{}}}],["functionaliy",{"_index":1607,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":2539,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":2600,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":2630,"title":{},"body":{"license.html":{}}}],["further",{"_index":2323,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":2151,"title":{},"body":{"changelog.html":{}}}],["ga",{"_index":1221,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["ga.event('webpage",{"_index":1238,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["gatoken",{"_index":48,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["generate",{"_index":1967,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":1993,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":1975,"title":{},"body":{"changelog.html":{}}}],["get(key",{"_index":872,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["getaggregateresults",{"_index":230,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getaggregateresults(filter",{"_index":201,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getallowtelemetry",{"_index":1742,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["getcelltypetermoccurences",{"_index":231,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getcelltypetermoccurences(filter",{"_index":205,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getcelltypetreemodel",{"_index":194,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getconfig",{"_index":823,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getdata",{"_index":1642,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["getdatabasestatus",{"_index":183,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getdatasettechnologynames",{"_index":189,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getnormalizeddecorations",{"_index":566,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getobj",{"_index":900,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["getontologytermoccurences",{"_index":232,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getontologytermoccurences(filter",{"_index":203,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getontologytreemodel",{"_index":191,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getop",{"_index":655,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getop(range.end).removed.push(range",{"_index":658,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getop(range.start).added.push(range",{"_index":657,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getoption",{"_index":793,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getoption(...path",{"_index":806,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getoption(k1",{"_index":799,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getoptions",{"_index":1671,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["getoptions(search",{"_index":348,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["getpathkey",{"_index":794,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getpathkey(path",{"_index":811,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getproperty",{"_index":795,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getproperty(path",{"_index":813,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getprovidernames",{"_index":187,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getreferenceorgans",{"_index":196,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getreferenceorganscene",{"_index":233,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getreferenceorganscene(organiri",{"_index":210,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["gets",{"_index":874,"title":{},"body":{"injectables/GlobalsService.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{}}}],["getscene",{"_index":234,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getscene(filter",{"_index":207,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["gettelemetrystoragesetting",{"_index":1800,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":1932,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettissueblockresults",{"_index":235,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["gettissueblockresults(filter",{"_index":199,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getvalue",{"_index":1693,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["github",{"_index":2228,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":462,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/typealiases.html":{}}}],["gizmo",{"_index":2100,"title":{},"body":{"changelog.html":{}}}],["global",{"_index":855,"title":{},"body":{"injectables/GlobalsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["globalconfig",{"_index":181,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"changelog.html":{}}}],["globalconfig.config$.pipe",{"_index":418,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["globalconfig.getoption('hubmaptoken",{"_index":219,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["globalconfig.getoption('hubmaptoken').subscribe(buster",{"_index":182,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["globalconfig.getoption('remoteapiendpoint",{"_index":218,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["globalconfigstate",{"_index":121,"title":{"injectables/GlobalConfigState.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["globalkey",{"_index":879,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{}}}],["globalsservice",{"_index":852,"title":{"injectables/GlobalsService.html":{}},"body":{"injectables/GlobalsService.html":{},"coverage.html":{}}}],["globalthis",{"_index":871,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["globalthis[k",{"_index":911,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["good",{"_index":2273,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":40,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"changelog.html":{},"dependencies.html":{}}}],["googleanalyticsservice",{"_index":1216,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["googleanalyticssyncservice",{"_index":8,"title":{"injectables/GoogleAnalyticsSyncService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["granted",{"_index":2610,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2658,"title":{},"body":{"modules.html":{}}}],["graphical",{"_index":1948,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":2494,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":2062,"title":{},"body":{"changelog.html":{}}}],["gtex",{"_index":1968,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":2265,"title":{},"body":{"changelog.html":{}}}],["h1",{"_index":754,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["hack",{"_index":1550,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["hand",{"_index":2270,"title":{},"body":{"changelog.html":{}}}],["handles",{"_index":1069,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["happen",{"_index":2308,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":2248,"title":{},"body":{"changelog.html":{}}}],["happy",{"_index":1552,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["hard",{"_index":921,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["has(key",{"_index":883,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["hassex",{"_index":1358,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":1141,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["headerandcontent",{"_index":771,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["headerandcontent.splice(1).join('\\n\\n",{"_index":775,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["headerandcontent[0",{"_index":774,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["heart",{"_index":1400,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":1130,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["helmet",{"_index":2498,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":1363,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["here",{"_index":2268,"title":{},"body":{"changelog.html":{}}}],["hereby",{"_index":2609,"title":{},"body":{"license.html":{}}}],["hex",{"_index":2500,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":1340,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["hide",{"_index":1523,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["hiding",{"_index":1071,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["high",{"_index":165,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["highlight",{"_index":2038,"title":{},"body":{"changelog.html":{}}}],["highlights",{"_index":2039,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":2646,"title":{},"body":{"license.html":{}}}],["hooked",{"_index":2199,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":689,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["hostbinding",{"_index":275,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["hostbinding('class",{"_index":312,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["hostbindings",{"_index":572,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["hostlistener",{"_index":1269,"title":{},"body":{"directives/NumberDirective.html":{}}}],["hostlistener('input",{"_index":1268,"title":{},"body":{"directives/NumberDirective.html":{}}}],["hostlisteners",{"_index":1257,"title":{},"body":{"directives/NumberDirective.html":{}}}],["hovering",{"_index":2116,"title":{},"body":{"changelog.html":{}}}],["html",{"_index":311,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["htmlelement",{"_index":1220,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["http",{"_index":750,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["http://purl.obolibrary.org/obo/fma_24977",{"_index":1411,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/fma_24978",{"_index":1410,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/fma_54449",{"_index":1392,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/fma_7213",{"_index":1424,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/fma_7214",{"_index":1423,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000029",{"_index":1385,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000056",{"_index":1451,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000059",{"_index":1442,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000079",{"_index":1435,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000948",{"_index":1401,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000955",{"_index":1381,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000970",{"_index":1390,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000992",{"_index":1422,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000995",{"_index":1460,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001004",{"_index":1419,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001222",{"_index":1453,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001223",{"_index":1452,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001255",{"_index":1457,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001264",{"_index":1427,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001270",{"_index":1431,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001302",{"_index":1398,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001303",{"_index":1397,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001465",{"_index":1409,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002048",{"_index":1418,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002049",{"_index":1466,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002097",{"_index":1378,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002106",{"_index":1445,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002107",{"_index":1414,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002108",{"_index":1439,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002113",{"_index":1404,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002367",{"_index":1434,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002370",{"_index":1448,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002509",{"_index":1386,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0003889",{"_index":1396,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004537",{"_index":1465,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004538",{"_index":1405,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004539",{"_index":1406,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004548",{"_index":1391,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":741,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["httpclientmodule",{"_index":1061,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["https://beta",{"_index":2572,"title":{},"body":{"index.html":{}}}],["https://ccf",{"_index":2584,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":2577,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":2576,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":2579,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":2574,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":2365,"title":{},"body":{"changelog.html":{}}}],["https://www.youtube.com/iframe_api",{"_index":1112,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["hubmap",{"_index":2036,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["hubmaptoken",{"_index":91,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["i1[0",{"_index":662,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["i2",{"_index":661,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["i2[0",{"_index":663,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["icon",{"_index":985,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["icons",{"_index":1338,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["id",{"_index":266,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["idb",{"_index":2503,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":1688,"title":{},"body":{"components/TextSearchComponent.html":{},"coverage.html":{}}}],["iec",{"_index":2243,"title":{},"body":{"changelog.html":{}}}],["iframe",{"_index":1153,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["ignore",{"_index":918,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["ignored",{"_index":1200,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["igoogleanalyticscommand",{"_index":37,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["igoogleanalyticssettings",{"_index":963,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["image",{"_index":2236,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":2286,"title":{},"body":{"changelog.html":{}}}],["immutable",{"_index":825,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["immutablepatchvalue",{"_index":817,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["immutablestatevalue",{"_index":820,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["impl",{"_index":371,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["impl[method",{"_index":505,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["implementation",{"_index":2027,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":2197,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":2330,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":176,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["implied",{"_index":952,"title":{},"body":{"injectables/GlobalsService.html":{},"license.html":{}}}],["import",{"_index":33,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["important",{"_index":1339,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["imports",{"_index":71,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}}}],["improve",{"_index":1758,"title":{},"body":{"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["improved",{"_index":1985,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":1944,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":2063,"title":{},"body":{"changelog.html":{}}}],["in\\'}}opt",{"_index":1782,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["include",{"_index":1265,"title":{},"body":{"directives/NumberDirective.html":{},"changelog.html":{}}}],["included",{"_index":2634,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2374,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":2035,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["inclusive",{"_index":534,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["increase",{"_index":2221,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":2325,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":85,"title":{"index.html":{}},"body":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexing",{"_index":537,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["indiana",{"_index":2598,"title":{},"body":{"index.html":{}}}],["indicating",{"_index":541,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["indices",{"_index":2560,"title":{},"body":{"miscellaneous/functions.html":{}}}],["indicies",{"_index":532,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["individual",{"_index":2203,"title":{},"body":{"changelog.html":{}}}],["infix",{"_index":1699,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["info",{"_index":13,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["infobuttoncomponent",{"_index":698,"title":{"components/InfoButtonComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["infobuttonmodule",{"_index":1051,"title":{"modules/InfoButtonModule.html":{}},"body":{"modules/InfoButtonModule.html":{},"modules.html":{},"overview.html":{}}}],["infobuttonservice",{"_index":745,"title":{"injectables/InfoButtonService.html":{}},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"coverage.html":{}}}],["infodialogcomponent",{"_index":700,"title":{"components/InfoDialogComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["infodialogdata",{"_index":1084,"title":{"interfaces/InfoDialogData.html":{}},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"coverage.html":{}}}],["infodialogmodule",{"_index":1056,"title":{"modules/InfoDialogModule.html":{}},"body":{"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules.html":{},"overview.html":{}}}],["information",{"_index":984,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{},"index.html":{}}}],["infotitle",{"_index":994,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["infrastructure",{"_index":2289,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":2253,"title":{},"body":{"changelog.html":{}}}],["inherited",{"_index":389,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["init",{"_index":1096,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["initalvalue",{"_index":1270,"title":{},"body":{"directives/NumberDirective.html":{}}}],["initalvalue.replace(/[^0",{"_index":1272,"title":{},"body":{"directives/NumberDirective.html":{}}}],["initcommands",{"_index":2384,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["initcommands(options",{"_index":66,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["initial",{"_index":2132,"title":{},"body":{"changelog.html":{}}}],["initial_telemetry_setting",{"_index":1799,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialization",{"_index":1882,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["initialized",{"_index":1858,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["inject",{"_index":276,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["inject(default_max_options",{"_index":341,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["inject(document",{"_index":1248,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["inject(local_storage_consent_key",{"_index":1197,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["inject(mat_dialog_data",{"_index":1097,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["inject(mat_snack_bar_data",{"_index":1740,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["inject(ngx_google_analytics_settings_token",{"_index":974,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["inject(ngx_window",{"_index":973,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["injectable",{"_index":93,"title":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["injectables",{"_index":229,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"overview.html":{}}}],["injected",{"_index":1089,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["injectiontoken",{"_index":277,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/LocalStorageSyncService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('key",{"_index":1192,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":1171,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["injector.get(token",{"_index":1181,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["injectordelegatedatasourceservice",{"_index":1167,"title":{"injectables/InjectorDelegateDataSourceService.html":{}},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"coverage.html":{}}}],["innermap",{"_index":2395,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["innermap(project",{"_index":2554,"title":{},"body":{"miscellaneous/functions.html":{}}}],["input",{"_index":278,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["input[ccfnumbersonly",{"_index":717,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["inputs",{"_index":571,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["inside",{"_index":739,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["instance",{"_index":338,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["instead",{"_index":2126,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":2067,"title":{},"body":{"changelog.html":{}}}],["integer",{"_index":1255,"title":{},"body":{"directives/NumberDirective.html":{}}}],["integrated",{"_index":2161,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":2032,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":2252,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":2179,"title":{},"body":{"changelog.html":{}}}],["interact",{"_index":2145,"title":{},"body":{"changelog.html":{}}}],["interacting",{"_index":854,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["interactions",{"_index":2311,"title":{},"body":{"changelog.html":{}}}],["interactive",{"_index":1859,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["interactive(value",{"_index":1861,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["interest",{"_index":1567,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["interface",{"_index":47,"title":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":84,"title":{},"body":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":2235,"title":{},"body":{"changelog.html":{}}}],["intestine",{"_index":1437,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["invoked",{"_index":2558,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iobservablecacheconfig",{"_index":127,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["isdevmode",{"_index":405,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["isselected(organ",{"_index":1568,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["issue",{"_index":2217,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":2014,"title":{},"body":{"changelog.html":{}}}],["istanbul",{"_index":917,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["it's",{"_index":2030,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":1301,"title":{},"body":{"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["itemcontainer",{"_index":1483,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemcontainer.nativeelement.style.width",{"_index":1578,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemlist",{"_index":1481,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemlist.nativeelement.offsetwidth",{"_index":1572,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemlist.nativeelement.style.left",{"_index":1539,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["items",{"_index":1329,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["iu",{"_index":2343,"title":{},"body":{"changelog.html":{}}}],["javascript",{"_index":1979,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["json",{"_index":1663,"title":{},"body":{"components/StoreDebugComponent.html":{},"changelog.html":{}}}],["jsonld",{"_index":2506,"title":{},"body":{"dependencies.html":{}}}],["july",{"_index":2310,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":2351,"title":{},"body":{"changelog.html":{}}}],["justify",{"_index":1330,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["k",{"_index":387,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["k1",{"_index":800,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k2",{"_index":802,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k3",{"_index":804,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k4",{"_index":1613,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k5",{"_index":1614,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k6",{"_index":1615,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["key",{"_index":61,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["keyboard",{"_index":2349,"title":{},"body":{"changelog.html":{}}}],["keyof",{"_index":484,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["keys",{"_index":902,"title":{},"body":{"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/typealiases.html":{}}}],["keys.slice(0",{"_index":1619,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["keyval",{"_index":2504,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":1403,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":2638,"title":{},"body":{"license.html":{}}}],["knee",{"_index":1408,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["known",{"_index":2013,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":2246,"title":{},"body":{"changelog.html":{}}}],["kv[0",{"_index":1661,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["kv[1",{"_index":1662,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["kvlist",{"_index":1645,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["kvpair",{"_index":1647,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["l",{"_index":1389,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":267,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{}}}],["labs/data",{"_index":2463,"title":{},"body":{"dependencies.html":{}}}],["labs/data/decorators",{"_index":830,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["labs/data/repositories",{"_index":831,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["labs/data/typings",{"_index":832,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["landmarks",{"_index":2051,"title":{},"body":{"changelog.html":{}}}],["large",{"_index":1441,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["larger",{"_index":1973,"title":{},"body":{"changelog.html":{}}}],["last",{"_index":650,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["lastindex",{"_index":636,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["later",{"_index":576,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["latest",{"_index":324,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"index.html":{}}}],["launchinfodialog",{"_index":992,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["launchinfodialog(data",{"_index":1006,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["layers",{"_index":2454,"title":{},"body":{"dependencies.html":{}}}],["ld",{"_index":2262,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":2216,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":2046,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":1128,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["left/right",{"_index":2060,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":691,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["length",{"_index":539,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["level",{"_index":2347,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["levels",{"_index":2360,"title":{},"body":{"changelog.html":{}}}],["lhs",{"_index":1603,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["liability",{"_index":2650,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2647,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":1977,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":2187,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":2604,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":2041,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":2619,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2294,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":948,"title":{},"body":{"injectables/GlobalsService.html":{},"components/InfoDialogComponent.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{}}}],["link",{"_index":2053,"title":{},"body":{"changelog.html":{}}}],["linkage",{"_index":2312,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":2113,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":2011,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":1488,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{},"changelog.html":{}}}],["listeners",{"_index":1635,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["listens",{"_index":1263,"title":{},"body":{"directives/NumberDirective.html":{}}}],["listlength",{"_index":1575,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["listlength}px",{"_index":1579,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["literal",{"_index":2522,"title":{},"body":{"dependencies.html":{}}}],["little",{"_index":2143,"title":{},"body":{"changelog.html":{}}}],["liver",{"_index":1413,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":1093,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["loadconsent",{"_index":1183,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["loaded",{"_index":2313,"title":{},"body":{"changelog.html":{}}}],["loaders.gl/core",{"_index":2457,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/draco",{"_index":2459,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":2460,"title":{},"body":{"dependencies.html":{}}}],["local",{"_index":44,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["local_storage_allow_telemetry_key",{"_index":1798,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["local_storage_consent_key",{"_index":1191,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localstorage",{"_index":1196,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["localstorage.getitem(local_storage_allow_telemetry_key",{"_index":1801,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["localstorage.setitem(local_storage_allow_telemetry_key",{"_index":1804,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["localstoragesyncservice",{"_index":9,"title":{"injectables/LocalStorageSyncService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["locate",{"_index":860,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["location",{"_index":2222,"title":{},"body":{"changelog.html":{}}}],["location.reload",{"_index":1811,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["locations",{"_index":864,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["lodash",{"_index":2508,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1756,"title":{},"body":{"components/TrackingPopupComponent.html":{},"index.html":{}}}],["logging",{"_index":1970,"title":{},"body":{"changelog.html":{}}}],["long",{"_index":890,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["longer",{"_index":2124,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":735,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"changelog.html":{}}}],["low",{"_index":164,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["lru",{"_index":2510,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":2461,"title":{},"body":{"dependencies.html":{}}}],["lung",{"_index":1416,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["lungs",{"_index":1417,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["lymph",{"_index":1384,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["made",{"_index":2245,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":1942,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":1551,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["makedecoratedsegment",{"_index":567,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["makedecoratedsegment(text",{"_index":596,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["makes",{"_index":1971,"title":{},"body":{"changelog.html":{}}}],["makeundecoratedsegment",{"_index":568,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["makeundecoratedsegment(text",{"_index":599,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["making",{"_index":2023,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":147,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["managed",{"_index":1641,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["manager",{"_index":383,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["manager.database",{"_index":426,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["manager.database.connect(config",{"_index":432,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["managers",{"_index":1983,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":114,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"modules/MousePositionTrackerModule.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["map(config",{"_index":1178,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["map(data",{"_index":227,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["map(entry",{"_index":665,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["map(formatdata",{"_index":1236,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["map(manager",{"_index":425,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["map(range",{"_index":681,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["map(token",{"_index":1180,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["map.ts",{"_index":2394,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapping",{"_index":2557,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maps",{"_index":2555,"title":{},"body":{"miscellaneous/functions.html":{}}}],["march",{"_index":2190,"title":{},"body":{"changelog.html":{}}}],["margin",{"_index":1131,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["margin.x",{"_index":1892,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["margin.y",{"_index":1895,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["markdown",{"_index":752,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"dependencies.html":{}}}],["markdowncontent",{"_index":748,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["markdowncontent.push",{"_index":773,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["markdownmodule",{"_index":1163,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["markdownmodule.forroot",{"_index":1166,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["markers",{"_index":1720,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["mat",{"_index":1125,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["mat_dialog_data",{"_index":1103,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["mat_snack_bar_data",{"_index":1744,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["matautocompletemodule",{"_index":1711,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["matbuttonmodule",{"_index":1788,"title":{},"body":{"modules/TrackingPopupModule.html":{}}}],["match",{"_index":1364,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["matching",{"_index":82,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":997,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["matdialogmodule",{"_index":1160,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["matdialogref",{"_index":1083,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["matexpansionmodule",{"_index":1161,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["matformfieldmodule",{"_index":1713,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["math.floor(carouselcontainer.nativeelement.offsetwidth",{"_index":1576,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["math.gl/core",{"_index":95,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"dependencies.html":{}}}],["math.log2((height",{"_index":1894,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["math.log2((width",{"_index":1891,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["math.min",{"_index":1890,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["maticonmodule",{"_index":1058,"title":{},"body":{"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{}}}],["matinputmodule",{"_index":1715,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["matprefix",{"_index":1706,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["matripplemodule",{"_index":1349,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["matrix4",{"_index":94,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["matrix4(node.transformmatrix",{"_index":172,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["matslidermodule",{"_index":1347,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["matsuffix",{"_index":1707,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["mattooltipmodule",{"_index":1590,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["max",{"_index":168,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/InfoDialogComponent.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["maxcachecount",{"_index":156,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":291,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["maxoptions",{"_index":321,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["maxrotationx",{"_index":1903,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["mc",{"_index":2342,"title":{},"body":{"changelog.html":{}}}],["member",{"_index":1751,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["memory",{"_index":2215,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":2271,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":2640,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2621,"title":{},"body":{"license.html":{}}}],["message",{"_index":1524,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["metadata",{"_index":560,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["method",{"_index":214,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["method(requestparams",{"_index":226,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["methods",{"_index":19,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["min",{"_index":166,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/InfoDialogComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["minmax",{"_index":106,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["minor",{"_index":1549,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["minrotationx",{"_index":1901,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["miscellaneous",{"_index":2538,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2605,"title":{},"body":{"license.html":{}}}],["mixed",{"_index":1553,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["mock",{"_index":2338,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":1026,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["mode",{"_index":430,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["model",{"_index":1104,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"dependencies.html":{}}}],["models",{"_index":1824,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["modify",{"_index":674,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"license.html":{}}}],["module",{"_index":0,"title":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":32,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["monorepo",{"_index":2564,"title":{},"body":{"index.html":{}}}],["more",{"_index":2267,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mount",{"_index":1876,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["mouseevent",{"_index":1224,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mousemove",{"_index":1239,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mousemove').pipe",{"_index":1234,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mousepositiontrackermodule",{"_index":1212,"title":{"modules/MousePositionTrackerModule.html":{}},"body":{"modules/MousePositionTrackerModule.html":{},"modules.html":{}}}],["moved",{"_index":2355,"title":{},"body":{"changelog.html":{}}}],["moves",{"_index":1502,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["much",{"_index":926,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["multi",{"_index":73,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["multiple",{"_index":1484,"title":{},"body":{"interfaces/OrganInfo.html":{},"index.html":{}}}],["multiselect",{"_index":1486,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["n3",{"_index":2512,"title":{},"body":{"dependencies.html":{}}}],["name",{"_index":27,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":2093,"title":{},"body":{"changelog.html":{}}}],["navigation",{"_index":2350,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":2194,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":2198,"title":{},"body":{"changelog.html":{}}}],["negative",{"_index":531,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["nested",{"_index":2552,"title":{},"body":{"miscellaneous/functions.html":{}}}],["network",{"_index":2596,"title":{},"body":{"index.html":{}}}],["new",{"_index":152,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["newopacity",{"_index":1311,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["next",{"_index":919,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["ng",{"_index":1123,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["ng5",{"_index":2514,"title":{},"body":{"dependencies.html":{}}}],["ngafterviewinit",{"_index":1514,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["ngmodule",{"_index":35,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}}}],["ngonchanges",{"_index":569,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["ngonchanges(changes",{"_index":602,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["ngondestroy",{"_index":449,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["ngoninit",{"_index":1081,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{}}}],["ngx",{"_index":39,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"dependencies.html":{}}}],["ngx_google_analytics_settings_token",{"_index":971,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["ngx_window",{"_index":972,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["ngxgoogleanalyticsmodule",{"_index":38,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["ngxgoogleanalyticsmodule.forroot",{"_index":79,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["ngxs",{"_index":829,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"dependencies.html":{}}}],["ngxs/logger",{"_index":2465,"title":{},"body":{"dependencies.html":{}}}],["ngxs/storage",{"_index":2468,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":834,"title":{},"body":{"injectables/GlobalConfigState.html":{},"components/StoreDebugComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"dependencies.html":{}}}],["ngxsimmutabledatarepository",{"_index":791,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["nih",{"_index":2601,"title":{},"body":{"index.html":{}}}],["node",{"_index":170,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":933,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["nodeclick",{"_index":1855,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodeclickevent",{"_index":1820,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodedrag",{"_index":1854,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodedragevent",{"_index":1821,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodehoverstart",{"_index":1856,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodehoverstop",{"_index":1857,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodejs",{"_index":1554,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["nodes",{"_index":1383,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["none",{"_index":1337,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["noninfringement",{"_index":2644,"title":{},"body":{"license.html":{}}}],["nonnullable",{"_index":878,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{}}}],["nonnullable[0",{"_index":128,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["normal",{"_index":1571,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["normalize",{"_index":617,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalize(range",{"_index":682,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["normalized",{"_index":594,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["normalizes",{"_index":536,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["note",{"_index":669,"title":{},"body":{"components/DecoratedTextComponent.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["notice",{"_index":2218,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":1974,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":63,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/functions.html":{}}}],["nulls.ts",{"_index":2389,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":163,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["numberdirective",{"_index":716,"title":{"directives/NumberDirective.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["numbers",{"_index":1266,"title":{},"body":{"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{}}}],["numbersonlymodule",{"_index":1275,"title":{"modules/NumbersOnlyModule.html":{}},"body":{"modules/NumbersOnlyModule.html":{},"modules.html":{},"overview.html":{}}}],["numeric",{"_index":2223,"title":{},"body":{"changelog.html":{}}}],["obj",{"_index":857,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/functions.html":{}}}],["obj[key",{"_index":912,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["object",{"_index":542,"title":{},"body":{"interfaces/DecoratedRange.html":{},"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["object.defineproperties(this",{"_index":907,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["object.entries(obj).reduce>((attrs",{"_index":60,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["object.entries(ops",{"_index":659,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["object.entries(this.root",{"_index":1649,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["object.entries(values",{"_index":1652,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["object.keys(config).length",{"_index":420,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["objects",{"_index":680,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["obs",{"_index":848,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["observable",{"_index":111,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"components/InfoButtonComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["observable).pipe",{"_index":335,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["observableinput",{"_index":284,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"components/TextSearchComponent.html":{}}}],["observedvalueof",{"_index":483,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["obtaining",{"_index":2614,"title":{},"body":{"license.html":{}}}],["occured",{"_index":1522,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["occurencedata",{"_index":1511,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["occurencedata(value",{"_index":1509,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["off/on",{"_index":2196,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":2309,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":2578,"title":{},"body":{"index.html":{}}}],["oldvalue",{"_index":1803,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["onchanges",{"_index":559,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["ondestroy",{"_index":460,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["ondialogbuttonclick",{"_index":993,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["one",{"_index":939,"title":{},"body":{"injectables/GlobalsService.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{},"index.html":{}}}],["oninit",{"_index":1074,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{}}}],["oninputchange",{"_index":1256,"title":{},"body":{"directives/NumberDirective.html":{}}}],["oninputchange(event",{"_index":1267,"title":{},"body":{"directives/NumberDirective.html":{}}}],["onleft",{"_index":1496,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["online",{"_index":2318,"title":{},"body":{"changelog.html":{}}}],["only.directive",{"_index":1280,"title":{},"body":{"modules/NumbersOnlyModule.html":{}}}],["only.directive.ts",{"_index":1253,"title":{},"body":{"directives/NumberDirective.html":{},"coverage.html":{}}}],["only.directive.ts:23",{"_index":1262,"title":{},"body":{"directives/NumberDirective.html":{}}}],["only.directive.ts:9",{"_index":1260,"title":{},"body":{"directives/NumberDirective.html":{}}}],["only.module.ts",{"_index":1279,"title":{},"body":{"modules/NumbersOnlyModule.html":{}}}],["only/numbers",{"_index":1252,"title":{},"body":{"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"coverage.html":{}}}],["onright",{"_index":1497,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["ontological",{"_index":2370,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":2264,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":1959,"title":{},"body":{"changelog.html":{}}}],["ontologyterms",{"_index":142,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["ontologytreemodel",{"_index":98,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["op",{"_index":609,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["op.index",{"_index":649,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["op.removed.includes(item",{"_index":668,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["opacities",{"_index":2202,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":703,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["opacitychange",{"_index":1295,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["opacityreset",{"_index":1296,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["opacityslidercomponent",{"_index":702,"title":{"components/OpacitySliderComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["opacityslidermodule",{"_index":1341,"title":{"modules/OpacitySliderModule.html":{}},"body":{"modules/OpacitySliderModule.html":{},"modules.html":{},"overview.html":{}}}],["openapi",{"_index":2025,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/angular",{"_index":108,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["openapi/js",{"_index":2589,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":2591,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":2590,"title":{},"body":{"index.html":{}}}],["opens",{"_index":1008,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["operation",{"_index":612,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["operations",{"_index":588,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["operator",{"_index":1596,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["operatorfunction",{"_index":1602,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["ops",{"_index":654,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["ops[index",{"_index":656,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["opt",{"_index":1735,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["optimization",{"_index":2142,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":2301,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":2178,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":329,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["optional",{"_index":29,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optioncache",{"_index":792,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["optiondisplay",{"_index":1672,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["optiondisplay(option",{"_index":1684,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["optionid",{"_index":1673,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["optionid(_index",{"_index":1686,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["options",{"_index":30,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.gatoken",{"_index":80,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["optionselected",{"_index":331,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["opts",{"_index":1611,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["ordered",{"_index":586,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["organ",{"_index":706,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["organ(s",{"_index":1558,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["organ.disabled",{"_index":1472,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["organinfo",{"_index":1351,"title":{"interfaces/OrganInfo.html":{}},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organiri",{"_index":212,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["organlist",{"_index":1489,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["organs",{"_index":1365,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["organs/anatomical",{"_index":2204,"title":{},"body":{"changelog.html":{}}}],["organschanged",{"_index":1493,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["organselectorcomponent",{"_index":705,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["organselectormodule",{"_index":1584,"title":{"modules/OrganSelectorModule.html":{}},"body":{"modules/OrganSelectorModule.html":{},"modules.html":{},"overview.html":{}}}],["orthographic",{"_index":2106,"title":{},"body":{"changelog.html":{}}}],["ot2od026671",{"_index":2603,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":910,"title":{},"body":{"injectables/GlobalsService.html":{},"interfaces/OrganInfo.html":{},"license.html":{}}}],["out",{"_index":12,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"license.html":{},"overview.html":{}}}],["outdated",{"_index":930,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["outline",{"_index":1698,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["output",{"_index":279,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["outputs",{"_index":1294,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["ovary",{"_index":1421,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["over",{"_index":2230,"title":{},"body":{"changelog.html":{}}}],["overlapping",{"_index":575,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["overlay",{"_index":1073,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["overlays",{"_index":2361,"title":{},"body":{"changelog.html":{}}}],["overridden",{"_index":861,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["overview",{"_index":2659,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":131,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["package",{"_index":1982,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["padding",{"_index":1037,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["pages",{"_index":2065,"title":{},"body":{"changelog.html":{}}}],["pair",{"_index":1646,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["paired",{"_index":1366,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["pairs",{"_index":1644,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["pancreas",{"_index":1426,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":2167,"title":{},"body":{"changelog.html":{}}}],["panel",{"_index":734,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["panelclass",{"_index":1025,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["panels",{"_index":764,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["param",{"_index":339,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":130,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["parent",{"_index":2058,"title":{},"body":{"changelog.html":{}}}],["parse",{"_index":762,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["parseint(itemlist.nativeelement.style.left",{"_index":1535,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["parseint(newopacity",{"_index":1323,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["parsemarkdown",{"_index":1063,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["parsemarkdown(data",{"_index":767,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["parser",{"_index":2474,"title":{},"body":{"dependencies.html":{}}}],["partial",{"_index":268,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{}}}],["partials",{"_index":678,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["particular",{"_index":2642,"title":{},"body":{"license.html":{}}}],["partly",{"_index":2189,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":2120,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":1529,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["patchconfig",{"_index":796,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["patchconfig(config",{"_index":816,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["path",{"_index":809,"title":{},"body":{"injectables/GlobalConfigState.html":{},"dependencies.html":{}}}],["path.length}:${path.join",{"_index":851,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["pelvis",{"_index":1430,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["performance",{"_index":1986,"title":{},"body":{"changelog.html":{}}}],["performs",{"_index":1879,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["permission",{"_index":2608,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2628,"title":{},"body":{"license.html":{}}}],["person",{"_index":2613,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2629,"title":{},"body":{"license.html":{}}}],["piece",{"_index":619,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["pipe",{"_index":220,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["placeholder",{"_index":314,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["placement",{"_index":2266,"title":{},"body":{"changelog.html":{}}}],["places",{"_index":932,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["player",{"_index":1095,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"dependencies.html":{}}}],["pluck",{"_index":838,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["pluck(...(path",{"_index":849,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["pluck(...keys",{"_index":1621,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["pluck(...path",{"_index":844,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["pluckunique",{"_index":1595,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pluckunique(...props",{"_index":1616,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["pluckunique(k1",{"_index":1612,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["pluckuniqueoptions",{"_index":1592,"title":{"interfaces/PluckUniqueOptions.html":{}},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["plugin",{"_index":2466,"title":{},"body":{"dependencies.html":{}}}],["pointer",{"_index":1042,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["points",{"_index":1230,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["points.join('_",{"_index":1231,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["policy",{"_index":943,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["popup",{"_index":714,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["popup.component",{"_index":1790,"title":{},"body":{"modules/TrackingPopupModule.html":{}}}],["popup.component.html",{"_index":1725,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.scss",{"_index":1724,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts",{"_index":1723,"title":{},"body":{"components/TrackingPopupComponent.html":{},"coverage.html":{}}}],["popup.component.ts:13",{"_index":1732,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:15",{"_index":1743,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:19",{"_index":1731,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:22",{"_index":1741,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:26",{"_index":1733,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:31",{"_index":1738,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:36",{"_index":1736,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.module.ts",{"_index":1787,"title":{},"body":{"modules/TrackingPopupModule.html":{}}}],["popup/tracking",{"_index":1722,"title":{},"body":{"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"coverage.html":{}}}],["portal",{"_index":2037,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["portal's",{"_index":2293,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":2636,"title":{},"body":{"license.html":{}}}],["position",{"_index":1151,"title":{},"body":{"components/InfoDialogComponent.html":{},"modules/MousePositionTrackerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["positive",{"_index":544,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["possible",{"_index":2247,"title":{},"body":{"changelog.html":{}}}],["precedence",{"_index":578,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["preferences",{"_index":2090,"title":{},"body":{"changelog.html":{}}}],["prefix/suffix",{"_index":1719,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["preparation",{"_index":2344,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":2359,"title":{},"body":{"changelog.html":{}}}],["pretty",{"_index":925,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["prevent",{"_index":1955,"title":{},"body":{"changelog.html":{}}}],["prevents",{"_index":1528,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["preview",{"_index":2103,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":2209,"title":{},"body":{"changelog.html":{}}}],["previously",{"_index":2015,"title":{},"body":{"changelog.html":{}}}],["prevopacity",{"_index":1289,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["private",{"_index":178,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["process",{"_index":2329,"title":{},"body":{"changelog.html":{}}}],["processed",{"_index":2284,"title":{},"body":{"changelog.html":{}}}],["processing",{"_index":747,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"changelog.html":{}}}],["produces",{"_index":2559,"title":{},"body":{"miscellaneous/functions.html":{}}}],["production",{"_index":1995,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":1976,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":987,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["projectname",{"_index":51,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["projects",{"_index":2565,"title":{},"body":{"index.html":{}}}],["projects/.../analytics.module.ts",{"_index":2544,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../api",{"_index":2540,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../consent.service.ts",{"_index":2663,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../data",{"_index":2664,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../decorated",{"_index":2546,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../filter",{"_index":2541,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../flatten.ts",{"_index":2542,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../globals.service.ts",{"_index":2665,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../info",{"_index":2670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../inner",{"_index":2545,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../local",{"_index":2671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../mouse",{"_index":2548,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../organ",{"_index":2668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../pluck",{"_index":2547,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../public",{"_index":2672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../store",{"_index":2666,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../text",{"_index":2669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../tracking.state.ts",{"_index":2543,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/ccf",{"_index":16,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":349,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["properly",{"_index":1243,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["properties",{"_index":86,"title":{},"body":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["propertykey",{"_index":814,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["props",{"_index":1610,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["props[props.length",{"_index":1617,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["prostate",{"_index":1433,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["protected",{"_index":373,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["provide",{"_index":72,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/GlobalsService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":344,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":173,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":18,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{}}}],["providertoken",{"_index":1176,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["providing",{"_index":322,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["public",{"_index":1077,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["publish",{"_index":2622,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":1980,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":2643,"title":{},"body":{"license.html":{}}}],["push",{"_index":641,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["pushed",{"_index":2157,"title":{},"body":{"changelog.html":{}}}],["px",{"_index":1504,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["pxratio",{"_index":1888,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["python",{"_index":1978,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["qs",{"_index":2519,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":2297,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":2040,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":1372,"title":{},"body":{"interfaces/OrganInfo.html":{},"dependencies.html":{}}}],["query",{"_index":2368,"title":{},"body":{"changelog.html":{}}}],["quickly",{"_index":2277,"title":{},"body":{"changelog.html":{}}}],["r",{"_index":808,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["radius",{"_index":1035,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["range",{"_index":162,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["range.classes",{"_index":548,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["range.start",{"_index":685,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["range.styles",{"_index":549,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["range.ts",{"_index":522,"title":{},"body":{"interfaces/DecoratedRange.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["range[0",{"_index":167,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["range[1",{"_index":169,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["ranges",{"_index":558,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["rangetominmax",{"_index":161,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rangetominmax(range",{"_index":2549,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rawspatialscenenode",{"_index":107,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["rawvalue",{"_index":1205,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["rawvalue.trim().tolowercase",{"_index":1207,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["rc.1",{"_index":2303,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":2521,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":2450,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":2469,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":2523,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":1710,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["read",{"_index":751,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/XYZTriplet.html":{}}}],["readable",{"_index":2525,"title":{},"body":{"dependencies.html":{}}}],["reading",{"_index":766,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["readmarkdown",{"_index":756,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["readonly",{"_index":179,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["reads",{"_index":1015,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["real",{"_index":2317,"title":{},"body":{"changelog.html":{}}}],["really",{"_index":920,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["recalculate",{"_index":605,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["receives",{"_index":323,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["record",{"_index":58,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/functions.html":{}}}],["recreatebodyui",{"_index":1926,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rectify",{"_index":2021,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":2147,"title":{},"body":{"changelog.html":{}}}],["reduction",{"_index":1946,"title":{},"body":{"changelog.html":{}}}],["reexport",{"_index":618,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"modules/TextSearchModule.html":{}}}],["reference",{"_index":999,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["refernced",{"_index":2057,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":1328,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["regions",{"_index":2362,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":2484,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":2016,"title":{},"body":{"changelog.html":{}}}],["registration",{"_index":2048,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["registrations",{"_index":2136,"title":{},"body":{"changelog.html":{}}}],["regular",{"_index":1555,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["related",{"_index":2182,"title":{},"body":{"changelog.html":{}}}],["relative",{"_index":1152,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["release",{"_index":2010,"title":{},"body":{"changelog.html":{}}}],["releaseproxy",{"_index":407,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["reliability",{"_index":2220,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":2099,"title":{},"body":{"changelog.html":{}}}],["remote",{"_index":408,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["remoteapiendpoint",{"_index":92,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["removable",{"_index":915,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["remove",{"_index":624,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["remove(key",{"_index":892,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["removed",{"_index":625,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["removes",{"_index":894,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["render",{"_index":1898,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rendering",{"_index":1873,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["replaced",{"_index":2561,"title":{},"body":{"miscellaneous/functions.html":{}}}],["replaysubject",{"_index":461,"title":{},"body":{"injectables/ConsentService.html":{}}}],["replaysubject(1",{"_index":459,"title":{},"body":{"injectables/ConsentService.html":{}}}],["repository",{"_index":2563,"title":{},"body":{"index.html":{}}}],["represents",{"_index":621,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["requestmethod",{"_index":129,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/typealiases.html":{}}}],["requestparams",{"_index":216,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["requestparams['token",{"_index":225,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["required",{"_index":1881,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["rescinded",{"_index":463,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/typealiases.html":{}}}],["reset",{"_index":11,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"overview.html":{}}}],["resetopacity",{"_index":1291,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["resets",{"_index":2121,"title":{},"body":{"changelog.html":{}}}],["resetting",{"_index":1306,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["resize",{"_index":1513,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resizesensor",{"_index":1370,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resizesensor(carouselcontainer.nativeelement",{"_index":1516,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resizing",{"_index":1507,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resolve",{"_index":540,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["resolved",{"_index":616,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["resolveindex",{"_index":2404,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["resolveindex(index",{"_index":545,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["resolveindex(range.end",{"_index":547,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["resolveindex(range.start",{"_index":546,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["resolves",{"_index":535,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["respond",{"_index":2118,"title":{},"body":{"changelog.html":{}}}],["responsetype",{"_index":758,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["responsively",{"_index":1580,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["rest",{"_index":502,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["restricting",{"_index":1254,"title":{},"body":{"directives/NumberDirective.html":{}}}],["restriction",{"_index":2618,"title":{},"body":{"license.html":{}}}],["result",{"_index":81,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.concat(range.classes",{"_index":686,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["results",{"_index":83,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":59,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":31,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["reviver",{"_index":215,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["reviver(data",{"_index":228,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["rgb",{"_index":2501,"title":{},"body":{"dependencies.html":{}}}],["rgba(0",{"_index":1770,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["rgba(255",{"_index":1761,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["rhs",{"_index":1604,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["right",{"_index":1135,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["rights",{"_index":2620,"title":{},"body":{"license.html":{}}}],["root",{"_index":174,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["rotates",{"_index":2101,"title":{},"body":{"changelog.html":{}}}],["rotation",{"_index":1832,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotation(value",{"_index":1834,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotationchange",{"_index":1853,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotationx",{"_index":1836,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotationx(value",{"_index":1838,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["round",{"_index":2207,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":2224,"title":{},"body":{"changelog.html":{}}}],["ru/common",{"_index":2436,"title":{},"body":{"dependencies.html":{}}}],["ru/common/typings",{"_index":827,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["rui",{"_index":1004,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["rui_locations.jsonld",{"_index":1969,"title":{},"body":{"changelog.html":{}}}],["running",{"_index":929,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["rxjs",{"_index":113,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/PluckUniqueOptions.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":118,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["s.unsubscribe",{"_index":1931,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["safe",{"_index":673,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["same",{"_index":293,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["sample",{"_index":2373,"title":{},"body":{"changelog.html":{}}}],["samples",{"_index":2149,"title":{},"body":{"changelog.html":{}}}],["saveconsent",{"_index":1184,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["saveconsent(value",{"_index":1188,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["saver",{"_index":2490,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":2334,"title":{},"body":{"changelog.html":{}}}],["scene",{"_index":1828,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["scene(nodes",{"_index":1830,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["scheduled",{"_index":2162,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":2336,"title":{},"body":{"changelog.html":{}}}],["schemes",{"_index":2298,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":2597,"title":{},"body":{"index.html":{}}}],["screen",{"_index":1072,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["scroll(dir",{"_index":1542,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["scrolled",{"_index":1532,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["scrolling",{"_index":1498,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["scrolls",{"_index":1527,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["search",{"_index":299,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["search'},{'name",{"_index":711,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["search.component",{"_index":1718,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["search.component.html",{"_index":305,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["search.component.scss",{"_index":307,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["search.component.ts",{"_index":259,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["search.component.ts:100",{"_index":1675,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:120",{"_index":1683,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:139",{"_index":1685,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:150",{"_index":1687,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:48",{"_index":1682,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:53",{"_index":1678,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:59",{"_index":1679,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:63",{"_index":1695,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:70",{"_index":1677,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:76",{"_index":1676,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:81",{"_index":1681,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:86",{"_index":1680,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:91",{"_index":1691,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:96",{"_index":1692,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.module.ts",{"_index":1708,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["search/text",{"_index":258,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["section",{"_index":2137,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":942,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["see",{"_index":2074,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["segment",{"_index":583,"title":{"interfaces/Segment.html":{}},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{}}}],["segment.text",{"_index":688,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["segments",{"_index":563,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["segments.push(this.makedecoratedsegment",{"_index":647,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["select",{"_index":2079,"title":{},"body":{"changelog.html":{}}}],["selected",{"_index":330,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["selectedorgan",{"_index":1564,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selectedorgans",{"_index":1491,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selecting",{"_index":1474,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["selections",{"_index":1485,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selector",{"_index":303,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["selector'},{'name",{"_index":707,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["selector.component",{"_index":1589,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["selector.component.html",{"_index":1476,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selector.component.scss",{"_index":1477,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selector.component.ts",{"_index":1354,"title":{},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector.module.ts",{"_index":1588,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["selector/organ",{"_index":1353,"title":{},"body":{"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectorgan(organ",{"_index":1559,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selects",{"_index":2352,"title":{},"body":{"changelog.html":{}}}],["selecttoken",{"_index":1170,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["selecttoken(config",{"_index":1173,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["self",{"_index":936,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["sell",{"_index":2626,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":2358,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":746,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["sennet",{"_index":1990,"title":{},"body":{"changelog.html":{}}}],["sensor",{"_index":1508,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["sent",{"_index":765,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["server",{"_index":2339,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":1001,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["set",{"_index":68,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/ConsentService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["set(key",{"_index":895,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["setallowtelemetry",{"_index":1793,"title":{},"body":{"injectables/TrackingState.html":{}}}],["setallowtelemetry(allowtelemetry",{"_index":1794,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["setconfig",{"_index":797,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["setconfig(config",{"_index":819,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["setconsent",{"_index":450,"title":{},"body":{"injectables/ConsentService.html":{}}}],["setconsent(value",{"_index":455,"title":{},"body":{"injectables/ConsentService.html":{}}}],["setinterval",{"_index":1544,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["setleftright(val",{"_index":1583,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["sets",{"_index":897,"title":{},"body":{"injectables/GlobalsService.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{}}}],["settimeout",{"_index":1118,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["setting",{"_index":1285,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["settings",{"_index":945,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["setup",{"_index":1880,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["setupbodyui",{"_index":1899,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["setvalue(val",{"_index":1694,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["setwidth",{"_index":1581,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["sex",{"_index":144,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["sexes",{"_index":1361,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["shadow",{"_index":1766,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["shall",{"_index":2633,"title":{},"body":{"license.html":{}}}],["shared",{"_index":2094,"title":{},"body":{"changelog.html":{}}}],["shared/analytics",{"_index":1746,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["shared/analytics/src/lib/analytics.module.ts",{"_index":17,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["shared/analytics/src/lib/analytics.module.ts:68",{"_index":25,"title":{},"body":{"modules/AnalyticsModule.html":{}}}],["shared/analytics/src/lib/consent.service.ts",{"_index":446,"title":{},"body":{"injectables/ConsentService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["shared/analytics/src/lib/consent.service.ts:10",{"_index":458,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:12",{"_index":452,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:18",{"_index":453,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:22",{"_index":456,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:29",{"_index":457,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/google",{"_index":958,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"coverage.html":{}}}],["shared/analytics/src/lib/local",{"_index":1182,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/rxjs",{"_index":836,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/analytics/mouse",{"_index":1213,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["shared/src/lib/analytics/tracking.state.ts",{"_index":1792,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/analytics/tracking.state.ts:29",{"_index":1796,"title":{},"body":{"injectables/TrackingState.html":{}}}],["shared/src/lib/components/body",{"_index":357,"title":{},"body":{"modules/BodyUiModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["shared/src/lib/components/decorated",{"_index":521,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["shared/src/lib/components/info/info",{"_index":727,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/components/opacity",{"_index":1281,"title":{},"body":{"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"coverage.html":{}}}],["shared/src/lib/components/organ",{"_index":1352,"title":{},"body":{"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/components/store",{"_index":1623,"title":{},"body":{"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["shared/src/lib/components/text",{"_index":257,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/components/tracking",{"_index":1721,"title":{},"body":{"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"coverage.html":{}}}],["shared/src/lib/config/global",{"_index":789,"title":{},"body":{"injectables/GlobalConfigState.html":{},"coverage.html":{}}}],["shared/src/lib/directives/numbers",{"_index":1251,"title":{},"body":{"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"coverage.html":{}}}],["shared/src/lib/services/data",{"_index":88,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/services/globals/globals.service.ts",{"_index":853,"title":{},"body":{"injectables/GlobalsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:109",{"_index":858,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:22",{"_index":901,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:45",{"_index":884,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:58",{"_index":873,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:59",{"_index":877,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:60",{"_index":880,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:61",{"_index":881,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:63",{"_index":882,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:76",{"_index":896,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:77",{"_index":898,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:79",{"_index":899,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:93",{"_index":893,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["sharereplay",{"_index":413,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["sharereplay(1",{"_index":427,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["shifing",{"_index":642,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["shift",{"_index":1503,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["shift(dir",{"_index":1533,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["shortest",{"_index":2496,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":263,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["showbutton",{"_index":1727,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["showbutton(button",{"_index":1734,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["showing",{"_index":2283,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":2292,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":2043,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":1359,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["sides",{"_index":2257,"title":{},"body":{"changelog.html":{}}}],["signal",{"_index":1315,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["significant",{"_index":2123,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":1626,"title":{},"body":{"components/StoreDebugComponent.html":{},"changelog.html":{}}}],["simplechanges",{"_index":603,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["simplifies",{"_index":2131,"title":{},"body":{"changelog.html":{}}}],["simultaneously",{"_index":320,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["single",{"_index":261,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["sites",{"_index":2050,"title":{},"body":{"changelog.html":{}}}],["sizable",{"_index":2219,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":1046,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{}}}],["skin",{"_index":1377,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["slider",{"_index":1284,"title":{},"body":{"components/OpacitySliderComponent.html":{},"dependencies.html":{}}}],["slider'},{'name",{"_index":704,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["slider.component",{"_index":1346,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["slider.component.html",{"_index":1288,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.scss",{"_index":1287,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts",{"_index":1283,"title":{},"body":{"components/OpacitySliderComponent.html":{},"coverage.html":{}}}],["slider.component.ts:17",{"_index":1308,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:22",{"_index":1299,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:27",{"_index":1300,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:32",{"_index":1302,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:37",{"_index":1307,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:42",{"_index":1304,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:44",{"_index":1319,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:46",{"_index":1312,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:54",{"_index":1313,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:63",{"_index":1310,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:71",{"_index":1316,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:82",{"_index":1314,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.module.ts",{"_index":1345,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["slider/opacity",{"_index":1282,"title":{},"body":{"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"coverage.html":{}}}],["slightly",{"_index":2019,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":2144,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":1438,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["smaller",{"_index":1570,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["software",{"_index":2567,"title":{},"body":{"index.html":{},"license.html":{}}}],["solved",{"_index":2214,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":2275,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":1984,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":2140,"title":{},"body":{"changelog.html":{}}}],["sort",{"_index":664,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["sort((a",{"_index":1467,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["sort((i1",{"_index":660,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["source",{"_index":14,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["source.pipe",{"_index":1620,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["source.service.ts",{"_index":508,"title":{},"body":{"injectables/DataSourceService.html":{},"coverage.html":{}}}],["source.service.ts:12",{"_index":512,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:13",{"_index":516,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:14",{"_index":513,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:15",{"_index":515,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:16",{"_index":511,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:17",{"_index":517,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:19",{"_index":520,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:20",{"_index":509,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:21",{"_index":514,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:22",{"_index":510,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:23",{"_index":519,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:24",{"_index":518,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.ts",{"_index":470,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["source.ts:10",{"_index":478,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:11",{"_index":475,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:12",{"_index":477,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:13",{"_index":473,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:14",{"_index":479,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:16",{"_index":482,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:17",{"_index":471,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:18",{"_index":476,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:19",{"_index":472,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:20",{"_index":481,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:21",{"_index":480,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:36",{"_index":780,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:40",{"_index":784,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:44",{"_index":781,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:48",{"_index":783,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:52",{"_index":779,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:56",{"_index":785,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:60",{"_index":788,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:64",{"_index":777,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:68",{"_index":782,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:72",{"_index":778,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:76",{"_index":787,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:80",{"_index":786,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:84",{"_index":776,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:9",{"_index":474,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:91",{"_index":725,"title":{},"body":{"classes/DelegateDataSource.html":{}}}],["source/api",{"_index":89,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["source/ccf",{"_index":367,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["source/data",{"_index":469,"title":{},"body":{"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["source/injector",{"_index":1168,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"coverage.html":{}}}],["sources",{"_index":2084,"title":{},"body":{"changelog.html":{}}}],["space",{"_index":1331,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["sparc",{"_index":2135,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":2449,"title":{},"body":{"dependencies.html":{}}}],["spatialentity",{"_index":99,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["spatialscenenode",{"_index":100,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["spatialscenenodereviver",{"_index":209,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spatialscenenodereviver(nodes",{"_index":2550,"title":{},"body":{"miscellaneous/functions.html":{}}}],["spec",{"_index":2026,"title":{},"body":{"changelog.html":{}}}],["spec.yaml",{"_index":2588,"title":{},"body":{"index.html":{}}}],["specific",{"_index":887,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["specification",{"_index":2587,"title":{},"body":{"index.html":{}}}],["specified",{"_index":523,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["speed",{"_index":1943,"title":{},"body":{"changelog.html":{}}}],["spinning",{"_index":2337,"title":{},"body":{"changelog.html":{}}}],["spleen",{"_index":1444,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["split",{"_index":753,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["split.length",{"_index":770,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["split.split('\\n\\n",{"_index":772,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["splitbyheadertag",{"_index":768,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["sprint",{"_index":2165,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":1360,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":587,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stackop",{"_index":590,"title":{"interfaces/StackOp.html":{}},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{}}}],["stackops",{"_index":634,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stackops.shift",{"_index":645,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stackops[0].index",{"_index":643,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stage",{"_index":1825,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["staging",{"_index":1996,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["staging.herokuapp.com",{"_index":2586,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":2210,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":2261,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":2341,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":2570,"title":{},"body":{"index.html":{}}}],["start",{"_index":528,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["started",{"_index":1933,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["starts",{"_index":638,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["startup",{"_index":2130,"title":{},"body":{"changelog.html":{}}}],["startwith",{"_index":286,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["state",{"_index":833,"title":{},"body":{"injectables/GlobalConfigState.html":{},"components/StoreDebugComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["state[0",{"_index":1660,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["statement",{"_index":672,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["statements",{"_index":2382,"title":{},"body":{"coverage.html":{}}}],["staterepository",{"_index":828,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["states",{"_index":1648,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["states.map(([key",{"_index":1651,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["stateswithdata",{"_index":1653,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["statevalues",{"_index":1650,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["statevalues.filter(([_key",{"_index":1654,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["static",{"_index":20,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/OrganInfo.html":{}}}],["stay",{"_index":2379,"title":{},"body":{"changelog.html":{}}}],["step",{"_index":1505,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["still",{"_index":2152,"title":{},"body":{"changelog.html":{}}}],["stops",{"_index":1547,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["stopscroll",{"_index":1548,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["storage",{"_index":45,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":709,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["store.subscribe(root",{"_index":1656,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["stored",{"_index":1194,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["storedebugcomponent",{"_index":708,"title":{"components/StoreDebugComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["storedebugmodule",{"_index":1665,"title":{"modules/StoreDebugModule.html":{}},"body":{"modules/StoreDebugModule.html":{},"modules.html":{},"overview.html":{}}}],["stories",{"_index":2332,"title":{},"body":{"changelog.html":{}}}],["stream",{"_index":2526,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["streaming",{"_index":2524,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":49,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":730,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["structures",{"_index":2168,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":525,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":306,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["styling",{"_index":269,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["sub",{"_index":1050,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/StoreDebugComponent.html":{}}}],["subclass",{"_index":862,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["subject",{"_index":112,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/InfoButtonService.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["sublicense",{"_index":2624,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1728,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["submit(entry",{"_index":1737,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["subscribe((data",{"_index":759,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["subscription",{"_index":969,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["subscriptions",{"_index":960,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["substantial",{"_index":2635,"title":{},"body":{"license.html":{}}}],["subtitle",{"_index":1138,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["suffix",{"_index":1700,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["suggestion",{"_index":262,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["suggestions",{"_index":292,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":415,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["support",{"_index":1952,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":1357,"title":{},"body":{"interfaces/OrganInfo.html":{},"modules.html":{}}}],["swiper",{"_index":2530,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":1208,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["switched",{"_index":2227,"title":{},"body":{"changelog.html":{}}}],["switchmap",{"_index":115,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["switchmap(config",{"_index":422,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["switchmap(impl",{"_index":504,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["switchmap(this.getoptions",{"_index":336,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["symbol",{"_index":903,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{}}}],["sync",{"_index":2102,"title":{},"body":{"changelog.html":{}}}],["sync.service",{"_index":43,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["sync.service.ts",{"_index":959,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sync.service.ts:10",{"_index":970,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:11",{"_index":964,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:15",{"_index":1190,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:16",{"_index":1185,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:25",{"_index":965,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:29",{"_index":967,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:32",{"_index":1187,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:36",{"_index":1186,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:52",{"_index":1189,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["t",{"_index":133,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":2435,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":2008,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2434,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1109,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["tag.src",{"_index":1111,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["tagging",{"_index":2259,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":755,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["take",{"_index":116,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["take(1",{"_index":221,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["takes",{"_index":577,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["tap",{"_index":117,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["tap(([endpoint",{"_index":222,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["target",{"_index":1843,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["target(value",{"_index":1845,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["technologies",{"_index":148,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{}}}],["technology",{"_index":2200,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":1808,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"changelog.html":{}}}],["temp",{"_index":1325,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["template",{"_index":552,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["templateurl",{"_index":304,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["test",{"_index":922,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["testing",{"_index":870,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["tests",{"_index":885,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["text",{"_index":298,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{}}}],["text'},{'name",{"_index":697,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["text.component",{"_index":724,"title":{},"body":{"modules/DecoratedTextModule.html":{}}}],["text.component.html",{"_index":562,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text.component.scss",{"_index":561,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text.component.ts",{"_index":555,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{}}}],["text.component.ts:124",{"_index":585,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:145",{"_index":610,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:158",{"_index":591,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:173",{"_index":600,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:184",{"_index":597,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:41",{"_index":580,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:46",{"_index":579,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:52",{"_index":573,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:57",{"_index":614,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:64",{"_index":604,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:76",{"_index":581,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.length",{"_index":653,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text.module",{"_index":1717,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["text.module.ts",{"_index":723,"title":{},"body":{"modules/DecoratedTextModule.html":{}}}],["text.slice(lastindex",{"_index":648,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text/decorated",{"_index":289,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["textsearchcomponent",{"_index":310,"title":{"components/TextSearchComponent.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["textsearchmodule",{"_index":1701,"title":{"modules/TextSearchModule.html":{}},"body":{"modules/TextSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["theme",{"_index":1991,"title":{},"body":{"changelog.html":{}}}],["themes",{"_index":1989,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":1987,"title":{},"body":{"changelog.html":{}}}],["thick",{"_index":1462,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["this._bounds",{"_index":1847,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._camera",{"_index":1851,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._interactive",{"_index":1860,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._occurencedata",{"_index":1510,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this._rotation",{"_index":1833,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._rotationx",{"_index":1837,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._scene",{"_index":1829,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._target",{"_index":1844,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._zoom",{"_index":1840,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.api.aggregateresults(params",{"_index":202,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.celltypetermoccurences(params",{"_index":206,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.celltypetreemodel(params",{"_index":195,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.dbstatus(params",{"_index":185,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.ontologytermoccurences(params",{"_index":204,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.ontologytreemodel(params",{"_index":193,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.providernames(params",{"_index":188,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.referenceorgans(params",{"_index":197,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.referenceorganscene(params",{"_index":211,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.scene(params",{"_index":208,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.technologynames(params",{"_index":190,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.tissueblocks(params",{"_index":200,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.bodycanvas",{"_index":1886,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodycanvas.nativeelement",{"_index":1887,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui",{"_index":1862,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.finalize",{"_index":1928,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodeclick$.subscribe((event",{"_index":1919,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodedrag$.subscribe((event",{"_index":1917,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodehoverstart$.subscribe((event",{"_index":1921,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodehoverstop$.subscribe((event",{"_index":1923,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.scenerotation$.subscribe((rotation",{"_index":1915,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.setscene(this.scene",{"_index":1911,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setrotation(value",{"_index":1835,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setrotationx(value",{"_index":1839,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setscene(nodes",{"_index":1831,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.settarget(value",{"_index":1846,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setzoom(value",{"_index":1842,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bounds",{"_index":1912,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.camera",{"_index":1905,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.clearsubscriptions",{"_index":1927,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.config$.pipe",{"_index":843,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.connectdatabase(manager",{"_index":424,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.consent",{"_index":466,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.complete",{"_index":465,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.next(this.consent",{"_index":464,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.next(value",{"_index":467,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentservice.consent",{"_index":1747,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.consentservice.setconsent(entry",{"_index":1754,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.container",{"_index":1748,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.controller.setvalue(val",{"_index":317,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.controller.value",{"_index":315,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.controller.valuechanges",{"_index":334,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.createdatabase(config",{"_index":423,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.createsegments",{"_index":627,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.createstackops(decorations",{"_index":635,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.createworker(config",{"_index":439,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.ctx.patchstate",{"_index":1806,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["this.data.preclose",{"_index":1753,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.database",{"_index":417,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.defaultmaxoptions",{"_index":350,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.dialog.open(infodialogcomponent",{"_index":1023,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.dialogref.close",{"_index":1119,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.dismiss",{"_index":1755,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.displayerrors",{"_index":1525,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.documentationcontents",{"_index":1105,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.dorequest",{"_index":192,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.dorequest(params",{"_index":184,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.el.nativeelement.value",{"_index":1271,"title":{},"body":{"directives/NumberDirective.html":{}}}],["this.findglobalobject",{"_index":906,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["this.forwardcall('getaggregateresults",{"_index":496,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getcelltypetermoccurences",{"_index":498,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getcelltypetreemodel",{"_index":493,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getdatabasestatus",{"_index":489,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getdatasettechnologynames",{"_index":491,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getontologytermoccurences",{"_index":497,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getontologytreemodel",{"_index":492,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getprovidernames",{"_index":490,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getreferenceorgans",{"_index":494,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getreferenceorganscene",{"_index":500,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getscene",{"_index":499,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('gettissueblockresults",{"_index":495,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.getnormalizeddecorations",{"_index":631,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.getpathkey(path",{"_index":845,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.http.get(documentationurl",{"_index":757,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["this.impl",{"_index":416,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.impl$.pipe",{"_index":503,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.infobuttonservice.readmarkdown",{"_index":1032,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.infotitle",{"_index":1030,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.initialized.emit",{"_index":1925,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.interactive",{"_index":1904,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.launchinfodialog(data",{"_index":1022,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.makeundecoratedsegment(text",{"_index":630,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.markdowncontent.next(markdowncontent",{"_index":761,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["this.multiselect",{"_index":1560,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.nodeclick.emit(event",{"_index":1920,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.nodedrag.emit(event",{"_index":1918,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.nodehoverstart.emit(event",{"_index":1922,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.nodehoverstop.emit(event",{"_index":1924,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.onleft",{"_index":1536,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.onright",{"_index":1537,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.opacity",{"_index":1322,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.opacitychange.emit(this.opacity",{"_index":1324,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.opacityreset.emit",{"_index":1327,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.optioncache.get(key",{"_index":847,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.optioncache.has(key",{"_index":846,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.optioncache.set(key",{"_index":850,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.organlist.length",{"_index":1573,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.organschanged.emit(this.selectedorgans",{"_index":1566,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.parsemarkdown(data",{"_index":760,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{}}}],["this.patchstate(config",{"_index":842,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.prevopacity",{"_index":1321,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.recreatebodyui",{"_index":1863,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.root",{"_index":1657,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["this.rotationchange.next(rotation",{"_index":1916,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.saveconsent(consent",{"_index":1204,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.scene?.length",{"_index":1910,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.segments",{"_index":626,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.selectedorgans",{"_index":1561,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.concat([organ",{"_index":1565,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.filter((selectedorgan",{"_index":1563,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.includes(organ",{"_index":1562,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.length",{"_index":1526,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selecttoken(config",{"_index":1179,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["this.sensor",{"_index":1515,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.sensor.detach",{"_index":1519,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.set",{"_index":1517,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.setconsent('not",{"_index":468,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.setleftright(val",{"_index":1540,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.setstate(config",{"_index":841,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.setupbodyui",{"_index":1883,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.shift(dir",{"_index":1545,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.state$.pipe(filternulls",{"_index":840,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.step",{"_index":1538,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.storage",{"_index":1198,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.storage?.getitem?.(this.key",{"_index":1206,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.storage?.setitem?.(this.key",{"_index":1211,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.subscriptions",{"_index":1914,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.subscriptions.add",{"_index":1202,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.subscriptions.add(consentservice.consentchange.subscribe",{"_index":977,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.subscriptions.add(infobuttonservice.markdowncontent.subscribe(data",{"_index":1020,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.subscriptions.add(sub",{"_index":1659,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["this.subscriptions.foreach(s",{"_index":1930,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.subscriptions.unsubscribe",{"_index":979,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"components/StoreDebugComponent.html":{}}}],["this.timeouthandler",{"_index":1543,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.togglegoogleanalytics(consent",{"_index":978,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.token",{"_index":976,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.updatestack(stack",{"_index":644,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.valuechange",{"_index":342,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.videoid",{"_index":1031,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.visibilitytoggle.emit",{"_index":1326,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.visible",{"_index":1320,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.window",{"_index":980,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.window[`ga",{"_index":981,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.zoom",{"_index":1897,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.zoomtobounds(this.bounds",{"_index":1913,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.zoomtobounds(value",{"_index":1849,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["throttletime",{"_index":1218,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["throttletime(1000",{"_index":1235,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["through",{"_index":2276,"title":{},"body":{"changelog.html":{}}}],["throws",{"_index":913,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["thumbnails",{"_index":2177,"title":{},"body":{"changelog.html":{}}}],["thymus",{"_index":1447,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["tied",{"_index":2180,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":2285,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":294,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["timeouthandler",{"_index":1500,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["timeouts",{"_index":1956,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":1947,"title":{},"body":{"changelog.html":{}}}],["tissue",{"_index":1964,"title":{},"body":{"changelog.html":{}}}],["tissueblockresult",{"_index":101,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["tissues",{"_index":2017,"title":{},"body":{"changelog.html":{}}}],["title",{"_index":738,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["tmc",{"_index":2369,"title":{},"body":{"changelog.html":{}}}],["toattributes",{"_index":70,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["toattributes(obj",{"_index":57,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["toggle",{"_index":1317,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["togglegoogleanalytics",{"_index":961,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["togglegoogleanalytics(disabled",{"_index":966,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["togglevisibility",{"_index":1292,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["token",{"_index":136,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":2211,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":1139,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["tort",{"_index":2653,"title":{},"body":{"license.html":{}}}],["tracker.module.ts",{"_index":1214,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tracking",{"_index":713,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["tracking/telemetry",{"_index":2112,"title":{},"body":{"changelog.html":{}}}],["trackingcode",{"_index":975,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["trackingpopupcomponent",{"_index":712,"title":{"components/TrackingPopupComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"coverage.html":{},"overview.html":{}}}],["trackingpopupmodule",{"_index":1783,"title":{"modules/TrackingPopupModule.html":{}},"body":{"modules/TrackingPopupModule.html":{},"modules.html":{},"overview.html":{}}}],["trackingstate",{"_index":1791,"title":{"injectables/TrackingState.html":{}},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{}}}],["trackingstatemodel",{"_index":1797,"title":{"interfaces/TrackingStateModel.html":{}},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{}}}],["trackmouseposition",{"_index":2399,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["trackmouseposition((document",{"_index":1249,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["trackmouseposition(el",{"_index":1219,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["transformmatrix",{"_index":171,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["transition",{"_index":1039,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["transparency",{"_index":2212,"title":{},"body":{"changelog.html":{}}}],["travisci",{"_index":2231,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":554,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["true",{"_index":74,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GlobalsService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":938,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{},"changelog.html":{}}}],["ts",{"_index":120,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"dependencies.html":{}}}],["tslib",{"_index":2533,"title":{},"body":{"dependencies.html":{}}}],["tube",{"_index":1394,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["tuned",{"_index":2380,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":677,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["turned",{"_index":2183,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":2181,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":2081,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":2296,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":28,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2661,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":1242,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["typeerror",{"_index":914,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["typeof",{"_index":904,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/PluckUniqueOptions.html":{}}}],["types",{"_index":1247,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["types/lru",{"_index":2470,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":950,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":2348,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":1556,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["u",{"_index":134,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["uberon",{"_index":1362,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["ufl",{"_index":2176,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":1822,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["ui'},{'name",{"_index":696,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["ui.component",{"_index":365,"title":{},"body":{"modules/BodyUiModule.html":{}}}],["ui.component.html",{"_index":1826,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["ui.component.scss",{"_index":1827,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["ui.component.ts",{"_index":1816,"title":{},"body":{"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["ui.module.ts",{"_index":359,"title":{},"body":{"modules/BodyUiModule.html":{}}}],["ui.netlify.app",{"_index":2573,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":2583,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":2580,"title":{},"body":{"index.html":{}}}],["ui/body",{"_index":358,"title":{},"body":{"modules/BodyUiModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["ui/organ",{"_index":2582,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":2581,"title":{},"body":{"index.html":{}}}],["ul",{"_index":1144,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["undefined",{"_index":76,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/OrganInfo.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1193,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["understand",{"_index":1759,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["unique",{"_index":270,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["unique.ts",{"_index":1594,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["university",{"_index":2599,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":160,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["unless",{"_index":928,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["unnecessary",{"_index":2098,"title":{},"body":{"changelog.html":{}}}],["unsafe",{"_index":1750,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["unselect",{"_index":2146,"title":{},"body":{"changelog.html":{}}}],["unsetconsent",{"_index":451,"title":{},"body":{"injectables/ConsentService.html":{}}}],["unsubscribable",{"_index":411,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["unsubscribe",{"_index":435,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/InfoButtonComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["until",{"_index":2185,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":1690,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["up",{"_index":1634,"title":{},"body":{"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["update",{"_index":2091,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":1303,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["updates",{"_index":1264,"title":{},"body":{"directives/NumberDirective.html":{},"changelog.html":{}}}],["updatestack",{"_index":570,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["updatestack(stack",{"_index":608,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["upgraded",{"_index":2281,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":2353,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":2117,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":2208,"title":{},"body":{"changelog.html":{}}}],["ureter",{"_index":1450,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["urinary",{"_index":1455,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":1356,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["usage",{"_index":1757,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["use",{"_index":2078,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["used",{"_index":543,"title":{},"body":{"interfaces/DecoratedRange.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["usefactory",{"_index":75,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["useful",{"_index":868,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["user",{"_index":1937,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["user/os",{"_index":2089,"title":{},"body":{"changelog.html":{}}}],["users",{"_index":2364,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":2105,"title":{},"body":{"changelog.html":{}}}],["using",{"_index":412,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["uterus",{"_index":1459,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["utilities",{"_index":2095,"title":{},"body":{"changelog.html":{}}}],["utility",{"_index":158,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["uuid",{"_index":2534,"title":{},"body":{"dependencies.html":{}}}],["v1.1",{"_index":2009,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":2195,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":2012,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":2002,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":1960,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":1534,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{}}}],["valid",{"_index":593,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["value",{"_index":62,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/ConsentService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value(val",{"_index":316,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["value.tolowercase",{"_index":1802,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["valuechange",{"_index":328,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["values",{"_index":69,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/DecoratedTextComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/functions.html":{}}}],["values.length",{"_index":1655,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["var",{"_index":694,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["variable",{"_index":1147,"title":{},"body":{"components/InfoDialogComponent.html":{},"coverage.html":{}}}],["variables",{"_index":2667,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vasculature",{"_index":1464,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":2028,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["vertical",{"_index":1048,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["very",{"_index":2272,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":1954,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":1150,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["videoid",{"_index":995,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["view",{"_index":2104,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":1369,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["viewchild('bodycanvas",{"_index":1877,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["viewchild('carouselcontainer",{"_index":1478,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewchild('itemcontainer",{"_index":1482,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewchild('itemlist",{"_index":1480,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewed",{"_index":1475,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewer",{"_index":2170,"title":{},"body":{"changelog.html":{}}}],["views",{"_index":2107,"title":{},"body":{"changelog.html":{}}}],["visibility",{"_index":1318,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["visibilitytoggle",{"_index":1297,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["visible",{"_index":1293,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["visual",{"_index":2376,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":2138,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":2282,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":454,"title":{},"body":{"injectables/ConsentService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["vs",{"_index":2077,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":2375,"title":{},"body":{"changelog.html":{}}}],["warming",{"_index":1953,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":2306,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":2639,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2637,"title":{},"body":{"license.html":{}}}],["web",{"_index":937,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["webcomponent",{"_index":2076,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":2472,"title":{},"body":{"dependencies.html":{}}}],["webpages",{"_index":2034,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":2568,"title":{},"body":{"index.html":{}}}],["week",{"_index":2381,"title":{},"body":{"changelog.html":{}}}],["weight",{"_index":1142,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["well",{"_index":1608,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["whether",{"_index":886,"title":{},"body":{"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"license.html":{}}}],["whole",{"_index":2378,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":1028,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["window",{"_index":934,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/XYZTriplet.html":{}}}],["window.devicepixelratio",{"_index":1889,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["within",{"_index":2174,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":601,"title":{},"body":{"components/DecoratedTextComponent.html":{},"changelog.html":{},"license.html":{}}}],["worker",{"_index":438,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/GlobalsService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["worker.terminate",{"_index":442,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["workerccfdatabasedatasourceservice",{"_index":436,"title":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["workflows",{"_index":2233,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":2020,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":2251,"title":{},"body":{"changelog.html":{}}}],["wrap",{"_index":409,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["wrap(worker",{"_index":440,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["wrapper",{"_index":1033,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["writable",{"_index":909,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["x",{"_index":1817,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["xyztriplet",{"_index":1815,"title":{"interfaces/XYZTriplet.html":{}},"body":{"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["y",{"_index":1818,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["yes",{"_index":240,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["youtube",{"_index":1094,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["youtubeplayermodule",{"_index":1164,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["z",{"_index":1777,"title":{},"body":{"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["zero",{"_index":639,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["zone.js",{"_index":2536,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":10,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"interfaces/XYZTriplet.html":{},"overview.html":{}}}],["zoom(value",{"_index":1841,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["zoomtobounds(bounds",{"_index":1884,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AnalyticsModule.html":{"url":"modules/AnalyticsModule.html","title":"module - AnalyticsModule","body":"\n                   \n\n\n\n\n    Modules\n    AnalyticsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AnalyticsModule\n\n\n\ncluster_AnalyticsModule_providers\n\n\n\n\nConsentService\n\nConsentService\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAnalyticsModule -->\n\nConsentService->AnalyticsModule\n\n\n\n\n\nGoogleAnalyticsSyncService\n\nGoogleAnalyticsSyncService\n\nAnalyticsModule -->\n\nGoogleAnalyticsSyncService->AnalyticsModule\n\n\n\n\n\nLocalStorageSyncService\n\nLocalStorageSyncService\n\nAnalyticsModule -->\n\nLocalStorageSyncService->AnalyticsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/analytics.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConsentService\n                        \n                        \n                            GoogleAnalyticsSyncService\n                        \n                        \n                            LocalStorageSyncService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: AnalyticsOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/analytics.module.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AnalyticsOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { IGoogleAnalyticsCommand, NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\nimport { ConsentService } from './consent.service';\nimport { GoogleAnalyticsSyncService } from './google-analytics-sync.service';\nimport { LocalStorageSyncService } from './local-storage-sync.service';\n\n\nexport interface AnalyticsOptions {\n  gaToken: string;\n\n  appName?: string;\n  projectName?: string;\n\n  developmentMode?: boolean;\n}\n\n\nconst EAGERLY_LOADED_SERVICES = [\n  ConsentService,\n  GoogleAnalyticsSyncService,\n  LocalStorageSyncService,\n];\n\n\nfunction toAttributes(obj: Record): Record {\n  return Object.entries(obj).reduce>((attrs, [key, value]) => {\n    if (value != null) {\n      attrs[key] = `${value}`;\n    }\n\n    return attrs;\n  }, {});\n}\n\nfunction initCommands(options: AnalyticsOptions): IGoogleAnalyticsCommand[] {\n  const { appName, projectName, developmentMode } = options;\n\n  return [\n    {\n      command: 'set',\n      values: [toAttributes({\n        appName,\n        projectName,\n        developmentMode\n      })]\n    }\n  ];\n}\n\n\n@NgModule({\n  imports: [\n    NgxGoogleAnalyticsModule\n  ],\n  providers: [\n    ...EAGERLY_LOADED_SERVICES,\n\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: () => () => undefined,\n      deps: EAGERLY_LOADED_SERVICES\n    }\n  ]\n})\nexport class AnalyticsModule {\n  static forRoot(options: AnalyticsOptions): ModuleWithProviders {\n    const { providers = [] } = NgxGoogleAnalyticsModule.forRoot(\n      options.gaToken,\n      initCommands(options)\n    );\n\n    return { ngModule: AnalyticsModule, providers };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnalyticsOptions.html":{"url":"interfaces/AnalyticsOptions.html","title":"interface - AnalyticsOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnalyticsOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/analytics.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            appName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            developmentMode\n                                        \n                                \n                                \n                                        \n                                            gaToken\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            projectName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        developmentMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        developmentMode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gaToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gaToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { IGoogleAnalyticsCommand, NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\nimport { ConsentService } from './consent.service';\nimport { GoogleAnalyticsSyncService } from './google-analytics-sync.service';\nimport { LocalStorageSyncService } from './local-storage-sync.service';\n\n\nexport interface AnalyticsOptions {\n  gaToken: string;\n\n  appName?: string;\n  projectName?: string;\n\n  developmentMode?: boolean;\n}\n\n\nconst EAGERLY_LOADED_SERVICES = [\n  ConsentService,\n  GoogleAnalyticsSyncService,\n  LocalStorageSyncService,\n];\n\n\nfunction toAttributes(obj: Record): Record {\n  return Object.entries(obj).reduce>((attrs, [key, value]) => {\n    if (value != null) {\n      attrs[key] = `${value}`;\n    }\n\n    return attrs;\n  }, {});\n}\n\nfunction initCommands(options: AnalyticsOptions): IGoogleAnalyticsCommand[] {\n  const { appName, projectName, developmentMode } = options;\n\n  return [\n    {\n      command: 'set',\n      values: [toAttributes({\n        appName,\n        projectName,\n        developmentMode\n      })]\n    }\n  ];\n}\n\n\n@NgModule({\n  imports: [\n    NgxGoogleAnalyticsModule\n  ],\n  providers: [\n    ...EAGERLY_LOADED_SERVICES,\n\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: () => () => undefined,\n      deps: EAGERLY_LOADED_SERVICES\n    }\n  ]\n})\nexport class AnalyticsModule {\n  static forRoot(options: AnalyticsOptions): ModuleWithProviders {\n    const { providers = [] } = NgxGoogleAnalyticsModule.forRoot(\n      options.gaToken,\n      initCommands(options)\n    );\n\n    return { ngModule: AnalyticsModule, providers };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiEndpointDataSourceOptions.html":{"url":"interfaces/ApiEndpointDataSourceOptions.html","title":"interface - ApiEndpointDataSourceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiEndpointDataSourceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hubmapToken\n                                        \n                                \n                                \n                                        \n                                            remoteApiEndpoint\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hubmapToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        remoteApiEndpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        remoteApiEndpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return combineLatest([\n      globalConfig.getOption('remoteApiEndpoint'),\n      globalConfig.getOption('hubmapToken')\n    ]).pipe(\n      take(1),\n      tap(([endpoint, token]) => {\n        api.configuration.basePath = endpoint;\n        if (token) {\n          requestParams['token'] = token;\n        }\n      }),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiEndpointDataSourceService.html":{"url":"injectables/ApiEndpointDataSourceService.html","title":"injectable - ApiEndpointDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiEndpointDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                doRequest\n                            \n                            \n                                    Private\n                                doRequest\n                            \n                            \n                                    Private\n                                doRequest\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: DefaultService, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:94\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                    DefaultService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        doRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    doRequest(method: RequestMethod, filter?: Filter | undefined, params?: P)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:188\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                RequestMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter | undefined\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            P\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        doRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    doRequest(method: RequestMethod, filter: Filter | undefined, params: P | undefined, reviver: DataReviver)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:193\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        P\n                        U\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                RequestMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            P | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviver\n                                    \n                                                DataReviver\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        doRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    doRequest(method: RequestMethod, filter: Filter | undefined, params?: P, reviver?: DataReviver)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:199\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                RequestMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            P\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    reviver\n                                    \n                                                DataReviver\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:165\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:157\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:181\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:173\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:141\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return combineLatest([\n      globalConfig.getOption('remoteApiEndpoint'),\n      globalConfig.getOption('hubmapToken')\n    ]).pipe(\n      take(1),\n      tap(([endpoint, token]) => {\n        api.configuration.basePath = endpoint;\n        if (token) {\n          requestParams['token'] = token;\n        }\n      }),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoCompleteOption.html":{"url":"interfaces/AutoCompleteOption.html","title":"interface - AutoCompleteOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AutoCompleteOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n        \n\n\n            \n                Description\n            \n            \n                A single suggestion to show in autocomplete\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            decorations\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        decorations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decorations:         Partial[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional styling of the label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    A unique id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The displayed label\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Inject, InjectionToken, Input, Output,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { bind as Bind } from 'bind-decorator';\nimport { from, Observable, ObservableInput } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, switchMap, take } from 'rxjs/operators';\n\nimport { DecoratedRange } from '../decorated-text/decorated-range';\n\n\n/** A single suggestion to show in autocomplete  */\nexport interface AutoCompleteOption {\n  /** A unique id */\n  id: unknown;\n  /** The displayed label */\n  label: string;\n  /** Optional styling of the label */\n  decorations?: Partial[];\n}\n\n/**\n * Token to provide a default for the maximum number of\n * autocomplete suggestions to show at the same time.\n */\nexport const DEFAULT_MAX_OPTIONS = new InjectionToken(\n  'Maximum number of autocomplete options displayed',\n  {\n    providedIn: 'root',\n    factory(): number {\n      return 10;\n    }\n  }\n);\n\n\n/**\n * A text search bar with optional autocompletion functionality.\n */\n@Component({\n  selector: 'ccf-text-search',\n  templateUrl: './text-search.component.html',\n  styleUrls: ['./text-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TextSearchComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-text-search';\n\n  /**\n   * Placeholder text for the search bar\n   */\n  @Input() placeholder = 'Search...';\n\n  /**\n   * The text to show on the search bar\n   */\n  @Input()\n  get value(): string {\n    return this.controller.value as string;\n  }\n\n  set value(val: string) {\n    this.controller.setValue(val, { emitEvent: false });\n  }\n\n  /**\n   * Maximum number of autocomplete suggestions to show simultaneously\n   */\n  @Input() maxOptions?: number;\n\n  /**\n   * Function providing the autocomplete suggestions.\n   * Receives the latest search bar text and the maximum of suggestions to provide.\n   */\n  @Input() autoCompleter?: (search: string, max: number) => ObservableInput;\n\n  /**\n   * Emits when the search bar text changes\n   */\n  @Output() readonly valueChange: Observable;\n\n  /**\n   * Emits when an autocomplete option has been selected\n   */\n  @Output() readonly optionSelected = new EventEmitter();\n\n  /**\n   * Form controller for search bar\n   */\n  readonly controller = new FormControl();\n\n  /**\n   * Emits the latest autocomplete suggestions\n   */\n  readonly options = (this.controller.valueChanges as Observable).pipe(\n    startWith(''),\n    distinctUntilChanged(),\n    switchMap(this.getOptions)\n  );\n\n  /**\n   * Creates an instance of text search component.\n   *\n   * @param defaultMaxOptions The default value for `maxOptions`\n   */\n  constructor(\n    @Inject(DEFAULT_MAX_OPTIONS) private readonly defaultMaxOptions: number\n  ) {\n    this.valueChange = this.controller.valueChanges;\n  }\n\n  /**\n   * Fetches the latest autocomplete suggestions for the provided search text.\n   *\n   * @param search The search text to find suggestions for\n   * @returns The found suggestions\n   */\n  @Bind\n  private async getOptions(search: string): Promise {\n    const { autoCompleter, maxOptions = this.defaultMaxOptions } = this;\n    if (!autoCompleter || maxOptions  array.length \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BodyUiModule.html":{"url":"modules/BodyUiModule.html","title":"module - BodyUiModule","body":"\n                   \n\n\n\n\n    Modules\n    BodyUiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BodyUiModule\n\n\n\ncluster_BodyUiModule_exports\n\n\n\ncluster_BodyUiModule_declarations\n\n\n\n\nBodyUiComponent\n\nBodyUiComponent\n\n\n\nBodyUiModule\n\nBodyUiModule\n\nBodyUiModule -->\n\nBodyUiComponent->BodyUiModule\n\n\n\n\n\nBodyUiComponent \n\nBodyUiComponent \n\nBodyUiComponent  -->\n\nBodyUiModule->BodyUiComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/body-ui/body-ui.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BodyUiComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BodyUiComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BodyUiComponent } from './body-ui.component';\n\n@NgModule({\n  declarations: [BodyUiComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [BodyUiComponent]\n})\nexport class BodyUiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CCFDatabaseDataSourceBaseService.html":{"url":"injectables/CCFDatabaseDataSourceBaseService.html","title":"injectable - CCFDatabaseDataSourceBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CCFDatabaseDataSourceBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DelegateDataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                database$\n                            \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                connectDatabase\n                            \n                            \n                                    Protected\n                                    Abstract\n                                createDatabase\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        connectDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectDatabase(manager: CCFDatabaseManager, config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    manager\n                                    \n                                                CCFDatabaseManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        createDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDatabase(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CCFDatabaseManager\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        database$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CCFDatabaseDataSourceService.html":{"url":"injectables/CCFDatabaseDataSourceService.html","title":"injectable - CCFDatabaseDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CCFDatabaseDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CCFDatabaseDataSourceBaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                database$\n                            \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createDatabase\n                            \n                            \n                                    Private\n                                    Async\n                                connectDatabase\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDatabase(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CCFDatabaseManager\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        connectDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectDatabase(manager: CCFDatabaseManager, config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    manager\n                                    \n                                                CCFDatabaseManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        database$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         CCFDatabaseDataSourceBaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         CCFDatabaseDataSourceBaseService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CCFDatabaseManager.html":{"url":"interfaces/CCFDatabaseManager.html","title":"interface - CCFDatabaseManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CCFDatabaseManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Unsubscribable\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            database\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        database:     CCFDatabase | Remote\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CCFDatabase | Remote\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsentService.html":{"url":"injectables/ConsentService.html","title":"injectable - ConsentService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/consent.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                consent\n                            \n                            \n                                    Readonly\n                                consentChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                setConsent\n                            \n                            \n                                unsetConsent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConsent\n                        \n                    \n                \n            \n            \n                \nsetConsent(value: Consent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsetConsent\n                        \n                    \n                \n            \n            \n                \nunsetConsent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        consent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Consent\n\n                    \n                \n                \n                    \n                        Default value : 'not-set'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        consentChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n\nexport type Consent = 'not-set' | 'given' | 'rescinded';\n\n\n@Injectable()\nexport class ConsentService implements OnDestroy {\n  consent: Consent = 'not-set';\n\n  readonly consentChange = new ReplaySubject(1);\n\n  constructor() {\n    this.consentChange.next(this.consent);\n  }\n\n  ngOnDestroy(): void {\n    this.consentChange.complete();\n  }\n\n  setConsent(value: Consent): void {\n    if (this.consent !== value) {\n      this.consent = value;\n      this.consentChange.next(value);\n    }\n  }\n\n  unsetConsent(): void {\n    this.setConsent('not-set');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSource.html":{"url":"interfaces/DataSource.html","title":"interface - DataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getAggregateResults\n                                    \n                                \n                                \n                                    \n                                        getCellTypeTermOccurences\n                                    \n                                \n                                \n                                    \n                                        getCellTypeTreeModel\n                                    \n                                \n                                \n                                    \n                                        getDatabaseStatus\n                                    \n                                \n                                \n                                    \n                                        getDatasetTechnologyNames\n                                    \n                                \n                                \n                                    \n                                        getOntologyTermOccurences\n                                    \n                                \n                                \n                                    \n                                        getOntologyTreeModel\n                                    \n                                \n                                \n                                    \n                                        getProviderNames\n                                    \n                                \n                                \n                                    \n                                        getReferenceOrgans\n                                    \n                                \n                                \n                                    \n                                        getReferenceOrganScene\n                                    \n                                \n                                \n                                    \n                                        getScene\n                                    \n                                \n                                \n                                    \n                                        getTissueBlockResults\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult\n} from 'ccf-database';\nimport { Observable, ObservableInput, ObservedValueOf } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n\nexport interface DataSource {\n  getDatabaseStatus(): Observable;\n  getProviderNames(): Observable;\n  getDatasetTechnologyNames(): Observable;\n  getOntologyTreeModel(): Observable;\n  getCellTypeTreeModel(): Observable;\n  getReferenceOrgans(): Observable;\n\n  getTissueBlockResults(filter?: Filter): Observable;\n  getAggregateResults(filter?: Filter): Observable;\n  getOntologyTermOccurences(filter?: Filter): Observable>;\n  getCellTypeTermOccurences(filter?: Filter): Observable>;\n  getScene(filter?: Filter): Observable;\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\nexport type DataSourceLike = {\n  [K in keyof DataSource]: DataSourceLikeMethod;\n};\n\nexport type DataSourceMethod = DataSource[K];\nexport type DataSourceLikeMethod =\n  (...args: Parameters>) => ObservableInput>;\nexport type DataSourceDataType =\n  ObservedValueOf>>;\n\n\nexport abstract class ForwardingDataSource implements DataSource {\n  getDatabaseStatus(): Observable {\n    return this.forwardCall('getDatabaseStatus');\n  }\n\n  getProviderNames(): Observable {\n    return this.forwardCall('getProviderNames');\n  }\n\n  getDatasetTechnologyNames(): Observable {\n    return this.forwardCall('getDatasetTechnologyNames');\n  }\n\n  getOntologyTreeModel(): Observable {\n    return this.forwardCall('getOntologyTreeModel');\n  }\n\n  getCellTypeTreeModel(): Observable {\n    return this.forwardCall('getCellTypeTreeModel');\n  }\n\n  getReferenceOrgans(): Observable {\n    return this.forwardCall('getReferenceOrgans');\n  }\n\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.forwardCall('getTissueBlockResults', filter);\n  }\n\n  getAggregateResults(filter?: Filter): Observable {\n    return this.forwardCall('getAggregateResults', filter);\n  }\n\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getOntologyTermOccurences', filter);\n  }\n\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getCellTypeTermOccurences', filter);\n  }\n\n  getScene(filter?: Filter): Observable {\n    return this.forwardCall('getScene', filter);\n  }\n\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.forwardCall('getReferenceOrganScene', organIri, filter);\n  }\n\n  protected abstract forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable>;\n}\n\n\nexport abstract class DelegateDataSource extends ForwardingDataSource {\n  abstract readonly impl$: Observable;\n\n  protected forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable> {\n    type AnyFunction = (...rest: unknown[]) => ObservableInput;\n\n    return this.impl$.pipe(\n      switchMap(impl => (impl[method] as AnyFunction)(...args))\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataSourceService.html":{"url":"injectables/DataSourceService.html","title":"injectable - DataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getAggregateResults\n                            \n                            \n                                    Abstract\n                                getCellTypeTermOccurences\n                            \n                            \n                                    Abstract\n                                getCellTypeTreeModel\n                            \n                            \n                                    Abstract\n                                getDatabaseStatus\n                            \n                            \n                                    Abstract\n                                getDatasetTechnologyNames\n                            \n                            \n                                    Abstract\n                                getOntologyTermOccurences\n                            \n                            \n                                    Abstract\n                                getOntologyTreeModel\n                            \n                            \n                                    Abstract\n                                getProviderNames\n                            \n                            \n                                    Abstract\n                                getReferenceOrgans\n                            \n                            \n                                    Abstract\n                                getReferenceOrganScene\n                            \n                            \n                                    Abstract\n                                getScene\n                            \n                            \n                                    Abstract\n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProviderNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getScene\n                        \n                    \n                \n            \n            \n                \n                    \n                    getScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { Observable } from 'rxjs';\n\nimport { DataSource } from './data-source';\n\n\n@Injectable()\nexport abstract class DataSourceService implements DataSource {\n  abstract getDatabaseStatus(): Observable;\n  abstract getProviderNames(): Observable;\n  abstract getDatasetTechnologyNames(): Observable;\n  abstract getOntologyTreeModel(): Observable;\n  abstract getCellTypeTreeModel(): Observable;\n  abstract getReferenceOrgans(): Observable;\n\n  abstract getTissueBlockResults(filter?: Filter): Observable;\n  abstract getAggregateResults(filter?: Filter): Observable;\n  abstract getOntologyTermOccurences(filter?: Filter): Observable>;\n  abstract getCellTypeTermOccurences(filter?: Filter): Observable>;\n  abstract getScene(filter?: Filter): Observable;\n  abstract getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DecoratedRange.html":{"url":"interfaces/DecoratedRange.html","title":"interface - DecoratedRange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DecoratedRange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n        \n\n\n            \n                Description\n            \n            \n                A range which should have the specified classes and styles applied\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            end\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                                \n                                        \n                                            styles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Classes to add\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    End index of range (exclusive). Negative indicies are allowed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start index of range (inclusive). Negative indicies are allowed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        styles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        styles:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Styles to set\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DecoratedRange {\n  /** Start index of range (inclusive). Negative indicies are allowed. */\n  start: number;\n  /** End index of range (exclusive). Negative indicies are allowed. */\n  end: number;\n  /** Classes to add */\n  classes: string[];\n  /** Styles to set */\n  styles: Record;\n}\n\n/**\n * Resolves and normalizes an index for indexing into an array of length `length`.\n *\n * @param index The index value to resolve. May be negative indicating an index from end.\n * @param length The length of the object on which this index will be used.\n * @returns A positive index in range [0, length]\n */\nfunction resolveIndex(index: number, length: number): number {\n  if (index >= 0 && index = length) {\n    return length;\n  } else if (index + length , length: number): DecoratedRange {\n  const start = resolveIndex(range.start ?? 0, length);\n  const end = resolveIndex(range.end ?? length, length);\n  const classes = range.classes ?? [];\n  const styles = range.styles ?? {};\n  return { start, end, classes, styles };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DecoratedTextComponent.html":{"url":"components/DecoratedTextComponent.html","title":"component - DecoratedTextComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DecoratedTextComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n\n\n\n    \n        Description\n    \n    \n        Class to display text with additional styling on ranges of the text.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-decorated-text\n            \n\n            \n                styleUrls\n                ./decorated-text.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./decorated-text.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                segments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createSegments\n                            \n                            \n                                    Private\n                                createStackOps\n                            \n                            \n                                    Private\n                                getNormalizedDecorations\n                            \n                            \n                                    Private\n                                makeDecoratedSegment\n                            \n                            \n                                    Private\n                                makeUndecoratedSegment\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Private\n                                updateStack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                decorations\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        decorations\n                    \n                \n                \n                    \n                        Type :         Partial[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:52\n                            \n                        \n                \n                    \n                        Classes and styles to apply to ranges of the text.\nFor overlapping ranges later values takes precedence.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:46\n                            \n                        \n                \n                    \n                        Text to display\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-decorated-text\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-decorated-text'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:41\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createSegments\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSegments()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:76\n                \n            \n\n\n            \n                \n                    Creates an array of decorated text segments based on\nthe latest text and decorations.\n\n\n                    \n                    \n                    \n                        Returns :         Segment[]\n\n                    \n                    \n                        The new segments\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createStackOps\n                        \n                    \n                \n            \n            \n                \n                    \n                    createStackOps(ranges: DecoratedRange[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:124\n                \n            \n\n\n            \n                \n                    Creates an ordered array of stack operations to apply when building segments.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ranges\n                                    \n                                                DecoratedRange[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The decorated ranges to apply\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         StackOp[]\n\n                    \n                    \n                        The array of operations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getNormalizedDecorations\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNormalizedDecorations()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:158\n                \n            \n\n\n            \n                \n                    Normalizes and filters valid decorated ranges.\n\n\n                    \n                    \n                    \n                        Returns :         DecoratedRange[]\n\n                    \n                    \n                        The normalized ranges with properties filled\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeDecoratedSegment\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeDecoratedSegment(text: string, decorations: DecoratedRange[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:184\n                \n            \n\n\n            \n                \n                    Creates a segment with decoration\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text for the segment\n\n                                    \n                                \n                                \n                                    decorations\n                                    \n                                                DecoratedRange[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Decorations for this segment\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Segment\n\n                    \n                    \n                        A decorated segment\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeUndecoratedSegment\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeUndecoratedSegment(text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:173\n                \n            \n\n\n            \n                \n                    Creates a segment without any decoration\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text for the segment\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Segment\n\n                    \n                    \n                        A segment without any decoration\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:64\n                \n            \n\n\n            \n                \n                    Apply changes and recalculate cached values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Instance properties that have changed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateStack\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStack(stack: DecoratedRange[], op: StackOp)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:145\n                \n            \n\n\n            \n                \n                    Applies the stack changes specified by the stack operation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    stack\n                                    \n                                                DecoratedRange[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current stack\n\n                                    \n                                \n                                \n                                    op\n                                    \n                                                StackOp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The operation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DecoratedRange[]\n\n                    \n                    \n                        The new stack\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-decorated-text'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:41\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        segments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Segment[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:57\n                        \n                    \n\n            \n                \n                    Computed segments of text with decorations resolved.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { DecoratedRange, normalize } from './decorated-range';\n\n\n// Reexport DecoratedRange\nexport { DecoratedRange };\n\n/** A segment of text with additional classes and styles */\ninterface Segment {\n  /** The piece of text to display */\n  text: string;\n  /** Classes to add to the text container */\n  classes: string[];\n  /** Styles to set on the text container */\n  styles: Record;\n}\n\n/** Represents an operation to apply to the stack when building segments */\ninterface StackOp {\n  /** Text index at which the changes takes effect */\n  index: number;\n  /** Decorations to add */\n  added: DecoratedRange[];\n  /** Decorations to remove */\n  removed: DecoratedRange[];\n}\n\n\n/**\n * Class to display text with additional styling on ranges of the text.\n */\n@Component({\n  selector: 'ccf-decorated-text',\n  templateUrl: './decorated-text.component.html',\n  styleUrls: ['./decorated-text.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DecoratedTextComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-decorated-text';\n\n  /**\n   * Text to display\n   */\n  @Input() text: string;\n\n  /**\n   * Classes and styles to apply to ranges of the text.\n   * For overlapping ranges later values takes precedence.\n   */\n  @Input() decorations?: Partial[];\n\n  /**\n   * Computed segments of text with decorations resolved.\n   */\n  segments: Segment[] = [];\n\n  /**\n   * Apply changes and recalculate cached values.\n   *\n   * @param changes Instance properties that have changed\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('text' in changes || 'decorations' in changes) {\n      this.segments = this.createSegments();\n    }\n  }\n\n  /**\n   * Creates an array of decorated text segments based on\n   * the latest text and decorations.\n   *\n   * @returns The new segments\n   */\n  private createSegments(): Segment[] {\n    const { text } = this;\n    if (!text) { // No styling can be applied to empty text fields\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const decorations = this.getNormalizedDecorations();\n    if (decorations.length === 0) { // No styling available\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const stackOps = this.createStackOps(decorations);\n    const segments: Segment[] = [];\n    let stack: DecoratedRange[] = [];\n    let lastIndex = 0;\n\n    // If the first op starts at index zero apply stack changes\n    // but don't push a segment by shifing out the first op\n    if (stackOps[0].index === 0) {\n      stack = this.updateStack(stack, stackOps.shift() as StackOp);\n    }\n\n    // Build segments based on the stack operations\n    for (const op of stackOps) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex, op.index), stack\n      ));\n\n      lastIndex = op.index;\n      stack = this.updateStack(stack, op);\n    }\n\n    // Push the last segment if not already done\n    if (lastIndex !== text.length) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex), stack\n      ));\n    }\n\n    return segments;\n  }\n\n  /**\n   * Creates an ordered array of stack operations to apply when building segments.\n   *\n   * @param ranges The decorated ranges to apply\n   * @returns The array of operations\n   */\n  private createStackOps(ranges: DecoratedRange[]): StackOp[] {\n    const ops: Record = {};\n    const getOp = (index: number) => (ops[index] ??= { index, added: [], removed: [] });\n\n    for (const range of ranges) {\n      getOp(range.start).added.push(range);\n      getOp(range.end).removed.push(range);\n    }\n\n    return Object.entries(ops)\n      .sort((i1, i2) => +i1[0] - +i2[0]) // Sort by index\n      .map(entry => entry[1]);\n  }\n\n  /**\n   * Applies the stack changes specified by the stack operation.\n   *\n   * @param stack The current stack\n   * @param op The operation\n   * @returns The new stack\n   */\n  private updateStack(stack: DecoratedRange[], op: StackOp): DecoratedRange[] {\n    return stack\n      .filter(item => !op.removed.includes(item))\n      // Note - A new array is created by the above filter statement\n      // so it is safe to modify it with concat\n      .concat(op.added);\n  }\n\n  /**\n   * Normalizes and filters valid decorated ranges.\n   *\n   * @returns The normalized ranges with properties filled\n   */\n  private getNormalizedDecorations(): DecoratedRange[] {\n    const { decorations = [], text: { length } } = this;\n    return decorations\n      // Turn partials into full objects\n      .map(range => normalize(range, length))\n      // Remove empty and out of bounds ranges\n      .filter(range => range.start (\n      (result, range) => result.concat(range.classes),\n      []\n    );\n    const styles = decorations.reduce(\n      (result, range) => ({ ...result, ...range.styles }),\n      {}\n    );\n\n    return { text, classes, styles };\n  }\n}\n\n    \n\n    \n        \n  {{ segment.text }}\n\n\n    \n\n    \n                \n                    ./decorated-text.component.scss\n                \n                :host {\n  display: flex;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ segment.text }}'\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'DecoratedTextComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DecoratedTextModule.html":{"url":"modules/DecoratedTextModule.html","title":"module - DecoratedTextModule","body":"\n                   \n\n\n\n\n    Modules\n    DecoratedTextModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DecoratedTextModule\n\n\n\ncluster_DecoratedTextModule_exports\n\n\n\ncluster_DecoratedTextModule_declarations\n\n\n\n\nDecoratedTextComponent\n\nDecoratedTextComponent\n\n\n\nDecoratedTextModule\n\nDecoratedTextModule\n\nDecoratedTextModule -->\n\nDecoratedTextComponent->DecoratedTextModule\n\n\n\n\n\nDecoratedTextComponent \n\nDecoratedTextComponent \n\nDecoratedTextComponent  -->\n\nDecoratedTextModule->DecoratedTextComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-text.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DecoratedTextComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DecoratedTextComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DecoratedTextComponent } from './decorated-text.component';\n\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [DecoratedTextComponent],\n  exports: [DecoratedTextComponent]\n})\nexport class DecoratedTextModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultParams.html":{"url":"interfaces/DefaultParams.html","title":"interface - DefaultParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DefaultParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return combineLatest([\n      globalConfig.getOption('remoteApiEndpoint'),\n      globalConfig.getOption('hubmapToken')\n    ]).pipe(\n      take(1),\n      tap(([endpoint, token]) => {\n        api.configuration.basePath = endpoint;\n        if (token) {\n          requestParams['token'] = token;\n        }\n      }),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DelegateDataSource.html":{"url":"classes/DelegateDataSource.html","title":"class - DelegateDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DelegateDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ForwardingDataSource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:91\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult\n} from 'ccf-database';\nimport { Observable, ObservableInput, ObservedValueOf } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n\nexport interface DataSource {\n  getDatabaseStatus(): Observable;\n  getProviderNames(): Observable;\n  getDatasetTechnologyNames(): Observable;\n  getOntologyTreeModel(): Observable;\n  getCellTypeTreeModel(): Observable;\n  getReferenceOrgans(): Observable;\n\n  getTissueBlockResults(filter?: Filter): Observable;\n  getAggregateResults(filter?: Filter): Observable;\n  getOntologyTermOccurences(filter?: Filter): Observable>;\n  getCellTypeTermOccurences(filter?: Filter): Observable>;\n  getScene(filter?: Filter): Observable;\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\nexport type DataSourceLike = {\n  [K in keyof DataSource]: DataSourceLikeMethod;\n};\n\nexport type DataSourceMethod = DataSource[K];\nexport type DataSourceLikeMethod =\n  (...args: Parameters>) => ObservableInput>;\nexport type DataSourceDataType =\n  ObservedValueOf>>;\n\n\nexport abstract class ForwardingDataSource implements DataSource {\n  getDatabaseStatus(): Observable {\n    return this.forwardCall('getDatabaseStatus');\n  }\n\n  getProviderNames(): Observable {\n    return this.forwardCall('getProviderNames');\n  }\n\n  getDatasetTechnologyNames(): Observable {\n    return this.forwardCall('getDatasetTechnologyNames');\n  }\n\n  getOntologyTreeModel(): Observable {\n    return this.forwardCall('getOntologyTreeModel');\n  }\n\n  getCellTypeTreeModel(): Observable {\n    return this.forwardCall('getCellTypeTreeModel');\n  }\n\n  getReferenceOrgans(): Observable {\n    return this.forwardCall('getReferenceOrgans');\n  }\n\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.forwardCall('getTissueBlockResults', filter);\n  }\n\n  getAggregateResults(filter?: Filter): Observable {\n    return this.forwardCall('getAggregateResults', filter);\n  }\n\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getOntologyTermOccurences', filter);\n  }\n\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getCellTypeTermOccurences', filter);\n  }\n\n  getScene(filter?: Filter): Observable {\n    return this.forwardCall('getScene', filter);\n  }\n\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.forwardCall('getReferenceOrganScene', organIri, filter);\n  }\n\n  protected abstract forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable>;\n}\n\n\nexport abstract class DelegateDataSource extends ForwardingDataSource {\n  abstract readonly impl$: Observable;\n\n  protected forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable> {\n    type AnyFunction = (...rest: unknown[]) => ObservableInput;\n\n    return this.impl$.pipe(\n      switchMap(impl => (impl[method] as AnyFunction)(...args))\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DocumentationContent.html":{"url":"interfaces/DocumentationContent.html","title":"interface - DocumentationContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DocumentationContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The structure to define how each documentation panel\nshould look like in the info dialog\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Content inside the panel\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Title of the panel\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nconst documentationURL = 'assets/docs/README.md';\n\n/**\n * The structure to define how each documentation panel\n * should look like in the info dialog\n */\n\nexport interface DocumentationContent {\n  /** Title of the panel */\n  title: string;\n\n  /** Content inside the panel */\n  content: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfoButtonService {\n\n  /** Subject to send the documentation data to the component when its done processing */\n  markdownContent: BehaviorSubject = new BehaviorSubject([]);\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Read the markdown file to split it by h1 tags.\n   */\n  readMarkdown(): void {\n    this.http.get(documentationURL, { responseType: 'text' }).subscribe((data: string) => {\n      const markdownContent: DocumentationContent[] = this.parseMarkdown(data);\n      this.markdownContent.next(markdownContent);\n    });\n  }\n\n  /**\n   * Function to parse the markdown file and convert to\n   * documentation content used by the info-dialog panels\n   *\n   * @param data Markdown file sent as a string after reading it\n   * @returns array of DocumentationContent\n   */\n  parseMarkdown(data: string): DocumentationContent[] {\n    const markdownContent: DocumentationContent[] = [];\n    const splitByHeaderTag: string[] = data.split('# ');\n    for (const split of splitByHeaderTag) {\n      if (split.length) {\n        const headerAndContent: string[] = split.split('\\n\\n');\n        markdownContent.push({\n          title: headerAndContent[0],\n          content: headerAndContent.splice(1).join('\\n\\n')\n        });\n      }\n    }\n    return markdownContent;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterParams.html":{"url":"interfaces/FilterParams.html","title":"interface - FilterParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            age\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ageRange\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bmi\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bmiRange\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cellTypeTerms\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ontologyTerms\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            providers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            technologies\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:     MinMax\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MinMax\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ageRange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ageRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bmi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bmi:     MinMax\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MinMax\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bmiRange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bmiRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cellTypeTerms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cellTypeTerms:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyTerms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyTerms:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        providers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"both\" | \"female\" | \"male\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"both\" | \"female\" | \"male\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        technologies:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return combineLatest([\n      globalConfig.getOption('remoteApiEndpoint'),\n      globalConfig.getOption('hubmapToken')\n    ]).pipe(\n      take(1),\n      tap(([endpoint, token]) => {\n        api.configuration.basePath = endpoint;\n        if (token) {\n          requestParams['token'] = token;\n        }\n      }),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForwardingDataSource.html":{"url":"classes/ForwardingDataSource.html","title":"class - ForwardingDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForwardingDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            DataSource\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:84\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult\n} from 'ccf-database';\nimport { Observable, ObservableInput, ObservedValueOf } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n\nexport interface DataSource {\n  getDatabaseStatus(): Observable;\n  getProviderNames(): Observable;\n  getDatasetTechnologyNames(): Observable;\n  getOntologyTreeModel(): Observable;\n  getCellTypeTreeModel(): Observable;\n  getReferenceOrgans(): Observable;\n\n  getTissueBlockResults(filter?: Filter): Observable;\n  getAggregateResults(filter?: Filter): Observable;\n  getOntologyTermOccurences(filter?: Filter): Observable>;\n  getCellTypeTermOccurences(filter?: Filter): Observable>;\n  getScene(filter?: Filter): Observable;\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\nexport type DataSourceLike = {\n  [K in keyof DataSource]: DataSourceLikeMethod;\n};\n\nexport type DataSourceMethod = DataSource[K];\nexport type DataSourceLikeMethod =\n  (...args: Parameters>) => ObservableInput>;\nexport type DataSourceDataType =\n  ObservedValueOf>>;\n\n\nexport abstract class ForwardingDataSource implements DataSource {\n  getDatabaseStatus(): Observable {\n    return this.forwardCall('getDatabaseStatus');\n  }\n\n  getProviderNames(): Observable {\n    return this.forwardCall('getProviderNames');\n  }\n\n  getDatasetTechnologyNames(): Observable {\n    return this.forwardCall('getDatasetTechnologyNames');\n  }\n\n  getOntologyTreeModel(): Observable {\n    return this.forwardCall('getOntologyTreeModel');\n  }\n\n  getCellTypeTreeModel(): Observable {\n    return this.forwardCall('getCellTypeTreeModel');\n  }\n\n  getReferenceOrgans(): Observable {\n    return this.forwardCall('getReferenceOrgans');\n  }\n\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.forwardCall('getTissueBlockResults', filter);\n  }\n\n  getAggregateResults(filter?: Filter): Observable {\n    return this.forwardCall('getAggregateResults', filter);\n  }\n\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getOntologyTermOccurences', filter);\n  }\n\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getCellTypeTermOccurences', filter);\n  }\n\n  getScene(filter?: Filter): Observable {\n    return this.forwardCall('getScene', filter);\n  }\n\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.forwardCall('getReferenceOrganScene', organIri, filter);\n  }\n\n  protected abstract forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable>;\n}\n\n\nexport abstract class DelegateDataSource extends ForwardingDataSource {\n  abstract readonly impl$: Observable;\n\n  protected forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable> {\n    type AnyFunction = (...rest: unknown[]) => ObservableInput;\n\n    return this.impl$.pipe(\n      switchMap(impl => (impl[method] as AnyFunction)(...args))\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalConfigState.html":{"url":"injectables/GlobalConfigState.html","title":"injectable - GlobalConfigState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GlobalConfigState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/config/global-config.state.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                optionCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                    Private\n                                getPathKey\n                            \n                            \n                                getProperty\n                            \n                            \n                                patchConfig\n                            \n                            \n                                setConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    config$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(k1: K1)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:42\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K1\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(k1: K1, k2: K2)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:43\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K1\n                        K2\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n                                    \n                                            K2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(k1: K1, k2: K2, k3: K3)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:44\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K1\n                        K2\n                        K3\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n                                    \n                                            K2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n                                    \n                                            K3\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(...path: (string | number)[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:45\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            (string | number)[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(...path: (string | number)[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            (string | number)[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getPathKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPathKey(path: (string | number)[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            (string | number)[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProperty\n                        \n                    \n                \n            \n            \n                \ngetProperty(path: PropertyKey[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:34\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            PropertyKey[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patchConfig\n                        \n                    \n                \n            \n            \n                \npatchConfig(config: ImmutablePatchValue)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            ImmutablePatchValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConfig\n                        \n                    \n                \n            \n            \n                \nsetConfig(config: ImmutableStateValue)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            ImmutableStateValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        optionCache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config$\n                    \n                \n\n                \n                    \n                        getconfig$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { Computed, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { ImmutablePatchValue, ImmutableStateValue } from '@ngxs-labs/data/typings';\nimport { State } from '@ngxs/store';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, pluck, shareReplay } from 'rxjs/operators';\n\n\n@StateRepository()\n@State({\n  name: 'globalConfig',\n  defaults: null\n})\n@Injectable()\nexport class GlobalConfigState extends NgxsImmutableDataRepository {\n  private readonly optionCache = new Map>();\n\n  @Computed()\n  get config$(): Observable> {\n    return this.state$.pipe(filterNulls(), shareReplay(1));\n  }\n\n  setConfig(config: ImmutableStateValue): void {\n    this.setState(config);\n  }\n\n  patchConfig(config: ImmutablePatchValue): void {\n    this.patchState(config);\n  }\n\n  getProperty(path: PropertyKey[]): Observable {\n    return this.config$.pipe(\n      pluck(...path as string[]),\n      distinctUntilChanged(),\n      shareReplay(1)\n    );\n  }\n\n  getOption(k1: K1): Observable;\n  getOption(k1: K1, k2: K2): Observable;\n  getOption(k1: K1, k2: K2, k3: K3): Observable;\n  getOption(...path: (string | number)[]): Observable;\n  getOption(...path: (string | number)[]): Observable {\n    const key = this.getPathKey(path);\n    if (this.optionCache.has(key)) {\n      return this.optionCache.get(key)!;\n    }\n\n    const obs = this.config$.pipe(\n      pluck(...(path as string[])),\n      distinctUntilChanged(),\n      shareReplay(1)\n    );\n\n    this.optionCache.set(key, obs);\n    return obs;\n  }\n\n  private getPathKey(path: (string | number)[]): string {\n    return `${path.length}:${path.join('.')}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalsService.html":{"url":"injectables/GlobalsService.html","title":"injectable - GlobalsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GlobalsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/globals/globals.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Provide functionality for interacting with the global object.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                findGlobalObject\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                remove\n                            \n                            \n                                set\n                            \n                            \n                                set\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    obj\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        findGlobalObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    findGlobalObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:109\n                \n            \n\n\n            \n                \n                    Attempt to locate the global object.\nCan be overridden in a subclass to check other locations\nor completely change the object. This is especially useful\nduring testing.\n\n\n                    \n                    \n                    \n                        Returns :         GlobalThis | undefined\n\n                    \n                    \n                        The global object if found\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: K)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:58\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n                    Gets a value from the global object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key for the value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: K, def: D)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:59\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                        D\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                            D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NonNullable | D\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: GlobalKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:60\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | null | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: GlobalKey, def: D)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:61\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        D\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                            D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | D\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: GlobalKey, def?)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has\n                        \n                    \n                \n            \n            \n                \nhas(key: GlobalKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:45\n                \n            \n\n\n            \n                \n                    Tests whether the global object has the specific key.\nThis method returns true even when the associated value\nis undefined or null as long as the key exists.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the key exists in the global object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(key: GlobalKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:93\n                \n            \n\n\n            \n                \n                    Removes a key from the global object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: K, value)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:76\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n                    Sets a value on the global object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key to set the value on\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: GlobalKey, value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:77\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: GlobalKey, value)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        obj\n                    \n                \n\n                \n                    \n                        getobj()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:22\n                                \n                            \n                    \n                        \n                                The found global object\n\n\n                                \n                                    Returns :         GlobalThis | undefined\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n\n/** Type of keys allowed in the global object */\nexport type GlobalKey = string | symbol;\n\n/** Type of the global object */\nexport type GlobalThis = typeof globalThis;\n\ndeclare let global: GlobalThis;\n\n/**\n * Provide functionality for interacting with the global object.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalsService {\n  /**\n   * The found global object\n   */\n  get obj(): GlobalThis | undefined {\n    const obj = this.findGlobalObject();\n    // Cache value on the instance\n    Object.defineProperties(this, {\n      obj: {\n        configurable: false,\n        writable: false,\n        value: obj\n      }\n    });\n\n    return obj;\n  }\n\n  /**\n   * Tests whether the global object has the specific key.\n   * This method returns true even when the associated value\n   * is undefined or null as long as the key exists.\n   *\n   * @param key The key\n   *\n   * @returns true if the key exists in the global object\n   */\n  has(key: GlobalKey): boolean {\n    const { obj } = this;\n    return obj != null && key in obj;\n  }\n\n  /**\n   * Gets a value from the global object.\n   *\n   * @param key The key for the value\n   * @param def An optional default value\n   *\n   * @returns The value if it exists otherwise the default value\n   */\n  get(key: K): GlobalThis[K];\n  get(key: K, def: D): NonNullable | D;\n  get(key: GlobalKey): T | null | undefined;\n  get(key: GlobalKey, def: D): T | D;\n\n  get(key: GlobalKey, def?: unknown): unknown {\n    const { obj } = this;\n    return (obj && obj[key] as unknown) ?? def;\n  }\n\n  /**\n   * Sets a value on the global object.\n   *\n   * @param key The key to set the value on\n   * @param value The new value\n   *\n   * @throws TypeError if the value is readonly\n   */\n  set(key: K, value: GlobalThis[K]): void;\n  set(key: GlobalKey, value: T): void;\n\n  set(key: GlobalKey, value: unknown): void {\n    const { obj } = this;\n    if (obj) {\n      obj[key] = value;\n    }\n  }\n\n  /**\n   * Removes a key from the global object.\n   *\n   * @param key The key to remove\n   *\n   * @throws TypeError if the key is not removable\n   */\n  remove(key: GlobalKey): void {\n    const { obj } = this;\n    if (obj) {\n      delete obj[key];\n    }\n  }\n\n  /**\n   * Attempt to locate the global object.\n   * Can be overridden in a subclass to check other locations\n   * or completely change the object. This is especially useful\n   * during testing.\n   *\n   * @returns The global object if found\n   */\n  /* istanbul ignore next This is really hard to test as it depends on the global environment */\n  protected findGlobalObject(): GlobalThis | undefined {\n    // This should pretty much always be available unless\n    // we are running in some outdated environment\n    if (typeof globalThis !== 'undefined') {\n      return globalThis;\n    }\n\n    // Check the common places for a global object\n    if (typeof global !== 'undefined') { // Node.js environment\n      return global;\n    } else if (typeof window !== 'undefined') { // Browser environment\n      return window;\n    } else if (typeof self !== 'undefined') { // Web worker environment\n      return self;\n    }\n\n    try {\n      // One last try - may fail depending on content security policy (CSP) settings\n      // eslint-disable-next-line no-new-func, @typescript-eslint/no-implied-eval\n      return (new Function('return this;'))() as GlobalThis | undefined;\n    } catch (_ignored) { /* Ignore errors */ }\n\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleAnalyticsSyncService.html":{"url":"injectables/GoogleAnalyticsSyncService.html","title":"injectable - GoogleAnalyticsSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GoogleAnalyticsSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                            \n                                    Private\n                                    Readonly\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                toggleGoogleAnalytics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consentService: ConsentService, window: Record | null, undefined: IGoogleAnalyticsSettings)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        window\n                                                  \n                                                        \n                                                                    Record | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                  \n                                                        \n                                                                    IGoogleAnalyticsSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        toggleGoogleAnalytics\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleGoogleAnalytics(disabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    disabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, OnDestroy } from '@angular/core';\nimport { IGoogleAnalyticsSettings, NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN, NGX_WINDOW } from 'ngx-google-analytics';\nimport { Subscription } from 'rxjs';\n\nimport { ConsentService } from './consent.service';\n\n\n@Injectable()\nexport class GoogleAnalyticsSyncService implements OnDestroy {\n  private readonly token: string;\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    consentService: ConsentService,\n    @Inject(NGX_WINDOW) private readonly window: Record | null,\n    @Inject(NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN) { trackingCode }: IGoogleAnalyticsSettings\n  ) {\n    this.token = trackingCode;\n\n    this.subscriptions.add(consentService.consentChange.subscribe(\n      consent => this.toggleGoogleAnalytics(consent === 'rescinded')\n    ));\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  private toggleGoogleAnalytics(disabled: boolean): void {\n    if (this.window) {\n      this.window[`ga-disable-${this.token}`] = disabled;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoButtonComponent.html":{"url":"components/InfoButtonComponent.html","title":"component - InfoButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Info button component: Information icon displays project details when clicked.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-button\n            \n\n            \n                styleUrls\n                ./info-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchInfoDialog\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onDialogButtonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                infoTitle\n                            \n                            \n                                videoID\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, infoButtonService: InfoButtonService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:29\n                            \n                        \n\n                \n                    \n                            Creates an instance of info button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the dialog creation service.\n\n                                                        \n                                                \n                                                \n                                                        infoButtonService\n                                                  \n                                                        \n                                                                        InfoButtonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the info button service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        infoTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:22\n                            \n                        \n                \n                    \n                        Title of the info dialog\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        videoID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:27\n                            \n                        \n                \n                    \n                        Whether the information is for the RUI or EUI\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        launchInfoDialog\n                        \n                    \n                \n            \n            \n                \nlaunchInfoDialog(data: DocumentationContent[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:56\n                \n            \n\n\n            \n                \n                    Opens the info dialogue with the project details\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                DocumentationContent[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:49\n                \n            \n\n\n            \n                \n                    Unsubscribe to the observable when the component\nis destroyed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDialogButtonClick\n                        \n                    \n                \n            \n            \n                \nonDialogButtonClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:72\n                \n            \n\n\n            \n                \n                    Detects button click and reads markdown function\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:29\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\n\nimport { DocumentationContent } from '../info-button/info-button.service';\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\nimport { InfoButtonService } from './info-button.service';\n\n\n/**\n * Info button component: Information icon displays project details when clicked.\n */\n@Component({\n  selector: 'ccf-info-button',\n  templateUrl: './info-button.component.html',\n  styleUrls: ['./info-button.component.scss']\n})\nexport class InfoButtonComponent implements OnDestroy {\n  /**\n   * Title of the info dialog\n   */\n  @Input() infoTitle = '';\n\n  /**\n   * Whether the information is for the RUI or EUI\n   */\n  @Input() videoID: string;\n\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of info button component.\n   *\n   * @param dialog Reference to the dialog creation service.\n   * @param infoButtonService Reference to the info button service\n   */\n  constructor(private readonly dialog: MatDialog, private readonly infoButtonService: InfoButtonService) {\n    this.subscriptions.add(infoButtonService.markdownContent.subscribe(data => {\n      if (data.length) {\n        this.launchInfoDialog(data);\n      }\n    }));\n  }\n\n  /**\n    * Unsubscribe to the observable when the component\n    * is destroyed\n    */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the info dialogue with the project details\n   */\n  launchInfoDialog(data: DocumentationContent[]): void {\n    this.dialog.open(InfoDialogComponent, {\n      autoFocus: false,\n      panelClass: 'modal-animated',\n      width: '60rem',\n      data: {\n        title: this.infoTitle,\n        content: data,\n        videoID: this.videoID\n      }\n    });\n  }\n\n  /**\n   * Detects button click and reads markdown function\n   */\n  onDialogButtonClick(): void {\n    this.infoButtonService.readMarkdown();\n  }\n}\n\n    \n\n    \n        \n  \n    info\n  \n\n    \n\n    \n                \n                    ./info-button.component.scss\n                \n                .info-button-wrapper {\n  border-radius: 0.25rem;\n  padding: 0.65rem;\n  transition: 0.6s;\n\n  .ccf-info-button {\n    cursor: pointer;\n    transition: color .6s;\n    font-size: 1.5rem;\n    vertical-align: sub;\n  }\n  \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      info  '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoButtonModule.html":{"url":"modules/InfoButtonModule.html","title":"module - InfoButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InfoButtonModule\n\n\n\ncluster_InfoButtonModule_exports\n\n\n\ncluster_InfoButtonModule_imports\n\n\n\ncluster_InfoButtonModule_declarations\n\n\n\n\nInfoButtonComponent\n\nInfoButtonComponent\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nInfoButtonModule -->\n\nInfoButtonComponent->InfoButtonModule\n\n\n\n\n\nInfoButtonComponent \n\nInfoButtonComponent \n\nInfoButtonComponent  -->\n\nInfoButtonModule->InfoButtonComponent \n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoButtonModule -->\n\nInfoDialogModule->InfoButtonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-button/info-button.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoButtonComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InfoDialogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { InfoButtonComponent } from './info-button.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { InfoDialogModule } from '../info-dialog/info-dialog.module';\n\n@NgModule({\n  declarations: [InfoButtonComponent],\n  imports: [CommonModule, InfoDialogModule, MatIconModule, HttpClientModule],\n  exports: [InfoButtonComponent]\n})\nexport class InfoButtonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InfoButtonService.html":{"url":"injectables/InfoButtonService.html","title":"injectable - InfoButtonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InfoButtonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                markdownContent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                parseMarkdown\n                            \n                            \n                                readMarkdown\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        parseMarkdown\n                        \n                    \n                \n            \n            \n                \nparseMarkdown(data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:48\n                \n            \n\n\n            \n                \n                    Function to parse the markdown file and convert to\ndocumentation content used by the info-dialog panels\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Markdown file sent as a string after reading it\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DocumentationContent[]\n\n                    \n                    \n                        array of DocumentationContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readMarkdown\n                        \n                    \n                \n            \n            \n                \nreadMarkdown()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:34\n                \n            \n\n\n            \n                \n                    Read the markdown file to split it by h1 tags.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        markdownContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:27\n                        \n                    \n\n            \n                \n                    Subject to send the documentation data to the component when its done processing\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\nconst documentationURL = 'assets/docs/README.md';\n\n/**\n * The structure to define how each documentation panel\n * should look like in the info dialog\n */\n\nexport interface DocumentationContent {\n  /** Title of the panel */\n  title: string;\n\n  /** Content inside the panel */\n  content: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfoButtonService {\n\n  /** Subject to send the documentation data to the component when its done processing */\n  markdownContent: BehaviorSubject = new BehaviorSubject([]);\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Read the markdown file to split it by h1 tags.\n   */\n  readMarkdown(): void {\n    this.http.get(documentationURL, { responseType: 'text' }).subscribe((data: string) => {\n      const markdownContent: DocumentationContent[] = this.parseMarkdown(data);\n      this.markdownContent.next(markdownContent);\n    });\n  }\n\n  /**\n   * Function to parse the markdown file and convert to\n   * documentation content used by the info-dialog panels\n   *\n   * @param data Markdown file sent as a string after reading it\n   * @returns array of DocumentationContent\n   */\n  parseMarkdown(data: string): DocumentationContent[] {\n    const markdownContent: DocumentationContent[] = [];\n    const splitByHeaderTag: string[] = data.split('# ');\n    for (const split of splitByHeaderTag) {\n      if (split.length) {\n        const headerAndContent: string[] = split.split('\\n\\n');\n        markdownContent.push({\n          title: headerAndContent[0],\n          content: headerAndContent.splice(1).join('\\n\\n')\n        });\n      }\n    }\n    return markdownContent;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogComponent.html":{"url":"components/InfoDialogComponent.html","title":"component - InfoDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-dialog\n            \n\n            \n                styleUrls\n                ./info-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                documentationContents\n                            \n                            \n                                infoTitle\n                            \n                            \n                                videoID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: InfoDialogData)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:32\n                            \n                        \n\n                \n                    \n                            Creates an instance of info dialog component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the dialog that this component creates, used to call the dialog's methods\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        InfoDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data being injected into the dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:60\n                \n            \n\n\n            \n                \n                    Closes info dialog component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:51\n                \n            \n\n\n            \n                \n                    load the youtube player api in on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InfoDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:41\n                        \n                    \n\n            \n                \n                    Data being injected into the dialog\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:40\n                        \n                    \n\n            \n                \n                    A reference to the dialog that this component creates, used to call the dialog's methods\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        documentationContents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DocumentationContent[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:26\n                        \n                    \n\n            \n                \n                    Documentation contents\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        infoTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:30\n                        \n                    \n\n            \n                \n                    Title of the dialog\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        videoID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DocumentationContent } from '../info-button/info-button.service';\n\n/**\n * Data model for the dialog input\n */\nexport interface InfoDialogData {\n  content: DocumentationContent[];\n  title: string;\n  videoID: string;\n}\n\n/**\n * This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n */\n@Component({\n  selector: 'ccf-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss']\n})\nexport class InfoDialogComponent implements OnInit {\n  /**\n   * Documentation contents\n   */\n  documentationContents: DocumentationContent[];\n  /**\n   * Title of the dialog\n   */\n  infoTitle: string;\n\n  videoID: string;\n  /**\n   * Creates an instance of info dialog component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: InfoDialogData,\n  ) {\n    this.documentationContents = data.content || [];\n    this.infoTitle = data.title || '';\n    this.videoID = data.videoID;\n  }\n\n  /**\n   * load the youtube player api in on init\n   */\n  ngOnInit(): void {\n    const tag = document.createElement('script');\n    tag.src = 'https://www.youtube.com/iframe_api';\n    document.body.appendChild(tag);\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(() => {\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      clear\n    \n    \n      {{infoTitle}}\n      \n      \n        \n          \n            \n              {{content.title}}\n            \n              \n                \n                \n                   \n                \n              \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./info-dialog.component.scss\n                \n                ::ng-deep .mat-dialog-container {\n  padding: 0;\n}\n\n.rui-about.wrapper {\n  .container {\n    .content {\n      padding: 3rem;\n      text-align: left;\n    }\n\n    .description {\n      font-size: 0.875rem;\n      line-height: 1.5rem;\n      margin-bottom: 1rem;\n    }\n\n    .close {\n      .close-icon {\n        float: right;\n        cursor: pointer;\n      }\n    }\n\n    .title {\n      font-size: 1.5rem;\n      margin-bottom: 2.25rem;\n      text-align: center;\n    }\n\n    .subtitle {\n      font-size: 1rem;\n      margin-top: 0;\n      margin-bottom: 0.5rem;\n    }\n\n    .panel {\n      margin-bottom: 1.5rem;\n\n      .no-header-margin {\n        font-weight: 300;\n        margin-bottom: 0;\n      }\n\n      .top-padding {\n        display: flex;\n\n        markdown ::ng-deep ul {\n          margin-top: 0;\n          padding-left: 1.5rem;\n        }\n      }\n    }\n\n    .dialog-content {\n      height: 50rem;\n      min-height: 10rem;\n\n      .variable-binding {\n        font-weight: 300;\n\n        &.first {\n          padding-right: 3rem;\n          width: 50%;\n        }\n      }\n\n      .video-player {\n        position: relative;\n        width: 50%;\n\n        ::ng-deep iframe {\n          width: 100%;\n          height: 100%;\n          max-height: 17.5rem;\n        }\n      }\n    }\n\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            clear              {{infoTitle}}                                                        {{content.title}}                                                                                                                                         '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InfoDialogData.html":{"url":"interfaces/InfoDialogData.html","title":"interface - InfoDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InfoDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Data model for the dialog input\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            videoID\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         DocumentationContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DocumentationContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videoID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        videoID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DocumentationContent } from '../info-button/info-button.service';\n\n/**\n * Data model for the dialog input\n */\nexport interface InfoDialogData {\n  content: DocumentationContent[];\n  title: string;\n  videoID: string;\n}\n\n/**\n * This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n */\n@Component({\n  selector: 'ccf-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss']\n})\nexport class InfoDialogComponent implements OnInit {\n  /**\n   * Documentation contents\n   */\n  documentationContents: DocumentationContent[];\n  /**\n   * Title of the dialog\n   */\n  infoTitle: string;\n\n  videoID: string;\n  /**\n   * Creates an instance of info dialog component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: InfoDialogData,\n  ) {\n    this.documentationContents = data.content || [];\n    this.infoTitle = data.title || '';\n    this.videoID = data.videoID;\n  }\n\n  /**\n   * load the youtube player api in on init\n   */\n  ngOnInit(): void {\n    const tag = document.createElement('script');\n    tag.src = 'https://www.youtube.com/iframe_api';\n    document.body.appendChild(tag);\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(() => {\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoDialogModule.html":{"url":"modules/InfoDialogModule.html","title":"module - InfoDialogModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoDialogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InfoDialogModule\n\n\n\ncluster_InfoDialogModule_declarations\n\n\n\ncluster_InfoDialogModule_exports\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoDialogModule -->\n\nInfoDialogComponent->InfoDialogModule\n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nInfoDialogModule->InfoDialogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoDialogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoDialogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InfoDialogComponent } from './info-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { YouTubePlayerModule } from '@angular/youtube-player';\n\n\n@NgModule({\n  declarations: [InfoDialogComponent],\n  imports: [CommonModule, MatDialogModule, MatIconModule, MatExpansionModule, YouTubePlayerModule, MarkdownModule.forRoot({})],\n  exports: [InfoDialogComponent]\n})\nexport class InfoDialogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectorDelegateDataSourceService.html":{"url":"injectables/InjectorDelegateDataSourceService.html","title":"injectable - InjectorDelegateDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectorDelegateDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DelegateDataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                selectToken\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globalConfig: GlobalConfigState, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        selectToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectToken(config: C)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ProviderToken\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:11\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Injector, ProviderToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, shareReplay } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n@Injectable()\nexport abstract class InjectorDelegateDataSourceService extends DelegateDataSource {\n  readonly impl$: Observable;\n\n  constructor(\n    globalConfig: GlobalConfigState,\n    injector: Injector\n  ) {\n    super();\n\n    this.impl$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      map(config => this.selectToken(config)),\n      distinctUntilChanged(),\n      map(token => injector.get(token)),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract selectToken(config: C): ProviderToken;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageSyncService.html":{"url":"injectables/LocalStorageSyncService.html","title":"injectable - LocalStorageSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                storage\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadConsent\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                saveConsent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consentService: ConsentService, key: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadConsent\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadConsent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Consent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        saveConsent\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveConsent(value: Consent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        storage\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Consent, ConsentService } from './consent.service';\n\n\nexport const LOCAL_STORAGE_CONSENT_KEY = new InjectionToken('Key under which consent is stored', {\n  providedIn: 'root',\n  factory: () => 'ALLOW_TELEMETRY'\n});\n\n\n@Injectable()\nexport class LocalStorageSyncService implements OnDestroy {\n  private readonly storage?: typeof localStorage;\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    consentService: ConsentService,\n    @Inject(LOCAL_STORAGE_CONSENT_KEY) private readonly key: string\n  ) {\n    try {\n      this.storage = localStorage;\n    } catch (_error) { /* Ignored */ }\n\n    consentService.setConsent(this.loadConsent());\n    this.subscriptions.add(\n      consentService.consentChange.subscribe(consent => this.saveConsent(consent))\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  private loadConsent(): Consent {\n    const rawValue = this.storage?.getItem?.(this.key);\n    if (rawValue == null) {\n      return 'not-set';\n    }\n\n    const value = rawValue.trim().toLowerCase();\n    switch (value) {\n      case 'given': /* fallthrough */\n      case 'rescinded':\n        return value;\n      default:\n        return 'not-set';\n    }\n  }\n\n  private saveConsent(value: Consent): void {\n    this.storage?.setItem?.(this.key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MousePositionTrackerModule.html":{"url":"modules/MousePositionTrackerModule.html","title":"module - MousePositionTrackerModule","body":"\n                   \n\n\n\n\n    Modules\n    MousePositionTrackerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/analytics/mouse-position-tracker.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, NgModule } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { map, throttleTime } from 'rxjs/operators';\n\n\nexport function trackMousePosition(el: HTMLElement, ga: GoogleAnalyticsService): Subscription {\n  const formatData = (event: MouseEvent) => {\n    const { clientWidth, clientHeight } = el;\n    const { clientX, clientY } = event;\n    const points = [clientX, clientY, clientWidth, clientHeight];\n    return points.join('_');\n  };\n\n  const events = fromEvent(el, 'mousemove').pipe(\n    throttleTime(1000),\n    map(formatData)\n  );\n\n  return events.subscribe(data => ga.event('webpage', 'mousemove', data));\n}\n\n\n@NgModule()\nexport class MousePositionTrackerModule {\n  constructor(\n  // NOTE: Angular compiler fails when document is typed properly?!\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  @Inject(DOCUMENT) document: any,\n                    ga: GoogleAnalyticsService\n  ) {\n    if (document) {\n      trackMousePosition((document as Document).body, ga);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NumberDirective.html":{"url":"directives/NumberDirective.html","title":"directive - NumberDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NumberDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive for restricting an input element to integer only values.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        input[ccfNumbersOnly]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onInputChange\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts:9\n                            \n                        \n\n                \n                    \n                            Creates an instance of number directive.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to input element\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts:23\n                \n            \n\n\n            \n                \n                    Listens to input changes and updates the text to only include numbers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The input event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChange\n                        \n                    \n                \n            \n            \n                \nonInputChange(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('input', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts:23\n                \n            \n\n\n            \n                \n                    Listens to input changes and updates the text to only include numbers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The input event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, HostListener } from '@angular/core';\n\n/**\n * Directive for restricting an input element to integer only values.\n */\n@Directive({\n  selector: 'input[ccfNumbersOnly]'\n})\nexport class NumberDirective {\n  /**\n   * Creates an instance of number directive.\n   *\n   * @param el Reference to input element\n   */\n  constructor(private el: ElementRef) { }\n\n  /**\n   * Listens to input changes and updates the text to only include numbers.\n   *\n   * @param event The input event\n   */\n  @HostListener('input', ['$event'])\n  onInputChange(event: Event): void {\n    const initalValue = this.el.nativeElement.value;\n    this.el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');\n    if (initalValue !== this.el.nativeElement.value) {\n      event.stopPropagation();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NumbersOnlyModule.html":{"url":"modules/NumbersOnlyModule.html","title":"module - NumbersOnlyModule","body":"\n                   \n\n\n\n\n    Modules\n    NumbersOnlyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NumbersOnlyModule\n\n\n\ncluster_NumbersOnlyModule_declarations\n\n\n\ncluster_NumbersOnlyModule_exports\n\n\n\n\nNumberDirective\n\nNumberDirective\n\n\n\nNumbersOnlyModule\n\nNumbersOnlyModule\n\nNumbersOnlyModule -->\n\nNumberDirective->NumbersOnlyModule\n\n\n\n\n\nNumberDirective \n\nNumberDirective \n\nNumberDirective  -->\n\nNumbersOnlyModule->NumberDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NumberDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NumberDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { NumberDirective } from './numbers-only.directive';\n\n\n@NgModule({\n  declarations: [NumberDirective],\n  exports: [NumberDirective]\n})\nexport class NumbersOnlyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OpacitySliderComponent.html":{"url":"components/OpacitySliderComponent.html","title":"component - OpacitySliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OpacitySliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts\n\n\n\n    \n        Description\n    \n    \n        Slider for setting opacity on an anatomical structure\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-opacity-slider\n            \n\n            \n                styleUrls\n                ./opacity-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./opacity-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                prevOpacity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeOpacity\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                            \n                                resetOpacity\n                            \n                            \n                                toggleVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                opacity\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                opacityChange\n                            \n                            \n                                opacityReset\n                            \n                            \n                                visibilityToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        opacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:22\n                            \n                        \n                \n                    \n                        The value displayed in the slider\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:27\n                            \n                        \n                \n                    \n                        Whether the item is set to visible\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        opacityChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:32\n                            \n                        \n                \n                    \n                        Emits the updated opacity when the opacity changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        opacityReset\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:42\n                            \n                        \n                \n                    \n                        Emitter for resetting all opacity values to default\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visibilityToggle\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:37\n                            \n                        \n                \n                    \n                        Output  of opacity slider component\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-opacity-slider\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-opacity-slider'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeOpacity\n                        \n                    \n                \n            \n            \n                \nchangeOpacity(newOpacity: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:63\n                \n            \n\n\n            \n                \n                    Emits opacityChange with the new opacity value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    newOpacity\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The updated opacity value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetOpacity\n                        \n                    \n                \n            \n            \n                \nresetOpacity()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:82\n                \n            \n\n\n            \n                \n                    Emits signal to reset the opacity of the item\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleVisibility()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:71\n                \n            \n\n\n            \n                \n                    Emits signal to toggle the visibility of the item\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-opacity-slider'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prevOpacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, HostBinding, Input, Output, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n/**\n * Slider for setting opacity on an anatomical structure\n */\n@Component({\n  selector: 'ccf-opacity-slider',\n  templateUrl: './opacity-slider.component.html',\n  styleUrls: ['./opacity-slider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OpacitySliderComponent implements OnInit {\n\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-opacity-slider';\n\n  /**\n   * The value displayed in the slider\n   */\n  @Input() opacity = 20;\n\n  /**\n   * Whether the item is set to visible\n   */\n  @Input() visible = true;\n\n  /**\n   * Emits the updated opacity when the opacity changes\n   */\n  @Output() readonly opacityChange = new EventEmitter();\n\n  /**\n   * Output  of opacity slider component\n   */\n  @Output() readonly visibilityToggle = new EventEmitter();\n\n  /**\n   * Emitter for resetting all opacity values to default\n   */\n  @Output() readonly opacityReset = new EventEmitter();\n\n  prevOpacity: number;\n\n  ngOnInit(): void {\n    if (this.visible) {\n      this.prevOpacity = 0;\n    } else {\n      this.prevOpacity = 20;\n    }\n  }\n\n  reset(): void {\n    this.prevOpacity = 20;\n  }\n\n  /**\n   * Emits opacityChange with the new opacity value\n   *\n   * @param newOpacity The updated opacity value\n   */\n  changeOpacity(newOpacity: string): void {\n    this.opacity = parseInt(newOpacity, 10);\n    this.opacityChange.emit(this.opacity);\n  }\n\n  /**\n   * Emits signal to toggle the visibility of the item\n   */\n  toggleVisibility(): void {\n    const temp = this.opacity;\n    this.opacity = this.prevOpacity;\n    this.prevOpacity = temp;\n    this.visibilityToggle.emit();\n    this.opacityChange.emit(this.opacity);\n  }\n\n  /**\n   * Emits signal to reset the opacity of the item\n   */\n  resetOpacity(): void {\n    this.prevOpacity = 0;\n    this.opacityReset.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{opacity}}%\n  \n  \n    \n    \n    refresh\n  \n\n    \n\n    \n                \n                    ./opacity-slider.component.scss\n                \n                :host {\n  height: 2.25rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 0.1875rem;\n  \n\n  .slider-box {\n    display: flex;\n    width: 100%;\n    align-items: center;\n    justify-content: space-between;\n    height: 100%;\n\n    .slider-and-label {\n      width: 60%;\n      display: flex;\n      align-items: center;\n      height: 100%;\n\n      .slider {\n        width: 100%;\n        height: 100%;\n\n        ::ng-deep .mat-slider-wrapper {\n          top: 1.125rem;\n        }\n        \n        &.disabled {\n          pointer-events: none;\n          cursor: not-allowed;\n        }\n      }\n\n      .opacity-value {\n        width: 1.5rem;\n        margin-left: 0.5rem;\n      }\n    }\n\n    .icons {\n      display: flex;\n      cursor: pointer !important;\n\n      .reset {\n        margin-right: 1rem;\n        padding: 0.25rem;\n        cursor: pointer;\n        transition: .6s;\n        border-radius: 0.25rem;\n      }\n    \n      .visibility {\n        transition: .6s;\n        cursor: pointer;\n        padding: 0.25rem;\n        border-radius: 0.25rem;\n    \n        &.hidden {\n          display: none;\n        }\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{opacity}}%                refresh  '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'OpacitySliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpacitySliderModule.html":{"url":"modules/OpacitySliderModule.html","title":"module - OpacitySliderModule","body":"\n                   \n\n\n\n\n    Modules\n    OpacitySliderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OpacitySliderModule\n\n\n\ncluster_OpacitySliderModule_declarations\n\n\n\ncluster_OpacitySliderModule_exports\n\n\n\n\nOpacitySliderComponent\n\nOpacitySliderComponent\n\n\n\nOpacitySliderModule\n\nOpacitySliderModule\n\nOpacitySliderModule -->\n\nOpacitySliderComponent->OpacitySliderModule\n\n\n\n\n\nOpacitySliderComponent \n\nOpacitySliderComponent \n\nOpacitySliderComponent  -->\n\nOpacitySliderModule->OpacitySliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OpacitySliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OpacitySliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OpacitySliderComponent } from './opacity-slider.component';\nimport { MatSliderModule } from '@angular/material/slider';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRippleModule } from '@angular/material/core';\n\n@NgModule({\n  declarations: [OpacitySliderComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatSliderModule,\n    MatRippleModule\n  ],\n  exports: [OpacitySliderComponent]\n})\nexport class OpacitySliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganInfo.html":{"url":"interfaces/OrganInfo.html","title":"interface - OrganInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Contains the organ name and url of the icon svg\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hasSex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            side\n                                        \n                                \n                                \n                                        \n                                            src\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    True if the icon is disabled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasSex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasSex:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    True if applies to both sexes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    UBERON id for the organ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Label to display for the organ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the organ (to help match organs with left / right)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"male\" | \"female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"male\" | \"female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used for single sex only organs\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"left\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"right\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used for paired organs\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Used to fetch the url of the organ icon\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit, Component, ElementRef, EventEmitter, HostBinding, Input,\n  OnChanges, OnDestroy, Output, SimpleChanges, ViewChild\n} from '@angular/core';\nimport { ResizeSensor } from 'css-element-queries';\n\n/**\n * All organs that will eventually be displayed in the app\n */\nexport const ALL_POSSIBLE_ORGANS = [\n  {\n    src: 'app:skin',\n    organ: 'Skin',\n    name: 'Skin',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002097'\n  },\n  {\n    src: 'app:brain',\n    organ: 'Brain',\n    name: 'Brain',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000955'\n  },\n  {\n    disabled: true,\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000029'\n  },\n  {\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002509'\n  },\n  {\n    disabled: true,\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000970'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004548'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/FMA_54449'\n  },\n  {\n    disabled: true,\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0003889'\n  },\n  {\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001303'\n  },\n  {\n    src: 'app:fallopian-tube-right',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001302'\n  },\n  {\n    src: 'app:heart',\n    organ: 'Heart',\n    name: 'Heart',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000948'\n  },\n  {\n    disabled: true,\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002113'\n  },\n  {\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004538'\n  },\n  {\n    src: 'app:kidney-right',\n    organ: 'Kidney',\n    name: 'Kidney, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004539'\n  },\n  {\n    disabled: true,\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001465'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/FMA_24978'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/FMA_24977'\n  },\n  {\n    src: 'app:liver',\n    organ: 'Liver',\n    name: 'Liver',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002107'\n  },\n  {\n    disabled: true,\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002048'\n  },\n  {\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001004'\n  },\n  {\n    disabled: true,\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000992'\n  },\n  {\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/FMA_7214'\n  },\n  {\n    src: 'app:ovary-right',\n    organ: 'Ovary',\n    name: 'Ovary, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/FMA_7213'\n  },\n  {\n    src: 'app:pancreas',\n    organ: 'Pancreas',\n    name: 'Pancreas',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001264'\n  },\n  {\n    src: 'app:pelvis-f',\n    organ: 'Pelvis',\n    name: 'Pelvis',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001270'\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002367',\n    disabled: true\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000079'\n  },\n  {\n    src: 'app:small-intestine',\n    organ: 'Small Intestine',\n    name: 'Small Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002108'\n  },\n  {\n    src: 'app:large-intestine',\n    organ: 'Large Intestine',\n    name: 'Large Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000059'\n  },\n  {\n    src: 'app:spleen',\n    organ: 'Spleen',\n    name: 'Spleen',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002106'\n  },\n  {\n    src: 'app:thymus',\n    organ: 'Thymus',\n    name: 'Thymus',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002370'\n  },\n  {\n    disabled: true,\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000056'\n  },\n  {\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001223'\n  },\n  {\n    src: 'app:ureter-right',\n    organ: 'Ureter',\n    name: 'Ureter, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001222'\n  },\n  {\n    src: 'app:bladder',\n    organ: 'Urinary Bladder',\n    name: 'Urinary Bladder',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001255'\n  },\n  {\n    src: 'app:uterus',\n    organ: 'Uterus',\n    name: 'Uterus',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000995'\n  },\n  {\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004537'\n  },\n  {\n    disabled: true,\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002049'\n  }\n].sort((a, b) => a.name.localeCompare(b.name)) as OrganInfo[];\n\n/**\n * All organs which have not been disabled\n */\nexport const ALL_ORGANS = ALL_POSSIBLE_ORGANS.filter(organ => organ.disabled !== true);\n\n/**\n * Contains the organ name and url of the icon svg\n */\nexport interface OrganInfo {\n\n  /**\n   * Used to fetch the url of the organ icon\n   */\n  src: string;\n\n  /**\n   * Label to display for the organ\n   */\n  name: string;\n\n  /**\n   * Name of the organ (to help match organs with left / right)\n   */\n  organ: string;\n\n  /**\n   * True if the icon is disabled\n   */\n  disabled?: boolean;\n\n  /**\n   * Used for paired organs\n   */\n  side?: 'left' | 'right';\n\n  /**\n   * True if applies to both sexes\n   */\n  hasSex?: boolean;\n\n  /**\n   * Used for single sex only organs\n   */\n  sex?: 'male' | 'female';\n\n  /**\n   * UBERON id for the organ\n   */\n  id?: string;\n}\n\n/**\n * Organ carousel for selecting the organ to be viewed\n */\n@Component({\n  selector: 'ccf-organ-selector',\n  templateUrl: './organ-selector.component.html',\n  styleUrls: ['./organ-selector.component.scss']\n})\nexport class OrganSelectorComponent implements AfterViewInit, OnChanges, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly clsName = 'ccf-organ-selector';\n\n  @ViewChild('carouselContainer', { static: true }) carouselContainer: ElementRef;\n  @ViewChild('itemlist', { static: true }) itemList: ElementRef;\n  @ViewChild('itemcontainer', { static: true }) itemContainer: ElementRef;\n\n  /**\n   * If multiple selections should be allowed\n   */\n  @Input() multiselect = false;\n\n  @Input() displayErrors = false;\n\n  /**\n   * List of organs in the carousel\n   */\n  @Input() organList: OrganInfo[] = ALL_ORGANS;\n\n  /**\n   * Currently selected organ\n   */\n  @Input() selectedOrgans: OrganInfo[] = [];\n\n  /**\n   * If the organ selector is expanded\n   */\n  @Input() expanded = false;\n\n  /**\n   * Emits the name of the organ when selected\n   */\n  @Output() readonly organsChanged = new EventEmitter();\n\n  /**\n   * Determines whether the carousel is at the beginning\n   */\n  onLeft = true;\n\n  /**\n   * Determines whether the carousel is at the end\n   */\n  onRight = false;\n\n  /**\n   * Handles scrolling behavior\n   */\n  timeoutHandler?: unknown;\n\n  /**\n   * Distance the carousel moves in each shift (px)\n   */\n  step = 72;\n\n  /**\n   * Detects resizing of carousel\n   */\n  private sensor: ResizeSensor;\n\n  // eslint-disable-next-line\n  @Input()\n  set occurenceData(value: Record) {\n    // eslint-disable-next-line\n    this._occurenceData = value;\n  }\n\n  get occurenceData(): Record {\n    // eslint-disable-next-line\n    return this._occurenceData;\n  }\n\n  private _occurenceData: Record;\n\n  /**\n   * Set resize sensor on carousel\n   */\n  ngAfterViewInit(): void {\n    const { carouselContainer } = this;\n    this.sensor = new ResizeSensor(carouselContainer.nativeElement, () => {\n      this.set();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('organList' in changes) {\n      this.set();\n    }\n  }\n\n  /**\n   * Detaches resize sensor\n   */\n  ngOnDestroy(): void {\n    this.sensor.detach();\n  }\n\n  /**\n   * Decides whether or not an error has occured,\n   * used to display or hide error message.\n   */\n  get error(): boolean {\n    if (!this.displayErrors || this.selectedOrgans.length === 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Scrolls the carousel left or right by one step.\n   * Prevents scrolling past the beginning or end of the carousel.\n   *\n   * @param dir Direction to be scrolled\n   */\n  shift(dir: string): void {\n    const { itemList } = this;\n    let val = parseInt(itemList.nativeElement.style.left, 10) || 0;\n    if (this.onLeft && dir === 'left' || this.onRight && dir === 'right') {\n      return;\n    }\n    val = dir === 'right' ? val - this.step : val + this.step;\n    itemList.nativeElement.style.left = val + 'px';\n    this.setLeftRight(val);\n  }\n\n  /**\n   * Scrolls carousel continuously\n   *\n   * @param dir Direction to be scrolled\n   */\n  scroll(dir: string): void {\n    this.timeoutHandler = setInterval(() => {\n      this.shift(dir);\n    }, 200);\n  }\n\n  /**\n   * Stops carousel scrolling\n   */\n  stopScroll(): void {\n    if (this.timeoutHandler) {\n      // Minor hack to make typescript happy when there are mixed NodeJS and regular typings\n      clearInterval(this.timeoutHandler as undefined);\n      this.timeoutHandler = undefined;\n    }\n  }\n\n  /**\n   * Sets and emits currently selected organ(s)\n   *\n   * @param organ The organ selected\n   */\n  selectOrgan(organ: OrganInfo): void {\n    if (!this.multiselect) {\n      this.selectedOrgans = [organ];\n    } else {\n      if (this.selectedOrgans.includes(organ)) {\n        this.selectedOrgans = this.selectedOrgans.filter((selectedOrgan) => organ !== selectedOrgan);\n      } else {\n        this.selectedOrgans = this.selectedOrgans.concat([organ]);\n      }\n    }\n    this.organsChanged.emit(this.selectedOrgans);\n  }\n\n  /**\n   * Determines whether an icon represents a currently selected organ\n   *\n   * @param icon The icon of interest\n   * @returns true if selected\n   */\n  isSelected(organ: OrganInfo): boolean {\n    return this.selectedOrgans.includes(organ) ? true : false;\n  }\n\n  /**\n   * Disables scrolling if the list of organs is smaller than the container, otherwise sets onLeft and onRight as normal\n   */\n  set(): void {\n    const { itemList, itemContainer, carouselContainer } = this;\n    const val = parseInt(itemList.nativeElement.style.left, 10) || 0;\n    if (itemList.nativeElement.offsetWidth >= this.organList.length * this.step) {\n      itemList.nativeElement.style.left = '0px';\n      this.onLeft = true;\n      this.onRight = true;\n    } else {\n      this.setLeftRight(val);\n      const listLength = this.step * Math.floor(carouselContainer.nativeElement.offsetWidth / this.step) - 64;\n      itemContainer.nativeElement.style.width = `${listLength}px`;\n    }\n  }\n\n  /**\n   * Responsively sets width of the item container\n   */\n  setWidth(): void {\n    const { itemContainer, carouselContainer } = this;\n    const listLength = this.step * Math.floor(carouselContainer.nativeElement.offsetWidth / this.step) - 64;\n    itemContainer.nativeElement.style.width = `${listLength}px`;\n  }\n\n  /**\n   * Sets onLeft and onRight according to where the item list is scrolled\n   */\n  setLeftRight(val: number): void {\n    const { itemContainer } = this;\n    this.onLeft = val === 0 ? true : false;\n    this.onRight = val \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganSelectorModule.html":{"url":"modules/OrganSelectorModule.html","title":"module - OrganSelectorModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganSelectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrganSelectorModule\n\n\n\ncluster_OrganSelectorModule_declarations\n\n\n\ncluster_OrganSelectorModule_exports\n\n\n\n\nOrganSelectorComponent\n\nOrganSelectorComponent\n\n\n\nOrganSelectorModule\n\nOrganSelectorModule\n\nOrganSelectorModule -->\n\nOrganSelectorComponent->OrganSelectorModule\n\n\n\n\n\nOrganSelectorComponent \n\nOrganSelectorComponent \n\nOrganSelectorComponent  -->\n\nOrganSelectorModule->OrganSelectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/organ-selector/organ-selector.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OrganSelectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrganSelectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrganSelectorComponent } from './organ-selector.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [OrganSelectorComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatTooltipModule\n  ],\n  exports: [OrganSelectorComponent]\n})\nexport class OrganSelectorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluckUniqueOptions.html":{"url":"interfaces/PluckUniqueOptions.html","title":"interface - PluckUniqueOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PluckUniqueOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n        \n\n\n            \n                Description\n            \n            \n                Options for pluckUnique operator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            compare\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        compare\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        compare:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom comparison for determining distinct values\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { OperatorFunction } from 'rxjs';\nimport { distinctUntilChanged, pluck, shareReplay } from 'rxjs/operators';\n\n\n/**\n * Options for `pluckUnique` operator\n */\nexport interface PluckUniqueOptions {\n  /**\n   * Custom comparison for determining distinct values\n   */\n  compare?: (lhs: T, rhs: T) => boolean;\n}\n\n\n/**\n * Default options\n */\nconst DEFAULT_OPTIONS: PluckUniqueOptions = {};\n\n\n/**\n * Combines the functionaliy of `pluck` and `distinctUntilChanged`\n * as well as adding a `shareReplay`.\n *\n * @param {...string} props Properties to pluck\n * @param [opts] Additional options\n * @returns An `Observable` operator\n */\nexport function pluckUnique(k1: K1, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, k4: K4, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(...props: [string, ...string[]]): OperatorFunction;\nexport function pluckUnique(...props: [string, ...string[], PluckUniqueOptions]): OperatorFunction;\nexport function pluckUnique(...props: unknown[]): OperatorFunction {\n  const last = props[props.length - 1];\n  let keys = props as string[];\n  let opts = DEFAULT_OPTIONS;\n\n  if (typeof last === 'object') {\n    opts = last as PluckUniqueOptions;\n    keys = keys.slice(0, -1);\n  }\n\n  return source => source.pipe(\n    pluck(...keys),\n    distinctUntilChanged(opts.compare),\n    shareReplay(1)\n  );\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Segment.html":{"url":"interfaces/Segment.html","title":"interface - Segment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Segment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n        \n\n\n            \n                Description\n            \n            \n                A segment of text with additional classes and styles\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            styles\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Classes to add to the text container\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        styles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        styles:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Styles to set on the text container\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The piece of text to display\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { DecoratedRange, normalize } from './decorated-range';\n\n\n// Reexport DecoratedRange\nexport { DecoratedRange };\n\n/** A segment of text with additional classes and styles */\ninterface Segment {\n  /** The piece of text to display */\n  text: string;\n  /** Classes to add to the text container */\n  classes: string[];\n  /** Styles to set on the text container */\n  styles: Record;\n}\n\n/** Represents an operation to apply to the stack when building segments */\ninterface StackOp {\n  /** Text index at which the changes takes effect */\n  index: number;\n  /** Decorations to add */\n  added: DecoratedRange[];\n  /** Decorations to remove */\n  removed: DecoratedRange[];\n}\n\n\n/**\n * Class to display text with additional styling on ranges of the text.\n */\n@Component({\n  selector: 'ccf-decorated-text',\n  templateUrl: './decorated-text.component.html',\n  styleUrls: ['./decorated-text.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DecoratedTextComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-decorated-text';\n\n  /**\n   * Text to display\n   */\n  @Input() text: string;\n\n  /**\n   * Classes and styles to apply to ranges of the text.\n   * For overlapping ranges later values takes precedence.\n   */\n  @Input() decorations?: Partial[];\n\n  /**\n   * Computed segments of text with decorations resolved.\n   */\n  segments: Segment[] = [];\n\n  /**\n   * Apply changes and recalculate cached values.\n   *\n   * @param changes Instance properties that have changed\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('text' in changes || 'decorations' in changes) {\n      this.segments = this.createSegments();\n    }\n  }\n\n  /**\n   * Creates an array of decorated text segments based on\n   * the latest text and decorations.\n   *\n   * @returns The new segments\n   */\n  private createSegments(): Segment[] {\n    const { text } = this;\n    if (!text) { // No styling can be applied to empty text fields\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const decorations = this.getNormalizedDecorations();\n    if (decorations.length === 0) { // No styling available\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const stackOps = this.createStackOps(decorations);\n    const segments: Segment[] = [];\n    let stack: DecoratedRange[] = [];\n    let lastIndex = 0;\n\n    // If the first op starts at index zero apply stack changes\n    // but don't push a segment by shifing out the first op\n    if (stackOps[0].index === 0) {\n      stack = this.updateStack(stack, stackOps.shift() as StackOp);\n    }\n\n    // Build segments based on the stack operations\n    for (const op of stackOps) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex, op.index), stack\n      ));\n\n      lastIndex = op.index;\n      stack = this.updateStack(stack, op);\n    }\n\n    // Push the last segment if not already done\n    if (lastIndex !== text.length) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex), stack\n      ));\n    }\n\n    return segments;\n  }\n\n  /**\n   * Creates an ordered array of stack operations to apply when building segments.\n   *\n   * @param ranges The decorated ranges to apply\n   * @returns The array of operations\n   */\n  private createStackOps(ranges: DecoratedRange[]): StackOp[] {\n    const ops: Record = {};\n    const getOp = (index: number) => (ops[index] ??= { index, added: [], removed: [] });\n\n    for (const range of ranges) {\n      getOp(range.start).added.push(range);\n      getOp(range.end).removed.push(range);\n    }\n\n    return Object.entries(ops)\n      .sort((i1, i2) => +i1[0] - +i2[0]) // Sort by index\n      .map(entry => entry[1]);\n  }\n\n  /**\n   * Applies the stack changes specified by the stack operation.\n   *\n   * @param stack The current stack\n   * @param op The operation\n   * @returns The new stack\n   */\n  private updateStack(stack: DecoratedRange[], op: StackOp): DecoratedRange[] {\n    return stack\n      .filter(item => !op.removed.includes(item))\n      // Note - A new array is created by the above filter statement\n      // so it is safe to modify it with concat\n      .concat(op.added);\n  }\n\n  /**\n   * Normalizes and filters valid decorated ranges.\n   *\n   * @returns The normalized ranges with properties filled\n   */\n  private getNormalizedDecorations(): DecoratedRange[] {\n    const { decorations = [], text: { length } } = this;\n    return decorations\n      // Turn partials into full objects\n      .map(range => normalize(range, length))\n      // Remove empty and out of bounds ranges\n      .filter(range => range.start (\n      (result, range) => result.concat(range.classes),\n      []\n    );\n    const styles = decorations.reduce(\n      (result, range) => ({ ...result, ...range.styles }),\n      {}\n    );\n\n    return { text, classes, styles };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StackOp.html":{"url":"interfaces/StackOp.html","title":"interface - StackOp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StackOp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an operation to apply to the stack when building segments\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            added\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            removed\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        added\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        added:         DecoratedRange[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DecoratedRange[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Decorations to add\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text index at which the changes takes effect\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removed:         DecoratedRange[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DecoratedRange[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Decorations to remove\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { DecoratedRange, normalize } from './decorated-range';\n\n\n// Reexport DecoratedRange\nexport { DecoratedRange };\n\n/** A segment of text with additional classes and styles */\ninterface Segment {\n  /** The piece of text to display */\n  text: string;\n  /** Classes to add to the text container */\n  classes: string[];\n  /** Styles to set on the text container */\n  styles: Record;\n}\n\n/** Represents an operation to apply to the stack when building segments */\ninterface StackOp {\n  /** Text index at which the changes takes effect */\n  index: number;\n  /** Decorations to add */\n  added: DecoratedRange[];\n  /** Decorations to remove */\n  removed: DecoratedRange[];\n}\n\n\n/**\n * Class to display text with additional styling on ranges of the text.\n */\n@Component({\n  selector: 'ccf-decorated-text',\n  templateUrl: './decorated-text.component.html',\n  styleUrls: ['./decorated-text.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DecoratedTextComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-decorated-text';\n\n  /**\n   * Text to display\n   */\n  @Input() text: string;\n\n  /**\n   * Classes and styles to apply to ranges of the text.\n   * For overlapping ranges later values takes precedence.\n   */\n  @Input() decorations?: Partial[];\n\n  /**\n   * Computed segments of text with decorations resolved.\n   */\n  segments: Segment[] = [];\n\n  /**\n   * Apply changes and recalculate cached values.\n   *\n   * @param changes Instance properties that have changed\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('text' in changes || 'decorations' in changes) {\n      this.segments = this.createSegments();\n    }\n  }\n\n  /**\n   * Creates an array of decorated text segments based on\n   * the latest text and decorations.\n   *\n   * @returns The new segments\n   */\n  private createSegments(): Segment[] {\n    const { text } = this;\n    if (!text) { // No styling can be applied to empty text fields\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const decorations = this.getNormalizedDecorations();\n    if (decorations.length === 0) { // No styling available\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const stackOps = this.createStackOps(decorations);\n    const segments: Segment[] = [];\n    let stack: DecoratedRange[] = [];\n    let lastIndex = 0;\n\n    // If the first op starts at index zero apply stack changes\n    // but don't push a segment by shifing out the first op\n    if (stackOps[0].index === 0) {\n      stack = this.updateStack(stack, stackOps.shift() as StackOp);\n    }\n\n    // Build segments based on the stack operations\n    for (const op of stackOps) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex, op.index), stack\n      ));\n\n      lastIndex = op.index;\n      stack = this.updateStack(stack, op);\n    }\n\n    // Push the last segment if not already done\n    if (lastIndex !== text.length) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex), stack\n      ));\n    }\n\n    return segments;\n  }\n\n  /**\n   * Creates an ordered array of stack operations to apply when building segments.\n   *\n   * @param ranges The decorated ranges to apply\n   * @returns The array of operations\n   */\n  private createStackOps(ranges: DecoratedRange[]): StackOp[] {\n    const ops: Record = {};\n    const getOp = (index: number) => (ops[index] ??= { index, added: [], removed: [] });\n\n    for (const range of ranges) {\n      getOp(range.start).added.push(range);\n      getOp(range.end).removed.push(range);\n    }\n\n    return Object.entries(ops)\n      .sort((i1, i2) => +i1[0] - +i2[0]) // Sort by index\n      .map(entry => entry[1]);\n  }\n\n  /**\n   * Applies the stack changes specified by the stack operation.\n   *\n   * @param stack The current stack\n   * @param op The operation\n   * @returns The new stack\n   */\n  private updateStack(stack: DecoratedRange[], op: StackOp): DecoratedRange[] {\n    return stack\n      .filter(item => !op.removed.includes(item))\n      // Note - A new array is created by the above filter statement\n      // so it is safe to modify it with concat\n      .concat(op.added);\n  }\n\n  /**\n   * Normalizes and filters valid decorated ranges.\n   *\n   * @returns The normalized ranges with properties filled\n   */\n  private getNormalizedDecorations(): DecoratedRange[] {\n    const { decorations = [], text: { length } } = this;\n    return decorations\n      // Turn partials into full objects\n      .map(range => normalize(range, length))\n      // Remove empty and out of bounds ranges\n      .filter(range => range.start (\n      (result, range) => result.concat(range.classes),\n      []\n    );\n    const styles = decorations.reduce(\n      (result, range) => ({ ...result, ...range.styles }),\n      {}\n    );\n\n    return { text, classes, styles };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StoreDebugComponent.html":{"url":"components/StoreDebugComponent.html","title":"component - StoreDebugComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StoreDebugComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts\n\n\n\n    \n        Description\n    \n    \n        Simple component for displaying the current values in the data store.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-store-debug\n            \n\n            \n                styleUrls\n                ./store-debug.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./store-debug.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Private\n                                root\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:37\n                            \n                        \n\n                \n                    \n                            Creates an instance of store debug component.\nSets up the store data listeners.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The data store.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Change detection for this component.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-store-debug\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-store-debug'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:58\n                \n            \n\n\n            \n                \n                    Cleans up subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-store-debug'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record>\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:34\n                        \n                    \n\n            \n                \n                    Latest store data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:37\n                        \n                    \n\n            \n                \n                    Subscriptions managed by this component\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:26\n                                \n                            \n                    \n                        \n                                Gets the store data as a list of state name to key-value pairs\n\n\n                                \n                                    Returns :         KVList\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnDestroy, ChangeDetectorRef, HostBinding } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { Subscription } from 'rxjs';\n\n/** Key-Value pair */\nexport type KVPair = [string, T];\n/** Array of Key-Value pairs */\nexport type KVList = KVPair[];\n\n/**\n * Simple component for displaying the current values in the data store.\n */\n@Component({\n  selector: 'ccf-store-debug',\n  templateUrl: './store-debug.component.html',\n  styleUrls: ['./store-debug.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StoreDebugComponent implements OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-store-debug';\n\n  /**\n   * Gets the store data as a list of state name to key-value pairs\n   */\n  get data(): KVList {\n    const states: KVList> = Object.entries(this.root);\n    const stateValues: KVList = states.map(([key, values]) => [key, Object.entries(values)]);\n    const statesWithData = stateValues.filter(([_key, values]) => values.length > 0);\n    return statesWithData;\n  }\n\n  /** Latest store data */\n  private root: Record> = {};\n\n  /** Subscriptions managed by this component */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of store debug component.\n   * Sets up the store data listeners.\n   *\n   * @param store The data store.\n   * @param cdr Change detection for this component.\n   */\n  constructor(store: Store, cdr: ChangeDetectorRef) {\n    const sub = store.subscribe(root => {\n      this.root = root as Record>;\n      cdr.markForCheck();\n    });\n\n    this.subscriptions.add(sub);\n  }\n\n  /**\n   * Cleans up subscriptions\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  {{ state[0] }}\n  \n    \n      {{ kv[0] }}: {{ kv[1] | json }}\n    \n  \n\n\n    \n\n    \n                \n                    ./store-debug.component.scss\n                \n                :host {\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ state[0] }}            {{ kv[0] }}: {{ kv[1] | json }}      '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'StoreDebugComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreDebugModule.html":{"url":"modules/StoreDebugModule.html","title":"module - StoreDebugModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreDebugModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StoreDebugModule\n\n\n\ncluster_StoreDebugModule_declarations\n\n\n\ncluster_StoreDebugModule_exports\n\n\n\n\nStoreDebugComponent\n\nStoreDebugComponent\n\n\n\nStoreDebugModule\n\nStoreDebugModule\n\nStoreDebugModule -->\n\nStoreDebugComponent->StoreDebugModule\n\n\n\n\n\nStoreDebugComponent \n\nStoreDebugComponent \n\nStoreDebugComponent  -->\n\nStoreDebugModule->StoreDebugComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/store-debug/store-debug.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StoreDebugComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StoreDebugComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StoreDebugComponent } from './store-debug.component';\n\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [StoreDebugComponent],\n  exports: [StoreDebugComponent]\n})\nexport class StoreDebugModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextSearchComponent.html":{"url":"components/TextSearchComponent.html","title":"component - TextSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n\n\n\n    \n        Description\n    \n    \n        A text search bar with optional autocompletion functionality.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-text-search\n            \n\n            \n                styleUrls\n                ./text-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Readonly\n                                controller\n                            \n                            \n                                    Readonly\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                getOptions\n                            \n                            \n                                optionDisplay\n                            \n                            \n                                optionId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoCompleter\n                            \n                            \n                                maxOptions\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                optionSelected\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultMaxOptions: number)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:100\n                            \n                        \n\n                \n                    \n                            Creates an instance of text search component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultMaxOptions\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The default value for maxOptions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoCompleter\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:76\n                            \n                        \n                \n                    \n                        Function providing the autocomplete suggestions.\nReceives the latest search bar text and the maximum of suggestions to provide.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxOptions\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:70\n                            \n                        \n                \n                    \n                        Maximum number of autocomplete suggestions to show simultaneously\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Search...'\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:53\n                            \n                        \n                \n                    \n                        Placeholder text for the search bar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:59\n                            \n                        \n                \n                    \n                        The text to show on the search bar\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        optionSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:86\n                            \n                        \n                \n                    \n                        Emits when an autocomplete option has been selected\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:81\n                            \n                        \n                \n                    \n                        Emits when the search bar text changes\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-text-search\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-text-search'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:48\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(search: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:120\n                \n            \n\n\n            \n                \n                    Fetches the latest autocomplete suggestions for the provided search text.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    search\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The search text to find suggestions for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The found suggestions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionDisplay\n                        \n                    \n                \n            \n            \n                \noptionDisplay(option: AutoCompleteOption | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:139\n                \n            \n\n\n            \n                \n                    Text to show in search bar when an autocomplete option is selected.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                AutoCompleteOption | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The autocomplete option\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The displayed text\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionId\n                        \n                    \n                \n            \n            \n                \noptionId(_index: number, option: AutoCompleteOption)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:150\n                \n            \n\n\n            \n                \n                    Gets an unique identifier for an autocomplete option object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Unused\n\n                                    \n                                \n                                \n                                    option\n                                    \n                                                AutoCompleteOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The option object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-text-search'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:48\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        controller\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:91\n                        \n                    \n\n            \n                \n                    Form controller for search bar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (this.controller.valueChanges as Observable).pipe(\n    startWith(''),\n    distinctUntilChanged(),\n    switchMap(this.getOptions)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:96\n                        \n                    \n\n            \n                \n                    Emits the latest autocomplete suggestions\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:59\n                                \n                            \n                    \n                        \n                                The text to show on the search bar\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:63\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Inject, InjectionToken, Input, Output,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { bind as Bind } from 'bind-decorator';\nimport { from, Observable, ObservableInput } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, switchMap, take } from 'rxjs/operators';\n\nimport { DecoratedRange } from '../decorated-text/decorated-range';\n\n\n/** A single suggestion to show in autocomplete  */\nexport interface AutoCompleteOption {\n  /** A unique id */\n  id: unknown;\n  /** The displayed label */\n  label: string;\n  /** Optional styling of the label */\n  decorations?: Partial[];\n}\n\n/**\n * Token to provide a default for the maximum number of\n * autocomplete suggestions to show at the same time.\n */\nexport const DEFAULT_MAX_OPTIONS = new InjectionToken(\n  'Maximum number of autocomplete options displayed',\n  {\n    providedIn: 'root',\n    factory(): number {\n      return 10;\n    }\n  }\n);\n\n\n/**\n * A text search bar with optional autocompletion functionality.\n */\n@Component({\n  selector: 'ccf-text-search',\n  templateUrl: './text-search.component.html',\n  styleUrls: ['./text-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TextSearchComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-text-search';\n\n  /**\n   * Placeholder text for the search bar\n   */\n  @Input() placeholder = 'Search...';\n\n  /**\n   * The text to show on the search bar\n   */\n  @Input()\n  get value(): string {\n    return this.controller.value as string;\n  }\n\n  set value(val: string) {\n    this.controller.setValue(val, { emitEvent: false });\n  }\n\n  /**\n   * Maximum number of autocomplete suggestions to show simultaneously\n   */\n  @Input() maxOptions?: number;\n\n  /**\n   * Function providing the autocomplete suggestions.\n   * Receives the latest search bar text and the maximum of suggestions to provide.\n   */\n  @Input() autoCompleter?: (search: string, max: number) => ObservableInput;\n\n  /**\n   * Emits when the search bar text changes\n   */\n  @Output() readonly valueChange: Observable;\n\n  /**\n   * Emits when an autocomplete option has been selected\n   */\n  @Output() readonly optionSelected = new EventEmitter();\n\n  /**\n   * Form controller for search bar\n   */\n  readonly controller = new FormControl();\n\n  /**\n   * Emits the latest autocomplete suggestions\n   */\n  readonly options = (this.controller.valueChanges as Observable).pipe(\n    startWith(''),\n    distinctUntilChanged(),\n    switchMap(this.getOptions)\n  );\n\n  /**\n   * Creates an instance of text search component.\n   *\n   * @param defaultMaxOptions The default value for `maxOptions`\n   */\n  constructor(\n    @Inject(DEFAULT_MAX_OPTIONS) private readonly defaultMaxOptions: number\n  ) {\n    this.valueChange = this.controller.valueChanges;\n  }\n\n  /**\n   * Fetches the latest autocomplete suggestions for the provided search text.\n   *\n   * @param search The search text to find suggestions for\n   * @returns The found suggestions\n   */\n  @Bind\n  private async getOptions(search: string): Promise {\n    const { autoCompleter, maxOptions = this.defaultMaxOptions } = this;\n    if (!autoCompleter || maxOptions  array.length \n    \n\n    \n        \n  \n    \n      \n    \n\n    \n\n    \n      \n        \n        \n      \n    \n\n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./text-search.component.scss\n                \n                :host {\n  display: block;\n\n  .form .form-field {\n    width: 100%;\n\n    .input {\n      margin-left: 0.5rem;\n    }\n  }\n\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-wrapper {\n      margin: 0;\n\n      .mat-form-field-flex {\n        align-items: center;\n\n        .mat-form-field-infix {\n          height: 3rem;\n          border: none;\n        }\n\n        .mat-form-field-suffix {\n          top: 0;\n          border: none;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TextSearchModule.html":{"url":"modules/TextSearchModule.html","title":"module - TextSearchModule","body":"\n                   \n\n\n\n\n    Modules\n    TextSearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TextSearchModule\n\n\n\ncluster_TextSearchModule_declarations\n\n\n\ncluster_TextSearchModule_imports\n\n\n\ncluster_TextSearchModule_exports\n\n\n\n\nTextSearchComponent\n\nTextSearchComponent\n\n\n\nTextSearchModule\n\nTextSearchModule\n\nTextSearchModule -->\n\nTextSearchComponent->TextSearchModule\n\n\n\n\n\nMatPrefix \n\nMatPrefix \n\nMatPrefix  -->\n\nTextSearchModule->MatPrefix \n\n\n\n\n\nMatSuffix \n\nMatSuffix \n\nMatSuffix  -->\n\nTextSearchModule->MatSuffix \n\n\n\n\n\nTextSearchComponent \n\nTextSearchComponent \n\nTextSearchComponent  -->\n\nTextSearchModule->TextSearchComponent \n\n\n\n\n\nDecoratedTextModule\n\nDecoratedTextModule\n\nTextSearchModule -->\n\nDecoratedTextModule->TextSearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/text-search/text-search.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TextSearchComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DecoratedTextModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MatPrefix\n                        \n                        \n                            MatSuffix\n                        \n                        \n                            TextSearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule, MatPrefix, MatSuffix } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { DecoratedTextModule } from '../decorated-text/decorated-text.module';\nimport { TextSearchComponent } from './text-search.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n\n    DecoratedTextModule\n  ],\n  declarations: [TextSearchComponent],\n  exports: [\n    TextSearchComponent,\n\n    // Reexport prefix/suffix markers\n    MatPrefix,\n    MatSuffix\n  ]\n})\nexport class TextSearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrackingPopupComponent.html":{"url":"components/TrackingPopupComponent.html","title":"component - TrackingPopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TrackingPopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-tracking-popup\n            \n\n            \n                styleUrls\n                ./tracking-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tracking-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                container\n                            \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                            \n                                showButton\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    allowTelemetry\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, consentService: ConsentService, data: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-tracking-popup\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tracking-popup'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showButton\n                        \n                    \n                \n            \n            \n                \nshowButton(button: \"opt-in\" | \"opt-out\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    button\n                                    \n                                            \"opt-in\" | \"opt-out\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit(entry: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tracking-popup'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_SNACK_BAR_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        allowTelemetry\n                    \n                \n\n                \n                    \n                        getallowTelemetry()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:15\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\nimport { ConsentService, Consent } from 'ccf-shared/analytics';\n\n\n@Component({\n  selector: 'ccf-tracking-popup',\n  templateUrl: './tracking-popup.component.html',\n  styleUrls: ['./tracking-popup.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TrackingPopupComponent {\n  @HostBinding('class') readonly clsName = 'ccf-tracking-popup';\n\n  get allowTelemetry(): Consent {\n    return this.consentService.consent;\n  }\n\n  container: HTMLElement;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  constructor(elementRef: ElementRef, readonly consentService: ConsentService, @Inject(MAT_SNACK_BAR_DATA) public data: any) {\n    this.container = elementRef.nativeElement;\n  }\n\n  dismiss(): void {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    this.data.preClose();\n  }\n\n  submit(entry: boolean): void {\n    this.consentService.setConsent(entry ? 'given' : 'rescinded');\n    this.dismiss();\n  }\n\n  showButton(button: 'opt-in' | 'opt-out'): boolean {\n    const { allowTelemetry } = this;\n    if (allowTelemetry === 'not-set') {\n      return true;\n    } else {\n      return button === 'opt-in' ? allowTelemetry === 'rescinded' : allowTelemetry === 'given';\n    }\n  }\n}\n\n    \n\n    \n        We log usage to improve this service.\n\n  {{allowTelemetry === 'not-set' ? 'I understand' : 'Opt in'}}\n\nOpt out\n    \n\n    \n                \n                    ./tracking-popup.component.scss\n                \n                :host {\n  display: flex;\n  align-items: center;\n  min-width: 400px;\n  color: rgba(255, 255, 255, 0.7);\n  background: #323232;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n  z-index: 9999;\n\n  p {\n    margin: 24px;\n  }\n\n  button {\n    margin: 1rem;\n    min-width: 6rem;\n    background-color: #007cbe;\n    display: flex;\n    justify-content: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'We log usage to improve this service.  {{allowTelemetry === \\'not-set\\' ? \\'I understand\\' : \\'Opt in\\'}}Opt out'\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'TrackingPopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrackingPopupModule.html":{"url":"modules/TrackingPopupModule.html","title":"module - TrackingPopupModule","body":"\n                   \n\n\n\n\n    Modules\n    TrackingPopupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TrackingPopupModule\n\n\n\ncluster_TrackingPopupModule_exports\n\n\n\ncluster_TrackingPopupModule_declarations\n\n\n\n\nTrackingPopupComponent\n\nTrackingPopupComponent\n\n\n\nTrackingPopupModule\n\nTrackingPopupModule\n\nTrackingPopupModule -->\n\nTrackingPopupComponent->TrackingPopupModule\n\n\n\n\n\nTrackingPopupComponent \n\nTrackingPopupComponent \n\nTrackingPopupComponent  -->\n\nTrackingPopupModule->TrackingPopupComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TrackingPopupComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TrackingPopupComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TrackingPopupComponent } from './tracking-popup.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule\n  ],\n  declarations: [TrackingPopupComponent],\n  exports: [TrackingPopupComponent]\n})\nexport class TrackingPopupModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TrackingState.html":{"url":"injectables/TrackingState.html","title":"injectable - TrackingState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TrackingState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/analytics/tracking.state.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setAllowTelemetry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setAllowTelemetry\n                        \n                    \n                \n            \n            \n                \nsetAllowTelemetry(allowTelemetry: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/analytics/tracking.state.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    allowTelemetry\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\n\nexport interface TrackingStateModel {\n  allowTelemetry?: boolean;\n}\n\nexport const LOCAL_STORAGE_ALLOW_TELEMETRY_KEY = 'ALLOW_TELEMETRY';\nexport const INITIAL_TELEMETRY_SETTING = getTelemetryStorageSetting();\n\nfunction getTelemetryStorageSetting(): boolean | undefined {\n  const value = localStorage.getItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY);\n  return value === null ? undefined : value.toLowerCase() === 'true';\n}\n\n@StateRepository()\n@State({\n  name: 'tracking',\n  defaults: {\n    allowTelemetry: INITIAL_TELEMETRY_SETTING\n  }\n})\n@Injectable()\nexport class TrackingState extends NgxsImmutableDataRepository {\n  @DataAction()\n  setAllowTelemetry(allowTelemetry: boolean): void {\n    const oldValue = getTelemetryStorageSetting();\n    localStorage.setItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY, allowTelemetry.toString());\n    this.ctx.patchState({ allowTelemetry });\n\n    if (oldValue !== undefined || allowTelemetry === false) {\n      // This ensures that if telemetry is disabled that it _WONT_ send anything to Google Analytics\n      location.reload();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrackingStateModel.html":{"url":"interfaces/TrackingStateModel.html","title":"interface - TrackingStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TrackingStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/analytics/tracking.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            allowTelemetry\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowTelemetry\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowTelemetry:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\n\nexport interface TrackingStateModel {\n  allowTelemetry?: boolean;\n}\n\nexport const LOCAL_STORAGE_ALLOW_TELEMETRY_KEY = 'ALLOW_TELEMETRY';\nexport const INITIAL_TELEMETRY_SETTING = getTelemetryStorageSetting();\n\nfunction getTelemetryStorageSetting(): boolean | undefined {\n  const value = localStorage.getItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY);\n  return value === null ? undefined : value.toLowerCase() === 'true';\n}\n\n@StateRepository()\n@State({\n  name: 'tracking',\n  defaults: {\n    allowTelemetry: INITIAL_TELEMETRY_SETTING\n  }\n})\n@Injectable()\nexport class TrackingState extends NgxsImmutableDataRepository {\n  @DataAction()\n  setAllowTelemetry(allowTelemetry: boolean): void {\n    const oldValue = getTelemetryStorageSetting();\n    localStorage.setItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY, allowTelemetry.toString());\n    this.ctx.patchState({ allowTelemetry });\n\n    if (oldValue !== undefined || allowTelemetry === false) {\n      // This ensures that if telemetry is disabled that it _WONT_ send anything to Google Analytics\n      location.reload();\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkerCCFDatabaseDataSourceService.html":{"url":"injectables/WorkerCCFDatabaseDataSourceService.html","title":"injectable - WorkerCCFDatabaseDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WorkerCCFDatabaseDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CCFDatabaseDataSourceBaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                database$\n                            \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createDatabase\n                            \n                            \n                                    Protected\n                                    Abstract\n                                createWorker\n                            \n                            \n                                    Private\n                                    Async\n                                connectDatabase\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDatabase(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:65\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CCFDatabaseManager\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        createWorker\n                        \n                    \n                \n            \n            \n                \n                    \n                    createWorker(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Worker\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        connectDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectDatabase(manager: CCFDatabaseManager, config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    manager\n                                    \n                                                CCFDatabaseManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        database$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         CCFDatabaseDataSourceBaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         CCFDatabaseDataSourceBaseService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/XYZTriplet.html":{"url":"interfaces/XYZTriplet.html","title":"interface - XYZTriplet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  XYZTriplet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/body-ui/body-ui.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                                \n                                        \n                                            z\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit, Component, ElementRef, EventEmitter, HostBinding, Input, OnDestroy, Output, ViewChild,\n} from '@angular/core';\nimport { BodyUI, NodeClickEvent, NodeDragEvent, SpatialSceneNode } from 'ccf-body-ui';\nimport { Subscription } from 'rxjs';\n\n\ninterface XYZTriplet {\n  x: T;\n  y: T;\n  z: T;\n}\n\n/**\n * Component that handles displaying the 3D models in the stage\n */\n@Component({\n  selector: 'ccf-body-ui',\n  templateUrl: './body-ui.component.html',\n  styleUrls: ['./body-ui.component.scss']\n})\nexport class BodyUiComponent implements AfterViewInit, OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-body-ui';\n\n  @Input()\n  get scene(): SpatialSceneNode[] {\n    return this._scene;\n  }\n\n  set scene(nodes: SpatialSceneNode[]) {\n    this._scene = nodes;\n    this.bodyUI?.setScene(nodes);\n  }\n\n  @Input()\n  get rotation(): number {\n    return this._rotation;\n  }\n\n  set rotation(value: number) {\n    this._rotation = value;\n    this.bodyUI?.setRotation(value);\n  }\n\n  @Input()\n  get rotationX(): number {\n    return this._rotationX;\n  }\n\n  set rotationX(value: number) {\n    this._rotationX = value;\n    this.bodyUI?.setRotationX(value);\n  }\n\n  @Input()\n  get zoom(): number {\n    return this._zoom;\n  }\n\n  set zoom(value: number) {\n    this._zoom = value;\n    this.bodyUI?.setZoom(value);\n  }\n\n  @Input()\n  get target(): [number, number, number] {\n    return this._target;\n  }\n\n  set target(value: [number, number, number]) {\n    this._target = value;\n    this.bodyUI?.setTarget(value);\n  }\n\n  @Input()\n  get bounds(): XYZTriplet {\n    return this._bounds;\n  }\n\n  set bounds(value: XYZTriplet) {\n    this._bounds = value;\n    this.zoomToBounds(value);\n  }\n\n  @Input()\n  get camera(): string {\n    return this._camera;\n  }\n\n  set camera(value: string) {\n    this._camera = value;\n  }\n\n  @Output()\n  readonly rotationChange = new EventEmitter();\n\n  @Output()\n  readonly nodeDrag = new EventEmitter();\n\n  @Output()\n  readonly nodeClick = new EventEmitter();\n\n  @Output()\n  readonly nodeHoverStart = new EventEmitter();\n\n  @Output()\n  readonly nodeHoverStop = new EventEmitter();\n\n  @Output()\n  readonly initialized = new EventEmitter();\n\n  @Input()\n  get interactive(): boolean {\n    return this._interactive;\n  }\n\n  set interactive(value: boolean) {\n    this._interactive = value;\n    if (this.bodyUI) {\n      this.recreateBodyUI();\n    }\n  }\n\n  private _interactive = true;\n  private _rotation = 0;\n  private _rotationX = 0;\n  private _zoom = 9.5;\n  private _target: [number, number, number] = [0, 0, 0];\n  private _bounds: XYZTriplet;\n  private _scene: SpatialSceneNode[] = [];\n  private subscriptions: Subscription[] = [];\n  private _camera: string;\n\n  /**\n   * Instance of the body UI class for rendering the deckGL scene\n   */\n  bodyUI: BodyUI;\n\n  /**\n   * Reference to the div we are using to mount the body UI to.\n   */\n  @ViewChild('bodyCanvas', { read: ElementRef }) bodyCanvas: ElementRef;\n\n  /**\n   * Performs setup required after initialization\n   */\n  ngAfterViewInit(): void {\n    this.setupBodyUI();\n  }\n\n  zoomToBounds(bounds: XYZTriplet, margin = { x: 48, y: 48 }): void {\n    if (this.bodyCanvas) {\n      const { width, height } = this.bodyCanvas.nativeElement;\n      const pxRatio = window.devicePixelRatio;\n      const zoom = Math.min(\n        Math.log2((width - margin.x) / pxRatio / bounds.x),\n        Math.log2((height - margin.y) / pxRatio / bounds.y)\n      );\n      this.zoom = zoom;\n    }\n  }\n\n  /**\n   * Set up required to render the body UI with the scene nodes.\n   */\n  private async setupBodyUI(): Promise {\n    const canvas = this.bodyCanvas.nativeElement;\n    const bodyUI = new BodyUI({\n      id: 'body-ui',\n      canvas,\n      zoom: this.zoom,\n      target: [0, 0, 0],\n      rotation: 0,\n      minRotationX: -75,\n      maxRotationX: 75,\n      interactive: this.interactive,\n      camera: this.camera\n    });\n    canvas.addEventListener('contextmenu', evt => evt.preventDefault());\n    await bodyUI.initialize();\n    this.bodyUI = bodyUI;\n    (window as unknown as { bodyUI: unknown }).bodyUI = bodyUI;\n    if (this.scene?.length > 0) {\n      this.bodyUI.setScene(this.scene);\n    }\n    if (this.bounds) {\n      this.zoomToBounds(this.bounds);\n    }\n    this.subscriptions = [\n      this.bodyUI.sceneRotation$.subscribe((rotation) => this.rotationChange.next(rotation)),\n      this.bodyUI.nodeDrag$.subscribe((event) => this.nodeDrag.emit(event)),\n      this.bodyUI.nodeClick$.subscribe((event) => this.nodeClick.emit(event)),\n      this.bodyUI.nodeHoverStart$.subscribe((event) => this.nodeHoverStart.emit(event)),\n      this.bodyUI.nodeHoverStop$.subscribe((event) => this.nodeHoverStop.emit(event))\n    ];\n    this.initialized.emit();\n  }\n\n  private recreateBodyUI(): void {\n    this.clearSubscriptions();\n    this.bodyUI.finalize();\n    this.setupBodyUI();\n  }\n\n  private clearSubscriptions(): void {\n    this.subscriptions.forEach(s => s.unsubscribe());\n    this.subscriptions = [];\n  }\n\n  ngOnDestroy(): void {\n    this.clearSubscriptions();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Common Coordinate Framework (CCF) User Interfaces\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            interface\n            AnalyticsOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            function\n            initCommands\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            function\n            toAttributes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            variable\n            EAGERLY_LOADED_SERVICES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/consent.service.ts\n            \n            injectable\n            ConsentService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts\n            \n            injectable\n            GoogleAnalyticsSyncService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n            \n            injectable\n            LocalStorageSyncService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n            \n            variable\n            LOCAL_STORAGE_CONSENT_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/filter-nulls.ts\n            \n            function\n            filterNulls\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/flatten.ts\n            \n            function\n            flatten\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/inner-map.ts\n            \n            function\n            innerMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            interface\n            PluckUniqueOptions\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            variable\n            DEFAULT_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/src/public-api.ts\n            \n            variable\n            placeholder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/mouse-position-tracker.module.ts\n            \n            function\n            trackMousePosition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            injectable\n            TrackingState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            interface\n            TrackingStateModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            function\n            getTelemetryStorageSetting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            variable\n            INITIAL_TELEMETRY_SETTING\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            variable\n            LOCAL_STORAGE_ALLOW_TELEMETRY_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/body-ui/body-ui.component.ts\n            \n            component\n            BodyUiComponent\n            \n                20 %\n                (7/34)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/body-ui/body-ui.component.ts\n            \n            interface\n            XYZTriplet\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n            \n            interface\n            DecoratedRange\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n            \n            function\n            normalize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n            \n            function\n            resolveIndex\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n            \n            component\n            DecoratedTextComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n            \n            interface\n            Segment\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n            \n            interface\n            StackOp\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts\n            \n            component\n            InfoButtonComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n            \n            injectable\n            InfoButtonService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n            \n            interface\n            DocumentationContent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n            \n            variable\n            documentationURL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n            \n            component\n            InfoDialogComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n            \n            interface\n            InfoDialogData\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts\n            \n            component\n            OpacitySliderComponent\n            \n                78 %\n                (11/14)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            component\n            OrganSelectorComponent\n            \n                76 %\n                (23/30)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            interface\n            OrganInfo\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            variable\n            ALL_ORGANS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            variable\n            ALL_POSSIBLE_ORGANS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts\n            \n            component\n            StoreDebugComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n            \n            component\n            TextSearchComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n            \n            interface\n            AutoCompleteOption\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n            \n            variable\n            DEFAULT_MAX_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts\n            \n            component\n            TrackingPopupComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/config/global-config.state.ts\n            \n            injectable\n            GlobalConfigState\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts\n            \n            directive\n            NumberDirective\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            injectable\n            ApiEndpointDataSourceService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            interface\n            ApiEndpointDataSourceOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            interface\n            DefaultParams\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            interface\n            FilterParams\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            cast\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            filterToParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            rangeToMinMax\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            spatialSceneNodeReviver\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            variable\n            buster$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            variable\n            CACHE_CONFIG_NO_PARAMS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            variable\n            CACHE_CONFIG_PARAMS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            injectable\n            CCFDatabaseDataSourceBaseService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            injectable\n            CCFDatabaseDataSourceService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            injectable\n            WorkerCCFDatabaseDataSourceService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            interface\n            CCFDatabaseManager\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.service.ts\n            \n            injectable\n            DataSourceService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.ts\n            \n            class\n            DelegateDataSource\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.ts\n            \n            class\n            ForwardingDataSource\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.ts\n            \n            interface\n            DataSource\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts\n            \n            injectable\n            InjectorDelegateDataSourceService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/globals/globals.service.ts\n            \n            injectable\n            GlobalsService\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/globals/globals.service.ts\n            \n            variable\n            global\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/common : ^15.126.1\n        \n            @angular/animations : ^12.1.1\n        \n            @angular/cdk : ^12.1.1\n        \n            @angular/common : ^12.1.1\n        \n            @angular/compiler : ^12.1.1\n        \n            @angular/core : ^12.1.1\n        \n            @angular/elements : ^12.1.1\n        \n            @angular/forms : ^12.1.1\n        \n            @angular/material : ^12.1.3\n        \n            @angular/platform-browser : ^12.1.1\n        \n            @angular/platform-browser-dynamic : ^12.1.1\n        \n            @angular/router : ^12.1.1\n        \n            @angular/youtube-player : ^12.1.1\n        \n            @comunica/query-sparql-rdfjs : ^2.2.0\n        \n            @deck.gl/core : ^8.5.7\n        \n            @deck.gl/geo-layers : ^8.5.7\n        \n            @deck.gl/layers : ^8.5.7\n        \n            @deck.gl/mesh-layers : ^8.5.7\n        \n            @loaders.gl/core : ^3.0.12\n        \n            @loaders.gl/draco : ^3.0.12\n        \n            @loaders.gl/gltf : ^3.0.12\n        \n            @luma.gl/core : ^8.5.7\n        \n            @math.gl/core : ^3.5.5\n        \n            @ngxs-labs/data : ^6.2.0\n        \n            @ngxs/logger-plugin : ^3.7.1\n        \n            @ngxs/storage-plugin : ^3.7.1\n        \n            @ngxs/store : ^3.7.1\n        \n            @rdfjs/data-model : ^1.2.0\n        \n            @types/lru-cache : ^5.1.1\n        \n            @webcomponents/webcomponentsjs : ^2.5.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.19.0\n        \n            cannon-es : ^0.18.0\n        \n            comlink : ^4.3.0\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.7.2\n        \n            dotenv : ^10.0.0\n        \n            express : ^4.17.1\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^10.0.0\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^4.6.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.0.1\n        \n            jsonld : ^5.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : ^6.0.0\n        \n            n3 : ^1.16.0\n        \n            ng5-slider : ^1.2.6\n        \n            ngx-google-analytics : ^11.2.1\n        \n            ngx-markdown : ^12.0.1\n        \n            node-fetch : ^2.6.7\n        \n            qs : ^6.10.2\n        \n            rdf-literal : ^1.2.0\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^3.6.0\n        \n            rxjs : ^6.6.7\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^6.5.1\n        \n            ts-cacheable : ^1.0.6\n        \n            tslib : ^2.1.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cast   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            filterNulls   (projects/.../filter-nulls.ts)\n                        \n                        \n                            filterToParams   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            flatten   (projects/.../flatten.ts)\n                        \n                        \n                            getTelemetryStorageSetting   (projects/.../tracking.state.ts)\n                        \n                        \n                            initCommands   (projects/.../analytics.module.ts)\n                        \n                        \n                            innerMap   (projects/.../inner-map.ts)\n                        \n                        \n                            normalize   (projects/.../decorated-range.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            rangeToMinMax   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            resolveIndex   (projects/.../decorated-range.ts)\n                        \n                        \n                            spatialSceneNodeReviver   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            toAttributes   (projects/.../analytics.module.ts)\n                        \n                        \n                            trackMousePosition   (projects/.../mouse-position-tracker.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cast\n                        \n                    \n                \n            \n            \n                \ncast()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterToParams\n                        \n                    \n                \n            \n            \n                \nfilterToParams(filter?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterParams\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rangeToMinMax\n                        \n                    \n                \n            \n            \n                \nrangeToMinMax(range, low, high)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    range\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    low\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    high\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinMax | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spatialSceneNodeReviver\n                        \n                    \n                \n            \n            \n                \nspatialSceneNodeReviver(nodes)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/filter-nulls.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        filterNulls\n                        \n                    \n                \n            \n            \n                \nfilterNulls()\n                \n            \n\n\n\n\n            \n                \n                    Removes all null and undefined values from a stream.\n\n\n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/flatten.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        flatten\n                        \n                    \n                \n            \n            \n                \nflatten()\n                \n            \n\n\n\n\n            \n                \n                    Flattens a single level of nested arrays.\n\n\n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/src/lib/analytics/tracking.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getTelemetryStorageSetting\n                        \n                    \n                \n            \n            \n                \ngetTelemetryStorageSetting()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     boolean | undefined\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/analytics/src/lib/analytics.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initCommands\n                        \n                    \n                \n            \n            \n                \ninitCommands(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     IGoogleAnalyticsCommand[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toAttributes\n                        \n                    \n                \n            \n            \n                \ntoAttributes(obj)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/inner-map.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        innerMap\n                        \n                    \n                \n            \n            \n                \ninnerMap(project)\n                \n            \n\n\n\n\n            \n                \n                    Maps the values of each emitted array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    project\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Mapping callback invoked for each element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        normalize\n                        \n                    \n                \n            \n            \n                \nnormalize(range, length)\n                \n            \n\n\n\n\n            \n                \n                    Produces a new range object based on the input where all properties have been normalized.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    range\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object to normalize.\n\n                                    \n                                \n                                \n                                    length\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Max length for indices.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DecoratedRange\n\n                    \n                    \n                        A new object where all undefined values have been replaced with defaults and\nwhere all indices have been constrained to the range [0, length].\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveIndex\n                        \n                    \n                \n            \n            \n                \nresolveIndex(index, length)\n                \n            \n\n\n\n\n            \n                \n                    Resolves and normalizes an index for indexing into an array of length length.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The index value to resolve. May be negative indicating an index from end.\n\n                                    \n                                \n                                \n                                    length\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The length of the object on which this index will be used.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        A positive index in range [0, length]\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, opts?)\n                \n            \n\n\n\n\n            \n                \n                    Combines the functionaliy of pluck and distinctUntilChanged\nas well as adding a shareReplay.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Additional options\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, k3, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, k3, k4, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k4\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, k3, k4, k5, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k4\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k5\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, k3, k4, k5, k6, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k4\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k5\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k6\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(...props: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(...props: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(...props: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-shared/src/lib/analytics/mouse-position-tracker.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        trackMousePosition\n                        \n                    \n                \n            \n            \n                \ntrackMousePosition(el, ga)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ga\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCommon Coordinate Framework (CCF) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the CCF-EUI, CCF-RUI, and CCF-Organ-Info.\nWebsite Links\n\nCCF Exploration User Interface (CCF-EUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nCCF Registration User Interface (CCF-RUI)\n:star2: 3.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nCCF Organ Info Component (CCF-Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nCCF API\nProduction: https://ccf-api.hubmapconsortium.org\nStaging: https://ccf-api--staging.herokuapp.com\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nCCF API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\n\nBackground and More Information\nFor more information about the Common Coordinate Framework (CCF), see the HuBMAP CCF Portal at https://hubmapconsortium.github.io/ccf/.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AnalyticsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BodyUiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DecoratedTextModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoDialogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MousePositionTrackerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NumbersOnlyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpacitySliderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganSelectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreDebugModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TextSearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrackingPopupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AnalyticsModule\n\n\n\ncluster_AnalyticsModule_providers\n\n\n\ncluster_BodyUiModule\n\n\n\ncluster_BodyUiModule_declarations\n\n\n\ncluster_BodyUiModule_exports\n\n\n\ncluster_DecoratedTextModule\n\n\n\ncluster_DecoratedTextModule_declarations\n\n\n\ncluster_DecoratedTextModule_exports\n\n\n\ncluster_InfoButtonModule\n\n\n\ncluster_InfoButtonModule_declarations\n\n\n\ncluster_InfoButtonModule_imports\n\n\n\ncluster_InfoButtonModule_exports\n\n\n\ncluster_InfoDialogModule\n\n\n\ncluster_InfoDialogModule_declarations\n\n\n\ncluster_InfoDialogModule_exports\n\n\n\ncluster_NumbersOnlyModule\n\n\n\ncluster_NumbersOnlyModule_declarations\n\n\n\ncluster_NumbersOnlyModule_exports\n\n\n\ncluster_OpacitySliderModule\n\n\n\ncluster_OpacitySliderModule_declarations\n\n\n\ncluster_OpacitySliderModule_exports\n\n\n\ncluster_OrganSelectorModule\n\n\n\ncluster_OrganSelectorModule_declarations\n\n\n\ncluster_OrganSelectorModule_exports\n\n\n\ncluster_StoreDebugModule\n\n\n\ncluster_StoreDebugModule_declarations\n\n\n\ncluster_StoreDebugModule_exports\n\n\n\ncluster_TextSearchModule\n\n\n\ncluster_TextSearchModule_declarations\n\n\n\ncluster_TextSearchModule_exports\n\n\n\ncluster_TrackingPopupModule\n\n\n\ncluster_TrackingPopupModule_declarations\n\n\n\ncluster_TrackingPopupModule_exports\n\n\n\n\nConsentService\n\nConsentService\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAnalyticsModule -->\n\nConsentService->AnalyticsModule\n\n\n\n\n\nGoogleAnalyticsSyncService\n\nGoogleAnalyticsSyncService\n\nAnalyticsModule -->\n\nGoogleAnalyticsSyncService->AnalyticsModule\n\n\n\n\n\nLocalStorageSyncService\n\nLocalStorageSyncService\n\nAnalyticsModule -->\n\nLocalStorageSyncService->AnalyticsModule\n\n\n\n\n\nBodyUiComponent\n\nBodyUiComponent\n\n\n\nBodyUiModule\n\nBodyUiModule\n\nBodyUiModule -->\n\nBodyUiComponent->BodyUiModule\n\n\n\n\n\nBodyUiComponent \n\nBodyUiComponent \n\nBodyUiComponent  -->\n\nBodyUiModule->BodyUiComponent \n\n\n\n\n\nDecoratedTextComponent\n\nDecoratedTextComponent\n\n\n\nDecoratedTextModule\n\nDecoratedTextModule\n\nDecoratedTextModule -->\n\nDecoratedTextComponent->DecoratedTextModule\n\n\n\n\n\nDecoratedTextComponent \n\nDecoratedTextComponent \n\nDecoratedTextComponent  -->\n\nDecoratedTextModule->DecoratedTextComponent \n\n\n\n\n\nTextSearchModule\n\nTextSearchModule\n\nTextSearchModule -->\n\nDecoratedTextModule->TextSearchModule\n\n\n\n\n\nInfoButtonComponent\n\nInfoButtonComponent\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nInfoButtonModule -->\n\nInfoButtonComponent->InfoButtonModule\n\n\n\n\n\nInfoButtonComponent \n\nInfoButtonComponent \n\nInfoButtonComponent  -->\n\nInfoButtonModule->InfoButtonComponent \n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoButtonModule -->\n\nInfoDialogModule->InfoButtonModule\n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nInfoDialogModule->InfoDialogComponent \n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nInfoDialogModule -->\n\nInfoDialogComponent->InfoDialogModule\n\n\n\n\n\nNumberDirective\n\nNumberDirective\n\n\n\nNumbersOnlyModule\n\nNumbersOnlyModule\n\nNumbersOnlyModule -->\n\nNumberDirective->NumbersOnlyModule\n\n\n\n\n\nNumberDirective \n\nNumberDirective \n\nNumberDirective  -->\n\nNumbersOnlyModule->NumberDirective \n\n\n\n\n\nOpacitySliderComponent\n\nOpacitySliderComponent\n\n\n\nOpacitySliderModule\n\nOpacitySliderModule\n\nOpacitySliderModule -->\n\nOpacitySliderComponent->OpacitySliderModule\n\n\n\n\n\nOpacitySliderComponent \n\nOpacitySliderComponent \n\nOpacitySliderComponent  -->\n\nOpacitySliderModule->OpacitySliderComponent \n\n\n\n\n\nOrganSelectorComponent\n\nOrganSelectorComponent\n\n\n\nOrganSelectorModule\n\nOrganSelectorModule\n\nOrganSelectorModule -->\n\nOrganSelectorComponent->OrganSelectorModule\n\n\n\n\n\nOrganSelectorComponent \n\nOrganSelectorComponent \n\nOrganSelectorComponent  -->\n\nOrganSelectorModule->OrganSelectorComponent \n\n\n\n\n\nStoreDebugComponent\n\nStoreDebugComponent\n\n\n\nStoreDebugModule\n\nStoreDebugModule\n\nStoreDebugModule -->\n\nStoreDebugComponent->StoreDebugModule\n\n\n\n\n\nStoreDebugComponent \n\nStoreDebugComponent \n\nStoreDebugComponent  -->\n\nStoreDebugModule->StoreDebugComponent \n\n\n\n\n\nTextSearchComponent\n\nTextSearchComponent\n\nTextSearchModule -->\n\nTextSearchComponent->TextSearchModule\n\n\n\n\n\nMatPrefix \n\nMatPrefix \n\nMatPrefix  -->\n\nTextSearchModule->MatPrefix \n\n\n\n\n\nMatSuffix \n\nMatSuffix \n\nMatSuffix  -->\n\nTextSearchModule->MatSuffix \n\n\n\n\n\nTextSearchComponent \n\nTextSearchComponent \n\nTextSearchComponent  -->\n\nTextSearchModule->TextSearchComponent \n\n\n\n\n\nTrackingPopupComponent\n\nTrackingPopupComponent\n\n\n\nTrackingPopupModule\n\nTrackingPopupModule\n\nTrackingPopupModule -->\n\nTrackingPopupComponent->TrackingPopupModule\n\n\n\n\n\nTrackingPopupComponent \n\nTrackingPopupComponent \n\nTrackingPopupComponent  -->\n\nTrackingPopupModule->TrackingPopupComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        12 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Consent   (projects/.../consent.service.ts)\n                        \n                        \n                            DataReviver   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            DataSourceDataType   (projects/.../data-source.ts)\n                        \n                        \n                            DataSourceLike   (projects/.../data-source.ts)\n                        \n                        \n                            DataSourceLikeMethod   (projects/.../data-source.ts)\n                        \n                        \n                            DataSourceMethod   (projects/.../data-source.ts)\n                        \n                        \n                            GlobalKey   (projects/.../globals.service.ts)\n                        \n                        \n                            GlobalThis   (projects/.../globals.service.ts)\n                        \n                        \n                            IObservableCacheConfig   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            KVList   (projects/.../store-debug.component.ts)\n                        \n                        \n                            KVPair   (projects/.../store-debug.component.ts)\n                        \n                        \n                            RequestMethod   (projects/.../api-endpoint.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-shared/analytics/src/lib/consent.service.ts\n    \n    \n        \n            \n                \n                    \n                    Consent\n                \n            \n            \n                \n                        \"not-set\" | \"given\" | \"rescinded\"\n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n    \n    \n        \n            \n                \n                    \n                    DataReviver\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IObservableCacheConfig\n                \n            \n            \n                \n                        NonNullable<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RequestMethod\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/services/data-source/data-source.ts\n    \n    \n        \n            \n                \n                    \n                    DataSourceDataType\n                \n            \n            \n                \n                            ObservedValueOf>>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataSourceLike\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataSourceLikeMethod\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataSourceMethod\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/services/globals/globals.service.ts\n    \n    \n        \n            \n                \n                    \n                    GlobalKey\n                \n            \n            \n                \n                    Type of keys allowed in the global object\n\n                \n            \n            \n                \n                        string | symbol\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GlobalThis\n                \n            \n            \n                \n                    Type of the global object\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts\n    \n    \n        \n            \n                \n                    \n                    KVList\n                \n            \n            \n                \n                    Array of Key-Value pairs\n\n                \n            \n            \n                \n                            KVPair[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    KVPair\n                \n            \n            \n                \n                    Key-Value pair\n\n                \n            \n            \n                \n                        [string, T]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALL_ORGANS   (projects/.../organ-selector.component.ts)\n                        \n                        \n                            ALL_POSSIBLE_ORGANS   (projects/.../organ-selector.component.ts)\n                        \n                        \n                            buster$   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            CACHE_CONFIG_NO_PARAMS   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            CACHE_CONFIG_PARAMS   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            DEFAULT_MAX_OPTIONS   (projects/.../text-search.component.ts)\n                        \n                        \n                            DEFAULT_OPTIONS   (projects/.../pluck-unique.ts)\n                        \n                        \n                            documentationURL   (projects/.../info-button.service.ts)\n                        \n                        \n                            EAGERLY_LOADED_SERVICES   (projects/.../analytics.module.ts)\n                        \n                        \n                            global   (projects/.../globals.service.ts)\n                        \n                        \n                            INITIAL_TELEMETRY_SETTING   (projects/.../tracking.state.ts)\n                        \n                        \n                            LOCAL_STORAGE_ALLOW_TELEMETRY_KEY   (projects/.../tracking.state.ts)\n                        \n                        \n                            LOCAL_STORAGE_CONSENT_KEY   (projects/.../local-storage-sync.service.ts)\n                        \n                        \n                            placeholder   (projects/.../public-api.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALL_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALL_POSSIBLE_ORGANS.filter(organ => organ.disabled !== true)\n                    \n                \n\n            \n                \n                    All organs which have not been disabled\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ALL_POSSIBLE_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [\n  {\n    src: 'app:skin',\n    organ: 'Skin',\n    name: 'Skin',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002097'\n  },\n  {\n    src: 'app:brain',\n    organ: 'Brain',\n    name: 'Brain',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000955'\n  },\n  {\n    disabled: true,\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000029'\n  },\n  {\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002509'\n  },\n  {\n    disabled: true,\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000970'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004548'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/FMA_54449'\n  },\n  {\n    disabled: true,\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0003889'\n  },\n  {\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001303'\n  },\n  {\n    src: 'app:fallopian-tube-right',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001302'\n  },\n  {\n    src: 'app:heart',\n    organ: 'Heart',\n    name: 'Heart',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000948'\n  },\n  {\n    disabled: true,\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002113'\n  },\n  {\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004538'\n  },\n  {\n    src: 'app:kidney-right',\n    organ: 'Kidney',\n    name: 'Kidney, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004539'\n  },\n  {\n    disabled: true,\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001465'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/FMA_24978'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/FMA_24977'\n  },\n  {\n    src: 'app:liver',\n    organ: 'Liver',\n    name: 'Liver',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002107'\n  },\n  {\n    disabled: true,\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002048'\n  },\n  {\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001004'\n  },\n  {\n    disabled: true,\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000992'\n  },\n  {\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/FMA_7214'\n  },\n  {\n    src: 'app:ovary-right',\n    organ: 'Ovary',\n    name: 'Ovary, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/FMA_7213'\n  },\n  {\n    src: 'app:pancreas',\n    organ: 'Pancreas',\n    name: 'Pancreas',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001264'\n  },\n  {\n    src: 'app:pelvis-f',\n    organ: 'Pelvis',\n    name: 'Pelvis',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001270'\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002367',\n    disabled: true\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000079'\n  },\n  {\n    src: 'app:small-intestine',\n    organ: 'Small Intestine',\n    name: 'Small Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002108'\n  },\n  {\n    src: 'app:large-intestine',\n    organ: 'Large Intestine',\n    name: 'Large Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000059'\n  },\n  {\n    src: 'app:spleen',\n    organ: 'Spleen',\n    name: 'Spleen',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002106'\n  },\n  {\n    src: 'app:thymus',\n    organ: 'Thymus',\n    name: 'Thymus',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002370'\n  },\n  {\n    disabled: true,\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000056'\n  },\n  {\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001223'\n  },\n  {\n    src: 'app:ureter-right',\n    organ: 'Ureter',\n    name: 'Ureter, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001222'\n  },\n  {\n    src: 'app:bladder',\n    organ: 'Urinary Bladder',\n    name: 'Urinary Bladder',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001255'\n  },\n  {\n    src: 'app:uterus',\n    organ: 'Uterus',\n    name: 'Uterus',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000995'\n  },\n  {\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004537'\n  },\n  {\n    disabled: true,\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002049'\n  }\n].sort((a, b) => a.name.localeCompare(b.name)) as OrganInfo[]\n                    \n                \n\n            \n                \n                    All organs that will eventually be displayed in the app\n\n                \n            \n\n        \n    \n\n    projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buster$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CACHE_CONFIG_NO_PARAMS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IObservableCacheConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  cacheBusterObserver: buster$\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CACHE_CONFIG_PARAMS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IObservableCacheConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n}\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_MAX_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'Maximum number of autocomplete options displayed',\n  {\n    providedIn: 'root',\n    factory(): number {\n      return 10;\n    }\n  }\n)\n                    \n                \n\n            \n                \n                    Token to provide a default for the maximum number of\nautocomplete suggestions to show at the same time.\n\n                \n            \n\n        \n    \n\n    projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PluckUniqueOptions<>\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n            \n                \n                    Default options\n\n                \n            \n\n        \n    \n\n    projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        documentationURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/docs/README.md'\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/analytics/src/lib/analytics.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EAGERLY_LOADED_SERVICES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ConsentService,\n  GoogleAnalyticsSyncService,\n  LocalStorageSyncService,\n]\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/src/lib/services/globals/globals.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        global\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalThis\n\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/src/lib/analytics/tracking.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        INITIAL_TELEMETRY_SETTING\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getTelemetryStorageSetting()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOCAL_STORAGE_ALLOW_TELEMETRY_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ALLOW_TELEMETRY'\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOCAL_STORAGE_CONSENT_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Key under which consent is stored', {\n  providedIn: 'root',\n  factory: () => 'ALLOW_TELEMETRY'\n})\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/rxjs-ext/src/public-api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        placeholder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : undefined\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
