var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AnalyticsModule.html",[0,1.48,1,2.538]],["body/modules/AnalyticsModule.html",[1,5.092,2,1.686,3,2.171,4,3.98,5,3.98,6,3.564,7,0.017,8,4.216,9,4.216,10,2.374,11,1.843,12,1.422,13,0.168,14,0.211,15,0.168,16,0.162,17,3.022,18,3.979,19,1.065,20,4.6,21,4.601,22,5.127,23,5.085,24,1.065,25,4.601,26,1.065,27,0.789,28,0.4,29,0.72,30,3.21,31,0.72,32,5.671,33,0.363,34,5.127,35,2.626,36,0.302,37,4.6,38,5.127,39,2.818,40,3.21,41,3.036,42,3.266,43,5.127,44,3.98,45,3.022,46,0.271,47,0.278,48,3.98,49,0.846,50,5.671,51,5.671,52,5.671,53,1.843,54,1.026,55,4.653,56,1.992,57,3.571,58,2.879,59,1.084,60,3.98,61,2.644,62,1.717,63,2.235,64,3.98,65,3.98,66,4.6,67,3.98,68,1.483,69,2.235,70,3.266,71,2.023,72,2.818,73,3.98,74,2.235,75,3.98,76,1.614,77,3.98,78,0.189,79,3.98,80,3.98,81,0.009,82,0.012,83,0.009]],["title/interfaces/AnalyticsOptions.html",[23,2.743,47,0.234]],["body/interfaces/AnalyticsOptions.html",[1,3.934,6,2.91,7,0.017,8,3.443,9,3.443,13,0.17,14,0.214,15,0.17,16,0.128,17,3.072,18,3.798,20,3.631,22,4.047,23,4.945,28,0.606,29,1.153,30,2.534,32,5.182,33,0.364,34,5.182,35,2.647,36,0.307,37,4.649,38,5.182,39,2.866,40,3.245,41,3.069,42,3.321,43,5.182,44,4.047,45,3.072,46,0.274,47,0.283,48,6.027,49,0.989,50,6.374,51,6.374,52,6.374,53,2.647,54,1.034,55,4.69,56,2.014,57,3.631,58,2.91,59,1.091,60,4.047,61,2.689,62,1.731,63,2.273,64,4.047,65,4.047,66,4.649,67,4.047,68,1.508,69,2.273,70,3.321,71,2.057,72,2.866,73,4.047,74,2.273,75,4.047,76,1.641,77,4.047,78,0.192,79,4.047,80,4.047,81,0.009,82,0.012,83,0.009,84,1.387,85,0.433,86,0.895]],["title/interfaces/ApiEndpointDataSourceOptions.html",[47,0.234,87,2.367]],["body/interfaces/ApiEndpointDataSourceOptions.html",[7,0.017,13,0.122,14,0.219,15,0.122,16,0.092,18,1.926,28,0.558,29,0.748,33,0.362,36,0.22,46,0.219,47,0.337,49,0.971,54,1.005,56,1.606,59,1.186,76,2.543,78,0.138,81,0.007,82,0.01,83,0.007,84,0.993,85,0.31,86,0.714,87,2.927,88,1.175,89,1.815,90,1.815,91,4.309,92,4.309,93,0.819,94,2.378,95,2.2,96,1.815,97,2.605,98,1.815,99,1.815,100,2.705,101,1.815,102,0.975,103,1.405,104,1.815,105,3.391,106,3.987,107,3.391,108,2.378,109,2.378,110,2.2,111,3.391,112,2.467,113,2.448,114,0.744,115,1.405,116,2.004,117,1.926,118,2.378,119,1.175,120,3.657,121,3.138,122,2.101,123,1.716,124,1.716,125,2.321,126,2.062,127,2.378,128,3.411,129,2.378,130,3.987,131,5.342,132,3.719,133,3.657,134,2.449,135,2.378,136,2.052,137,3.289,138,1.926,139,2.2,140,2.378,141,2.2,142,2.378,143,2.378,144,2.378,145,1.926,146,2.052,147,2.052,148,2.052,149,2.2,150,1.342,151,1.628,152,1.547,153,3.411,154,0.895,155,2.052,156,3.138,157,2.052,158,2.2,159,2.052,160,2.378,161,3.932,162,1.405,163,2.052,164,2.206,165,1.876,166,3.138,167,2.2,168,2.052,169,3.391,170,1.926,171,2.378,172,1.926,173,2.378,174,2.378,175,1.228,176,1.126,177,2.052,178,0.993,179,1.08,180,1.983,181,0.856,182,2.588,183,2.588,184,2.378,185,1.473,186,3.952,187,2.378,188,4.556,189,1.473,190,2.378,191,1.473,192,2.378,193,1.473,194,5.072,195,2.378,196,1.473,197,2.378,198,1.473,199,2.378,200,4.736,201,1.473,202,2.378,203,1.473,204,2.378,205,1.473,206,2.378,207,1.473,208,2.378,209,1.473,210,2.378,211,2.927,212,1.473,213,2.378,214,1.473,215,3.952,216,2.449,217,3.952,218,2.378,219,2.2,220,2.378,221,2.378,222,2.378,223,2.378,224,2.378,225,2.378,226,2.378,227,2.378,228,2.378,229,2.378,230,2.378]],["title/injectables/ApiEndpointDataSourceService.html",[93,0.663,177,2.367]],["body/injectables/ApiEndpointDataSourceService.html",[7,0.017,13,0.092,14,0.177,15,0.092,16,0.201,18,1.448,19,0.895,24,1.684,26,1.636,27,1.16,28,0.633,29,1.059,31,1.13,33,0.335,36,0.165,46,0.177,47,0.285,49,0.901,54,0.892,56,1.3,59,1.13,76,2.589,78,0.103,81,0.005,82,0.008,83,0.005,85,0.233,87,1.543,88,2.572,89,3.971,90,1.364,91,1.788,92,1.788,93,0.663,94,1.788,95,1.654,96,1.364,97,2.677,98,1.364,99,1.364,100,2.287,101,1.364,102,0.789,103,1.056,104,1.364,105,3.748,106,3.468,107,2.745,108,1.788,109,1.788,110,1.654,111,2.745,112,2.502,113,1.981,114,0.559,115,1.056,116,1.622,117,1.448,118,1.788,119,0.884,120,3.092,121,2.54,122,2.322,123,1.29,124,1.29,125,1.879,126,1.858,127,1.788,128,2.884,129,1.788,130,4.443,131,5.298,132,4.331,133,4.113,134,2.506,135,2.745,136,1.543,137,2.861,138,1.448,139,1.654,140,1.788,141,1.654,142,1.788,143,1.788,144,1.788,145,1.448,146,1.543,147,1.543,148,1.543,149,1.654,150,1.009,151,1.224,152,1.163,153,2.884,154,0.724,155,1.543,156,2.54,157,1.543,158,1.654,159,1.543,160,1.788,161,3.49,162,1.056,163,1.543,164,1.786,165,1.632,166,2.54,167,1.654,168,1.543,169,2.745,170,1.448,171,1.788,172,1.448,173,1.788,174,1.788,175,0.923,176,0.847,177,2.369,178,0.747,179,1.246,180,2.127,181,0.693,182,2.55,183,2.861,184,1.788,185,2.322,186,3.341,187,1.788,188,4.802,189,2.322,190,1.788,191,2.322,192,1.788,193,2.322,194,4.704,195,1.788,196,2.322,197,1.788,198,2.322,199,1.788,200,4.956,201,1.701,202,1.788,203,1.701,204,1.788,205,1.701,206,1.788,207,1.701,208,1.788,209,1.701,210,1.788,211,2.369,212,1.701,213,1.788,214,1.701,215,4.704,216,2.645,217,4.445,218,1.788,219,1.654,220,1.788,221,1.788,222,1.788,223,1.788,224,1.788,225,1.788,226,1.788,227,1.788,228,1.788,229,1.788,230,1.788,231,1.009,232,1.981,233,1.981,234,1.981,235,1.981,236,1.981,237,1.981,238,2.519,239,2.519,240,4.708,241,2.519,242,3.124,243,2.519,244,2.519,245,3.344,246,2.519,247,2.519,248,2.519,249,2.519,250,2.519,251,2.519,252,2.519,253,2.519,254,2.519,255,2.519,256,2.519,257,2.519]],["title/interfaces/AutoCompleteOption.html",[47,0.234,258,2.743]],["body/interfaces/AutoCompleteOption.html",[7,0.017,13,0.138,14,0.173,15,0.138,16,0.103,27,0.647,28,0.451,29,1.05,30,2.813,31,0.591,33,0.351,36,0.247,46,0.272,47,0.228,49,0.934,54,0.813,56,1.269,59,0.813,62,1.36,68,1.216,72,3.181,78,0.213,81,0.008,82,0.01,83,0.008,84,1.119,85,0.349,86,0.776,102,1.06,112,1.674,114,0.838,115,1.583,116,1.583,117,2.169,119,1.324,137,2.044,154,1.112,162,1.583,164,1.743,165,2.194,170,2.169,175,1.383,176,1.269,179,1.216,180,1.605,181,1.242,258,3.686,259,2.479,260,2.479,261,2.679,262,1.166,263,3.686,264,4.493,265,4.76,266,5.698,267,4.201,268,3.755,269,4.431,270,3.9,271,3.181,272,3.686,273,3.216,274,1.834,275,1.264,276,2.985,277,1.66,278,2.044,279,3.686,280,2.568,281,3.413,282,4.493,283,2.679,284,4.965,285,2.929,286,3.411,287,3.181,288,4.493,289,1.933,290,1.583,291,1.834,292,1.822,293,4.965,294,5.615,295,2.929,296,2.929,297,2.679,298,2.679,299,2.169,300,2.771,301,3.215,302,5.38,303,3.265,304,2.929,305,1.324,306,1.445,307,3.265,308,1.445,309,3.265,310,1.834,311,1.834,312,1.583,313,1.512,314,1.66,315,1.66,316,3.411,317,3.265,318,3.265,319,3.265,320,3.265,321,2.044,322,3.265,323,5.534,324,3.265,325,3.265,326,3.216,327,5.137,328,3.637,329,1.743,330,3.265,331,2.929,332,2.312,333,3.265,334,2.929,335,4.493,336,4.493,337,3.265,338,3.265,339,1.834,340,1.66,341,1.605,342,4.493,343,3.265,344,3.265,345,3.265,346,2.679,347,3.265,348,2.929,349,2.169,350,3.265,351,2.169,352,3.265,353,3.265]],["title/modules/BodyUiModule.html",[0,1.48,354,2.743]],["body/modules/BodyUiModule.html",[2,2.077,3,2.471,7,0.016,10,2.702,11,2.271,12,1.752,13,0.207,14,0.26,15,0.207,16,0.155,33,0.364,35,2.702,36,0.372,46,0.26,71,2.493,78,0.233,81,0.011,82,0.014,83,0.011,354,5.538,355,4.905,356,4.905,357,4.905,358,3.523,359,4.401,360,4.401,361,5.67,362,3.115,363,3.115,364,3.277,365,2.493,366,2.493,367,5.67]],["title/injectables/CCFDatabaseDataSourceBaseService.html",[93,0.663,368,2.367]],["body/injectables/CCFDatabaseDataSourceBaseService.html",[7,0.016,13,0.122,14,0.277,15,0.122,16,0.176,19,1.102,24,1.778,26,1.727,27,1.241,28,0.649,29,1.134,31,1.185,33,0.347,36,0.219,46,0.218,47,0.202,49,0.615,54,0.87,59,0.87,76,1.17,78,0.228,81,0.007,82,0.01,83,0.007,85,0.309,86,0.711,88,2.248,93,1.039,97,2.603,102,0.68,103,2.941,112,2.487,114,0.74,115,1.399,116,1.399,119,1.17,122,2.664,123,1.708,124,1.708,126,1.031,151,1.62,152,2.959,154,0.624,175,1.222,176,1.121,179,1.075,180,1.716,181,1.194,183,1.807,185,2.443,189,2.443,191,2.443,193,2.443,196,2.443,198,2.443,201,1.467,203,1.467,205,1.467,207,1.467,209,1.467,212,1.467,214,1.467,216,1.467,231,1.336,232,2.44,233,2.44,234,2.44,235,2.44,236,2.44,237,2.44,242,3.077,349,3.192,351,2.737,368,3.711,369,4.208,370,2.19,371,2.959,372,2.943,373,3.009,374,3.942,375,3.593,376,3.413,377,3.696,378,2.737,379,3.127,380,4.763,381,2.589,382,4.372,383,5.139,384,3.335,385,4.3,386,4.3,387,3.335,388,2.043,389,3.009,390,2.737,391,4.939,392,3.824,393,2.19,394,2.19,395,2.19,396,2.19,397,2.19,398,2.19,399,2.19,400,2.19,401,2.19,402,2.19,403,2.19,404,2.19,405,2.19,406,2.589,407,3.38,408,3.38,409,2.367,410,3.38,411,2.367,412,2.19,413,3.38,414,2.917,415,1.807,416,1.708,417,2.19,418,2.19,419,2.367,420,2.19,421,2.367,422,2.367,423,1.075,424,2.367,425,2.367,426,2.367,427,2.367,428,2.367,429,1.917,430,3.38,431,2.367,432,2.19,433,2.19,434,2.367,435,2.043,436,2.367,437,3.127,438,2.043,439,2.367,440,3.127,441,2.367,442,2.367,443,2.367,444,2.367]],["title/injectables/CCFDatabaseDataSourceService.html",[93,0.663,435,2.367]],["body/injectables/CCFDatabaseDataSourceService.html",[7,0.016,13,0.124,14,0.28,15,0.124,16,0.093,19,1.117,24,1.775,26,1.718,27,1.229,28,0.646,29,1.122,31,1.188,33,0.349,36,0.223,46,0.221,47,0.205,49,0.623,54,0.879,59,0.879,76,1.192,78,0.231,81,0.007,82,0.01,83,0.007,85,0.314,86,0.721,88,1.192,93,1.047,97,2.609,102,0.693,103,2.956,112,2.492,114,0.754,115,1.425,116,1.425,119,1.192,122,2.122,123,1.741,124,1.741,126,1.05,151,1.651,152,2.98,154,0.636,175,1.245,176,1.142,180,1.734,181,1.201,185,2.468,189,2.468,191,2.468,193,2.468,196,2.468,198,2.468,201,1.494,203,1.494,205,1.494,207,1.494,209,1.494,212,1.494,214,1.494,216,1.494,231,1.361,232,2.472,233,2.472,234,2.472,235,2.472,236,2.472,237,2.472,242,3.096,349,3.226,351,2.774,368,4.224,369,2.231,370,2.231,371,2.98,372,2.726,373,3.04,374,3.983,375,3.61,376,3.13,377,3.746,378,2.774,379,2.231,381,2.637,382,4.392,383,5.16,385,4.336,386,4.336,388,2.081,389,3.04,390,2.774,391,5.037,392,3.837,393,2.231,394,2.231,395,2.231,396,2.231,397,2.231,398,2.231,399,2.231,400,2.231,401,2.231,402,2.231,403,2.231,404,2.231,405,2.231,406,2.637,407,3.425,408,3.425,409,2.412,410,3.425,411,2.412,412,2.231,413,3.425,414,2.956,415,1.841,416,1.741,417,2.231,418,2.231,419,2.412,420,2.231,421,2.412,422,2.412,423,1.095,424,2.412,425,2.412,426,2.412,427,2.412,428,2.412,429,1.953,430,3.425,431,2.412,432,2.231,433,2.231,434,2.412,435,2.956,436,2.412,437,3.169,438,2.081,439,2.412,440,3.169,441,2.412,442,2.412,443,2.412,444,2.412,445,3.398,446,2.939,447,2.939]],["title/interfaces/CCFDatabaseManager.html",[47,0.234,382,2.367]],["body/interfaces/CCFDatabaseManager.html",[7,0.017,13,0.165,14,0.315,15,0.165,16,0.124,28,0.393,33,0.376,36,0.297,46,0.269,47,0.274,54,1.018,59,1.018,76,1.588,78,0.267,81,0.009,82,0.012,83,0.009,84,1.342,85,0.419,86,0.876,88,1.588,93,1.18,97,1.521,102,0.923,103,3.194,112,2.217,114,1.004,115,1.898,116,1.898,119,1.588,122,2.579,123,2.319,124,2.319,126,1.399,151,2.199,152,2.708,154,0.847,175,1.658,176,1.521,180,1.399,181,1.051,349,2.601,351,2.601,368,3.985,369,2.972,370,2.972,371,3.292,372,2.849,373,2.452,374,3.212,375,3.525,376,3.525,379,2.972,382,4.553,383,5.183,385,4.617,386,4.617,407,4.162,408,4.884,409,3.212,410,4.884,411,3.212,412,2.972,413,4.617,414,3.592,415,2.452,416,2.319,417,2.972,418,2.972,419,3.212,420,2.972,421,3.212,422,3.212,423,1.458,424,3.212,425,3.212,426,3.212,427,3.212,428,3.212,429,2.601,430,4.162,431,3.212,432,2.972,433,2.972,434,3.212,435,2.772,436,3.212,437,3.851,438,2.772,439,3.212,440,3.851,441,3.212,442,3.212,443,3.212,444,3.212]],["title/injectables/ConsentService.html",[6,1.878,93,0.663]],["body/injectables/ConsentService.html",[6,3.063,7,0.016,13,0.185,14,0.232,15,0.185,16,0.209,19,1.459,24,1.74,26,1.174,27,0.87,28,0.596,29,0.794,31,1.074,33,0.319,36,0.333,46,0.289,62,1.932,68,2.312,78,0.208,81,0.01,82,0.013,83,0.01,85,0.469,86,0.942,93,1.081,114,1.126,154,1.18,178,1.504,179,2.21,181,1.229,231,2.032,292,2.212,448,3.937,449,4.76,450,6.859,451,4.124,452,6.304,453,7.175,454,6.304,455,5.073,456,1.89,457,6.304,458,5.073,459,5.073,460,5.073,461,6.304,462,3.623,463,5.073,464,3.6,465,3.331,466,5.073,467,5.073,468,6.304,469,5.073,470,5.073]],["title/interfaces/DataSource.html",[47,0.234,125,1.878]],["body/interfaces/DataSource.html",[7,0.016,13,0.131,14,0.165,15,0.131,16,0.207,19,1.164,24,1.737,26,1.681,27,1.171,28,0.647,29,1.07,31,1.175,33,0.293,46,0.321,47,0.218,49,0.809,59,1.184,78,0.207,81,0.007,82,0.01,83,0.007,84,1.068,85,0.334,88,2.653,96,1.953,97,2.709,98,1.953,99,1.953,100,1.751,101,1.953,102,0.735,103,1.512,104,1.953,112,2.599,114,0.8,116,1.512,119,1.265,125,3.047,162,1.512,178,1.068,181,0.646,185,2.901,189,2.901,191,2.901,193,2.901,196,2.901,198,2.901,201,2.548,203,2.548,205,2.548,207,2.548,209,2.548,212,2.548,214,2.212,216,2.212,232,2.577,233,2.577,234,2.577,235,2.577,236,2.577,237,2.577,242,3.155,286,3.806,371,1.665,372,1.751,373,1.953,375,2.577,376,3.213,378,2.891,389,3.139,390,3.331,392,2.577,416,1.847,471,4.633,472,2.367,473,3.605,474,3.605,475,3.605,476,3.605,477,3.605,478,3.605,479,3.605,480,3.605,481,3.605,482,3.605,483,3.605,484,3.605,485,3.571,486,2.798,487,3.571,488,2.558,489,2.798,490,2.558,491,2.798,492,2.798,493,2.798,494,2.798,495,2.798,496,2.798,497,2.798,498,2.798,499,2.798,500,2.798,501,2.798,502,2.798,503,2.798,504,2.798,505,2.798,506,2.798,507,2.798,508,2.798]],["title/injectables/DataSourceService.html",[93,0.663,509,3]],["body/injectables/DataSourceService.html",[7,0.016,13,0.15,14,0.252,15,0.15,16,0.211,19,1.275,24,1.775,26,1.646,27,1.22,28,0.618,29,1.114,31,1.201,33,0.336,36,0.27,46,0.189,49,0.802,78,0.169,81,0.008,82,0.011,83,0.008,85,0.381,88,2.708,93,0.945,96,2.231,97,2.696,98,2.231,99,2.231,100,2.001,101,2.231,102,0.84,103,1.727,104,2.231,112,2.577,114,0.914,125,2.677,126,1.273,178,1.221,185,2.916,189,2.916,191,2.916,193,2.916,196,2.916,198,2.916,201,2.423,203,2.423,205,2.423,207,2.423,209,2.423,212,2.423,214,1.811,231,1.65,232,2.823,233,2.823,234,2.823,235,2.823,236,2.823,237,2.823,242,3.285,376,4.15,471,4.728,509,4.277,510,3.563,511,4.119,512,4.119,513,4.119,514,4.119,515,4.119,516,4.119,517,4.119,518,4.119,519,4.119,520,4.119,521,4.119,522,4.119]],["title/interfaces/DecoratedRange.html",[47,0.234,289,1.98]],["body/interfaces/DecoratedRange.html",[7,0.016,13,0.171,14,0.215,15,0.171,16,0.129,28,0.607,31,0.736,46,0.215,47,0.284,49,0.855,54,1.093,56,1.581,58,3.218,59,0.941,62,1.232,68,1.937,81,0.009,82,0.012,83,0.009,84,1.394,85,0.73,86,0.898,164,3.407,165,2.388,262,1.453,289,3.393,291,2.285,341,1.857,423,2.134,523,2.703,524,3.65,525,3.338,526,4.407,527,3.372,528,3.088,529,5.952,530,7.594,531,4.266,532,6.011,533,6.24,534,6.981,535,4.584,536,6.011,537,4.068,538,3.088,539,4.068,540,2.285,541,5.161,542,4.068,543,4.068,544,2.881,545,2.409,546,4.068,547,4.068,548,4.703,549,4.703,550,4.703,551,3.338]],["title/components/DecoratedTextComponent.html",[275,0.822,552,1.548]],["body/components/DecoratedTextComponent.html",[7,0.017,12,1.127,13,0.164,14,0.107,15,0.085,16,0.191,19,0.844,24,1.587,26,1.273,27,1.157,28,0.576,29,0.861,31,1.057,33,0.185,36,0.153,46,0.167,47,0.221,49,0.836,54,1.037,58,1.772,59,0.954,62,1.175,68,0.752,69,2.464,78,0.259,81,0.01,82,0.007,83,0.005,85,0.564,86,0.871,97,0.785,102,1.464,150,0.935,154,1.03,164,2.342,165,1.127,178,1.081,180,2.217,181,0.804,245,1.134,262,1.802,267,4.711,270,2.395,271,3.107,274,1.134,275,0.955,277,1.027,280,1.718,289,3.732,290,3.094,291,3.378,292,1.574,300,2.866,301,0.979,305,2.439,306,1.396,308,1.396,310,1.772,311,1.772,312,0.979,313,2.204,314,1.604,315,1.973,326,1.975,329,3.059,339,2.833,340,1.604,341,1.567,358,1.027,366,1.027,423,1.446,456,0.917,523,3.996,525,2.588,526,3.352,527,2.772,528,1.533,531,2.588,538,2.395,540,2.96,541,2.395,551,1.657,552,2.031,553,1.772,554,1.265,555,1.265,556,1.196,557,1.657,558,2.564,559,2.749,560,5.568,561,3.185,562,1.134,563,3.483,564,2.831,565,5.518,566,3.937,567,3.647,568,3.937,569,3.647,570,3.647,571,3.647,572,3.647,573,2.395,574,2.234,575,2.335,576,5.142,577,2.831,578,2.831,579,3.483,580,2.831,581,2.335,582,3.647,583,2.335,584,2.947,585,4.785,586,2.831,587,2.335,588,2.831,589,5.758,590,4.27,591,3.483,592,4.001,593,2.335,594,2.831,595,2.831,596,2.588,597,2.831,598,2.335,599,2.335,600,4.488,601,2.335,602,2.335,603,2.831,604,2.588,605,3.6,606,2.335,607,2.831,608,2.831,609,2.588,610,2.831,611,4.892,612,2.335,613,2.588,614,4.27,615,2.588,616,2.335,617,2.588,618,2.588,619,1.533,620,1.657,621,1.812,622,2.096,623,1.657,624,1.657,625,2.588,626,2.234,627,2.234,628,1.812,629,1.812,630,2.831,631,1.812,632,2.831,633,1.812,634,1.812,635,1.43,636,2.831,637,1.812,638,3.483,639,2.395,640,1.657,641,1.812,642,1.812,643,2.831,644,1.812,645,1.812,646,2.831,647,1.812,648,1.657,649,2.831,650,2.831,651,2.831,652,1.533,653,1.812,654,1.342,655,1.812,656,1.812,657,1.812,658,1.812,659,1.812,660,1.812,661,1.812,662,1.812,663,1.812,664,1.812,665,1.812,666,1.812,667,1.812,668,1.812,669,1.812,670,1.812,671,1.533,672,1.657,673,1.533,674,1.812,675,1.812,676,1.657,677,1.657,678,1.812,679,1.657,680,1.812,681,1.43,682,1.812,683,1.812,684,1.657,685,1.657,686,1.812,687,1.812,688,1.812,689,1.812,690,3.647,691,1.43,692,1.43,693,1.265,694,1.53,695,1.027,696,2.747,697,1.265,698,1.265,699,1.265,700,1.027,701,1.265,702,0.979,703,1.265,704,1.027,705,1.134,706,1.265,707,1.027,708,0.979,709,1.265,710,0.979,711,1.265,712,1.027,713,1.196,714,1.265,715,1.265,716,1.027,717,1.078,718,1.196,719,1.196,720,0.979,721,1.196,722,1.265]],["title/modules/DecoratedTextModule.html",[0,1.48,723,2.538]],["body/modules/DecoratedTextModule.html",[2,2.084,3,2.476,7,0.016,10,2.707,11,2.278,12,1.758,13,0.207,14,0.26,15,0.207,16,0.156,33,0.365,35,2.707,36,0.373,46,0.26,71,2.501,78,0.234,81,0.011,82,0.014,83,0.011,290,2.385,291,2.763,362,3.121,363,3.121,364,3.283,365,2.501,523,3.269,552,3.21,723,5.127,724,4.92,725,4.92,726,4.92,727,5.688,728,5.688]],["title/interfaces/DefaultParams.html",[47,0.234,136,2.367]],["body/interfaces/DefaultParams.html",[7,0.017,13,0.123,14,0.22,15,0.123,16,0.092,18,1.938,28,0.529,29,0.751,33,0.362,36,0.221,46,0.22,47,0.338,49,0.957,54,1.007,56,1.614,59,1.187,76,2.546,78,0.139,81,0.007,82,0.01,83,0.007,84,1,85,0.312,86,0.717,87,2.066,88,1.183,89,1.827,90,1.827,91,2.394,92,2.394,93,0.823,94,2.394,95,2.215,96,1.827,97,2.607,98,1.827,99,1.827,100,2.715,101,1.827,102,0.979,103,1.414,104,1.827,105,3.407,106,3.999,107,3.407,108,2.394,109,2.394,110,2.215,111,3.407,112,2.469,113,2.459,114,0.748,115,1.414,116,2.013,117,1.938,118,2.394,119,1.183,120,3.67,121,3.152,122,2.111,123,1.728,124,1.728,125,2.332,126,2.067,127,2.394,128,3.424,129,2.394,130,3.999,131,5.347,132,3.73,133,3.67,134,2.458,135,2.394,136,2.94,137,3.727,138,1.938,139,2.215,140,2.394,141,2.215,142,2.394,143,2.394,144,2.394,145,1.938,146,2.066,147,2.066,148,2.066,149,2.215,150,1.351,151,1.638,152,1.557,153,3.424,154,0.899,155,2.066,156,3.152,157,2.066,158,2.215,159,2.066,160,2.394,161,3.942,162,1.414,163,2.066,164,2.217,165,1.882,166,3.152,167,2.215,168,2.066,169,3.407,170,1.938,171,2.394,172,1.938,173,2.394,174,2.394,175,1.236,176,1.134,177,2.066,178,1,179,1.087,180,1.988,181,0.86,182,2.6,183,2.6,184,2.394,185,1.483,186,3.967,187,2.394,188,4.567,189,1.483,190,2.394,191,1.483,192,2.394,193,1.483,194,5.08,195,2.394,196,1.483,197,2.394,198,1.483,199,2.394,200,4.747,201,1.483,202,2.394,203,1.483,204,2.394,205,1.483,206,2.394,207,1.483,208,2.394,209,1.483,210,2.394,211,2.94,212,1.483,213,2.394,214,1.483,215,3.967,216,2.458,217,3.967,218,2.394,219,2.215,220,2.394,221,2.394,222,2.394,223,2.394,224,2.394,225,2.394,226,2.394,227,2.394,228,2.394,229,2.394,230,2.394]],["title/classes/DelegateDataSource.html",[78,0.159,372,1.878]],["body/classes/DelegateDataSource.html",[7,0.016,13,0.127,14,0.16,15,0.127,16,0.135,19,1.137,24,1.752,26,1.74,27,1.191,28,0.658,29,1.088,31,1.177,33,0.288,46,0.318,47,0.211,49,0.798,59,1.177,78,0.202,81,0.007,82,0.01,83,0.007,85,0.323,86,0.734,88,1.724,96,1.888,97,2.704,98,1.888,99,1.888,100,1.694,101,1.888,102,0.711,103,1.462,104,1.888,112,2.598,114,0.774,116,1.462,119,1.223,125,2.765,162,1.462,178,1.033,181,1.02,185,2.865,189,2.865,191,2.865,193,2.865,196,2.865,198,2.865,201,2.503,203,2.503,205,2.503,207,2.503,209,2.503,212,2.503,214,2.161,216,2.503,232,2.518,233,2.518,234,2.518,235,2.518,236,2.518,237,2.518,242,3.122,286,3.738,371,2.269,372,2.388,373,3.083,375,3.166,376,3.463,378,3.552,388,2.136,389,3.662,390,3.745,391,4.94,392,3.924,393,2.29,394,2.29,395,2.29,396,2.29,397,2.29,398,2.29,399,2.29,400,2.29,401,2.29,402,2.29,403,2.29,404,2.29,405,2.29,416,1.786,471,3.01,472,2.29,485,3.488,486,2.706,487,3.488,488,2.474,489,2.706,490,2.474,491,2.706,492,2.706,493,2.706,494,2.706,495,2.706,496,2.706,497,2.706,498,2.706,499,2.706,500,2.706,501,2.706,502,2.706,503,2.706,504,2.706,505,2.706,506,2.706,507,2.706,508,2.706,526,2.004,729,3.487]],["title/interfaces/DocumentationContent.html",[47,0.234,730,2.221]],["body/interfaces/DocumentationContent.html",[7,0.017,13,0.248,14,0.202,15,0.248,16,0.121,28,0.501,31,0.69,33,0.325,36,0.289,46,0.294,47,0.349,49,1.018,54,1.135,56,1.482,59,0.69,78,0.181,81,0.009,82,0.012,83,0.009,84,1.307,85,0.408,86,0.861,93,0.988,113,2.259,114,0.979,126,1.782,154,0.826,175,1.616,176,1.482,181,0.79,262,1.363,275,0.939,300,1.616,341,1.363,456,1.108,540,2.142,545,2.259,654,2.535,730,4.168,731,2.259,732,2.389,733,3.13,734,3.786,735,4.475,736,3.786,737,3.69,738,4.525,739,4.092,740,3.692,741,3.742,742,4.59,743,4.475,744,4.986,745,4.475,746,3.13,747,3.532,748,4.331,749,4.442,750,2.701,751,2.896,752,3.13,753,4.475,754,2.896,755,3.423,756,3.13,757,3.935,758,4.475,759,3.423,760,3.423,761,2.701,762,3.423,763,3.423,764,3.423,765,3.423,766,3.423,767,3.423,768,3.423,769,3.423,770,3.423,771,3.423,772,3.423,773,3.423,774,4.475,775,4.475,776,3.423,777,3.423,778,3.423,779,3.423,780,3.423,781,3.423,782,3.423,783,3.423,784,3.423,785,3.423,786,3.423]],["title/interfaces/FilterParams.html",[47,0.234,138,2.221]],["body/interfaces/FilterParams.html",[7,0.017,13,0.113,14,0.208,15,0.113,16,0.085,18,3.373,28,0.641,29,1.203,33,0.355,36,0.204,46,0.208,47,0.323,49,0.998,54,0.976,56,1.523,59,1.172,76,2.502,78,0.128,81,0.006,82,0.009,83,0.006,84,0.923,85,0.288,86,0.677,87,1.907,88,1.092,89,1.687,90,1.687,91,2.21,92,2.21,93,0.777,94,2.21,95,2.045,96,1.687,97,2.582,98,1.687,99,1.687,100,2.596,101,1.687,102,0.925,103,1.306,104,1.687,105,3.217,106,4.521,107,4.166,108,2.21,109,2.21,110,2.045,111,3.217,112,2.442,113,2.322,114,0.691,115,1.306,116,1.901,117,1.79,118,2.21,119,1.092,120,3.509,121,2.976,122,1.993,123,1.595,124,1.595,125,2.202,126,2.011,127,2.21,128,3.273,129,2.21,130,3.854,131,5.277,132,3.595,133,3.509,134,2.35,135,2.21,136,1.907,137,3.179,138,2.605,139,3.854,140,4.166,141,3.854,142,4.166,143,4.166,144,4.166,145,3.373,146,3.273,147,3.273,148,3.273,149,3.854,150,2.351,151,1.513,152,1.438,153,3.273,154,0.849,155,1.907,156,2.976,157,1.907,158,2.045,159,1.907,160,2.21,161,3.821,162,1.306,163,1.907,164,2.093,165,1.814,166,2.976,167,2.045,168,1.907,169,3.217,170,1.79,171,2.21,172,1.79,173,2.21,174,2.21,175,1.141,176,1.047,177,1.907,178,0.923,179,1.003,180,1.927,181,0.812,182,2.455,183,2.455,184,2.21,185,1.369,186,3.793,187,2.21,188,4.427,189,1.369,190,2.21,191,1.369,192,2.21,193,1.369,194,4.982,195,2.21,196,1.369,197,2.21,198,1.369,199,2.21,200,4.62,201,1.369,202,2.21,203,1.369,204,2.21,205,1.369,206,2.21,207,1.369,208,2.21,209,1.369,210,2.21,211,2.776,212,1.369,213,2.21,214,1.369,215,3.793,216,2.35,217,3.793,218,2.21,219,2.045,220,2.21,221,2.21,222,2.21,223,2.21,224,2.21,225,2.21,226,2.21,227,2.21,228,2.21,229,2.21,230,2.21]],["title/classes/ForwardingDataSource.html",[78,0.159,392,1.98]],["body/classes/ForwardingDataSource.html",[7,0.016,13,0.127,14,0.16,15,0.127,16,0.208,19,1.138,24,1.741,26,1.741,27,1.191,28,0.654,29,1.088,31,1.178,33,0.288,46,0.318,47,0.211,49,0.798,59,1.178,78,0.202,81,0.007,82,0.01,83,0.007,85,0.323,88,2.657,96,1.89,97,2.704,98,1.89,99,1.89,100,1.695,101,1.89,102,0.712,103,1.464,104,1.89,112,2.597,114,0.774,116,1.464,119,1.224,125,3.004,162,1.464,178,1.458,181,0.625,185,2.866,189,2.866,191,2.866,193,2.866,196,2.866,198,2.866,201,2.504,203,2.504,205,2.504,207,2.504,209,2.504,212,2.504,214,2.163,216,2.504,232,2.519,233,2.519,234,2.519,235,2.519,236,2.519,237,2.519,242,3.123,286,3.74,371,1.612,372,1.695,373,1.89,375,3.167,376,3.464,378,3.554,388,2.138,389,3.663,390,3.746,392,2.917,416,1.788,471,4.64,472,2.292,485,3.49,486,2.709,487,3.49,488,2.477,489,2.709,490,2.477,491,2.709,492,2.709,493,2.709,494,2.709,495,2.709,496,2.709,497,2.709,498,2.709,499,2.709,500,2.709,501,2.709,502,2.709,503,2.709,504,2.709,505,2.709,506,2.709,507,2.709,508,2.709,526,2.006,787,3.49,788,3.49,789,3.49,790,3.49,791,3.49,792,3.49,793,3.49,794,3.49,795,3.49,796,3.49,797,3.49,798,3.49,799,3.49]],["title/injectables/GlobalConfigState.html",[93,0.663,122,1.699]],["body/injectables/GlobalConfigState.html",[7,0.016,13,0.133,14,0.168,15,0.133,16,0.206,19,1.176,24,1.726,26,1.765,27,1.266,28,0.663,29,1.141,31,1.141,33,0.369,36,0.24,46,0.168,49,0.978,54,0.796,59,1.038,61,2.103,62,0.958,63,1.778,78,0.15,81,0.007,82,0.01,83,0.007,85,0.339,86,0.76,93,0.872,102,0.747,112,2.458,114,0.812,115,2.132,119,1.284,122,2.236,152,3.063,154,0.952,165,2.253,180,2.122,181,1.047,183,1.982,231,1.466,287,3.579,292,1.284,371,2.348,415,1.982,429,3.358,456,1.587,617,3.608,800,6.51,801,3.166,802,4.534,803,5.843,804,7.384,805,5.084,806,5.084,807,5.084,808,5.084,809,3.339,810,6.866,811,5.955,812,3.66,813,5.922,814,3.66,815,5.466,816,3.66,817,6.313,818,3.66,819,3.946,820,5.461,821,3.66,822,5.084,823,3.66,824,5.084,825,5.843,826,3.66,827,5.084,828,6.313,829,3.66,830,5.084,831,6.313,832,3.66,833,3.66,834,3.66,835,3.66,836,3.66,837,2.403,838,3.66,839,3.946,840,4.146,841,2.84,842,2.84,843,3.66,844,3.114,845,2.403,846,2.84,847,2.403,848,3.66,849,2.84,850,2.597,851,3.66,852,3.66,853,3.66,854,5.084,855,3.66,856,3.66,857,3.66,858,3.66,859,5.843,860,3.66,861,3.66,862,3.66]],["title/injectables/GlobalsService.html",[93,0.663,863,3]],["body/injectables/GlobalsService.html",[7,0.017,13,0.099,14,0.125,15,0.099,16,0.197,19,0.951,24,1.645,26,1.707,27,1.184,28,0.656,29,1.099,31,1.147,33,0.138,36,0.179,46,0.226,49,0.352,53,1.647,54,0.924,59,1.061,61,4.497,62,2.036,63,2.869,68,2.135,72,2.519,74,2.674,76,2.548,78,0.112,81,0.005,82,0.008,83,0.005,85,0.253,93,0.705,134,3.038,151,1.326,154,1.031,162,2.309,175,1,176,0.918,181,0.489,216,1.808,231,1.093,242,1.261,262,1.825,292,1.443,304,3.191,321,2.227,340,1.201,341,1.917,348,4.273,375,2.534,389,3.851,440,1.793,456,1.666,535,1.793,544,4.682,626,3.372,635,1.672,652,1.793,741,1.326,809,2.7,863,3.191,864,1.938,865,4.112,866,5.461,867,5.505,868,6.384,869,2.73,870,4.112,871,4.112,872,4.112,873,4.112,874,4.947,875,4.112,876,4.112,877,2.918,878,4.112,879,4.112,880,3.557,881,3.557,882,5.362,883,6.909,884,2.73,885,3.191,886,7.018,887,7.111,888,2.73,889,3.557,890,6.588,891,2.73,892,2.73,893,2.73,894,4.112,895,2.73,896,4.112,897,2.363,898,3.557,899,4.112,900,3.191,901,4.112,902,5.905,903,4.112,904,2.73,905,2.7,906,6.206,907,2.73,908,3.191,909,2.73,910,2.73,911,2.73,912,2.73,913,2.119,914,2.362,915,4.583,916,2.73,917,2.73,918,2.73,919,2.73,920,2.73,921,2.119,922,4.112,923,4.947,924,4.112,925,4.112,926,2.73,927,2.362,928,2.73,929,4.112,930,2.7,931,2.73,932,2.73,933,2.362,934,2.73,935,5.905,936,2.73,937,2.362,938,2.73,939,2.73,940,2.73,941,2.73,942,2.119,943,2.73,944,2.73,945,3.191,946,1.938,947,3.557,948,2.362,949,3.191,950,1.938,951,2.362,952,2.362,953,2.73,954,2.73,955,2.73,956,2.73,957,1.938,958,1.793,959,1.672,960,2.73,961,1.672,962,2.119,963,2.362,964,2.73,965,2.73,966,2.362,967,2.73,968,2.73]],["title/injectables/GoogleAnalyticsSyncService.html",[8,2.221,93,0.663]],["body/injectables/GoogleAnalyticsSyncService.html",[6,3.59,7,0.016,8,3.469,13,0.172,14,0.217,15,0.172,16,0.202,19,1.396,24,1.672,26,1.396,27,1.035,28,0.578,29,0.945,31,0.945,33,0.354,36,0.31,39,2.9,40,2.564,41,3.847,42,3.36,46,0.217,49,0.779,53,2.661,58,3.228,62,1.24,63,3.228,76,1.661,78,0.194,81,0.01,82,0.012,83,0.01,85,0.438,86,0.902,93,1.035,114,1.051,137,3.599,154,1.13,178,1.403,179,1.945,180,2.391,181,1.346,231,1.896,278,2.564,292,1.661,449,2.9,451,4.022,456,1.759,462,3.469,465,3.109,945,5.157,958,3.109,969,6.393,970,3.36,971,4.363,972,6.036,973,4.095,974,6.998,975,6.036,976,4.734,977,6.036,978,4.734,979,3.697,980,3.819,981,4.734,982,4.734,983,4.734,984,4.734,985,4.734,986,6.036,987,6.036,988,4.734,989,4.734,990,3.36,991,4.734,992,4.734]],["title/components/InfoButtonComponent.html",[275,0.822,700,1.699]],["body/components/InfoButtonComponent.html",[7,0.016,13,0.288,14,0.153,15,0.122,16,0.196,19,1.105,24,1.625,26,1.105,27,1.1,28,0.558,29,0.748,31,0.872,33,0.338,36,0.22,46,0.153,49,0.828,62,1.251,78,0.138,81,0.007,82,0.01,83,0.007,85,0.31,86,0.714,102,1.524,112,1.54,114,0.744,126,1.876,150,1.342,154,0.895,178,1.416,179,1.08,180,1.876,181,1.15,262,1.476,275,1.521,280,2.325,290,1.405,292,1.676,300,1.228,301,1.405,305,2.621,306,1.829,308,1.829,312,1.405,313,1.914,321,1.815,339,2.321,340,2.101,341,1.476,358,1.473,366,1.473,423,1.08,437,3.138,451,3.489,456,1.677,462,3.201,527,1.473,552,1.342,553,2.321,554,1.815,555,1.815,556,1.716,562,1.628,573,3.138,693,1.815,694,2.004,695,1.473,696,3.289,697,1.815,698,1.815,699,1.815,700,2.67,701,1.815,702,2.004,703,1.815,704,1.473,705,1.628,706,1.815,707,1.473,708,1.405,709,1.815,710,1.405,711,1.815,712,1.473,713,1.716,714,1.815,715,1.815,716,1.473,717,1.547,718,1.716,719,1.716,720,1.405,721,1.716,722,1.815,731,3.661,732,3.926,738,2.927,740,3.947,741,1.628,742,3.411,747,3.719,748,3.411,749,3.719,750,4.301,754,2.2,897,2.746,971,3.657,980,3.201,990,2.378,993,2.899,994,5.75,995,3.987,996,3.391,997,3.138,998,3.987,999,5.252,1000,4.778,1001,5.569,1002,4.778,1003,4.778,1004,6.072,1005,5.569,1006,3.351,1007,6.072,1008,4.778,1009,3.719,1010,4.778,1011,5.252,1012,3.351,1013,3.351,1014,3.351,1015,3.391,1016,3.709,1017,4.778,1018,3.351,1019,4.778,1020,4.778,1021,3.351,1022,4.778,1023,3.351,1024,4.133,1025,4.133,1026,3.138,1027,2.378,1028,3.709,1029,2.052,1030,2.899,1031,3.351,1032,3.351,1033,3.351,1034,3.351,1035,2.899,1036,2.601,1037,3.351,1038,3.351,1039,3.351,1040,3.351,1041,3.351,1042,2.378,1043,3.351,1044,1.716,1045,3.351,1046,3.351,1047,2.601,1048,2.601,1049,3.351,1050,2.601,1051,2.601,1052,2.601,1053,2.601,1054,2.899,1055,2.899,1056,2.378,1057,3.351,1058,3.709,1059,3.351,1060,2.601,1061,2.601,1062,2.601,1063,2.601,1064,2.601,1065,2.899,1066,2.601,1067,3.351,1068,2.052,1069,2.899]],["title/modules/InfoButtonModule.html",[0,1.48,1070,2.743]],["body/modules/InfoButtonModule.html",[2,1.996,3,2.413,7,0.016,10,2.638,11,2.182,12,1.683,13,0.258,14,0.249,15,0.198,16,0.149,33,0.387,35,2.638,36,0.357,46,0.249,71,2.896,78,0.224,81,0.011,82,0.013,83,0.011,362,3.041,363,3.041,364,3.199,365,2.395,700,3.506,731,2.791,732,2.951,746,3.866,1029,3.337,1070,5.581,1071,4.713,1072,4.713,1073,4.713,1074,4.713,1075,5.025,1076,5.448,1077,4.325,1078,3.577,1079,5.448,1080,6.586,1081,5.448]],["title/injectables/InfoButtonService.html",[93,0.663,750,2.367]],["body/injectables/InfoButtonService.html",[7,0.016,13,0.238,14,0.181,15,0.262,16,0.187,19,1.242,24,1.51,26,1.409,27,1.044,28,0.567,29,0.953,31,0.953,33,0.308,36,0.26,46,0.279,47,0.325,49,1.021,54,1.101,56,1.804,59,0.62,62,1.037,78,0.163,81,0.008,82,0.011,83,0.008,85,0.367,86,0.802,93,0.92,113,2.75,114,0.879,126,2.017,154,1.005,175,1.451,176,1.331,179,1.276,181,0.71,231,1.586,262,1.224,275,1.142,292,1.389,300,1.451,341,1.224,456,1.349,540,2.608,545,2.75,654,3.085,730,4.134,731,3.494,732,3.695,733,2.811,734,2.601,735,3.074,736,2.601,737,3.695,738,4.178,739,2.811,740,3.499,741,3.603,742,4.178,743,3.074,744,5.294,745,5.066,746,2.811,747,3.288,748,4.482,749,4.593,750,3.288,751,3.525,752,3.809,753,5.066,754,2.601,755,4.166,756,3.809,757,4.308,758,4.725,759,4.166,760,4.166,761,3.288,762,4.166,763,3.074,764,3.074,765,3.074,766,3.074,767,3.074,768,4.166,769,4.166,770,4.166,771,4.166,772,4.166,773,4.166,774,4.166,775,4.166,776,3.074,777,3.074,778,3.074,779,3.074,780,3.074,781,3.074,782,3.074,783,3.074,784,3.074,785,3.074,786,3.074,1082,5.368,1083,5.368,1084,3.961,1085,5.368,1086,3.961,1087,3.961,1088,3.426]],["title/components/InfoDialogComponent.html",[275,0.822,702,1.621]],["body/components/InfoDialogComponent.html",[7,0.016,12,0.914,13,0.271,14,0.135,15,0.108,16,0.19,19,1.413,24,1.57,26,0.684,27,0.982,28,0.556,29,0.463,31,0.683,33,0.262,36,0.194,46,0.2,47,0.179,49,0.825,54,0.463,78,0.122,81,0.006,82,0.009,83,0.006,85,0.274,86,0.652,102,1.475,126,2.177,150,1.185,168,1.812,178,1.294,179,1.407,182,2.364,245,1.437,262,1.603,275,1.539,278,1.602,280,1.133,290,1.241,300,1.901,301,1.241,305,2.563,306,1.671,308,1.671,312,1.241,313,1.748,339,2.968,340,1.92,341,1.349,358,1.301,366,1.301,423,2.06,456,1.439,527,1.301,545,2.657,552,1.185,553,2.121,554,1.602,555,1.602,556,1.515,558,2.518,562,1.437,622,2.509,639,1.943,681,2.674,692,3.508,693,1.602,694,1.831,695,1.301,696,3.102,697,1.602,698,1.602,699,1.602,700,1.301,701,1.602,702,2.402,703,1.602,704,1.301,705,1.437,706,1.602,707,1.301,708,1.241,709,1.602,710,1.241,711,1.602,712,1.301,713,1.515,714,1.602,715,1.602,716,1.301,717,1.366,718,1.515,719,1.515,720,1.241,721,1.515,722,1.602,730,3.292,731,3.549,732,1.602,737,2.364,738,1.812,740,4.323,741,2.782,742,3.508,748,3.742,749,3.508,757,1.812,947,2.559,959,3.178,995,2.867,996,2.1,997,2.867,998,2.867,1009,3.178,1015,2.1,1027,2.1,1028,2.296,1029,4.244,1042,3.098,1044,2.934,1047,2.296,1048,2.296,1050,2.296,1051,2.296,1056,4.335,1058,2.296,1060,2.296,1061,2.296,1063,2.296,1064,4.741,1065,4.488,1066,4.445,1068,2.674,1089,2.296,1090,3.098,1091,2.867,1092,3.776,1093,3.776,1094,3.776,1095,4.026,1096,4.488,1097,3.776,1098,4.537,1099,5.284,1100,4.488,1101,5.53,1102,4.445,1103,2.958,1104,5.284,1105,4.335,1106,4.366,1107,4.026,1108,4.488,1109,4.026,1110,4.488,1111,2.958,1112,3.776,1113,2.958,1114,3.388,1115,3.388,1116,3.682,1117,3.776,1118,3.776,1119,2.958,1120,2.958,1121,2.958,1122,3.776,1123,2.958,1124,2.559,1125,2.296,1126,2.559,1127,2.559,1128,2.559,1129,2.559,1130,2.559,1131,2.559,1132,2.559,1133,2.559,1134,2.559,1135,2.559,1136,2.559,1137,2.559,1138,2.559,1139,2.559,1140,4.366,1141,4.366,1142,4.335,1143,4.335,1144,2.296,1145,2.958,1146,5.719,1147,3.178,1148,4.366,1149,3.388,1150,2.559,1151,2.296,1152,4.55,1153,4.377,1154,5.284,1155,2.559,1156,2.867,1157,4.366,1158,2.958,1159,4.445,1160,2.674,1161,2.958,1162,2.958,1163,4.026,1164,2.1,1165,3.776,1166,4.366,1167,4.366,1168,2.958,1169,2.958,1170,2.559,1171,2.958,1172,2.867,1173,2.958,1174,2.958,1175,2.958,1176,2.559,1177,2.559,1178,2.958,1179,2.867]],["title/interfaces/InfoDialogData.html",[47,0.234,1105,2.743]],["body/interfaces/InfoDialogData.html",[7,0.017,12,1.415,13,0.272,14,0.21,15,0.167,16,0.125,19,1.059,28,0.569,33,0.331,36,0.3,46,0.27,47,0.277,49,0.975,54,0.717,78,0.188,81,0.009,82,0.012,83,0.009,84,1.357,85,0.424,86,0.883,102,0.934,126,2.21,178,1.357,179,1.475,182,2.48,262,1.415,275,1.559,278,2.48,280,2.262,305,1.606,306,1.753,308,1.753,339,2.87,340,2.013,341,1.825,456,1.485,545,2.345,681,2.804,702,1.92,730,4.111,731,2.345,732,2.48,737,2.48,740,4.34,741,3.357,742,4.382,748,2.804,749,4.382,995,3.006,997,3.006,998,3.006,1009,2.804,1027,3.249,1028,3.553,1029,2.804,1042,3.249,1047,3.553,1048,3.553,1050,3.553,1051,3.553,1089,3.553,1090,3.249,1091,3.006,1092,3.96,1093,3.96,1094,3.96,1095,4.585,1096,3.96,1097,3.96,1098,4.193,1099,5.11,1100,3.96,1101,3.96,1102,3.553,1104,5.11,1105,4.642,1107,3.553,1108,3.96,1109,3.553,1110,3.96,1112,3.96,1114,3.553,1115,3.553,1116,3.249,1117,3.96,1118,3.96,1122,3.96,1124,3.96,1125,4.585,1126,3.96,1127,3.96,1128,3.96,1129,3.96,1130,3.96,1131,3.96,1132,3.96,1133,3.96,1134,3.96,1135,3.96,1136,3.96,1137,3.96,1138,3.96,1139,3.96]],["title/modules/InfoDialogModule.html",[0,1.48,1075,2.538]],["body/modules/InfoDialogModule.html",[2,1.987,3,2.406,7,0.016,10,2.63,11,2.172,12,1.676,13,0.239,14,0.248,15,0.198,16,0.149,33,0.395,35,2.63,36,0.356,39,3.322,46,0.248,71,2.385,78,0.223,81,0.011,82,0.013,83,0.011,362,3.033,363,3.033,364,3.191,365,2.385,702,3.342,731,2.778,757,3.322,1027,3.849,1029,3.322,1030,4.691,1075,5.079,1077,4.313,1078,3.561,1116,3.849,1180,4.691,1181,4.691,1182,4.691,1183,5.423,1184,6.568,1185,6.568,1186,5.423,1187,5.423,1188,6.568,1189,4.691,1190,5.423]],["title/injectables/InjectorDelegateDataSourceService.html",[93,0.663,1191,3]],["body/injectables/InjectorDelegateDataSourceService.html",[7,0.016,13,0.143,14,0.298,15,0.143,16,0.166,19,1.235,24,1.8,26,1.762,27,1.269,28,0.657,29,1.159,31,1.207,33,0.344,36,0.258,46,0.18,49,0.689,78,0.161,81,0.008,82,0.011,83,0.008,85,0.364,86,0.798,88,2.128,93,0.915,97,2.643,112,2.517,114,0.872,115,1.648,119,1.379,122,2.861,123,2.013,124,2.013,126,1.214,152,1.815,179,1.721,181,1.087,183,2.892,185,2.667,189,2.667,191,2.667,193,2.667,196,2.667,198,2.667,201,1.728,203,1.728,205,1.728,207,1.728,209,1.728,212,1.728,214,1.728,216,1.728,231,1.574,232,2.735,233,2.735,234,2.735,235,2.735,236,2.735,237,2.735,242,3.24,287,3.271,371,2.466,372,3.161,373,3.285,375,3.485,376,3.333,378,3.069,379,2.581,388,2.408,389,3.285,390,3.069,391,5.062,392,3.927,393,2.581,394,2.581,395,2.581,396,2.581,397,2.581,398,2.581,399,2.581,400,2.581,401,2.581,402,2.581,403,2.581,404,2.581,405,2.581,415,2.129,416,2.013,417,2.581,418,2.581,420,2.581,429,2.259,1191,4.144,1192,5.246,1193,3.4,1194,5.34,1195,7.179,1196,3.931,1197,5.34,1198,5.246,1199,3.931,1200,6.065,1201,3.931,1202,3.931,1203,3.931,1204,3.931,1205,3.931]],["title/injectables/LocalStorageSyncService.html",[9,2.221,93,0.663]],["body/injectables/LocalStorageSyncService.html",[6,3.532,7,0.016,9,3.335,13,0.162,14,0.204,15,0.162,16,0.203,19,1.343,24,1.682,26,1.343,27,0.995,28,0.504,29,1.071,31,1.01,33,0.327,36,0.292,42,3.161,45,5.03,46,0.266,49,0.833,54,1.01,59,1.01,61,3.71,62,1.904,63,2.164,68,1.87,78,0.183,81,0.009,82,0.012,83,0.009,85,0.412,86,0.867,93,0.995,114,0.988,154,1.208,175,1.632,176,1.497,178,1.32,179,1.87,180,2.411,181,1.327,231,1.784,278,2.412,279,3.161,292,2.036,298,3.161,449,4.536,451,3.93,456,1.719,462,3.335,464,3.161,465,2.925,915,3.457,949,3.457,966,3.853,970,3.161,971,4.239,973,3.853,980,3.71,990,3.161,1206,5.747,1207,6.839,1208,5.803,1209,5.803,1210,4.454,1211,4.454,1212,5.803,1213,4.454,1214,4.454,1215,3.457,1216,3.853,1217,3.853,1218,3.853,1219,3.161,1220,5.803,1221,4.454,1222,4.454,1223,4.454,1224,4.454,1225,4.454,1226,4.454,1227,4.454,1228,4.454,1229,5.803,1230,4.454,1231,4.454,1232,4.454,1233,5.803,1234,4.454,1235,4.454]],["title/modules/MousePositionTrackerModule.html",[0,1.48,1236,3]],["body/modules/MousePositionTrackerModule.html",[0,1.964,2,1.88,7,0.016,13,0.187,14,0.235,15,0.187,16,0.141,33,0.375,35,2.543,36,0.336,39,3.143,40,2.779,41,2.628,46,0.291,54,1.159,56,1.724,59,0.994,78,0.211,81,0.01,82,0.013,83,0.01,114,1.139,115,2.152,119,1.8,126,1.585,179,1.653,278,2.779,365,2.256,671,3.369,837,3.369,930,3.369,957,3.641,958,3.369,959,3.143,961,3.889,962,3.982,980,3.649,1156,3.369,1236,4.927,1237,3.982,1238,3.982,1239,6.231,1240,6.894,1241,5.131,1242,5.131,1243,4.438,1244,4.438,1245,5.964,1246,5.131,1247,4.927,1248,5.131,1249,6.349,1250,6.349,1251,3.982,1252,6.349,1253,6.349,1254,5.131,1255,5.131,1256,4.438,1257,5.131,1258,5.131,1259,5.131,1260,5.131,1261,5.131,1262,5.131,1263,5.131,1264,5.131,1265,4.438,1266,5.131,1267,5.131,1268,4.438,1269,4.438,1270,4.438,1271,3.982,1272,5.131,1273,5.131,1274,5.131]],["title/directives/NumberDirective.html",[695,1.699,720,1.621]],["body/directives/NumberDirective.html",[7,0.016,13,0.174,14,0.218,15,0.174,16,0.192,19,1.403,24,1.543,26,1.543,27,1.143,28,0.527,29,1.044,31,0.747,33,0.241,36,0.313,46,0.218,54,0.747,69,2.947,78,0.196,81,0.01,82,0.012,83,0.01,85,0.442,165,1.874,179,1.537,245,2.318,262,2.169,280,3.001,300,2.443,305,2.128,329,3.08,339,2.947,340,2.667,341,1.874,456,1.524,562,2.318,694,2.943,695,3.256,719,2.444,720,2.544,721,3.107,754,3.133,1009,3.716,1026,4.38,1247,6.084,1251,5.176,1275,5.447,1276,5.447,1277,4.127,1278,6.066,1279,6.066,1280,6.066,1281,6.066,1282,4.772,1283,4.981,1284,4.772,1285,4.772,1286,6.066,1287,6.67,1288,5.769,1289,5.769,1290,6.066,1291,6.066,1292,4.772,1293,6.066,1294,6.67,1295,4.772,1296,4.772,1297,4.772]],["title/modules/NumbersOnlyModule.html",[0,1.48,1298,2.743]],["body/modules/NumbersOnlyModule.html",[2,2.107,3,2.492,7,0.016,10,2.725,11,2.303,12,1.777,13,0.21,14,0.263,15,0.21,16,0.158,33,0.344,35,2.725,36,0.377,46,0.263,78,0.236,81,0.012,82,0.014,83,0.012,362,3.141,363,3.141,720,3.366,1275,4.464,1276,4.464,1289,4.975,1298,5.553,1299,4.975,1300,4.975,1301,4.975,1302,5.752,1303,5.752]],["title/components/OpacitySliderComponent.html",[275,0.822,704,1.699]],["body/components/OpacitySliderComponent.html",[7,0.016,11,2.635,13,0.187,14,0.133,15,0.106,16,0.201,19,0.999,24,1.685,26,0.674,27,1.128,28,0.6,29,0.456,31,0.95,33,0.147,36,0.191,46,0.133,49,0.734,53,1.167,54,0.456,62,1.865,68,1.391,69,2.097,74,2.097,78,0.261,81,0.006,82,0.009,83,0.006,85,0.27,86,0.645,102,1.522,150,1.167,154,1.136,165,1.589,178,1.279,181,1.139,245,1.415,262,1.334,269,1.784,273,2.338,274,1.415,275,1.292,276,3.781,277,1.281,280,1.968,281,3.653,290,1.222,292,2.23,299,1.674,300,1.067,301,1.222,305,2.555,306,1.652,308,1.652,310,2.097,311,2.097,312,1.222,313,2.431,314,1.898,315,2.261,328,4.138,329,1.993,341,0.9,358,1.281,366,1.281,423,1.391,456,1.764,527,1.281,535,1.913,552,1.167,553,2.097,554,1.578,555,1.578,556,1.492,558,2.669,562,1.415,573,2.834,574,2.644,691,1.784,692,3.482,693,1.578,694,1.81,695,1.281,696,3.079,697,1.578,698,1.578,699,1.578,700,1.281,701,1.578,702,1.222,703,1.578,704,2.5,705,3.835,706,1.578,707,1.281,708,1.222,709,1.578,710,1.222,711,1.578,712,1.281,713,1.492,714,1.578,715,1.578,716,1.281,717,1.345,718,1.492,719,1.492,720,1.222,721,1.492,722,1.578,734,2.834,741,2.097,897,2.48,979,1.784,1044,2.912,1052,2.261,1053,3.99,1054,4.447,1055,4.917,1056,3.063,1058,3.35,1060,4.412,1061,4.412,1063,3.35,1066,2.261,1068,3.149,1095,3.99,1102,4.412,1142,2.067,1143,2.067,1144,2.261,1147,1.784,1149,3.35,1150,3.733,1151,3.35,1152,3.733,1153,2.644,1155,2.52,1159,2.261,1160,3.149,1163,2.261,1164,2.067,1172,1.913,1179,3.986,1256,2.52,1304,5.704,1305,5.704,1306,2.52,1307,6.452,1308,4.316,1309,3.733,1310,5.141,1311,4.316,1312,5.141,1313,4.316,1314,5.685,1315,5.685,1316,6.07,1317,3.35,1318,6.07,1319,5.141,1320,5.141,1321,4.917,1322,2.913,1323,2.913,1324,4.174,1325,2.913,1326,4.917,1327,2.913,1328,4.316,1329,4.316,1330,2.913,1331,4.316,1332,4.316,1333,2.913,1334,4.316,1335,2.913,1336,2.913,1337,2.913,1338,5.685,1339,2.913,1340,3.733,1341,5.141,1342,2.913,1343,2.913,1344,6.357,1345,5.141,1346,2.913,1347,4.316,1348,4.316,1349,2.913,1350,2.913,1351,3.733,1352,3.376,1353,2.913,1354,2.261,1355,2.52,1356,2.913,1357,3.733,1358,2.52,1359,2.52,1360,2.52]],["title/modules/OpacitySliderModule.html",[0,1.48,1361,2.743]],["body/modules/OpacitySliderModule.html",[2,2.02,3,2.43,7,0.016,10,2.657,11,2.208,12,1.704,13,0.201,14,0.252,15,0.201,16,0.151,33,0.388,35,2.657,36,0.362,46,0.252,71,2.425,78,0.226,81,0.011,82,0.013,83,0.011,362,3.063,363,3.063,364,3.223,365,2.425,704,3.511,705,2.679,1077,4.357,1078,3.621,1304,4.28,1305,4.28,1361,5.507,1362,4.77,1363,4.77,1364,4.77,1365,5.514,1366,5.514,1367,6.634,1368,5.514,1369,6.634,1370,5.514]],["title/interfaces/OrganInfo.html",[47,0.234,1371,2.743]],["body/interfaces/OrganInfo.html",[7,0.017,13,0.064,14,0.08,15,0.064,16,0.048,20,2.878,27,1.326,28,0.493,29,0.949,31,0.275,33,0.147,36,0.115,46,0.197,47,0.106,49,0.848,53,2.273,54,0.949,58,1.801,59,0.746,62,0.46,68,1.195,74,3.787,76,1.018,78,0.119,81,0.004,82,0.006,83,0.004,84,0.521,85,0.163,86,0.434,102,0.592,145,3.879,146,1.778,147,3.806,148,2.919,154,0.543,162,0.737,165,0.543,172,2.474,178,0.521,180,0.897,181,0.52,262,0.543,263,2.06,268,4.17,269,1.778,273,0.952,275,0.618,276,1.668,277,0.773,280,2.078,281,1.668,299,1.668,305,1.51,306,0.673,308,0.673,313,0.704,314,0.773,315,0.773,321,3.697,328,1.778,329,0.812,332,3.143,341,1.33,423,1.387,451,1.01,456,1.523,462,1.668,529,2.253,535,1.154,545,2.78,558,1.63,561,2.06,604,1.248,605,2.06,613,2.06,622,1.668,623,1.248,694,0.737,707,0.773,708,3.31,736,1.154,819,3.982,897,2.474,908,3.341,921,1.364,930,2.435,950,1.248,957,2.631,958,2.435,959,2.271,961,1.077,979,4.181,996,4.175,1024,1.521,1036,1.364,1044,0.9,1088,3.724,1090,1.248,1147,4.479,1172,4.527,1283,3.055,1324,1.906,1371,3.852,1372,1.248,1373,1.248,1374,1.364,1375,2.903,1376,2.511,1377,6.638,1378,5.523,1379,6.638,1380,2.511,1381,2.903,1382,2.511,1383,2.511,1384,4.704,1385,2.511,1386,2.511,1387,2.511,1388,1.521,1389,2.903,1390,1.521,1391,1.521,1392,1.521,1393,1.521,1394,1.364,1395,1.521,1396,2.511,1397,1.521,1398,1.521,1399,2.511,1400,1.521,1401,2.511,1402,2.06,1403,3.724,1404,1.521,1405,1.521,1406,3.207,1407,4.438,1408,5.492,1409,1.521,1410,1.521,1411,1.521,1412,3.207,1413,5.089,1414,4.438,1415,1.521,1416,1.521,1417,1.521,1418,1.521,1419,2.511,1420,1.521,1421,3.207,1422,3.982,1423,1.521,1424,1.521,1425,1.521,1426,3.207,1427,4.438,1428,1.521,1429,1.521,1430,1.521,1431,1.521,1432,2.511,1433,1.521,1434,2.511,1435,2.511,1436,2.511,1437,1.521,1438,1.521,1439,3.207,1440,4.438,1441,1.521,1442,1.521,1443,1.521,1444,1.521,1445,2.511,1446,1.521,1447,1.521,1448,1.521,1449,2.511,1450,1.521,1451,1.521,1452,2.511,1453,1.521,1454,2.511,1455,3.724,1456,1.521,1457,1.521,1458,1.521,1459,4.438,1460,2.511,1461,1.521,1462,1.521,1463,2.511,1464,1.521,1465,1.521,1466,3.207,1467,2.511,1468,1.521,1469,1.521,1470,2.511,1471,1.521,1472,1.521,1473,2.511,1474,1.521,1475,3.207,1476,4.438,1477,1.521,1478,1.521,1479,1.521,1480,1.521,1481,2.511,1482,2.511,1483,1.521,1484,1.521,1485,2.511,1486,1.521,1487,2.511,1488,2.511,1489,3.724,1490,3.724,1491,1.521,1492,1.521,1493,1.521,1494,1.521,1495,1.521,1496,2.253,1497,1.521,1498,1.521,1499,5.376,1500,1.521,1501,1.758,1502,1.758,1503,1.758,1504,1.758,1505,4.305,1506,1.758,1507,3.708,1508,1.758,1509,4.305,1510,1.758,1511,1.758,1512,1.758,1513,2.435,1514,2.903,1515,3.207,1516,1.758,1517,2.511,1518,1.758,1519,3.708,1520,2.903,1521,3.708,1522,3.708,1523,4.305,1524,1.758,1525,1.758,1526,1.758,1527,1.758,1528,1.758,1529,2.903,1530,2.903,1531,1.758,1532,1.758,1533,3.708,1534,1.758,1535,2.903,1536,1.758,1537,1.758,1538,2.903,1539,1.521,1540,1.758,1541,1.758,1542,2.903,1543,1.758,1544,1.758,1545,1.758,1546,3.708,1547,1.758,1548,1.758,1549,1.758,1550,1.758,1551,1.758,1552,2.903,1553,1.758,1554,1.758,1555,4.765,1556,2.903,1557,3.708,1558,1.758,1559,4.909,1560,2.903,1561,3.708,1562,3.708,1563,5.428,1564,2.903,1565,2.903,1566,1.758,1567,1.758,1568,3.708,1569,1.758,1570,1.758,1571,1.758,1572,1.758,1573,1.758,1574,1.521,1575,1.758,1576,1.758,1577,1.758,1578,1.758,1579,1.758,1580,1.758,1581,1.758,1582,1.758,1583,1.758,1584,1.758,1585,1.758,1586,3.708,1587,2.903,1588,1.758,1589,1.758,1590,1.758,1591,1.758,1592,1.521,1593,1.758,1594,1.758,1595,1.758,1596,1.758,1597,1.758,1598,1.758,1599,1.521,1600,2.903,1601,2.903,1602,2.903,1603,2.903,1604,2.903,1605,1.758,1606,1.758,1607,1.758,1608,1.758]],["title/modules/OrganSelectorModule.html",[0,1.48,1609,2.743]],["body/modules/OrganSelectorModule.html",[2,2.039,3,2.444,7,0.016,10,2.672,11,2.229,12,1.72,13,0.203,14,0.255,15,0.203,16,0.152,33,0.383,35,2.672,36,0.365,46,0.255,71,2.447,78,0.229,81,0.011,82,0.013,83,0.011,362,3.08,363,3.08,364,3.241,365,2.447,707,3.515,708,2.334,1077,4.381,1078,3.655,1372,3.95,1373,3.95,1609,5.517,1610,4.814,1611,4.814,1612,4.814,1613,5.565,1614,5.565,1615,6.671,1616,5.565]],["title/interfaces/PanelData.html",[47,0.234,747,2.367]],["body/interfaces/PanelData.html",[7,0.017,13,0.235,14,0.204,15,0.249,16,0.122,28,0.561,31,0.696,33,0.326,36,0.292,46,0.295,47,0.351,49,1.019,54,1.138,56,1.495,59,0.696,78,0.183,81,0.009,82,0.012,83,0.009,84,1.318,85,0.412,86,0.866,93,0.994,113,2.279,114,0.987,126,1.792,154,0.833,175,1.63,176,1.495,181,0.797,275,0.947,300,1.63,341,1.374,456,1.118,540,2.161,545,2.279,654,2.556,730,4.255,731,2.279,732,2.409,733,3.157,734,2.921,735,3.452,736,2.921,737,3.494,738,4.187,739,3.157,740,3.332,741,3.72,742,4.187,743,3.452,744,5.007,745,4.5,746,3.157,747,3.951,748,4.598,749,4.649,750,2.725,751,2.921,752,3.157,753,4.5,754,2.921,755,3.452,756,3.157,757,3.951,758,4.5,759,3.452,760,3.452,761,2.725,762,3.452,763,3.452,764,3.452,765,3.452,766,3.452,767,3.452,768,3.452,769,3.452,770,3.452,771,3.452,772,3.452,773,3.452,774,4.5,775,4.5,776,3.452,777,3.452,778,3.452,779,3.452,780,3.452,781,3.452,782,3.452,783,3.452,784,3.452,785,3.452,786,3.452]],["title/interfaces/PluckUniqueOptions.html",[47,0.234,1617,2.743]],["body/interfaces/PluckUniqueOptions.html",[7,0.016,13,0.164,14,0.268,15,0.164,16,0.124,28,0.392,29,0.916,30,3.722,31,0.706,33,0.296,46,0.351,47,0.273,49,0.942,53,1.806,54,0.916,56,2.598,59,0.706,69,2.842,81,0.009,82,0.012,83,0.009,84,1.337,85,0.417,86,0.97,112,1.453,114,1.001,119,1.582,134,2.572,162,1.891,262,1.393,287,3.583,292,1.582,341,1.808,415,3.169,429,2.592,544,2.762,559,2.762,652,4.264,811,5.663,813,5.957,815,5.843,847,2.961,849,5.04,913,4.54,915,3.5,1617,5.486,1618,3.2,1619,3.2,1620,4.54,1621,5.617,1622,6.872,1623,5.85,1624,5.85,1625,5.85,1626,5.85,1627,6.64,1628,4.51,1629,4.51,1630,4.54,1631,3.901,1632,3.901,1633,3.901,1634,3.901,1635,5.06,1636,6.583,1637,6.311,1638,6.311,1639,5.944,1640,5.06,1641,5.617,1642,4.51,1643,3.842,1644,4.51,1645,4.51,1646,4.51,1647,4.51]],["title/interfaces/Segment.html",[47,0.234,585,2.538]],["body/interfaces/Segment.html",[7,0.017,12,1.408,13,0.114,14,0.144,15,0.114,16,0.086,27,0.538,28,0.466,31,0.922,33,0.23,36,0.206,46,0.209,47,0.275,49,0.869,54,1.118,58,2.861,59,1.054,68,1.468,69,2.213,78,0.22,81,0.012,82,0.009,83,0.006,84,0.929,85,0.623,86,0.88,97,1.054,102,0.929,154,1.004,164,2.719,165,1.408,178,0.929,180,1.819,181,0.562,262,0.969,267,4.618,270,2.059,271,3.286,274,1.523,275,0.969,277,1.379,280,2.054,289,3.659,290,2.893,291,1.523,300,2.885,305,1.1,306,1.201,308,1.201,310,1.523,311,1.523,313,1.256,314,1.379,315,1.379,326,1.698,329,3.109,339,2.213,340,1.379,341,1.819,423,1.729,456,0.788,523,1.802,525,2.225,526,4.105,527,3.182,528,2.059,531,3.808,538,2.059,540,2.861,541,2.991,551,2.225,552,1.256,557,2.225,558,2.589,559,3.286,560,5.458,561,3.233,563,2.434,564,2.434,565,5.458,566,2.434,568,2.434,576,5.064,577,2.434,578,2.434,579,3.536,580,2.434,584,2.991,585,4.618,586,2.434,588,2.434,589,5.819,590,4.164,591,3.536,592,3.867,594,2.434,595,2.434,596,2.225,597,2.434,604,2.225,605,3.233,607,2.434,608,2.434,609,2.225,610,2.434,611,5.064,613,2.225,614,4.164,615,2.225,617,2.225,618,2.225,619,2.059,620,2.225,621,3.536,622,3.384,623,2.225,624,2.225,625,3.233,626,2.79,627,2.79,628,2.434,629,2.434,630,3.536,631,2.434,632,3.536,633,2.434,634,2.434,635,1.921,636,3.536,637,2.434,638,4.164,639,2.991,640,2.225,641,2.434,642,2.434,643,3.536,644,2.434,645,2.434,646,3.536,647,2.434,648,2.225,649,3.536,650,3.536,651,3.536,652,2.059,653,2.434,654,1.802,655,2.434,656,2.434,657,2.434,658,2.434,659,2.434,660,2.434,661,2.434,662,2.434,663,2.434,664,2.434,665,2.434,666,2.434,667,2.434,668,2.434,669,2.434,670,2.434,671,2.059,672,2.225,673,2.059,674,2.434,675,2.434,676,2.225,677,2.225,678,2.434,679,2.225,680,2.434,681,1.921,682,2.434,683,2.434,684,2.225,685,2.225,686,2.434,687,2.434,688,2.434,689,2.434]],["title/components/SpatialSearchListComponent.html",[275,0.822,710,1.621]],["body/components/SpatialSearchListComponent.html",[7,0.016,13,0.189,14,0.135,15,0.108,16,0.193,19,1.01,24,1.603,26,1.2,27,1.096,28,0.602,29,0.812,31,0.897,33,0.15,36,0.194,46,0.2,47,0.264,49,0.788,53,2.294,54,0.897,59,0.463,62,1.5,68,1.407,78,0.263,81,0.006,82,0.009,83,0.006,85,0.641,86,0.652,102,1.525,134,2.686,150,2.974,154,1.072,165,2.141,181,1.095,245,1.437,262,1.975,268,3.102,269,4.157,272,4.065,273,1.602,274,1.437,275,1.104,276,3.511,277,1.301,280,1.986,281,2.982,290,1.241,292,2.143,300,1.084,301,3.309,305,2.563,306,1.671,308,1.671,310,2.121,311,2.121,312,1.241,313,2.447,314,1.92,315,2.281,328,3.508,329,2.016,332,4.377,341,1.888,358,1.301,366,1.301,423,0.953,456,1.439,527,1.301,552,1.185,553,2.121,554,1.602,555,1.602,556,1.515,558,2.518,562,1.437,573,2.867,574,2.674,626,3.178,627,2.674,691,1.812,692,2.674,693,1.602,694,1.831,695,1.301,696,3.102,697,1.602,698,1.602,699,1.602,700,1.301,701,1.602,702,1.241,703,1.602,704,1.301,705,1.437,706,1.602,707,1.301,708,1.241,709,1.602,710,2.402,711,1.602,712,1.301,713,1.515,714,1.602,715,1.602,716,1.301,717,1.366,718,1.515,719,1.515,720,1.241,721,1.515,722,1.602,741,1.437,761,2.674,844,3.508,897,1.7,905,2.867,927,2.559,959,1.812,997,2.867,1026,2.867,1044,2.236,1056,3.098,1064,2.296,1068,1.812,1142,2.1,1143,2.1,1152,3.761,1153,1.812,1154,2.559,1160,1.812,1164,2.1,1165,2.559,1179,1.943,1317,3.388,1324,5.083,1352,4.55,1359,2.559,1513,4.91,1643,2.867,1648,5.001,1649,5.001,1650,2.296,1651,3.776,1652,4.488,1653,3.776,1654,4.366,1655,4.366,1656,4.366,1657,4.488,1658,4.488,1659,2.958,1660,2.958,1661,2.958,1662,2.958,1663,3.776,1664,4.366,1665,3.776,1666,2.958,1667,3.776,1668,3.388,1669,3.388,1670,3.776,1671,2.958,1672,3.776,1673,2.958,1674,2.296,1675,2.1,1676,4.488,1677,3.776,1678,4.955,1679,3.776,1680,2.559,1681,2.559,1682,2.559,1683,2.559,1684,2.559,1685,2.559,1686,4.366,1687,2.1,1688,2.958,1689,6.109,1690,2.958,1691,2.958,1692,2.958]],["title/interfaces/SpatialSearchListItem.html",[47,0.234,1675,2.743]],["body/interfaces/SpatialSearchListItem.html",[7,0.017,13,0.157,14,0.198,15,0.157,16,0.118,28,0.494,31,0.676,33,0.218,36,0.283,46,0.26,47,0.384,49,0.872,53,2.706,54,1.058,59,0.676,68,1.39,78,0.233,81,0.009,82,0.011,83,0.009,84,1.279,85,0.65,86,0.849,102,1.16,134,2.499,150,2.943,154,1.19,165,1.964,181,1.139,262,2.271,268,3.079,269,3.482,272,4.034,273,3.079,274,2.096,275,1.21,276,3.653,277,1.898,280,2.434,281,3.653,301,3.128,305,1.514,306,1.652,308,1.652,310,2.096,311,2.096,313,1.728,314,1.898,315,1.898,328,3.482,329,1.993,332,4.702,341,2.169,456,1.429,558,1.898,626,2.643,627,2.643,710,1.81,761,2.643,844,3.482,897,3.267,905,2.834,997,2.834,1026,2.834,1324,5.127,1352,4.61,1513,4.898,1643,2.834,1648,3.063,1649,3.063,1650,3.349,1651,3.733,1652,3.733,1653,3.733,1657,3.733,1658,3.733,1663,3.733,1665,3.733,1667,3.733,1668,3.349,1669,3.349,1670,3.733,1672,3.733,1674,4.412,1675,4.034,1676,3.733,1677,4.917,1678,5.844,1679,4.917,1680,3.733,1681,3.733,1682,3.733,1683,3.733,1684,3.733,1685,3.733]],["title/modules/SpatialSearchListModule.html",[0,1.48,1693,2.743]],["body/modules/SpatialSearchListModule.html",[2,1.993,3,2.411,7,0.016,10,2.635,11,2.179,12,1.681,13,0.198,14,0.249,15,0.198,16,0.149,33,0.392,35,2.635,36,0.357,46,0.249,71,2.392,78,0.223,81,0.011,82,0.013,83,0.011,150,2.179,301,2.967,362,3.038,363,3.038,364,3.196,365,2.392,710,3.344,1077,4.321,1078,3.572,1648,3.86,1649,3.86,1693,5.492,1694,4.705,1695,4.705,1696,4.705,1697,5.44,1698,5.692,1699,4.705,1700,6.58,1701,5.44,1702,6.58,1703,5.44,1704,5.44]],["title/interfaces/StackOp.html",[47,0.234,592,2.538]],["body/interfaces/StackOp.html",[7,0.017,12,1.408,13,0.114,14,0.144,15,0.114,16,0.086,27,0.538,28,0.467,31,0.922,33,0.231,36,0.206,46,0.209,47,0.276,49,0.693,54,1.118,58,2.214,59,1.054,68,1.011,69,2.214,78,0.22,81,0.012,82,0.009,83,0.006,84,0.93,85,0.67,86,0.88,97,1.055,102,0.93,154,1.005,164,2.72,165,1.82,178,0.93,180,1.82,181,0.562,262,0.97,267,4.753,270,2.061,271,3.288,274,1.525,275,0.97,277,1.38,280,2.055,289,3.814,290,2.894,291,1.525,300,2.845,305,1.101,306,1.202,308,1.202,310,1.525,311,1.525,313,1.257,314,1.38,315,1.38,326,1.7,329,3.186,339,2.214,340,1.38,341,1.82,423,1.73,456,0.789,523,1.804,525,2.227,526,3.596,527,2.87,528,2.061,531,3.81,538,2.061,540,2.862,541,2.993,551,2.227,552,1.257,557,2.227,558,2.36,559,2.792,560,5.459,561,3.235,563,2.436,564,2.436,565,5.545,566,2.436,568,2.436,576,5.227,577,2.436,578,2.436,579,4.166,580,2.436,584,2.993,585,4.423,586,2.436,588,2.436,589,5.856,590,4.166,591,4.166,592,4.109,594,2.436,595,2.436,596,2.227,597,2.436,604,2.227,605,3.235,607,2.436,608,2.436,609,2.227,610,2.436,611,5.066,613,2.227,614,4.572,615,2.227,617,2.227,618,2.227,619,2.061,620,2.227,621,2.436,622,2.62,623,3.235,624,3.235,625,4.441,626,3.288,627,3.832,628,2.436,629,2.436,630,3.538,631,2.436,632,3.538,633,2.436,634,2.436,635,1.922,636,3.538,637,2.436,638,4.166,639,2.993,640,2.227,641,2.436,642,2.436,643,3.538,644,2.436,645,2.436,646,3.538,647,2.436,648,2.227,649,3.538,650,3.538,651,3.538,652,2.061,653,2.436,654,1.804,655,2.436,656,2.436,657,2.436,658,2.436,659,2.436,660,2.436,661,2.436,662,2.436,663,2.436,664,2.436,665,2.436,666,2.436,667,2.436,668,2.436,669,2.436,670,2.436,671,2.061,672,2.227,673,2.061,674,2.436,675,2.436,676,2.227,677,2.227,678,2.436,679,2.227,680,2.436,681,1.922,682,2.436,683,2.436,684,2.227,685,2.227,686,2.436,687,2.436,688,2.436,689,2.436]],["title/components/StoreDebugComponent.html",[275,0.822,712,1.699]],["body/components/StoreDebugComponent.html",[7,0.016,13,0.203,14,0.154,15,0.123,16,0.193,19,1.108,24,1.591,26,0.778,27,1.226,28,0.581,29,0.526,31,0.75,33,0.282,36,0.22,46,0.256,49,0.618,54,0.952,58,2.711,59,0.526,61,3.694,62,1.841,69,2.955,78,0.274,81,0.007,82,0.01,83,0.007,85,0.311,86,0.716,102,1.555,114,0.746,126,2.31,134,1.479,150,1.347,154,0.897,176,2.044,178,1.42,179,1.084,180,2.065,181,1,245,1.634,262,1.48,274,1.634,275,1.562,277,1.479,290,1.41,292,2.134,300,1.232,301,1.41,305,2.623,306,1.834,308,1.834,310,2.327,311,2.327,312,1.41,313,2.575,314,2.107,315,2.454,326,2.595,339,2.327,340,2.107,341,1.48,358,1.479,366,1.479,423,1.084,451,3.495,456,1.204,462,3.207,527,1.479,540,1.634,552,1.347,553,2.327,554,1.822,555,1.822,556,1.723,558,1.479,562,1.634,574,2.935,615,3.4,691,2.06,693,1.822,694,2.009,695,1.479,696,3.294,697,1.822,698,1.822,699,1.822,700,1.479,701,1.822,702,1.41,703,1.822,704,1.479,705,1.634,706,1.822,707,1.479,708,1.41,709,1.822,710,1.41,711,1.822,712,2.674,713,4.065,714,1.822,715,1.822,716,1.479,717,1.553,718,1.723,719,1.723,720,1.41,721,1.723,722,1.822,809,3.146,844,2.935,845,2.209,877,3.4,885,3.718,908,3.718,971,4.515,980,3.207,990,2.387,1069,2.909,1091,3.146,1513,3.146,1687,2.387,1705,4.988,1706,4.988,1707,2.61,1708,4.144,1709,7.029,1710,5.581,1711,4.791,1712,4.791,1713,6.082,1714,6.082,1715,4.791,1716,4.72,1717,4.791,1718,4.791,1719,4.791,1720,3.363,1721,4.791,1722,3.363,1723,4.791,1724,3.363,1725,3.363,1726,4.827,1727,5.561,1728,2.909,1729,4.144,1730,3.363,1731,3.363,1732,3.363,1733,3.363,1734,3.363,1735,4.791,1736,3.363,1737,3.363,1738,3.363,1739,3.363,1740,3.363,1741,3.363,1742,4.791,1743,4.791,1744,4.791,1745,4.144]],["title/modules/StoreDebugModule.html",[0,1.48,1746,2.743]],["body/modules/StoreDebugModule.html",[2,2.084,3,2.476,7,0.016,10,2.707,11,2.278,12,1.758,13,0.207,14,0.26,15,0.207,16,0.156,33,0.365,35,2.707,36,0.373,46,0.26,71,2.501,78,0.234,81,0.011,82,0.014,83,0.011,362,3.121,363,3.121,364,3.283,365,2.501,712,3.524,713,2.914,1705,4.037,1706,4.037,1746,5.541,1747,4.92,1748,4.92,1749,4.92,1750,5.688,1751,5.688]],["title/components/TextSearchComponent.html",[275,0.822,312,1.621]],["body/components/TextSearchComponent.html",[7,0.016,13,0.17,14,0.114,15,0.091,16,0.2,19,0.887,24,1.68,26,1.312,27,1.177,28,0.613,29,1.008,30,2.844,31,0.887,33,0.303,36,0.163,46,0.214,47,0.151,49,0.929,54,0.6,56,1.571,59,0.6,62,1.824,63,1.863,68,0.803,72,2.864,78,0.246,81,0.005,82,0.008,83,0.005,85,0.231,86,0.573,102,1.481,112,1.506,114,0.553,115,1.045,116,1.045,117,1.432,119,0.874,137,1.349,150,0.998,154,0.983,162,1.045,164,1.15,165,2.18,170,1.432,175,0.913,176,0.837,179,1.236,180,1.622,181,1.248,245,1.863,258,4.024,259,4.805,260,4.805,261,1.768,262,1.752,263,1.768,264,2.155,265,4.57,266,5.636,267,1.636,268,2.077,269,2.864,270,1.636,271,1.526,272,2.722,273,2.532,274,1.21,275,1.207,276,2.687,277,1.095,278,1.349,279,2.722,280,2.293,281,2.687,282,4.044,283,1.768,284,4.4,285,1.933,286,2.518,287,2.864,288,4.044,289,1.276,290,1.608,291,1.21,292,2.259,293,4.647,294,5.589,295,1.933,296,1.933,297,1.768,298,1.768,299,1.432,300,2.836,301,3.253,302,5.535,303,3.317,304,2.976,305,2.475,306,1.468,307,3.317,308,1.468,309,4.044,310,1.863,311,1.863,312,2.202,313,2.271,314,1.686,315,2.056,316,3.723,317,2.155,318,2.155,319,2.155,320,2.155,321,1.349,322,3.317,323,5.396,324,3.317,325,3.317,326,3.243,327,4.904,328,3.668,329,1.771,330,4.044,331,5.127,332,2.864,333,4.044,334,5.127,335,4.904,336,4.044,337,3.317,338,3.317,339,1.863,340,1.686,341,1.185,342,4.044,343,2.155,344,2.155,345,3.317,346,2.722,347,3.317,348,2.976,349,2.687,350,3.317,351,2.204,352,2.155,353,2.155,358,1.095,366,1.095,423,1.236,456,0.626,527,1.095,544,2.349,552,0.998,553,1.863,554,1.349,555,1.349,556,1.276,558,1.095,562,1.21,573,2.518,574,2.349,691,1.526,692,1.526,693,1.349,694,1.608,695,1.095,696,2.844,697,1.349,698,1.349,699,1.349,700,1.095,701,1.349,702,1.045,703,1.349,704,1.095,705,1.21,706,1.349,707,1.095,708,1.045,709,1.349,710,1.045,711,1.349,712,1.095,713,1.276,714,1.349,715,1.349,716,1.095,717,1.15,718,1.276,719,1.276,720,1.045,721,1.276,722,1.349,809,2.518,885,1.933,1044,1.276,1052,1.933,1053,2.976,1068,1.526,1142,1.768,1143,1.768,1144,4.4,1146,2.155,1147,1.526,1152,1.636,1153,2.349,1160,1.526,1163,1.933,1164,1.768,1179,1.636,1317,2.976,1352,1.636,1357,3.317,1559,2.155,1668,1.933,1669,1.933,1687,1.768,1752,3.835,1753,3.835,1754,3.835,1755,2.491,1756,2.491,1757,2.491,1758,2.491,1759,2.491,1760,3.835,1761,2.491,1762,2.491,1763,3.835,1764,2.491,1765,2.491,1766,2.491,1767,2.491,1768,2.491,1769,2.155,1770,2.491,1771,2.491,1772,2.491,1773,2.491,1774,2.491,1775,4.647,1776,2.491,1777,2.491,1778,2.491,1779,2.491]],["title/modules/TextSearchModule.html",[0,1.48,1780,2.743]],["body/modules/TextSearchModule.html",[2,1.877,3,2.324,7,0.016,10,2.54,11,2.052,12,1.583,13,0.187,14,0.235,15,0.187,16,0.14,33,0.391,35,2.54,36,0.336,46,0.235,71,2.789,78,0.21,81,0.01,82,0.013,83,0.01,259,3.364,260,3.364,283,3.636,290,2.149,291,2.489,300,1.877,312,3.319,362,2.929,363,2.929,364,3.081,365,2.253,620,3.636,723,4.951,1775,3.976,1780,5.591,1781,4.432,1782,4.432,1783,5.123,1784,4.432,1785,6.611,1786,6.611,1787,5.123,1788,6.343,1789,6.343,1790,6.343,1791,5.123,1792,6.343,1793,5.123,1794,6.343,1795,5.123,1796,5.123,1797,5.123,1798,5.123,1799,5.123]],["title/components/TrackingPopupComponent.html",[275,0.822,716,1.699]],["body/components/TrackingPopupComponent.html",[0,1.291,6,3.343,7,0.016,12,1.988,13,0.204,14,0.154,15,0.123,16,0.199,19,1.111,24,1.656,26,1.293,27,1.147,28,0.598,29,0.875,31,0.875,33,0.283,36,0.221,46,0.154,49,0.435,53,2.577,54,0.528,59,0.875,62,1.257,68,1.801,74,1.638,78,0.23,81,0.007,82,0.01,83,0.007,85,0.444,86,0.717,102,1.563,126,1.988,132,2.066,150,1.351,168,2.94,179,1.087,181,1.091,245,2.332,274,1.638,275,1.189,277,1.483,278,1.827,290,1.414,292,1.684,300,1.236,301,1.414,302,2.618,305,2.624,306,1.838,308,1.838,310,2.332,311,2.332,312,1.414,313,1.923,314,2.111,315,2.458,358,1.483,366,1.483,423,2.155,449,2.94,456,1.53,464,3.407,465,3.152,527,1.483,552,1.351,553,2.332,554,1.827,555,1.827,556,1.728,558,2.111,562,1.638,574,2.94,622,3.212,691,2.066,692,2.94,693,1.827,694,2.013,695,1.483,696,3.298,697,1.827,698,1.827,699,1.827,700,1.483,701,1.827,702,1.414,703,1.827,704,1.483,705,1.638,706,1.827,707,1.483,708,1.414,709,1.827,710,1.414,711,1.827,712,1.483,713,1.728,714,1.827,715,1.827,716,2.678,717,3.425,718,3.525,719,1.728,720,1.414,721,1.728,722,1.827,741,1.638,809,3.152,930,3.152,957,3.407,958,3.152,959,2.94,961,3.73,962,4.338,994,4.338,1011,4.153,1044,2.459,1062,3.726,1068,2.066,1098,3.967,1107,2.618,1149,2.618,1153,2.94,1159,2.618,1160,2.94,1244,4.153,1268,2.918,1269,2.918,1270,2.918,1271,2.618,1283,4.567,1352,2.215,1354,2.618,1599,5.567,1800,5.634,1801,5.634,1802,2.918,1803,5.589,1804,4.801,1805,6.09,1806,4.801,1807,4.801,1808,5.555,1809,4.801,1810,4.801,1811,4.801,1812,3.373,1813,4.801,1814,7.259,1815,3.373,1816,4.801,1817,3.373,1818,3.373,1819,4.801,1820,3.373,1821,3.373,1822,3.373,1823,3.373,1824,3.373,1825,3.373,1826,3.373,1827,3.373,1828,3.373,1829,4.801,1830,3.373,1831,3.373,1832,3.373,1833,3.373,1834,3.373,1835,4.153,1836,4.801,1837,4.153,1838,4.801,1839,3.373,1840,3.373,1841,4.801,1842,3.373,1843,3.726,1844,3.373,1845,3.373,1846,3.373,1847,3.373,1848,4.801,1849,5.589,1850,3.373,1851,3.373,1852,3.373,1853,3.373,1854,3.373,1855,3.373,1856,2.918,1857,3.373,1858,3.373,1859,3.373,1860,3.373,1861,3.373]],["title/modules/TrackingPopupModule.html",[0,1.48,1862,2.743]],["body/modules/TrackingPopupModule.html",[2,2.058,3,2.458,7,0.016,10,2.687,11,2.25,12,1.736,13,0.205,14,0.257,15,0.205,16,0.154,33,0.376,35,2.687,36,0.368,46,0.257,71,2.47,78,0.231,81,0.011,82,0.013,83,0.011,362,3.098,363,3.098,364,3.259,365,2.47,716,3.519,717,2.594,1698,5.803,1699,4.859,1800,4.36,1801,4.36,1862,5.528,1863,4.859,1864,4.859,1865,4.859,1866,5.617,1867,5.617]],["title/injectables/TrackingState.html",[93,0.663,1868,2.743]],["body/injectables/TrackingState.html",[7,0.016,13,0.184,14,0.231,15,0.184,16,0.172,19,1.455,24,1.169,26,1.169,27,1.078,28,0.439,29,0.791,31,0.791,33,0.362,36,0.331,40,2.736,41,2.588,46,0.328,47,0.305,53,2.952,54,1.121,56,1.698,59,0.791,62,1.647,63,2.454,74,2.454,76,2.402,78,0.207,81,0.01,82,0.013,83,0.01,85,0.468,93,1.078,231,2.023,245,2.454,321,2.736,371,2.903,456,1.58,717,2.333,751,3.317,802,5.314,839,4.88,840,4.462,841,3.921,842,3.921,844,3.851,845,3.317,850,3.585,979,3.094,1219,3.585,1808,5.72,1868,4.462,1869,3.317,1870,6.288,1871,5.439,1872,5.922,1873,5.052,1874,3.585,1875,3.585,1876,4.462,1877,4.496,1878,4.37,1879,4.37,1880,5.439,1881,4.37,1882,4.37,1883,4.37,1884,4.37,1885,3.921,1886,4.37,1887,4.37,1888,4.37]],["title/interfaces/TrackingStateModel.html",[47,0.234,1874,2.743]],["body/interfaces/TrackingStateModel.html",[7,0.016,13,0.187,14,0.236,15,0.187,16,0.141,27,0.882,28,0.447,29,0.996,33,0.365,36,0.337,40,2.787,41,2.636,46,0.33,47,0.311,53,2.967,54,1.129,56,1.729,59,0.805,62,1.666,63,2.499,74,2.499,76,2.422,78,0.211,81,0.01,82,0.013,83,0.01,84,1.525,85,0.476,86,0.95,93,1.09,321,2.787,371,2.376,456,1.293,717,2.376,751,3.379,802,4.936,839,4.936,840,4.514,841,3.993,842,3.993,844,3.896,845,3.379,850,3.652,979,3.152,1219,3.652,1808,5.937,1868,3.652,1869,3.379,1871,4.451,1872,5.501,1874,4.514,1875,3.652,1876,4.514,1877,4.533,1878,4.451,1879,4.451,1880,5.501,1881,4.451,1882,4.451,1883,4.451,1884,4.451,1885,3.993,1886,4.451,1887,4.451,1888,4.451]],["title/injectables/WorkerCCFDatabaseDataSourceService.html",[93,0.663,438,2.367]],["body/injectables/WorkerCCFDatabaseDataSourceService.html",[7,0.016,13,0.121,14,0.277,15,0.121,16,0.13,19,1.1,24,1.778,26,1.726,27,1.241,28,0.649,29,1.133,31,1.191,33,0.347,36,0.218,46,0.218,47,0.201,49,0.613,54,0.868,59,0.868,76,1.167,78,0.228,81,0.007,82,0.01,83,0.007,85,0.308,86,0.71,88,1.667,93,1.037,97,2.603,102,0.679,103,2.939,112,2.486,114,0.738,115,1.395,116,1.395,119,1.167,122,2.09,123,1.704,124,1.704,126,1.028,151,1.616,152,3.074,154,0.623,175,1.219,176,1.118,180,1.714,181,1.193,185,2.439,189,2.439,191,2.439,193,2.439,196,2.439,198,2.439,201,1.463,203,1.463,205,1.463,207,1.463,209,1.463,212,1.463,214,1.463,216,1.463,231,1.332,232,2.435,233,2.435,234,2.435,235,2.435,236,2.435,237,2.435,242,3.074,349,3.188,351,2.732,368,4.198,369,3.121,370,2.184,371,2.956,372,2.694,373,3.004,374,3.936,375,3.707,376,3.41,377,3.689,378,2.732,379,2.184,381,2.581,382,4.37,383,5.251,385,4.295,386,4.295,388,2.037,389,3.004,390,2.732,391,5.023,392,3.822,393,2.184,394,2.184,395,2.184,396,2.184,397,2.184,398,2.184,399,2.184,400,2.184,401,2.184,402,2.184,403,2.184,404,2.184,405,2.184,406,2.581,407,3.373,408,3.373,409,2.361,410,3.373,411,2.361,412,2.184,413,3.373,414,2.911,415,1.802,416,1.704,417,2.184,418,2.184,419,2.361,420,2.184,421,2.361,422,2.361,423,1.072,424,2.361,425,2.361,426,2.361,427,2.361,428,2.361,429,1.912,430,3.373,431,2.361,432,2.184,433,2.184,434,2.361,435,2.037,436,2.361,437,3.121,438,2.911,439,3.373,440,3.642,441,2.361,442,2.361,443,2.361,444,2.361,446,2.877,447,2.877,1889,4.753,1890,3.326,1891,3.326]],["title/interfaces/XYZTriplet.html",[47,0.234,1892,3]],["body/interfaces/XYZTriplet.html",[7,0.017,10,2.411,13,0.12,14,0.151,15,0.12,16,0.09,27,0.564,28,0.479,33,0.279,36,0.216,46,0.151,47,0.199,49,0.711,53,1.889,54,0.998,59,1.094,62,1.789,68,2.292,74,1.598,78,0.226,81,0.007,82,0.009,83,0.007,84,0.975,85,0.304,86,0.705,100,2.925,102,1.125,114,0.73,134,3.129,154,1.279,162,1.978,165,2.334,178,0.975,180,2.281,181,1.224,268,1.782,275,1.173,276,3.926,277,1.447,280,2.724,281,3.926,305,1.154,306,1.26,308,1.26,313,1.318,314,1.447,315,1.447,340,1.447,349,1.891,351,1.891,358,1.447,359,2.553,360,2.553,366,3.129,414,2.015,423,2.326,433,2.16,451,1.891,456,1.602,462,2.71,685,2.335,756,2.335,945,2.553,971,2.16,980,2.71,1009,2.015,1044,1.685,1090,2.335,1091,2.16,1152,2.16,1153,2.015,1283,3.912,1387,4.079,1388,2.846,1402,3.347,1539,2.846,1716,2.553,1856,5.208,1892,5.148,1893,2.846,1894,6.374,1895,6.374,1896,7.115,1897,3.29,1898,3.29,1899,5.302,1900,2.846,1901,3.29,1902,2.846,1903,3.29,1904,3.29,1905,4.769,1906,4.716,1907,3.29,1908,3.29,1909,4.716,1910,4.716,1911,3.29,1912,3.29,1913,3.29,1914,4.716,1915,3.29,1916,3.29,1917,4.716,1918,3.29,1919,3.29,1920,4.716,1921,4.716,1922,3.29,1923,3.29,1924,4.716,1925,3.29,1926,3.29,1927,4.716,1928,4.716,1929,3.29,1930,3.29,1931,3.29,1932,3.29,1933,3.29,1934,3.29,1935,3.29,1936,4.716,1937,4.716,1938,3.29,1939,4.716,1940,3.29,1941,3.29,1942,3.29,1943,3.29,1944,3.29,1945,3.29,1946,3.29,1947,3.29,1948,3.29,1949,3.29,1950,3.29,1951,3.29,1952,3.29,1953,3.29,1954,3.29,1955,3.29,1956,3.29,1957,2.846,1958,4.079,1959,3.29,1960,4.716,1961,3.29,1962,4.716,1963,3.29,1964,4.716,1965,5.513,1966,3.29,1967,3.29,1968,3.29,1969,3.29,1970,3.29,1971,3.29,1972,3.29,1973,3.29,1974,4.716,1975,3.29,1976,3.29,1977,4.716,1978,3.29,1979,4.716,1980,3.29,1981,3.29,1982,3.29,1983,3.29,1984,3.29,1985,3.29,1986,3.29,1987,3.29,1988,3.29,1989,3.29,1990,3.29,1991,4.716,1992,3.29,1993,3.29,1994,3.29,1995,3.29,1996,3.29,1997,3.29,1998,3.29,1999,3.29,2000,3.29,2001,3.29,2002,3.29,2003,3.29,2004,4.716,2005,3.29,2006,3.29,2007,3.29,2008,3.29]],["title/changelog.html",[2009,2.503,2010,2.289,2011,2.503]],["body/changelog.html",[3,1.547,7,0.012,13,0.195,18,0.98,24,0.394,28,0.148,29,0.267,30,1.533,40,0.923,41,0.873,47,0.324,68,1.361,81,0.003,82,0.006,83,0.011,84,0.505,86,0.255,97,1.42,102,1.491,103,1.965,117,0.98,126,2.186,132,1.044,139,1.858,141,1.119,145,1.626,146,1.733,149,1.119,152,0.787,154,1.089,159,1.044,165,0.527,176,0.573,182,2.9,183,0.923,265,2.008,268,0.923,271,3.096,273,1.533,275,0.899,292,0.598,299,2.905,301,2.58,305,0.993,316,1.119,326,2.288,329,1.675,331,2.196,332,1.044,334,1.323,346,1.21,366,2.557,414,2.587,432,1.858,527,0.75,528,1.119,545,1.45,553,1.375,556,0.873,558,2.06,559,1.044,562,2.052,584,1.119,603,1.323,609,2.008,618,2.008,622,0.98,624,1.21,625,5.621,627,1.733,635,2.222,639,1.119,640,1.21,654,0.98,671,1.858,672,2.008,673,1.119,679,1.21,681,1.733,694,0.715,705,0.828,708,3.022,718,0.873,734,1.858,737,2.737,738,1.044,739,1.21,740,2.085,752,2.008,761,1.044,837,3.077,877,1.21,880,2.448,881,4.053,898,1.475,900,1.323,905,1.119,930,3.516,933,1.475,937,1.475,942,2.196,946,2.008,948,4.372,949,2.196,950,1.21,951,1.475,952,1.475,961,1.733,994,2.196,995,1.119,996,1.21,998,2.383,999,1.475,1009,3.926,1015,5.36,1016,5.674,1025,1.475,1026,3.077,1035,1.475,1042,1.21,1044,0.873,1062,3.278,1091,1.119,1098,1.21,1109,1.323,1114,3.278,1115,1.323,1147,1.044,1151,1.323,1156,1.119,1172,1.119,1176,1.475,1265,1.475,1271,1.323,1288,1.475,1309,3.139,1324,1.119,1326,5.923,1340,2.448,1351,3.654,1354,2.196,1358,1.475,1360,1.475,1378,1.323,1380,1.475,1382,1.475,1383,2.448,1384,5.058,1385,1.475,1422,2.816,1499,2.448,1500,2.448,1513,1.858,1515,3.139,1517,2.448,1574,4.372,1592,1.475,1643,1.858,1674,2.196,1687,2.575,1708,1.475,1716,3.637,1745,1.475,1775,1.323,1837,1.475,1843,1.323,1885,1.323,1899,4.775,1900,5.72,1902,3.654,1905,4.848,1957,3.139,1958,1.475,2010,2.575,2011,2.196,2012,1.475,2013,1.475,2014,4.848,2015,2.83,2016,4.224,2017,4.686,2018,1.705,2019,2.83,2020,2.83,2021,5.054,2022,2.83,2023,1.705,2024,1.705,2025,1.705,2026,6.153,2027,2.83,2028,4.632,2029,4.632,2030,1.705,2031,5.355,2032,1.705,2033,2.83,2034,4.224,2035,5.605,2036,1.705,2037,1.705,2038,4.224,2039,2.83,2040,6.517,2041,3.628,2042,1.705,2043,2.83,2044,3.628,2045,1.705,2046,1.705,2047,1.705,2048,1.705,2049,1.705,2050,6.517,2051,1.705,2052,1.705,2053,1.475,2054,1.475,2055,1.475,2056,1.705,2057,2.83,2058,1.475,2059,1.705,2060,2.83,2061,4.224,2062,4.224,2063,1.705,2064,3.628,2065,1.705,2066,1.705,2067,2.83,2068,1.705,2069,1.705,2070,5.054,2071,4.053,2072,3.139,2073,1.705,2074,5.997,2075,4.053,2076,1.705,2077,2.83,2078,1.705,2079,3.628,2080,4.848,2081,6.41,2082,2.83,2083,1.705,2084,1.705,2085,2.83,2086,6.153,2087,3.139,2088,1.705,2089,5.054,2090,4.686,2091,1.705,2092,1.705,2093,4.686,2094,1.705,2095,1.705,2096,1.705,2097,1.705,2098,3.628,2099,1.705,2100,2.448,2101,2.448,2102,5.355,2103,1.705,2104,4.848,2105,1.705,2106,1.705,2107,1.705,2108,1.705,2109,1.705,2110,1.705,2111,4.053,2112,4.514,2113,4.053,2114,1.705,2115,2.83,2116,2.83,2117,2.83,2118,2.83,2119,2.83,2120,1.705,2121,1.705,2122,1.705,2123,1.705,2124,3.139,2125,2.83,2126,2.83,2127,1.705,2128,2.83,2129,2.83,2130,2.83,2131,4.224,2132,2.448,2133,1.705,2134,1.705,2135,1.705,2136,1.705,2137,2.83,2138,1.705,2139,1.705,2140,2.448,2141,1.705,2142,3.628,2143,2.83,2144,5.054,2145,2.448,2146,2.83,2147,4.224,2148,1.705,2149,1.705,2150,2.448,2151,4.224,2152,1.705,2153,1.705,2154,1.475,2155,1.705,2156,2.83,2157,1.705,2158,1.705,2159,2.83,2160,1.705,2161,2.83,2162,1.705,2163,1.475,2164,1.705,2165,1.705,2166,1.705,2167,1.705,2168,1.705,2169,1.705,2170,1.705,2171,1.705,2172,1.705,2173,1.705,2174,1.705,2175,1.705,2176,1.705,2177,2.83,2178,1.705,2179,5.054,2180,1.705,2181,1.705,2182,3.628,2183,3.628,2184,2.83,2185,1.705,2186,1.705,2187,1.705,2188,2.83,2189,2.83,2190,1.705,2191,1.705,2192,1.705,2193,2.83,2194,2.83,2195,3.628,2196,1.705,2197,1.705,2198,1.705,2199,1.705,2200,2.83,2201,1.705,2202,2.83,2203,4.224,2204,1.705,2205,1.705,2206,1.705,2207,5.054,2208,2.83,2209,1.705,2210,1.705,2211,3.628,2212,2.83,2213,2.83,2214,4.224,2215,1.705,2216,1.705,2217,1.705,2218,2.83,2219,1.705,2220,1.705,2221,1.705,2222,1.705,2223,1.705,2224,4.224,2225,1.705,2226,3.628,2227,4.224,2228,1.705,2229,3.628,2230,4.686,2231,2.83,2232,2.83,2233,2.83,2234,3.628,2235,4.224,2236,4.686,2237,3.628,2238,1.705,2239,1.705,2240,5.355,2241,3.628,2242,1.705,2243,4.224,2244,4.224,2245,5.816,2246,1.705,2247,1.705,2248,1.705,2249,1.705,2250,1.705,2251,1.705,2252,2.83,2253,1.705,2254,1.705,2255,1.705,2256,1.705,2257,2.83,2258,1.705,2259,1.705,2260,2.83,2261,3.139,2262,2.83,2263,3.628,2264,1.705,2265,1.705,2266,1.705,2267,1.705,2268,1.705,2269,1.705,2270,1.705,2271,1.705,2272,5.054,2273,2.83,2274,3.628,2275,2.83,2276,1.705,2277,1.705,2278,1.705,2279,1.705,2280,3.628,2281,1.705,2282,1.705,2283,1.705,2284,2.83,2285,2.83,2286,2.83,2287,3.628,2288,1.705,2289,1.705,2290,1.705,2291,1.705,2292,1.705,2293,1.475,2294,1.705,2295,1.705,2296,1.705,2297,2.83,2298,1.705,2299,1.705,2300,2.83,2301,1.705,2302,1.705,2303,1.705,2304,1.705,2305,1.705,2306,1.705,2307,1.705,2308,1.705,2309,1.705,2310,1.705,2311,5.605,2312,1.705,2313,3.139,2314,5.605,2315,3.628,2316,4.224,2317,2.83,2318,3.628,2319,1.705,2320,2.83,2321,1.705,2322,1.705,2323,2.83,2324,2.83,2325,1.705,2326,1.705,2327,2.83,2328,1.705,2329,1.705,2330,1.705,2331,3.654,2332,1.705,2333,1.705,2334,1.705,2335,1.705,2336,1.705,2337,1.705,2338,1.705,2339,1.705,2340,1.705,2341,1.705,2342,3.654,2343,1.705,2344,1.705,2345,1.705,2346,1.705,2347,1.705,2348,1.705,2349,1.705,2350,1.705,2351,1.705,2352,1.705,2353,1.705,2354,2.83,2355,1.705,2356,2.83,2357,1.705,2358,2.83,2359,2.83,2360,4.224,2361,4.224,2362,2.83,2363,2.83,2364,1.705,2365,1.705,2366,1.705,2367,3.628,2368,1.705,2369,1.475,2370,1.705,2371,1.705,2372,1.705,2373,1.705,2374,1.705,2375,1.705,2376,2.83,2377,5.997,2378,3.628,2379,2.83,2380,1.705,2381,2.83,2382,1.705,2383,1.705,2384,1.705,2385,1.705,2386,1.705,2387,1.705,2388,1.705,2389,2.83,2390,4.632,2391,2.83,2392,1.705,2393,1.705,2394,1.705,2395,1.705,2396,1.705,2397,3.278,2398,1.705,2399,2.83,2400,1.705,2401,1.705,2402,1.705,2403,2.83,2404,1.705,2405,1.705,2406,1.705,2407,1.705,2408,2.83,2409,2.448,2410,1.705,2411,1.705,2412,1.705,2413,1.705,2414,1.705,2415,1.705,2416,1.705,2417,1.705,2418,1.705,2419,1.475,2420,1.705,2421,2.448,2422,1.705,2423,1.705,2424,1.705,2425,1.705,2426,1.705,2427,1.705,2428,2.83,2429,1.705,2430,2.83,2431,1.705,2432,1.705,2433,1.705,2434,1.705,2435,1.705,2436,1.705,2437,1.705,2438,1.705,2439,1.705,2440,1.705,2441,2.83,2442,1.705,2443,1.705,2444,1.705,2445,1.705,2446,2.83,2447,1.705,2448,1.705,2449,1.705,2450,1.705,2451,1.705,2452,1.705,2453,1.705,2454,1.705,2455,1.705]],["title/coverage.html",[2397,4.097]],["body/coverage.html",[6,1.384,7,0.016,8,1.637,9,1.637,15,0.104,16,0.223,17,3.692,23,2.022,28,0.248,41,1.459,45,2.788,47,0.455,55,2.022,56,2.573,70,2.022,78,0.174,81,0.006,82,0.009,83,0.006,87,1.745,88,2.664,89,3.838,90,3.838,93,1.243,122,1.253,125,1.384,136,1.745,138,1.637,153,1.745,154,0.533,155,1.745,157,1.745,161,1.745,163,1.745,177,1.745,211,1.745,258,2.022,259,3.332,260,3.332,261,3.601,275,1.486,289,1.459,291,3.063,297,2.022,301,2.358,312,1.195,316,1.871,358,1.253,359,3.295,360,3.295,368,1.745,369,3.692,370,3.692,372,1.384,382,1.745,392,1.459,423,2.579,435,1.745,438,1.745,448,2.211,471,3.444,472,3.332,509,2.211,510,2.464,523,3.624,524,3.938,552,1.141,557,3.601,585,1.871,592,1.871,619,1.871,695,1.253,700,1.253,702,1.195,704,1.253,707,1.253,710,1.195,712,1.253,716,1.253,720,1.195,730,1.637,731,3.23,732,3.045,733,3.601,737,1.543,747,1.745,750,1.745,800,2.464,801,2.464,846,2.211,847,4.846,863,2.211,864,3.013,866,2.022,969,2.464,970,3.601,993,2.464,1029,2.6,1089,3.295,1105,2.022,1156,1.871,1170,6.274,1177,2.464,1179,5.045,1191,2.211,1192,2.464,1193,2.464,1206,3.295,1215,2.211,1237,2.211,1238,2.211,1275,2.211,1276,2.211,1277,2.464,1304,2.211,1305,2.211,1306,2.464,1321,2.464,1355,2.464,1371,2.022,1372,3.991,1373,3.991,1374,4.364,1394,2.211,1496,2.211,1617,2.022,1618,5.029,1619,5.029,1620,5.324,1630,2.211,1648,3.013,1649,3.013,1650,3.295,1675,2.022,1705,2.022,1706,2.022,1707,2.211,1769,2.464,1800,2.211,1801,2.211,1802,2.464,1868,2.022,1869,3.949,1874,2.022,1875,2.022,1876,2.022,1877,1.871,1892,2.211,1893,3.672,2397,2.211,2456,2.849,2457,2.849,2458,2.464,2459,7.731,2460,4.245,2461,2.849,2462,2.464,2463,2.464,2464,6.983,2465,2.464,2466,2.464,2467,2.464,2468,2.464,2469,2.464,2470,2.849,2471,2.464,2472,2.464,2473,2.464,2474,5.623,2475,2.849,2476,4.245,2477,2.849,2478,2.464,2479,2.849,2480,5.623,2481,2.849,2482,2.849,2483,2.849,2484,4.245,2485,2.849,2486,2.849,2487,2.849,2488,2.849,2489,2.849,2490,2.849,2491,2.849,2492,2.849,2493,2.849,2494,2.849,2495,2.849,2496,2.849,2497,2.849,2498,4.245,2499,4.245,2500,2.849,2501,2.464,2502,4.245,2503,2.849,2504,4.245,2505,2.849,2506,2.849,2507,2.849,2508,2.849,2509,2.849]],["title/dependencies.html",[3,1.703,2058,2.79]],["body/dependencies.html",[3,1.626,7,0.017,15,0.162,36,0.291,39,3.546,40,2.403,41,2.273,81,0.009,82,0.012,83,0.009,95,2.914,114,0.985,120,2.914,121,2.914,151,2.812,172,2.55,283,3.149,284,3.444,285,4.493,365,1.951,366,1.951,412,2.914,677,3.149,694,2.428,757,2.718,820,3.838,837,2.914,840,4.109,845,2.914,946,4.109,1116,3.149,1125,3.444,1189,3.838,1239,3.838,1307,3.838,1386,3.838,1390,3.838,1391,3.838,2075,3.838,2100,3.838,2140,3.838,2145,3.838,2261,3.838,2313,5.008,2510,4.438,2511,4.438,2512,4.438,2513,7.711,2514,4.438,2515,4.438,2516,4.438,2517,4.438,2518,4.438,2519,5.789,2520,4.438,2521,4.438,2522,4.438,2523,4.438,2524,4.438,2525,4.438,2526,6.443,2527,4.438,2528,5.789,2529,4.438,2530,4.438,2531,4.438,2532,4.438,2533,6.443,2534,4.438,2535,4.438,2536,4.438,2537,4.438,2538,4.438,2539,4.438,2540,4.438,2541,4.438,2542,4.438,2543,4.438,2544,4.438,2545,4.438,2546,5.789,2547,5.789,2548,4.438,2549,4.438,2550,4.438,2551,4.438,2552,4.438,2553,4.438,2554,5.789,2555,4.438,2556,4.438,2557,4.438,2558,4.438,2559,4.438,2560,4.438,2561,4.438,2562,4.438,2563,4.438,2564,4.438,2565,4.438,2566,4.438,2567,4.438,2568,3.838,2569,4.438,2570,4.438,2571,4.438,2572,4.438,2573,4.438,2574,4.438,2575,5.789,2576,4.438,2577,4.438,2578,4.438,2579,4.438,2580,4.438,2581,4.438,2582,4.438,2583,4.438,2584,4.438,2585,4.438,2586,4.438,2587,4.438,2588,4.438,2589,4.438,2590,4.438,2591,4.438,2592,4.438,2593,4.438,2594,4.438,2595,4.438,2596,4.438,2597,4.438,2598,4.438,2599,4.438,2600,4.438,2601,4.438,2602,4.438,2603,4.438,2604,4.438,2605,4.438,2606,5.008,2607,4.438,2608,4.438,2609,4.438,2610,4.438,2611,4.438,2612,4.438,2613,4.438,2614,4.438,2615,4.438,2616,4.438,2617,4.438]],["title/miscellaneous/functions.html",[2618,1.976,2619,4.022]],["body/miscellaneous/functions.html",[7,0.016,16,0.198,17,2.323,26,1.791,27,1.327,29,1.212,30,2.689,31,1.228,37,2.746,53,1.417,57,2.746,58,1.719,62,0.926,63,1.719,66,2.746,69,2.787,70,3.524,76,2.447,81,0.007,82,0.01,83,0.007,85,0.646,86,0.529,88,1.241,89,1.916,90,3.549,97,1.189,100,1.719,106,2.323,112,2.004,134,1.556,138,2.033,154,0.93,161,3.514,163,3.042,164,3.025,165,1.093,166,3.261,167,3.261,170,2.033,211,3.042,219,2.323,242,3.221,262,1.922,263,2.511,280,1.355,287,2.167,289,1.812,291,1.719,415,1.916,423,1.6,523,2.033,524,4.453,529,2.746,533,3.06,537,3.06,538,2.323,539,3.06,540,2.412,541,4.815,542,3.06,543,3.06,544,3.81,545,1.812,546,3.06,547,3.06,559,2.167,584,2.323,596,2.511,619,3.768,684,2.511,694,1.484,736,3.261,811,5.272,813,5.691,815,5.526,846,4.453,847,4.085,849,2.746,850,2.511,868,3.06,905,2.323,980,2.033,998,2.323,1156,3.261,1237,2.746,1238,3.854,1243,3.06,1245,4.295,1251,2.746,1402,2.511,1618,2.511,1619,5.204,1620,6.009,1621,5.381,1627,6.472,1631,3.06,1632,3.06,1633,3.06,1634,3.06,1635,4.963,1636,6.472,1637,5.876,1638,5.876,1639,5.381,1640,4.295,1641,4.963,1869,2.323,1877,3.768,2163,3.06,2421,3.06,2458,4.295,2462,3.06,2463,4.295,2465,3.06,2466,4.963,2467,3.06,2468,4.295,2469,4.295,2473,4.295,2478,4.295,2501,4.295,2606,3.06,2618,2.167,2619,3.06,2620,4.828,2621,3.538,2622,3.538,2623,3.06,2624,4.295,2625,3.538,2626,4.966,2627,6.26,2628,3.538,2629,3.538,2630,3.538,2631,3.538,2632,3.538,2633,3.538,2634,3.538,2635,3.538,2636,3.538,2637,3.538,2638,3.538,2639,3.538,2640,4.966,2641,3.538,2642,3.538]],["title/index.html",[85,0.299,2009,2.503,2010,2.289]],["body/index.html",[7,0.012,13,0.267,47,0.376,81,0.01,82,0.012,83,0.01,84,1.469,102,1.653,110,4.672,182,3.854,275,1.054,326,2.684,648,3.516,708,2.846,837,3.254,877,3.516,942,4.821,950,3.516,961,3.035,995,4.079,1015,4.409,1016,5.267,1036,3.845,1160,3.035,1835,4.286,1843,3.845,1899,3.845,2011,3.845,2012,5.374,2013,5.374,2014,5.87,2028,4.286,2053,4.286,2054,4.286,2055,4.286,2071,6.339,2072,6.155,2080,5.374,2087,4.286,2101,5.374,2104,4.286,2112,5.522,2113,4.286,2124,4.286,2150,5.374,2342,5.374,2409,4.286,2419,4.286,2643,6.212,2644,4.955,2645,4.955,2646,4.955,2647,5.374,2648,4.955,2649,4.955,2650,6.212,2651,6.212,2652,6.212,2653,6.786,2654,4.955,2655,4.955,2656,7.115,2657,6.786,2658,4.955,2659,4.955,2660,6.212,2661,4.955,2662,4.955,2663,4.955,2664,6.212,2665,4.955,2666,4.955,2667,4.955,2668,4.955,2669,4.955,2670,4.955,2671,4.955,2672,4.955,2673,4.955,2674,4.955,2675,4.955,2676,4.955,2677,4.955,2678,4.955,2679,4.955,2680,4.955,2681,4.955,2682,4.955,2683,4.955]],["title/license.html",[2009,2.503,2010,2.289,2684,2.79]],["body/license.html",[7,0.013,12,1.683,81,0.011,82,0.013,83,0.011,113,2.791,346,3.866,603,5.494,673,3.577,676,3.866,737,2.951,897,3.131,900,4.228,921,4.228,963,4.713,1198,4.713,1247,4.228,2111,5.697,2112,4.228,2154,5.697,2293,5.697,2369,4.713,2390,4.713,2568,4.713,2647,6.802,2684,4.713,2685,5.448,2686,7.079,2687,5.448,2688,6.586,2689,5.448,2690,5.448,2691,5.448,2692,5.448,2693,5.448,2694,5.448,2695,6.586,2696,5.448,2697,5.448,2698,5.448,2699,5.448,2700,5.448,2701,5.448,2702,5.448,2703,5.448,2704,5.448,2705,5.448,2706,5.448,2707,6.586,2708,5.448,2709,5.448,2710,5.448,2711,5.448,2712,5.448,2713,6.586,2714,5.448,2715,5.448,2716,5.448,2717,5.448,2718,5.448,2719,5.448,2720,5.448,2721,5.448,2722,5.448,2723,5.448,2724,5.448,2725,5.448,2726,5.448,2727,5.448,2728,5.448,2729,5.448,2730,5.448,2731,5.448,2732,5.448,2733,5.448,2734,5.448,2735,5.448,2736,5.448]],["title/modules.html",[2,1.934]],["body/modules.html",[1,3.735,2,2.084,7,0.014,81,0.011,82,0.014,83,0.011,354,4.037,635,3.484,723,3.735,946,5.688,1070,4.037,1075,3.735,1236,4.415,1298,4.037,1361,4.037,1376,6.934,1609,4.037,1693,4.037,1746,4.037,1780,4.037,1862,4.037,2029,6.934,2737,8.039,2738,5.688]],["title/overview.html",[2739,4.566]],["body/overview.html",[1,4.921,2,1.616,3,2.112,4,3.815,5,3.815,6,3.121,7,0.016,8,3.692,9,3.692,10,2.309,11,1.766,12,1.363,81,0.009,82,0.012,83,0.009,84,1.307,231,1.766,299,2.535,312,3.098,354,5.018,355,3.815,356,3.815,357,3.815,358,3.249,526,2.535,552,2.959,553,2.142,695,1.939,700,3.249,702,3.098,704,3.249,707,3.249,710,3.098,712,3.249,716,3.249,720,3.098,723,4.762,724,3.815,725,3.815,726,3.815,1070,5.243,1071,3.815,1072,3.815,1073,3.815,1074,3.815,1075,4.762,1180,3.815,1181,3.815,1182,3.815,1298,5.018,1299,3.815,1300,3.815,1301,3.815,1361,5.018,1362,3.815,1363,3.815,1364,3.815,1609,5.018,1610,3.815,1611,3.815,1612,3.815,1643,2.896,1693,5.018,1694,3.815,1695,3.815,1696,3.815,1746,5.018,1747,3.815,1748,3.815,1749,3.815,1780,5.378,1781,3.815,1782,3.815,1784,3.815,1785,5.894,1786,5.894,1862,5.018,1863,3.815,1864,3.815,1865,3.815,2132,4.988,2331,3.815,2739,3.815,2740,4.41]],["title/miscellaneous/typealiases.html",[2618,1.976,2741,4.65]],["body/miscellaneous/typealiases.html",[7,0.015,16,0.206,28,0.614,49,0.848,56,2.375,61,3.775,62,1.72,68,1.747,81,0.011,82,0.013,83,0.011,85,0.502,88,2.304,89,2.937,90,3.977,128,4.023,130,4.313,133,4.313,134,2.385,416,3.364,448,4.209,449,4.023,464,3.849,465,3.561,471,3.322,472,4.938,485,3.849,487,4.661,488,4.661,490,4.661,535,3.561,540,2.635,544,4.023,864,3.849,866,4.661,882,5.097,889,4.691,890,5.681,913,4.209,914,4.691,1705,3.849,1706,3.849,1707,5.483,1726,4.691,1727,5.681,1728,4.691,1729,6.111,2618,3.322,2620,5.483,2742,5.423,2743,5.423,2744,7.343,2745,5.681,2746,6.568]],["title/miscellaneous/variables.html",[2618,1.976,2747,4.022]],["body/miscellaneous/variables.html",[6,1.248,7,0.016,8,1.477,9,1.477,16,0.183,17,1.687,27,1.351,28,0.527,30,2.127,45,2.578,49,0.332,55,2.787,59,0.402,62,1.837,72,1.574,74,3.835,76,0.901,81,0.005,82,0.008,83,0.005,85,0.238,88,0.901,89,1.392,90,2.89,113,1.316,128,2.405,137,1.392,145,3.909,147,3.984,148,2.405,153,3.269,154,0.892,155,2.405,156,2.578,157,2.405,158,1.687,159,1.574,165,1.473,172,3.067,175,1.438,176,1.32,259,1.687,260,1.687,261,2.787,265,1.823,266,3.047,268,4.27,273,2.127,279,1.823,292,2.518,293,3.047,294,1.994,295,1.994,296,1.994,297,2.787,298,2.787,299,1.477,316,2.578,321,3.684,449,1.574,708,3.306,819,4.705,847,2.578,864,1.823,866,2.787,882,1.994,970,2.787,979,4.236,1147,4.586,1172,4.466,1206,1.994,1215,3.047,1216,2.222,1217,2.222,1218,2.222,1219,2.787,1371,1.823,1372,1.823,1373,1.823,1374,3.699,1377,6.819,1378,5.746,1379,6.819,1384,3.047,1392,2.222,1393,2.222,1394,3.047,1395,2.222,1396,3.397,1397,2.222,1398,2.222,1399,3.397,1400,2.222,1401,3.397,1402,2.787,1403,4.616,1404,2.222,1405,2.222,1406,4.123,1407,5.244,1408,6.068,1409,2.222,1410,2.222,1411,2.222,1412,4.123,1413,5.766,1414,5.244,1415,2.222,1416,2.222,1417,2.222,1418,2.222,1419,3.397,1420,2.222,1421,4.123,1422,4.705,1423,2.222,1424,2.222,1425,2.222,1426,4.123,1427,5.244,1428,2.222,1429,2.222,1430,2.222,1431,2.222,1432,3.397,1433,2.222,1434,3.397,1435,3.397,1436,3.397,1437,2.222,1438,2.222,1439,4.123,1440,5.244,1441,2.222,1442,2.222,1443,2.222,1444,2.222,1445,3.397,1446,2.222,1447,2.222,1448,2.222,1449,3.397,1450,2.222,1451,2.222,1452,3.397,1453,2.222,1454,3.397,1455,4.616,1456,2.222,1457,2.222,1458,2.222,1459,5.244,1460,3.397,1461,2.222,1462,2.222,1463,3.397,1464,2.222,1465,2.222,1466,4.123,1467,3.397,1468,2.222,1469,2.222,1470,3.397,1471,2.222,1472,2.222,1473,3.397,1474,2.222,1475,4.123,1476,5.244,1477,2.222,1478,2.222,1479,2.222,1480,2.222,1481,3.397,1482,3.397,1483,2.222,1484,2.222,1485,3.397,1486,2.222,1487,3.397,1488,3.397,1489,4.616,1490,4.616,1491,2.222,1492,2.222,1493,2.222,1494,2.222,1495,2.222,1496,3.047,1497,2.222,1498,2.222,1617,1.823,1618,1.823,1619,2.787,1630,3.047,1869,1.687,1875,2.787,1876,2.787,1877,1.687,2471,2.222,2472,3.397,2618,1.574,2620,3.699,2623,3.397,2624,2.222,2627,2.222,2745,2.222,2747,2.222,2748,3.927,2749,2.569,2750,2.569,2751,2.569]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":423,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.1.0",{"_index":2446,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":2617,"title":{},"body":{"dependencies.html":{}}}],["0.12",{"_index":1855,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.14",{"_index":1853,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.18.0",{"_index":2558,"title":{},"body":{"dependencies.html":{}}}],["0.1875rem",{"_index":1353,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["0.2",{"_index":1850,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.2.0",{"_index":2441,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":2576,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":1055,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["0.5.0",{"_index":2430,"title":{},"body":{"changelog.html":{}}}],["0.5rem",{"_index":1164,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{}}}],["0.6.0",{"_index":2409,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.65rem",{"_index":1057,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["0.6s",{"_index":1059,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["0.7",{"_index":1842,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.875rem",{"_index":1158,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["0/1",{"_index":2459,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2498,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2504,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2506,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2505,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2499,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2503,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2502,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2474,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2500,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2476,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2457,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2461,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2460,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2497,"title":{},"body":{"coverage.html":{}}}],["007cbe",{"_index":1860,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["01",{"_index":2076,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":2281,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":2230,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":2017,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":2203,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":2379,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":2034,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":2391,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":2131,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":1599,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{}}}],["1",{"_index":1643,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"changelog.html":{},"overview.html":{}}}],["1.0",{"_index":2314,"title":{},"body":{"changelog.html":{}}}],["1.0.0",{"_index":2377,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":2553,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":2560,"title":{},"body":{"dependencies.html":{}}}],["1.0.6",{"_index":2612,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2354,"title":{},"body":{"changelog.html":{}}}],["1.125rem",{"_index":1356,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["1.16.0",{"_index":2593,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":2555,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":2313,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.3",{"_index":2563,"title":{},"body":{"dependencies.html":{}}}],["1.2.6",{"_index":2595,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":2280,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":2261,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":2578,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":2229,"title":{},"body":{"changelog.html":{}}}],["1.5rem",{"_index":1066,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["1.6.0",{"_index":2214,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":2202,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":2565,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2464,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2488,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":299,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":2574,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":2494,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1179,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{},"coverage.html":{}}}],["10px",{"_index":1852,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["10rem",{"_index":1169,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["10x",{"_index":2366,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":2263,"title":{},"body":{"changelog.html":{}}}],["11.2.1",{"_index":2596,"title":{},"body":{"dependencies.html":{}}}],["11/14",{"_index":2490,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":2028,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["12.0.1",{"_index":2597,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":2513,"title":{},"body":{"dependencies.html":{}}}],["12.1.3",{"_index":2518,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":2132,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["13/13",{"_index":2479,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":2018,"title":{},"body":{"changelog.html":{}}}],["15.126.1",{"_index":2511,"title":{},"body":{"dependencies.html":{}}}],["15/15",{"_index":2496,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":2184,"title":{},"body":{"changelog.html":{}}}],["16.0.0",{"_index":2567,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":2082,"title":{},"body":{"changelog.html":{}}}],["18",{"_index":2740,"title":{},"body":{"overview.html":{}}}],["18px",{"_index":1854,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["1px",{"_index":1848,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["1rem",{"_index":1159,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["2",{"_index":2331,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["2.0.0",{"_index":2183,"title":{},"body":{"changelog.html":{}}}],["2.0.5",{"_index":2571,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2145,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.2.0",{"_index":2140,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.25rem",{"_index":1155,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["2.3.0",{"_index":2137,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":2130,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":2118,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":2100,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.6.7",{"_index":2598,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":2562,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":2470,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1321,"title":{},"body":{"components/OpacitySliderComponent.html":{},"coverage.html":{}}}],["200",{"_index":1571,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["2019",{"_index":2390,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":2316,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":2081,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":2016,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":2204,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":2380,"title":{},"body":{"changelog.html":{}}}],["23/30",{"_index":2492,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":2431,"title":{},"body":{"changelog.html":{}}}],["24px",{"_index":1858,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["25",{"_index":2487,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":1139,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["255",{"_index":1841,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["26",{"_index":2231,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":2266,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":2077,"title":{},"body":{"changelog.html":{}}}],["2rem",{"_index":1689,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["3",{"_index":2300,"title":{},"body":{"changelog.html":{}}}],["3.0.0",{"_index":2075,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.0.12",{"_index":2533,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":2033,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":2027,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":2015,"title":{},"body":{"changelog.html":{}}}],["3.5.5",{"_index":2538,"title":{},"body":{"dependencies.html":{}}}],["3.5.7",{"_index":2540,"title":{},"body":{"dependencies.html":{}}}],["3.6",{"_index":2672,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":2607,"title":{},"body":{"dependencies.html":{}}}],["3.7.1",{"_index":2547,"title":{},"body":{"dependencies.html":{}}}],["3.7.3",{"_index":2549,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2484,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2483,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":2146,"title":{},"body":{"changelog.html":{}}}],["300",{"_index":1166,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["31",{"_index":2355,"title":{},"body":{"changelog.html":{}}}],["323232",{"_index":1844,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["3d",{"_index":1900,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["3px",{"_index":1846,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["3rem",{"_index":1146,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/TextSearchComponent.html":{}}}],["4",{"_index":159,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["4.0",{"_index":2651,"title":{},"body":{"index.html":{}}}],["4.0.2",{"_index":2544,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":2569,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":2590,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":2559,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":2580,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2480,"title":{},"body":{"coverage.html":{}}}],["400px",{"_index":1839,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["48",{"_index":1962,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["5.0.0",{"_index":2583,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":2588,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":2477,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1177,"title":{},"body":{"components/InfoDialogComponent.html":{},"coverage.html":{}}}],["50rem",{"_index":1168,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["5px",{"_index":1847,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["6.0.1",{"_index":2586,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":2600,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":2542,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":2611,"title":{},"body":{"dependencies.html":{}}}],["6.6.7",{"_index":2608,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":2507,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1355,"title":{},"body":{"components/OpacitySliderComponent.html":{},"coverage.html":{}}}],["64",{"_index":1602,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["6px",{"_index":1851,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["6rem",{"_index":1859,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["6s",{"_index":1063,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["7/34",{"_index":2475,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":2495,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":2482,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":1531,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["72rem",{"_index":1045,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["73",{"_index":1173,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["75",{"_index":1979,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["76",{"_index":2491,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":2481,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":2489,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":2208,"title":{},"body":{"changelog.html":{}}}],["8.3.2",{"_index":2615,"title":{},"body":{"dependencies.html":{}}}],["8.5.12",{"_index":2537,"title":{},"body":{"dependencies.html":{}}}],["8.5.7",{"_index":2526,"title":{},"body":{"dependencies.html":{}}}],["8.7.8",{"_index":2529,"title":{},"body":{"dependencies.html":{}}}],["8/9",{"_index":2486,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":2440,"title":{},"body":{"changelog.html":{}}}],["88",{"_index":2485,"title":{},"body":{"coverage.html":{}}}],["9.5",{"_index":1945,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["9/9",{"_index":2493,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2396,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":2022,"title":{},"body":{"changelog.html":{}}}],["9999",{"_index":1857,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["9]*/g",{"_index":1296,"title":{},"body":{"directives/NumberDirective.html":{}}}],["9th",{"_index":2239,"title":{},"body":{"changelog.html":{}}}],["_bounds",{"_index":1947,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_camera",{"_index":1949,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_error",{"_index":1223,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["_ignored",{"_index":967,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["_index",{"_index":1668,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{}}}],["_interactive",{"_index":1941,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_occurencedata",{"_index":1537,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["_rotation",{"_index":1942,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_rotationx",{"_index":1943,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_scene",{"_index":1948,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_target",{"_index":1946,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_wont_",{"_index":1886,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["_zoom",{"_index":1944,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["a.name.localecompare(b.name",{"_index":1495,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["ability",{"_index":2159,"title":{},"body":{"changelog.html":{}}}],["about.wrapper",{"_index":1145,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["above",{"_index":673,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"license.html":{}}}],["abstract",{"_index":376,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["access",{"_index":1831,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["accessors",{"_index":809,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["according",{"_index":1607,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["accurate",{"_index":2228,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":2731,"title":{},"body":{"license.html":{}}}],["actions",{"_index":2304,"title":{},"body":{"changelog.html":{}}}],["actual_component",{"_index":722,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["add",{"_index":531,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["added",{"_index":625,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["adding",{"_index":1634,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["additional",{"_index":559,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["addressed",{"_index":2349,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":2037,"title":{},"body":{"changelog.html":{}}}],["adjusting",{"_index":2344,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":2259,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":2186,"title":{},"body":{"changelog.html":{}}}],["afterviewinit",{"_index":1387,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["again",{"_index":2324,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":139,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{}}}],["agerange",{"_index":140,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["aggregateresult",{"_index":96,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["ala",{"_index":2135,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":2742,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1068,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["all_organs",{"_index":1496,"title":{},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["all_possible_organs",{"_index":1394,"title":{},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["all_possible_organs.filter(organ",{"_index":1497,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["allow_telemetry",{"_index":1219,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/variables.html":{}}}],["allowed",{"_index":535,"title":{},"body":{"interfaces/DecoratedRange.html":{},"injectables/GlobalsService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/typealiases.html":{}}}],["allows",{"_index":2246,"title":{},"body":{"changelog.html":{}}}],["allowtelemetry",{"_index":1808,"title":{},"body":{"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["allowtelemetry.tostring",{"_index":1882,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["alpha",{"_index":2420,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":2403,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":2399,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":2389,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":653,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["alt",{"_index":2655,"title":{},"body":{"index.html":{}}}],["always",{"_index":938,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["analytics",{"_index":41,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{}}}],["analyticsmodule",{"_index":1,"title":{"modules/AnalyticsModule.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules.html":{},"overview.html":{}}}],["analyticsoptions",{"_index":23,"title":{"interfaces/AnalyticsOptions.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{}}}],["anatomical",{"_index":1309,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["and/or",{"_index":2705,"title":{},"body":{"license.html":{}}}],["angular",{"_index":837,"title":{},"body":{"injectables/GlobalConfigState.html":{},"modules/MousePositionTrackerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":2512,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2514,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":365,"title":{},"body":{"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":746,"title":{},"body":{"interfaces/DocumentationContent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["angular/compiler",{"_index":2515,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":36,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":2516,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":283,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2517,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":1791,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["angular/material/button",{"_index":1699,"title":{},"body":{"modules/SpatialSearchListModule.html":{},"modules/TrackingPopupModule.html":{}}}],["angular/material/checkbox",{"_index":1701,"title":{},"body":{"modules/SpatialSearchListModule.html":{}}}],["angular/material/core",{"_index":1370,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["angular/material/dialog",{"_index":1027,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{}}}],["angular/material/expansion",{"_index":1186,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["angular/material/form",{"_index":1793,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["angular/material/icon",{"_index":1078,"title":{},"body":{"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{}}}],["angular/material/input",{"_index":1795,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["angular/material/list",{"_index":1703,"title":{},"body":{"modules/SpatialSearchListModule.html":{}}}],["angular/material/slider",{"_index":1368,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["angular/material/snack",{"_index":1824,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["angular/material/tooltip",{"_index":1616,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["angular/platform",{"_index":2519,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":2521,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":1189,"title":{},"body":{"modules/InfoDialogModule.html":{},"dependencies.html":{}}}],["animate",{"_index":1135,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["animated",{"_index":1043,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["animated')[0]?.classlist.add('modal",{"_index":1134,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["anyfunction",{"_index":503,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["anyfunction)(...args",{"_index":508,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["anything",{"_index":1887,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["api",{"_index":182,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{},"index.html":{}}}],["api.configuration.basepath",{"_index":225,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["api.hubmapconsortium.org",{"_index":2665,"title":{},"body":{"index.html":{}}}],["api.ts",{"_index":2472,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiendpointdatasourceoptions",{"_index":87,"title":{"interfaces/ApiEndpointDataSourceOptions.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{}}}],["apiendpointdatasourceservice",{"_index":177,"title":{"injectables/ApiEndpointDataSourceService.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{}}}],["app",{"_index":1393,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:bladder",{"_index":1480,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:brain",{"_index":1398,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:eye",{"_index":1406,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:fallopian",{"_index":1412,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:heart",{"_index":1418,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:kidney",{"_index":1421,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:knee",{"_index":1426,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:large",{"_index":1462,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:liver",{"_index":1431,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:lung",{"_index":1434,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:lymph",{"_index":1401,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:ovary",{"_index":1439,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:pancreas",{"_index":1444,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:pelvis",{"_index":1447,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:placenta",{"_index":1451,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:prostate",{"_index":1454,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:skin",{"_index":1395,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:small",{"_index":1458,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:spinal",{"_index":1465,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:spleen",{"_index":1469,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:thymus",{"_index":1472,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:ureter",{"_index":1475,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:uterus",{"_index":1484,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:vasculature",{"_index":1487,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app_initializer",{"_index":34,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["appear",{"_index":2094,"title":{},"body":{"changelog.html":{}}}],["appearance",{"_index":1776,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["application",{"_index":2250,"title":{},"body":{"changelog.html":{}}}],["applied",{"_index":528,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["applies",{"_index":613,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["apply",{"_index":576,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["appname",{"_index":50,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["appropriate",{"_index":2057,"title":{},"body":{"changelog.html":{}}}],["april",{"_index":2238,"title":{},"body":{"changelog.html":{}}}],["args",{"_index":390,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["arguments",{"_index":1285,"title":{},"body":{"directives/NumberDirective.html":{}}}],["arising",{"_index":2734,"title":{},"body":{"license.html":{}}}],["array",{"_index":540,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["array.length",{"_index":353,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["arrays",{"_index":2633,"title":{},"body":{"miscellaneous/functions.html":{}}}],["asct+b",{"_index":2083,"title":{},"body":{"changelog.html":{}}}],["assignment/selection",{"_index":2216,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":900,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{},"license.html":{}}}],["async",{"_index":349,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["attempt",{"_index":870,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["attempts",{"_index":2121,"title":{},"body":{"changelog.html":{}}}],["attrs",{"_index":65,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["attrs[key",{"_index":64,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["authors",{"_index":2725,"title":{},"body":{"license.html":{}}}],["auto",{"_index":1161,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["autocomplete",{"_index":266,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["autocompleteoption",{"_index":258,"title":{"interfaces/AutoCompleteOption.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"coverage.html":{}}}],["autocompleter",{"_index":327,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["autocompletion",{"_index":303,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["autofocus",{"_index":1040,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["automatic",{"_index":2333,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":2288,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":635,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"modules.html":{}}}],["avoid",{"_index":2172,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":433,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["award",{"_index":2682,"title":{},"body":{"index.html":{}}}],["b",{"_index":1494,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["backend",{"_index":2107,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":1843,"title":{},"body":{"components/TrackingPopupComponent.html":{},"changelog.html":{},"index.html":{}}}],["bar",{"_index":302,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["base",{"_index":1674,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"changelog.html":{}}}],["based",{"_index":584,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["basic",{"_index":2185,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":2098,"title":{},"body":{"changelog.html":{}}}],["beginning",{"_index":1520,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["behavior",{"_index":1524,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["behaviorsubject",{"_index":744,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["being",{"_index":1109,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["beta",{"_index":2080,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":2147,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1151,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["bind",{"_index":284,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"dependencies.html":{}}}],["binding",{"_index":1171,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["bladder",{"_index":1482,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["block",{"_index":1687,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["blocks",{"_index":2041,"title":{},"body":{"changelog.html":{}}}],["blood",{"_index":1489,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["bmi",{"_index":141,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{}}}],["bmirange",{"_index":142,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["board",{"_index":2401,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":366,"title":{},"body":{"modules/BodyUiModule.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"dependencies.html":{}}}],["bodycanvas",{"_index":1955,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bodyui",{"_index":1896,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bodyui.initialize",{"_index":1986,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bodyuicomponent",{"_index":358,"title":{},"body":{"modules/BodyUiModule.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"overview.html":{}}}],["bodyuimodule",{"_index":354,"title":{"modules/BodyUiModule.html":{}},"body":{"modules/BodyUiModule.html":{},"modules.html":{},"overview.html":{}}}],["bold",{"_index":1688,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["boolean",{"_index":53,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["border",{"_index":1053,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["both",{"_index":146,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["bottom",{"_index":1154,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/SpatialSearchListComponent.html":{}}}],["boundary",{"_index":1270,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["bounds",{"_index":685,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"interfaces/XYZTriplet.html":{}}}],["bounds(value",{"_index":1925,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bounds.x",{"_index":1970,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bounds.y",{"_index":1973,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["box",{"_index":1354,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["brain",{"_index":1399,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["breaking",{"_index":2197,"title":{},"body":{"changelog.html":{}}}],["bringing",{"_index":2209,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":2737,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":946,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browserify",{"_index":2609,"title":{},"body":{"dependencies.html":{}}}],["browsing",{"_index":2451,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":2074,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":648,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"index.html":{}}}],["building",{"_index":591,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["builds",{"_index":2073,"title":{},"body":{"changelog.html":{}}}],["buster",{"_index":153,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":994,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":701,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["button.component",{"_index":1079,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["button.component.html",{"_index":1002,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.scss",{"_index":1001,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts",{"_index":993,"title":{},"body":{"components/InfoButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:22",{"_index":1013,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:27",{"_index":1014,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:29",{"_index":1012,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:31",{"_index":1008,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:51",{"_index":1021,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:58",{"_index":1018,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:76",{"_index":1023,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.module.ts",{"_index":1076,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["button.service",{"_index":1028,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["button.service.ts",{"_index":733,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"coverage.html":{}}}],["button.service.ts:31",{"_index":1085,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["button.service.ts:38",{"_index":1087,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["button.service.ts:52",{"_index":1086,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["button/info",{"_index":732,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/PanelData.html":{},"coverage.html":{}}}],["c",{"_index":1198,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"license.html":{}}}],["cache",{"_index":151,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"dependencies.html":{}}}],["cache_config_no_params",{"_index":155,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cache_config_params",{"_index":157,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cacheable",{"_index":120,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"dependencies.html":{}}}],["cacheable(cache_config_no_params",{"_index":188,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["cacheable(cache_config_params",{"_index":200,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["cachebusterobserver",{"_index":156,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/variables.html":{}}}],["cached",{"_index":608,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["cacheresults",{"_index":430,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["call",{"_index":1107,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/TrackingPopupComponent.html":{}}}],["callback",{"_index":2163,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["called",{"_index":2200,"title":{},"body":{"changelog.html":{}}}],["camera",{"_index":1927,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["camera(value",{"_index":1929,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["cancelregistration",{"_index":2162,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":2382,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":2556,"title":{},"body":{"dependencies.html":{}}}],["canvas",{"_index":1977,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["canvas.addeventlistener('contextmenu",{"_index":1983,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["card",{"_index":2190,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":1499,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["carouselcontainer",{"_index":1505,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["case",{"_index":1233,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["cases",{"_index":2353,"title":{},"body":{"changelog.html":{}}}],["cast",{"_index":161,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["catch",{"_index":966,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["ccf",{"_index":102,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":2309,"title":{},"body":{"changelog.html":{}}}],["ccfdatabase",{"_index":408,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabase(config",{"_index":436,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice",{"_index":368,"title":{"injectables/CCFDatabaseDataSourceBaseService.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["ccfdatabasedatasourcebaseservice:20",{"_index":447,"title":{},"body":{"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice:39",{"_index":446,"title":{},"body":{"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice:53",{"_index":445,"title":{},"body":{"injectables/CCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice:65",{"_index":1890,"title":{},"body":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourceservice",{"_index":435,"title":{"injectables/CCFDatabaseDataSourceService.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["ccfdatabasemanager",{"_index":382,"title":{"interfaces/CCFDatabaseManager.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["ccfdatabaseoptions",{"_index":383,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["cdr",{"_index":1713,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["cdr.markforcheck",{"_index":1740,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["cell",{"_index":2038,"title":{},"body":{"changelog.html":{}}}],["celltypeterms",{"_index":144,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["center",{"_index":1160,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"index.html":{}}}],["change",{"_index":877,"title":{},"body":{"injectables/GlobalsService.html":{},"components/StoreDebugComponent.html":{},"changelog.html":{},"index.html":{}}}],["changed",{"_index":609,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["changedetection",{"_index":310,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["changedetectionstrategy",{"_index":274,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":311,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["changedetectorref",{"_index":1714,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["changelog",{"_index":2011,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changeopacity",{"_index":1313,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["changeopacity(newopacity",{"_index":1332,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["changes",{"_index":329,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["charge",{"_index":2692,"title":{},"body":{"license.html":{}}}],["check",{"_index":874,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["choose",{"_index":2329,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":2307,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":2728,"title":{},"body":{"license.html":{}}}],["class",{"_index":78,"title":{"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["classes",{"_index":526,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"overview.html":{}}}],["cleans",{"_index":1721,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["cleanup",{"_index":2079,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":1140,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["clearinterval(this.timeouthandler",{"_index":1582,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["clearsubscriptions",{"_index":2006,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["click",{"_index":1025,"title":{},"body":{"components/InfoButtonComponent.html":{},"changelog.html":{}}}],["clicked",{"_index":1000,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["clicking",{"_index":2194,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":110,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"index.html":{}}}],["clientheight",{"_index":1250,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clientwidth",{"_index":1249,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clientx",{"_index":1252,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clienty",{"_index":1253,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["close",{"_index":1101,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["closes",{"_index":1112,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["clsname",{"_index":315,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["cluster_analyticsmodule",{"_index":4,"title":{},"body":{"modules/AnalyticsModule.html":{},"overview.html":{}}}],["cluster_analyticsmodule_providers",{"_index":5,"title":{},"body":{"modules/AnalyticsModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule",{"_index":355,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule_declarations",{"_index":356,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule_exports",{"_index":357,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_decoratedtextmodule",{"_index":724,"title":{},"body":{"modules/DecoratedTextModule.html":{},"overview.html":{}}}],["cluster_decoratedtextmodule_declarations",{"_index":725,"title":{},"body":{"modules/DecoratedTextModule.html":{},"overview.html":{}}}],["cluster_decoratedtextmodule_exports",{"_index":726,"title":{},"body":{"modules/DecoratedTextModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule",{"_index":1071,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_declarations",{"_index":1072,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_exports",{"_index":1074,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_imports",{"_index":1073,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule",{"_index":1180,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule_declarations",{"_index":1181,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule_exports",{"_index":1182,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_numbersonlymodule",{"_index":1299,"title":{},"body":{"modules/NumbersOnlyModule.html":{},"overview.html":{}}}],["cluster_numbersonlymodule_declarations",{"_index":1301,"title":{},"body":{"modules/NumbersOnlyModule.html":{},"overview.html":{}}}],["cluster_numbersonlymodule_exports",{"_index":1300,"title":{},"body":{"modules/NumbersOnlyModule.html":{},"overview.html":{}}}],["cluster_opacityslidermodule",{"_index":1362,"title":{},"body":{"modules/OpacitySliderModule.html":{},"overview.html":{}}}],["cluster_opacityslidermodule_declarations",{"_index":1363,"title":{},"body":{"modules/OpacitySliderModule.html":{},"overview.html":{}}}],["cluster_opacityslidermodule_exports",{"_index":1364,"title":{},"body":{"modules/OpacitySliderModule.html":{},"overview.html":{}}}],["cluster_organselectormodule",{"_index":1610,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_organselectormodule_declarations",{"_index":1612,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_organselectormodule_exports",{"_index":1611,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_spatialsearchlistmodule",{"_index":1694,"title":{},"body":{"modules/SpatialSearchListModule.html":{},"overview.html":{}}}],["cluster_spatialsearchlistmodule_declarations",{"_index":1695,"title":{},"body":{"modules/SpatialSearchListModule.html":{},"overview.html":{}}}],["cluster_spatialsearchlistmodule_exports",{"_index":1696,"title":{},"body":{"modules/SpatialSearchListModule.html":{},"overview.html":{}}}],["cluster_storedebugmodule",{"_index":1747,"title":{},"body":{"modules/StoreDebugModule.html":{},"overview.html":{}}}],["cluster_storedebugmodule_declarations",{"_index":1748,"title":{},"body":{"modules/StoreDebugModule.html":{},"overview.html":{}}}],["cluster_storedebugmodule_exports",{"_index":1749,"title":{},"body":{"modules/StoreDebugModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule",{"_index":1781,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule_declarations",{"_index":1782,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule_exports",{"_index":1784,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule_imports",{"_index":1783,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["cluster_trackingpopupmodule",{"_index":1863,"title":{},"body":{"modules/TrackingPopupModule.html":{},"overview.html":{}}}],["cluster_trackingpopupmodule_declarations",{"_index":1864,"title":{},"body":{"modules/TrackingPopupModule.html":{},"overview.html":{}}}],["cluster_trackingpopupmodule_exports",{"_index":1865,"title":{},"body":{"modules/TrackingPopupModule.html":{},"overview.html":{}}}],["code",{"_index":2070,"title":{},"body":{"changelog.html":{}}}],["codebase",{"_index":2319,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":2365,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":2414,"title":{},"body":{"changelog.html":{}}}],["collaboration",{"_index":2317,"title":{},"body":{"changelog.html":{}}}],["collisions",{"_index":2335,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":1062,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["colorizing",{"_index":2374,"title":{},"body":{"changelog.html":{}}}],["combination",{"_index":2330,"title":{},"body":{"changelog.html":{}}}],["combinelatest",{"_index":111,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["combines",{"_index":1631,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["come",{"_index":2370,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":2362,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":412,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"dependencies.html":{}}}],["command",{"_index":67,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["common",{"_index":942,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{},"index.html":{}}}],["commonmodule",{"_index":364,"title":{},"body":{"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}}}],["compare",{"_index":1622,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["comparison",{"_index":1624,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["compiler",{"_index":1264,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["completely",{"_index":876,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["complexity",{"_index":2223,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":2068,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":275,"title":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":697,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["components",{"_index":553,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"overview.html":{}}}],["computed",{"_index":617,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalConfigState.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["computes",{"_index":1667,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["comunica/query",{"_index":2522,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":677,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"dependencies.html":{}}}],["concat(op.added",{"_index":678,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["conditions",{"_index":2712,"title":{},"body":{"license.html":{}}}],["config",{"_index":152,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["config.state",{"_index":124,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["config.state.ts",{"_index":801,"title":{},"body":{"injectables/GlobalConfigState.html":{},"coverage.html":{}}}],["config.state.ts:19",{"_index":833,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:22",{"_index":835,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:26",{"_index":832,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:30",{"_index":829,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:34",{"_index":826,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:42",{"_index":812,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:43",{"_index":814,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:44",{"_index":816,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:45",{"_index":818,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:46",{"_index":821,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:62",{"_index":823,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config/global",{"_index":123,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["configurable",{"_index":919,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["configuration",{"_index":2151,"title":{},"body":{"changelog.html":{}}}],["configurations",{"_index":2158,"title":{},"body":{"changelog.html":{}}}],["confirmation",{"_index":2120,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":2167,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":2105,"title":{},"body":{"changelog.html":{}}}],["connectdatabase",{"_index":374,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["connectdatabase(manager",{"_index":381,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["connection",{"_index":2735,"title":{},"body":{"license.html":{}}}],["consent",{"_index":449,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["consent.service",{"_index":42,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["consentchange",{"_index":450,"title":{},"body":{"injectables/ConsentService.html":{}}}],["consentservice",{"_index":6,"title":{"injectables/ConsentService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["consentservice.consentchange.subscribe(consent",{"_index":1227,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["consentservice.setconsent(this.loadconsent",{"_index":1225,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["consortium",{"_index":2687,"title":{},"body":{"license.html":{}}}],["const",{"_index":54,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["constrained",{"_index":2642,"title":{},"body":{"miscellaneous/functions.html":{}}}],["constructor",{"_index":179,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/ConsentService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["constructor(api",{"_index":238,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["constructor(consentservice",{"_index":973,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["constructor(defaultmaxoptions",{"_index":1755,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["constructor(dialog",{"_index":1006,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["constructor(dialogref",{"_index":1103,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor(el",{"_index":1282,"title":{},"body":{"directives/NumberDirective.html":{}}}],["constructor(elementref",{"_index":1809,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["constructor(globalconfig",{"_index":379,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["constructor(http",{"_index":1084,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["constructor(private",{"_index":754,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"directives/NumberDirective.html":{},"interfaces/PanelData.html":{}}}],["constructor(store",{"_index":1712,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["container",{"_index":622,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["containers",{"_index":2149,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":2646,"title":{},"body":{"index.html":{}}}],["contains",{"_index":1375,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["content",{"_index":741,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/PanelData.html":{},"components/SpatialSearchListComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["content.title",{"_index":1141,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["contents",{"_index":1122,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["continuously",{"_index":1566,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["contract",{"_index":2732,"title":{},"body":{"license.html":{}}}],["control",{"_index":2276,"title":{},"body":{"changelog.html":{}}}],["controller",{"_index":335,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["convert",{"_index":769,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["coordinate",{"_index":2012,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["copies",{"_index":2707,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2695,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2686,"title":{},"body":{"license.html":{}}}],["cord",{"_index":1466,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["cors",{"_index":2561,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":2397,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["created",{"_index":672,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["createdatabase",{"_index":377,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["createdatabase(config",{"_index":386,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["creates",{"_index":339,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{}}}],["createsegments",{"_index":566,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["createstackops",{"_index":567,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["createstackops(ranges",{"_index":586,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["createworker",{"_index":1889,"title":{},"body":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["createworker(config",{"_index":439,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["creation",{"_index":1010,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["credits",{"_index":2673,"title":{},"body":{"index.html":{}}}],["csp",{"_index":955,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["css",{"_index":1390,"title":{},"body":{"interfaces/OrganInfo.html":{},"dependencies.html":{}}}],["cuboid",{"_index":2395,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":2394,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":615,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{}}}],["currently",{"_index":1515,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["cursor",{"_index":1060,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["custom",{"_index":1623,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["cyberinfrastructure",{"_index":2675,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":2233,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":887,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["damages",{"_index":2729,"title":{},"body":{"license.html":{}}}],["dark/light",{"_index":2164,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":126,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/PanelData.html":{},"components/StoreDebugComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["data.content",{"_index":1047,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["data.content.length",{"_index":1032,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["data.infotitle",{"_index":1046,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["data.split",{"_index":776,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["data.title",{"_index":1127,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["data.videoid",{"_index":1048,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dataaction",{"_index":1872,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["database",{"_index":103,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["database.service.ts",{"_index":370,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["database.service.ts:20",{"_index":380,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{}}}],["database.service.ts:37",{"_index":387,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{}}}],["database.service.ts:39",{"_index":384,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{}}}],["database.service.ts:63",{"_index":1891,"title":{},"body":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["database[releaseproxy",{"_index":443,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["databasestatus",{"_index":104,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["datareviver",{"_index":133,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/typealiases.html":{}}}],["datasets",{"_index":2244,"title":{},"body":{"changelog.html":{}}}],["datasource",{"_index":125,"title":{"interfaces/DataSource.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"coverage.html":{}}}],["datasource[k",{"_index":489,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["datasourcedatatype",{"_index":490,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["datasourcelike",{"_index":416,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/typealiases.html":{}}}],["datasourcelikemethod",{"_index":487,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["datasourcemethod",{"_index":488,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["datasourceservice",{"_index":509,"title":{"injectables/DataSourceService.html":{}},"body":{"injectables/DataSourceService.html":{},"coverage.html":{}}}],["deal",{"_index":2697,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":2736,"title":{},"body":{"license.html":{}}}],["debug",{"_index":1709,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug'},{'name",{"_index":714,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["debug.component",{"_index":1751,"title":{},"body":{"modules/StoreDebugModule.html":{}}}],["debug.component.html",{"_index":1711,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.scss",{"_index":1710,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts",{"_index":1707,"title":{},"body":{"components/StoreDebugComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["debug.component.ts:21",{"_index":1719,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:26",{"_index":1725,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:34",{"_index":1722,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:37",{"_index":1715,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:58",{"_index":1720,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.module.ts",{"_index":1750,"title":{},"body":{"modules/StoreDebugModule.html":{}}}],["debug/store",{"_index":1706,"title":{},"body":{"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["december",{"_index":2325,"title":{},"body":{"changelog.html":{}}}],["decides",{"_index":1545,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["deck.gl/core",{"_index":2525,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/geo",{"_index":2527,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":2530,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":2531,"title":{},"body":{"dependencies.html":{}}}],["deckgl",{"_index":1951,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["declarations",{"_index":362,"title":{},"body":{"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}}}],["declare",{"_index":916,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["decorated",{"_index":290,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{}}}],["decoratedrange",{"_index":289,"title":{"interfaces/DecoratedRange.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["decoratedtextcomponent",{"_index":552,"title":{"components/DecoratedTextComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["decoratedtextmodule",{"_index":723,"title":{"modules/DecoratedTextModule.html":{}},"body":{"modules/DecoratedTextModule.html":{},"modules/TextSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["decoration",{"_index":600,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["decorations",{"_index":267,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{}}}],["decorations.length",{"_index":634,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["decorations.reduce",{"_index":689,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["decorator",{"_index":285,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"dependencies.html":{}}}],["decorators",{"_index":245,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{}}}],["deep",{"_index":1143,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{}}}],["deeply",{"_index":2109,"title":{},"body":{"changelog.html":{}}}],["def",{"_index":886,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["default",{"_index":292,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/ConsentService.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/PluckUniqueOptions.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_max_options",{"_index":297,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_options",{"_index":1630,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultmaxoptions",{"_index":342,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["defaultparams",{"_index":136,"title":{"interfaces/DefaultParams.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{}}}],["defaults",{"_index":850,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/functions.html":{}}}],["defaultservice",{"_index":105,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["define",{"_index":735,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["defined",{"_index":24,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["delegate.service.ts",{"_index":1193,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"coverage.html":{}}}],["delegate.service.ts:11",{"_index":1196,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["delegate.service.ts:28",{"_index":1199,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["delegatedatasource",{"_index":372,"title":{"classes/DelegateDataSource.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["delegatedatasource:11",{"_index":1201,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["delegatedatasource:19",{"_index":406,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["delete",{"_index":927,"title":{},"body":{"injectables/GlobalsService.html":{},"components/SpatialSearchListComponent.html":{}}}],["delete_outlined",{"_index":1686,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["demo",{"_index":2128,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":952,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["depends",{"_index":934,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["deps",{"_index":77,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["description",{"_index":262,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["destroyed",{"_index":1022,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["detaches",{"_index":1543,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["details",{"_index":999,"title":{},"body":{"components/InfoButtonComponent.html":{},"changelog.html":{}}}],["detection",{"_index":1718,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["detects",{"_index":1024,"title":{},"body":{"components/InfoButtonComponent.html":{},"interfaces/OrganInfo.html":{}}}],["determines",{"_index":1519,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["determining",{"_index":1625,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["dev",{"_index":431,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["developed",{"_index":2674,"title":{},"body":{"index.html":{}}}],["developmentmode",{"_index":52,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["developments",{"_index":2419,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":740,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/PanelData.html":{},"changelog.html":{}}}],["dialog's",{"_index":1108,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialog'},{'name",{"_index":703,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["dialog.component",{"_index":1030,"title":{},"body":{"components/InfoButtonComponent.html":{},"modules/InfoDialogModule.html":{}}}],["dialog.component.html",{"_index":1097,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialog.component.scss",{"_index":1096,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialog.component.ts",{"_index":1089,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"coverage.html":{}}}],["dialog.component.ts:26",{"_index":1121,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":1123,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:32",{"_index":1106,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:40",{"_index":1120,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:41",{"_index":1119,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:51",{"_index":1113,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:60",{"_index":1111,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.module",{"_index":1081,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["dialog.module.ts",{"_index":1183,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["dialog/info",{"_index":1029,"title":{},"body":{"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"coverage.html":{}}}],["dialogref",{"_index":1099,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialogs",{"_index":1037,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["dialogue",{"_index":1020,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["different",{"_index":2148,"title":{},"body":{"changelog.html":{}}}],["digits",{"_index":2301,"title":{},"body":{"changelog.html":{}}}],["dir",{"_index":1555,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["direct",{"_index":2437,"title":{},"body":{"changelog.html":{}}}],["direction",{"_index":1556,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["directive",{"_index":695,"title":{"directives/NumberDirective.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":719,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["directly",{"_index":2363,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":958,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{}}}],["disabled",{"_index":979,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/variables.html":{}}}],["disables",{"_index":1594,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["dismiss",{"_index":1805,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["display",{"_index":558,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["displayed",{"_index":273,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["displayerrors",{"_index":1512,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["displaying",{"_index":1091,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["displays",{"_index":997,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["distance",{"_index":1526,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["distinct",{"_index":1626,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["distinctuntilchanged",{"_index":287,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["distinctuntilchanged(opts.compare",{"_index":1647,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["distribute",{"_index":2703,"title":{},"body":{"license.html":{}}}],["div",{"_index":1952,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["doc",{"_index":2406,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1239,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"dependencies.html":{}}}],["document).body",{"_index":1274,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["document.body.appendchild(tag",{"_index":1132,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["document.createelement('script",{"_index":1129,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["document.getelementsbyclassname('modal",{"_index":1133,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["documentation",{"_index":737,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/PanelData.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documentationcontent",{"_index":730,"title":{"interfaces/DocumentationContent.html":{}},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/PanelData.html":{},"coverage.html":{}}}],["documentationcontents",{"_index":1100,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["documentationurl",{"_index":1005,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["dom",{"_index":555,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["don't",{"_index":642,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["done",{"_index":654,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["donor",{"_index":2189,"title":{},"body":{"changelog.html":{}}}],["donors",{"_index":2247,"title":{},"body":{"changelog.html":{}}}],["dorequest",{"_index":215,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["dorequest(method",{"_index":240,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["dotenv",{"_index":2566,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":2428,"title":{},"body":{"changelog.html":{}}}],["during",{"_index":880,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["dynamic",{"_index":2520,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":2042,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":736,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"miscellaneous/functions.html":{}}}],["eagerly_loaded_services",{"_index":55,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["easier",{"_index":2048,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":624,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["efficiency",{"_index":2268,"title":{},"body":{"changelog.html":{}}}],["el",{"_index":1251,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"miscellaneous/functions.html":{}}}],["element",{"_index":694,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["elementref",{"_index":1283,"title":{},"body":{"directives/NumberDirective.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["elementref.nativeelement",{"_index":1828,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["embedded",{"_index":2156,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":2144,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":2142,"title":{},"body":{"changelog.html":{}}}],["emitevent",{"_index":320,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["emits",{"_index":328,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{}}}],["emitted",{"_index":2636,"title":{},"body":{"miscellaneous/functions.html":{}}}],["emitter",{"_index":1328,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["empty",{"_index":630,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["end",{"_index":529,"title":{},"body":{"interfaces/DecoratedRange.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/functions.html":{}}}],["endpoint",{"_index":226,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["endpoint.service.ts",{"_index":90,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["endpoint.service.ts:104",{"_index":249,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:109",{"_index":253,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:114",{"_index":250,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:119",{"_index":252,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:127",{"_index":248,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:135",{"_index":254,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:143",{"_index":257,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:151",{"_index":246,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:159",{"_index":251,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:167",{"_index":247,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:175",{"_index":256,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:183",{"_index":255,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:190",{"_index":241,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:195",{"_index":243,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:201",{"_index":244,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:96",{"_index":239,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["ensures",{"_index":1884,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["entry",{"_index":1818,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["entry[1",{"_index":668,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["environment",{"_index":935,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["error",{"_index":1546,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["errors",{"_index":968,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["es",{"_index":2557,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":957,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{}}}],["eslint/explicit",{"_index":1269,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["eslint/no",{"_index":962,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["especially",{"_index":878,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["etc",{"_index":2171,"title":{},"body":{"changelog.html":{}}}],["eui",{"_index":1016,"title":{},"body":{"components/InfoButtonComponent.html":{},"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":2064,"title":{},"body":{"changelog.html":{}}}],["eval",{"_index":964,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["even",{"_index":899,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["event",{"_index":1247,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"license.html":{}}}],["event.stoppropagation",{"_index":1297,"title":{},"body":{"directives/NumberDirective.html":{}}}],["eventemitter",{"_index":276,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["events",{"_index":1256,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/OpacitySliderComponent.html":{}}}],["events.subscribe(data",{"_index":1261,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["eventually",{"_index":1392,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["evt",{"_index":1984,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["evt.preventdefault",{"_index":1985,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["exclusive",{"_index":532,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["exists",{"_index":902,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["expanded",{"_index":1517,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["explicit",{"_index":1268,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["exploration",{"_index":2649,"title":{},"body":{"index.html":{}}}],["export",{"_index":46,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["exported",{"_index":127,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["exports",{"_index":363,"title":{},"body":{"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}}}],["express",{"_index":2568,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["ext/operators",{"_index":848,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["ext/operators/src/lib/filter",{"_index":2462,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ext/operators/src/lib/flatten.ts",{"_index":2465,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ext/operators/src/lib/inner",{"_index":2467,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ext/operators/src/lib/pluck",{"_index":1618,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ext/src/public",{"_index":2471,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["extends",{"_index":371,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["external",{"_index":2161,"title":{},"body":{"changelog.html":{}}}],["extra",{"_index":2573,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":2125,"title":{},"body":{"changelog.html":{}}}],["eye",{"_index":1407,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["f",{"_index":1448,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":298,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/LocalStorageSyncService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["fade",{"_index":1136,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["fail",{"_index":951,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["fails",{"_index":1265,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"changelog.html":{}}}],["fallopian",{"_index":1414,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["fallthrough",{"_index":1234,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["false",{"_index":321,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/variables.html":{}}}],["favor",{"_index":2312,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":2039,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":2234,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":2267,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":147,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":1386,"title":{},"body":{"interfaces/OrganInfo.html":{},"dependencies.html":{}}}],["fetches",{"_index":345,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["field",{"_index":1775,"title":{},"body":{"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"changelog.html":{}}}],["fields",{"_index":631,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["file",{"_index":15,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":2696,"title":{},"body":{"license.html":{}}}],["filled",{"_index":597,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["filler",{"_index":1690,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["filter",{"_index":97,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["filter(config",{"_index":421,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["filter(item",{"_index":669,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["filter(range",{"_index":686,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["filternulls",{"_index":846,"title":{},"body":{"injectables/GlobalConfigState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["filterparams",{"_index":138,"title":{"interfaces/FilterParams.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["filters",{"_index":594,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["filtertoparams",{"_index":2501,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["filtertoparams(filter",{"_index":219,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["final",{"_index":2315,"title":{},"body":{"changelog.html":{}}}],["find",{"_index":347,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["findglobalobject",{"_index":867,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["finishing",{"_index":2123,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":639,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["fit",{"_index":2241,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":2721,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":2225,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":2026,"title":{},"body":{"changelog.html":{}}}],["fixes/performance",{"_index":2375,"title":{},"body":{"changelog.html":{}}}],["flatten",{"_index":2466,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["flattens",{"_index":2631,"title":{},"body":{"miscellaneous/functions.html":{}}}],["flex",{"_index":692,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["float",{"_index":1175,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["fly",{"_index":2445,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":2711,"title":{},"body":{"license.html":{}}}],["font",{"_index":1064,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/SpatialSearchListComponent.html":{}}}],["form",{"_index":334,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["format",{"_index":2338,"title":{},"body":{"changelog.html":{}}}],["formatdata",{"_index":1246,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["formcontrol",{"_index":282,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["formsmodule",{"_index":1788,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["forroot",{"_index":21,"title":{},"body":{"modules/AnalyticsModule.html":{}}}],["forroot(options",{"_index":22,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["forwardcall",{"_index":378,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardcall(method",{"_index":388,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource",{"_index":392,"title":{"classes/ForwardingDataSource.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["forwardingdatasource:36",{"_index":397,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:40",{"_index":401,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:44",{"_index":398,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:48",{"_index":400,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:52",{"_index":396,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:56",{"_index":402,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:60",{"_index":405,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:64",{"_index":394,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:68",{"_index":399,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:72",{"_index":395,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:76",{"_index":404,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:80",{"_index":403,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:93",{"_index":393,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["found",{"_index":348,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GlobalsService.html":{},"components/TextSearchComponent.html":{}}}],["frame",{"_index":2248,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":2013,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["free",{"_index":2691,"title":{},"body":{"license.html":{}}}],["fromevent",{"_index":1241,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["fromevent(el",{"_index":1257,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["fs",{"_index":2572,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":681,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["fullscreen",{"_index":2402,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":2235,"title":{},"body":{"changelog.html":{}}}],["func",{"_index":960,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["function",{"_index":56,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/InfoButtonService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["function('return",{"_index":965,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["functionality",{"_index":304,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GlobalsService.html":{},"components/TextSearchComponent.html":{}}}],["functionaliy",{"_index":1632,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":2619,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":2680,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":2710,"title":{},"body":{"license.html":{}}}],["further",{"_index":2398,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":2226,"title":{},"body":{"changelog.html":{}}}],["ga",{"_index":1245,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["ga.event('webpage",{"_index":1262,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["gatoken",{"_index":48,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["generate",{"_index":2043,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":2069,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":2051,"title":{},"body":{"changelog.html":{}}}],["get(key",{"_index":883,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["getaggregateresults",{"_index":232,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getaggregateresults(filter",{"_index":203,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getallowtelemetry",{"_index":1821,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["getcelltypetermoccurences",{"_index":233,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getcelltypetermoccurences(filter",{"_index":207,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getcelltypetreemodel",{"_index":196,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getconfig",{"_index":834,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getdata",{"_index":1724,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["getdatabasestatus",{"_index":185,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getdatasettechnologynames",{"_index":191,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getnormalizeddecorations",{"_index":568,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getobj",{"_index":911,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["getontologytermoccurences",{"_index":234,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getontologytermoccurences(filter",{"_index":205,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getontologytreemodel",{"_index":193,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getop",{"_index":657,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getop(range.end).removed.push(range",{"_index":660,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getop(range.start).added.push(range",{"_index":659,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getoption",{"_index":804,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getoption(...path",{"_index":817,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getoption(k1",{"_index":810,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getoptions",{"_index":1752,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["getoptions(search",{"_index":350,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["getpathkey",{"_index":805,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getpathkey(path",{"_index":822,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getproperty",{"_index":806,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getproperty(path",{"_index":824,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getprovidernames",{"_index":189,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getreferenceorgans",{"_index":198,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getreferenceorganscene",{"_index":235,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getreferenceorganscene(organiri",{"_index":212,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["gets",{"_index":885,"title":{},"body":{"injectables/GlobalsService.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{}}}],["getscene",{"_index":236,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getscene(filter",{"_index":209,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["gettelemetrystoragesetting",{"_index":1877,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":2009,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettissueblockresults",{"_index":237,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["gettissueblockresults(filter",{"_index":201,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getvalue",{"_index":1772,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["github",{"_index":2303,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":464,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/typealiases.html":{}}}],["gizmo",{"_index":2175,"title":{},"body":{"changelog.html":{}}}],["global",{"_index":866,"title":{},"body":{"injectables/GlobalsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["globalconfig",{"_index":183,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"changelog.html":{}}}],["globalconfig.config$.pipe",{"_index":420,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["globalconfig.getoption('hubmaptoken",{"_index":221,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["globalconfig.getoption('hubmaptoken').subscribe(buster",{"_index":184,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["globalconfig.getoption('remoteapiendpoint",{"_index":220,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["globalconfigstate",{"_index":122,"title":{"injectables/GlobalConfigState.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["globalkey",{"_index":890,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{}}}],["globalsservice",{"_index":863,"title":{"injectables/GlobalsService.html":{}},"body":{"injectables/GlobalsService.html":{},"coverage.html":{}}}],["globalthis",{"_index":882,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["globalthis[k",{"_index":922,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["good",{"_index":2348,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":40,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"changelog.html":{},"dependencies.html":{}}}],["googleanalyticsservice",{"_index":1240,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["googleanalyticssyncservice",{"_index":8,"title":{"injectables/GoogleAnalyticsSyncService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["granted",{"_index":2690,"title":{},"body":{"license.html":{}}}],["graph",{"_index":2738,"title":{},"body":{"modules.html":{}}}],["graphical",{"_index":2025,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":2575,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":2138,"title":{},"body":{"changelog.html":{}}}],["grow",{"_index":1691,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["gtex",{"_index":2044,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":2340,"title":{},"body":{"changelog.html":{}}}],["h1",{"_index":759,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["hack",{"_index":1575,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["hand",{"_index":2345,"title":{},"body":{"changelog.html":{}}}],["handles",{"_index":1090,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["happen",{"_index":2383,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":2323,"title":{},"body":{"changelog.html":{}}}],["happy",{"_index":1577,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["hard",{"_index":932,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["has(key",{"_index":894,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["hassex",{"_index":1377,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":1148,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["headerandcontent",{"_index":782,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["headerandcontent.splice(1).join(newline",{"_index":786,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["headerandcontent[0",{"_index":785,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["heart",{"_index":1419,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":1152,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["helmet",{"_index":2579,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":1382,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["here",{"_index":2343,"title":{},"body":{"changelog.html":{}}}],["hereby",{"_index":2689,"title":{},"body":{"license.html":{}}}],["hex",{"_index":2581,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":1360,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["hide",{"_index":1548,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["hiding",{"_index":1092,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["high",{"_index":167,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["highlight",{"_index":2114,"title":{},"body":{"changelog.html":{}}}],["highlights",{"_index":2115,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":2726,"title":{},"body":{"license.html":{}}}],["hooked",{"_index":2274,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":691,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["hostbinding",{"_index":277,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["hostbinding('class",{"_index":314,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["hostbindings",{"_index":574,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["hostlistener",{"_index":1292,"title":{},"body":{"directives/NumberDirective.html":{}}}],["hostlistener('input",{"_index":1291,"title":{},"body":{"directives/NumberDirective.html":{}}}],["hostlisteners",{"_index":1281,"title":{},"body":{"directives/NumberDirective.html":{}}}],["hovering",{"_index":2191,"title":{},"body":{"changelog.html":{}}}],["html",{"_index":313,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["htmlelement",{"_index":1244,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["http",{"_index":755,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000029",{"_index":1404,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000056",{"_index":1477,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000059",{"_index":1464,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000079",{"_index":1457,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000948",{"_index":1420,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000955",{"_index":1400,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000970",{"_index":1409,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000992",{"_index":1441,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000995",{"_index":1486,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001004",{"_index":1438,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001222",{"_index":1479,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001223",{"_index":1478,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001255",{"_index":1483,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001264",{"_index":1446,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001270",{"_index":1450,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001302",{"_index":1417,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001303",{"_index":1416,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001465",{"_index":1428,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001987",{"_index":1453,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002048",{"_index":1437,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002049",{"_index":1492,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002097",{"_index":1397,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002106",{"_index":1471,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002107",{"_index":1433,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002108",{"_index":1461,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002113",{"_index":1423,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002240",{"_index":1468,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002367",{"_index":1456,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002370",{"_index":1474,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002509",{"_index":1405,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0003889",{"_index":1415,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004537",{"_index":1491,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004538",{"_index":1424,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004539",{"_index":1425,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004548",{"_index":1410,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004549",{"_index":1411,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.org/sig/ont/fma/fma24977",{"_index":1430,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.org/sig/ont/fma/fma24978",{"_index":1429,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.org/sig/ont/fma/fma7213",{"_index":1443,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.org/sig/ont/fma/fma7214",{"_index":1442,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":745,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["httpclientmodule",{"_index":1080,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["https://beta",{"_index":2652,"title":{},"body":{"index.html":{}}}],["https://ccf",{"_index":2664,"title":{},"body":{"index.html":{}}}],["https://hubmap",{"_index":2657,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":2656,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":2659,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":2654,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":2439,"title":{},"body":{"changelog.html":{}}}],["https://www.youtube.com/iframe_api",{"_index":1131,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["hubmap",{"_index":2112,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["hubmaptoken",{"_index":91,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["i1[0",{"_index":664,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["i2",{"_index":663,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["i2[0",{"_index":665,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["icon",{"_index":996,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["icons",{"_index":1358,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["id",{"_index":268,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["idb",{"_index":2584,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":1769,"title":{},"body":{"components/TextSearchComponent.html":{},"coverage.html":{}}}],["iec",{"_index":2318,"title":{},"body":{"changelog.html":{}}}],["iframe",{"_index":1178,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["ignore",{"_index":929,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["ignored",{"_index":1224,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["igoogleanalyticscommand",{"_index":37,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["igoogleanalyticssettings",{"_index":974,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["image",{"_index":2311,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":2361,"title":{},"body":{"changelog.html":{}}}],["img",{"_index":1174,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["immutable",{"_index":836,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["immutablepatchvalue",{"_index":828,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["immutablestatevalue",{"_index":831,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["impl",{"_index":373,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["impl[method",{"_index":507,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["implementation",{"_index":2103,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":2272,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":2405,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":178,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["implied",{"_index":963,"title":{},"body":{"injectables/GlobalsService.html":{},"license.html":{}}}],["import",{"_index":33,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["important",{"_index":1359,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{}}}],["imports",{"_index":71,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}}}],["improve",{"_index":1837,"title":{},"body":{"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["improved",{"_index":2061,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":2021,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":2139,"title":{},"body":{"changelog.html":{}}}],["in\\'}}opt",{"_index":1861,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["include",{"_index":1288,"title":{},"body":{"directives/NumberDirective.html":{},"changelog.html":{}}}],["included",{"_index":2714,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2448,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":2111,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["inclusive",{"_index":536,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["increase",{"_index":2296,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":2400,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":85,"title":{"index.html":{}},"body":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexing",{"_index":539,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["indiana",{"_index":2678,"title":{},"body":{"index.html":{}}}],["indicating",{"_index":543,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["indices",{"_index":2640,"title":{},"body":{"miscellaneous/functions.html":{}}}],["indicies",{"_index":534,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["individual",{"_index":2278,"title":{},"body":{"changelog.html":{}}}],["infix",{"_index":1778,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["info",{"_index":13,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["infobuttoncomponent",{"_index":700,"title":{"components/InfoButtonComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["infobuttonmodule",{"_index":1070,"title":{"modules/InfoButtonModule.html":{}},"body":{"modules/InfoButtonModule.html":{},"modules.html":{},"overview.html":{}}}],["infobuttonservice",{"_index":750,"title":{"injectables/InfoButtonService.html":{}},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"coverage.html":{}}}],["infodialogcomponent",{"_index":702,"title":{"components/InfoDialogComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["infodialogdata",{"_index":1105,"title":{"interfaces/InfoDialogData.html":{}},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"coverage.html":{}}}],["infodialogmodule",{"_index":1075,"title":{"modules/InfoDialogModule.html":{}},"body":{"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules.html":{},"overview.html":{}}}],["information",{"_index":995,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{},"index.html":{}}}],["infotitle",{"_index":748,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/PanelData.html":{}}}],["infrastructure",{"_index":2364,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":2328,"title":{},"body":{"changelog.html":{}}}],["inherited",{"_index":391,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["init",{"_index":1117,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["initalvalue",{"_index":1293,"title":{},"body":{"directives/NumberDirective.html":{}}}],["initalvalue.replace(/[^0",{"_index":1295,"title":{},"body":{"directives/NumberDirective.html":{}}}],["initcommands",{"_index":2458,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["initcommands(options",{"_index":66,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["initial",{"_index":2207,"title":{},"body":{"changelog.html":{}}}],["initial_telemetry_setting",{"_index":1876,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialization",{"_index":1959,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["initialized",{"_index":1935,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["inject",{"_index":278,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["inject(default_max_options",{"_index":343,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["inject(document",{"_index":1272,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["inject(local_storage_consent_key",{"_index":1221,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["inject(mat_dialog_data",{"_index":1118,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["inject(mat_snack_bar_data",{"_index":1819,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["inject(ngx_google_analytics_settings_token",{"_index":985,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["inject(ngx_window",{"_index":984,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["injectable",{"_index":93,"title":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/PanelData.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["injectables",{"_index":231,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"overview.html":{}}}],["injected",{"_index":1110,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["injectiontoken",{"_index":279,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/LocalStorageSyncService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('key",{"_index":1216,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":1195,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["injector.get(token",{"_index":1205,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["injectordelegatedatasourceservice",{"_index":1191,"title":{"injectables/InjectorDelegateDataSourceService.html":{}},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"coverage.html":{}}}],["innermap",{"_index":2469,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["innermap(project",{"_index":2634,"title":{},"body":{"miscellaneous/functions.html":{}}}],["input",{"_index":280,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["input[ccfnumbersonly",{"_index":721,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["inputs",{"_index":573,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{}}}],["inside",{"_index":743,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["instance",{"_index":340,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["instead",{"_index":2201,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":2143,"title":{},"body":{"changelog.html":{}}}],["integer",{"_index":1279,"title":{},"body":{"directives/NumberDirective.html":{}}}],["integrated",{"_index":2236,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":2108,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":2327,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":2254,"title":{},"body":{"changelog.html":{}}}],["interact",{"_index":2220,"title":{},"body":{"changelog.html":{}}}],["interacting",{"_index":865,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["interactions",{"_index":2386,"title":{},"body":{"changelog.html":{}}}],["interactive",{"_index":1936,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["interactive(value",{"_index":1938,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["interest",{"_index":1592,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["interface",{"_index":47,"title":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":84,"title":{},"body":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":2310,"title":{},"body":{"changelog.html":{}}}],["intestine",{"_index":1459,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["invoked",{"_index":2638,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iobservablecacheconfig",{"_index":128,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["isdevmode",{"_index":407,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["isselected(organ",{"_index":1593,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["issue",{"_index":2292,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":2090,"title":{},"body":{"changelog.html":{}}}],["istanbul",{"_index":928,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["it's",{"_index":2106,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":1324,"title":{},"body":{"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"changelog.html":{}}}],["item.description",{"_index":1676,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["item.selected",{"_index":1682,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["itemcontainer",{"_index":1509,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemcontainer.nativeelement.style.width",{"_index":1603,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemid",{"_index":1654,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["itemid(_index",{"_index":1665,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["itemlist",{"_index":1507,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemlist.nativeelement.offsetwidth",{"_index":1597,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemlist.nativeelement.style.left",{"_index":1564,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemremoved",{"_index":1657,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["items",{"_index":1352,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["iu",{"_index":2417,"title":{},"body":{"changelog.html":{}}}],["javascript",{"_index":2055,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["json",{"_index":1745,"title":{},"body":{"components/StoreDebugComponent.html":{},"changelog.html":{}}}],["jsonld",{"_index":2587,"title":{},"body":{"dependencies.html":{}}}],["july",{"_index":2385,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":2425,"title":{},"body":{"changelog.html":{}}}],["justify",{"_index":1149,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["k",{"_index":389,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["k1",{"_index":811,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k2",{"_index":813,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k3",{"_index":815,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k4",{"_index":1638,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k5",{"_index":1639,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k6",{"_index":1640,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["key",{"_index":61,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["keyboard",{"_index":2423,"title":{},"body":{"changelog.html":{}}}],["keyof",{"_index":486,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["keys",{"_index":913,"title":{},"body":{"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/typealiases.html":{}}}],["keys.slice(0",{"_index":1644,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["keyval",{"_index":2585,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":1422,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":2718,"title":{},"body":{"license.html":{}}}],["knee",{"_index":1427,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["known",{"_index":2089,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":2321,"title":{},"body":{"changelog.html":{}}}],["kv[0",{"_index":1743,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["kv[1",{"_index":1744,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["kvlist",{"_index":1727,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["kvpair",{"_index":1729,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["l",{"_index":1408,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":269,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{}}}],["labs/data",{"_index":2541,"title":{},"body":{"dependencies.html":{}}}],["labs/data/decorators",{"_index":841,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["labs/data/repositories",{"_index":842,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["labs/data/typings",{"_index":843,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["labs/dispatch",{"_index":2543,"title":{},"body":{"dependencies.html":{}}}],["landmarks",{"_index":2127,"title":{},"body":{"changelog.html":{}}}],["large",{"_index":1463,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["larger",{"_index":2049,"title":{},"body":{"changelog.html":{}}}],["last",{"_index":652,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["lastindex",{"_index":638,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["later",{"_index":578,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["latest",{"_index":326,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"index.html":{}}}],["launchinfodialog",{"_index":1003,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["launchinfodialog(data",{"_index":1017,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["layers",{"_index":2528,"title":{},"body":{"dependencies.html":{}}}],["ld",{"_index":2337,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":2291,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":2122,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":1147,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["left/right",{"_index":2136,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":693,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["length",{"_index":541,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["level",{"_index":2421,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["levels",{"_index":2434,"title":{},"body":{"changelog.html":{}}}],["lhs",{"_index":1628,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["liability",{"_index":2730,"title":{},"body":{"license.html":{}}}],["liable",{"_index":2727,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":2053,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":2262,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":2684,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":2117,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":2699,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2369,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":959,"title":{},"body":{"injectables/GlobalsService.html":{},"components/InfoDialogComponent.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["link",{"_index":2129,"title":{},"body":{"changelog.html":{}}}],["linkage",{"_index":2387,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":2188,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":2087,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":1513,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/StoreDebugComponent.html":{},"changelog.html":{}}}],["list'},{'name",{"_index":711,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["list.component",{"_index":1704,"title":{},"body":{"modules/SpatialSearchListModule.html":{}}}],["list.component.html",{"_index":1653,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["list.component.scss",{"_index":1652,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["list.component.ts",{"_index":1650,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"coverage.html":{}}}],["list.component.ts:27",{"_index":1664,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.component.ts:30",{"_index":1660,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.component.ts:33",{"_index":1659,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.component.ts:36",{"_index":1662,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.component.ts:39",{"_index":1661,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.component.ts:48",{"_index":1666,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.component.ts:58",{"_index":1673,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.component.ts:71",{"_index":1671,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.module.ts",{"_index":1697,"title":{},"body":{"modules/SpatialSearchListModule.html":{}}}],["list/spatial",{"_index":1649,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"coverage.html":{}}}],["listeners",{"_index":1717,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["listens",{"_index":1287,"title":{},"body":{"directives/NumberDirective.html":{}}}],["listlength",{"_index":1600,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["listlength}px",{"_index":1604,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["literal",{"_index":2602,"title":{},"body":{"dependencies.html":{}}}],["little",{"_index":2218,"title":{},"body":{"changelog.html":{}}}],["liver",{"_index":1432,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":1114,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["loadconsent",{"_index":1207,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["loaded",{"_index":2388,"title":{},"body":{"changelog.html":{}}}],["loaders.gl/core",{"_index":2532,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/draco",{"_index":2534,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":2535,"title":{},"body":{"dependencies.html":{}}}],["local",{"_index":44,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["local_storage_allow_telemetry_key",{"_index":1875,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["local_storage_consent_key",{"_index":1215,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localstorage",{"_index":1220,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["localstorage.getitem(local_storage_allow_telemetry_key",{"_index":1878,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["localstorage.setitem(local_storage_allow_telemetry_key",{"_index":1881,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["localstoragesyncservice",{"_index":9,"title":{"injectables/LocalStorageSyncService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["locate",{"_index":871,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["location",{"_index":2297,"title":{},"body":{"changelog.html":{}}}],["location.reload",{"_index":1888,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["locations",{"_index":875,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["lodash",{"_index":2589,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1835,"title":{},"body":{"components/TrackingPopupComponent.html":{},"index.html":{}}}],["logging",{"_index":2046,"title":{},"body":{"changelog.html":{}}}],["long",{"_index":901,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["longer",{"_index":2199,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":739,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"changelog.html":{}}}],["low",{"_index":166,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["lru",{"_index":2591,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":2536,"title":{},"body":{"dependencies.html":{}}}],["lung",{"_index":1435,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["lungs",{"_index":1436,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["lymph",{"_index":1403,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["made",{"_index":2320,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":2019,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":1576,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["makedecoratedsegment",{"_index":569,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["makedecoratedsegment(text",{"_index":598,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["makes",{"_index":2047,"title":{},"body":{"changelog.html":{}}}],["makeundecoratedsegment",{"_index":570,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["makeundecoratedsegment(text",{"_index":601,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["making",{"_index":2099,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":148,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["managed",{"_index":1723,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["manager",{"_index":385,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["manager.database",{"_index":428,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["manager.database.connect(config",{"_index":434,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["managers",{"_index":2059,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":115,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"modules/MousePositionTrackerModule.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["map(config",{"_index":1202,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["map(data",{"_index":229,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["map(entry",{"_index":667,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["map(formatdata",{"_index":1260,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["map(manager",{"_index":427,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["map(range",{"_index":683,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["map(token",{"_index":1204,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["map.ts",{"_index":2468,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapping",{"_index":2637,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maps",{"_index":2635,"title":{},"body":{"miscellaneous/functions.html":{}}}],["march",{"_index":2265,"title":{},"body":{"changelog.html":{}}}],["margin",{"_index":1153,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["margin.x",{"_index":1969,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["margin.y",{"_index":1972,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["markdown",{"_index":757,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"interfaces/PanelData.html":{},"dependencies.html":{}}}],["markdowncontent",{"_index":774,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["markdowncontent.push",{"_index":784,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["markdownmodule",{"_index":1187,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["markdownmodule.forroot",{"_index":1190,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["markers",{"_index":1799,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["mat",{"_index":1144,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["mat_dialog_data",{"_index":1124,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["mat_snack_bar_data",{"_index":1823,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["matautocompletemodule",{"_index":1790,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["matbuttonmodule",{"_index":1698,"title":{},"body":{"modules/SpatialSearchListModule.html":{},"modules/TrackingPopupModule.html":{}}}],["match",{"_index":1383,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["matcheckboxmodule",{"_index":1700,"title":{},"body":{"modules/SpatialSearchListModule.html":{}}}],["matching",{"_index":82,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":1007,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["matdialogmodule",{"_index":1184,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["matdialogref",{"_index":1104,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["material",{"_index":1692,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["matexpansionmodule",{"_index":1185,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["matformfieldmodule",{"_index":1792,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["math.floor(carouselcontainer.nativeelement.offsetwidth",{"_index":1601,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["math.gl/core",{"_index":95,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"dependencies.html":{}}}],["math.gl/culling",{"_index":2539,"title":{},"body":{"dependencies.html":{}}}],["math.log2((height",{"_index":1971,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["math.log2((width",{"_index":1968,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["math.min",{"_index":1967,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["maticonmodule",{"_index":1077,"title":{},"body":{"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{}}}],["matinputmodule",{"_index":1794,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["matlistmodule",{"_index":1702,"title":{},"body":{"modules/SpatialSearchListModule.html":{}}}],["matprefix",{"_index":1785,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["matripplemodule",{"_index":1369,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["matrix4",{"_index":94,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["matrix4(node.transformmatrix",{"_index":174,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["matslidermodule",{"_index":1367,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["matsuffix",{"_index":1786,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["mattooltipmodule",{"_index":1615,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["max",{"_index":170,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["maxcachecount",{"_index":158,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":293,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["maxoptions",{"_index":323,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["maxrotationx",{"_index":1980,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["mc",{"_index":2416,"title":{},"body":{"changelog.html":{}}}],["member",{"_index":1830,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["memory",{"_index":2290,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":2346,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":2720,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2701,"title":{},"body":{"license.html":{}}}],["message",{"_index":1549,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["metadata",{"_index":562,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["method",{"_index":216,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["method(requestparams",{"_index":228,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["methods",{"_index":19,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["min",{"_index":168,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/InfoDialogComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["minmax",{"_index":106,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["minor",{"_index":1574,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["minrotationx",{"_index":1978,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["miscellaneous",{"_index":2618,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2685,"title":{},"body":{"license.html":{}}}],["mixed",{"_index":1578,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["mock",{"_index":2412,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":1042,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["mode",{"_index":432,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["model",{"_index":1125,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"dependencies.html":{}}}],["models",{"_index":1901,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["modify",{"_index":676,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"license.html":{}}}],["module",{"_index":0,"title":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":32,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["monorepo",{"_index":2644,"title":{},"body":{"index.html":{}}}],["more",{"_index":2342,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["mount",{"_index":1953,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["mouseevent",{"_index":1248,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mousemove",{"_index":1263,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mousemove').pipe",{"_index":1258,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mousepositiontrackermodule",{"_index":1236,"title":{"modules/MousePositionTrackerModule.html":{}},"body":{"modules/MousePositionTrackerModule.html":{},"modules.html":{}}}],["moved",{"_index":2429,"title":{},"body":{"changelog.html":{}}}],["moves",{"_index":1527,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["much",{"_index":937,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["multi",{"_index":73,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["multiple",{"_index":1036,"title":{},"body":{"components/InfoButtonComponent.html":{},"interfaces/OrganInfo.html":{},"index.html":{}}}],["multiselect",{"_index":1511,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["n3",{"_index":2592,"title":{},"body":{"dependencies.html":{}}}],["n\\n",{"_index":780,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["name",{"_index":27,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":2168,"title":{},"body":{"changelog.html":{}}}],["navigation",{"_index":2424,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":2269,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":2273,"title":{},"body":{"changelog.html":{}}}],["negative",{"_index":533,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["nested",{"_index":2632,"title":{},"body":{"miscellaneous/functions.html":{}}}],["network",{"_index":2676,"title":{},"body":{"index.html":{}}}],["new",{"_index":154,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["newitems",{"_index":1677,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["newitems.filter(item",{"_index":1681,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["newitems.splice(index",{"_index":1684,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["newitems[index",{"_index":1679,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["newline",{"_index":778,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["newopacity",{"_index":1334,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["next",{"_index":930,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["ng",{"_index":1142,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{}}}],["ng5",{"_index":2594,"title":{},"body":{"dependencies.html":{}}}],["ngafterviewinit",{"_index":1539,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["ngmodule",{"_index":35,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{}}}],["ngonchanges",{"_index":571,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["ngonchanges(changes",{"_index":604,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["ngondestroy",{"_index":451,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["ngoninit",{"_index":1102,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{}}}],["ngx",{"_index":39,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"dependencies.html":{}}}],["ngx_google_analytics_settings_token",{"_index":982,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["ngx_window",{"_index":983,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["ngxgoogleanalyticsmodule",{"_index":38,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["ngxgoogleanalyticsmodule.forroot",{"_index":79,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["ngxs",{"_index":840,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"dependencies.html":{}}}],["ngxs/logger",{"_index":2545,"title":{},"body":{"dependencies.html":{}}}],["ngxs/storage",{"_index":2548,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":845,"title":{},"body":{"injectables/GlobalConfigState.html":{},"components/StoreDebugComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"dependencies.html":{}}}],["ngxsimmutabledatarepository",{"_index":802,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["nih",{"_index":2681,"title":{},"body":{"index.html":{}}}],["node",{"_index":172,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":944,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["nodeclick",{"_index":1932,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodeclickevent",{"_index":1897,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodedrag",{"_index":1931,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodedragevent",{"_index":1898,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodehoverstart",{"_index":1933,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodehoverstop",{"_index":1934,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodejs",{"_index":1579,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["nodes",{"_index":1402,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["none",{"_index":1357,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["noninfringement",{"_index":2724,"title":{},"body":{"license.html":{}}}],["nonnullable",{"_index":889,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{}}}],["nonnullable[0",{"_index":129,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["normal",{"_index":1596,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["normalize",{"_index":619,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalize(range",{"_index":684,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["normalized",{"_index":596,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["normalizes",{"_index":538,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["note",{"_index":671,"title":{},"body":{"components/DecoratedTextComponent.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["notice",{"_index":2293,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":2050,"title":{},"body":{"changelog.html":{}}}],["null",{"_index":63,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/functions.html":{}}}],["nulls.ts",{"_index":2463,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":165,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["numberdirective",{"_index":720,"title":{"directives/NumberDirective.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["numbers",{"_index":1289,"title":{},"body":{"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{}}}],["numbersonlymodule",{"_index":1298,"title":{"modules/NumbersOnlyModule.html":{}},"body":{"modules/NumbersOnlyModule.html":{},"modules.html":{},"overview.html":{}}}],["numeric",{"_index":2298,"title":{},"body":{"changelog.html":{}}}],["obj",{"_index":868,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/functions.html":{}}}],["obj[key",{"_index":923,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["object",{"_index":544,"title":{},"body":{"interfaces/DecoratedRange.html":{},"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["object.defineproperties(this",{"_index":918,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["object.entries(obj).reduce>((attrs",{"_index":60,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["object.entries(ops",{"_index":661,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["object.entries(this.root",{"_index":1731,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["object.entries(values",{"_index":1734,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["object.keys(config).length",{"_index":422,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["objects",{"_index":682,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["obs",{"_index":859,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["observable",{"_index":112,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"components/InfoButtonComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["observable).pipe",{"_index":337,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["observableinput",{"_index":286,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"components/TextSearchComponent.html":{}}}],["observedvalueof",{"_index":485,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["obtaining",{"_index":2694,"title":{},"body":{"license.html":{}}}],["occured",{"_index":1547,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["occurencedata",{"_index":1536,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["occurencedata(value",{"_index":1534,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["off/on",{"_index":2271,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":2384,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":2658,"title":{},"body":{"index.html":{}}}],["oldvalue",{"_index":1880,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["onchanges",{"_index":561,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["ondestroy",{"_index":462,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["ondialogbuttonclick",{"_index":1004,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["one",{"_index":950,"title":{},"body":{"injectables/GlobalsService.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{},"index.html":{}}}],["oninit",{"_index":1095,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{}}}],["oninputchange",{"_index":1280,"title":{},"body":{"directives/NumberDirective.html":{}}}],["oninputchange(event",{"_index":1290,"title":{},"body":{"directives/NumberDirective.html":{}}}],["onleft",{"_index":1521,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["online",{"_index":2393,"title":{},"body":{"changelog.html":{}}}],["only.directive",{"_index":1303,"title":{},"body":{"modules/NumbersOnlyModule.html":{}}}],["only.directive.ts",{"_index":1277,"title":{},"body":{"directives/NumberDirective.html":{},"coverage.html":{}}}],["only.directive.ts:23",{"_index":1286,"title":{},"body":{"directives/NumberDirective.html":{}}}],["only.directive.ts:9",{"_index":1284,"title":{},"body":{"directives/NumberDirective.html":{}}}],["only.module.ts",{"_index":1302,"title":{},"body":{"modules/NumbersOnlyModule.html":{}}}],["only/numbers",{"_index":1276,"title":{},"body":{"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"coverage.html":{}}}],["onright",{"_index":1522,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["ontological",{"_index":2444,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":2339,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":2035,"title":{},"body":{"changelog.html":{}}}],["ontologyterms",{"_index":143,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["ontologytreemodel",{"_index":98,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["op",{"_index":611,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["op.index",{"_index":651,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["op.removed.includes(item",{"_index":670,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["opacities",{"_index":2277,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":705,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["opacitychange",{"_index":1318,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["opacityreset",{"_index":1319,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["opacityslidercomponent",{"_index":704,"title":{"components/OpacitySliderComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["opacityslidermodule",{"_index":1361,"title":{"modules/OpacitySliderModule.html":{}},"body":{"modules/OpacitySliderModule.html":{},"modules.html":{},"overview.html":{}}}],["openapi",{"_index":2101,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/angular",{"_index":109,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["openapi/js",{"_index":2669,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":2671,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":2670,"title":{},"body":{"index.html":{}}}],["opening",{"_index":1038,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["opens",{"_index":1019,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["operation",{"_index":614,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["operations",{"_index":590,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["operator",{"_index":1621,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["operatorfunction",{"_index":1627,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["ops",{"_index":656,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["ops[index",{"_index":658,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["opt",{"_index":1814,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["optimization",{"_index":2217,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":2376,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":2253,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":331,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["optional",{"_index":29,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optioncache",{"_index":803,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["optiondisplay",{"_index":1753,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["optiondisplay(option",{"_index":1765,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["optionid",{"_index":1754,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["optionid(_index",{"_index":1767,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["options",{"_index":30,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.gatoken",{"_index":80,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["optionselected",{"_index":333,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["opts",{"_index":1636,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["ordered",{"_index":588,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["organ",{"_index":708,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["organ(s",{"_index":1583,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["organ.disabled",{"_index":1498,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["organinfo",{"_index":1371,"title":{"interfaces/OrganInfo.html":{}},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organiri",{"_index":214,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["organlist",{"_index":1514,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["organs",{"_index":1384,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["organs/anatomical",{"_index":2279,"title":{},"body":{"changelog.html":{}}}],["organschanged",{"_index":1518,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["organselectorcomponent",{"_index":707,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["organselectormodule",{"_index":1609,"title":{"modules/OrganSelectorModule.html":{}},"body":{"modules/OrganSelectorModule.html":{},"modules.html":{},"overview.html":{}}}],["orthographic",{"_index":2181,"title":{},"body":{"changelog.html":{}}}],["ot2od026671",{"_index":2683,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":921,"title":{},"body":{"injectables/GlobalsService.html":{},"interfaces/OrganInfo.html":{},"license.html":{}}}],["out",{"_index":12,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"interfaces/Segment.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"license.html":{},"overview.html":{}}}],["outdated",{"_index":941,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["outline",{"_index":1777,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["output",{"_index":281,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["outputs",{"_index":1317,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{}}}],["ovary",{"_index":1440,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["over",{"_index":2305,"title":{},"body":{"changelog.html":{}}}],["overlapping",{"_index":577,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["overlay",{"_index":1094,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["overlays",{"_index":2435,"title":{},"body":{"changelog.html":{}}}],["overridden",{"_index":872,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["overview",{"_index":2739,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":132,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["package",{"_index":2058,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["padding",{"_index":1056,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{}}}],["pages",{"_index":2141,"title":{},"body":{"changelog.html":{}}}],["pair",{"_index":1728,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["paired",{"_index":1385,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["pairs",{"_index":1726,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["pancreas",{"_index":1445,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":2242,"title":{},"body":{"changelog.html":{}}}],["panel",{"_index":738,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/PanelData.html":{},"changelog.html":{}}}],["panelclass",{"_index":1041,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["panelcontent",{"_index":753,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["paneldata",{"_index":747,"title":{"interfaces/PanelData.html":{}},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"coverage.html":{}}}],["panels",{"_index":770,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["param",{"_index":341,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":131,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["parent",{"_index":2134,"title":{},"body":{"changelog.html":{}}}],["parse",{"_index":768,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["parseint(itemlist.nativeelement.style.left",{"_index":1560,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["parseint(newopacity",{"_index":1346,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["parsemarkdown",{"_index":1082,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["parsemarkdown(data",{"_index":773,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["parser",{"_index":2554,"title":{},"body":{"dependencies.html":{}}}],["partial",{"_index":270,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{}}}],["partials",{"_index":680,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["particular",{"_index":2722,"title":{},"body":{"license.html":{}}}],["partly",{"_index":2264,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":2195,"title":{},"body":{"changelog.html":{}}}],["past",{"_index":1554,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["patchconfig",{"_index":807,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["patchconfig(config",{"_index":827,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["path",{"_index":820,"title":{},"body":{"injectables/GlobalConfigState.html":{},"dependencies.html":{}}}],["path.length}:${path.join",{"_index":862,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["pelvis",{"_index":1449,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["performance",{"_index":2062,"title":{},"body":{"changelog.html":{}}}],["performs",{"_index":1956,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["permission",{"_index":2688,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2708,"title":{},"body":{"license.html":{}}}],["person",{"_index":2693,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2709,"title":{},"body":{"license.html":{}}}],["piece",{"_index":621,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["pipe",{"_index":222,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["placeholder",{"_index":316,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["placement",{"_index":2341,"title":{},"body":{"changelog.html":{}}}],["placenta",{"_index":1452,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["places",{"_index":943,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["player",{"_index":1116,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"dependencies.html":{}}}],["pluck",{"_index":849,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["pluck(...(path",{"_index":860,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["pluck(...keys",{"_index":1646,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["pluck(...path",{"_index":855,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["pluckunique",{"_index":1620,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pluckunique(...props",{"_index":1641,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["pluckunique(k1",{"_index":1637,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["pluckuniqueoptions",{"_index":1617,"title":{"interfaces/PluckUniqueOptions.html":{}},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["plugin",{"_index":2546,"title":{},"body":{"dependencies.html":{}}}],["pointer",{"_index":1061,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["points",{"_index":1254,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["points.join('_",{"_index":1255,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["policy",{"_index":954,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["popup",{"_index":718,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["popup.component",{"_index":1867,"title":{},"body":{"modules/TrackingPopupModule.html":{}}}],["popup.component.html",{"_index":1804,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.scss",{"_index":1803,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts",{"_index":1802,"title":{},"body":{"components/TrackingPopupComponent.html":{},"coverage.html":{}}}],["popup.component.ts:13",{"_index":1811,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:15",{"_index":1822,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:19",{"_index":1810,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:22",{"_index":1820,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:26",{"_index":1812,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:31",{"_index":1817,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:36",{"_index":1815,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.module.ts",{"_index":1866,"title":{},"body":{"modules/TrackingPopupModule.html":{}}}],["popup/tracking",{"_index":1801,"title":{},"body":{"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"coverage.html":{}}}],["portal",{"_index":2113,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["portal's",{"_index":2368,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":2716,"title":{},"body":{"license.html":{}}}],["position",{"_index":1156,"title":{},"body":{"components/InfoDialogComponent.html":{},"modules/MousePositionTrackerModule.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["positive",{"_index":546,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["possible",{"_index":2322,"title":{},"body":{"changelog.html":{}}}],["precedence",{"_index":580,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["preferences",{"_index":2166,"title":{},"body":{"changelog.html":{}}}],["prefix/suffix",{"_index":1798,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["preparation",{"_index":2418,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":2433,"title":{},"body":{"changelog.html":{}}}],["pretty",{"_index":936,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["prevent",{"_index":1035,"title":{},"body":{"components/InfoButtonComponent.html":{},"changelog.html":{}}}],["prevents",{"_index":1553,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["preview",{"_index":2178,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":2284,"title":{},"body":{"changelog.html":{}}}],["previously",{"_index":2091,"title":{},"body":{"changelog.html":{}}}],["prevopacity",{"_index":1312,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["private",{"_index":180,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["process",{"_index":2404,"title":{},"body":{"changelog.html":{}}}],["processed",{"_index":2359,"title":{},"body":{"changelog.html":{}}}],["processing",{"_index":752,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"changelog.html":{}}}],["produces",{"_index":2639,"title":{},"body":{"miscellaneous/functions.html":{}}}],["production",{"_index":2071,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":2052,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":998,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["projectname",{"_index":51,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["projects",{"_index":2645,"title":{},"body":{"index.html":{}}}],["projects/.../analytics.module.ts",{"_index":2624,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../api",{"_index":2620,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../consent.service.ts",{"_index":2743,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../data",{"_index":2744,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../decorated",{"_index":2626,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../filter",{"_index":2621,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../flatten.ts",{"_index":2622,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../globals.service.ts",{"_index":2745,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../inner",{"_index":2625,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../local",{"_index":2750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../mouse",{"_index":2628,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../organ",{"_index":2748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../pluck",{"_index":2627,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../public",{"_index":2751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../store",{"_index":2746,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../text",{"_index":2749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../tracking.state.ts",{"_index":2623,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/ccf",{"_index":16,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":351,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["properly",{"_index":1267,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["properties",{"_index":86,"title":{},"body":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["propertykey",{"_index":825,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["props",{"_index":1635,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["props[props.length",{"_index":1642,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["prostate",{"_index":1455,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["protected",{"_index":375,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["provide",{"_index":72,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/GlobalsService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":346,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":175,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/PanelData.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":18,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{}}}],["providertoken",{"_index":1200,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["providing",{"_index":324,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["public",{"_index":1098,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["publish",{"_index":2702,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":2056,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":2723,"title":{},"body":{"license.html":{}}}],["push",{"_index":643,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["pushed",{"_index":2232,"title":{},"body":{"changelog.html":{}}}],["px",{"_index":1529,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["pxratio",{"_index":1965,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["python",{"_index":2054,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["qs",{"_index":2599,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":2372,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":2116,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":1391,"title":{},"body":{"interfaces/OrganInfo.html":{},"dependencies.html":{}}}],["query",{"_index":2442,"title":{},"body":{"changelog.html":{}}}],["quickly",{"_index":2352,"title":{},"body":{"changelog.html":{}}}],["r",{"_index":819,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["r\\n\\r\\n",{"_index":781,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["radius",{"_index":1054,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["range",{"_index":164,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["range.classes",{"_index":550,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["range.start",{"_index":687,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["range.styles",{"_index":551,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["range.ts",{"_index":524,"title":{},"body":{"interfaces/DecoratedRange.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["range[0",{"_index":169,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["range[1",{"_index":171,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["ranges",{"_index":560,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["rangetominmax",{"_index":163,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rangetominmax(range",{"_index":2629,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rawspatialscenenode",{"_index":108,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["rawvalue",{"_index":1229,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["rawvalue.trim().tolowercase",{"_index":1231,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["rc.1",{"_index":2378,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":2601,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":2524,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":2550,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":2603,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":1789,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["read",{"_index":756,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"interfaces/XYZTriplet.html":{}}}],["readable",{"_index":2605,"title":{},"body":{"dependencies.html":{}}}],["reading",{"_index":772,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["readonly",{"_index":181,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["real",{"_index":2392,"title":{},"body":{"changelog.html":{}}}],["really",{"_index":931,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["recalculate",{"_index":607,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["receives",{"_index":325,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["record",{"_index":58,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/functions.html":{}}}],["recreatebodyui",{"_index":2003,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rectify",{"_index":2097,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":2222,"title":{},"body":{"changelog.html":{}}}],["reduction",{"_index":2023,"title":{},"body":{"changelog.html":{}}}],["reexport",{"_index":620,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"modules/TextSearchModule.html":{}}}],["reference",{"_index":1009,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["refernced",{"_index":2133,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":1351,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["regions",{"_index":2436,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":2564,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":2092,"title":{},"body":{"changelog.html":{}}}],["registration",{"_index":2124,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["registrations",{"_index":2211,"title":{},"body":{"changelog.html":{}}}],["regular",{"_index":1580,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["related",{"_index":2257,"title":{},"body":{"changelog.html":{}}}],["relative",{"_index":1157,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["release",{"_index":2086,"title":{},"body":{"changelog.html":{}}}],["releaseproxy",{"_index":409,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["reliability",{"_index":2295,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":2174,"title":{},"body":{"changelog.html":{}}}],["remote",{"_index":410,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["remoteapiendpoint",{"_index":92,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["removable",{"_index":926,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["remove",{"_index":626,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{}}}],["remove(key",{"_index":903,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["removed",{"_index":627,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["removeitem",{"_index":1655,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["removeitem(index",{"_index":1670,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["removes",{"_index":905,"title":{},"body":{"injectables/GlobalsService.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["render",{"_index":1975,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rendering",{"_index":1950,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["replaced",{"_index":2641,"title":{},"body":{"miscellaneous/functions.html":{}}}],["replaysubject",{"_index":463,"title":{},"body":{"injectables/ConsentService.html":{}}}],["replaysubject(1",{"_index":461,"title":{},"body":{"injectables/ConsentService.html":{}}}],["repository",{"_index":2643,"title":{},"body":{"index.html":{}}}],["represents",{"_index":623,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["requestmethod",{"_index":130,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/typealiases.html":{}}}],["requestparams",{"_index":218,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["requestparams['token",{"_index":227,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["required",{"_index":1958,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["rescinded",{"_index":465,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/typealiases.html":{}}}],["reset",{"_index":11,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"overview.html":{}}}],["resetopacity",{"_index":1314,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["resets",{"_index":2196,"title":{},"body":{"changelog.html":{}}}],["resetting",{"_index":1329,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["resize",{"_index":1538,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resizesensor",{"_index":1389,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resizesensor(carouselcontainer.nativeelement",{"_index":1541,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resizing",{"_index":1532,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resolve",{"_index":542,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["resolved",{"_index":618,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["resolveindex",{"_index":2478,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["resolveindex(index",{"_index":547,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["resolveindex(range.end",{"_index":549,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["resolveindex(range.start",{"_index":548,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["resolves",{"_index":537,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["respond",{"_index":2193,"title":{},"body":{"changelog.html":{}}}],["responsetype",{"_index":764,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["responsively",{"_index":1605,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["rest",{"_index":504,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["restricting",{"_index":1278,"title":{},"body":{"directives/NumberDirective.html":{}}}],["restriction",{"_index":2698,"title":{},"body":{"license.html":{}}}],["result",{"_index":81,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.concat(range.classes",{"_index":688,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["results",{"_index":83,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":59,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":31,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["reviver",{"_index":217,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["reviver(data",{"_index":230,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["rgb",{"_index":2582,"title":{},"body":{"dependencies.html":{}}}],["rgba(0",{"_index":1849,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["rgba(255",{"_index":1840,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["rhs",{"_index":1629,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["right",{"_index":1172,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["rights",{"_index":2700,"title":{},"body":{"license.html":{}}}],["root",{"_index":176,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/PanelData.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["rotates",{"_index":2176,"title":{},"body":{"changelog.html":{}}}],["rotation",{"_index":1909,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotation(value",{"_index":1911,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotationchange",{"_index":1930,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotationx",{"_index":1913,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotationx(value",{"_index":1915,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["round",{"_index":2282,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":2299,"title":{},"body":{"changelog.html":{}}}],["ru/common",{"_index":2510,"title":{},"body":{"dependencies.html":{}}}],["ru/common/typings",{"_index":838,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["rui",{"_index":1015,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["rui_locations.jsonld",{"_index":2045,"title":{},"body":{"changelog.html":{}}}],["running",{"_index":940,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["rxjs",{"_index":114,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":119,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["s.unsubscribe",{"_index":2008,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["safe",{"_index":675,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["same",{"_index":295,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["sample",{"_index":2447,"title":{},"body":{"changelog.html":{}}}],["samples",{"_index":2224,"title":{},"body":{"changelog.html":{}}}],["saveconsent",{"_index":1208,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["saveconsent(value",{"_index":1212,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["saver",{"_index":2570,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":2408,"title":{},"body":{"changelog.html":{}}}],["scene",{"_index":1905,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["scene(nodes",{"_index":1907,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["scheduled",{"_index":2237,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":2410,"title":{},"body":{"changelog.html":{}}}],["schemes",{"_index":2373,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":2677,"title":{},"body":{"index.html":{}}}],["screen",{"_index":1093,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["scroll(dir",{"_index":1567,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["scrolled",{"_index":1557,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["scrolling",{"_index":1523,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["scrolls",{"_index":1552,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["search",{"_index":301,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["search'},{'name",{"_index":715,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["search.component",{"_index":1797,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["search.component.html",{"_index":307,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["search.component.scss",{"_index":309,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["search.component.ts",{"_index":261,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["search.component.ts:100",{"_index":1756,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:120",{"_index":1764,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:139",{"_index":1766,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:150",{"_index":1768,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:48",{"_index":1763,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:53",{"_index":1759,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:59",{"_index":1760,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:63",{"_index":1774,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:70",{"_index":1758,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:76",{"_index":1757,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:81",{"_index":1762,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:86",{"_index":1761,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:91",{"_index":1770,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:96",{"_index":1771,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.module.ts",{"_index":1787,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["search/text",{"_index":260,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searches",{"_index":1651,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["section",{"_index":2212,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":953,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["see",{"_index":2150,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["segment",{"_index":585,"title":{"interfaces/Segment.html":{}},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{}}}],["segment.text",{"_index":690,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["segments",{"_index":565,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["segments.push(this.makedecoratedsegment",{"_index":649,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["select",{"_index":2155,"title":{},"body":{"changelog.html":{}}}],["selected",{"_index":332,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["selecteditems",{"_index":1680,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["selectedorgan",{"_index":1589,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selectedorgans",{"_index":1516,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selecting",{"_index":1500,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["selection",{"_index":1663,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["selectionchanged",{"_index":1658,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["selections",{"_index":1510,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selector",{"_index":305,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["selector'},{'name",{"_index":709,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["selector.component",{"_index":1614,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["selector.component.html",{"_index":1502,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selector.component.scss",{"_index":1503,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selector.component.ts",{"_index":1374,"title":{},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector.module.ts",{"_index":1613,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["selector/organ",{"_index":1373,"title":{},"body":{"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectorgan(organ",{"_index":1584,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selects",{"_index":2426,"title":{},"body":{"changelog.html":{}}}],["selecttoken",{"_index":1194,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["selecttoken(config",{"_index":1197,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["self",{"_index":947,"title":{},"body":{"injectables/GlobalsService.html":{},"components/InfoDialogComponent.html":{}}}],["sell",{"_index":2706,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":2432,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":751,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["sennet",{"_index":2066,"title":{},"body":{"changelog.html":{}}}],["sensor",{"_index":1533,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["sent",{"_index":771,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["server",{"_index":2413,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":1011,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["set",{"_index":68,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/ConsentService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["set(key",{"_index":906,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["setallowtelemetry",{"_index":1870,"title":{},"body":{"injectables/TrackingState.html":{}}}],["setallowtelemetry(allowtelemetry",{"_index":1871,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["setconfig",{"_index":808,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["setconfig(config",{"_index":830,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["setconsent",{"_index":452,"title":{},"body":{"injectables/ConsentService.html":{}}}],["setconsent(value",{"_index":457,"title":{},"body":{"injectables/ConsentService.html":{}}}],["setinterval",{"_index":1569,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["setleftright(val",{"_index":1608,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["sets",{"_index":908,"title":{},"body":{"injectables/GlobalsService.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{}}}],["settimeout",{"_index":1137,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["setting",{"_index":1308,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["settings",{"_index":956,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["setup",{"_index":1957,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["setupbodyui",{"_index":1976,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["setvalue(val",{"_index":1773,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["setwidth",{"_index":1606,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["sex",{"_index":145,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["sexes",{"_index":1380,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["shadow",{"_index":1845,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["shall",{"_index":2713,"title":{},"body":{"license.html":{}}}],["shared",{"_index":2169,"title":{},"body":{"changelog.html":{}}}],["shared/analytics",{"_index":1825,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["shared/analytics/src/lib/analytics.module.ts",{"_index":17,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["shared/analytics/src/lib/analytics.module.ts:68",{"_index":25,"title":{},"body":{"modules/AnalyticsModule.html":{}}}],["shared/analytics/src/lib/consent.service.ts",{"_index":448,"title":{},"body":{"injectables/ConsentService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["shared/analytics/src/lib/consent.service.ts:10",{"_index":460,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:12",{"_index":454,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:18",{"_index":455,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:22",{"_index":458,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:29",{"_index":459,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/google",{"_index":969,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"coverage.html":{}}}],["shared/analytics/src/lib/local",{"_index":1206,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/rxjs",{"_index":847,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/analytics/mouse",{"_index":1237,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["shared/src/lib/analytics/tracking.state.ts",{"_index":1869,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/analytics/tracking.state.ts:29",{"_index":1873,"title":{},"body":{"injectables/TrackingState.html":{}}}],["shared/src/lib/components/body",{"_index":359,"title":{},"body":{"modules/BodyUiModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["shared/src/lib/components/decorated",{"_index":523,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["shared/src/lib/components/info/info",{"_index":731,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"interfaces/PanelData.html":{},"coverage.html":{}}}],["shared/src/lib/components/opacity",{"_index":1304,"title":{},"body":{"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"coverage.html":{}}}],["shared/src/lib/components/organ",{"_index":1372,"title":{},"body":{"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/components/spatial",{"_index":1648,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"coverage.html":{}}}],["shared/src/lib/components/store",{"_index":1705,"title":{},"body":{"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["shared/src/lib/components/text",{"_index":259,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/components/tracking",{"_index":1800,"title":{},"body":{"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"coverage.html":{}}}],["shared/src/lib/config/global",{"_index":800,"title":{},"body":{"injectables/GlobalConfigState.html":{},"coverage.html":{}}}],["shared/src/lib/directives/numbers",{"_index":1275,"title":{},"body":{"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"coverage.html":{}}}],["shared/src/lib/services/data",{"_index":88,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/services/globals/globals.service.ts",{"_index":864,"title":{},"body":{"injectables/GlobalsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:109",{"_index":869,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:22",{"_index":912,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:45",{"_index":895,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:58",{"_index":884,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:59",{"_index":888,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:60",{"_index":891,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:61",{"_index":892,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:63",{"_index":893,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:76",{"_index":907,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:77",{"_index":909,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:79",{"_index":910,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:93",{"_index":904,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["sharereplay",{"_index":415,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["sharereplay(1",{"_index":429,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["shifing",{"_index":644,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["shift",{"_index":1528,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["shift(dir",{"_index":1558,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["shortest",{"_index":2577,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":265,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["showbutton",{"_index":1806,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["showbutton(button",{"_index":1813,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["showing",{"_index":2358,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":2367,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":2119,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":1378,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["sides",{"_index":2332,"title":{},"body":{"changelog.html":{}}}],["signal",{"_index":1338,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["significant",{"_index":2198,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":1708,"title":{},"body":{"components/StoreDebugComponent.html":{},"changelog.html":{}}}],["simplechanges",{"_index":605,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["simplifies",{"_index":2206,"title":{},"body":{"changelog.html":{}}}],["simultaneously",{"_index":322,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["single",{"_index":263,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["sites",{"_index":2126,"title":{},"body":{"changelog.html":{}}}],["sizable",{"_index":2294,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":1065,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{}}}],["skin",{"_index":1396,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["slider",{"_index":1307,"title":{},"body":{"components/OpacitySliderComponent.html":{},"dependencies.html":{}}}],["slider'},{'name",{"_index":706,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["slider.component",{"_index":1366,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["slider.component.html",{"_index":1311,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.scss",{"_index":1310,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts",{"_index":1306,"title":{},"body":{"components/OpacitySliderComponent.html":{},"coverage.html":{}}}],["slider.component.ts:17",{"_index":1331,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:22",{"_index":1322,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:27",{"_index":1323,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:32",{"_index":1325,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:37",{"_index":1330,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:42",{"_index":1327,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:44",{"_index":1342,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:46",{"_index":1335,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:54",{"_index":1336,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:63",{"_index":1333,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:71",{"_index":1339,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:82",{"_index":1337,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.module.ts",{"_index":1365,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["slider/opacity",{"_index":1305,"title":{},"body":{"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"coverage.html":{}}}],["slightly",{"_index":2095,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":2219,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":1460,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["smaller",{"_index":1595,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["software",{"_index":2647,"title":{},"body":{"index.html":{},"license.html":{}}}],["solved",{"_index":2289,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":2350,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":2060,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":2215,"title":{},"body":{"changelog.html":{}}}],["sort",{"_index":666,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["sort((a",{"_index":1493,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["sort((i1",{"_index":662,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["source",{"_index":14,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["source.pipe",{"_index":1645,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["source.service.ts",{"_index":510,"title":{},"body":{"injectables/DataSourceService.html":{},"coverage.html":{}}}],["source.service.ts:12",{"_index":514,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:13",{"_index":518,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:14",{"_index":515,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:15",{"_index":517,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:16",{"_index":513,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:17",{"_index":519,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:19",{"_index":522,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:20",{"_index":511,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:21",{"_index":516,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:22",{"_index":512,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:23",{"_index":521,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:24",{"_index":520,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.ts",{"_index":472,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["source.ts:10",{"_index":480,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:11",{"_index":477,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:12",{"_index":479,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:13",{"_index":475,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:14",{"_index":481,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:16",{"_index":484,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:17",{"_index":473,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:18",{"_index":478,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:19",{"_index":474,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:20",{"_index":483,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:21",{"_index":482,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:36",{"_index":791,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:40",{"_index":795,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:44",{"_index":792,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:48",{"_index":794,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:52",{"_index":790,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:56",{"_index":796,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:60",{"_index":799,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:64",{"_index":788,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:68",{"_index":793,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:72",{"_index":789,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:76",{"_index":798,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:80",{"_index":797,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:84",{"_index":787,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:9",{"_index":476,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:91",{"_index":729,"title":{},"body":{"classes/DelegateDataSource.html":{}}}],["source/api",{"_index":89,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["source/ccf",{"_index":369,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["source/data",{"_index":471,"title":{},"body":{"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["source/injector",{"_index":1192,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"coverage.html":{}}}],["sources",{"_index":2160,"title":{},"body":{"changelog.html":{}}}],["space",{"_index":1150,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["sparc",{"_index":2210,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":2523,"title":{},"body":{"dependencies.html":{}}}],["spatial",{"_index":150,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["spatialentity",{"_index":99,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["spatialscenenode",{"_index":100,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["spatialscenenodereviver",{"_index":211,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spatialscenenodereviver(nodes",{"_index":2630,"title":{},"body":{"miscellaneous/functions.html":{}}}],["spatialsearch",{"_index":107,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["spatialsearchlistcomponent",{"_index":710,"title":{"components/SpatialSearchListComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spatialsearchlistitem",{"_index":1675,"title":{"interfaces/SpatialSearchListItem.html":{}},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"coverage.html":{}}}],["spatialsearchlistmodule",{"_index":1693,"title":{"modules/SpatialSearchListModule.html":{}},"body":{"modules/SpatialSearchListModule.html":{},"modules.html":{},"overview.html":{}}}],["spec",{"_index":2102,"title":{},"body":{"changelog.html":{}}}],["spec.yaml",{"_index":2668,"title":{},"body":{"index.html":{}}}],["specific",{"_index":898,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["specification",{"_index":2667,"title":{},"body":{"index.html":{}}}],["specified",{"_index":525,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["speed",{"_index":2020,"title":{},"body":{"changelog.html":{}}}],["spinal",{"_index":1467,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["spinning",{"_index":2411,"title":{},"body":{"changelog.html":{}}}],["spleen",{"_index":1470,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["split",{"_index":758,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["split.includes('\\n\\n",{"_index":779,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["split.length",{"_index":777,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["split.split(newline",{"_index":783,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["splitbyheadertag",{"_index":775,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["sprint",{"_index":2240,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":1379,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":589,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stackop",{"_index":592,"title":{"interfaces/StackOp.html":{}},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{}}}],["stackops",{"_index":636,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stackops.shift",{"_index":647,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stackops[0].index",{"_index":645,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stage",{"_index":1902,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["staging",{"_index":2072,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["staging.herokuapp.com",{"_index":2666,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":2285,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":2336,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":2415,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":2650,"title":{},"body":{"index.html":{}}}],["start",{"_index":530,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["started",{"_index":2010,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["starts",{"_index":640,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["startup",{"_index":2205,"title":{},"body":{"changelog.html":{}}}],["startwith",{"_index":288,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["state",{"_index":844,"title":{},"body":{"injectables/GlobalConfigState.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/StoreDebugComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["state[0",{"_index":1742,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["statement",{"_index":674,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["statements",{"_index":2456,"title":{},"body":{"coverage.html":{}}}],["staterepository",{"_index":839,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["states",{"_index":1730,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["states.map(([key",{"_index":1733,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["stateswithdata",{"_index":1735,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["statevalues",{"_index":1732,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["statevalues.filter(([_key",{"_index":1736,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["static",{"_index":20,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/OrganInfo.html":{}}}],["stay",{"_index":2453,"title":{},"body":{"changelog.html":{}}}],["step",{"_index":1530,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["still",{"_index":2227,"title":{},"body":{"changelog.html":{}}}],["stops",{"_index":1572,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["stopscroll",{"_index":1573,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["storage",{"_index":45,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["store",{"_index":713,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["store.subscribe(root",{"_index":1738,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["stored",{"_index":1218,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["storedebugcomponent",{"_index":712,"title":{"components/StoreDebugComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["storedebugmodule",{"_index":1746,"title":{"modules/StoreDebugModule.html":{}},"body":{"modules/StoreDebugModule.html":{},"modules.html":{},"overview.html":{}}}],["stories",{"_index":2407,"title":{},"body":{"changelog.html":{}}}],["stream",{"_index":2606,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["streaming",{"_index":2604,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":49,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":734,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/PanelData.html":{},"changelog.html":{}}}],["structures",{"_index":2243,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":527,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":308,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["styling",{"_index":271,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["sub",{"_index":1069,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/StoreDebugComponent.html":{}}}],["subclass",{"_index":873,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["subject",{"_index":113,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["sublicense",{"_index":2704,"title":{},"body":{"license.html":{}}}],["submit",{"_index":1807,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["submit(entry",{"_index":1816,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["subscribe((data",{"_index":765,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["subscription",{"_index":980,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["subscriptions",{"_index":971,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["substantial",{"_index":2715,"title":{},"body":{"license.html":{}}}],["subtitle",{"_index":1162,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["suffix",{"_index":1779,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["suggestion",{"_index":264,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["suggestions",{"_index":294,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":417,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["support",{"_index":2029,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":1376,"title":{},"body":{"interfaces/OrganInfo.html":{},"modules.html":{}}}],["swiper",{"_index":2610,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":1232,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["switched",{"_index":2302,"title":{},"body":{"changelog.html":{}}}],["switchmap",{"_index":116,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["switchmap(config",{"_index":424,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["switchmap(impl",{"_index":506,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["switchmap(this.getoptions",{"_index":338,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["symbol",{"_index":914,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{}}}],["sync",{"_index":2177,"title":{},"body":{"changelog.html":{}}}],["sync.service",{"_index":43,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["sync.service.ts",{"_index":970,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sync.service.ts:10",{"_index":981,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:11",{"_index":975,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:15",{"_index":1214,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:16",{"_index":1209,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:25",{"_index":976,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:29",{"_index":978,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:32",{"_index":1211,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:36",{"_index":1210,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:52",{"_index":1213,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["t",{"_index":134,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":2509,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":2084,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2508,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1128,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["tag.src",{"_index":1130,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["tagging",{"_index":2334,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":760,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["take",{"_index":117,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["take(1",{"_index":223,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["takes",{"_index":579,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["tap",{"_index":118,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["tap(([endpoint",{"_index":224,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["target",{"_index":1920,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["target(value",{"_index":1922,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["technologies",{"_index":149,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{}}}],["technology",{"_index":2275,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":1885,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"changelog.html":{}}}],["temp",{"_index":1348,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["template",{"_index":554,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["templateurl",{"_index":306,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["test",{"_index":933,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["testing",{"_index":881,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["tests",{"_index":896,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["text",{"_index":300,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{}}}],["text'},{'name",{"_index":699,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["text.component",{"_index":728,"title":{},"body":{"modules/DecoratedTextModule.html":{}}}],["text.component.html",{"_index":564,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text.component.scss",{"_index":563,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text.component.ts",{"_index":557,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{}}}],["text.component.ts:124",{"_index":587,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:145",{"_index":612,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:158",{"_index":593,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:173",{"_index":602,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:184",{"_index":599,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:41",{"_index":582,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:46",{"_index":581,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:52",{"_index":575,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:57",{"_index":616,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:64",{"_index":606,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:76",{"_index":583,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.length",{"_index":655,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text.module",{"_index":1796,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["text.module.ts",{"_index":727,"title":{},"body":{"modules/DecoratedTextModule.html":{}}}],["text.slice(lastindex",{"_index":650,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text/decorated",{"_index":291,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["textsearchcomponent",{"_index":312,"title":{"components/TextSearchComponent.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["textsearchmodule",{"_index":1780,"title":{"modules/TextSearchModule.html":{}},"body":{"modules/TextSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["theme",{"_index":2067,"title":{},"body":{"changelog.html":{}}}],["themes",{"_index":2065,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":2063,"title":{},"body":{"changelog.html":{}}}],["thick",{"_index":1488,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["this._bounds",{"_index":1924,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._camera",{"_index":1928,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._interactive",{"_index":1937,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._occurencedata",{"_index":1535,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this._rotation",{"_index":1910,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._rotationx",{"_index":1914,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._scene",{"_index":1906,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._target",{"_index":1921,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._zoom",{"_index":1917,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.api.aggregateresults(params",{"_index":204,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.celltypetermoccurences(params",{"_index":208,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.celltypetreemodel(params",{"_index":197,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.dbstatus(params",{"_index":187,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.ontologytermoccurences(params",{"_index":206,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.ontologytreemodel(params",{"_index":195,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.providernames(params",{"_index":190,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.referenceorgans(params",{"_index":199,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.referenceorganscene(params",{"_index":213,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.scene(params",{"_index":210,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.technologynames(params",{"_index":192,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.tissueblocks(params",{"_index":202,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.bodycanvas",{"_index":1963,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodycanvas.nativeelement",{"_index":1964,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui",{"_index":1939,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.finalize",{"_index":2005,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodeclick$.subscribe((event",{"_index":1996,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodedrag$.subscribe((event",{"_index":1994,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodehoverstart$.subscribe((event",{"_index":1998,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodehoverstop$.subscribe((event",{"_index":2000,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.scenerotation$.subscribe((rotation",{"_index":1992,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.setscene(this.scene",{"_index":1988,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setrotation(value",{"_index":1912,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setrotationx(value",{"_index":1916,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setscene(nodes",{"_index":1908,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.settarget(value",{"_index":1923,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setzoom(value",{"_index":1919,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bounds",{"_index":1989,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.camera",{"_index":1982,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.clearsubscriptions",{"_index":2004,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.config$.pipe",{"_index":854,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.connectdatabase(manager",{"_index":426,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.consent",{"_index":468,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.complete",{"_index":467,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.next(this.consent",{"_index":466,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.next(value",{"_index":469,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentservice.consent",{"_index":1826,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.consentservice.setconsent(entry",{"_index":1833,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.container",{"_index":1827,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.controller.setvalue(val",{"_index":319,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.controller.value",{"_index":317,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.controller.valuechanges",{"_index":336,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.createdatabase(config",{"_index":425,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.createsegments",{"_index":629,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.createstackops(decorations",{"_index":637,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.createworker(config",{"_index":441,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.ctx.patchstate",{"_index":1883,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["this.data.preclose",{"_index":1832,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.database",{"_index":419,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.defaultmaxoptions",{"_index":352,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.dialog.open(infodialogcomponent",{"_index":1039,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.dialog.opendialogs.length",{"_index":1034,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.dialogref.close",{"_index":1138,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.dismiss",{"_index":1834,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.displayerrors",{"_index":1550,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.documentationcontents",{"_index":1126,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.dorequest",{"_index":194,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.dorequest(params",{"_index":186,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.el.nativeelement.value",{"_index":1294,"title":{},"body":{"directives/NumberDirective.html":{}}}],["this.findglobalobject",{"_index":917,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["this.forwardcall('getaggregateresults",{"_index":498,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getcelltypetermoccurences",{"_index":500,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getcelltypetreemodel",{"_index":495,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getdatabasestatus",{"_index":491,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getdatasettechnologynames",{"_index":493,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getontologytermoccurences",{"_index":499,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getontologytreemodel",{"_index":494,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getprovidernames",{"_index":492,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getreferenceorgans",{"_index":496,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getreferenceorganscene",{"_index":502,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getscene",{"_index":501,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('gettissueblockresults",{"_index":497,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.getnormalizeddecorations",{"_index":633,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.getpathkey(path",{"_index":856,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.http.get(url",{"_index":763,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["this.impl",{"_index":418,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.impl$.pipe",{"_index":505,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.infobuttonservice.updatedata(this.documentationurl",{"_index":1049,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.infotitle",{"_index":1051,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.initialized.emit",{"_index":2002,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.interactive",{"_index":1981,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.itemremoved.emit(item",{"_index":1685,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["this.items",{"_index":1678,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["this.launchinfodialog(data",{"_index":1033,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.makeundecoratedsegment(text",{"_index":632,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.multiselect",{"_index":1585,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.nodeclick.emit(event",{"_index":1997,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.nodedrag.emit(event",{"_index":1995,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.nodehoverstart.emit(event",{"_index":1999,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.nodehoverstop.emit(event",{"_index":2001,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.onleft",{"_index":1561,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.onright",{"_index":1562,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.opacity",{"_index":1345,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.opacitychange.emit(this.opacity",{"_index":1347,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.opacityreset.emit",{"_index":1350,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.optioncache.get(key",{"_index":858,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.optioncache.has(key",{"_index":857,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.optioncache.set(key",{"_index":861,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.organlist.length",{"_index":1598,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.organschanged.emit(this.selectedorgans",{"_index":1591,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.panelcontent.next(panelcontent",{"_index":767,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["this.parsemarkdown(data",{"_index":766,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["this.patchstate(config",{"_index":853,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.prevopacity",{"_index":1344,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.recreatebodyui",{"_index":1940,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.root",{"_index":1739,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["this.rotationchange.next(rotation",{"_index":1993,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.saveconsent(consent",{"_index":1228,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.scene?.length",{"_index":1987,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.segments",{"_index":628,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.selectedorgans",{"_index":1586,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.concat([organ",{"_index":1590,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.filter((selectedorgan",{"_index":1588,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.includes(organ",{"_index":1587,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.length",{"_index":1551,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectionchanged.emit(selecteditems",{"_index":1683,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["this.selecttoken(config",{"_index":1203,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["this.sensor",{"_index":1540,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.sensor.detach",{"_index":1544,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.set",{"_index":1542,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.setconsent('not",{"_index":470,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.setleftright(val",{"_index":1565,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.setstate(config",{"_index":852,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.setupbodyui",{"_index":1960,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.shift(dir",{"_index":1570,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.state$.pipe(filternulls",{"_index":851,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.step",{"_index":1563,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.storage",{"_index":1222,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.storage?.getitem?.(this.key",{"_index":1230,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.storage?.setitem?.(this.key",{"_index":1235,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.subscriptions",{"_index":1991,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.subscriptions.add",{"_index":1226,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.subscriptions.add(consentservice.consentchange.subscribe",{"_index":988,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.subscriptions.add(infobuttonservice.panelcontent.subscribe(data",{"_index":1031,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.subscriptions.add(sub",{"_index":1741,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["this.subscriptions.foreach(s",{"_index":2007,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.subscriptions.unsubscribe",{"_index":990,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"components/StoreDebugComponent.html":{}}}],["this.timeouthandler",{"_index":1568,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.togglegoogleanalytics(consent",{"_index":989,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.token",{"_index":987,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.updatestack(stack",{"_index":646,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.valuechange",{"_index":344,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.videoid",{"_index":1050,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.visibilitytoggle.emit",{"_index":1349,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.visible",{"_index":1343,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.window",{"_index":991,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.window[`ga",{"_index":992,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.zoom",{"_index":1974,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.zoomtobounds(this.bounds",{"_index":1990,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.zoomtobounds(value",{"_index":1926,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["throttletime",{"_index":1242,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["throttletime(1000",{"_index":1259,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["through",{"_index":2351,"title":{},"body":{"changelog.html":{}}}],["throws",{"_index":924,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["thumbnails",{"_index":2252,"title":{},"body":{"changelog.html":{}}}],["thymus",{"_index":1473,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["tied",{"_index":2255,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":2360,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":296,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["timeouthandler",{"_index":1525,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["timeouts",{"_index":2032,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":2024,"title":{},"body":{"changelog.html":{}}}],["tissue",{"_index":2040,"title":{},"body":{"changelog.html":{}}}],["tissueblockresult",{"_index":101,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["tissues",{"_index":2093,"title":{},"body":{"changelog.html":{}}}],["title",{"_index":742,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/PanelData.html":{}}}],["tmc",{"_index":2443,"title":{},"body":{"changelog.html":{}}}],["toattributes",{"_index":70,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["toattributes(obj",{"_index":57,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["toggle",{"_index":1340,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["togglegoogleanalytics",{"_index":972,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["togglegoogleanalytics(disabled",{"_index":977,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["togglevisibility",{"_index":1315,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["token",{"_index":137,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":2286,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":1163,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["tort",{"_index":2733,"title":{},"body":{"license.html":{}}}],["tracker.module.ts",{"_index":1238,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tracking",{"_index":717,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["tracking/telemetry",{"_index":2187,"title":{},"body":{"changelog.html":{}}}],["trackingcode",{"_index":986,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["trackingpopupcomponent",{"_index":716,"title":{"components/TrackingPopupComponent.html":{}},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"coverage.html":{},"overview.html":{}}}],["trackingpopupmodule",{"_index":1862,"title":{"modules/TrackingPopupModule.html":{}},"body":{"modules/TrackingPopupModule.html":{},"modules.html":{},"overview.html":{}}}],["trackingstate",{"_index":1868,"title":{"injectables/TrackingState.html":{}},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{}}}],["trackingstatemodel",{"_index":1874,"title":{"interfaces/TrackingStateModel.html":{}},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{}}}],["trackmouseposition",{"_index":2473,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["trackmouseposition((document",{"_index":1273,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["trackmouseposition(el",{"_index":1243,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["transformmatrix",{"_index":173,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["transition",{"_index":1058,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["transparency",{"_index":2287,"title":{},"body":{"changelog.html":{}}}],["travisci",{"_index":2306,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":556,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["true",{"_index":74,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GlobalsService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":949,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{},"changelog.html":{}}}],["ts",{"_index":121,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"dependencies.html":{}}}],["tslib",{"_index":2613,"title":{},"body":{"dependencies.html":{}}}],["tube",{"_index":1413,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["tuned",{"_index":2454,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":679,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["turned",{"_index":2258,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":2256,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":2157,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":2371,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":28,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2741,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":1266,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["typeerror",{"_index":925,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["typeof",{"_index":915,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/PluckUniqueOptions.html":{}}}],["types",{"_index":1271,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["types/lru",{"_index":2551,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":961,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":2422,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":1581,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["u",{"_index":135,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["uberon",{"_index":1381,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["ufl",{"_index":2251,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":1899,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["ui'},{'name",{"_index":698,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["ui.component",{"_index":367,"title":{},"body":{"modules/BodyUiModule.html":{}}}],["ui.component.html",{"_index":1903,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["ui.component.scss",{"_index":1904,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["ui.component.ts",{"_index":1893,"title":{},"body":{"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["ui.module.ts",{"_index":361,"title":{},"body":{"modules/BodyUiModule.html":{}}}],["ui.netlify.app",{"_index":2653,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":2663,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":2660,"title":{},"body":{"index.html":{}}}],["ui/body",{"_index":360,"title":{},"body":{"modules/BodyUiModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["ui/organ",{"_index":2662,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":2661,"title":{},"body":{"index.html":{}}}],["ul",{"_index":1167,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["undefined",{"_index":76,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/OrganInfo.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":1217,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["understand",{"_index":1838,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["unique",{"_index":272,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{}}}],["unique.ts",{"_index":1619,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["university",{"_index":2679,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":162,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["unless",{"_index":939,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["unnecessary",{"_index":2173,"title":{},"body":{"changelog.html":{}}}],["unsafe",{"_index":1829,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["unselect",{"_index":2221,"title":{},"body":{"changelog.html":{}}}],["unsetconsent",{"_index":453,"title":{},"body":{"injectables/ConsentService.html":{}}}],["unsubscribable",{"_index":413,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["unsubscribe",{"_index":437,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/InfoButtonComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["until",{"_index":2260,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":1669,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{}}}],["up",{"_index":1716,"title":{},"body":{"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["update",{"_index":761,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"changelog.html":{}}}],["updated",{"_index":1326,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["updatedata",{"_index":1083,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["updatedata(url",{"_index":762,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["updateitemselection",{"_index":1656,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["updateitemselection(index",{"_index":1672,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["updates",{"_index":1026,"title":{},"body":{"components/InfoButtonComponent.html":{},"directives/NumberDirective.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"changelog.html":{}}}],["updatestack",{"_index":572,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["updatestack(stack",{"_index":610,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["upgraded",{"_index":2356,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":2427,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":2192,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":2283,"title":{},"body":{"changelog.html":{}}}],["ureter",{"_index":1476,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["urinary",{"_index":1481,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":1088,"title":{},"body":{"injectables/InfoButtonService.html":{},"interfaces/OrganInfo.html":{}}}],["usage",{"_index":1836,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["use",{"_index":2154,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["used",{"_index":545,"title":{},"body":{"interfaces/DecoratedRange.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["usefactory",{"_index":75,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["useful",{"_index":879,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["user",{"_index":2014,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["user/os",{"_index":2165,"title":{},"body":{"changelog.html":{}}}],["users",{"_index":2438,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":2180,"title":{},"body":{"changelog.html":{}}}],["using",{"_index":414,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["uterus",{"_index":1485,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["utilities",{"_index":2170,"title":{},"body":{"changelog.html":{}}}],["utility",{"_index":160,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["uuid",{"_index":2614,"title":{},"body":{"dependencies.html":{}}}],["v1.1",{"_index":2085,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":2270,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":2088,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":2078,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":2036,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":1559,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{}}}],["valid",{"_index":595,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["value",{"_index":62,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/ConsentService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value(val",{"_index":318,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["value.tolowercase",{"_index":1879,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["valuechange",{"_index":330,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["values",{"_index":69,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/DecoratedTextComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/functions.html":{}}}],["values.length",{"_index":1737,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["var",{"_index":696,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["variable",{"_index":1170,"title":{},"body":{"components/InfoDialogComponent.html":{},"coverage.html":{}}}],["variables",{"_index":2747,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vasculature",{"_index":1490,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":2104,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["vertical",{"_index":1067,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["very",{"_index":2347,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":2031,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":1176,"title":{},"body":{"components/InfoDialogComponent.html":{},"changelog.html":{}}}],["videoid",{"_index":749,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/PanelData.html":{}}}],["view",{"_index":2179,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":1388,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["viewchild('bodycanvas",{"_index":1954,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["viewchild('carouselcontainer",{"_index":1504,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewchild('itemcontainer",{"_index":1508,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewchild('itemlist",{"_index":1506,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewed",{"_index":1501,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewer",{"_index":2245,"title":{},"body":{"changelog.html":{}}}],["views",{"_index":2182,"title":{},"body":{"changelog.html":{}}}],["visibility",{"_index":1341,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["visibilitytoggle",{"_index":1320,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["visible",{"_index":1316,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["visual",{"_index":2450,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":2213,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":2357,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":456,"title":{},"body":{"injectables/ConsentService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["vs",{"_index":2153,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":2449,"title":{},"body":{"changelog.html":{}}}],["warming",{"_index":2030,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":2381,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":2719,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":2717,"title":{},"body":{"license.html":{}}}],["web",{"_index":948,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["webcomponent",{"_index":2152,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":2552,"title":{},"body":{"dependencies.html":{}}}],["webpages",{"_index":2110,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":2648,"title":{},"body":{"index.html":{}}}],["week",{"_index":2455,"title":{},"body":{"changelog.html":{}}}],["weight",{"_index":1165,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/SpatialSearchListComponent.html":{}}}],["well",{"_index":1633,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["whether",{"_index":897,"title":{},"body":{"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"license.html":{}}}],["whole",{"_index":2452,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":1044,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["window",{"_index":945,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/XYZTriplet.html":{}}}],["window.devicepixelratio",{"_index":1966,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["within",{"_index":2249,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":603,"title":{},"body":{"components/DecoratedTextComponent.html":{},"changelog.html":{},"license.html":{}}}],["worker",{"_index":440,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/GlobalsService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["worker.terminate",{"_index":444,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["workerccfdatabasedatasourceservice",{"_index":438,"title":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["workflows",{"_index":2308,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":2096,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":2326,"title":{},"body":{"changelog.html":{}}}],["wrap",{"_index":411,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["wrap(worker",{"_index":442,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["wrapper",{"_index":1052,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["writable",{"_index":920,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["x",{"_index":1894,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["xyztriplet",{"_index":1892,"title":{"interfaces/XYZTriplet.html":{}},"body":{"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["y",{"_index":1895,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["yes",{"_index":242,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["youtube",{"_index":1115,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["youtubeplayermodule",{"_index":1188,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["z",{"_index":1856,"title":{},"body":{"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["zero",{"_index":641,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["zone.js",{"_index":2616,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":10,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"interfaces/XYZTriplet.html":{},"overview.html":{}}}],["zoom(value",{"_index":1918,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["zoomtobounds(bounds",{"_index":1961,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AnalyticsModule.html":{"url":"modules/AnalyticsModule.html","title":"module - AnalyticsModule","body":"\n                   \n\n\n\n\n    Modules\n    AnalyticsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AnalyticsModule\n\n\n\ncluster_AnalyticsModule_providers\n\n\n\n\nConsentService\n\nConsentService\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAnalyticsModule -->\n\nConsentService->AnalyticsModule\n\n\n\n\n\nGoogleAnalyticsSyncService\n\nGoogleAnalyticsSyncService\n\nAnalyticsModule -->\n\nGoogleAnalyticsSyncService->AnalyticsModule\n\n\n\n\n\nLocalStorageSyncService\n\nLocalStorageSyncService\n\nAnalyticsModule -->\n\nLocalStorageSyncService->AnalyticsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/analytics.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConsentService\n                        \n                        \n                            GoogleAnalyticsSyncService\n                        \n                        \n                            LocalStorageSyncService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: AnalyticsOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/analytics.module.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AnalyticsOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { IGoogleAnalyticsCommand, NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\nimport { ConsentService } from './consent.service';\nimport { GoogleAnalyticsSyncService } from './google-analytics-sync.service';\nimport { LocalStorageSyncService } from './local-storage-sync.service';\n\n\nexport interface AnalyticsOptions {\n  gaToken: string;\n\n  appName?: string;\n  projectName?: string;\n\n  developmentMode?: boolean;\n}\n\n\nconst EAGERLY_LOADED_SERVICES = [\n  ConsentService,\n  GoogleAnalyticsSyncService,\n  LocalStorageSyncService,\n];\n\n\nfunction toAttributes(obj: Record): Record {\n  return Object.entries(obj).reduce>((attrs, [key, value]) => {\n    if (value != null) {\n      attrs[key] = `${value}`;\n    }\n\n    return attrs;\n  }, {});\n}\n\nfunction initCommands(options: AnalyticsOptions): IGoogleAnalyticsCommand[] {\n  const { appName, projectName, developmentMode } = options;\n\n  return [\n    {\n      command: 'set',\n      values: [toAttributes({\n        appName,\n        projectName,\n        developmentMode\n      })]\n    }\n  ];\n}\n\n\n@NgModule({\n  imports: [\n    NgxGoogleAnalyticsModule\n  ],\n  providers: [\n    ...EAGERLY_LOADED_SERVICES,\n\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: () => () => undefined,\n      deps: EAGERLY_LOADED_SERVICES\n    }\n  ]\n})\nexport class AnalyticsModule {\n  static forRoot(options: AnalyticsOptions): ModuleWithProviders {\n    const { providers = [] } = NgxGoogleAnalyticsModule.forRoot(\n      options.gaToken,\n      initCommands(options)\n    );\n\n    return { ngModule: AnalyticsModule, providers };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnalyticsOptions.html":{"url":"interfaces/AnalyticsOptions.html","title":"interface - AnalyticsOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnalyticsOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/analytics.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            appName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            developmentMode\n                                        \n                                \n                                \n                                        \n                                            gaToken\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            projectName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        developmentMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        developmentMode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gaToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gaToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { IGoogleAnalyticsCommand, NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\nimport { ConsentService } from './consent.service';\nimport { GoogleAnalyticsSyncService } from './google-analytics-sync.service';\nimport { LocalStorageSyncService } from './local-storage-sync.service';\n\n\nexport interface AnalyticsOptions {\n  gaToken: string;\n\n  appName?: string;\n  projectName?: string;\n\n  developmentMode?: boolean;\n}\n\n\nconst EAGERLY_LOADED_SERVICES = [\n  ConsentService,\n  GoogleAnalyticsSyncService,\n  LocalStorageSyncService,\n];\n\n\nfunction toAttributes(obj: Record): Record {\n  return Object.entries(obj).reduce>((attrs, [key, value]) => {\n    if (value != null) {\n      attrs[key] = `${value}`;\n    }\n\n    return attrs;\n  }, {});\n}\n\nfunction initCommands(options: AnalyticsOptions): IGoogleAnalyticsCommand[] {\n  const { appName, projectName, developmentMode } = options;\n\n  return [\n    {\n      command: 'set',\n      values: [toAttributes({\n        appName,\n        projectName,\n        developmentMode\n      })]\n    }\n  ];\n}\n\n\n@NgModule({\n  imports: [\n    NgxGoogleAnalyticsModule\n  ],\n  providers: [\n    ...EAGERLY_LOADED_SERVICES,\n\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: () => () => undefined,\n      deps: EAGERLY_LOADED_SERVICES\n    }\n  ]\n})\nexport class AnalyticsModule {\n  static forRoot(options: AnalyticsOptions): ModuleWithProviders {\n    const { providers = [] } = NgxGoogleAnalyticsModule.forRoot(\n      options.gaToken,\n      initCommands(options)\n    );\n\n    return { ngModule: AnalyticsModule, providers };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiEndpointDataSourceOptions.html":{"url":"interfaces/ApiEndpointDataSourceOptions.html","title":"interface - ApiEndpointDataSourceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiEndpointDataSourceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hubmapToken\n                                        \n                                \n                                \n                                        \n                                            remoteApiEndpoint\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hubmapToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        remoteApiEndpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        remoteApiEndpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSearch, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n  spatial?: SpatialSearch[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return combineLatest([\n      globalConfig.getOption('remoteApiEndpoint'),\n      globalConfig.getOption('hubmapToken')\n    ]).pipe(\n      take(1),\n      tap(([endpoint, token]) => {\n        api.configuration.basePath = endpoint;\n        if (token) {\n          requestParams['token'] = token;\n        }\n      }),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiEndpointDataSourceService.html":{"url":"injectables/ApiEndpointDataSourceService.html","title":"injectable - ApiEndpointDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiEndpointDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                doRequest\n                            \n                            \n                                    Private\n                                doRequest\n                            \n                            \n                                    Private\n                                doRequest\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: DefaultService, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:96\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                    DefaultService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        doRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    doRequest(method: RequestMethod, filter?: Filter | undefined, params?: P)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:190\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                RequestMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter | undefined\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            P\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        doRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    doRequest(method: RequestMethod, filter: Filter | undefined, params: P | undefined, reviver: DataReviver)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:195\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        P\n                        U\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                RequestMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            P | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviver\n                                    \n                                                DataReviver\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        doRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    doRequest(method: RequestMethod, filter: Filter | undefined, params?: P, reviver?: DataReviver)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:201\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                RequestMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            P\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    reviver\n                                    \n                                                DataReviver\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSearch, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n  spatial?: SpatialSearch[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return combineLatest([\n      globalConfig.getOption('remoteApiEndpoint'),\n      globalConfig.getOption('hubmapToken')\n    ]).pipe(\n      take(1),\n      tap(([endpoint, token]) => {\n        api.configuration.basePath = endpoint;\n        if (token) {\n          requestParams['token'] = token;\n        }\n      }),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoCompleteOption.html":{"url":"interfaces/AutoCompleteOption.html","title":"interface - AutoCompleteOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AutoCompleteOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n        \n\n\n            \n                Description\n            \n            \n                A single suggestion to show in autocomplete\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            decorations\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        decorations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decorations:         Partial[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional styling of the label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    A unique id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The displayed label\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Inject, InjectionToken, Input, Output,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { bind as Bind } from 'bind-decorator';\nimport { from, Observable, ObservableInput } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, switchMap, take } from 'rxjs/operators';\n\nimport { DecoratedRange } from '../decorated-text/decorated-range';\n\n\n/** A single suggestion to show in autocomplete  */\nexport interface AutoCompleteOption {\n  /** A unique id */\n  id: unknown;\n  /** The displayed label */\n  label: string;\n  /** Optional styling of the label */\n  decorations?: Partial[];\n}\n\n/**\n * Token to provide a default for the maximum number of\n * autocomplete suggestions to show at the same time.\n */\nexport const DEFAULT_MAX_OPTIONS = new InjectionToken(\n  'Maximum number of autocomplete options displayed',\n  {\n    providedIn: 'root',\n    factory(): number {\n      return 10;\n    }\n  }\n);\n\n\n/**\n * A text search bar with optional autocompletion functionality.\n */\n@Component({\n  selector: 'ccf-text-search',\n  templateUrl: './text-search.component.html',\n  styleUrls: ['./text-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TextSearchComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-text-search';\n\n  /**\n   * Placeholder text for the search bar\n   */\n  @Input() placeholder = 'Search...';\n\n  /**\n   * The text to show on the search bar\n   */\n  @Input()\n  get value(): string {\n    return this.controller.value as string;\n  }\n\n  set value(val: string) {\n    this.controller.setValue(val, { emitEvent: false });\n  }\n\n  /**\n   * Maximum number of autocomplete suggestions to show simultaneously\n   */\n  @Input() maxOptions?: number;\n\n  /**\n   * Function providing the autocomplete suggestions.\n   * Receives the latest search bar text and the maximum of suggestions to provide.\n   */\n  @Input() autoCompleter?: (search: string, max: number) => ObservableInput;\n\n  /**\n   * Emits when the search bar text changes\n   */\n  @Output() readonly valueChange: Observable;\n\n  /**\n   * Emits when an autocomplete option has been selected\n   */\n  @Output() readonly optionSelected = new EventEmitter();\n\n  /**\n   * Form controller for search bar\n   */\n  readonly controller = new FormControl();\n\n  /**\n   * Emits the latest autocomplete suggestions\n   */\n  readonly options = (this.controller.valueChanges as Observable).pipe(\n    startWith(''),\n    distinctUntilChanged(),\n    switchMap(this.getOptions)\n  );\n\n  /**\n   * Creates an instance of text search component.\n   *\n   * @param defaultMaxOptions The default value for `maxOptions`\n   */\n  constructor(\n    @Inject(DEFAULT_MAX_OPTIONS) private readonly defaultMaxOptions: number\n  ) {\n    this.valueChange = this.controller.valueChanges;\n  }\n\n  /**\n   * Fetches the latest autocomplete suggestions for the provided search text.\n   *\n   * @param search The search text to find suggestions for\n   * @returns The found suggestions\n   */\n  @Bind\n  private async getOptions(search: string): Promise {\n    const { autoCompleter, maxOptions = this.defaultMaxOptions } = this;\n    if (!autoCompleter || maxOptions  array.length \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BodyUiModule.html":{"url":"modules/BodyUiModule.html","title":"module - BodyUiModule","body":"\n                   \n\n\n\n\n    Modules\n    BodyUiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BodyUiModule\n\n\n\ncluster_BodyUiModule_declarations\n\n\n\ncluster_BodyUiModule_exports\n\n\n\n\nBodyUiComponent\n\nBodyUiComponent\n\n\n\nBodyUiModule\n\nBodyUiModule\n\nBodyUiModule -->\n\nBodyUiComponent->BodyUiModule\n\n\n\n\n\nBodyUiComponent \n\nBodyUiComponent \n\nBodyUiComponent  -->\n\nBodyUiModule->BodyUiComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/body-ui/body-ui.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BodyUiComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BodyUiComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BodyUiComponent } from './body-ui.component';\n\n@NgModule({\n  declarations: [BodyUiComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [BodyUiComponent]\n})\nexport class BodyUiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CCFDatabaseDataSourceBaseService.html":{"url":"injectables/CCFDatabaseDataSourceBaseService.html","title":"injectable - CCFDatabaseDataSourceBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CCFDatabaseDataSourceBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DelegateDataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                database$\n                            \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                connectDatabase\n                            \n                            \n                                    Protected\n                                    Abstract\n                                createDatabase\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        connectDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectDatabase(manager: CCFDatabaseManager, config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    manager\n                                    \n                                                CCFDatabaseManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        createDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDatabase(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CCFDatabaseManager\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        database$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CCFDatabaseDataSourceService.html":{"url":"injectables/CCFDatabaseDataSourceService.html","title":"injectable - CCFDatabaseDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CCFDatabaseDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CCFDatabaseDataSourceBaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                database$\n                            \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createDatabase\n                            \n                            \n                                    Private\n                                    Async\n                                connectDatabase\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDatabase(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CCFDatabaseManager\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        connectDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectDatabase(manager: CCFDatabaseManager, config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    manager\n                                    \n                                                CCFDatabaseManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        database$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         CCFDatabaseDataSourceBaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         CCFDatabaseDataSourceBaseService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CCFDatabaseManager.html":{"url":"interfaces/CCFDatabaseManager.html","title":"interface - CCFDatabaseManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CCFDatabaseManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Unsubscribable\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            database\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        database:     CCFDatabase | Remote\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CCFDatabase | Remote\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsentService.html":{"url":"injectables/ConsentService.html","title":"injectable - ConsentService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/consent.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                consent\n                            \n                            \n                                    Readonly\n                                consentChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                setConsent\n                            \n                            \n                                unsetConsent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConsent\n                        \n                    \n                \n            \n            \n                \nsetConsent(value: Consent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsetConsent\n                        \n                    \n                \n            \n            \n                \nunsetConsent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        consent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Consent\n\n                    \n                \n                \n                    \n                        Default value : 'not-set'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        consentChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n\nexport type Consent = 'not-set' | 'given' | 'rescinded';\n\n\n@Injectable()\nexport class ConsentService implements OnDestroy {\n  consent: Consent = 'not-set';\n\n  readonly consentChange = new ReplaySubject(1);\n\n  constructor() {\n    this.consentChange.next(this.consent);\n  }\n\n  ngOnDestroy(): void {\n    this.consentChange.complete();\n  }\n\n  setConsent(value: Consent): void {\n    if (this.consent !== value) {\n      this.consent = value;\n      this.consentChange.next(value);\n    }\n  }\n\n  unsetConsent(): void {\n    this.setConsent('not-set');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSource.html":{"url":"interfaces/DataSource.html","title":"interface - DataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getAggregateResults\n                                    \n                                \n                                \n                                    \n                                        getCellTypeTermOccurences\n                                    \n                                \n                                \n                                    \n                                        getCellTypeTreeModel\n                                    \n                                \n                                \n                                    \n                                        getDatabaseStatus\n                                    \n                                \n                                \n                                    \n                                        getDatasetTechnologyNames\n                                    \n                                \n                                \n                                    \n                                        getOntologyTermOccurences\n                                    \n                                \n                                \n                                    \n                                        getOntologyTreeModel\n                                    \n                                \n                                \n                                    \n                                        getProviderNames\n                                    \n                                \n                                \n                                    \n                                        getReferenceOrgans\n                                    \n                                \n                                \n                                    \n                                        getReferenceOrganScene\n                                    \n                                \n                                \n                                    \n                                        getScene\n                                    \n                                \n                                \n                                    \n                                        getTissueBlockResults\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult\n} from 'ccf-database';\nimport { Observable, ObservableInput, ObservedValueOf } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n\nexport interface DataSource {\n  getDatabaseStatus(): Observable;\n  getProviderNames(): Observable;\n  getDatasetTechnologyNames(): Observable;\n  getOntologyTreeModel(): Observable;\n  getCellTypeTreeModel(): Observable;\n  getReferenceOrgans(): Observable;\n\n  getTissueBlockResults(filter?: Filter): Observable;\n  getAggregateResults(filter?: Filter): Observable;\n  getOntologyTermOccurences(filter?: Filter): Observable>;\n  getCellTypeTermOccurences(filter?: Filter): Observable>;\n  getScene(filter?: Filter): Observable;\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\nexport type DataSourceLike = {\n  [K in keyof DataSource]: DataSourceLikeMethod;\n};\n\nexport type DataSourceMethod = DataSource[K];\nexport type DataSourceLikeMethod =\n  (...args: Parameters>) => ObservableInput>;\nexport type DataSourceDataType =\n  ObservedValueOf>>;\n\n\nexport abstract class ForwardingDataSource implements DataSource {\n  getDatabaseStatus(): Observable {\n    return this.forwardCall('getDatabaseStatus');\n  }\n\n  getProviderNames(): Observable {\n    return this.forwardCall('getProviderNames');\n  }\n\n  getDatasetTechnologyNames(): Observable {\n    return this.forwardCall('getDatasetTechnologyNames');\n  }\n\n  getOntologyTreeModel(): Observable {\n    return this.forwardCall('getOntologyTreeModel');\n  }\n\n  getCellTypeTreeModel(): Observable {\n    return this.forwardCall('getCellTypeTreeModel');\n  }\n\n  getReferenceOrgans(): Observable {\n    return this.forwardCall('getReferenceOrgans');\n  }\n\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.forwardCall('getTissueBlockResults', filter);\n  }\n\n  getAggregateResults(filter?: Filter): Observable {\n    return this.forwardCall('getAggregateResults', filter);\n  }\n\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getOntologyTermOccurences', filter);\n  }\n\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getCellTypeTermOccurences', filter);\n  }\n\n  getScene(filter?: Filter): Observable {\n    return this.forwardCall('getScene', filter);\n  }\n\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.forwardCall('getReferenceOrganScene', organIri, filter);\n  }\n\n  protected abstract forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable>;\n}\n\n\nexport abstract class DelegateDataSource extends ForwardingDataSource {\n  abstract readonly impl$: Observable;\n\n  protected forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable> {\n    type AnyFunction = (...rest: unknown[]) => ObservableInput;\n\n    return this.impl$.pipe(\n      switchMap(impl => (impl[method] as AnyFunction)(...args))\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataSourceService.html":{"url":"injectables/DataSourceService.html","title":"injectable - DataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getAggregateResults\n                            \n                            \n                                    Abstract\n                                getCellTypeTermOccurences\n                            \n                            \n                                    Abstract\n                                getCellTypeTreeModel\n                            \n                            \n                                    Abstract\n                                getDatabaseStatus\n                            \n                            \n                                    Abstract\n                                getDatasetTechnologyNames\n                            \n                            \n                                    Abstract\n                                getOntologyTermOccurences\n                            \n                            \n                                    Abstract\n                                getOntologyTreeModel\n                            \n                            \n                                    Abstract\n                                getProviderNames\n                            \n                            \n                                    Abstract\n                                getReferenceOrgans\n                            \n                            \n                                    Abstract\n                                getReferenceOrganScene\n                            \n                            \n                                    Abstract\n                                getScene\n                            \n                            \n                                    Abstract\n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProviderNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getScene\n                        \n                    \n                \n            \n            \n                \n                    \n                    getScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { Observable } from 'rxjs';\n\nimport { DataSource } from './data-source';\n\n\n@Injectable()\nexport abstract class DataSourceService implements DataSource {\n  abstract getDatabaseStatus(): Observable;\n  abstract getProviderNames(): Observable;\n  abstract getDatasetTechnologyNames(): Observable;\n  abstract getOntologyTreeModel(): Observable;\n  abstract getCellTypeTreeModel(): Observable;\n  abstract getReferenceOrgans(): Observable;\n\n  abstract getTissueBlockResults(filter?: Filter): Observable;\n  abstract getAggregateResults(filter?: Filter): Observable;\n  abstract getOntologyTermOccurences(filter?: Filter): Observable>;\n  abstract getCellTypeTermOccurences(filter?: Filter): Observable>;\n  abstract getScene(filter?: Filter): Observable;\n  abstract getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DecoratedRange.html":{"url":"interfaces/DecoratedRange.html","title":"interface - DecoratedRange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DecoratedRange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n        \n\n\n            \n                Description\n            \n            \n                A range which should have the specified classes and styles applied\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            end\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                                \n                                        \n                                            styles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Classes to add\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    End index of range (exclusive). Negative indicies are allowed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start index of range (inclusive). Negative indicies are allowed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        styles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        styles:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Styles to set\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DecoratedRange {\n  /** Start index of range (inclusive). Negative indicies are allowed. */\n  start: number;\n  /** End index of range (exclusive). Negative indicies are allowed. */\n  end: number;\n  /** Classes to add */\n  classes: string[];\n  /** Styles to set */\n  styles: Record;\n}\n\n/**\n * Resolves and normalizes an index for indexing into an array of length `length`.\n *\n * @param index The index value to resolve. May be negative indicating an index from end.\n * @param length The length of the object on which this index will be used.\n * @returns A positive index in range [0, length]\n */\nfunction resolveIndex(index: number, length: number): number {\n  if (index >= 0 && index = length) {\n    return length;\n  } else if (index + length , length: number): DecoratedRange {\n  const start = resolveIndex(range.start ?? 0, length);\n  const end = resolveIndex(range.end ?? length, length);\n  const classes = range.classes ?? [];\n  const styles = range.styles ?? {};\n  return { start, end, classes, styles };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DecoratedTextComponent.html":{"url":"components/DecoratedTextComponent.html","title":"component - DecoratedTextComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DecoratedTextComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n\n\n\n    \n        Description\n    \n    \n        Class to display text with additional styling on ranges of the text.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-decorated-text\n            \n\n            \n                styleUrls\n                ./decorated-text.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./decorated-text.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                segments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createSegments\n                            \n                            \n                                    Private\n                                createStackOps\n                            \n                            \n                                    Private\n                                getNormalizedDecorations\n                            \n                            \n                                    Private\n                                makeDecoratedSegment\n                            \n                            \n                                    Private\n                                makeUndecoratedSegment\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Private\n                                updateStack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                decorations\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        decorations\n                    \n                \n                \n                    \n                        Type :         Partial[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:52\n                            \n                        \n                \n                    \n                        Classes and styles to apply to ranges of the text.\nFor overlapping ranges later values takes precedence.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:46\n                            \n                        \n                \n                    \n                        Text to display\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-decorated-text\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-decorated-text'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:41\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createSegments\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSegments()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:76\n                \n            \n\n\n            \n                \n                    Creates an array of decorated text segments based on\nthe latest text and decorations.\n\n\n                    \n                    \n                    \n                        Returns :         Segment[]\n\n                    \n                    \n                        The new segments\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createStackOps\n                        \n                    \n                \n            \n            \n                \n                    \n                    createStackOps(ranges: DecoratedRange[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:124\n                \n            \n\n\n            \n                \n                    Creates an ordered array of stack operations to apply when building segments.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ranges\n                                    \n                                                DecoratedRange[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The decorated ranges to apply\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         StackOp[]\n\n                    \n                    \n                        The array of operations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getNormalizedDecorations\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNormalizedDecorations()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:158\n                \n            \n\n\n            \n                \n                    Normalizes and filters valid decorated ranges.\n\n\n                    \n                    \n                    \n                        Returns :         DecoratedRange[]\n\n                    \n                    \n                        The normalized ranges with properties filled\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeDecoratedSegment\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeDecoratedSegment(text: string, decorations: DecoratedRange[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:184\n                \n            \n\n\n            \n                \n                    Creates a segment with decoration\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text for the segment\n\n                                    \n                                \n                                \n                                    decorations\n                                    \n                                                DecoratedRange[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Decorations for this segment\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Segment\n\n                    \n                    \n                        A decorated segment\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeUndecoratedSegment\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeUndecoratedSegment(text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:173\n                \n            \n\n\n            \n                \n                    Creates a segment without any decoration\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text for the segment\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Segment\n\n                    \n                    \n                        A segment without any decoration\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:64\n                \n            \n\n\n            \n                \n                    Apply changes and recalculate cached values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Instance properties that have changed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateStack\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStack(stack: DecoratedRange[], op: StackOp)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:145\n                \n            \n\n\n            \n                \n                    Applies the stack changes specified by the stack operation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    stack\n                                    \n                                                DecoratedRange[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current stack\n\n                                    \n                                \n                                \n                                    op\n                                    \n                                                StackOp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The operation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DecoratedRange[]\n\n                    \n                    \n                        The new stack\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-decorated-text'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:41\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        segments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Segment[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:57\n                        \n                    \n\n            \n                \n                    Computed segments of text with decorations resolved.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { DecoratedRange, normalize } from './decorated-range';\n\n\n// Reexport DecoratedRange\nexport { DecoratedRange };\n\n/** A segment of text with additional classes and styles */\ninterface Segment {\n  /** The piece of text to display */\n  text: string;\n  /** Classes to add to the text container */\n  classes: string[];\n  /** Styles to set on the text container */\n  styles: Record;\n}\n\n/** Represents an operation to apply to the stack when building segments */\ninterface StackOp {\n  /** Text index at which the changes takes effect */\n  index: number;\n  /** Decorations to add */\n  added: DecoratedRange[];\n  /** Decorations to remove */\n  removed: DecoratedRange[];\n}\n\n\n/**\n * Class to display text with additional styling on ranges of the text.\n */\n@Component({\n  selector: 'ccf-decorated-text',\n  templateUrl: './decorated-text.component.html',\n  styleUrls: ['./decorated-text.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DecoratedTextComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-decorated-text';\n\n  /**\n   * Text to display\n   */\n  @Input() text: string;\n\n  /**\n   * Classes and styles to apply to ranges of the text.\n   * For overlapping ranges later values takes precedence.\n   */\n  @Input() decorations?: Partial[];\n\n  /**\n   * Computed segments of text with decorations resolved.\n   */\n  segments: Segment[] = [];\n\n  /**\n   * Apply changes and recalculate cached values.\n   *\n   * @param changes Instance properties that have changed\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('text' in changes || 'decorations' in changes) {\n      this.segments = this.createSegments();\n    }\n  }\n\n  /**\n   * Creates an array of decorated text segments based on\n   * the latest text and decorations.\n   *\n   * @returns The new segments\n   */\n  private createSegments(): Segment[] {\n    const { text } = this;\n    if (!text) { // No styling can be applied to empty text fields\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const decorations = this.getNormalizedDecorations();\n    if (decorations.length === 0) { // No styling available\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const stackOps = this.createStackOps(decorations);\n    const segments: Segment[] = [];\n    let stack: DecoratedRange[] = [];\n    let lastIndex = 0;\n\n    // If the first op starts at index zero apply stack changes\n    // but don't push a segment by shifing out the first op\n    if (stackOps[0].index === 0) {\n      stack = this.updateStack(stack, stackOps.shift() as StackOp);\n    }\n\n    // Build segments based on the stack operations\n    for (const op of stackOps) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex, op.index), stack\n      ));\n\n      lastIndex = op.index;\n      stack = this.updateStack(stack, op);\n    }\n\n    // Push the last segment if not already done\n    if (lastIndex !== text.length) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex), stack\n      ));\n    }\n\n    return segments;\n  }\n\n  /**\n   * Creates an ordered array of stack operations to apply when building segments.\n   *\n   * @param ranges The decorated ranges to apply\n   * @returns The array of operations\n   */\n  private createStackOps(ranges: DecoratedRange[]): StackOp[] {\n    const ops: Record = {};\n    const getOp = (index: number) => (ops[index] ??= { index, added: [], removed: [] });\n\n    for (const range of ranges) {\n      getOp(range.start).added.push(range);\n      getOp(range.end).removed.push(range);\n    }\n\n    return Object.entries(ops)\n      .sort((i1, i2) => +i1[0] - +i2[0]) // Sort by index\n      .map(entry => entry[1]);\n  }\n\n  /**\n   * Applies the stack changes specified by the stack operation.\n   *\n   * @param stack The current stack\n   * @param op The operation\n   * @returns The new stack\n   */\n  private updateStack(stack: DecoratedRange[], op: StackOp): DecoratedRange[] {\n    return stack\n      .filter(item => !op.removed.includes(item))\n      // Note - A new array is created by the above filter statement\n      // so it is safe to modify it with concat\n      .concat(op.added);\n  }\n\n  /**\n   * Normalizes and filters valid decorated ranges.\n   *\n   * @returns The normalized ranges with properties filled\n   */\n  private getNormalizedDecorations(): DecoratedRange[] {\n    const { decorations = [], text: { length } } = this;\n    return decorations\n      // Turn partials into full objects\n      .map(range => normalize(range, length))\n      // Remove empty and out of bounds ranges\n      .filter(range => range.start (\n      (result, range) => result.concat(range.classes),\n      []\n    );\n    const styles = decorations.reduce(\n      (result, range) => ({ ...result, ...range.styles }),\n      {}\n    );\n\n    return { text, classes, styles };\n  }\n}\n\n    \n\n    \n        \n  {{ segment.text }}\n\n\n    \n\n    \n                \n                    ./decorated-text.component.scss\n                \n                :host {\n  display: flex;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ segment.text }}'\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'DecoratedTextComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DecoratedTextModule.html":{"url":"modules/DecoratedTextModule.html","title":"module - DecoratedTextModule","body":"\n                   \n\n\n\n\n    Modules\n    DecoratedTextModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DecoratedTextModule\n\n\n\ncluster_DecoratedTextModule_declarations\n\n\n\ncluster_DecoratedTextModule_exports\n\n\n\n\nDecoratedTextComponent\n\nDecoratedTextComponent\n\n\n\nDecoratedTextModule\n\nDecoratedTextModule\n\nDecoratedTextModule -->\n\nDecoratedTextComponent->DecoratedTextModule\n\n\n\n\n\nDecoratedTextComponent \n\nDecoratedTextComponent \n\nDecoratedTextComponent  -->\n\nDecoratedTextModule->DecoratedTextComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-text.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DecoratedTextComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DecoratedTextComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DecoratedTextComponent } from './decorated-text.component';\n\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [DecoratedTextComponent],\n  exports: [DecoratedTextComponent]\n})\nexport class DecoratedTextModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultParams.html":{"url":"interfaces/DefaultParams.html","title":"interface - DefaultParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DefaultParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSearch, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n  spatial?: SpatialSearch[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return combineLatest([\n      globalConfig.getOption('remoteApiEndpoint'),\n      globalConfig.getOption('hubmapToken')\n    ]).pipe(\n      take(1),\n      tap(([endpoint, token]) => {\n        api.configuration.basePath = endpoint;\n        if (token) {\n          requestParams['token'] = token;\n        }\n      }),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DelegateDataSource.html":{"url":"classes/DelegateDataSource.html","title":"class - DelegateDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DelegateDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ForwardingDataSource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:91\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult\n} from 'ccf-database';\nimport { Observable, ObservableInput, ObservedValueOf } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n\nexport interface DataSource {\n  getDatabaseStatus(): Observable;\n  getProviderNames(): Observable;\n  getDatasetTechnologyNames(): Observable;\n  getOntologyTreeModel(): Observable;\n  getCellTypeTreeModel(): Observable;\n  getReferenceOrgans(): Observable;\n\n  getTissueBlockResults(filter?: Filter): Observable;\n  getAggregateResults(filter?: Filter): Observable;\n  getOntologyTermOccurences(filter?: Filter): Observable>;\n  getCellTypeTermOccurences(filter?: Filter): Observable>;\n  getScene(filter?: Filter): Observable;\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\nexport type DataSourceLike = {\n  [K in keyof DataSource]: DataSourceLikeMethod;\n};\n\nexport type DataSourceMethod = DataSource[K];\nexport type DataSourceLikeMethod =\n  (...args: Parameters>) => ObservableInput>;\nexport type DataSourceDataType =\n  ObservedValueOf>>;\n\n\nexport abstract class ForwardingDataSource implements DataSource {\n  getDatabaseStatus(): Observable {\n    return this.forwardCall('getDatabaseStatus');\n  }\n\n  getProviderNames(): Observable {\n    return this.forwardCall('getProviderNames');\n  }\n\n  getDatasetTechnologyNames(): Observable {\n    return this.forwardCall('getDatasetTechnologyNames');\n  }\n\n  getOntologyTreeModel(): Observable {\n    return this.forwardCall('getOntologyTreeModel');\n  }\n\n  getCellTypeTreeModel(): Observable {\n    return this.forwardCall('getCellTypeTreeModel');\n  }\n\n  getReferenceOrgans(): Observable {\n    return this.forwardCall('getReferenceOrgans');\n  }\n\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.forwardCall('getTissueBlockResults', filter);\n  }\n\n  getAggregateResults(filter?: Filter): Observable {\n    return this.forwardCall('getAggregateResults', filter);\n  }\n\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getOntologyTermOccurences', filter);\n  }\n\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getCellTypeTermOccurences', filter);\n  }\n\n  getScene(filter?: Filter): Observable {\n    return this.forwardCall('getScene', filter);\n  }\n\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.forwardCall('getReferenceOrganScene', organIri, filter);\n  }\n\n  protected abstract forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable>;\n}\n\n\nexport abstract class DelegateDataSource extends ForwardingDataSource {\n  abstract readonly impl$: Observable;\n\n  protected forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable> {\n    type AnyFunction = (...rest: unknown[]) => ObservableInput;\n\n    return this.impl$.pipe(\n      switchMap(impl => (impl[method] as AnyFunction)(...args))\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DocumentationContent.html":{"url":"interfaces/DocumentationContent.html","title":"interface - DocumentationContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DocumentationContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The structure to define how each documentation panel\nshould look like in the info dialog\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Content inside the panel\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Title of the panel\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * The structure to define how each documentation panel\n * should look like in the info dialog\n */\n\nexport interface DocumentationContent {\n  /** Title of the panel */\n  title: string;\n\n  /** Content inside the panel */\n  content: string;\n}\n\nexport interface PanelData {\n  content: DocumentationContent[];\n  infoTitle: string;\n  videoID: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfoButtonService {\n\n  /** Subject to send the documentation data to the component when its done processing */\n  panelContent: BehaviorSubject = new BehaviorSubject({ content: [], infoTitle: '', videoID: '' });\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Read the markdown file to split it by h1 tags and update the panel title and videoID.\n   */\n  updateData(url: string, videoID: string, infoTitle: string): void {\n    this.http.get(url, { responseType: 'text' }).subscribe((data: string) => {\n      const panelContent: PanelData = { content: this.parseMarkdown(data), infoTitle: infoTitle, videoID: videoID };\n      this.panelContent.next(panelContent);\n    });\n  }\n\n  /**\n   * Function to parse the markdown file and convert to\n   * documentation content used by the info-dialog panels\n   *\n   * @param data Markdown file sent as a string after reading it\n   * @returns array of DocumentationContent\n   */\n  parseMarkdown(data: string): DocumentationContent[] {\n    const markdownContent: DocumentationContent[] = [];\n    const splitByHeaderTag: string[] = data.split('# ');\n    for (const split of splitByHeaderTag) {\n      if (split.length) {\n        const newLine = split.includes('\\n\\n') ? '\\n\\n' : '\\r\\n\\r\\n';\n        const headerAndContent: string[] = split.split(newLine);\n        markdownContent.push({\n          title: headerAndContent[0],\n          content: headerAndContent.splice(1).join(newLine)\n        });\n      }\n    }\n    return markdownContent;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterParams.html":{"url":"interfaces/FilterParams.html","title":"interface - FilterParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            age\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ageRange\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bmi\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bmiRange\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cellTypeTerms\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ontologyTerms\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            providers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            spatial\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            technologies\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:     MinMax\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MinMax\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ageRange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ageRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bmi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bmi:     MinMax\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MinMax\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bmiRange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bmiRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cellTypeTerms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cellTypeTerms:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyTerms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyTerms:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        providers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"both\" | \"female\" | \"male\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"both\" | \"female\" | \"male\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spatial\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spatial:     SpatialSearch[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpatialSearch[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        technologies:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSearch, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n  spatial?: SpatialSearch[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return combineLatest([\n      globalConfig.getOption('remoteApiEndpoint'),\n      globalConfig.getOption('hubmapToken')\n    ]).pipe(\n      take(1),\n      tap(([endpoint, token]) => {\n        api.configuration.basePath = endpoint;\n        if (token) {\n          requestParams['token'] = token;\n        }\n      }),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForwardingDataSource.html":{"url":"classes/ForwardingDataSource.html","title":"class - ForwardingDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForwardingDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            DataSource\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:84\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult\n} from 'ccf-database';\nimport { Observable, ObservableInput, ObservedValueOf } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n\nexport interface DataSource {\n  getDatabaseStatus(): Observable;\n  getProviderNames(): Observable;\n  getDatasetTechnologyNames(): Observable;\n  getOntologyTreeModel(): Observable;\n  getCellTypeTreeModel(): Observable;\n  getReferenceOrgans(): Observable;\n\n  getTissueBlockResults(filter?: Filter): Observable;\n  getAggregateResults(filter?: Filter): Observable;\n  getOntologyTermOccurences(filter?: Filter): Observable>;\n  getCellTypeTermOccurences(filter?: Filter): Observable>;\n  getScene(filter?: Filter): Observable;\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\nexport type DataSourceLike = {\n  [K in keyof DataSource]: DataSourceLikeMethod;\n};\n\nexport type DataSourceMethod = DataSource[K];\nexport type DataSourceLikeMethod =\n  (...args: Parameters>) => ObservableInput>;\nexport type DataSourceDataType =\n  ObservedValueOf>>;\n\n\nexport abstract class ForwardingDataSource implements DataSource {\n  getDatabaseStatus(): Observable {\n    return this.forwardCall('getDatabaseStatus');\n  }\n\n  getProviderNames(): Observable {\n    return this.forwardCall('getProviderNames');\n  }\n\n  getDatasetTechnologyNames(): Observable {\n    return this.forwardCall('getDatasetTechnologyNames');\n  }\n\n  getOntologyTreeModel(): Observable {\n    return this.forwardCall('getOntologyTreeModel');\n  }\n\n  getCellTypeTreeModel(): Observable {\n    return this.forwardCall('getCellTypeTreeModel');\n  }\n\n  getReferenceOrgans(): Observable {\n    return this.forwardCall('getReferenceOrgans');\n  }\n\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.forwardCall('getTissueBlockResults', filter);\n  }\n\n  getAggregateResults(filter?: Filter): Observable {\n    return this.forwardCall('getAggregateResults', filter);\n  }\n\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getOntologyTermOccurences', filter);\n  }\n\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getCellTypeTermOccurences', filter);\n  }\n\n  getScene(filter?: Filter): Observable {\n    return this.forwardCall('getScene', filter);\n  }\n\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.forwardCall('getReferenceOrganScene', organIri, filter);\n  }\n\n  protected abstract forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable>;\n}\n\n\nexport abstract class DelegateDataSource extends ForwardingDataSource {\n  abstract readonly impl$: Observable;\n\n  protected forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable> {\n    type AnyFunction = (...rest: unknown[]) => ObservableInput;\n\n    return this.impl$.pipe(\n      switchMap(impl => (impl[method] as AnyFunction)(...args))\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalConfigState.html":{"url":"injectables/GlobalConfigState.html","title":"injectable - GlobalConfigState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GlobalConfigState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/config/global-config.state.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                optionCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                    Private\n                                getPathKey\n                            \n                            \n                                getProperty\n                            \n                            \n                                patchConfig\n                            \n                            \n                                setConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    config$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(k1: K1)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:42\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K1\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(k1: K1, k2: K2)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:43\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K1\n                        K2\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n                                    \n                                            K2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(k1: K1, k2: K2, k3: K3)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:44\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K1\n                        K2\n                        K3\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n                                    \n                                            K2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n                                    \n                                            K3\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(...path: (string | number)[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:45\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            (string | number)[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(...path: (string | number)[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            (string | number)[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getPathKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPathKey(path: (string | number)[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            (string | number)[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProperty\n                        \n                    \n                \n            \n            \n                \ngetProperty(path: PropertyKey[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:34\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            PropertyKey[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patchConfig\n                        \n                    \n                \n            \n            \n                \npatchConfig(config: ImmutablePatchValue)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            ImmutablePatchValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConfig\n                        \n                    \n                \n            \n            \n                \nsetConfig(config: ImmutableStateValue)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            ImmutableStateValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        optionCache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config$\n                    \n                \n\n                \n                    \n                        getconfig$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { Computed, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { ImmutablePatchValue, ImmutableStateValue } from '@ngxs-labs/data/typings';\nimport { State } from '@ngxs/store';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, pluck, shareReplay } from 'rxjs/operators';\n\n\n@StateRepository()\n@State({\n  name: 'globalConfig',\n  defaults: null\n})\n@Injectable()\nexport class GlobalConfigState extends NgxsImmutableDataRepository {\n  private readonly optionCache = new Map>();\n\n  @Computed()\n  get config$(): Observable> {\n    return this.state$.pipe(filterNulls(), shareReplay(1));\n  }\n\n  setConfig(config: ImmutableStateValue): void {\n    this.setState(config);\n  }\n\n  patchConfig(config: ImmutablePatchValue): void {\n    this.patchState(config);\n  }\n\n  getProperty(path: PropertyKey[]): Observable {\n    return this.config$.pipe(\n      pluck(...path as string[]),\n      distinctUntilChanged(),\n      shareReplay(1)\n    );\n  }\n\n  getOption(k1: K1): Observable;\n  getOption(k1: K1, k2: K2): Observable;\n  getOption(k1: K1, k2: K2, k3: K3): Observable;\n  getOption(...path: (string | number)[]): Observable;\n  getOption(...path: (string | number)[]): Observable {\n    const key = this.getPathKey(path);\n    if (this.optionCache.has(key)) {\n      return this.optionCache.get(key)!;\n    }\n\n    const obs = this.config$.pipe(\n      pluck(...(path as string[])),\n      distinctUntilChanged(),\n      shareReplay(1)\n    );\n\n    this.optionCache.set(key, obs);\n    return obs;\n  }\n\n  private getPathKey(path: (string | number)[]): string {\n    return `${path.length}:${path.join('.')}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalsService.html":{"url":"injectables/GlobalsService.html","title":"injectable - GlobalsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GlobalsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/globals/globals.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Provide functionality for interacting with the global object.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                findGlobalObject\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                remove\n                            \n                            \n                                set\n                            \n                            \n                                set\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    obj\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        findGlobalObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    findGlobalObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:109\n                \n            \n\n\n            \n                \n                    Attempt to locate the global object.\nCan be overridden in a subclass to check other locations\nor completely change the object. This is especially useful\nduring testing.\n\n\n                    \n                    \n                    \n                        Returns :         GlobalThis | undefined\n\n                    \n                    \n                        The global object if found\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: K)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:58\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n                    Gets a value from the global object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key for the value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: K, def: D)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:59\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                        D\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                            D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NonNullable | D\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: GlobalKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:60\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | null | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: GlobalKey, def: D)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:61\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        D\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                            D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | D\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: GlobalKey, def?)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has\n                        \n                    \n                \n            \n            \n                \nhas(key: GlobalKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:45\n                \n            \n\n\n            \n                \n                    Tests whether the global object has the specific key.\nThis method returns true even when the associated value\nis undefined or null as long as the key exists.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the key exists in the global object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(key: GlobalKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:93\n                \n            \n\n\n            \n                \n                    Removes a key from the global object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: K, value)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:76\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n                    Sets a value on the global object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key to set the value on\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: GlobalKey, value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:77\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: GlobalKey, value)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        obj\n                    \n                \n\n                \n                    \n                        getobj()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:22\n                                \n                            \n                    \n                        \n                                The found global object\n\n\n                                \n                                    Returns :         GlobalThis | undefined\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n\n/** Type of keys allowed in the global object */\nexport type GlobalKey = string | symbol;\n\n/** Type of the global object */\nexport type GlobalThis = typeof globalThis;\n\ndeclare let global: GlobalThis;\n\n/**\n * Provide functionality for interacting with the global object.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalsService {\n  /**\n   * The found global object\n   */\n  get obj(): GlobalThis | undefined {\n    const obj = this.findGlobalObject();\n    // Cache value on the instance\n    Object.defineProperties(this, {\n      obj: {\n        configurable: false,\n        writable: false,\n        value: obj\n      }\n    });\n\n    return obj;\n  }\n\n  /**\n   * Tests whether the global object has the specific key.\n   * This method returns true even when the associated value\n   * is undefined or null as long as the key exists.\n   *\n   * @param key The key\n   *\n   * @returns true if the key exists in the global object\n   */\n  has(key: GlobalKey): boolean {\n    const { obj } = this;\n    return obj != null && key in obj;\n  }\n\n  /**\n   * Gets a value from the global object.\n   *\n   * @param key The key for the value\n   * @param def An optional default value\n   *\n   * @returns The value if it exists otherwise the default value\n   */\n  get(key: K): GlobalThis[K];\n  get(key: K, def: D): NonNullable | D;\n  get(key: GlobalKey): T | null | undefined;\n  get(key: GlobalKey, def: D): T | D;\n\n  get(key: GlobalKey, def?: unknown): unknown {\n    const { obj } = this;\n    return (obj && obj[key] as unknown) ?? def;\n  }\n\n  /**\n   * Sets a value on the global object.\n   *\n   * @param key The key to set the value on\n   * @param value The new value\n   *\n   * @throws TypeError if the value is readonly\n   */\n  set(key: K, value: GlobalThis[K]): void;\n  set(key: GlobalKey, value: T): void;\n\n  set(key: GlobalKey, value: unknown): void {\n    const { obj } = this;\n    if (obj) {\n      obj[key] = value;\n    }\n  }\n\n  /**\n   * Removes a key from the global object.\n   *\n   * @param key The key to remove\n   *\n   * @throws TypeError if the key is not removable\n   */\n  remove(key: GlobalKey): void {\n    const { obj } = this;\n    if (obj) {\n      delete obj[key];\n    }\n  }\n\n  /**\n   * Attempt to locate the global object.\n   * Can be overridden in a subclass to check other locations\n   * or completely change the object. This is especially useful\n   * during testing.\n   *\n   * @returns The global object if found\n   */\n  /* istanbul ignore next This is really hard to test as it depends on the global environment */\n  protected findGlobalObject(): GlobalThis | undefined {\n    // This should pretty much always be available unless\n    // we are running in some outdated environment\n    if (typeof globalThis !== 'undefined') {\n      return globalThis;\n    }\n\n    // Check the common places for a global object\n    if (typeof global !== 'undefined') { // Node.js environment\n      return global;\n    } else if (typeof window !== 'undefined') { // Browser environment\n      return window;\n    } else if (typeof self !== 'undefined') { // Web worker environment\n      return self;\n    }\n\n    try {\n      // One last try - may fail depending on content security policy (CSP) settings\n      // eslint-disable-next-line no-new-func, @typescript-eslint/no-implied-eval\n      return (new Function('return this;'))() as GlobalThis | undefined;\n    } catch (_ignored) { /* Ignore errors */ }\n\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleAnalyticsSyncService.html":{"url":"injectables/GoogleAnalyticsSyncService.html","title":"injectable - GoogleAnalyticsSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GoogleAnalyticsSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                            \n                                    Private\n                                    Readonly\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                toggleGoogleAnalytics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consentService: ConsentService, window: Record | null, undefined: IGoogleAnalyticsSettings)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        window\n                                                  \n                                                        \n                                                                    Record | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                  \n                                                        \n                                                                    IGoogleAnalyticsSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        toggleGoogleAnalytics\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleGoogleAnalytics(disabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    disabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, OnDestroy } from '@angular/core';\nimport { IGoogleAnalyticsSettings, NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN, NGX_WINDOW } from 'ngx-google-analytics';\nimport { Subscription } from 'rxjs';\n\nimport { ConsentService } from './consent.service';\n\n\n@Injectable()\nexport class GoogleAnalyticsSyncService implements OnDestroy {\n  private readonly token: string;\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    consentService: ConsentService,\n    @Inject(NGX_WINDOW) private readonly window: Record | null,\n    @Inject(NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN) { trackingCode }: IGoogleAnalyticsSettings\n  ) {\n    this.token = trackingCode;\n\n    this.subscriptions.add(consentService.consentChange.subscribe(\n      consent => this.toggleGoogleAnalytics(consent === 'rescinded')\n    ));\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  private toggleGoogleAnalytics(disabled: boolean): void {\n    if (this.window) {\n      this.window[`ga-disable-${this.token}`] = disabled;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoButtonComponent.html":{"url":"components/InfoButtonComponent.html","title":"component - InfoButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Info button component: Information icon displays project details when clicked.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-button\n            \n\n            \n                styleUrls\n                ./info-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchInfoDialog\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onDialogButtonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                documentationUrl\n                            \n                            \n                                infoTitle\n                            \n                            \n                                videoID\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, infoButtonService: InfoButtonService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:31\n                            \n                        \n\n                \n                    \n                            Creates an instance of info button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the dialog creation service.\n\n                                                        \n                                                \n                                                \n                                                        infoButtonService\n                                                  \n                                                        \n                                                                        InfoButtonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the info button service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        documentationUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        infoTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:22\n                            \n                        \n                \n                    \n                        Title of the info dialog\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        videoID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:27\n                            \n                        \n                \n                    \n                        Whether the information is for the RUI or EUI\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        launchInfoDialog\n                        \n                    \n                \n            \n            \n                \nlaunchInfoDialog(data: PanelData)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:58\n                \n            \n\n\n            \n                \n                    Opens the info dialogue with the project details\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                PanelData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:51\n                \n            \n\n\n            \n                \n                    Unsubscribe to the observable when the component\nis destroyed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDialogButtonClick\n                        \n                    \n                \n            \n            \n                \nonDialogButtonClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:76\n                \n            \n\n\n            \n                \n                    Detects button click and updates panel data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\n\nimport { PanelData } from '../info-button/info-button.service';\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\nimport { InfoButtonService } from './info-button.service';\n\n\n/**\n * Info button component: Information icon displays project details when clicked.\n */\n@Component({\n  selector: 'ccf-info-button',\n  templateUrl: './info-button.component.html',\n  styleUrls: ['./info-button.component.scss']\n})\nexport class InfoButtonComponent implements OnDestroy {\n  /**\n   * Title of the info dialog\n   */\n  @Input() infoTitle = '';\n\n  /**\n   * Whether the information is for the RUI or EUI\n   */\n  @Input() videoID: string;\n\n  @Input() documentationUrl: string;\n\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of info button component.\n   *\n   * @param dialog Reference to the dialog creation service.\n   * @param infoButtonService Reference to the info button service\n   */\n  constructor(private readonly dialog: MatDialog, private readonly infoButtonService: InfoButtonService) {\n    this.subscriptions.add(infoButtonService.panelContent.subscribe(data => {\n      if (data.content.length) {\n        this.launchInfoDialog(data);\n      }\n    }));\n  }\n\n  /**\n    * Unsubscribe to the observable when the component\n    * is destroyed\n    */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the info dialogue with the project details\n   */\n  launchInfoDialog(data: PanelData): void {\n    if (this.dialog.openDialogs.length == 0) { //Prevent multiple dialogs from opening\n      this.dialog.open(InfoDialogComponent, {\n        autoFocus: false,\n        panelClass: 'modal-animated',\n        width: '72rem',\n        data: {\n          title: data.infoTitle,\n          content: data.content,\n          videoID: data.videoID\n        }\n      });\n    }\n  }\n\n  /**\n   * Detects button click and updates panel data\n   */\n  onDialogButtonClick(): void {\n    this.infoButtonService.updateData(this.documentationUrl, this.videoID, this.infoTitle);\n  }\n}\n\n    \n\n    \n        \n  \n    info\n  \n\n    \n\n    \n                \n                    ./info-button.component.scss\n                \n                .info-button-wrapper {\n  border-radius: 0.25rem;\n  padding: 0.65rem;\n  transition: 0.6s;\n\n  .ccf-info-button {\n    cursor: pointer;\n    transition: color .6s;\n    font-size: 1.5rem;\n    vertical-align: sub;\n  }\n  \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      info  '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoButtonModule.html":{"url":"modules/InfoButtonModule.html","title":"module - InfoButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InfoButtonModule\n\n\n\ncluster_InfoButtonModule_declarations\n\n\n\ncluster_InfoButtonModule_imports\n\n\n\ncluster_InfoButtonModule_exports\n\n\n\n\nInfoButtonComponent\n\nInfoButtonComponent\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nInfoButtonModule -->\n\nInfoButtonComponent->InfoButtonModule\n\n\n\n\n\nInfoButtonComponent \n\nInfoButtonComponent \n\nInfoButtonComponent  -->\n\nInfoButtonModule->InfoButtonComponent \n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoButtonModule -->\n\nInfoDialogModule->InfoButtonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-button/info-button.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoButtonComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InfoDialogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { InfoButtonComponent } from './info-button.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { InfoDialogModule } from '../info-dialog/info-dialog.module';\n\n@NgModule({\n  declarations: [InfoButtonComponent],\n  imports: [CommonModule, InfoDialogModule, MatIconModule, HttpClientModule],\n  exports: [InfoButtonComponent]\n})\nexport class InfoButtonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InfoButtonService.html":{"url":"injectables/InfoButtonService.html","title":"injectable - InfoButtonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InfoButtonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                panelContent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                parseMarkdown\n                            \n                            \n                                updateData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        parseMarkdown\n                        \n                    \n                \n            \n            \n                \nparseMarkdown(data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:52\n                \n            \n\n\n            \n                \n                    Function to parse the markdown file and convert to\ndocumentation content used by the info-dialog panels\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Markdown file sent as a string after reading it\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DocumentationContent[]\n\n                    \n                    \n                        array of DocumentationContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateData\n                        \n                    \n                \n            \n            \n                \nupdateData(url: string, videoID: string, infoTitle: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:38\n                \n            \n\n\n            \n                \n                    Read the markdown file to split it by h1 tags and update the panel title and videoID.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    videoID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    infoTitle\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        panelContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject({ content: [], infoTitle: '', videoID: '' })\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:31\n                        \n                    \n\n            \n                \n                    Subject to send the documentation data to the component when its done processing\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * The structure to define how each documentation panel\n * should look like in the info dialog\n */\n\nexport interface DocumentationContent {\n  /** Title of the panel */\n  title: string;\n\n  /** Content inside the panel */\n  content: string;\n}\n\nexport interface PanelData {\n  content: DocumentationContent[];\n  infoTitle: string;\n  videoID: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfoButtonService {\n\n  /** Subject to send the documentation data to the component when its done processing */\n  panelContent: BehaviorSubject = new BehaviorSubject({ content: [], infoTitle: '', videoID: '' });\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Read the markdown file to split it by h1 tags and update the panel title and videoID.\n   */\n  updateData(url: string, videoID: string, infoTitle: string): void {\n    this.http.get(url, { responseType: 'text' }).subscribe((data: string) => {\n      const panelContent: PanelData = { content: this.parseMarkdown(data), infoTitle: infoTitle, videoID: videoID };\n      this.panelContent.next(panelContent);\n    });\n  }\n\n  /**\n   * Function to parse the markdown file and convert to\n   * documentation content used by the info-dialog panels\n   *\n   * @param data Markdown file sent as a string after reading it\n   * @returns array of DocumentationContent\n   */\n  parseMarkdown(data: string): DocumentationContent[] {\n    const markdownContent: DocumentationContent[] = [];\n    const splitByHeaderTag: string[] = data.split('# ');\n    for (const split of splitByHeaderTag) {\n      if (split.length) {\n        const newLine = split.includes('\\n\\n') ? '\\n\\n' : '\\r\\n\\r\\n';\n        const headerAndContent: string[] = split.split(newLine);\n        markdownContent.push({\n          title: headerAndContent[0],\n          content: headerAndContent.splice(1).join(newLine)\n        });\n      }\n    }\n    return markdownContent;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogComponent.html":{"url":"components/InfoDialogComponent.html","title":"component - InfoDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-dialog\n            \n\n            \n                styleUrls\n                ./info-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                documentationContents\n                            \n                            \n                                infoTitle\n                            \n                            \n                                videoID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: InfoDialogData)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:32\n                            \n                        \n\n                \n                    \n                            Creates an instance of info dialog component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the dialog that this component creates, used to call the dialog's methods\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        InfoDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data being injected into the dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:60\n                \n            \n\n\n            \n                \n                    Closes info dialog component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:51\n                \n            \n\n\n            \n                \n                    load the youtube player api in on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InfoDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:41\n                        \n                    \n\n            \n                \n                    Data being injected into the dialog\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:40\n                        \n                    \n\n            \n                \n                    A reference to the dialog that this component creates, used to call the dialog's methods\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        documentationContents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DocumentationContent[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:26\n                        \n                    \n\n            \n                \n                    Documentation contents\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        infoTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:30\n                        \n                    \n\n            \n                \n                    Title of the dialog\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        videoID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DocumentationContent } from '../info-button/info-button.service';\n\n/**\n * Data model for the dialog input\n */\nexport interface InfoDialogData {\n  content: DocumentationContent[];\n  title: string;\n  videoID: string;\n}\n\n/**\n * This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n */\n@Component({\n  selector: 'ccf-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss']\n})\nexport class InfoDialogComponent implements OnInit {\n  /**\n   * Documentation contents\n   */\n  documentationContents: DocumentationContent[];\n  /**\n   * Title of the dialog\n   */\n  infoTitle: string;\n\n  videoID: string;\n  /**\n   * Creates an instance of info dialog component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: InfoDialogData,\n  ) {\n    this.documentationContents = data.content || [];\n    this.infoTitle = data.title || '';\n    this.videoID = data.videoID;\n  }\n\n  /**\n   * load the youtube player api in on init\n   */\n  ngOnInit(): void {\n    const tag = document.createElement('script');\n    tag.src = 'https://www.youtube.com/iframe_api';\n    document.body.appendChild(tag);\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(() => {\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{infoTitle}}\n        \n          clear\n        \n      \n      \n      \n        \n          \n            \n              {{content.title}}\n            \n              \n                \n                \n                   \n                \n              \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./info-dialog.component.scss\n                \n                ::ng-deep .mat-dialog-container {\n  padding: 0;\n}\n\n.rui-about.wrapper {\n  .container {\n    .content {\n      padding: 3rem;\n      text-align: left;\n\n      .header {\n        display: flex;\n        justify-content: space-between;\n        height: 3rem;\n        margin-bottom: 2.25rem;\n        position: relative;\n      }\n    }\n\n    .description {\n      font-size: 0.875rem;\n      line-height: 1.5rem;\n      margin-bottom: 1rem;\n    }\n\n    .close {\n      .close-icon {\n        cursor: pointer;\n        height: 3rem;\n        width: 3rem;\n        line-height: 3rem;\n        text-align: center;\n        transition: .6s;\n      }\n    }\n\n    .title {\n      font-size: 1.5rem;\n      margin: 0 auto;\n      line-height: 3rem;\n      height: 3rem;\n      justify-self: center;\n      display: flex;\n    }\n\n    .subtitle {\n      font-size: 1rem;\n      margin-top: 0;\n      margin-bottom: 0.5rem;\n    }\n\n    .panel {\n      margin-bottom: 1.5rem;\n\n      .no-header-margin {\n        font-weight: 300;\n        margin-bottom: 0;\n      }\n\n      .top-padding {\n        display: flex;\n\n        markdown ::ng-deep ul {\n          margin-top: 0;\n          padding-left: 1.5rem;\n        }\n      }\n    }\n\n    .dialog-content {\n      height: 50rem;\n      min-height: 10rem;\n\n      .variable-binding {\n        font-weight: 300;\n        display: flex;\n\n        &.first {\n          padding-right: 1rem;\n          width: 73%;\n        }\n\n        ::ng-deep ul {\n          margin: 0;\n        }\n\n        ::ng-deep img {\n          margin-left: 1rem;\n          float: right;\n        }\n      }\n\n      .video-player {\n        position: relative;\n        width: 50%;\n\n        ::ng-deep iframe {\n          width: 100%;\n          height: 100%;\n        }\n      }\n    }\n\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{infoTitle}}                  clear                                                                      {{content.title}}                                                                                                                                         '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InfoDialogData.html":{"url":"interfaces/InfoDialogData.html","title":"interface - InfoDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InfoDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Data model for the dialog input\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            videoID\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         DocumentationContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DocumentationContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videoID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        videoID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DocumentationContent } from '../info-button/info-button.service';\n\n/**\n * Data model for the dialog input\n */\nexport interface InfoDialogData {\n  content: DocumentationContent[];\n  title: string;\n  videoID: string;\n}\n\n/**\n * This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n */\n@Component({\n  selector: 'ccf-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss']\n})\nexport class InfoDialogComponent implements OnInit {\n  /**\n   * Documentation contents\n   */\n  documentationContents: DocumentationContent[];\n  /**\n   * Title of the dialog\n   */\n  infoTitle: string;\n\n  videoID: string;\n  /**\n   * Creates an instance of info dialog component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: InfoDialogData,\n  ) {\n    this.documentationContents = data.content || [];\n    this.infoTitle = data.title || '';\n    this.videoID = data.videoID;\n  }\n\n  /**\n   * load the youtube player api in on init\n   */\n  ngOnInit(): void {\n    const tag = document.createElement('script');\n    tag.src = 'https://www.youtube.com/iframe_api';\n    document.body.appendChild(tag);\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(() => {\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoDialogModule.html":{"url":"modules/InfoDialogModule.html","title":"module - InfoDialogModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoDialogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InfoDialogModule\n\n\n\ncluster_InfoDialogModule_declarations\n\n\n\ncluster_InfoDialogModule_exports\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoDialogModule -->\n\nInfoDialogComponent->InfoDialogModule\n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nInfoDialogModule->InfoDialogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoDialogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoDialogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InfoDialogComponent } from './info-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { YouTubePlayerModule } from '@angular/youtube-player';\n\n\n@NgModule({\n  declarations: [InfoDialogComponent],\n  imports: [CommonModule, MatDialogModule, MatIconModule, MatExpansionModule, YouTubePlayerModule, MarkdownModule.forRoot({})],\n  exports: [InfoDialogComponent]\n})\nexport class InfoDialogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectorDelegateDataSourceService.html":{"url":"injectables/InjectorDelegateDataSourceService.html","title":"injectable - InjectorDelegateDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectorDelegateDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DelegateDataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                selectToken\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globalConfig: GlobalConfigState, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        selectToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectToken(config: C)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ProviderToken\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:11\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Injector, ProviderToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, shareReplay } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n@Injectable()\nexport abstract class InjectorDelegateDataSourceService extends DelegateDataSource {\n  readonly impl$: Observable;\n\n  constructor(\n    globalConfig: GlobalConfigState,\n    injector: Injector\n  ) {\n    super();\n\n    this.impl$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      map(config => this.selectToken(config)),\n      distinctUntilChanged(),\n      map(token => injector.get(token)),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract selectToken(config: C): ProviderToken;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageSyncService.html":{"url":"injectables/LocalStorageSyncService.html","title":"injectable - LocalStorageSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                storage\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadConsent\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                saveConsent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consentService: ConsentService, key: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadConsent\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadConsent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Consent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        saveConsent\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveConsent(value: Consent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        storage\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Consent, ConsentService } from './consent.service';\n\n\nexport const LOCAL_STORAGE_CONSENT_KEY = new InjectionToken('Key under which consent is stored', {\n  providedIn: 'root',\n  factory: () => 'ALLOW_TELEMETRY'\n});\n\n\n@Injectable()\nexport class LocalStorageSyncService implements OnDestroy {\n  private readonly storage?: typeof localStorage;\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    consentService: ConsentService,\n    @Inject(LOCAL_STORAGE_CONSENT_KEY) private readonly key: string\n  ) {\n    try {\n      this.storage = localStorage;\n    } catch (_error) { /* Ignored */ }\n\n    consentService.setConsent(this.loadConsent());\n    this.subscriptions.add(\n      consentService.consentChange.subscribe(consent => this.saveConsent(consent))\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  private loadConsent(): Consent {\n    const rawValue = this.storage?.getItem?.(this.key);\n    if (rawValue == null) {\n      return 'not-set';\n    }\n\n    const value = rawValue.trim().toLowerCase();\n    switch (value) {\n      case 'given': /* fallthrough */\n      case 'rescinded':\n        return value;\n      default:\n        return 'not-set';\n    }\n  }\n\n  private saveConsent(value: Consent): void {\n    this.storage?.setItem?.(this.key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MousePositionTrackerModule.html":{"url":"modules/MousePositionTrackerModule.html","title":"module - MousePositionTrackerModule","body":"\n                   \n\n\n\n\n    Modules\n    MousePositionTrackerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/analytics/mouse-position-tracker.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, NgModule } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { map, throttleTime } from 'rxjs/operators';\n\n\nexport function trackMousePosition(el: HTMLElement, ga: GoogleAnalyticsService): Subscription {\n  const formatData = (event: MouseEvent) => {\n    const { clientWidth, clientHeight } = el;\n    const { clientX, clientY } = event;\n    const points = [clientX, clientY, clientWidth, clientHeight];\n    return points.join('_');\n  };\n\n  const events = fromEvent(el, 'mousemove').pipe(\n    throttleTime(1000),\n    map(formatData)\n  );\n\n  return events.subscribe(data => ga.event('webpage', 'mousemove', data));\n}\n\n\n@NgModule()\nexport class MousePositionTrackerModule {\n  constructor(\n  // NOTE: Angular compiler fails when document is typed properly?!\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  @Inject(DOCUMENT) document: any,\n                    ga: GoogleAnalyticsService\n  ) {\n    if (document) {\n      trackMousePosition((document as Document).body, ga);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NumberDirective.html":{"url":"directives/NumberDirective.html","title":"directive - NumberDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NumberDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive for restricting an input element to integer only values.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        input[ccfNumbersOnly]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onInputChange\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts:9\n                            \n                        \n\n                \n                    \n                            Creates an instance of number directive.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to input element\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts:23\n                \n            \n\n\n            \n                \n                    Listens to input changes and updates the text to only include numbers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The input event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChange\n                        \n                    \n                \n            \n            \n                \nonInputChange(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('input', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts:23\n                \n            \n\n\n            \n                \n                    Listens to input changes and updates the text to only include numbers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The input event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, HostListener } from '@angular/core';\n\n/**\n * Directive for restricting an input element to integer only values.\n */\n@Directive({\n  selector: 'input[ccfNumbersOnly]'\n})\nexport class NumberDirective {\n  /**\n   * Creates an instance of number directive.\n   *\n   * @param el Reference to input element\n   */\n  constructor(private el: ElementRef) { }\n\n  /**\n   * Listens to input changes and updates the text to only include numbers.\n   *\n   * @param event The input event\n   */\n  @HostListener('input', ['$event'])\n  onInputChange(event: Event): void {\n    const initalValue = this.el.nativeElement.value;\n    this.el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');\n    if (initalValue !== this.el.nativeElement.value) {\n      event.stopPropagation();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NumbersOnlyModule.html":{"url":"modules/NumbersOnlyModule.html","title":"module - NumbersOnlyModule","body":"\n                   \n\n\n\n\n    Modules\n    NumbersOnlyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NumbersOnlyModule\n\n\n\ncluster_NumbersOnlyModule_exports\n\n\n\ncluster_NumbersOnlyModule_declarations\n\n\n\n\nNumberDirective\n\nNumberDirective\n\n\n\nNumbersOnlyModule\n\nNumbersOnlyModule\n\nNumbersOnlyModule -->\n\nNumberDirective->NumbersOnlyModule\n\n\n\n\n\nNumberDirective \n\nNumberDirective \n\nNumberDirective  -->\n\nNumbersOnlyModule->NumberDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NumberDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NumberDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { NumberDirective } from './numbers-only.directive';\n\n\n@NgModule({\n  declarations: [NumberDirective],\n  exports: [NumberDirective]\n})\nexport class NumbersOnlyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OpacitySliderComponent.html":{"url":"components/OpacitySliderComponent.html","title":"component - OpacitySliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OpacitySliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts\n\n\n\n    \n        Description\n    \n    \n        Slider for setting opacity on an anatomical structure\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-opacity-slider\n            \n\n            \n                styleUrls\n                ./opacity-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./opacity-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                prevOpacity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeOpacity\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                            \n                                resetOpacity\n                            \n                            \n                                toggleVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                opacity\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                opacityChange\n                            \n                            \n                                opacityReset\n                            \n                            \n                                visibilityToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        opacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:22\n                            \n                        \n                \n                    \n                        The value displayed in the slider\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:27\n                            \n                        \n                \n                    \n                        Whether the item is set to visible\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        opacityChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:32\n                            \n                        \n                \n                    \n                        Emits the updated opacity when the opacity changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        opacityReset\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:42\n                            \n                        \n                \n                    \n                        Emitter for resetting all opacity values to default\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visibilityToggle\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:37\n                            \n                        \n                \n                    \n                        Output  of opacity slider component\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-opacity-slider\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-opacity-slider'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeOpacity\n                        \n                    \n                \n            \n            \n                \nchangeOpacity(newOpacity: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:63\n                \n            \n\n\n            \n                \n                    Emits opacityChange with the new opacity value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    newOpacity\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The updated opacity value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetOpacity\n                        \n                    \n                \n            \n            \n                \nresetOpacity()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:82\n                \n            \n\n\n            \n                \n                    Emits signal to reset the opacity of the item\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleVisibility()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:71\n                \n            \n\n\n            \n                \n                    Emits signal to toggle the visibility of the item\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-opacity-slider'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prevOpacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, HostBinding, Input, Output, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n/**\n * Slider for setting opacity on an anatomical structure\n */\n@Component({\n  selector: 'ccf-opacity-slider',\n  templateUrl: './opacity-slider.component.html',\n  styleUrls: ['./opacity-slider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OpacitySliderComponent implements OnInit {\n\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-opacity-slider';\n\n  /**\n   * The value displayed in the slider\n   */\n  @Input() opacity = 20;\n\n  /**\n   * Whether the item is set to visible\n   */\n  @Input() visible = true;\n\n  /**\n   * Emits the updated opacity when the opacity changes\n   */\n  @Output() readonly opacityChange = new EventEmitter();\n\n  /**\n   * Output  of opacity slider component\n   */\n  @Output() readonly visibilityToggle = new EventEmitter();\n\n  /**\n   * Emitter for resetting all opacity values to default\n   */\n  @Output() readonly opacityReset = new EventEmitter();\n\n  prevOpacity: number;\n\n  ngOnInit(): void {\n    if (this.visible) {\n      this.prevOpacity = 0;\n    } else {\n      this.prevOpacity = 20;\n    }\n  }\n\n  reset(): void {\n    this.prevOpacity = 20;\n  }\n\n  /**\n   * Emits opacityChange with the new opacity value\n   *\n   * @param newOpacity The updated opacity value\n   */\n  changeOpacity(newOpacity: string): void {\n    this.opacity = parseInt(newOpacity, 10);\n    this.opacityChange.emit(this.opacity);\n  }\n\n  /**\n   * Emits signal to toggle the visibility of the item\n   */\n  toggleVisibility(): void {\n    const temp = this.opacity;\n    this.opacity = this.prevOpacity;\n    this.prevOpacity = temp;\n    this.visibilityToggle.emit();\n    this.opacityChange.emit(this.opacity);\n  }\n\n  /**\n   * Emits signal to reset the opacity of the item\n   */\n  resetOpacity(): void {\n    this.prevOpacity = 0;\n    this.opacityReset.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{opacity}}%\n  \n  \n    \n    \n    refresh\n  \n\n    \n\n    \n                \n                    ./opacity-slider.component.scss\n                \n                :host {\n  height: 2.25rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 0.1875rem;\n  \n\n  .slider-box {\n    display: flex;\n    width: 100%;\n    align-items: center;\n    justify-content: space-between;\n    height: 100%;\n\n    .slider-and-label {\n      width: 60%;\n      display: flex;\n      align-items: center;\n      height: 100%;\n\n      .slider {\n        width: 100%;\n        height: 100%;\n\n        ::ng-deep .mat-slider-wrapper {\n          top: 1.125rem;\n        }\n        \n        &.disabled {\n          pointer-events: none;\n          cursor: not-allowed;\n        }\n      }\n\n      .opacity-value {\n        width: 1.5rem;\n        margin-left: 0.5rem;\n      }\n    }\n\n    .icons {\n      display: flex;\n      cursor: pointer !important;\n\n      .reset {\n        margin-right: 1rem;\n        padding: 0.25rem;\n        cursor: pointer;\n        transition: .6s;\n        border-radius: 0.25rem;\n      }\n    \n      .visibility {\n        transition: .6s;\n        cursor: pointer;\n        padding: 0.25rem;\n        border-radius: 0.25rem;\n    \n        &.hidden {\n          display: none;\n        }\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{opacity}}%                refresh  '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'OpacitySliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpacitySliderModule.html":{"url":"modules/OpacitySliderModule.html","title":"module - OpacitySliderModule","body":"\n                   \n\n\n\n\n    Modules\n    OpacitySliderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OpacitySliderModule\n\n\n\ncluster_OpacitySliderModule_declarations\n\n\n\ncluster_OpacitySliderModule_exports\n\n\n\n\nOpacitySliderComponent\n\nOpacitySliderComponent\n\n\n\nOpacitySliderModule\n\nOpacitySliderModule\n\nOpacitySliderModule -->\n\nOpacitySliderComponent->OpacitySliderModule\n\n\n\n\n\nOpacitySliderComponent \n\nOpacitySliderComponent \n\nOpacitySliderComponent  -->\n\nOpacitySliderModule->OpacitySliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OpacitySliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OpacitySliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OpacitySliderComponent } from './opacity-slider.component';\nimport { MatSliderModule } from '@angular/material/slider';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRippleModule } from '@angular/material/core';\n\n@NgModule({\n  declarations: [OpacitySliderComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatSliderModule,\n    MatRippleModule\n  ],\n  exports: [OpacitySliderComponent]\n})\nexport class OpacitySliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganInfo.html":{"url":"interfaces/OrganInfo.html","title":"interface - OrganInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Contains the organ name and url of the icon svg\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hasSex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            side\n                                        \n                                \n                                \n                                        \n                                            src\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    True if the icon is disabled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasSex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasSex:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    True if applies to both sexes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    UBERON id for the organ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Label to display for the organ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the organ (to help match organs with left / right)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"male\" | \"female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"male\" | \"female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used for single sex only organs\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"left\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"right\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used for paired organs\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Used to fetch the url of the organ icon\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit, Component, ElementRef, EventEmitter, HostBinding, Input,\n  OnChanges, OnDestroy, Output, SimpleChanges, ViewChild\n} from '@angular/core';\nimport { ResizeSensor } from 'css-element-queries';\n\n/**\n * All organs that will eventually be displayed in the app\n */\nexport const ALL_POSSIBLE_ORGANS = [\n  {\n    src: 'app:skin',\n    organ: 'Skin',\n    name: 'Skin',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002097'\n  },\n  {\n    src: 'app:brain',\n    organ: 'Brain',\n    name: 'Brain',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000955'\n  },\n  {\n    disabled: true,\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000029'\n  },\n  {\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002509'\n  },\n  {\n    disabled: true,\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000970'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004548'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004549'\n  },\n  {\n    disabled: true,\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0003889'\n  },\n  {\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001303'\n  },\n  {\n    src: 'app:fallopian-tube-right',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001302'\n  },\n  {\n    src: 'app:heart',\n    organ: 'Heart',\n    name: 'Heart',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000948'\n  },\n  {\n    disabled: true,\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002113'\n  },\n  {\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004538'\n  },\n  {\n    src: 'app:kidney-right',\n    organ: 'Kidney',\n    name: 'Kidney, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004539'\n  },\n  {\n    disabled: true,\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001465'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.org/sig/ont/fma/fma24978'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.org/sig/ont/fma/fma24977'\n  },\n  {\n    src: 'app:liver',\n    organ: 'Liver',\n    name: 'Liver',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002107'\n  },\n  {\n    disabled: true,\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002048'\n  },\n  {\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001004'\n  },\n  {\n    disabled: true,\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000992'\n  },\n  {\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.org/sig/ont/fma/fma7214'\n  },\n  {\n    src: 'app:ovary-right',\n    organ: 'Ovary',\n    name: 'Ovary, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.org/sig/ont/fma/fma7213'\n  },\n  {\n    src: 'app:pancreas',\n    organ: 'Pancreas',\n    name: 'Pancreas',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001264'\n  },\n  {\n    src: 'app:pelvis-f',\n    organ: 'Pelvis',\n    name: 'Pelvis',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001270'\n  },\n  {\n    src: 'app:placenta',\n    organ: 'Placenta',\n    name: 'Placenta',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001987'\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002367',\n    disabled: true\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000079'\n  },\n  {\n    src: 'app:small-intestine',\n    organ: 'Small Intestine',\n    name: 'Small Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002108'\n  },\n  {\n    src: 'app:large-intestine',\n    organ: 'Large Intestine',\n    name: 'Large Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000059'\n  },\n  {\n    src: 'app:spinal-cord',\n    organ: 'Spinal Cord',\n    name: 'Spinal Cord',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002240'\n  },\n  {\n    src: 'app:spleen',\n    organ: 'Spleen',\n    name: 'Spleen',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002106'\n  },\n  {\n    src: 'app:thymus',\n    organ: 'Thymus',\n    name: 'Thymus',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002370'\n  },\n  {\n    disabled: true,\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000056'\n  },\n  {\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001223'\n  },\n  {\n    src: 'app:ureter-right',\n    organ: 'Ureter',\n    name: 'Ureter, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001222'\n  },\n  {\n    src: 'app:bladder',\n    organ: 'Urinary Bladder',\n    name: 'Urinary Bladder',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001255'\n  },\n  {\n    src: 'app:uterus',\n    organ: 'Uterus',\n    name: 'Uterus',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000995'\n  },\n  {\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004537'\n  },\n  {\n    disabled: true,\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002049'\n  }\n].sort((a, b) => a.name.localeCompare(b.name)) as OrganInfo[];\n\n/**\n * All organs which have not been disabled\n */\nexport const ALL_ORGANS = ALL_POSSIBLE_ORGANS.filter(organ => organ.disabled !== true);\n\n/**\n * Contains the organ name and url of the icon svg\n */\nexport interface OrganInfo {\n\n  /**\n   * Used to fetch the url of the organ icon\n   */\n  src: string;\n\n  /**\n   * Label to display for the organ\n   */\n  name: string;\n\n  /**\n   * Name of the organ (to help match organs with left / right)\n   */\n  organ: string;\n\n  /**\n   * True if the icon is disabled\n   */\n  disabled?: boolean;\n\n  /**\n   * Used for paired organs\n   */\n  side?: 'left' | 'right';\n\n  /**\n   * True if applies to both sexes\n   */\n  hasSex?: boolean;\n\n  /**\n   * Used for single sex only organs\n   */\n  sex?: 'male' | 'female';\n\n  /**\n   * UBERON id for the organ\n   */\n  id?: string;\n}\n\n/**\n * Organ carousel for selecting the organ to be viewed\n */\n@Component({\n  selector: 'ccf-organ-selector',\n  templateUrl: './organ-selector.component.html',\n  styleUrls: ['./organ-selector.component.scss']\n})\nexport class OrganSelectorComponent implements AfterViewInit, OnChanges, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly clsName = 'ccf-organ-selector';\n\n  @ViewChild('carouselContainer', { static: true }) carouselContainer: ElementRef;\n  @ViewChild('itemlist', { static: true }) itemList: ElementRef;\n  @ViewChild('itemcontainer', { static: true }) itemContainer: ElementRef;\n\n  /**\n   * If multiple selections should be allowed\n   */\n  @Input() multiselect = false;\n\n  @Input() displayErrors = false;\n\n  /**\n   * List of organs in the carousel\n   */\n  @Input() organList: OrganInfo[] = ALL_ORGANS;\n\n  /**\n   * Currently selected organ\n   */\n  @Input() selectedOrgans: OrganInfo[] = [];\n\n  /**\n   * If the organ selector is expanded\n   */\n  @Input() expanded = false;\n\n  /**\n   * Emits the name of the organ when selected\n   */\n  @Output() readonly organsChanged = new EventEmitter();\n\n  /**\n   * Determines whether the carousel is at the beginning\n   */\n  onLeft = true;\n\n  /**\n   * Determines whether the carousel is at the end\n   */\n  onRight = false;\n\n  /**\n   * Handles scrolling behavior\n   */\n  timeoutHandler?: unknown;\n\n  /**\n   * Distance the carousel moves in each shift (px)\n   */\n  step = 72;\n\n  /**\n   * Detects resizing of carousel\n   */\n  private sensor: ResizeSensor;\n\n  // eslint-disable-next-line\n  @Input()\n  set occurenceData(value: Record) {\n    // eslint-disable-next-line\n    this._occurenceData = value;\n  }\n\n  get occurenceData(): Record {\n    // eslint-disable-next-line\n    return this._occurenceData;\n  }\n\n  private _occurenceData: Record;\n\n  /**\n   * Set resize sensor on carousel\n   */\n  ngAfterViewInit(): void {\n    const { carouselContainer } = this;\n    this.sensor = new ResizeSensor(carouselContainer.nativeElement, () => {\n      this.set();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('organList' in changes) {\n      this.set();\n    }\n  }\n\n  /**\n   * Detaches resize sensor\n   */\n  ngOnDestroy(): void {\n    this.sensor.detach();\n  }\n\n  /**\n   * Decides whether or not an error has occured,\n   * used to display or hide error message.\n   */\n  get error(): boolean {\n    if (!this.displayErrors || this.selectedOrgans.length === 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Scrolls the carousel left or right by one step.\n   * Prevents scrolling past the beginning or end of the carousel.\n   *\n   * @param dir Direction to be scrolled\n   */\n  shift(dir: string): void {\n    const { itemList } = this;\n    let val = parseInt(itemList.nativeElement.style.left, 10) || 0;\n    if (this.onLeft && dir === 'left' || this.onRight && dir === 'right') {\n      return;\n    }\n    val = dir === 'right' ? val - this.step : val + this.step;\n    itemList.nativeElement.style.left = val + 'px';\n    this.setLeftRight(val);\n  }\n\n  /**\n   * Scrolls carousel continuously\n   *\n   * @param dir Direction to be scrolled\n   */\n  scroll(dir: string): void {\n    this.timeoutHandler = setInterval(() => {\n      this.shift(dir);\n    }, 200);\n  }\n\n  /**\n   * Stops carousel scrolling\n   */\n  stopScroll(): void {\n    if (this.timeoutHandler) {\n      // Minor hack to make typescript happy when there are mixed NodeJS and regular typings\n      clearInterval(this.timeoutHandler as undefined);\n      this.timeoutHandler = undefined;\n    }\n  }\n\n  /**\n   * Sets and emits currently selected organ(s)\n   *\n   * @param organ The organ selected\n   */\n  selectOrgan(organ: OrganInfo): void {\n    if (!this.multiselect) {\n      this.selectedOrgans = [organ];\n    } else {\n      if (this.selectedOrgans.includes(organ)) {\n        this.selectedOrgans = this.selectedOrgans.filter((selectedOrgan) => organ !== selectedOrgan);\n      } else {\n        this.selectedOrgans = this.selectedOrgans.concat([organ]);\n      }\n    }\n    this.organsChanged.emit(this.selectedOrgans);\n  }\n\n  /**\n   * Determines whether an icon represents a currently selected organ\n   *\n   * @param icon The icon of interest\n   * @returns true if selected\n   */\n  isSelected(organ: OrganInfo): boolean {\n    return this.selectedOrgans.includes(organ) ? true : false;\n  }\n\n  /**\n   * Disables scrolling if the list of organs is smaller than the container, otherwise sets onLeft and onRight as normal\n   */\n  set(): void {\n    const { itemList, itemContainer, carouselContainer } = this;\n    const val = parseInt(itemList.nativeElement.style.left, 10) || 0;\n    if (itemList.nativeElement.offsetWidth >= this.organList.length * this.step) {\n      itemList.nativeElement.style.left = '0px';\n      this.onLeft = true;\n      this.onRight = true;\n    } else {\n      this.setLeftRight(val);\n      const listLength = this.step * Math.floor(carouselContainer.nativeElement.offsetWidth / this.step) - 64;\n      itemContainer.nativeElement.style.width = `${listLength}px`;\n    }\n  }\n\n  /**\n   * Responsively sets width of the item container\n   */\n  setWidth(): void {\n    const { itemContainer, carouselContainer } = this;\n    const listLength = this.step * Math.floor(carouselContainer.nativeElement.offsetWidth / this.step) - 64;\n    itemContainer.nativeElement.style.width = `${listLength}px`;\n  }\n\n  /**\n   * Sets onLeft and onRight according to where the item list is scrolled\n   */\n  setLeftRight(val: number): void {\n    const { itemContainer } = this;\n    this.onLeft = val === 0 ? true : false;\n    this.onRight = val \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganSelectorModule.html":{"url":"modules/OrganSelectorModule.html","title":"module - OrganSelectorModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganSelectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrganSelectorModule\n\n\n\ncluster_OrganSelectorModule_exports\n\n\n\ncluster_OrganSelectorModule_declarations\n\n\n\n\nOrganSelectorComponent\n\nOrganSelectorComponent\n\n\n\nOrganSelectorModule\n\nOrganSelectorModule\n\nOrganSelectorModule -->\n\nOrganSelectorComponent->OrganSelectorModule\n\n\n\n\n\nOrganSelectorComponent \n\nOrganSelectorComponent \n\nOrganSelectorComponent  -->\n\nOrganSelectorModule->OrganSelectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/organ-selector/organ-selector.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OrganSelectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrganSelectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrganSelectorComponent } from './organ-selector.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [OrganSelectorComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatTooltipModule\n  ],\n  exports: [OrganSelectorComponent]\n})\nexport class OrganSelectorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PanelData.html":{"url":"interfaces/PanelData.html","title":"interface - PanelData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PanelData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            infoTitle\n                                        \n                                \n                                \n                                        \n                                            videoID\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         DocumentationContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DocumentationContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        infoTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        infoTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videoID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        videoID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * The structure to define how each documentation panel\n * should look like in the info dialog\n */\n\nexport interface DocumentationContent {\n  /** Title of the panel */\n  title: string;\n\n  /** Content inside the panel */\n  content: string;\n}\n\nexport interface PanelData {\n  content: DocumentationContent[];\n  infoTitle: string;\n  videoID: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfoButtonService {\n\n  /** Subject to send the documentation data to the component when its done processing */\n  panelContent: BehaviorSubject = new BehaviorSubject({ content: [], infoTitle: '', videoID: '' });\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Read the markdown file to split it by h1 tags and update the panel title and videoID.\n   */\n  updateData(url: string, videoID: string, infoTitle: string): void {\n    this.http.get(url, { responseType: 'text' }).subscribe((data: string) => {\n      const panelContent: PanelData = { content: this.parseMarkdown(data), infoTitle: infoTitle, videoID: videoID };\n      this.panelContent.next(panelContent);\n    });\n  }\n\n  /**\n   * Function to parse the markdown file and convert to\n   * documentation content used by the info-dialog panels\n   *\n   * @param data Markdown file sent as a string after reading it\n   * @returns array of DocumentationContent\n   */\n  parseMarkdown(data: string): DocumentationContent[] {\n    const markdownContent: DocumentationContent[] = [];\n    const splitByHeaderTag: string[] = data.split('# ');\n    for (const split of splitByHeaderTag) {\n      if (split.length) {\n        const newLine = split.includes('\\n\\n') ? '\\n\\n' : '\\r\\n\\r\\n';\n        const headerAndContent: string[] = split.split(newLine);\n        markdownContent.push({\n          title: headerAndContent[0],\n          content: headerAndContent.splice(1).join(newLine)\n        });\n      }\n    }\n    return markdownContent;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluckUniqueOptions.html":{"url":"interfaces/PluckUniqueOptions.html","title":"interface - PluckUniqueOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PluckUniqueOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n        \n\n\n            \n                Description\n            \n            \n                Options for pluckUnique operator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            compare\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        compare\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        compare:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom comparison for determining distinct values\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { OperatorFunction } from 'rxjs';\nimport { distinctUntilChanged, pluck, shareReplay } from 'rxjs/operators';\n\n\n/**\n * Options for `pluckUnique` operator\n */\nexport interface PluckUniqueOptions {\n  /**\n   * Custom comparison for determining distinct values\n   */\n  compare?: (lhs: T, rhs: T) => boolean;\n}\n\n\n/**\n * Default options\n */\nconst DEFAULT_OPTIONS: PluckUniqueOptions = {};\n\n\n/**\n * Combines the functionaliy of `pluck` and `distinctUntilChanged`\n * as well as adding a `shareReplay`.\n *\n * @param {...string} props Properties to pluck\n * @param [opts] Additional options\n * @returns An `Observable` operator\n */\nexport function pluckUnique(k1: K1, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, k4: K4, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(...props: [string, ...string[]]): OperatorFunction;\nexport function pluckUnique(...props: [string, ...string[], PluckUniqueOptions]): OperatorFunction;\nexport function pluckUnique(...props: unknown[]): OperatorFunction {\n  const last = props[props.length - 1];\n  let keys = props as string[];\n  let opts = DEFAULT_OPTIONS;\n\n  if (typeof last === 'object') {\n    opts = last as PluckUniqueOptions;\n    keys = keys.slice(0, -1);\n  }\n\n  return source => source.pipe(\n    pluck(...keys),\n    distinctUntilChanged(opts.compare),\n    shareReplay(1)\n  );\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Segment.html":{"url":"interfaces/Segment.html","title":"interface - Segment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Segment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n        \n\n\n            \n                Description\n            \n            \n                A segment of text with additional classes and styles\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            styles\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Classes to add to the text container\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        styles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        styles:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Styles to set on the text container\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The piece of text to display\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { DecoratedRange, normalize } from './decorated-range';\n\n\n// Reexport DecoratedRange\nexport { DecoratedRange };\n\n/** A segment of text with additional classes and styles */\ninterface Segment {\n  /** The piece of text to display */\n  text: string;\n  /** Classes to add to the text container */\n  classes: string[];\n  /** Styles to set on the text container */\n  styles: Record;\n}\n\n/** Represents an operation to apply to the stack when building segments */\ninterface StackOp {\n  /** Text index at which the changes takes effect */\n  index: number;\n  /** Decorations to add */\n  added: DecoratedRange[];\n  /** Decorations to remove */\n  removed: DecoratedRange[];\n}\n\n\n/**\n * Class to display text with additional styling on ranges of the text.\n */\n@Component({\n  selector: 'ccf-decorated-text',\n  templateUrl: './decorated-text.component.html',\n  styleUrls: ['./decorated-text.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DecoratedTextComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-decorated-text';\n\n  /**\n   * Text to display\n   */\n  @Input() text: string;\n\n  /**\n   * Classes and styles to apply to ranges of the text.\n   * For overlapping ranges later values takes precedence.\n   */\n  @Input() decorations?: Partial[];\n\n  /**\n   * Computed segments of text with decorations resolved.\n   */\n  segments: Segment[] = [];\n\n  /**\n   * Apply changes and recalculate cached values.\n   *\n   * @param changes Instance properties that have changed\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('text' in changes || 'decorations' in changes) {\n      this.segments = this.createSegments();\n    }\n  }\n\n  /**\n   * Creates an array of decorated text segments based on\n   * the latest text and decorations.\n   *\n   * @returns The new segments\n   */\n  private createSegments(): Segment[] {\n    const { text } = this;\n    if (!text) { // No styling can be applied to empty text fields\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const decorations = this.getNormalizedDecorations();\n    if (decorations.length === 0) { // No styling available\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const stackOps = this.createStackOps(decorations);\n    const segments: Segment[] = [];\n    let stack: DecoratedRange[] = [];\n    let lastIndex = 0;\n\n    // If the first op starts at index zero apply stack changes\n    // but don't push a segment by shifing out the first op\n    if (stackOps[0].index === 0) {\n      stack = this.updateStack(stack, stackOps.shift() as StackOp);\n    }\n\n    // Build segments based on the stack operations\n    for (const op of stackOps) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex, op.index), stack\n      ));\n\n      lastIndex = op.index;\n      stack = this.updateStack(stack, op);\n    }\n\n    // Push the last segment if not already done\n    if (lastIndex !== text.length) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex), stack\n      ));\n    }\n\n    return segments;\n  }\n\n  /**\n   * Creates an ordered array of stack operations to apply when building segments.\n   *\n   * @param ranges The decorated ranges to apply\n   * @returns The array of operations\n   */\n  private createStackOps(ranges: DecoratedRange[]): StackOp[] {\n    const ops: Record = {};\n    const getOp = (index: number) => (ops[index] ??= { index, added: [], removed: [] });\n\n    for (const range of ranges) {\n      getOp(range.start).added.push(range);\n      getOp(range.end).removed.push(range);\n    }\n\n    return Object.entries(ops)\n      .sort((i1, i2) => +i1[0] - +i2[0]) // Sort by index\n      .map(entry => entry[1]);\n  }\n\n  /**\n   * Applies the stack changes specified by the stack operation.\n   *\n   * @param stack The current stack\n   * @param op The operation\n   * @returns The new stack\n   */\n  private updateStack(stack: DecoratedRange[], op: StackOp): DecoratedRange[] {\n    return stack\n      .filter(item => !op.removed.includes(item))\n      // Note - A new array is created by the above filter statement\n      // so it is safe to modify it with concat\n      .concat(op.added);\n  }\n\n  /**\n   * Normalizes and filters valid decorated ranges.\n   *\n   * @returns The normalized ranges with properties filled\n   */\n  private getNormalizedDecorations(): DecoratedRange[] {\n    const { decorations = [], text: { length } } = this;\n    return decorations\n      // Turn partials into full objects\n      .map(range => normalize(range, length))\n      // Remove empty and out of bounds ranges\n      .filter(range => range.start (\n      (result, range) => result.concat(range.classes),\n      []\n    );\n    const styles = decorations.reduce(\n      (result, range) => ({ ...result, ...range.styles }),\n      {}\n    );\n\n    return { text, classes, styles };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpatialSearchListComponent.html":{"url":"components/SpatialSearchListComponent.html","title":"component - SpatialSearchListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpatialSearchListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays a list of spatial searches\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-spatial-search-list\n            \n\n            \n                styleUrls\n                ./spatial-search-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spatial-search-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                itemId\n                            \n                            \n                                removeItem\n                            \n                            \n                                updateItemSelection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                itemRemoved\n                            \n                            \n                                selectionChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:33\n                            \n                        \n                \n                    \n                        Items to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:30\n                            \n                        \n                \n                    \n                        Label for the list\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        itemRemoved\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:39\n                            \n                        \n                \n                    \n                        Emits the item that has been removed from the list\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectionChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:36\n                            \n                        \n                \n                    \n                        Emits the new items when a selection changes\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-spatial-search-list\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-spatial-search-list'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:27\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        itemId\n                        \n                    \n                \n            \n            \n                \nitemId(_index: number, item: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:48\n                \n            \n\n\n            \n                \n                    Computes a unique id for an item\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Unused\n\n                                    \n                                \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A unique id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:71\n                \n            \n\n\n            \n                \n                    Removes an item from the list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Index of the item to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateItemSelection\n                        \n                    \n                \n            \n            \n                \nupdateItemSelection(index: number, selected: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:58\n                \n            \n\n\n            \n                \n                    Updates the selected state for an item\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Index of item to update\n\n                                    \n                                \n                                \n                                    selected\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        What to set the selected state to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-spatial-search-list'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:27\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\n\n/**\n * Base interface of items in the spatial search list\n */\nexport interface SpatialSearchListItem {\n  /** Whether the item is selected */\n  selected: boolean;\n\n  /** Description displayed for the item */\n  description: string;\n}\n\n\n/**\n * Displays a list of spatial searches\n */\n@Component({\n  selector: 'ccf-spatial-search-list',\n  templateUrl: './spatial-search-list.component.html',\n  styleUrls: ['./spatial-search-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpatialSearchListComponent {\n  /** HTML class */\n  @HostBinding('class') readonly clsName = 'ccf-spatial-search-list';\n\n  /** Label for the list */\n  @Input() label = '';\n\n  /** Items to display */\n  @Input() items: T[] = [];\n\n  /** Emits the new items when a selection changes */\n  @Output() readonly selectionChanged = new EventEmitter();\n\n  /** Emits the item that has been removed from the list */\n  @Output() readonly itemRemoved = new EventEmitter();\n\n  /**\n   * Computes a unique id for an item\n   *\n   * @param _index Unused\n   * @param item An item\n   * @returns A unique id\n   */\n  itemId(_index: number, item: T): string {\n    return item.description;\n  }\n\n  /**\n   * Updates the selected state for an item\n   *\n   * @param index Index of item to update\n   * @param selected What to set the selected state to\n   */\n  updateItemSelection(index: number, selected: boolean): void {\n    const newItems = this.items = [...this.items];\n    newItems[index] = { ...newItems[index], selected };\n\n    const selectedItems = newItems.filter(item => item.selected);\n    this.selectionChanged.emit(selectedItems);\n  }\n\n  /**\n   * Removes an item from the list\n   *\n   * @param index Index of the item to remove\n   */\n  removeItem(index: number): void {\n    const newItems = this.items = [...this.items];\n    const [item] = newItems.splice(index, 1);\n    this.itemRemoved.emit(item);\n  }\n}\n\n    \n\n    \n        \n  {{ label }}\n\n\n\n  \n    \n      \n        {{ item.description }}\n      \n\n      \n\n      \n        delete_outlined\n      \n    \n  \n\n    \n\n    \n                \n                    ./spatial-search-list.component.scss\n                \n                :host {\n  display: block;\n\n  .label {\n    margin-bottom: 0.5rem;\n    font-weight: bold;\n  }\n\n  .item {\n    height: 2rem;\n\n    .item-content {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      height: 2rem;\n\n      .delete {\n        width: 2rem;\n        height: 2rem;\n        line-height: 2rem;\n      }\n\n      .filler {\n        flex-grow: 1;\n      }\n    }\n\n    // Remove default padding from material list item\n    & > ::ng-deep * {\n      padding: 0 !important;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}                    {{ item.description }}                          delete_outlined            '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'SpatialSearchListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialSearchListItem.html":{"url":"interfaces/SpatialSearchListItem.html","title":"interface - SpatialSearchListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialSearchListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Base interface of items in the spatial search list\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            selected\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description displayed for the item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the item is selected\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\n\n/**\n * Base interface of items in the spatial search list\n */\nexport interface SpatialSearchListItem {\n  /** Whether the item is selected */\n  selected: boolean;\n\n  /** Description displayed for the item */\n  description: string;\n}\n\n\n/**\n * Displays a list of spatial searches\n */\n@Component({\n  selector: 'ccf-spatial-search-list',\n  templateUrl: './spatial-search-list.component.html',\n  styleUrls: ['./spatial-search-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpatialSearchListComponent {\n  /** HTML class */\n  @HostBinding('class') readonly clsName = 'ccf-spatial-search-list';\n\n  /** Label for the list */\n  @Input() label = '';\n\n  /** Items to display */\n  @Input() items: T[] = [];\n\n  /** Emits the new items when a selection changes */\n  @Output() readonly selectionChanged = new EventEmitter();\n\n  /** Emits the item that has been removed from the list */\n  @Output() readonly itemRemoved = new EventEmitter();\n\n  /**\n   * Computes a unique id for an item\n   *\n   * @param _index Unused\n   * @param item An item\n   * @returns A unique id\n   */\n  itemId(_index: number, item: T): string {\n    return item.description;\n  }\n\n  /**\n   * Updates the selected state for an item\n   *\n   * @param index Index of item to update\n   * @param selected What to set the selected state to\n   */\n  updateItemSelection(index: number, selected: boolean): void {\n    const newItems = this.items = [...this.items];\n    newItems[index] = { ...newItems[index], selected };\n\n    const selectedItems = newItems.filter(item => item.selected);\n    this.selectionChanged.emit(selectedItems);\n  }\n\n  /**\n   * Removes an item from the list\n   *\n   * @param index Index of the item to remove\n   */\n  removeItem(index: number): void {\n    const newItems = this.items = [...this.items];\n    const [item] = newItems.splice(index, 1);\n    this.itemRemoved.emit(item);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpatialSearchListModule.html":{"url":"modules/SpatialSearchListModule.html","title":"module - SpatialSearchListModule","body":"\n                   \n\n\n\n\n    Modules\n    SpatialSearchListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SpatialSearchListModule\n\n\n\ncluster_SpatialSearchListModule_declarations\n\n\n\ncluster_SpatialSearchListModule_exports\n\n\n\n\nSpatialSearchListComponent\n\nSpatialSearchListComponent\n\n\n\nSpatialSearchListModule\n\nSpatialSearchListModule\n\nSpatialSearchListModule -->\n\nSpatialSearchListComponent->SpatialSearchListModule\n\n\n\n\n\nSpatialSearchListComponent \n\nSpatialSearchListComponent \n\nSpatialSearchListComponent  -->\n\nSpatialSearchListModule->SpatialSearchListComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpatialSearchListComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SpatialSearchListComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\n\nimport { SpatialSearchListComponent } from './spatial-search-list.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatButtonModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatListModule\n  ],\n  declarations: [SpatialSearchListComponent],\n  exports: [SpatialSearchListComponent]\n})\nexport class SpatialSearchListModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StackOp.html":{"url":"interfaces/StackOp.html","title":"interface - StackOp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StackOp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an operation to apply to the stack when building segments\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            added\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            removed\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        added\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        added:         DecoratedRange[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DecoratedRange[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Decorations to add\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text index at which the changes takes effect\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removed:         DecoratedRange[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DecoratedRange[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Decorations to remove\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { DecoratedRange, normalize } from './decorated-range';\n\n\n// Reexport DecoratedRange\nexport { DecoratedRange };\n\n/** A segment of text with additional classes and styles */\ninterface Segment {\n  /** The piece of text to display */\n  text: string;\n  /** Classes to add to the text container */\n  classes: string[];\n  /** Styles to set on the text container */\n  styles: Record;\n}\n\n/** Represents an operation to apply to the stack when building segments */\ninterface StackOp {\n  /** Text index at which the changes takes effect */\n  index: number;\n  /** Decorations to add */\n  added: DecoratedRange[];\n  /** Decorations to remove */\n  removed: DecoratedRange[];\n}\n\n\n/**\n * Class to display text with additional styling on ranges of the text.\n */\n@Component({\n  selector: 'ccf-decorated-text',\n  templateUrl: './decorated-text.component.html',\n  styleUrls: ['./decorated-text.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DecoratedTextComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-decorated-text';\n\n  /**\n   * Text to display\n   */\n  @Input() text: string;\n\n  /**\n   * Classes and styles to apply to ranges of the text.\n   * For overlapping ranges later values takes precedence.\n   */\n  @Input() decorations?: Partial[];\n\n  /**\n   * Computed segments of text with decorations resolved.\n   */\n  segments: Segment[] = [];\n\n  /**\n   * Apply changes and recalculate cached values.\n   *\n   * @param changes Instance properties that have changed\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('text' in changes || 'decorations' in changes) {\n      this.segments = this.createSegments();\n    }\n  }\n\n  /**\n   * Creates an array of decorated text segments based on\n   * the latest text and decorations.\n   *\n   * @returns The new segments\n   */\n  private createSegments(): Segment[] {\n    const { text } = this;\n    if (!text) { // No styling can be applied to empty text fields\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const decorations = this.getNormalizedDecorations();\n    if (decorations.length === 0) { // No styling available\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const stackOps = this.createStackOps(decorations);\n    const segments: Segment[] = [];\n    let stack: DecoratedRange[] = [];\n    let lastIndex = 0;\n\n    // If the first op starts at index zero apply stack changes\n    // but don't push a segment by shifing out the first op\n    if (stackOps[0].index === 0) {\n      stack = this.updateStack(stack, stackOps.shift() as StackOp);\n    }\n\n    // Build segments based on the stack operations\n    for (const op of stackOps) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex, op.index), stack\n      ));\n\n      lastIndex = op.index;\n      stack = this.updateStack(stack, op);\n    }\n\n    // Push the last segment if not already done\n    if (lastIndex !== text.length) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex), stack\n      ));\n    }\n\n    return segments;\n  }\n\n  /**\n   * Creates an ordered array of stack operations to apply when building segments.\n   *\n   * @param ranges The decorated ranges to apply\n   * @returns The array of operations\n   */\n  private createStackOps(ranges: DecoratedRange[]): StackOp[] {\n    const ops: Record = {};\n    const getOp = (index: number) => (ops[index] ??= { index, added: [], removed: [] });\n\n    for (const range of ranges) {\n      getOp(range.start).added.push(range);\n      getOp(range.end).removed.push(range);\n    }\n\n    return Object.entries(ops)\n      .sort((i1, i2) => +i1[0] - +i2[0]) // Sort by index\n      .map(entry => entry[1]);\n  }\n\n  /**\n   * Applies the stack changes specified by the stack operation.\n   *\n   * @param stack The current stack\n   * @param op The operation\n   * @returns The new stack\n   */\n  private updateStack(stack: DecoratedRange[], op: StackOp): DecoratedRange[] {\n    return stack\n      .filter(item => !op.removed.includes(item))\n      // Note - A new array is created by the above filter statement\n      // so it is safe to modify it with concat\n      .concat(op.added);\n  }\n\n  /**\n   * Normalizes and filters valid decorated ranges.\n   *\n   * @returns The normalized ranges with properties filled\n   */\n  private getNormalizedDecorations(): DecoratedRange[] {\n    const { decorations = [], text: { length } } = this;\n    return decorations\n      // Turn partials into full objects\n      .map(range => normalize(range, length))\n      // Remove empty and out of bounds ranges\n      .filter(range => range.start (\n      (result, range) => result.concat(range.classes),\n      []\n    );\n    const styles = decorations.reduce(\n      (result, range) => ({ ...result, ...range.styles }),\n      {}\n    );\n\n    return { text, classes, styles };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StoreDebugComponent.html":{"url":"components/StoreDebugComponent.html","title":"component - StoreDebugComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StoreDebugComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts\n\n\n\n    \n        Description\n    \n    \n        Simple component for displaying the current values in the data store.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-store-debug\n            \n\n            \n                styleUrls\n                ./store-debug.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./store-debug.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Private\n                                root\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:37\n                            \n                        \n\n                \n                    \n                            Creates an instance of store debug component.\nSets up the store data listeners.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The data store.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Change detection for this component.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-store-debug\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-store-debug'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:58\n                \n            \n\n\n            \n                \n                    Cleans up subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-store-debug'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record>\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:34\n                        \n                    \n\n            \n                \n                    Latest store data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:37\n                        \n                    \n\n            \n                \n                    Subscriptions managed by this component\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:26\n                                \n                            \n                    \n                        \n                                Gets the store data as a list of state name to key-value pairs\n\n\n                                \n                                    Returns :         KVList\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnDestroy, ChangeDetectorRef, HostBinding } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { Subscription } from 'rxjs';\n\n/** Key-Value pair */\nexport type KVPair = [string, T];\n/** Array of Key-Value pairs */\nexport type KVList = KVPair[];\n\n/**\n * Simple component for displaying the current values in the data store.\n */\n@Component({\n  selector: 'ccf-store-debug',\n  templateUrl: './store-debug.component.html',\n  styleUrls: ['./store-debug.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StoreDebugComponent implements OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-store-debug';\n\n  /**\n   * Gets the store data as a list of state name to key-value pairs\n   */\n  get data(): KVList {\n    const states: KVList> = Object.entries(this.root);\n    const stateValues: KVList = states.map(([key, values]) => [key, Object.entries(values)]);\n    const statesWithData = stateValues.filter(([_key, values]) => values.length > 0);\n    return statesWithData;\n  }\n\n  /** Latest store data */\n  private root: Record> = {};\n\n  /** Subscriptions managed by this component */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of store debug component.\n   * Sets up the store data listeners.\n   *\n   * @param store The data store.\n   * @param cdr Change detection for this component.\n   */\n  constructor(store: Store, cdr: ChangeDetectorRef) {\n    const sub = store.subscribe(root => {\n      this.root = root as Record>;\n      cdr.markForCheck();\n    });\n\n    this.subscriptions.add(sub);\n  }\n\n  /**\n   * Cleans up subscriptions\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  {{ state[0] }}\n  \n    \n      {{ kv[0] }}: {{ kv[1] | json }}\n    \n  \n\n\n    \n\n    \n                \n                    ./store-debug.component.scss\n                \n                :host {\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ state[0] }}            {{ kv[0] }}: {{ kv[1] | json }}      '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'StoreDebugComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreDebugModule.html":{"url":"modules/StoreDebugModule.html","title":"module - StoreDebugModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreDebugModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StoreDebugModule\n\n\n\ncluster_StoreDebugModule_declarations\n\n\n\ncluster_StoreDebugModule_exports\n\n\n\n\nStoreDebugComponent\n\nStoreDebugComponent\n\n\n\nStoreDebugModule\n\nStoreDebugModule\n\nStoreDebugModule -->\n\nStoreDebugComponent->StoreDebugModule\n\n\n\n\n\nStoreDebugComponent \n\nStoreDebugComponent \n\nStoreDebugComponent  -->\n\nStoreDebugModule->StoreDebugComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/store-debug/store-debug.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StoreDebugComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StoreDebugComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StoreDebugComponent } from './store-debug.component';\n\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [StoreDebugComponent],\n  exports: [StoreDebugComponent]\n})\nexport class StoreDebugModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextSearchComponent.html":{"url":"components/TextSearchComponent.html","title":"component - TextSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n\n\n\n    \n        Description\n    \n    \n        A text search bar with optional autocompletion functionality.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-text-search\n            \n\n            \n                styleUrls\n                ./text-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Readonly\n                                controller\n                            \n                            \n                                    Readonly\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                getOptions\n                            \n                            \n                                optionDisplay\n                            \n                            \n                                optionId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoCompleter\n                            \n                            \n                                maxOptions\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                optionSelected\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultMaxOptions: number)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:100\n                            \n                        \n\n                \n                    \n                            Creates an instance of text search component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultMaxOptions\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The default value for maxOptions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoCompleter\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:76\n                            \n                        \n                \n                    \n                        Function providing the autocomplete suggestions.\nReceives the latest search bar text and the maximum of suggestions to provide.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxOptions\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:70\n                            \n                        \n                \n                    \n                        Maximum number of autocomplete suggestions to show simultaneously\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Search...'\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:53\n                            \n                        \n                \n                    \n                        Placeholder text for the search bar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:59\n                            \n                        \n                \n                    \n                        The text to show on the search bar\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        optionSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:86\n                            \n                        \n                \n                    \n                        Emits when an autocomplete option has been selected\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:81\n                            \n                        \n                \n                    \n                        Emits when the search bar text changes\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-text-search\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-text-search'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:48\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(search: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:120\n                \n            \n\n\n            \n                \n                    Fetches the latest autocomplete suggestions for the provided search text.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    search\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The search text to find suggestions for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The found suggestions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionDisplay\n                        \n                    \n                \n            \n            \n                \noptionDisplay(option: AutoCompleteOption | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:139\n                \n            \n\n\n            \n                \n                    Text to show in search bar when an autocomplete option is selected.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                AutoCompleteOption | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The autocomplete option\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The displayed text\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionId\n                        \n                    \n                \n            \n            \n                \noptionId(_index: number, option: AutoCompleteOption)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:150\n                \n            \n\n\n            \n                \n                    Gets an unique identifier for an autocomplete option object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Unused\n\n                                    \n                                \n                                \n                                    option\n                                    \n                                                AutoCompleteOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The option object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-text-search'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:48\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        controller\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:91\n                        \n                    \n\n            \n                \n                    Form controller for search bar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (this.controller.valueChanges as Observable).pipe(\n    startWith(''),\n    distinctUntilChanged(),\n    switchMap(this.getOptions)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:96\n                        \n                    \n\n            \n                \n                    Emits the latest autocomplete suggestions\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:59\n                                \n                            \n                    \n                        \n                                The text to show on the search bar\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:63\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Inject, InjectionToken, Input, Output,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { bind as Bind } from 'bind-decorator';\nimport { from, Observable, ObservableInput } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, switchMap, take } from 'rxjs/operators';\n\nimport { DecoratedRange } from '../decorated-text/decorated-range';\n\n\n/** A single suggestion to show in autocomplete  */\nexport interface AutoCompleteOption {\n  /** A unique id */\n  id: unknown;\n  /** The displayed label */\n  label: string;\n  /** Optional styling of the label */\n  decorations?: Partial[];\n}\n\n/**\n * Token to provide a default for the maximum number of\n * autocomplete suggestions to show at the same time.\n */\nexport const DEFAULT_MAX_OPTIONS = new InjectionToken(\n  'Maximum number of autocomplete options displayed',\n  {\n    providedIn: 'root',\n    factory(): number {\n      return 10;\n    }\n  }\n);\n\n\n/**\n * A text search bar with optional autocompletion functionality.\n */\n@Component({\n  selector: 'ccf-text-search',\n  templateUrl: './text-search.component.html',\n  styleUrls: ['./text-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TextSearchComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-text-search';\n\n  /**\n   * Placeholder text for the search bar\n   */\n  @Input() placeholder = 'Search...';\n\n  /**\n   * The text to show on the search bar\n   */\n  @Input()\n  get value(): string {\n    return this.controller.value as string;\n  }\n\n  set value(val: string) {\n    this.controller.setValue(val, { emitEvent: false });\n  }\n\n  /**\n   * Maximum number of autocomplete suggestions to show simultaneously\n   */\n  @Input() maxOptions?: number;\n\n  /**\n   * Function providing the autocomplete suggestions.\n   * Receives the latest search bar text and the maximum of suggestions to provide.\n   */\n  @Input() autoCompleter?: (search: string, max: number) => ObservableInput;\n\n  /**\n   * Emits when the search bar text changes\n   */\n  @Output() readonly valueChange: Observable;\n\n  /**\n   * Emits when an autocomplete option has been selected\n   */\n  @Output() readonly optionSelected = new EventEmitter();\n\n  /**\n   * Form controller for search bar\n   */\n  readonly controller = new FormControl();\n\n  /**\n   * Emits the latest autocomplete suggestions\n   */\n  readonly options = (this.controller.valueChanges as Observable).pipe(\n    startWith(''),\n    distinctUntilChanged(),\n    switchMap(this.getOptions)\n  );\n\n  /**\n   * Creates an instance of text search component.\n   *\n   * @param defaultMaxOptions The default value for `maxOptions`\n   */\n  constructor(\n    @Inject(DEFAULT_MAX_OPTIONS) private readonly defaultMaxOptions: number\n  ) {\n    this.valueChange = this.controller.valueChanges;\n  }\n\n  /**\n   * Fetches the latest autocomplete suggestions for the provided search text.\n   *\n   * @param search The search text to find suggestions for\n   * @returns The found suggestions\n   */\n  @Bind\n  private async getOptions(search: string): Promise {\n    const { autoCompleter, maxOptions = this.defaultMaxOptions } = this;\n    if (!autoCompleter || maxOptions  array.length \n    \n\n    \n        \n  \n    \n      \n    \n\n    \n\n    \n      \n        \n        \n      \n    \n\n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./text-search.component.scss\n                \n                :host {\n  display: block;\n\n  .form .form-field {\n    width: 100%;\n\n    .input {\n      margin-left: 0.5rem;\n    }\n  }\n\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-wrapper {\n      margin: 0;\n\n      .mat-form-field-flex {\n        align-items: center;\n\n        .mat-form-field-infix {\n          height: 3rem;\n          border: none;\n        }\n\n        .mat-form-field-suffix {\n          top: 0;\n          border: none;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TextSearchModule.html":{"url":"modules/TextSearchModule.html","title":"module - TextSearchModule","body":"\n                   \n\n\n\n\n    Modules\n    TextSearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TextSearchModule\n\n\n\ncluster_TextSearchModule_declarations\n\n\n\ncluster_TextSearchModule_imports\n\n\n\ncluster_TextSearchModule_exports\n\n\n\n\nTextSearchComponent\n\nTextSearchComponent\n\n\n\nTextSearchModule\n\nTextSearchModule\n\nTextSearchModule -->\n\nTextSearchComponent->TextSearchModule\n\n\n\n\n\nMatPrefix \n\nMatPrefix \n\nMatPrefix  -->\n\nTextSearchModule->MatPrefix \n\n\n\n\n\nMatSuffix \n\nMatSuffix \n\nMatSuffix  -->\n\nTextSearchModule->MatSuffix \n\n\n\n\n\nTextSearchComponent \n\nTextSearchComponent \n\nTextSearchComponent  -->\n\nTextSearchModule->TextSearchComponent \n\n\n\n\n\nDecoratedTextModule\n\nDecoratedTextModule\n\nTextSearchModule -->\n\nDecoratedTextModule->TextSearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/text-search/text-search.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TextSearchComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DecoratedTextModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MatPrefix\n                        \n                        \n                            MatSuffix\n                        \n                        \n                            TextSearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule, MatPrefix, MatSuffix } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { DecoratedTextModule } from '../decorated-text/decorated-text.module';\nimport { TextSearchComponent } from './text-search.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n\n    DecoratedTextModule\n  ],\n  declarations: [TextSearchComponent],\n  exports: [\n    TextSearchComponent,\n\n    // Reexport prefix/suffix markers\n    MatPrefix,\n    MatSuffix\n  ]\n})\nexport class TextSearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrackingPopupComponent.html":{"url":"components/TrackingPopupComponent.html","title":"component - TrackingPopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TrackingPopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-tracking-popup\n            \n\n            \n                styleUrls\n                ./tracking-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tracking-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                container\n                            \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                            \n                                showButton\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    allowTelemetry\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, consentService: ConsentService, data: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-tracking-popup\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tracking-popup'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showButton\n                        \n                    \n                \n            \n            \n                \nshowButton(button: \"opt-in\" | \"opt-out\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    button\n                                    \n                                            \"opt-in\" | \"opt-out\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit(entry: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tracking-popup'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_SNACK_BAR_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        allowTelemetry\n                    \n                \n\n                \n                    \n                        getallowTelemetry()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:15\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\nimport { ConsentService, Consent } from 'ccf-shared/analytics';\n\n\n@Component({\n  selector: 'ccf-tracking-popup',\n  templateUrl: './tracking-popup.component.html',\n  styleUrls: ['./tracking-popup.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TrackingPopupComponent {\n  @HostBinding('class') readonly clsName = 'ccf-tracking-popup';\n\n  get allowTelemetry(): Consent {\n    return this.consentService.consent;\n  }\n\n  container: HTMLElement;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  constructor(elementRef: ElementRef, readonly consentService: ConsentService, @Inject(MAT_SNACK_BAR_DATA) public data: any) {\n    this.container = elementRef.nativeElement;\n  }\n\n  dismiss(): void {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    this.data.preClose();\n  }\n\n  submit(entry: boolean): void {\n    this.consentService.setConsent(entry ? 'given' : 'rescinded');\n    this.dismiss();\n  }\n\n  showButton(button: 'opt-in' | 'opt-out'): boolean {\n    const { allowTelemetry } = this;\n    if (allowTelemetry === 'not-set') {\n      return true;\n    } else {\n      return button === 'opt-in' ? allowTelemetry === 'rescinded' : allowTelemetry === 'given';\n    }\n  }\n}\n\n    \n\n    \n        We log usage to improve this service.\n\n  {{allowTelemetry === 'not-set' ? 'I understand' : 'Opt in'}}\n\nOpt out\n    \n\n    \n                \n                    ./tracking-popup.component.scss\n                \n                :host {\n  display: flex;\n  align-items: center;\n  min-width: 400px;\n  color: rgba(255, 255, 255, 0.7);\n  background: #323232;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n  z-index: 9999;\n\n  p {\n    margin: 24px;\n  }\n\n  button {\n    margin: 1rem;\n    min-width: 6rem;\n    background-color: #007cbe;\n    display: flex;\n    justify-content: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'We log usage to improve this service.  {{allowTelemetry === \\'not-set\\' ? \\'I understand\\' : \\'Opt in\\'}}Opt out'\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'TrackingPopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrackingPopupModule.html":{"url":"modules/TrackingPopupModule.html","title":"module - TrackingPopupModule","body":"\n                   \n\n\n\n\n    Modules\n    TrackingPopupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TrackingPopupModule\n\n\n\ncluster_TrackingPopupModule_declarations\n\n\n\ncluster_TrackingPopupModule_exports\n\n\n\n\nTrackingPopupComponent\n\nTrackingPopupComponent\n\n\n\nTrackingPopupModule\n\nTrackingPopupModule\n\nTrackingPopupModule -->\n\nTrackingPopupComponent->TrackingPopupModule\n\n\n\n\n\nTrackingPopupComponent \n\nTrackingPopupComponent \n\nTrackingPopupComponent  -->\n\nTrackingPopupModule->TrackingPopupComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TrackingPopupComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TrackingPopupComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TrackingPopupComponent } from './tracking-popup.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule\n  ],\n  declarations: [TrackingPopupComponent],\n  exports: [TrackingPopupComponent]\n})\nexport class TrackingPopupModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TrackingState.html":{"url":"injectables/TrackingState.html","title":"injectable - TrackingState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TrackingState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/analytics/tracking.state.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setAllowTelemetry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setAllowTelemetry\n                        \n                    \n                \n            \n            \n                \nsetAllowTelemetry(allowTelemetry: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/analytics/tracking.state.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    allowTelemetry\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\n\nexport interface TrackingStateModel {\n  allowTelemetry?: boolean;\n}\n\nexport const LOCAL_STORAGE_ALLOW_TELEMETRY_KEY = 'ALLOW_TELEMETRY';\nexport const INITIAL_TELEMETRY_SETTING = getTelemetryStorageSetting();\n\nfunction getTelemetryStorageSetting(): boolean | undefined {\n  const value = localStorage.getItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY);\n  return value === null ? undefined : value.toLowerCase() === 'true';\n}\n\n@StateRepository()\n@State({\n  name: 'tracking',\n  defaults: {\n    allowTelemetry: INITIAL_TELEMETRY_SETTING\n  }\n})\n@Injectable()\nexport class TrackingState extends NgxsImmutableDataRepository {\n  @DataAction()\n  setAllowTelemetry(allowTelemetry: boolean): void {\n    const oldValue = getTelemetryStorageSetting();\n    localStorage.setItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY, allowTelemetry.toString());\n    this.ctx.patchState({ allowTelemetry });\n\n    if (oldValue !== undefined || allowTelemetry === false) {\n      // This ensures that if telemetry is disabled that it _WONT_ send anything to Google Analytics\n      location.reload();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrackingStateModel.html":{"url":"interfaces/TrackingStateModel.html","title":"interface - TrackingStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TrackingStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/analytics/tracking.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            allowTelemetry\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowTelemetry\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowTelemetry:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\n\nexport interface TrackingStateModel {\n  allowTelemetry?: boolean;\n}\n\nexport const LOCAL_STORAGE_ALLOW_TELEMETRY_KEY = 'ALLOW_TELEMETRY';\nexport const INITIAL_TELEMETRY_SETTING = getTelemetryStorageSetting();\n\nfunction getTelemetryStorageSetting(): boolean | undefined {\n  const value = localStorage.getItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY);\n  return value === null ? undefined : value.toLowerCase() === 'true';\n}\n\n@StateRepository()\n@State({\n  name: 'tracking',\n  defaults: {\n    allowTelemetry: INITIAL_TELEMETRY_SETTING\n  }\n})\n@Injectable()\nexport class TrackingState extends NgxsImmutableDataRepository {\n  @DataAction()\n  setAllowTelemetry(allowTelemetry: boolean): void {\n    const oldValue = getTelemetryStorageSetting();\n    localStorage.setItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY, allowTelemetry.toString());\n    this.ctx.patchState({ allowTelemetry });\n\n    if (oldValue !== undefined || allowTelemetry === false) {\n      // This ensures that if telemetry is disabled that it _WONT_ send anything to Google Analytics\n      location.reload();\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkerCCFDatabaseDataSourceService.html":{"url":"injectables/WorkerCCFDatabaseDataSourceService.html","title":"injectable - WorkerCCFDatabaseDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WorkerCCFDatabaseDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CCFDatabaseDataSourceBaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                database$\n                            \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createDatabase\n                            \n                            \n                                    Protected\n                                    Abstract\n                                createWorker\n                            \n                            \n                                    Private\n                                    Async\n                                connectDatabase\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDatabase(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:65\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CCFDatabaseManager\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        createWorker\n                        \n                    \n                \n            \n            \n                \n                    \n                    createWorker(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Worker\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        connectDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectDatabase(manager: CCFDatabaseManager, config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    manager\n                                    \n                                                CCFDatabaseManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        database$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         CCFDatabaseDataSourceBaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         CCFDatabaseDataSourceBaseService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/XYZTriplet.html":{"url":"interfaces/XYZTriplet.html","title":"interface - XYZTriplet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  XYZTriplet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/body-ui/body-ui.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                                \n                                        \n                                            z\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit, Component, ElementRef, EventEmitter, HostBinding, Input, OnDestroy, Output, ViewChild,\n} from '@angular/core';\nimport { BodyUI, NodeClickEvent, NodeDragEvent, SpatialSceneNode } from 'ccf-body-ui';\nimport { Subscription } from 'rxjs';\n\n\ninterface XYZTriplet {\n  x: T;\n  y: T;\n  z: T;\n}\n\n/**\n * Component that handles displaying the 3D models in the stage\n */\n@Component({\n  selector: 'ccf-body-ui',\n  templateUrl: './body-ui.component.html',\n  styleUrls: ['./body-ui.component.scss']\n})\nexport class BodyUiComponent implements AfterViewInit, OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-body-ui';\n\n  @Input()\n  get scene(): SpatialSceneNode[] {\n    return this._scene;\n  }\n\n  set scene(nodes: SpatialSceneNode[]) {\n    this._scene = nodes;\n    this.bodyUI?.setScene(nodes);\n  }\n\n  @Input()\n  get rotation(): number {\n    return this._rotation;\n  }\n\n  set rotation(value: number) {\n    this._rotation = value;\n    this.bodyUI?.setRotation(value);\n  }\n\n  @Input()\n  get rotationX(): number {\n    return this._rotationX;\n  }\n\n  set rotationX(value: number) {\n    this._rotationX = value;\n    this.bodyUI?.setRotationX(value);\n  }\n\n  @Input()\n  get zoom(): number {\n    return this._zoom;\n  }\n\n  set zoom(value: number) {\n    this._zoom = value;\n    this.bodyUI?.setZoom(value);\n  }\n\n  @Input()\n  get target(): [number, number, number] {\n    return this._target;\n  }\n\n  set target(value: [number, number, number]) {\n    this._target = value;\n    this.bodyUI?.setTarget(value);\n  }\n\n  @Input()\n  get bounds(): XYZTriplet {\n    return this._bounds;\n  }\n\n  set bounds(value: XYZTriplet) {\n    this._bounds = value;\n    this.zoomToBounds(value);\n  }\n\n  @Input()\n  get camera(): string {\n    return this._camera;\n  }\n\n  set camera(value: string) {\n    this._camera = value;\n  }\n\n  @Output()\n  readonly rotationChange = new EventEmitter();\n\n  @Output()\n  readonly nodeDrag = new EventEmitter();\n\n  @Output()\n  readonly nodeClick = new EventEmitter();\n\n  @Output()\n  readonly nodeHoverStart = new EventEmitter();\n\n  @Output()\n  readonly nodeHoverStop = new EventEmitter();\n\n  @Output()\n  readonly initialized = new EventEmitter();\n\n  @Input()\n  get interactive(): boolean {\n    return this._interactive;\n  }\n\n  set interactive(value: boolean) {\n    this._interactive = value;\n    if (this.bodyUI) {\n      this.recreateBodyUI();\n    }\n  }\n\n  private _interactive = true;\n  private _rotation = 0;\n  private _rotationX = 0;\n  private _zoom = 9.5;\n  private _target: [number, number, number] = [0, 0, 0];\n  private _bounds: XYZTriplet;\n  private _scene: SpatialSceneNode[] = [];\n  private subscriptions: Subscription[] = [];\n  private _camera: string;\n\n  /**\n   * Instance of the body UI class for rendering the deckGL scene\n   */\n  bodyUI: BodyUI;\n\n  /**\n   * Reference to the div we are using to mount the body UI to.\n   */\n  @ViewChild('bodyCanvas', { read: ElementRef }) bodyCanvas: ElementRef;\n\n  /**\n   * Performs setup required after initialization\n   */\n  ngAfterViewInit(): void {\n    this.setupBodyUI();\n  }\n\n  zoomToBounds(bounds: XYZTriplet, margin = { x: 48, y: 48 }): void {\n    if (this.bodyCanvas) {\n      const { width, height } = this.bodyCanvas.nativeElement;\n      const pxRatio = window.devicePixelRatio;\n      const zoom = Math.min(\n        Math.log2((width - margin.x) / pxRatio / bounds.x),\n        Math.log2((height - margin.y) / pxRatio / bounds.y)\n      );\n      this.zoom = zoom;\n    }\n  }\n\n  /**\n   * Set up required to render the body UI with the scene nodes.\n   */\n  private async setupBodyUI(): Promise {\n    const canvas = this.bodyCanvas.nativeElement;\n    const bodyUI = new BodyUI({\n      id: 'body-ui',\n      canvas,\n      zoom: this.zoom,\n      target: [0, 0, 0],\n      rotation: 0,\n      minRotationX: -75,\n      maxRotationX: 75,\n      interactive: this.interactive,\n      camera: this.camera\n    });\n    canvas.addEventListener('contextmenu', evt => evt.preventDefault());\n    await bodyUI.initialize();\n    this.bodyUI = bodyUI;\n    (window as unknown as { bodyUI: unknown }).bodyUI = bodyUI;\n    if (this.scene?.length > 0) {\n      this.bodyUI.setScene(this.scene);\n    }\n    if (this.bounds) {\n      this.zoomToBounds(this.bounds);\n    }\n    this.subscriptions = [\n      this.bodyUI.sceneRotation$.subscribe((rotation) => this.rotationChange.next(rotation)),\n      this.bodyUI.nodeDrag$.subscribe((event) => this.nodeDrag.emit(event)),\n      this.bodyUI.nodeClick$.subscribe((event) => this.nodeClick.emit(event)),\n      this.bodyUI.nodeHoverStart$.subscribe((event) => this.nodeHoverStart.emit(event)),\n      this.bodyUI.nodeHoverStop$.subscribe((event) => this.nodeHoverStop.emit(event))\n    ];\n    this.initialized.emit();\n  }\n\n  private recreateBodyUI(): void {\n    this.clearSubscriptions();\n    this.bodyUI.finalize();\n    this.setupBodyUI();\n  }\n\n  private clearSubscriptions(): void {\n    this.subscriptions.forEach(s => s.unsubscribe());\n    this.subscriptions = [];\n  }\n\n  ngOnDestroy(): void {\n    this.clearSubscriptions();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Common Coordinate Framework (CCF) User Interfaces\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            interface\n            AnalyticsOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            function\n            initCommands\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            function\n            toAttributes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            variable\n            EAGERLY_LOADED_SERVICES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/consent.service.ts\n            \n            injectable\n            ConsentService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts\n            \n            injectable\n            GoogleAnalyticsSyncService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n            \n            injectable\n            LocalStorageSyncService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n            \n            variable\n            LOCAL_STORAGE_CONSENT_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/filter-nulls.ts\n            \n            function\n            filterNulls\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/flatten.ts\n            \n            function\n            flatten\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/inner-map.ts\n            \n            function\n            innerMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            interface\n            PluckUniqueOptions\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            variable\n            DEFAULT_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/src/public-api.ts\n            \n            variable\n            placeholder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/mouse-position-tracker.module.ts\n            \n            function\n            trackMousePosition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            injectable\n            TrackingState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            interface\n            TrackingStateModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            function\n            getTelemetryStorageSetting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            variable\n            INITIAL_TELEMETRY_SETTING\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            variable\n            LOCAL_STORAGE_ALLOW_TELEMETRY_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/body-ui/body-ui.component.ts\n            \n            component\n            BodyUiComponent\n            \n                20 %\n                (7/34)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/body-ui/body-ui.component.ts\n            \n            interface\n            XYZTriplet\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n            \n            interface\n            DecoratedRange\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n            \n            function\n            normalize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n            \n            function\n            resolveIndex\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n            \n            component\n            DecoratedTextComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n            \n            interface\n            Segment\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n            \n            interface\n            StackOp\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts\n            \n            component\n            InfoButtonComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n            \n            injectable\n            InfoButtonService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n            \n            interface\n            DocumentationContent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n            \n            interface\n            PanelData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n            \n            component\n            InfoDialogComponent\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n            \n            interface\n            InfoDialogData\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts\n            \n            component\n            OpacitySliderComponent\n            \n                78 %\n                (11/14)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            component\n            OrganSelectorComponent\n            \n                76 %\n                (23/30)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            interface\n            OrganInfo\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            variable\n            ALL_ORGANS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            variable\n            ALL_POSSIBLE_ORGANS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts\n            \n            component\n            SpatialSearchListComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts\n            \n            interface\n            SpatialSearchListItem\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts\n            \n            component\n            StoreDebugComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n            \n            component\n            TextSearchComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n            \n            interface\n            AutoCompleteOption\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n            \n            variable\n            DEFAULT_MAX_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts\n            \n            component\n            TrackingPopupComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/config/global-config.state.ts\n            \n            injectable\n            GlobalConfigState\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts\n            \n            directive\n            NumberDirective\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            injectable\n            ApiEndpointDataSourceService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            interface\n            ApiEndpointDataSourceOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            interface\n            DefaultParams\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            interface\n            FilterParams\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            cast\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            filterToParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            rangeToMinMax\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            spatialSceneNodeReviver\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            variable\n            buster$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            variable\n            CACHE_CONFIG_NO_PARAMS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            variable\n            CACHE_CONFIG_PARAMS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            injectable\n            CCFDatabaseDataSourceBaseService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            injectable\n            CCFDatabaseDataSourceService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            injectable\n            WorkerCCFDatabaseDataSourceService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            interface\n            CCFDatabaseManager\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.service.ts\n            \n            injectable\n            DataSourceService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.ts\n            \n            class\n            DelegateDataSource\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.ts\n            \n            class\n            ForwardingDataSource\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.ts\n            \n            interface\n            DataSource\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts\n            \n            injectable\n            InjectorDelegateDataSourceService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/globals/globals.service.ts\n            \n            injectable\n            GlobalsService\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/globals/globals.service.ts\n            \n            variable\n            global\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/common : ^15.126.1\n        \n            @angular/animations : ^12.1.1\n        \n            @angular/cdk : ^12.1.1\n        \n            @angular/common : ^12.1.1\n        \n            @angular/compiler : ^12.1.1\n        \n            @angular/core : ^12.1.1\n        \n            @angular/elements : ^12.1.1\n        \n            @angular/forms : ^12.1.1\n        \n            @angular/material : ^12.1.3\n        \n            @angular/platform-browser : ^12.1.1\n        \n            @angular/platform-browser-dynamic : ^12.1.1\n        \n            @angular/router : ^12.1.1\n        \n            @angular/youtube-player : ^12.1.1\n        \n            @comunica/query-sparql-rdfjs : ^2.2.0\n        \n            @deck.gl/core : ^8.5.7\n        \n            @deck.gl/geo-layers : ^8.7.8\n        \n            @deck.gl/layers : ^8.5.7\n        \n            @deck.gl/mesh-layers : ^8.5.7\n        \n            @loaders.gl/core : ^3.0.12\n        \n            @loaders.gl/draco : ^3.0.12\n        \n            @loaders.gl/gltf : ^3.0.12\n        \n            @luma.gl/core : ^8.5.12\n        \n            @math.gl/core : ^3.5.5\n        \n            @math.gl/culling : ^3.5.7\n        \n            @ngxs-labs/data : ^6.2.0\n        \n            @ngxs-labs/dispatch-decorator : ^4.0.2\n        \n            @ngxs/logger-plugin : ^3.7.1\n        \n            @ngxs/storage-plugin : ^3.7.1\n        \n            @ngxs/store : ^3.7.3\n        \n            @rdfjs/data-model : ^1.2.0\n        \n            @types/lru-cache : \n        \n            @webcomponents/webcomponentsjs : ^2.5.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.19.0\n        \n            cannon-es : ^0.18.0\n        \n            comlink : ^4.3.0\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.7.2\n        \n            dotenv : ^16.0.0\n        \n            express : ^4.17.1\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^10.0.0\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^4.6.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.0.1\n        \n            jsonld : ^5.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : \n        \n            n3 : ^1.16.0\n        \n            ng5-slider : ^1.2.6\n        \n            ngx-google-analytics : ^11.2.1\n        \n            ngx-markdown : ^12.0.1\n        \n            node-fetch : ^2.6.7\n        \n            qs : ^6.10.2\n        \n            rdf-literal : ^1.2.0\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^3.6.0\n        \n            rxjs : ^6.6.7\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^6.5.1\n        \n            ts-cacheable : ^1.0.6\n        \n            tslib : ^2.1.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cast   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            filterNulls   (projects/.../filter-nulls.ts)\n                        \n                        \n                            filterToParams   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            flatten   (projects/.../flatten.ts)\n                        \n                        \n                            getTelemetryStorageSetting   (projects/.../tracking.state.ts)\n                        \n                        \n                            initCommands   (projects/.../analytics.module.ts)\n                        \n                        \n                            innerMap   (projects/.../inner-map.ts)\n                        \n                        \n                            normalize   (projects/.../decorated-range.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            rangeToMinMax   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            resolveIndex   (projects/.../decorated-range.ts)\n                        \n                        \n                            spatialSceneNodeReviver   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            toAttributes   (projects/.../analytics.module.ts)\n                        \n                        \n                            trackMousePosition   (projects/.../mouse-position-tracker.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cast\n                        \n                    \n                \n            \n            \n                \ncast()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterToParams\n                        \n                    \n                \n            \n            \n                \nfilterToParams(filter?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterParams\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rangeToMinMax\n                        \n                    \n                \n            \n            \n                \nrangeToMinMax(range, low, high)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    range\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    low\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    high\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinMax | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spatialSceneNodeReviver\n                        \n                    \n                \n            \n            \n                \nspatialSceneNodeReviver(nodes)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/filter-nulls.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        filterNulls\n                        \n                    \n                \n            \n            \n                \nfilterNulls()\n                \n            \n\n\n\n\n            \n                \n                    Removes all null and undefined values from a stream.\n\n\n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/flatten.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        flatten\n                        \n                    \n                \n            \n            \n                \nflatten()\n                \n            \n\n\n\n\n            \n                \n                    Flattens a single level of nested arrays.\n\n\n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/src/lib/analytics/tracking.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getTelemetryStorageSetting\n                        \n                    \n                \n            \n            \n                \ngetTelemetryStorageSetting()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     boolean | undefined\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/analytics/src/lib/analytics.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initCommands\n                        \n                    \n                \n            \n            \n                \ninitCommands(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     IGoogleAnalyticsCommand[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toAttributes\n                        \n                    \n                \n            \n            \n                \ntoAttributes(obj)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/inner-map.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        innerMap\n                        \n                    \n                \n            \n            \n                \ninnerMap(project)\n                \n            \n\n\n\n\n            \n                \n                    Maps the values of each emitted array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    project\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Mapping callback invoked for each element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        normalize\n                        \n                    \n                \n            \n            \n                \nnormalize(range, length)\n                \n            \n\n\n\n\n            \n                \n                    Produces a new range object based on the input where all properties have been normalized.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    range\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object to normalize.\n\n                                    \n                                \n                                \n                                    length\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Max length for indices.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DecoratedRange\n\n                    \n                    \n                        A new object where all undefined values have been replaced with defaults and\nwhere all indices have been constrained to the range [0, length].\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveIndex\n                        \n                    \n                \n            \n            \n                \nresolveIndex(index, length)\n                \n            \n\n\n\n\n            \n                \n                    Resolves and normalizes an index for indexing into an array of length length.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The index value to resolve. May be negative indicating an index from end.\n\n                                    \n                                \n                                \n                                    length\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The length of the object on which this index will be used.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        A positive index in range [0, length]\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, opts?)\n                \n            \n\n\n\n\n            \n                \n                    Combines the functionaliy of pluck and distinctUntilChanged\nas well as adding a shareReplay.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Additional options\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, k3, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, k3, k4, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k4\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, k3, k4, k5, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k4\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k5\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, k3, k4, k5, k6, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k4\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k5\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k6\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(...props: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(...props: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(...props: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-shared/src/lib/analytics/mouse-position-tracker.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        trackMousePosition\n                        \n                    \n                \n            \n            \n                \ntrackMousePosition(el, ga)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ga\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCommon Coordinate Framework (CCF) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the CCF-EUI, CCF-RUI, and CCF-Organ-Info.\nWebsite Links\n\nCCF Exploration User Interface (CCF-EUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nCCF Registration User Interface (CCF-RUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nCCF Organ Info Component (CCF-Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nCCF API\nProduction: https://ccf-api.hubmapconsortium.org\nStaging: https://ccf-api--staging.herokuapp.com\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nCCF API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\n\nBackground and More Information\nFor more information about the Common Coordinate Framework (CCF), see the HuBMAP CCF Portal at https://hubmapconsortium.github.io/ccf/.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AnalyticsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BodyUiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DecoratedTextModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoDialogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MousePositionTrackerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NumbersOnlyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpacitySliderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganSelectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpatialSearchListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreDebugModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TextSearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrackingPopupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AnalyticsModule\n\n\n\ncluster_AnalyticsModule_providers\n\n\n\ncluster_BodyUiModule\n\n\n\ncluster_BodyUiModule_declarations\n\n\n\ncluster_BodyUiModule_exports\n\n\n\ncluster_DecoratedTextModule\n\n\n\ncluster_DecoratedTextModule_declarations\n\n\n\ncluster_DecoratedTextModule_exports\n\n\n\ncluster_InfoButtonModule\n\n\n\ncluster_InfoButtonModule_declarations\n\n\n\ncluster_InfoButtonModule_imports\n\n\n\ncluster_InfoButtonModule_exports\n\n\n\ncluster_InfoDialogModule\n\n\n\ncluster_InfoDialogModule_declarations\n\n\n\ncluster_InfoDialogModule_exports\n\n\n\ncluster_NumbersOnlyModule\n\n\n\ncluster_NumbersOnlyModule_declarations\n\n\n\ncluster_NumbersOnlyModule_exports\n\n\n\ncluster_OpacitySliderModule\n\n\n\ncluster_OpacitySliderModule_declarations\n\n\n\ncluster_OpacitySliderModule_exports\n\n\n\ncluster_OrganSelectorModule\n\n\n\ncluster_OrganSelectorModule_declarations\n\n\n\ncluster_OrganSelectorModule_exports\n\n\n\ncluster_SpatialSearchListModule\n\n\n\ncluster_SpatialSearchListModule_declarations\n\n\n\ncluster_SpatialSearchListModule_exports\n\n\n\ncluster_StoreDebugModule\n\n\n\ncluster_StoreDebugModule_declarations\n\n\n\ncluster_StoreDebugModule_exports\n\n\n\ncluster_TextSearchModule\n\n\n\ncluster_TextSearchModule_declarations\n\n\n\ncluster_TextSearchModule_exports\n\n\n\ncluster_TrackingPopupModule\n\n\n\ncluster_TrackingPopupModule_declarations\n\n\n\ncluster_TrackingPopupModule_exports\n\n\n\n\nConsentService\n\nConsentService\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAnalyticsModule -->\n\nConsentService->AnalyticsModule\n\n\n\n\n\nGoogleAnalyticsSyncService\n\nGoogleAnalyticsSyncService\n\nAnalyticsModule -->\n\nGoogleAnalyticsSyncService->AnalyticsModule\n\n\n\n\n\nLocalStorageSyncService\n\nLocalStorageSyncService\n\nAnalyticsModule -->\n\nLocalStorageSyncService->AnalyticsModule\n\n\n\n\n\nBodyUiComponent\n\nBodyUiComponent\n\n\n\nBodyUiModule\n\nBodyUiModule\n\nBodyUiModule -->\n\nBodyUiComponent->BodyUiModule\n\n\n\n\n\nBodyUiComponent \n\nBodyUiComponent \n\nBodyUiComponent  -->\n\nBodyUiModule->BodyUiComponent \n\n\n\n\n\nDecoratedTextComponent\n\nDecoratedTextComponent\n\n\n\nDecoratedTextModule\n\nDecoratedTextModule\n\nDecoratedTextModule -->\n\nDecoratedTextComponent->DecoratedTextModule\n\n\n\n\n\nDecoratedTextComponent \n\nDecoratedTextComponent \n\nDecoratedTextComponent  -->\n\nDecoratedTextModule->DecoratedTextComponent \n\n\n\n\n\nTextSearchModule\n\nTextSearchModule\n\nTextSearchModule -->\n\nDecoratedTextModule->TextSearchModule\n\n\n\n\n\nInfoButtonComponent\n\nInfoButtonComponent\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nInfoButtonModule -->\n\nInfoButtonComponent->InfoButtonModule\n\n\n\n\n\nInfoButtonComponent \n\nInfoButtonComponent \n\nInfoButtonComponent  -->\n\nInfoButtonModule->InfoButtonComponent \n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoButtonModule -->\n\nInfoDialogModule->InfoButtonModule\n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nInfoDialogModule->InfoDialogComponent \n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nInfoDialogModule -->\n\nInfoDialogComponent->InfoDialogModule\n\n\n\n\n\nNumberDirective\n\nNumberDirective\n\n\n\nNumbersOnlyModule\n\nNumbersOnlyModule\n\nNumbersOnlyModule -->\n\nNumberDirective->NumbersOnlyModule\n\n\n\n\n\nNumberDirective \n\nNumberDirective \n\nNumberDirective  -->\n\nNumbersOnlyModule->NumberDirective \n\n\n\n\n\nOpacitySliderComponent\n\nOpacitySliderComponent\n\n\n\nOpacitySliderModule\n\nOpacitySliderModule\n\nOpacitySliderModule -->\n\nOpacitySliderComponent->OpacitySliderModule\n\n\n\n\n\nOpacitySliderComponent \n\nOpacitySliderComponent \n\nOpacitySliderComponent  -->\n\nOpacitySliderModule->OpacitySliderComponent \n\n\n\n\n\nOrganSelectorComponent\n\nOrganSelectorComponent\n\n\n\nOrganSelectorModule\n\nOrganSelectorModule\n\nOrganSelectorModule -->\n\nOrganSelectorComponent->OrganSelectorModule\n\n\n\n\n\nOrganSelectorComponent \n\nOrganSelectorComponent \n\nOrganSelectorComponent  -->\n\nOrganSelectorModule->OrganSelectorComponent \n\n\n\n\n\nSpatialSearchListComponent\n\nSpatialSearchListComponent\n\n\n\nSpatialSearchListModule\n\nSpatialSearchListModule\n\nSpatialSearchListModule -->\n\nSpatialSearchListComponent->SpatialSearchListModule\n\n\n\n\n\nSpatialSearchListComponent \n\nSpatialSearchListComponent \n\nSpatialSearchListComponent  -->\n\nSpatialSearchListModule->SpatialSearchListComponent \n\n\n\n\n\nStoreDebugComponent\n\nStoreDebugComponent\n\n\n\nStoreDebugModule\n\nStoreDebugModule\n\nStoreDebugModule -->\n\nStoreDebugComponent->StoreDebugModule\n\n\n\n\n\nStoreDebugComponent \n\nStoreDebugComponent \n\nStoreDebugComponent  -->\n\nStoreDebugModule->StoreDebugComponent \n\n\n\n\n\nTextSearchComponent\n\nTextSearchComponent\n\nTextSearchModule -->\n\nTextSearchComponent->TextSearchModule\n\n\n\n\n\nMatPrefix \n\nMatPrefix \n\nMatPrefix  -->\n\nTextSearchModule->MatPrefix \n\n\n\n\n\nMatSuffix \n\nMatSuffix \n\nMatSuffix  -->\n\nTextSearchModule->MatSuffix \n\n\n\n\n\nTextSearchComponent \n\nTextSearchComponent \n\nTextSearchComponent  -->\n\nTextSearchModule->TextSearchComponent \n\n\n\n\n\nTrackingPopupComponent\n\nTrackingPopupComponent\n\n\n\nTrackingPopupModule\n\nTrackingPopupModule\n\nTrackingPopupModule -->\n\nTrackingPopupComponent->TrackingPopupModule\n\n\n\n\n\nTrackingPopupComponent \n\nTrackingPopupComponent \n\nTrackingPopupComponent  -->\n\nTrackingPopupModule->TrackingPopupComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    10 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    13 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    18 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Consent   (projects/.../consent.service.ts)\n                        \n                        \n                            DataReviver   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            DataSourceDataType   (projects/.../data-source.ts)\n                        \n                        \n                            DataSourceLike   (projects/.../data-source.ts)\n                        \n                        \n                            DataSourceLikeMethod   (projects/.../data-source.ts)\n                        \n                        \n                            DataSourceMethod   (projects/.../data-source.ts)\n                        \n                        \n                            GlobalKey   (projects/.../globals.service.ts)\n                        \n                        \n                            GlobalThis   (projects/.../globals.service.ts)\n                        \n                        \n                            IObservableCacheConfig   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            KVList   (projects/.../store-debug.component.ts)\n                        \n                        \n                            KVPair   (projects/.../store-debug.component.ts)\n                        \n                        \n                            RequestMethod   (projects/.../api-endpoint.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-shared/analytics/src/lib/consent.service.ts\n    \n    \n        \n            \n                \n                    \n                    Consent\n                \n            \n            \n                \n                        \"not-set\" | \"given\" | \"rescinded\"\n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n    \n    \n        \n            \n                \n                    \n                    DataReviver\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IObservableCacheConfig\n                \n            \n            \n                \n                        NonNullable<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RequestMethod\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/services/data-source/data-source.ts\n    \n    \n        \n            \n                \n                    \n                    DataSourceDataType\n                \n            \n            \n                \n                            ObservedValueOf>>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataSourceLike\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataSourceLikeMethod\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataSourceMethod\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/services/globals/globals.service.ts\n    \n    \n        \n            \n                \n                    \n                    GlobalKey\n                \n            \n            \n                \n                    Type of keys allowed in the global object\n\n                \n            \n            \n                \n                        string | symbol\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GlobalThis\n                \n            \n            \n                \n                    Type of the global object\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts\n    \n    \n        \n            \n                \n                    \n                    KVList\n                \n            \n            \n                \n                    Array of Key-Value pairs\n\n                \n            \n            \n                \n                            KVPair[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    KVPair\n                \n            \n            \n                \n                    Key-Value pair\n\n                \n            \n            \n                \n                        [string, T]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALL_ORGANS   (projects/.../organ-selector.component.ts)\n                        \n                        \n                            ALL_POSSIBLE_ORGANS   (projects/.../organ-selector.component.ts)\n                        \n                        \n                            buster$   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            CACHE_CONFIG_NO_PARAMS   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            CACHE_CONFIG_PARAMS   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            DEFAULT_MAX_OPTIONS   (projects/.../text-search.component.ts)\n                        \n                        \n                            DEFAULT_OPTIONS   (projects/.../pluck-unique.ts)\n                        \n                        \n                            EAGERLY_LOADED_SERVICES   (projects/.../analytics.module.ts)\n                        \n                        \n                            global   (projects/.../globals.service.ts)\n                        \n                        \n                            INITIAL_TELEMETRY_SETTING   (projects/.../tracking.state.ts)\n                        \n                        \n                            LOCAL_STORAGE_ALLOW_TELEMETRY_KEY   (projects/.../tracking.state.ts)\n                        \n                        \n                            LOCAL_STORAGE_CONSENT_KEY   (projects/.../local-storage-sync.service.ts)\n                        \n                        \n                            placeholder   (projects/.../public-api.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALL_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALL_POSSIBLE_ORGANS.filter(organ => organ.disabled !== true)\n                    \n                \n\n            \n                \n                    All organs which have not been disabled\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ALL_POSSIBLE_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [\n  {\n    src: 'app:skin',\n    organ: 'Skin',\n    name: 'Skin',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002097'\n  },\n  {\n    src: 'app:brain',\n    organ: 'Brain',\n    name: 'Brain',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000955'\n  },\n  {\n    disabled: true,\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000029'\n  },\n  {\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002509'\n  },\n  {\n    disabled: true,\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000970'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004548'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004549'\n  },\n  {\n    disabled: true,\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0003889'\n  },\n  {\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001303'\n  },\n  {\n    src: 'app:fallopian-tube-right',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001302'\n  },\n  {\n    src: 'app:heart',\n    organ: 'Heart',\n    name: 'Heart',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000948'\n  },\n  {\n    disabled: true,\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002113'\n  },\n  {\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004538'\n  },\n  {\n    src: 'app:kidney-right',\n    organ: 'Kidney',\n    name: 'Kidney, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004539'\n  },\n  {\n    disabled: true,\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001465'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.org/sig/ont/fma/fma24978'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.org/sig/ont/fma/fma24977'\n  },\n  {\n    src: 'app:liver',\n    organ: 'Liver',\n    name: 'Liver',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002107'\n  },\n  {\n    disabled: true,\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002048'\n  },\n  {\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001004'\n  },\n  {\n    disabled: true,\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000992'\n  },\n  {\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.org/sig/ont/fma/fma7214'\n  },\n  {\n    src: 'app:ovary-right',\n    organ: 'Ovary',\n    name: 'Ovary, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.org/sig/ont/fma/fma7213'\n  },\n  {\n    src: 'app:pancreas',\n    organ: 'Pancreas',\n    name: 'Pancreas',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001264'\n  },\n  {\n    src: 'app:pelvis-f',\n    organ: 'Pelvis',\n    name: 'Pelvis',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001270'\n  },\n  {\n    src: 'app:placenta',\n    organ: 'Placenta',\n    name: 'Placenta',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001987'\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002367',\n    disabled: true\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000079'\n  },\n  {\n    src: 'app:small-intestine',\n    organ: 'Small Intestine',\n    name: 'Small Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002108'\n  },\n  {\n    src: 'app:large-intestine',\n    organ: 'Large Intestine',\n    name: 'Large Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000059'\n  },\n  {\n    src: 'app:spinal-cord',\n    organ: 'Spinal Cord',\n    name: 'Spinal Cord',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002240'\n  },\n  {\n    src: 'app:spleen',\n    organ: 'Spleen',\n    name: 'Spleen',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002106'\n  },\n  {\n    src: 'app:thymus',\n    organ: 'Thymus',\n    name: 'Thymus',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002370'\n  },\n  {\n    disabled: true,\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000056'\n  },\n  {\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001223'\n  },\n  {\n    src: 'app:ureter-right',\n    organ: 'Ureter',\n    name: 'Ureter, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001222'\n  },\n  {\n    src: 'app:bladder',\n    organ: 'Urinary Bladder',\n    name: 'Urinary Bladder',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001255'\n  },\n  {\n    src: 'app:uterus',\n    organ: 'Uterus',\n    name: 'Uterus',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000995'\n  },\n  {\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004537'\n  },\n  {\n    disabled: true,\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002049'\n  }\n].sort((a, b) => a.name.localeCompare(b.name)) as OrganInfo[]\n                    \n                \n\n            \n                \n                    All organs that will eventually be displayed in the app\n\n                \n            \n\n        \n    \n\n    projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buster$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CACHE_CONFIG_NO_PARAMS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IObservableCacheConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  cacheBusterObserver: buster$\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CACHE_CONFIG_PARAMS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IObservableCacheConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n}\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_MAX_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'Maximum number of autocomplete options displayed',\n  {\n    providedIn: 'root',\n    factory(): number {\n      return 10;\n    }\n  }\n)\n                    \n                \n\n            \n                \n                    Token to provide a default for the maximum number of\nautocomplete suggestions to show at the same time.\n\n                \n            \n\n        \n    \n\n    projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PluckUniqueOptions<>\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n            \n                \n                    Default options\n\n                \n            \n\n        \n    \n\n    projects/ccf-shared/analytics/src/lib/analytics.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EAGERLY_LOADED_SERVICES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ConsentService,\n  GoogleAnalyticsSyncService,\n  LocalStorageSyncService,\n]\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/src/lib/services/globals/globals.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        global\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalThis\n\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/src/lib/analytics/tracking.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        INITIAL_TELEMETRY_SETTING\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getTelemetryStorageSetting()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOCAL_STORAGE_ALLOW_TELEMETRY_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ALLOW_TELEMETRY'\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOCAL_STORAGE_CONSENT_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Key under which consent is stored', {\n  providedIn: 'root',\n  factory: () => 'ALLOW_TELEMETRY'\n})\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/rxjs-ext/src/public-api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        placeholder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : undefined\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
