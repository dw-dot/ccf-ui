var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AnalyticsModule.html",[0,1.478,1,2.712]],["body/modules/AnalyticsModule.html",[1,5.453,2,1.686,3,2.179,4,4.163,5,4.163,6,3.903,7,0.014,8,4.554,9,4.554,10,2.348,11,1.817,12,1.462,13,0.137,14,0.172,15,0.137,16,0.134,17,3.212,18,4.294,19,1.108,20,3.143,21,4.778,22,5.378,23,5.411,24,0.931,25,4.778,26,1.147,27,0.776,28,0.383,29,0.836,30,3.472,31,0.747,32,5.958,33,0.383,34,5.378,35,2.601,36,0.322,37,4.854,38,5.378,39,2.687,40,3.143,41,3.001,42,3.454,43,5.378,44,3.757,45,2.687,46,0.222,47,0.426,48,4.163,49,0.807,50,5.958,51,5.958,52,5.958,53,1.686,54,1.196,55,4.944,56,2.027,57,3.757,58,3.143,59,1.219,60,4.163,61,2.323,62,1.533,63,2.323,64,4.163,65,4.163,66,4.854,67,4.163,68,1.686,69,2.323,70,3.454,71,1.963,72,3.011,73,4.163,74,2.13,75,4.163,76,1.75,77,4.163,78,0.087,79,4.163,80,4.163,81,0.008,82,0.01,83,0.008]],["title/interfaces/AnalyticsOptions.html",[23,2.917,47,0.359]],["body/interfaces/AnalyticsOptions.html",[1,4.196,6,3.178,7,0.014,8,3.708,9,3.708,13,0.14,14,0.175,15,0.14,16,0.105,17,3.268,18,4.096,20,2.475,22,4.234,23,5.26,28,0.583,29,1.347,30,2.734,32,5.438,33,0.385,34,5.438,35,2.622,36,0.327,37,4.908,38,5.438,39,2.734,40,3.178,41,3.035,42,3.514,43,5.438,44,3.822,45,2.734,46,0.225,47,0.433,48,6.339,49,0.945,50,6.709,51,6.709,52,6.709,53,2.434,54,1.206,55,4.984,56,2.049,57,3.822,58,3.178,59,1.226,60,4.234,61,2.363,62,1.545,63,2.363,64,4.234,65,4.234,66,4.908,67,4.234,68,1.716,69,2.363,70,3.514,71,1.997,72,3.063,73,4.234,74,2.166,75,4.234,76,1.78,77,4.234,78,0.088,79,4.234,80,4.234,81,0.008,82,0.01,83,0.008,84,1.54,85,0.411,86,0.869]],["title/interfaces/ApiEndpointDataSourceOptions.html",[47,0.359,87,2.542]],["body/interfaces/ApiEndpointDataSourceOptions.html",[7,0.014,13,0.099,14,0.178,15,0.099,16,0.075,18,2.055,28,0.536,29,0.866,33,0.382,36,0.233,46,0.178,47,0.515,49,0.928,54,1.169,56,1.626,59,1.335,76,2.772,78,0.063,81,0.006,82,0.008,83,0.006,84,1.096,85,0.293,86,0.689,87,3.121,88,1.315,89,1.945,90,1.945,91,4.567,92,4.567,93,0.866,94,2.5,95,2.325,96,1.945,97,2.968,98,1.945,99,1.945,100,2.946,101,1.945,102,1.072,103,1.542,104,1.945,105,3.581,106,4.247,107,3.581,108,2.5,109,2.5,110,2.325,111,3.581,112,2.536,113,2.647,114,0.831,115,1.421,116,2.208,117,2.055,118,2.18,119,1.221,120,3.89,121,3.33,122,2.304,123,1.848,124,1.848,125,2.522,126,2.204,127,2.5,128,3.646,129,2.5,130,4.247,131,5.686,132,3.981,133,3.89,134,2.692,135,2.5,136,2.18,137,3.553,138,2.055,139,2.325,140,2.5,141,2.325,142,2.5,143,2.5,144,2.5,145,2.055,146,2.18,147,2.18,148,2.18,149,2.325,150,1.177,151,1.761,152,1.682,153,3.646,154,0.965,155,2.18,156,3.33,157,2.18,158,2.325,159,2.18,160,2.5,161,4.213,162,1.542,163,2.18,164,2.408,165,2.002,166,3.33,167,2.325,168,2.18,169,3.581,170,2.055,171,2.5,172,2.055,173,2.5,174,2.5,175,1.315,176,1.221,177,2.18,178,1.058,179,1.136,180,2.119,181,0.804,182,2.786,183,2.786,184,2.5,185,1.609,186,4.183,187,2.5,188,4.833,189,1.609,190,2.5,191,1.609,192,2.5,193,1.609,194,5.392,195,2.5,196,1.609,197,2.5,198,1.609,199,2.5,200,5.029,201,1.609,202,2.5,203,1.609,204,2.5,205,1.609,206,2.5,207,1.609,208,2.5,209,1.609,210,2.5,211,3.121,212,1.609,213,2.5,214,1.609,215,4.183,216,2.692,217,4.183,218,2.5,219,2.325,220,2.5,221,2.5,222,2.5,223,2.5,224,2.5,225,2.5,226,2.5,227,2.5,228,2.5,229,2.5,230,2.5]],["title/injectables/ApiEndpointDataSourceService.html",[93,0.706,177,2.542]],["body/injectables/ApiEndpointDataSourceService.html",[7,0.014,13,0.074,14,0.144,15,0.074,16,0.166,18,1.539,19,0.926,24,1.48,26,1.771,27,1.145,28,0.609,29,1.233,31,1.178,33,0.353,36,0.174,46,0.144,47,0.434,49,0.859,54,1.035,56,1.311,59,1.27,76,2.823,78,0.047,81,0.004,82,0.006,83,0.004,85,0.219,87,1.632,88,2.911,89,4.305,90,1.457,91,1.872,92,1.872,93,0.698,94,1.872,95,1.741,96,1.457,97,3.052,98,1.457,99,1.457,100,2.482,101,1.457,102,0.864,103,1.154,104,1.457,105,3.96,106,3.683,107,2.887,108,1.872,109,1.872,110,1.741,111,2.887,112,2.573,113,2.134,114,0.622,115,1.064,116,1.78,117,1.539,118,1.632,119,0.914,120,3.277,121,2.685,122,2.548,123,1.384,124,1.384,125,2.033,126,1.981,127,1.872,128,3.072,129,1.872,130,4.74,131,5.637,132,4.649,133,4.381,134,2.753,135,2.887,136,1.632,137,3.081,138,1.539,139,1.741,140,1.872,141,1.741,142,1.872,143,1.872,144,1.872,145,1.539,146,1.632,147,1.632,148,1.632,149,1.741,150,0.882,151,1.319,152,1.259,153,3.072,154,0.778,155,1.632,156,2.685,157,1.632,158,1.741,159,1.632,160,1.872,161,3.729,162,1.154,163,1.632,164,1.942,165,1.736,166,2.685,167,1.741,168,1.632,169,2.887,170,1.539,171,1.872,172,1.539,173,1.872,174,1.872,175,0.985,176,0.914,177,2.517,178,0.792,179,1.311,180,2.274,181,0.649,182,2.742,183,3.081,184,1.872,185,2.548,186,3.524,187,1.872,188,5.097,189,2.548,190,1.872,191,2.548,192,1.872,193,2.548,194,4.991,195,1.872,196,2.548,197,1.872,198,2.548,199,1.872,200,5.265,201,1.858,202,1.872,203,1.858,204,1.872,205,1.858,206,1.872,207,1.858,208,1.872,209,1.858,210,1.872,211,2.517,212,1.858,213,1.872,214,1.858,215,4.991,216,2.909,217,4.711,218,1.872,219,1.741,220,1.872,221,1.872,222,1.872,223,1.872,224,1.872,225,1.872,226,1.872,227,1.872,228,1.872,229,1.872,230,1.872,231,1.023,232,2.134,233,2.134,234,2.134,235,2.134,236,2.134,237,2.134,238,2.59,239,2.59,240,4.875,241,2.59,242,3.28,243,2.59,244,2.59,245,2.949,246,2.59,247,2.59,248,2.59,249,2.59,250,2.59,251,2.59,252,2.59,253,2.59,254,2.59,255,2.59,256,2.59,257,2.59]],["title/interfaces/AutoCompleteOption.html",[47,0.359,258,2.917]],["body/interfaces/AutoCompleteOption.html",[7,0.014,13,0.112,14,0.14,15,0.112,16,0.085,27,0.634,28,0.432,29,1.223,30,3.034,31,0.611,33,0.37,36,0.263,46,0.222,47,0.348,49,0.891,54,0.943,56,1.282,59,0.909,62,1.209,68,1.378,72,3.399,78,0.098,81,0.006,82,0.009,83,0.006,84,1.237,85,0.33,86,0.751,102,1.167,112,1.709,114,0.937,115,1.604,116,1.74,117,2.319,119,1.378,137,2.196,154,1.204,162,1.74,164,1.898,165,2.349,170,2.319,175,1.485,176,1.378,179,1.282,180,1.709,181,1.175,258,3.899,259,2.625,260,2.625,261,2.822,262,1.076,263,3.899,264,4.699,265,5.056,266,6.03,267,4.481,268,4.068,269,4.488,270,4.154,271,3.399,272,3.899,273,3.302,274,1.74,275,1.162,276,3.034,277,1.67,278,2.196,279,3.899,280,2.66,281,3.475,282,4.699,283,2.822,284,5.241,285,2.822,286,3.626,287,3.399,288,4.699,289,2.086,290,1.543,291,1.988,292,1.539,293,5.241,294,5.941,295,3.07,296,3.07,297,2.822,298,2.822,299,2.46,300,2.596,301,2.935,302,5.687,303,3.401,304,3.07,305,1.282,306,1.43,307,3.401,308,1.43,309,3.401,310,1.74,311,1.74,312,1.543,313,1.485,314,1.67,315,1.67,316,3.626,317,3.401,318,3.401,319,3.401,320,3.401,321,1.898,322,3.401,323,5.806,324,3.401,325,3.401,326,3.475,327,5.383,328,3.894,329,1.898,330,3.401,331,3.07,332,2.46,333,3.401,334,3.07,335,4.699,336,4.699,337,3.401,338,3.401,339,1.988,340,1.816,341,1.65,342,4.699,343,3.401,344,3.401,345,3.401,346,2.822,347,3.401,348,3.07,349,2.319,350,3.401,351,2.319,352,3.401,353,3.401]],["title/modules/BodyUiModule.html",[0,1.478,354,2.917]],["body/modules/BodyUiModule.html",[2,2.089,3,2.489,7,0.014,10,2.681,11,2.251,12,1.81,13,0.17,14,0.213,15,0.17,16,0.128,33,0.385,35,2.681,36,0.398,46,0.213,71,2.432,78,0.108,81,0.009,82,0.011,83,0.009,354,5.904,355,5.156,356,5.156,357,5.156,358,3.447,359,4.654,360,4.654,361,5.919,362,3.016,363,3.016,364,3.143,365,2.432,366,2.432,367,5.919]],["title/injectables/CCFDatabaseDataSourceBaseService.html",[93,0.706,368,2.542]],["body/injectables/CCFDatabaseDataSourceBaseService.html",[7,0.014,13,0.099,14,0.227,15,0.099,16,0.145,19,1.145,24,1.565,26,1.873,27,1.228,28,0.625,29,1.322,31,1.237,33,0.366,36,0.232,46,0.178,47,0.307,49,0.582,54,1.009,59,0.973,76,1.261,78,0.105,81,0.006,82,0.008,83,0.006,85,0.291,86,0.687,88,2.538,93,1.102,97,2.966,102,0.745,103,3.262,112,2.557,114,0.827,115,1.415,116,1.535,119,1.215,122,2.932,123,1.84,124,1.84,126,1.091,151,1.753,152,3.245,154,0.671,175,1.309,176,1.215,179,1.13,180,1.829,181,1.128,183,1.936,185,2.684,189,2.684,191,2.684,193,2.684,196,2.684,198,2.684,201,1.601,203,1.601,205,1.601,207,1.601,209,1.601,212,1.601,214,1.601,216,1.601,231,1.36,232,2.638,233,2.638,234,2.638,235,2.638,236,2.638,237,2.638,242,3.231,349,3.428,351,2.932,368,3.972,369,4.487,370,2.314,371,3.245,372,3.21,373,3.246,374,4.172,375,3.911,376,3.712,377,3.882,378,2.932,379,3.319,380,4.937,381,2.707,382,4.695,383,5.466,384,3.443,385,4.557,386,4.557,387,3.443,388,2.169,389,3.246,390,2.932,391,5.284,392,4.168,393,2.314,394,2.314,395,2.314,396,2.314,397,2.314,398,2.314,399,2.314,400,2.314,401,2.314,402,2.314,403,2.314,404,2.314,405,2.314,406,2.707,407,3.569,408,3.569,409,2.489,410,3.569,411,2.489,412,2.314,413,3.569,414,3.111,415,1.936,416,1.84,417,2.314,418,2.314,419,2.489,420,2.314,421,2.489,422,2.489,423,1.13,424,2.489,425,2.489,426,2.489,427,2.489,428,2.489,429,2.045,430,3.569,431,2.489,432,2.314,433,2.314,434,2.489,435,2.169,436,2.489,437,3.319,438,2.169,439,2.489,440,3.319,441,2.489,442,2.489,443,2.489,444,2.489]],["title/injectables/CCFDatabaseDataSourceService.html",[93,0.706,435,2.542]],["body/injectables/CCFDatabaseDataSourceService.html",[7,0.014,13,0.101,14,0.229,15,0.101,16,0.076,19,1.161,24,1.562,26,1.863,27,1.216,28,0.622,29,1.309,31,1.241,33,0.368,36,0.236,46,0.18,47,0.313,49,0.59,54,1.02,59,0.983,76,1.285,78,0.106,81,0.006,82,0.008,83,0.006,85,0.297,86,0.697,88,1.334,93,1.112,97,2.973,102,0.759,103,3.278,112,2.563,114,0.842,115,1.442,116,1.564,119,1.238,122,2.327,123,1.875,124,1.875,126,1.112,151,1.786,152,3.269,154,0.683,175,1.334,176,1.238,180,1.848,181,1.135,185,2.713,189,2.713,191,2.713,193,2.713,196,2.713,198,2.713,201,1.632,203,1.632,205,1.632,207,1.632,209,1.632,212,1.632,214,1.632,216,1.632,231,1.386,232,2.674,233,2.674,234,2.674,235,2.674,236,2.674,237,2.674,242,3.251,349,3.465,351,2.972,368,4.533,369,2.359,370,2.359,371,3.269,372,2.969,373,3.28,374,4.216,375,3.93,376,3.398,377,3.934,378,2.972,379,2.359,381,2.759,382,4.716,383,5.489,385,4.597,386,4.597,388,2.211,389,3.28,390,2.972,391,5.391,392,4.182,393,2.359,394,2.359,395,2.359,396,2.359,397,2.359,398,2.359,399,2.359,400,2.359,401,2.359,402,2.359,403,2.359,404,2.359,405,2.359,406,2.759,407,3.617,408,3.617,409,2.536,410,3.617,411,2.536,412,2.359,413,3.617,414,3.153,415,1.973,416,1.875,417,2.359,418,2.359,419,2.536,420,2.359,421,2.536,422,2.536,423,1.152,424,2.536,425,2.536,426,2.536,427,2.536,428,2.536,429,2.084,430,3.617,431,2.536,432,2.359,433,2.359,434,2.536,435,3.153,436,2.536,437,3.364,438,2.211,439,2.536,440,3.364,441,2.536,442,2.536,443,2.536,444,2.536,445,3.509,446,3.057,447,3.057]],["title/interfaces/CCFDatabaseManager.html",[47,0.359,382,2.542]],["body/interfaces/CCFDatabaseManager.html",[7,0.014,13,0.135,14,0.258,15,0.135,16,0.102,28,0.377,33,0.398,36,0.316,46,0.22,47,0.419,54,1.186,59,1.144,76,1.721,78,0.124,81,0.008,82,0.01,83,0.008,84,1.489,85,0.397,86,0.85,88,1.787,93,1.256,97,1.721,102,1.017,103,3.549,112,2.276,114,1.128,115,1.931,116,2.094,119,1.658,122,2.841,123,2.511,124,2.511,126,1.489,151,2.392,152,2.969,154,0.915,175,1.787,176,1.658,180,1.489,181,0.992,349,2.791,351,2.791,368,4.275,369,3.159,370,3.159,371,3.62,372,3.109,373,2.643,374,3.397,375,3.839,376,3.839,379,3.159,382,4.896,383,5.517,385,4.905,386,4.905,407,4.415,408,5.193,409,3.397,410,5.193,411,3.397,412,3.159,413,4.905,414,3.848,415,2.643,416,2.511,417,3.159,418,3.159,419,3.397,420,3.159,421,3.397,422,3.397,423,1.543,424,3.397,425,3.397,426,3.397,427,3.397,428,3.397,429,2.791,430,4.415,431,3.397,432,3.159,433,3.159,434,3.397,435,2.961,436,3.397,437,4.105,438,2.961,439,3.397,440,4.105,441,3.397,442,3.397,443,3.397,444,3.397]],["title/components/CallToActionBehaviorComponent.html",[275,0.758,448,1.534]],["body/components/CallToActionBehaviorComponent.html",[7,0.014,13,0.201,14,0.142,15,0.113,16,0.161,24,1.413,27,1.008,28,0.536,31,0.616,33,0.371,36,0.265,46,0.142,62,1.216,78,0.072,81,0.006,82,0.009,83,0.006,85,0.333,86,0.755,102,1.746,112,2.434,150,1.34,154,1.057,181,1.327,245,2.98,262,1.085,274,1.755,275,1.319,285,2.846,290,1.556,292,1.548,300,1.293,301,1.442,305,2.661,306,1.987,308,1.987,310,2.418,311,2.418,312,1.556,313,2.063,358,1.618,366,1.618,448,2.544,449,2.418,450,1.914,451,1.618,452,1.914,453,1.832,454,4.996,455,3.286,456,4.996,457,3.43,458,3.647,459,3.223,460,3.419,461,3.223,462,3.223,463,3.922,464,4.266,465,1.755,466,2.922,467,3.922,468,6.208,469,5.426,470,3.491,471,3.491,472,4.173,473,4.179,474,3.911,475,3.018,476,5.426,477,3.938,478,7.016,479,3.938,480,5.426,481,2.32,482,5.426,483,3.938,484,3.938,485,5.426,486,3.419,487,3.051,488,3.647,489,5.426,490,3.938,491,5.426,492,3.938,493,2.647,494,3.43,495,3.43,496,2.005,497,3.938,498,3.491,499,5.426,500,2.524,501,3.096,502,2.846,503,3.938,504,1.914,505,2.144,506,1.618,507,3.252,508,1.914,509,1.914,510,1.914,511,1.618,512,1.914,513,1.497,514,1.914,515,1.618,516,1.914,517,1.442,518,1.914,519,1.618,520,1.755,521,1.914,522,1.618,523,1.556,524,1.914,525,1.556,526,1.914,527,1.618,528,1.832,529,1.914,530,1.914,531,1.618,532,1.684,533,1.914,534,1.618,535,1.832,536,1.618,537,1.832,538,1.556,539,1.832,540,1.914]],["title/modules/CallToActionBehaviorModule.html",[0,1.478,541,2.917]],["body/modules/CallToActionBehaviorModule.html",[2,1.959,3,2.394,7,0.014,10,2.58,11,2.111,12,1.698,13,0.159,14,0.2,15,0.159,16,0.12,33,0.416,35,2.58,36,0.374,46,0.2,71,2.787,78,0.101,81,0.009,82,0.011,83,0.009,362,2.902,363,2.902,364,3.024,365,2.281,448,3.165,454,3.732,455,2.895,456,3.732,466,2.58,496,2.826,500,2.582,541,5.928,542,4.836,543,4.836,544,4.836,545,4.836,546,5.353,547,5.552,548,4.03,549,3.298,550,5.334,551,3.122,552,5.91,553,4.836,554,4.365,555,5.552,556,6.784]],["title/components/CallToActionComponent.html",[275,0.758,511,1.658]],["body/components/CallToActionComponent.html",[7,0.014,13,0.221,14,0.116,15,0.093,16,0.164,19,1.092,24,1.451,27,0.903,28,0.576,31,0.736,33,0.165,36,0.217,46,0.116,49,0.865,56,2.008,62,1.055,78,0.124,81,0.005,82,0.008,83,0.005,85,0.273,86,0.655,102,1.739,150,1.098,154,0.917,181,1.056,245,1.325,262,0.889,269,2.797,273,2.516,274,1.437,275,1.378,276,3.658,277,1.379,280,2.473,281,3.128,290,1.274,292,1.343,300,1.059,301,1.181,305,2.588,306,1.724,308,1.724,310,2.099,311,2.099,312,1.274,313,2.473,314,2.014,315,2.379,358,1.325,366,1.325,448,1.226,449,2.099,450,1.568,451,1.325,452,1.568,453,1.5,454,5.076,455,2.897,458,5.076,459,3.633,460,3.504,461,2.797,462,2.797,463,3.404,464,3.702,465,1.437,466,2.932,470,3.128,471,3.82,472,3.739,474,4.53,475,2.704,481,2.014,500,3.512,504,1.568,505,1.86,506,1.325,507,2.973,508,1.568,509,1.568,510,1.568,511,2.513,512,1.568,513,1.226,514,1.568,515,1.325,516,1.568,517,1.181,518,1.568,519,1.325,520,1.437,521,1.568,522,1.325,523,1.274,524,1.568,525,1.274,526,1.568,527,1.325,528,1.5,529,1.568,530,1.568,531,1.325,532,1.379,533,1.568,534,1.325,535,1.5,536,1.935,537,1.5,538,1.274,539,1.5,540,1.568,557,2.81,558,5.562,559,4.709,560,5.327,561,2.797,562,3.863,563,3.404,564,5.562,565,5.562,566,2.648,567,3.225,568,3.225,569,2.397,570,3.165,571,3.404,572,3.225,573,3.225,574,3.702,575,5.327,576,3.225,577,6.116,578,6.116,579,5.327,580,3.225,581,4.709,582,3.225,583,4.102,584,4.111,585,1.52,586,3.225,587,3.702,588,4.709,589,2.797,590,3.225,591,3.225,592,3.702,593,1.723,594,2.099,595,2.014,596,2.168,597,3.304,598,2.797,599,4.715,600,2.797,601,4.709,602,2.967,603,4.02,604,4.373,605,4.709,606,2.331,607,2.536,608,3.225,609,3.404,610,2.81,611,2.331,612,2.331,613,4.02,614,2.331,615,3.739,616,4.421,617,3.225,618,2.81,619,2.536,620,2.032,621,3.225,622,1.814,623,2.587,624,3.504,625,2.648,626,3.439,627,3.225,628,3.225,629,4.102,630,3.225,631,2.331,632,4.709,633,3.702,634,3.404,635,2.81,636,3.225,637,3.225,638,2.536,639,1.916,640,4.102,641,3.225,642,2.81,643,2.536,644,2.168,645,3.225,646,2.331,647,3.225,648,2.81,649,1.916,650,2.536,651,2.168,652,3.225]],["title/interfaces/CallToActionModel.html",[47,0.359,653,2.712]],["body/interfaces/CallToActionModel.html",[7,0.014,13,0.169,14,0.129,15,0.103,16,0.077,20,1.819,27,0.58,28,0.564,31,0.793,33,0.398,36,0.241,39,2.01,40,1.819,41,1.737,45,2.01,46,0.182,47,0.571,49,0.944,53,2.482,54,1.292,56,1.173,59,0.993,61,1.737,74,2.626,78,0.065,81,0.006,82,0.008,83,0.006,84,1.132,85,0.302,86,0.706,93,0.887,112,2.032,114,0.858,115,1.468,118,2.252,119,1.261,126,1.606,150,1.725,154,0.988,178,1.093,179,1.173,180,2.228,181,1.1,262,0.985,275,0.672,300,1.173,301,1.857,321,2.864,341,2.071,448,1.359,455,2.328,456,2.402,466,1.359,467,2.583,470,4.068,472,4.551,473,2.01,474,4.266,475,3.419,481,3.093,486,3.194,487,2.851,496,1.819,498,2.01,500,1.662,501,2.81,517,1.309,551,2.01,554,2.81,569,1.819,584,2.402,585,1.593,594,2.26,623,2.358,626,2.01,633,3.986,653,3.408,654,2.01,655,2.583,656,4.416,657,5.133,658,4.416,659,5.687,660,5.811,661,3.408,662,2.252,663,3.986,664,4.416,665,3.148,666,5.898,667,3.986,668,3.113,669,2.709,670,2.851,671,4.416,672,1.819,673,2.402,674,2.01,675,2.583,676,3.408,677,3.113,678,2.583,679,3.113,680,3.011,681,2.583,682,2.81,683,2.583,684,2.583,685,2.81,686,2.402,687,2.81,688,3.986,689,2.583,690,2.583,691,2.81,692,2.252,693,3.194,694,3.961,695,2.81,696,2.583,697,3.113,698,3.113,699,3.113,700,2.123,701,2.81,702,3.113,703,2.402,704,2.81,705,3.113,706,3.113,707,3.113,708,4.633,709,3.113,710,2.583,711,3.113,712,3.113,713,3.113,714,4.416,715,4.416,716,3.113,717,2.583,718,3.113,719,2.402,720,3.113,721,3.113,722,4.416,723,3.113,724,4.416,725,3.113,726,4.416,727,3.113,728,3.113,729,3.113,730,3.113,731,2.402,732,3.113,733,3.113,734,3.986,735,3.113,736,2.81,737,3.986,738,3.986,739,3.194,740,3.986,741,2.81,742,2.01,743,3.113,744,2.252,745,2.402,746,3.113,747,3.113,748,3.113,749,4.416,750,3.113,751,5.133,752,3.113,753,3.113,754,3.113,755,3.113,756,3.113,757,3.113,758,3.113,759,3.113,760,3.113,761,3.113,762,3.113,763,3.113,764,2.583,765,3.113,766,3.113,767,3.113,768,3.113,769,3.113]],["title/modules/CallToActionModule.html",[0,1.478,546,2.712]],["body/modules/CallToActionModule.html",[2,2.04,3,2.453,7,0.014,10,2.643,11,2.197,12,1.768,13,0.166,14,0.208,15,0.166,16,0.125,33,0.411,35,2.643,36,0.389,46,0.208,71,2.374,78,0.105,81,0.009,82,0.011,83,0.009,362,2.973,363,2.973,364,3.098,365,2.374,454,3.885,466,2.197,500,2.688,511,3.437,546,5.465,548,4.129,549,3.433,550,5.466,551,3.25,552,6.056,553,5.034,770,5.034,771,5.034,772,5.034,773,5.779,774,5.779]],["title/classes/CallToActionSelectors.html",[78,0.073,502,2.917]],["body/classes/CallToActionSelectors.html",[7,0.014,13,0.135,14,0.169,15,0.135,16,0.168,19,1.418,20,4.239,24,1.487,26,1.833,27,1.24,28,0.612,29,1.335,31,1.194,33,0.313,46,0.169,49,0.948,53,2.157,59,1.287,78,0.086,81,0.008,82,0.01,83,0.008,85,0.398,245,3.137,305,1.545,466,1.789,470,3.438,472,4.109,474,3.851,475,2.972,496,2.395,500,3.615,502,4.418,653,5.61,654,4.372,659,4.806,660,4.806,665,4.08,703,3.163,775,2.287,776,4.099,777,6.112,778,7.635,779,4.705,780,6.112,781,4.705,782,6.112,783,4.705,784,6.112,785,4.705,786,6.112,787,4.705,788,6.112,789,4.705,790,4.705,791,7.635,792,4.705,793,4.705,794,4.705,795,4.705,796,4.705,797,4.705]],["title/injectables/CallToActionState.html",[93,0.706,703,2.712]],["body/injectables/CallToActionState.html",[7,0.014,13,0.184,14,0.111,15,0.089,16,0.157,19,1.058,20,2.762,24,1.383,26,1.661,27,1.153,28,0.554,29,1.21,31,1.154,33,0.387,36,0.208,39,1.738,40,1.573,41,1.502,45,3.051,46,0.164,47,0.483,49,0.838,53,2.361,54,1.242,56,1.498,59,0.914,61,1.502,62,0.692,74,2.418,78,0.056,81,0.005,82,0.007,83,0.005,85,0.261,93,0.798,112,2.192,114,0.742,115,1.269,118,1.947,119,1.09,126,1.446,150,1.553,154,0.889,178,0.945,179,1.498,180,2.25,181,1.038,231,1.221,245,2.229,262,0.851,275,0.581,292,0.881,300,1.014,301,1.671,321,2.637,341,1.955,448,1.175,455,2.143,456,2.077,466,1.175,467,2.233,470,3.369,471,2.566,472,3.067,473,3.051,474,2.875,475,2.637,481,3.199,486,3.418,487,3.051,488,3.067,496,1.573,498,1.738,500,3.373,501,2.429,517,1.131,551,1.738,554,2.429,569,2.323,584,3.067,585,1.765,594,2.418,623,2.122,626,1.738,633,2.429,653,2.077,654,4.079,655,2.233,656,2.691,657,4.726,658,2.691,659,5.025,660,5.025,661,4.027,662,1.947,663,4.71,664,5.219,665,2.899,666,6.663,667,4.71,668,2.691,669,3.201,670,3.369,671,3.975,672,1.573,673,2.077,674,1.738,675,2.233,676,4.027,677,2.691,678,2.233,679,2.691,680,2.71,681,2.233,682,2.429,683,2.233,684,2.233,685,2.429,686,2.077,687,2.429,688,4.265,689,2.233,690,2.233,691,2.429,692,2.875,693,3.418,694,4.496,695,2.429,696,2.233,697,2.691,698,2.691,699,2.691,700,1.835,701,2.429,702,2.691,703,3.067,704,3.587,705,3.975,706,3.975,707,3.975,708,5.025,709,3.975,710,3.298,711,3.975,712,3.975,713,3.975,714,3.975,715,3.975,716,2.691,717,3.921,718,4.726,719,3.647,720,3.975,721,2.691,722,3.975,723,2.691,724,3.975,725,2.691,726,3.975,727,2.691,728,3.975,729,5.219,730,2.691,731,2.077,732,2.691,733,2.691,734,4.71,735,3.975,736,2.429,737,3.587,738,3.587,739,2.875,740,3.587,741,2.429,742,1.738,743,2.691,744,2.875,745,3.067,746,4.726,747,3.975,748,3.975,749,3.975,750,2.691,751,4.726,752,2.691,753,2.691,754,2.691,755,4.726,756,3.975,757,3.975,758,2.691,759,2.691,760,2.691,761,2.691,762,2.691,763,2.691,764,3.298,765,3.975,766,2.691,767,3.975,768,3.975,769,2.691,798,4.563,799,4.563,800,2.691,801,3.089,802,3.089,803,3.089,804,3.089,805,3.089,806,3.089,807,3.089,808,3.089]],["title/classes/CloseDialog.html",[78,0.073,498,2.269]],["body/classes/CloseDialog.html",[7,0.013,13,0.171,14,0.215,15,0.171,16,0.153,20,4.065,24,1.162,28,0.606,46,0.272,49,0.704,62,1.337,78,0.138,81,0.01,82,0.011,83,0.01,85,0.505,86,0.986,181,1.297,292,1.702,470,3.356,471,3.985,473,3.356,481,3.232,486,3.76,487,3.356,488,4.011,498,3.985,500,3.296,654,3.985,680,3.544,775,2.901,809,4.313,810,5.967,811,5.942]],["title/injectables/ConsentService.html",[6,2.054,93,0.706]],["body/injectables/ConsentService.html",[6,3.349,7,0.014,13,0.152,14,0.19,15,0.152,16,0.173,19,1.526,24,1.532,26,1.268,27,0.858,28,0.574,29,0.923,31,1.121,33,0.336,36,0.355,46,0.237,62,1.729,68,2.647,78,0.096,81,0.008,82,0.011,83,0.008,85,0.447,86,0.916,93,1.15,114,1.268,154,1.281,178,1.615,179,2.352,181,1.164,231,2.086,292,1.876,585,1.955,812,4.152,813,5.124,814,7.165,815,4.454,816,6.578,817,7.499,818,6.578,819,5.28,820,6.578,821,5.28,822,5.28,823,5.28,824,6.578,825,3.907,826,5.28,827,3.817,828,3.55,829,5.28,830,5.28,831,6.578,832,5.28,833,5.28]],["title/interfaces/DataSource.html",[47,0.359,125,2.054]],["body/interfaces/DataSource.html",[7,0.014,13,0.107,14,0.134,15,0.107,16,0.171,19,1.211,24,1.528,26,1.822,27,1.158,28,0.623,29,1.246,31,1.227,33,0.308,46,0.263,47,0.332,49,0.77,59,1.333,78,0.095,81,0.006,82,0.008,83,0.006,84,1.181,85,0.315,88,3.006,96,2.096,97,3.09,98,2.096,99,2.096,100,1.897,101,2.096,102,0.806,103,1.661,104,2.096,112,2.676,114,0.895,116,1.661,119,1.315,125,3.325,162,1.661,178,1.14,181,0.605,185,3.199,189,3.199,191,3.199,193,3.199,196,3.199,198,3.199,201,2.803,203,2.803,205,2.803,207,2.803,209,2.803,212,2.803,214,2.428,216,2.428,232,2.79,233,2.79,234,2.79,235,2.79,236,2.79,237,2.79,242,3.315,286,4.052,371,1.811,372,1.897,373,2.096,375,2.79,376,3.49,378,3.101,389,3.39,390,3.58,392,2.79,416,1.991,834,4.981,835,2.505,836,3.726,837,3.726,838,3.726,839,3.726,840,3.726,841,3.726,842,3.726,843,3.726,844,3.726,845,3.726,846,3.726,847,3.726,848,3.774,849,2.93,850,3.774,851,2.693,852,2.93,853,2.693,854,2.93,855,2.93,856,2.93,857,2.93,858,2.93,859,2.93,860,2.93,861,2.93,862,2.93,863,2.93,864,2.93,865,2.93,866,2.93,867,2.93,868,2.93,869,2.93,870,2.93,871,2.93]],["title/injectables/DataSourceService.html",[93,0.706,872,3.172]],["body/injectables/DataSourceService.html",[7,0.013,13,0.123,14,0.206,15,0.123,16,0.175,19,1.329,24,1.563,26,1.784,27,1.206,28,0.595,29,1.299,31,1.255,33,0.354,36,0.287,46,0.154,49,0.763,78,0.078,81,0.007,82,0.009,83,0.007,85,0.361,88,3.07,93,1.002,96,2.4,97,3.075,98,2.4,99,2.4,100,2.173,101,2.4,102,0.924,103,1.902,104,2.4,112,2.652,114,1.025,125,2.917,126,1.352,178,1.305,185,3.217,189,3.217,191,3.217,193,3.217,196,3.217,198,3.217,201,2.665,203,2.665,205,2.665,207,2.665,209,2.665,212,2.665,214,1.985,231,1.686,232,3.062,233,3.062,234,3.062,235,3.062,236,3.062,237,3.062,242,3.455,376,4.532,834,5.087,872,4.506,873,3.717,874,4.267,875,4.267,876,4.267,877,4.267,878,4.267,879,4.267,880,4.267,881,4.267,882,4.267,883,4.267,884,4.267,885,4.267]],["title/interfaces/DecoratedRange.html",[47,0.359,289,2.156]],["body/interfaces/DecoratedRange.html",[7,0.014,13,0.14,14,0.176,15,0.14,16,0.106,28,0.584,31,0.764,46,0.176,47,0.435,49,0.815,54,1.275,56,1.604,58,3.519,59,1.056,62,1.095,68,2.211,81,0.008,82,0.01,83,0.008,84,1.548,85,0.698,86,0.872,164,3.749,165,2.562,262,1.347,289,3.694,291,2.488,341,1.916,423,2.269,451,3.296,639,2.903,644,3.285,775,3.9,886,2.903,887,3.842,888,3.285,889,6.307,890,7.942,891,4.528,892,6.263,893,6.566,894,7.291,895,4.901,896,6.263,897,4.257,898,3.285,899,4.257,900,2.488,901,5.182,902,4.257,903,4.257,904,2.611,905,4.257,906,4.257,907,4.887,908,4.887,909,4.887,910,3.532]],["title/components/DecoratedTextComponent.html",[275,0.758,513,1.534]],["body/components/DecoratedTextComponent.html",[7,0.014,12,1.142,13,0.132,14,0.085,15,0.068,16,0.157,19,0.866,24,1.389,26,1.364,27,1.139,28,0.551,29,0.994,31,1.097,33,0.191,36,0.16,46,0.134,47,0.332,49,0.793,54,1.203,58,1.9,59,1.064,62,1.033,68,0.838,69,2.541,78,0.119,81,0.008,82,0.006,83,0.004,85,0.534,86,0.84,97,0.869,102,1.655,150,0.808,154,1.107,164,2.541,165,1.182,178,1.142,180,2.367,181,0.749,245,0.975,262,1.662,267,5.023,270,2.509,271,3.294,274,1.058,275,0.867,277,1.015,280,1.753,289,4.057,290,3.039,291,3.683,292,1.315,300,2.684,301,0.869,305,2.453,306,1.367,308,1.367,310,1.663,311,1.663,312,0.938,313,2.161,314,1.596,315,1.972,326,2.099,329,3.345,339,3.071,340,1.736,341,1.599,358,0.975,366,0.975,423,1.514,448,0.903,449,1.663,450,1.154,451,2.686,452,1.154,453,1.104,455,0.938,465,1.058,466,1.419,504,1.154,505,1.475,506,0.975,507,2.541,508,1.154,509,1.154,510,1.154,511,0.975,512,1.154,513,1.988,514,1.154,515,0.975,516,1.154,517,0.869,518,1.154,519,0.975,520,1.058,521,1.154,522,0.975,523,0.938,524,1.154,525,0.938,526,1.154,527,0.975,528,1.104,529,1.154,530,1.154,531,0.975,532,1.015,533,1.154,534,0.975,535,1.104,536,0.975,537,1.104,538,0.938,539,1.104,540,1.154,561,2.217,566,2.099,585,0.927,593,1.269,595,2.58,620,2.352,622,1.335,644,2.509,775,2.933,886,4.296,888,1.596,891,2.698,898,2.509,900,3.213,901,2.352,910,1.716,911,1.716,912,2.906,913,5.875,914,3.333,915,3.626,916,2.934,917,5.82,918,4.11,919,3.732,920,4.11,921,3.732,922,3.732,923,3.732,924,3.732,925,2.374,926,5.41,927,2.934,928,2.934,929,3.626,930,2.934,931,2.374,932,3.732,933,2.374,934,2.906,935,5.104,936,2.934,937,2.374,938,2.934,939,6.082,940,4.468,941,3.626,942,4.242,943,2.374,944,2.698,945,2.934,946,2.698,947,2.934,948,2.374,949,2.374,950,4.612,951,2.374,952,2.374,953,2.934,954,2.698,955,3.779,956,2.374,957,2.934,958,2.934,959,2.698,960,2.934,961,5.139,962,2.374,963,2.698,964,4.468,965,2.698,966,2.374,967,2.698,968,2.698,969,1.596,970,1.716,971,1.867,972,2.217,973,1.716,974,1.716,975,2.698,976,2.352,977,2.352,978,1.867,979,1.867,980,2.934,981,1.867,982,2.934,983,1.867,984,1.867,985,1.496,986,2.934,987,1.867,988,3.626,989,1.716,990,1.867,991,1.867,992,2.934,993,1.867,994,1.867,995,2.934,996,1.867,997,1.716,998,2.934,999,2.934,1000,2.934,1001,1.596,1002,1.867,1003,1.41,1004,1.867,1005,1.867,1006,1.867,1007,1.867,1008,1.867,1009,1.867,1010,1.867,1011,1.867,1012,1.867,1013,1.867,1014,1.867,1015,1.867,1016,1.867,1017,1.867,1018,1.867,1019,1.867,1020,1.596,1021,1.716,1022,1.596,1023,1.867,1024,1.867,1025,1.716,1026,1.716,1027,1.867,1028,1.716,1029,1.867,1030,1.41,1031,1.867,1032,1.867,1033,1.716,1034,1.716,1035,1.867,1036,1.867,1037,1.867,1038,1.867,1039,3.732]],["title/modules/DecoratedTextModule.html",[0,1.478,1040,2.712]],["body/modules/DecoratedTextModule.html",[2,2.096,3,2.494,7,0.013,10,2.686,11,2.258,12,1.816,13,0.171,14,0.214,15,0.171,16,0.129,33,0.386,35,2.686,36,0.4,46,0.214,71,2.44,78,0.108,81,0.01,82,0.011,83,0.01,290,2.346,291,3.023,362,3.022,363,3.022,364,3.149,365,2.44,513,3.191,886,3.527,1040,5.494,1041,5.173,1042,5.173,1043,5.173,1044,5.938,1045,5.938]],["title/interfaces/DefaultParams.html",[47,0.359,136,2.542]],["body/interfaces/DefaultParams.html",[7,0.014,13,0.1,14,0.179,15,0.1,16,0.075,18,2.068,28,0.508,29,0.87,33,0.382,36,0.234,46,0.179,47,0.517,49,0.914,54,1.172,56,1.634,59,1.336,76,2.776,78,0.063,81,0.006,82,0.008,83,0.006,84,1.103,85,0.294,86,0.693,87,2.194,88,1.324,89,1.958,90,1.958,91,2.517,92,2.517,93,0.87,94,2.517,95,2.341,96,1.958,97,2.97,98,1.958,99,1.958,100,2.957,101,1.958,102,1.077,103,1.552,104,1.958,105,3.598,106,4.26,107,3.598,108,2.517,109,2.517,110,2.341,111,3.598,112,2.538,113,2.659,114,0.836,115,1.431,116,2.218,117,2.068,118,2.194,119,1.229,120,3.904,121,3.346,122,2.315,123,1.861,124,1.861,125,2.534,126,2.209,127,2.517,128,3.66,129,2.517,130,4.26,131,5.692,132,3.993,133,3.904,134,2.701,135,2.517,136,3.136,137,4.037,138,2.068,139,2.341,140,2.517,141,2.341,142,2.517,143,2.517,144,2.517,145,2.068,146,2.194,147,2.194,148,2.194,149,2.341,150,1.185,151,1.773,152,1.693,153,3.66,154,0.969,155,2.194,156,3.346,157,2.194,158,2.341,159,2.194,160,2.517,161,4.224,162,1.552,163,2.194,164,2.42,165,2.008,166,3.346,167,2.341,168,2.194,169,3.598,170,2.068,171,2.517,172,2.068,173,2.517,174,2.517,175,1.324,176,1.229,177,2.194,178,1.065,179,1.143,180,2.124,181,0.808,182,2.799,183,2.799,184,2.517,185,1.62,186,4.198,187,2.517,188,4.846,189,1.62,190,2.517,191,1.62,192,2.517,193,1.62,194,5.401,195,2.517,196,1.62,197,2.517,198,1.62,199,2.517,200,5.04,201,1.62,202,2.517,203,1.62,204,2.517,205,1.62,206,2.517,207,1.62,208,2.517,209,1.62,210,2.517,211,3.136,212,1.62,213,2.517,214,1.62,215,4.198,216,2.701,217,4.198,218,2.517,219,2.341,220,2.517,221,2.517,222,2.517,223,2.517,224,2.517,225,2.517,226,2.517,227,2.517,228,2.517,229,2.517,230,2.517]],["title/classes/DelegateDataSource.html",[78,0.073,372,2.054]],["body/classes/DelegateDataSource.html",[7,0.014,13,0.103,14,0.13,15,0.103,16,0.11,19,1.182,24,1.542,26,1.887,27,1.177,28,0.634,29,1.268,31,1.229,33,0.303,46,0.261,47,0.321,49,0.759,59,1.325,78,0.093,81,0.006,82,0.008,83,0.006,85,0.305,86,0.71,88,1.938,96,2.026,97,3.084,98,2.026,99,2.026,100,1.834,101,2.026,102,0.779,103,1.605,104,2.026,112,2.675,114,0.865,116,1.605,119,1.271,125,3.013,162,1.605,178,1.102,181,0.961,185,3.158,189,3.158,191,3.158,193,3.158,196,3.158,198,3.158,201,2.752,203,2.752,205,2.752,207,2.752,209,2.752,212,2.752,214,2.371,216,2.752,232,2.724,233,2.724,234,2.724,235,2.724,236,2.724,237,2.724,242,3.279,286,3.978,371,2.478,372,2.595,373,3.328,375,3.438,376,3.767,378,3.822,388,2.269,389,3.965,390,4.033,391,5.285,392,4.28,393,2.421,394,2.421,395,2.421,396,2.421,397,2.421,398,2.421,399,2.421,400,2.421,401,2.421,402,2.421,403,2.421,404,2.421,405,2.421,416,1.925,775,1.751,834,3.212,835,2.421,848,3.685,849,2.832,850,3.685,851,2.603,852,2.832,853,2.603,854,2.832,855,2.832,856,2.832,857,2.832,858,2.832,859,2.832,860,2.832,861,2.832,862,2.832,863,2.832,864,2.832,865,2.832,866,2.832,867,2.832,868,2.832,869,2.832,870,2.832,871,2.832,1046,3.602]],["title/interfaces/DocumentationContent.html",[47,0.359,669,2.156]],["body/interfaces/DocumentationContent.html",[7,0.014,13,0.204,14,0.165,15,0.204,16,0.099,28,0.481,31,0.716,33,0.343,36,0.308,46,0.241,47,0.535,49,0.973,54,1.325,56,1.502,59,0.771,78,0.083,81,0.007,82,0.01,83,0.007,84,1.45,85,0.387,86,0.835,93,1.05,113,2.445,114,1.099,126,1.902,154,0.891,175,1.74,176,1.615,181,0.743,262,1.261,275,0.86,300,1.502,341,1.4,475,3.808,481,2.865,562,4.386,585,1.137,589,3.979,594,3.591,661,4.035,662,2.883,669,4.049,670,2.574,672,2.33,719,3.076,731,3.076,742,4.261,900,2.33,904,2.445,1003,2.718,1047,2.445,1048,3.308,1049,4.035,1050,4.719,1051,4.035,1052,3.999,1053,4.865,1054,4.339,1055,4.719,1056,5.267,1057,3.782,1058,3.076,1059,3.308,1060,4.719,1061,3.076,1062,3.308,1063,4.719,1064,3.598,1065,3.598,1066,2.883,1067,3.598,1068,3.598,1069,3.598,1070,3.598,1071,3.598,1072,3.598,1073,3.598,1074,3.598,1075,3.598,1076,3.598,1077,3.598,1078,4.719,1079,4.719,1080,3.598,1081,3.598,1082,3.598,1083,3.598,1084,3.598,1085,3.598,1086,3.598,1087,3.598,1088,3.598,1089,3.598,1090,3.598]],["title/interfaces/FilterParams.html",[47,0.359,138,2.397]],["body/interfaces/FilterParams.html",[7,0.014,13,0.092,14,0.169,15,0.092,16,0.07,18,3.625,28,0.617,29,1.404,33,0.375,36,0.216,46,0.169,47,0.494,49,0.954,54,1.135,56,1.541,59,1.319,76,2.726,78,0.058,81,0.005,82,0.008,83,0.005,84,1.017,85,0.272,86,0.653,87,2.023,88,1.221,89,1.806,90,1.806,91,2.321,92,2.321,93,0.821,94,2.321,95,2.159,96,1.806,97,2.941,98,1.806,99,1.806,100,2.824,101,1.806,102,1.016,103,1.431,104,1.806,105,3.393,106,4.827,107,4.411,108,2.321,109,2.321,110,2.159,111,3.393,112,2.51,113,2.508,114,0.771,115,1.319,116,2.092,117,1.907,118,2.023,119,1.133,120,3.729,121,3.155,122,2.183,123,1.716,124,1.716,125,2.39,126,2.149,127,2.321,128,3.496,129,2.321,130,4.102,131,5.616,132,3.845,133,3.729,134,2.58,135,2.321,136,2.023,137,3.432,138,2.788,139,4.102,140,4.411,141,4.102,142,4.411,143,4.411,144,4.411,145,3.625,146,3.496,147,3.496,148,3.496,149,4.102,150,2.077,151,1.635,152,1.561,153,3.496,154,0.914,155,2.023,156,3.155,157,2.023,158,2.159,159,2.023,160,2.321,161,4.091,162,1.431,163,2.023,164,2.282,165,1.934,166,3.155,167,2.159,168,2.023,169,3.393,170,1.907,171,2.321,172,1.907,173,2.321,174,2.321,175,1.221,176,1.133,177,2.023,178,0.982,179,1.054,180,2.057,181,0.762,182,2.64,183,2.64,184,2.321,185,1.494,186,4.01,187,2.321,188,4.693,189,1.494,190,2.321,191,1.494,192,2.321,193,1.494,194,5.294,195,2.321,196,1.494,197,2.321,198,1.494,199,2.321,200,4.902,201,1.494,202,2.321,203,1.494,204,2.321,205,1.494,206,2.321,207,1.494,208,2.321,209,1.494,210,2.321,211,2.957,212,1.494,213,2.321,214,1.494,215,4.01,216,2.58,217,4.01,218,2.321,219,2.159,220,2.321,221,2.321,222,2.321,223,2.321,224,2.321,225,2.321,226,2.321,227,2.321,228,2.321,229,2.321,230,2.321]],["title/classes/ForwardingDataSource.html",[78,0.073,392,2.156]],["body/classes/ForwardingDataSource.html",[7,0.014,13,0.104,14,0.13,15,0.104,16,0.172,19,1.183,24,1.532,26,1.888,27,1.178,28,0.63,29,1.268,31,1.23,33,0.303,46,0.261,47,0.321,49,0.759,59,1.325,78,0.093,81,0.006,82,0.008,83,0.006,85,0.305,88,3.011,96,2.028,97,3.084,98,2.028,99,2.028,100,1.835,101,2.028,102,0.78,103,1.607,104,2.028,112,2.673,114,0.866,116,1.607,119,1.272,125,3.277,162,1.607,178,1.56,181,0.585,185,3.16,189,3.16,191,3.16,193,3.16,196,3.16,198,3.16,201,2.754,203,2.754,205,2.754,207,2.754,209,2.754,212,2.754,214,2.373,216,2.754,232,2.726,233,2.726,234,2.726,235,2.726,236,2.726,237,2.726,242,3.28,286,3.98,371,1.753,372,1.835,373,2.028,375,3.44,376,3.769,378,3.824,388,2.272,389,3.967,390,4.035,392,3.164,416,1.926,775,1.753,834,4.989,835,2.424,848,3.688,849,2.835,850,3.688,851,2.606,852,2.835,853,2.606,854,2.835,855,2.835,856,2.835,857,2.835,858,2.835,859,2.835,860,2.835,861,2.835,862,2.835,863,2.835,864,2.835,865,2.835,866,2.835,867,2.835,868,2.835,869,2.835,870,2.835,871,2.835,1091,3.605,1092,3.605,1093,3.605,1094,3.605,1095,3.605,1096,3.605,1097,3.605,1098,3.605,1099,3.605,1100,3.605,1101,3.605,1102,3.605,1103,3.605]],["title/injectables/GlobalConfigState.html",[93,0.706,122,1.877]],["body/injectables/GlobalConfigState.html",[7,0.014,13,0.109,14,0.136,15,0.109,16,0.17,19,1.224,24,1.519,26,1.915,27,1.253,28,0.639,29,1.332,31,1.191,33,0.39,36,0.255,46,0.136,49,0.935,54,0.923,59,1.166,61,1.839,62,0.848,63,1.839,78,0.069,81,0.006,82,0.008,83,0.006,85,0.32,86,0.735,93,0.923,102,0.819,112,2.527,114,0.908,115,2.168,119,1.335,122,2.455,152,3.362,154,1.028,165,2.413,180,2.269,181,0.987,183,2.128,231,1.495,287,3.829,292,1.079,371,2.566,415,2.128,429,3.61,493,4.085,496,1.926,585,1.634,665,2.82,686,4.42,693,2.384,967,3.815,1104,6.852,1105,3.296,1106,4.778,1107,6.077,1108,7.714,1109,5.277,1110,5.277,1111,5.277,1112,5.277,1113,3.325,1114,7.163,1115,6.308,1116,3.784,1117,6.272,1118,3.784,1119,5.779,1120,3.784,1121,6.576,1122,3.784,1123,4.149,1124,3.784,1125,5.277,1126,3.784,1127,5.277,1128,6.077,1129,3.784,1130,5.277,1131,6.576,1132,3.784,1133,5.277,1134,6.576,1135,3.784,1136,3.784,1137,3.784,1138,3.784,1139,3.784,1140,2.543,1141,3.784,1142,4.149,1143,2.975,1144,2.975,1145,3.784,1146,2.975,1147,2.543,1148,3.784,1149,2.975,1150,3.784,1151,3.784,1152,3.784,1153,5.277,1154,3.784,1155,3.784,1156,3.784,1157,3.784,1158,6.077,1159,3.784,1160,3.784,1161,3.784]],["title/injectables/GlobalsService.html",[93,0.706,1162,3.172]],["body/injectables/GlobalsService.html",[7,0.014,13,0.081,14,0.101,15,0.081,16,0.163,19,0.986,24,1.445,26,1.851,27,1.17,28,0.632,29,1.28,31,1.196,33,0.144,36,0.189,46,0.184,49,0.331,53,1.5,54,1.073,59,1.191,61,3.978,62,1.822,63,2.984,68,2.437,72,2.678,74,2.547,76,2.777,78,0.051,81,0.005,82,0.007,83,0.005,85,0.238,93,0.743,134,3.351,151,1.431,154,1.113,162,2.547,175,1.069,176,0.992,181,0.456,216,1.977,231,1.11,242,1.307,262,1.692,292,1.213,304,3.342,321,2.067,340,1.307,341,1.975,348,4.494,375,2.739,389,4.173,440,1.889,569,2.164,585,1.716,594,1.253,625,1.581,638,3.342,639,4.746,692,2.678,895,1.889,976,3.601,985,1.771,1001,1.889,1113,2.678,1162,3.342,1163,2.031,1164,4.251,1165,5.815,1166,5.716,1167,6.714,1168,2.81,1169,4.251,1170,4.251,1171,4.251,1172,4.251,1173,5.127,1174,4.251,1175,4.251,1176,3.073,1177,4.251,1178,4.251,1179,3.703,1180,3.703,1181,5.665,1182,7.205,1183,2.81,1184,3.073,1185,7.321,1186,6.464,1187,2.81,1188,3.703,1189,6.934,1190,2.81,1191,2.81,1192,2.81,1193,4.251,1194,2.81,1195,4.251,1196,3.703,1197,4.251,1198,3.342,1199,4.251,1200,6.139,1201,4.251,1202,2.81,1203,2.678,1204,6.457,1205,2.81,1206,2.81,1207,2.81,1208,2.81,1209,2.81,1210,2.21,1211,2.448,1212,4.827,1213,2.81,1214,2.81,1215,2.81,1216,2.81,1217,2.81,1218,2.21,1219,4.251,1220,5.127,1221,4.251,1222,4.251,1223,2.81,1224,2.448,1225,2.81,1226,4.251,1227,2.858,1228,2.81,1229,2.81,1230,2.21,1231,2.81,1232,6.139,1233,2.81,1234,2.448,1235,2.81,1236,2.81,1237,2.81,1238,2.81,1239,2.21,1240,2.81,1241,2.81,1242,3.342,1243,2.031,1244,2.448,1245,3.073,1246,2.031,1247,2.448,1248,2.448,1249,2.81,1250,2.81,1251,2.81,1252,2.81,1253,2.031,1254,1.889,1255,2.81,1256,1.771,1257,2.21,1258,2.448,1259,2.81,1260,2.81,1261,2.21,1262,2.81,1263,2.81]],["title/injectables/GoogleAnalyticsSyncService.html",[8,2.397,93,0.706]],["body/injectables/GoogleAnalyticsSyncService.html",[6,3.933,7,0.014,8,3.736,13,0.141,14,0.177,15,0.141,16,0.167,19,1.459,24,1.471,26,1.51,27,1.022,28,0.556,29,1.1,31,0.984,33,0.374,36,0.331,39,2.767,40,2.504,41,3.818,42,3.556,46,0.177,49,0.742,53,2.447,58,3.53,62,1.102,63,3.371,76,1.802,78,0.09,81,0.008,82,0.01,83,0.008,85,0.416,86,0.876,93,1.1,114,1.181,137,3.9,154,1.225,178,1.505,179,2.065,180,2.565,181,1.275,231,1.944,278,2.767,292,1.403,585,1.816,813,3.1,815,4.341,825,3.736,828,3.307,1242,5.452,1254,3.307,1264,6.73,1265,3.556,1266,4.662,1267,6.29,1268,4.285,1269,7.309,1270,6.29,1271,4.919,1272,6.29,1273,4.919,1274,3.963,1275,4.119,1276,4.919,1277,4.919,1278,4.919,1279,4.919,1280,4.919,1281,6.29,1282,6.29,1283,4.919,1284,4.919,1285,3.556,1286,4.919,1287,4.919]],["title/components/InfoButtonComponent.html",[275,0.758,515,1.658]],["body/components/InfoButtonComponent.html",[7,0.014,13,0.237,14,0.123,15,0.098,16,0.161,19,1.137,24,1.422,26,1.177,27,1.08,28,0.533,29,0.857,31,0.897,33,0.354,36,0.229,46,0.123,49,0.784,62,1.098,78,0.062,81,0.005,82,0.008,83,0.005,85,0.288,86,0.682,102,1.72,112,1.553,114,0.818,126,1.988,150,1.16,154,0.955,178,1.499,179,1.119,180,1.988,181,1.08,262,1.35,275,1.397,280,2.386,290,1.346,292,1.398,300,1.119,301,1.248,305,2.609,306,1.795,308,1.795,312,1.346,313,1.863,321,1.657,339,2.495,340,2.279,341,1.499,358,1.4,366,1.4,423,1.119,437,3.294,448,1.296,449,2.184,450,1.657,451,1.4,452,1.657,453,1.585,455,1.346,458,5.188,459,3.727,460,3.088,461,2.911,462,3.727,463,4.536,464,3.853,465,1.519,466,1.863,475,2.79,481,3.05,504,1.657,505,1.936,506,1.4,507,3.051,508,1.657,509,1.657,510,1.657,511,1.4,512,1.657,513,1.296,514,1.657,515,2.578,516,1.657,517,1.795,518,1.657,519,1.4,520,1.519,521,1.657,522,1.4,523,1.346,524,1.657,525,1.346,526,1.657,527,1.4,528,1.585,529,1.657,530,1.657,531,1.4,532,1.457,533,1.657,534,1.4,535,1.585,536,1.4,537,1.585,538,1.346,539,1.585,540,1.657,551,1.917,560,5.466,561,2.911,562,3.409,569,2.495,570,3.294,571,3.542,584,3.294,585,1.72,587,3.853,594,1.519,597,2.024,599,2.291,603,2.463,604,2.679,606,2.463,607,2.679,609,3.542,610,2.969,611,2.463,612,2.463,613,2.463,614,2.463,615,2.291,616,2.463,618,2.969,619,2.679,623,1.585,663,4.934,670,4.105,672,3.841,673,3.294,674,1.917,675,2.463,734,3.853,736,2.679,737,2.679,738,2.679,739,2.147,740,2.679,741,2.679,742,3.529,800,2.969,815,3.727,825,3.409,1047,3.972,1053,3.088,1057,3.954,1061,2.291,1266,3.858,1275,3.409,1285,2.463,1288,2.969,1289,5.738,1290,4.901,1291,4.901,1292,5.738,1293,4.901,1294,3.954,1295,4.901,1296,4.934,1297,3.408,1298,3.408,1299,3.408,1300,4.901,1301,3.408,1302,4.901,1303,3.408,1304,4.901,1305,3.408,1306,3.294,1307,3.408,1308,3.408,1309,3.408,1310,3.408,1311,2.969,1312,2.679,1313,3.408,1314,3.408,1315,3.408,1316,2.679,1317,2.679,1318,3.408,1319,2.679,1320,2.679,1321,3.408,1322,2.679]],["title/modules/InfoButtonModule.html",[0,1.478,1323,2.917]],["body/modules/InfoButtonModule.html",[2,2.005,3,2.428,7,0.014,10,2.616,11,2.16,12,1.737,13,0.213,14,0.204,15,0.163,16,0.123,33,0.41,35,2.616,36,0.382,46,0.204,71,2.827,78,0.103,81,0.009,82,0.011,83,0.009,362,2.942,363,2.942,364,3.066,365,2.334,515,3.43,548,4.086,549,3.374,662,3.579,672,2.892,674,3.195,1047,3.035,1323,5.95,1324,4.949,1325,4.949,1326,4.949,1327,4.949,1328,5.382,1329,5.681,1330,5.681,1331,6.88,1332,5.681]],["title/injectables/InfoButtonService.html",[93,0.706,670,2.269]],["body/injectables/InfoButtonService.html",[7,0.014,13,0.195,14,0.148,15,0.216,16,0.154,19,1.294,24,1.325,26,1.522,27,1.03,28,0.545,29,1.109,31,0.991,33,0.324,36,0.276,46,0.228,47,0.497,49,0.976,54,1.284,56,1.831,59,0.691,62,0.919,78,0.075,81,0.007,82,0.009,83,0.007,85,0.347,86,0.776,93,0.975,113,2.981,114,0.985,126,2.156,154,1.087,175,1.559,176,1.447,179,1.346,181,0.666,231,1.62,262,1.13,275,1.049,292,1.17,300,1.346,341,1.254,475,3.46,481,2.711,562,4.541,585,1.386,589,4.361,594,3.454,661,4.574,662,2.584,669,4.014,670,3.137,672,3.623,719,3.75,731,2.757,742,4.408,900,2.84,904,2.981,1003,3.313,1047,3.803,1048,2.964,1049,2.757,1050,3.224,1051,2.757,1052,4.003,1053,4.484,1054,2.964,1055,3.224,1056,5.596,1057,3.515,1058,3.75,1059,4.032,1060,5.35,1061,2.757,1062,4.032,1063,4.985,1064,4.386,1065,4.386,1066,3.515,1067,4.386,1068,3.224,1069,3.224,1070,3.224,1071,3.224,1072,4.386,1073,4.386,1074,4.386,1075,4.386,1076,4.386,1077,4.386,1078,4.386,1079,4.386,1080,3.224,1081,3.224,1082,3.224,1083,3.224,1084,3.224,1085,3.224,1086,3.224,1087,3.224,1088,3.224,1089,3.224,1090,3.224,1333,5.578,1334,5.578,1335,4.101,1336,5.578,1337,4.101,1338,4.101,1339,2.964]],["title/components/InfoDialogComponent.html",[275,0.758,517,1.478]],["body/components/InfoDialogComponent.html",[7,0.014,12,0.915,13,0.222,14,0.108,15,0.086,16,0.156,19,1.463,24,1.371,26,0.718,27,0.958,28,0.53,29,0.523,31,0.697,33,0.272,36,0.201,46,0.16,47,0.266,49,0.78,54,0.523,78,0.054,81,0.005,82,0.007,83,0.005,85,0.253,86,0.62,102,1.674,126,2.319,150,1.018,168,1.885,178,1.362,179,1.462,182,2.505,245,1.229,262,1.467,275,1.414,278,1.682,280,1.137,290,1.182,300,1.747,301,1.095,305,2.557,306,1.631,308,1.631,312,1.182,313,1.694,339,3.21,340,2.072,341,1.362,358,1.229,366,1.229,423,2.17,448,1.137,449,1.985,450,1.454,451,1.229,452,1.454,453,1.391,455,1.182,459,2.646,460,1.885,461,2.646,462,2.646,465,1.333,466,2.397,471,3.718,475,2.867,481,3.352,504,1.454,505,1.76,506,1.229,507,2.867,508,1.454,509,1.454,510,1.454,511,1.229,512,1.454,513,1.137,514,1.454,515,1.229,516,1.454,517,2.16,518,1.454,519,1.229,520,1.333,521,1.454,522,1.229,523,1.182,524,1.454,525,1.182,526,1.454,527,1.229,528,1.391,529,1.454,530,1.454,531,1.229,532,1.279,533,1.454,534,1.229,535,1.391,536,2.187,537,1.391,538,1.182,539,1.391,540,1.454,551,1.682,562,3.745,570,2.011,585,1.465,589,1.777,592,3.502,594,2.628,595,2.522,597,2.646,598,2.646,599,4.239,600,3.161,602,2.807,609,2.162,611,2.162,612,2.162,614,2.162,615,4.239,616,3.847,620,1.885,622,3.317,623,2.743,624,2.807,625,2.993,626,4.044,631,3.847,634,2.162,638,2.352,648,3.881,649,4.412,650,4.958,651,3.964,669,3.151,672,1.523,673,2.011,674,4.044,739,2.807,742,3.317,744,2.807,764,3.22,904,2.844,972,2.646,1030,2.646,1047,3.842,1052,2.505,1053,1.885,1294,3.354,1316,2.352,1317,2.352,1319,2.352,1320,2.352,1322,4.636,1339,3.22,1340,2.352,1341,2.807,1342,3.881,1343,3.881,1344,3.881,1345,4.185,1346,4.637,1347,3.881,1348,4.778,1349,5.493,1350,4.637,1351,4.636,1352,2.991,1353,5.493,1354,4.558,1355,4.455,1356,4.637,1357,4.185,1358,4.637,1359,2.991,1360,2.991,1361,3.502,1362,3.502,1363,3.847,1364,3.881,1365,3.881,1366,2.991,1367,2.991,1368,2.991,1369,3.881,1370,2.991,1371,4.185,1372,2.606,1373,2.352,1374,2.606,1375,2.606,1376,2.606,1377,2.606,1378,2.606,1379,2.606,1380,2.606,1381,2.606,1382,2.606,1383,2.606,1384,2.606,1385,2.606,1386,2.606,1387,2.606,1388,4.455,1389,4.558,1390,4.558,1391,2.991,1392,5.965,1393,4.455,1394,3.502,1395,2.606,1396,2.352,1397,2.606,1398,2.991,1399,2.991,1400,2.991,1401,2.162,1402,3.502,1403,4.455,1404,4.455,1405,2.991,1406,2.991,1407,2.606,1408,2.991,1409,2.991,1410,2.991,1411,2.991,1412,2.606,1413,2.991]],["title/interfaces/InfoDialogData.html",[47,0.359,1354,2.917]],["body/interfaces/InfoDialogData.html",[7,0.014,12,1.445,13,0.223,14,0.17,15,0.136,16,0.102,19,1.096,28,0.545,33,0.348,36,0.318,46,0.22,47,0.421,49,0.93,54,0.826,78,0.086,81,0.008,82,0.01,83,0.008,84,1.496,85,0.399,86,0.853,102,1.022,126,2.363,178,1.445,179,1.551,182,2.656,262,1.301,275,1.437,278,2.656,280,2.33,305,1.551,306,1.73,308,1.73,339,3.12,340,2.197,341,1.874,459,2.805,461,2.805,462,2.805,466,1.796,471,2.656,475,3.626,481,3.373,517,1.73,551,2.656,562,2.805,585,1.523,594,3.208,669,3.985,672,2.405,673,3.175,674,2.656,739,2.976,742,4.195,744,2.976,764,3.414,904,2.524,1030,2.805,1047,2.524,1052,2.656,1294,2.976,1316,3.714,1317,3.714,1319,3.714,1320,3.714,1339,3.414,1340,3.714,1341,2.976,1342,4.114,1343,4.114,1344,4.114,1345,4.818,1346,4.114,1347,4.114,1348,4.429,1349,5.338,1350,4.114,1351,3.714,1353,5.338,1354,4.917,1356,4.114,1357,3.714,1358,4.114,1361,3.714,1362,3.714,1363,3.414,1364,4.114,1365,4.114,1369,4.114,1371,3.714,1372,4.114,1373,4.818,1374,4.114,1375,4.114,1376,4.114,1377,4.114,1378,4.114,1379,4.114,1380,4.114,1381,4.114,1382,4.114,1383,4.114,1384,4.114,1385,4.114,1386,4.114,1387,4.114]],["title/modules/InfoDialogModule.html",[0,1.478,1328,2.712]],["body/modules/InfoDialogModule.html",[2,1.996,3,2.421,7,0.014,10,2.609,11,2.15,12,1.729,13,0.197,14,0.203,15,0.162,16,0.122,33,0.418,35,2.609,36,0.381,39,3.18,46,0.203,71,2.323,78,0.103,81,0.009,82,0.011,83,0.009,362,2.934,363,2.934,364,3.058,365,2.323,517,3.056,548,4.075,549,3.359,550,5.394,551,3.18,589,3.359,674,3.18,675,4.087,1047,3.021,1328,5.441,1363,4.087,1414,4.926,1415,4.926,1416,4.926,1417,5.654,1418,6.86,1419,5.654,1420,5.654,1421,6.86,1422,4.926,1423,5.654]],["title/injectables/InjectorDelegateDataSourceService.html",[93,0.706,1424,3.172]],["body/injectables/InjectorDelegateDataSourceService.html",[7,0.014,13,0.117,14,0.244,15,0.117,16,0.137,19,1.287,24,1.585,26,1.912,27,1.257,28,0.633,29,1.353,31,1.261,33,0.363,36,0.274,46,0.146,49,0.654,78,0.074,81,0.007,82,0.009,83,0.007,85,0.344,86,0.772,88,2.401,93,0.97,97,3.012,112,2.589,114,0.977,115,1.672,119,1.436,122,3.155,123,2.174,124,2.174,126,1.289,152,1.978,179,1.822,181,1.025,183,3.121,185,2.937,189,2.937,191,2.937,193,2.937,196,2.937,198,2.937,201,1.892,203,1.892,205,1.892,207,1.892,209,1.892,212,1.892,214,1.892,216,1.892,231,1.607,232,2.965,233,2.965,234,2.965,235,2.965,236,2.965,237,2.965,242,3.407,287,3.496,371,2.698,372,3.453,373,3.551,375,3.793,376,3.624,378,3.296,379,2.735,388,2.564,389,3.551,390,3.296,391,5.42,392,4.283,393,2.735,394,2.735,395,2.735,396,2.735,397,2.735,398,2.735,399,2.735,400,2.735,401,2.735,402,2.735,403,2.735,404,2.735,405,2.735,415,2.288,416,2.174,417,2.735,418,2.735,420,2.735,429,2.417,1424,4.363,1425,5.501,1426,3.544,1427,5.549,1428,7.496,1429,4.069,1430,5.549,1431,5.501,1432,4.069,1433,6.314,1434,4.069,1435,4.069,1436,4.069,1437,4.069,1438,4.069]],["title/classes/LearnMore.html",[78,0.073,473,2.269]],["body/classes/LearnMore.html",[7,0.013,13,0.171,14,0.215,15,0.171,16,0.153,20,4.065,24,1.162,28,0.606,46,0.272,49,0.704,62,1.337,78,0.138,81,0.01,82,0.011,83,0.01,85,0.505,86,0.986,181,1.297,292,1.702,470,3.356,471,3.356,473,3.985,481,3.03,486,4.465,487,3.985,488,4.011,498,3.356,500,3.296,654,3.985,680,3.544,775,2.901,809,4.313,811,5.942,1439,5.967]],["title/injectables/LocalStorageService.html",[93,0.706,676,2.712]],["body/injectables/LocalStorageService.html",[7,0.014,13,0.098,14,0.123,15,0.098,16,0.158,19,1.141,20,2.931,24,1.392,26,1.6,27,1.126,28,0.534,29,1.1,31,1.196,33,0.175,36,0.231,44,4.946,45,4.596,46,0.123,49,0.938,53,1.737,54,1.1,59,1.255,61,3.866,62,1.782,63,3.058,74,2.566,76,2.304,78,0.062,81,0.005,82,0.008,83,0.005,85,0.563,86,0.685,93,0.86,165,2.111,175,1.303,176,1.209,231,1.354,242,1.594,262,0.944,292,1.642,321,2.799,341,2.121,423,1.89,583,4.286,585,1.563,592,4.946,676,3.308,678,5.284,692,3.1,901,4.198,934,4.605,1030,3.737,1113,3.1,1184,5.013,1186,6.223,1203,3.1,1230,3.869,1245,4.161,1261,4.526,1296,3.869,1440,6.367,1441,2.985,1442,4.92,1443,4.286,1444,4.92,1445,3.427,1446,4.92,1447,4.92,1448,6.662,1449,3.427,1450,3.869,1451,4.92,1452,3.427,1453,4.92,1454,3.427,1455,4.92,1456,3.427,1457,4.92,1458,4.92,1459,4.286,1460,4.92,1461,4.92,1462,4.92,1463,4.92,1464,4.946,1465,4.92,1466,4.92,1467,4.92,1468,5.48,1469,4.92,1470,4.92,1471,6.291,1472,6.291,1473,7.309,1474,6.291,1475,4.286,1476,4.92,1477,3.557,1478,4.286,1479,4.92,1480,6.291,1481,4.92,1482,4.92,1483,4.92,1484,3.427,1485,3.427,1486,3.427,1487,3.1,1488,3.427,1489,3.427,1490,3.427,1491,3.427,1492,2.985,1493,3.427,1494,3.427]],["title/injectables/LocalStorageSyncService.html",[9,2.397,93,0.706]],["body/injectables/LocalStorageSyncService.html",[6,3.868,7,0.014,9,3.589,13,0.133,14,0.166,15,0.133,16,0.168,19,1.401,24,1.48,26,1.451,27,0.981,28,0.484,29,1.248,31,1.053,33,0.344,36,0.311,42,3.341,45,4.505,46,0.217,49,0.794,54,1.177,59,1.135,61,3.272,62,1.702,63,2.247,68,2.132,78,0.084,81,0.007,82,0.01,83,0.007,85,0.391,86,0.841,93,1.056,114,1.11,154,1.311,175,1.757,176,1.631,178,1.414,179,1.984,180,2.587,181,1.257,231,1.826,278,2.599,279,3.341,292,1.724,298,3.341,574,3.634,585,1.774,813,4.877,815,4.24,825,3.589,827,3.341,828,3.107,1212,3.634,1245,3.341,1261,3.634,1265,3.341,1266,4.525,1268,4.026,1275,3.998,1285,3.341,1492,4.026,1495,6.086,1496,7.138,1497,6.042,1498,6.042,1499,4.622,1500,4.622,1501,6.042,1502,4.622,1503,4.622,1504,3.634,1505,4.026,1506,4.026,1507,3.341,1508,6.042,1509,4.622,1510,4.622,1511,4.622,1512,4.622,1513,4.622,1514,4.622,1515,4.622,1516,6.042,1517,4.622,1518,4.622,1519,4.622,1520,6.042,1521,4.622,1522,4.622]],["title/modules/MousePositionTrackerModule.html",[0,1.478,1523,3.172]],["body/modules/MousePositionTrackerModule.html",[0,1.956,2,1.885,7,0.014,13,0.153,14,0.192,15,0.153,16,0.116,33,0.396,35,2.519,36,0.36,39,3.004,40,2.719,41,2.597,46,0.238,54,1.354,56,1.754,59,1.117,78,0.097,81,0.009,82,0.011,83,0.009,114,1.282,115,2.195,119,1.885,126,1.692,179,1.754,278,3.004,365,2.195,536,2.195,625,3.004,667,5.663,717,5.206,745,4.454,1020,3.591,1140,3.591,1227,3.591,1253,3.861,1254,3.591,1256,4.174,1257,4.2,1275,3.935,1450,4.2,1523,5.209,1524,4.2,1525,4.2,1526,6.56,1527,5.342,1528,5.342,1529,4.653,1530,4.653,1531,5.342,1532,5.342,1533,6.625,1534,6.625,1535,4.2,1536,6.625,1537,6.625,1538,5.342,1539,5.342,1540,4.653,1541,5.342,1542,5.342,1543,5.342,1544,5.342,1545,5.342,1546,5.342,1547,5.342,1548,5.342,1549,5.342,1550,5.342,1551,4.653,1552,4.653,1553,4.653,1554,4.2,1555,5.342,1556,5.342,1557,5.342]],["title/directives/NumberDirective.html",[506,1.658,538,1.594]],["body/directives/NumberDirective.html",[7,0.014,13,0.142,14,0.178,15,0.142,16,0.159,19,1.467,24,1.356,26,1.671,27,1.13,28,0.507,29,1.217,31,0.776,33,0.254,36,0.334,46,0.178,54,0.867,69,3.074,78,0.09,81,0.008,82,0.01,83,0.008,85,0.419,165,2.003,179,1.628,245,2.037,262,2.02,280,3.119,300,2.285,305,2.076,329,3.384,339,3.219,340,2.941,341,1.934,465,2.21,505,2.896,506,3.181,537,2.307,538,2.498,539,2.941,585,1.571,745,5.514,1061,3.334,1294,3.984,1306,4.679,1535,5.473,1558,5.764,1559,5.764,1560,4.32,1561,6.323,1562,6.323,1563,6.323,1564,6.323,1565,4.959,1566,5.299,1567,4.959,1568,4.959,1569,6.323,1570,6.961,1571,6.064,1572,6.064,1573,6.323,1574,6.323,1575,4.959,1576,6.323,1577,6.961,1578,4.959,1579,4.959,1580,4.959]],["title/modules/NumbersOnlyModule.html",[0,1.478,1581,2.917]],["body/modules/NumbersOnlyModule.html",[2,2.12,3,2.51,7,0.013,10,2.705,11,2.284,12,1.837,13,0.172,14,0.216,15,0.172,16,0.13,33,0.364,35,2.705,36,0.404,46,0.216,78,0.109,81,0.01,82,0.011,83,0.01,362,3.042,363,3.042,538,3.32,1558,4.722,1559,4.722,1572,5.232,1581,5.921,1582,5.232,1583,5.232,1584,5.232,1585,6.006,1586,6.006]],["title/components/OpacitySliderComponent.html",[275,0.758,519,1.658]],["body/components/OpacitySliderComponent.html",[7,0.014,11,2.595,13,0.152,14,0.107,15,0.085,16,0.166,19,1.026,24,1.478,26,0.711,27,1.108,28,0.575,29,0.518,31,0.982,33,0.152,36,0.199,46,0.107,49,0.692,53,1.045,54,0.518,62,1.661,68,1.561,69,2.15,74,1.971,78,0.12,81,0.005,82,0.007,83,0.005,85,0.25,86,0.616,102,1.712,150,1.008,154,1.223,165,1.677,178,1.353,181,1.07,245,1.217,262,1.219,269,1.76,273,2.363,274,1.32,275,1.18,276,3.839,277,1.267,280,2.012,281,3.704,290,1.17,292,1.879,299,1.866,300,0.973,301,1.085,305,2.553,306,1.62,308,1.62,310,1.971,311,1.971,312,1.17,313,2.388,314,1.891,315,2.263,328,4.421,329,2.15,341,0.906,358,1.217,366,1.217,423,1.452,448,1.126,449,1.971,450,1.44,451,1.217,452,1.44,453,1.378,455,1.17,465,1.32,466,1.682,504,1.44,505,1.747,506,1.217,507,2.853,508,1.44,509,1.44,510,1.44,511,1.217,512,1.44,513,1.126,514,1.44,515,1.217,516,1.44,517,1.085,518,1.44,519,2.411,520,3.677,521,1.44,522,1.217,523,1.17,524,1.44,525,1.17,526,1.44,527,1.217,528,1.378,529,1.44,530,1.44,531,1.217,532,1.267,533,1.44,534,1.217,535,1.378,536,1.217,537,1.378,538,1.17,539,1.378,540,1.44,561,2.627,563,3.197,566,2.487,569,2.251,585,1.814,593,1.583,594,1.971,595,2.686,597,3.143,598,3.143,599,2.973,600,1.76,602,1.866,603,3.825,604,4.161,606,2.141,607,4.614,609,3.197,611,4.242,612,4.242,614,3.197,622,3.301,623,2.73,624,3.957,626,3.301,631,2.141,634,2.141,649,2.627,651,1.991,694,1.991,895,1.991,1049,2.973,1274,1.866,1322,2.329,1345,4.161,1351,4.614,1389,2.141,1390,2.141,1394,3.477,1395,3.852,1396,3.477,1397,2.581,1401,2.141,1540,2.581,1587,6.021,1588,6.021,1589,2.581,1590,6.774,1591,4.422,1592,3.852,1593,5.292,1594,4.422,1595,5.292,1596,4.422,1597,5.869,1598,5.869,1599,6.279,1600,6.279,1601,5.292,1602,5.292,1603,5.112,1604,2.962,1605,2.962,1606,4.428,1607,2.962,1608,5.112,1609,2.962,1610,4.422,1611,4.422,1612,2.962,1613,4.422,1614,4.422,1615,2.962,1616,4.422,1617,2.962,1618,2.962,1619,2.962,1620,5.869,1621,2.962,1622,3.852,1623,5.292,1624,2.962,1625,2.962,1626,6.587,1627,5.292,1628,2.962,1629,4.422,1630,4.422,1631,2.962,1632,2.962,1633,3.852,1634,3.557,1635,2.962,1636,2.581,1637,2.962,1638,3.852,1639,2.581,1640,2.581,1641,2.581]],["title/modules/OpacitySliderModule.html",[0,1.478,1642,2.917]],["body/modules/OpacitySliderModule.html",[2,2.03,3,2.446,7,0.014,10,2.636,11,2.187,12,1.759,13,0.165,14,0.207,15,0.165,16,0.125,33,0.411,35,2.636,36,0.387,46,0.207,71,2.363,78,0.105,81,0.009,82,0.011,83,0.009,362,2.965,363,2.965,364,3.089,365,2.363,519,3.435,520,2.564,548,4.117,549,3.416,1587,4.522,1588,4.522,1642,5.871,1643,5.011,1644,5.011,1645,5.011,1646,5.752,1647,5.752,1648,6.932,1649,5.752,1650,6.932,1651,5.752]],["title/classes/OpenDialog.html",[78,0.073,680,2.397]],["body/classes/OpenDialog.html",[7,0.013,13,0.171,14,0.215,15,0.171,16,0.153,20,4.065,24,1.162,28,0.606,46,0.272,49,0.704,62,1.337,78,0.138,81,0.01,82,0.011,83,0.01,85,0.505,86,0.986,181,1.297,292,1.702,470,3.356,471,3.356,473,3.356,481,3.232,486,3.76,487,3.356,488,4.763,498,3.356,500,3.296,654,3.985,680,4.209,775,2.901,809,4.313,811,5.942,1652,5.967]],["title/interfaces/OrganInfo.html",[47,0.359,1653,2.917]],["body/interfaces/OrganInfo.html",[7,0.014,13,0.052,14,0.065,15,0.052,16,0.039,20,1.947,27,1.313,28,0.472,29,1.102,31,0.282,33,0.153,36,0.121,46,0.16,47,0.16,49,0.807,53,2.079,54,1.102,58,1.947,59,0.831,62,0.404,68,1.35,74,3.633,76,1.093,78,0.054,81,0.003,82,0.005,83,0.003,84,0.571,85,0.152,86,0.416,102,0.646,145,4.177,146,1.881,147,4.072,148,3.107,154,0.582,162,0.803,165,0.571,172,2.642,178,0.551,180,0.946,181,0.485,262,0.496,263,2.158,268,4.527,269,1.773,273,0.962,275,0.561,276,1.679,277,0.77,280,2.141,281,1.679,299,1.881,305,1.46,306,0.66,308,0.66,313,0.685,314,0.77,315,0.77,321,3.458,328,1.881,329,0.876,332,3.35,341,1.361,423,1.46,460,3.851,467,1.302,474,1.135,505,0.712,522,0.74,523,3.261,569,2.265,585,1.566,587,1.416,595,1.635,600,4.535,602,4.528,623,0.838,625,2.151,643,6.306,692,2.803,704,3.006,744,1.135,815,1.07,825,1.773,889,2.347,895,1.211,904,3.009,914,2.158,954,1.302,955,2.158,963,2.158,972,1.773,973,1.302,1051,1.211,1123,4.18,1218,1.416,1227,2.57,1246,1.302,1253,2.764,1254,2.57,1256,1.135,1274,4.482,1312,1.416,1339,3.215,1468,3.331,1487,2.409,1566,3.215,1606,2.007,1653,4.07,1654,1.302,1655,1.302,1656,1.416,1657,2.986,1658,2.601,1659,6.987,1660,5.837,1661,2.601,1662,2.986,1663,2.601,1664,2.601,1665,4.954,1666,2.601,1667,2.601,1668,2.601,1669,1.569,1670,2.986,1671,1.569,1672,1.569,1673,1.569,1674,1.569,1675,1.416,1676,1.569,1677,2.601,1678,1.569,1679,1.569,1680,2.601,1681,1.569,1682,2.601,1683,2.158,1684,3.875,1685,1.569,1686,1.569,1687,3.331,1688,4.631,1689,5.755,1690,1.569,1691,1.569,1692,1.569,1693,3.331,1694,5.324,1695,4.631,1696,1.569,1697,1.569,1698,1.569,1699,1.569,1700,2.601,1701,1.569,1702,3.331,1703,4.18,1704,1.569,1705,1.569,1706,1.569,1707,3.331,1708,4.631,1709,1.569,1710,1.569,1711,1.569,1712,1.569,1713,2.601,1714,1.569,1715,2.601,1716,2.601,1717,2.601,1718,1.569,1719,1.569,1720,3.331,1721,4.631,1722,1.569,1723,1.569,1724,1.569,1725,1.569,1726,2.601,1727,1.569,1728,1.569,1729,1.569,1730,2.601,1731,1.569,1732,1.569,1733,2.347,1734,1.569,1735,2.601,1736,3.875,1737,1.569,1738,1.569,1739,1.569,1740,4.631,1741,2.601,1742,1.569,1743,1.569,1744,2.601,1745,1.569,1746,1.569,1747,3.006,1748,2.347,1749,1.569,1750,1.569,1751,2.601,1752,1.569,1753,1.569,1754,2.601,1755,1.569,1756,3.331,1757,4.631,1758,1.569,1759,1.569,1760,1.569,1761,1.569,1762,2.601,1763,2.601,1764,1.569,1765,1.569,1766,2.601,1767,1.569,1768,2.601,1769,2.601,1770,3.875,1771,3.875,1772,1.569,1773,1.569,1774,1.569,1775,1.569,1776,1.569,1777,2.347,1778,1.569,1779,1.569,1780,5.63,1781,1.569,1782,1.801,1783,1.801,1784,1.801,1785,1.801,1786,4.448,1787,1.801,1788,3.824,1789,1.801,1790,4.448,1791,1.801,1792,1.801,1793,1.801,1794,2.986,1795,3.331,1796,1.801,1797,2.601,1798,1.801,1799,2.986,1800,3.824,1801,3.824,1802,4.448,1803,1.801,1804,1.801,1805,1.801,1806,1.801,1807,2.986,1808,2.986,1809,1.801,1810,1.801,1811,3.824,1812,1.801,1813,2.986,1814,1.801,1815,1.801,1816,2.986,1817,1.569,1818,1.801,1819,1.801,1820,2.986,1821,1.801,1822,1.801,1823,1.801,1824,1.801,1825,1.801,1826,1.801,1827,1.801,1828,2.986,1829,1.801,1830,1.801,1831,4.931,1832,2.601,1833,3.824,1834,1.801,1835,5.132,1836,2.986,1837,3.824,1838,3.824,1839,5.63,1840,2.986,1841,2.986,1842,1.801,1843,1.801,1844,3.824,1845,1.801,1846,1.801,1847,1.801,1848,1.801,1849,1.801,1850,1.569,1851,1.801,1852,1.801,1853,1.801,1854,1.801,1855,1.801,1856,1.801,1857,1.801,1858,1.801,1859,1.801,1860,1.801,1861,1.801,1862,3.824,1863,2.986,1864,1.801,1865,1.801,1866,1.801,1867,1.801,1868,1.569,1869,1.801,1870,1.801,1871,1.801,1872,1.801,1873,1.801,1874,1.801,1875,1.569,1876,2.986,1877,2.986,1878,2.986,1879,2.986,1880,2.986,1881,1.801,1882,1.801,1883,1.801,1884,1.801]],["title/modules/OrganSelectorModule.html",[0,1.478,1885,2.917]],["body/modules/OrganSelectorModule.html",[2,2.049,3,2.46,7,0.014,10,2.651,11,2.208,12,1.776,13,0.167,14,0.209,15,0.167,16,0.126,33,0.405,35,2.651,36,0.391,46,0.209,71,2.386,78,0.106,81,0.009,82,0.011,83,0.009,362,2.981,363,2.981,364,3.107,365,2.386,522,3.439,523,2.294,548,4.141,549,3.449,1654,4.197,1655,4.197,1885,5.882,1886,5.058,1887,5.058,1888,5.058,1889,5.806,1890,5.806,1891,6.971,1892,5.806]],["title/interfaces/PanelData.html",[47,0.359,1057,2.542]],["body/interfaces/PanelData.html",[7,0.014,13,0.193,14,0.166,15,0.205,16,0.1,28,0.539,31,0.722,33,0.344,36,0.311,46,0.242,47,0.538,49,0.974,54,1.328,56,1.516,59,0.778,78,0.084,81,0.007,82,0.01,83,0.007,84,1.463,85,0.39,86,0.84,93,1.056,113,2.467,114,1.108,126,1.913,154,0.899,175,1.755,176,1.629,181,0.75,275,0.868,300,1.516,341,1.412,475,3.469,481,2.582,562,4.662,585,1.147,589,3.996,594,3.569,661,4.058,662,2.909,669,4.135,670,2.596,672,2.35,719,3.103,731,3.103,742,4.464,900,2.35,904,2.467,1003,2.742,1047,2.467,1048,3.337,1049,3.103,1050,3.63,1051,3.103,1052,3.783,1053,4.496,1054,3.337,1055,3.63,1056,5.289,1057,4.239,1058,3.103,1059,3.337,1060,4.747,1061,3.103,1062,3.337,1063,4.747,1064,3.63,1065,3.63,1066,2.909,1067,3.63,1068,3.63,1069,3.63,1070,3.63,1071,3.63,1072,3.63,1073,3.63,1074,3.63,1075,3.63,1076,3.63,1077,3.63,1078,4.747,1079,4.747,1080,3.63,1081,3.63,1082,3.63,1083,3.63,1084,3.63,1085,3.63,1086,3.63,1087,3.63,1088,3.63,1089,3.63,1090,3.63]],["title/interfaces/PluckUniqueOptions.html",[47,0.359,1893,2.917]],["body/interfaces/PluckUniqueOptions.html",[7,0.014,13,0.134,14,0.219,15,0.134,16,0.101,28,0.375,29,1.065,30,4.034,31,0.732,33,0.312,46,0.289,47,0.417,49,0.899,53,1.652,54,1.065,56,2.655,59,0.789,69,2.962,81,0.007,82,0.01,83,0.007,84,1.483,85,0.396,86,0.943,112,1.483,114,1.124,119,1.652,134,2.833,162,2.086,262,1.29,287,3.838,292,1.335,341,1.863,415,3.426,429,2.78,639,2.78,681,4.404,700,3.619,912,2.949,1001,4.553,1115,5.994,1117,6.312,1119,6.189,1147,3.147,1149,5.325,1210,4.79,1212,3.68,1893,5.845,1894,3.384,1895,3.384,1896,4.79,1897,5.9,1898,7.173,1899,6.092,1900,6.092,1901,6.092,1902,6.993,1903,4.681,1904,4.681,1905,4.79,1906,4.078,1907,4.078,1908,4.078,1909,4.078,1910,5.307,1911,6.932,1912,6.642,1913,6.642,1914,6.249,1915,5.307,1916,5.9,1917,4.681,1918,4.681,1919,4.681,1920,4.681,1921,4.681]],["title/interfaces/Segment.html",[47,0.359,935,2.712]],["body/interfaces/Segment.html",[7,0.014,12,1.443,13,0.093,14,0.116,15,0.093,16,0.07,27,0.525,28,0.446,31,0.958,33,0.241,36,0.218,46,0.17,47,0.42,49,0.828,54,1.304,58,3.117,59,1.183,68,1.665,69,2.294,78,0.101,81,0.01,82,0.008,83,0.005,84,1.025,85,0.594,86,0.852,97,1.184,102,1.021,154,1.085,164,2.977,165,1.495,178,0.989,180,1.94,181,0.525,262,0.891,267,4.932,270,2.174,271,3.51,274,1.441,275,0.887,277,1.383,280,2.118,289,3.984,290,2.842,291,1.646,300,2.705,305,1.062,306,1.184,308,1.184,310,1.441,311,1.441,313,1.23,314,1.383,315,1.383,326,1.819,329,3.412,339,2.402,340,1.504,341,1.873,423,1.829,451,3.104,513,1.23,585,0.804,595,2.619,620,2.973,644,2.174,775,3.625,886,1.921,888,2.174,891,4.026,898,2.174,900,3.117,901,2.973,910,2.337,911,2.337,912,3.51,913,5.769,914,3.41,915,2.542,916,2.542,917,5.769,918,2.542,920,2.542,926,5.345,927,2.542,928,2.542,929,3.709,930,2.542,934,2.973,935,4.932,936,2.542,938,2.542,939,6.16,940,4.38,941,3.709,942,4.116,944,2.337,945,2.542,946,2.337,947,2.542,954,2.337,955,3.41,957,2.542,958,2.542,959,2.337,960,2.542,961,5.345,963,2.337,964,4.38,965,2.337,967,2.337,968,2.337,969,2.174,970,2.337,971,3.709,972,3.637,973,2.337,974,2.337,975,3.41,976,2.973,977,2.973,978,2.542,979,2.542,980,3.709,981,2.542,982,3.709,983,2.542,984,2.542,985,2.037,986,3.709,987,2.542,988,4.38,989,2.337,990,2.542,991,2.542,992,3.709,993,2.542,994,2.542,995,3.709,996,2.542,997,2.337,998,3.709,999,3.709,1000,3.709,1001,2.174,1002,2.542,1003,1.921,1004,2.542,1005,2.542,1006,2.542,1007,2.542,1008,2.542,1009,2.542,1010,2.542,1011,2.542,1012,2.542,1013,2.542,1014,2.542,1015,2.542,1016,2.542,1017,2.542,1018,2.542,1019,2.542,1020,2.174,1021,2.337,1022,2.174,1023,2.542,1024,2.542,1025,2.337,1026,2.337,1027,2.542,1028,2.337,1029,2.542,1030,1.921,1031,2.542,1032,2.542,1033,2.337,1034,2.337,1035,2.542,1036,2.542,1037,2.542,1038,2.542]],["title/components/SpatialSearchListComponent.html",[275,0.758,525,1.594]],["body/components/SpatialSearchListComponent.html",[7,0.014,13,0.153,14,0.108,15,0.086,16,0.159,19,1.038,24,1.403,26,1.282,27,1.076,28,0.577,29,0.934,31,0.925,33,0.154,36,0.202,46,0.161,47,0.398,49,0.745,53,2.087,54,1.034,59,0.507,62,1.325,68,1.579,78,0.121,81,0.005,82,0.007,83,0.005,85,0.609,86,0.623,102,1.716,134,2.94,150,2.634,154,1.152,165,2.282,181,1.026,245,1.236,262,1.825,268,3.326,269,4.186,272,4.275,273,1.608,274,1.341,275,1.004,276,3.555,277,1.287,280,2.031,281,3.004,290,1.189,292,1.803,300,0.988,301,3.02,305,2.559,306,1.638,308,1.638,310,1.994,311,1.994,312,1.189,313,2.403,314,1.913,315,2.284,328,3.726,329,2.175,332,4.686,341,1.933,358,1.236,366,1.236,423,0.988,448,1.144,449,1.994,450,1.463,451,1.236,452,1.463,453,1.399,455,1.189,461,2.657,465,1.341,466,1.701,504,1.463,505,1.767,506,1.236,507,2.875,508,1.463,509,1.463,510,1.463,511,1.236,512,1.463,513,1.144,514,1.463,515,1.236,516,1.463,517,1.102,518,1.463,519,1.236,520,1.341,521,1.463,522,1.236,523,1.189,524,1.463,525,2.336,526,1.463,527,1.236,528,1.399,529,1.463,530,1.463,531,1.236,532,1.287,533,1.463,534,1.236,535,1.399,536,1.236,537,1.399,538,1.189,539,1.399,540,1.463,561,2.657,563,3.234,566,2.516,569,1.532,585,1.47,593,1.608,594,1.341,595,2.529,596,2.022,597,1.787,598,1.787,599,3.007,615,2.022,622,2.516,623,2.081,624,1.896,625,1.692,626,3.326,629,5.506,649,1.787,650,2.365,665,3.16,700,2.657,976,3.365,977,2.819,1066,2.819,1203,2.819,1224,2.621,1306,3.007,1389,2.175,1390,2.175,1401,2.175,1402,2.365,1443,3.897,1487,4.912,1606,5.433,1634,4.841,1640,2.621,1922,5.298,1923,5.298,1924,2.365,1925,3.517,1926,4.652,1927,3.897,1928,4.474,1929,4.474,1930,4.652,1931,4.652,1932,3.008,1933,3.008,1934,3.008,1935,3.008,1936,3.897,1937,4.474,1938,3.897,1939,3.008,1940,3.897,1941,3.517,1942,3.517,1943,3.897,1944,3.008,1945,3.897,1946,3.008,1947,2.365,1948,2.175,1949,4.652,1950,3.897,1951,5.152,1952,3.897,1953,2.621,1954,2.621,1955,2.621,1956,2.621,1957,2.621,1958,2.621,1959,4.474,1960,3.008,1961,3.008,1962,3.008,1963,3.008]],["title/interfaces/SpatialSearchListItem.html",[47,0.359,1948,2.917]],["body/interfaces/SpatialSearchListItem.html",[7,0.014,13,0.129,14,0.161,15,0.129,16,0.097,28,0.474,31,0.7,33,0.229,36,0.301,46,0.213,47,0.59,49,0.831,53,2.488,54,1.233,59,0.754,68,1.58,78,0.108,81,0.007,82,0.009,83,0.007,84,1.418,85,0.62,86,0.823,102,1.28,134,2.751,150,2.614,154,1.291,165,2.099,181,1.076,262,2.116,268,3.327,269,3.514,272,4.276,273,3.161,274,1.995,275,1.112,276,3.726,277,1.914,280,2.519,281,3.726,301,2.855,305,1.469,306,1.639,308,1.639,310,1.995,311,1.995,313,1.702,314,1.914,315,1.914,328,3.727,329,2.176,332,5.059,341,2.242,461,2.658,525,1.768,569,3.011,585,1.47,595,1.914,665,3.161,700,2.658,976,2.82,977,2.82,1066,2.82,1203,2.82,1306,3.009,1487,4.912,1606,5.49,1634,4.928,1922,3.235,1923,3.235,1924,3.519,1925,3.519,1926,3.899,1927,3.899,1930,3.899,1931,3.899,1936,3.899,1938,3.899,1940,3.899,1941,3.519,1942,3.519,1943,3.899,1945,3.899,1947,4.651,1948,4.276,1949,3.899,1950,5.153,1951,6.141,1952,5.153,1953,3.899,1954,3.899,1955,3.899,1956,3.899,1957,3.899,1958,3.899]],["title/modules/SpatialSearchListModule.html",[0,1.478,1964,2.917]],["body/modules/SpatialSearchListModule.html",[2,2.002,3,2.426,7,0.014,10,2.613,11,2.157,12,1.735,13,0.163,14,0.204,15,0.163,16,0.123,33,0.414,35,2.613,36,0.382,46,0.204,71,2.33,78,0.103,81,0.009,82,0.011,83,0.009,150,1.93,301,2.708,362,2.94,363,2.94,364,3.063,365,2.33,525,3.298,548,4.083,549,3.369,1922,4.1,1923,4.1,1964,5.854,1965,4.941,1966,4.941,1967,4.941,1968,5.672,1969,5.988,1970,4.941,1971,6.873,1972,5.672,1973,6.873,1974,5.672,1975,5.672]],["title/interfaces/StackOp.html",[47,0.359,942,2.712]],["body/interfaces/StackOp.html",[7,0.014,12,1.444,13,0.093,14,0.116,15,0.093,16,0.07,27,0.526,28,0.447,31,0.958,33,0.242,36,0.218,46,0.17,47,0.42,49,0.657,54,1.304,58,2.403,59,1.183,68,1.142,69,2.295,78,0.101,81,0.01,82,0.008,83,0.005,84,1.025,85,0.639,86,0.853,97,1.185,102,1.022,154,1.086,164,2.978,165,1.941,178,0.99,180,1.941,181,0.526,262,0.892,267,5.08,270,2.176,271,3.511,274,1.443,275,0.887,277,1.384,280,2.119,289,4.157,290,2.843,291,1.648,300,2.667,305,1.063,306,1.185,308,1.185,310,1.443,311,1.443,313,1.231,314,1.384,315,1.384,326,1.82,329,3.499,339,2.403,340,1.505,341,1.874,423,1.83,451,2.794,513,1.231,585,0.804,595,2.383,620,2.975,644,2.176,775,3.166,886,1.922,888,2.176,891,4.028,898,2.176,900,3.119,901,2.975,910,2.34,911,2.34,912,2.975,913,5.77,914,3.413,915,2.545,916,2.545,917,5.863,918,2.545,920,2.545,926,5.52,927,2.545,928,2.545,929,4.382,930,2.545,934,2.975,935,4.72,936,2.545,938,2.545,939,6.2,940,4.382,941,4.382,942,4.378,944,2.34,945,2.545,946,2.34,947,2.545,954,2.34,955,3.413,957,2.545,958,2.545,959,2.34,960,2.545,961,5.347,963,2.34,964,4.816,965,2.34,967,2.34,968,2.34,969,2.176,970,2.34,971,2.545,972,2.804,973,3.413,974,3.413,975,4.708,976,3.511,977,4.104,978,2.545,979,2.545,980,3.712,981,2.545,982,3.712,983,2.545,984,2.545,985,2.039,986,3.712,987,2.545,988,4.382,989,2.34,990,2.545,991,2.545,992,3.712,993,2.545,994,2.545,995,3.712,996,2.545,997,2.34,998,3.712,999,3.712,1000,3.712,1001,2.176,1002,2.545,1003,1.922,1004,2.545,1005,2.545,1006,2.545,1007,2.545,1008,2.545,1009,2.545,1010,2.545,1011,2.545,1012,2.545,1013,2.545,1014,2.545,1015,2.545,1016,2.545,1017,2.545,1018,2.545,1019,2.545,1020,2.176,1021,2.34,1022,2.176,1023,2.545,1024,2.545,1025,2.34,1026,2.34,1027,2.545,1028,2.34,1029,2.545,1030,1.922,1031,2.545,1032,2.545,1033,2.34,1034,2.34,1035,2.545,1036,2.545,1037,2.545,1038,2.545]],["title/components/StoreDebugComponent.html",[275,0.758,527,1.658]],["body/components/StoreDebugComponent.html",[7,0.014,13,0.165,14,0.123,15,0.098,16,0.158,19,1.14,24,1.391,26,0.821,27,1.208,28,0.555,29,0.598,31,0.768,33,0.294,36,0.23,46,0.207,49,0.579,54,1.099,58,2.928,59,0.577,61,3.237,62,1.637,69,3.056,78,0.126,81,0.005,82,0.008,83,0.005,85,0.289,86,0.684,102,1.745,114,0.821,126,2.469,134,1.591,150,1.164,154,0.957,176,2.218,178,1.503,179,1.123,180,2.196,181,0.934,245,1.405,262,1.354,274,1.525,275,1.437,277,1.463,290,1.351,292,1.793,300,1.123,301,1.253,305,2.61,306,1.799,308,1.799,310,2.19,311,2.19,312,1.351,313,2.531,314,2.101,315,2.459,326,2.764,339,2.502,340,2.285,341,1.503,358,1.405,366,1.405,423,1.123,448,1.301,449,2.19,450,1.663,451,1.405,452,1.663,453,1.591,455,1.351,465,1.525,466,1.868,496,1.741,504,1.663,505,1.941,506,1.405,507,3.056,508,1.663,509,1.663,510,1.663,511,1.405,512,1.663,513,1.301,514,1.663,515,1.405,516,1.663,517,1.253,518,1.663,519,1.405,520,1.525,521,1.663,522,1.405,523,1.351,524,1.663,525,1.351,526,1.663,527,2.582,528,3.857,529,1.663,530,1.663,531,1.405,532,1.463,533,1.663,534,1.405,535,1.591,536,1.405,537,1.591,538,1.351,539,1.591,540,1.663,566,2.764,585,1.221,593,1.828,595,1.463,596,2.299,619,2.689,665,2.626,692,3.096,815,3.734,825,3.416,900,1.741,965,3.552,1113,3.096,1176,3.552,1184,3.552,1266,4.8,1275,3.416,1285,2.472,1341,3.096,1487,3.096,1976,5.281,1977,5.281,1978,2.689,1979,4.28,1980,7.306,1981,5.75,1982,4.914,1983,4.914,1984,6.286,1985,6.286,1986,4.914,1987,4.942,1988,4.914,1989,4.914,1990,4.914,1991,3.42,1992,4.914,1993,3.42,1994,4.914,1995,3.42,1996,3.42,1997,5.009,1998,5.8,1999,2.98,2000,4.28,2001,3.42,2002,3.42,2003,3.42,2004,3.42,2005,3.42,2006,4.914,2007,3.42,2008,3.42,2009,3.42,2010,3.42,2011,3.42,2012,3.42,2013,4.914,2014,4.914,2015,4.914,2016,4.28]],["title/modules/StoreDebugModule.html",[0,1.478,2017,2.917]],["body/modules/StoreDebugModule.html",[2,2.096,3,2.494,7,0.013,10,2.686,11,2.258,12,1.816,13,0.171,14,0.214,15,0.171,16,0.129,33,0.386,35,2.686,36,0.4,46,0.214,71,2.44,78,0.108,81,0.01,82,0.011,83,0.01,362,3.022,363,3.022,364,3.149,365,2.44,527,3.448,528,2.762,1976,4.292,1977,4.292,2017,5.908,2018,5.173,2019,5.173,2020,5.173,2021,5.938,2022,5.938]],["title/components/TextSearchComponent.html",[275,0.758,312,1.594]],["body/components/TextSearchComponent.html",[7,0.014,13,0.138,14,0.091,15,0.073,16,0.165,19,0.911,24,1.474,26,1.407,27,1.159,28,0.588,29,1.168,30,3.045,31,0.916,33,0.317,36,0.17,46,0.173,47,0.226,49,0.884,54,0.686,56,1.578,59,0.662,62,1.624,63,1.909,68,0.894,72,3.029,78,0.113,81,0.004,82,0.006,83,0.004,85,0.214,86,0.546,102,1.672,112,1.523,114,0.608,115,1.041,116,1.129,117,1.505,119,0.894,137,1.425,150,0.862,154,1.055,162,1.129,164,1.231,165,2.326,170,1.505,175,0.963,176,0.894,179,1.289,180,1.715,181,1.177,245,1.613,258,4.235,259,5.126,260,5.126,261,1.831,262,1.614,263,1.831,264,2.207,265,4.829,266,5.949,267,1.703,268,2.208,269,2.855,270,1.703,271,1.596,272,2.838,273,2.568,274,1.129,275,1.101,276,2.703,277,1.083,278,1.425,279,2.838,280,2.357,281,2.703,282,4.187,283,1.831,284,4.606,285,1.831,286,2.639,287,3.029,288,4.187,289,1.354,290,1.551,291,1.29,292,1.906,293,4.873,294,5.896,295,1.992,296,1.992,297,1.831,298,1.831,299,1.596,300,2.654,301,2.967,302,5.838,303,3.42,304,3.087,305,2.484,306,1.438,307,3.42,308,1.438,309,4.187,310,1.75,311,1.75,312,2.139,313,2.228,314,1.679,315,2.056,316,3.938,317,2.207,318,2.207,319,2.207,320,2.207,321,1.231,322,3.42,323,5.632,324,3.42,325,3.42,326,3.486,327,5.104,328,3.905,329,1.909,330,4.187,331,5.393,332,3.029,333,4.187,334,5.393,335,5.104,336,4.187,337,3.42,338,3.42,339,1.999,340,1.826,341,1.201,342,4.187,343,2.207,344,2.207,345,3.42,346,2.838,347,3.42,348,3.087,349,2.855,350,3.42,351,2.332,352,2.207,353,2.207,358,1.041,366,1.041,423,1.289,448,0.963,449,1.75,450,1.231,451,1.041,452,1.231,453,1.178,455,1.001,465,1.129,466,1.493,504,1.231,505,1.551,506,1.041,507,2.632,508,1.231,509,1.231,510,1.231,511,1.041,512,1.231,513,0.963,514,1.231,515,1.041,516,1.231,517,0.928,518,1.231,519,1.041,520,1.129,521,1.231,522,1.041,523,1.001,524,1.231,525,1.001,526,1.231,527,1.041,528,1.178,529,1.231,530,1.231,531,1.041,532,1.083,533,1.231,534,1.041,535,1.178,536,1.041,537,1.178,538,1.001,539,1.178,540,1.231,561,2.332,563,2.838,566,2.208,585,0.629,593,1.354,595,1.083,596,1.703,597,1.505,598,1.505,600,1.505,603,2.838,606,1.831,622,1.425,623,1.178,624,1.596,626,1.425,631,1.831,634,4.235,639,2.332,649,2.332,1113,2.474,1184,1.831,1389,1.831,1390,1.831,1392,2.207,1401,1.831,1477,4.48,1634,1.703,1638,3.42,1835,2.207,1941,1.992,1942,1.992,2023,3.926,2024,3.926,2025,3.926,2026,2.533,2027,2.533,2028,2.533,2029,2.533,2030,2.533,2031,3.926,2032,2.533,2033,2.533,2034,3.926,2035,2.533,2036,2.533,2037,2.533,2038,2.533,2039,2.533,2040,2.207,2041,2.533,2042,2.533,2043,2.533,2044,2.533,2045,2.533,2046,2.533,2047,2.533,2048,2.533,2049,2.533]],["title/modules/TextSearchModule.html",[0,1.478,2050,2.917]],["body/modules/TextSearchModule.html",[2,1.883,3,2.336,7,0.014,10,2.517,11,2.028,12,1.631,13,0.153,14,0.192,15,0.153,16,0.116,33,0.413,35,2.517,36,0.359,46,0.192,71,2.72,78,0.097,81,0.009,82,0.011,83,0.009,259,3.586,260,3.586,283,3.856,290,2.107,291,2.716,300,1.751,312,3.272,362,2.831,363,2.831,364,2.95,365,2.191,970,3.856,1040,5.301,1477,3.856,2050,5.96,2051,4.647,2052,5.334,2053,4.647,2054,4.647,2055,6.965,2056,6.965,2057,5.334,2058,6.619,2059,6.619,2060,6.619,2061,5.334,2062,6.619,2063,5.334,2064,6.619,2065,5.334,2066,5.334,2067,5.334,2068,5.334,2069,5.334]],["title/components/TrackingPopupComponent.html",[275,0.758,531,1.658]],["body/components/TrackingPopupComponent.html",[0,1.256,6,3.638,7,0.014,12,2.039,13,0.165,14,0.123,15,0.099,16,0.164,19,1.142,24,1.45,26,1.383,27,1.127,28,0.573,29,1.007,31,0.901,33,0.295,36,0.231,46,0.123,49,0.405,53,2.352,54,0.6,59,0.971,62,1.103,68,2.033,74,1.529,78,0.105,81,0.005,82,0.008,83,0.005,85,0.416,86,0.685,102,1.752,126,2.112,132,2.161,150,1.167,168,3.102,179,1.126,181,1.022,245,2.023,274,1.529,275,1.083,277,1.467,278,1.929,290,1.355,292,1.405,300,1.126,301,1.256,302,2.697,305,2.611,306,1.803,308,1.803,310,2.194,311,2.194,312,1.355,313,1.872,314,2.106,315,2.463,358,1.409,366,1.409,423,2.278,448,1.304,449,2.194,450,1.668,451,1.409,452,1.668,453,1.595,455,1.355,458,3.872,465,1.529,466,2.19,504,1.668,505,1.945,506,1.409,507,3.06,508,1.668,509,1.668,510,1.668,511,1.409,512,1.668,513,1.304,514,1.668,515,1.409,516,1.668,517,1.256,518,1.668,519,1.409,520,1.529,521,1.668,522,1.409,523,1.355,524,1.668,525,1.355,526,1.668,527,1.409,528,1.595,529,1.668,530,1.668,531,2.586,532,3.305,533,1.668,534,1.409,535,1.595,536,1.409,537,1.595,538,1.355,539,1.595,540,1.668,566,2.769,585,1.564,593,1.833,594,1.529,595,2.106,597,2.037,598,2.925,613,3.559,622,2.769,623,2.29,625,2.769,646,3.559,649,2.925,651,2.306,694,2.306,710,5.015,813,3.102,827,3.559,828,3.31,972,3.421,1113,3.102,1227,3.31,1253,3.559,1254,3.31,1256,3.966,1257,4.528,1296,3.871,1348,4.163,1394,2.697,1530,4.289,1551,2.988,1552,2.988,1553,2.988,1554,2.697,1566,4.818,1634,2.306,1875,5.806,2070,5.94,2071,5.94,2072,2.988,2073,5.76,2074,4.924,2075,6.294,2076,4.924,2077,4.924,2078,5.854,2079,4.924,2080,4.924,2081,4.924,2082,3.43,2083,4.924,2084,7.555,2085,3.43,2086,4.924,2087,3.43,2088,3.43,2089,4.924,2090,3.43,2091,3.43,2092,3.43,2093,3.43,2094,3.43,2095,3.43,2096,3.43,2097,3.43,2098,3.43,2099,4.924,2100,3.43,2101,3.43,2102,3.43,2103,3.43,2104,3.43,2105,4.289,2106,4.924,2107,4.289,2108,4.924,2109,3.43,2110,3.43,2111,4.924,2112,3.43,2113,3.43,2114,3.43,2115,3.43,2116,3.43,2117,4.924,2118,5.76,2119,3.43,2120,3.43,2121,3.43,2122,3.43,2123,3.43,2124,3.43,2125,2.697,2126,3.43,2127,3.43,2128,3.43,2129,3.43,2130,3.43]],["title/modules/TrackingPopupModule.html",[0,1.478,2131,2.917]],["body/modules/TrackingPopupModule.html",[2,2.069,3,2.474,7,0.014,10,2.666,11,2.229,12,1.793,13,0.168,14,0.211,15,0.168,16,0.127,33,0.398,35,2.666,36,0.395,46,0.211,71,2.408,78,0.107,81,0.009,82,0.011,83,0.009,362,2.999,363,2.999,364,3.125,365,2.408,531,3.443,532,2.507,1969,6.108,1970,5.107,2070,4.609,2071,4.609,2131,5.893,2132,5.107,2133,5.107,2134,5.107,2135,5.862,2136,5.862]],["title/injectables/TrackingState.html",[93,0.706,2137,2.917]],["body/injectables/TrackingState.html",[7,0.014,13,0.151,14,0.189,15,0.151,16,0.142,19,1.522,24,1.024,26,1.262,27,1.065,28,0.421,29,0.919,31,0.822,33,0.383,36,0.354,40,2.677,41,2.556,46,0.269,47,0.468,53,2.72,54,1.309,56,1.726,59,0.886,62,1.47,63,2.556,74,2.343,76,2.619,78,0.096,81,0.008,82,0.011,83,0.008,85,0.445,93,1.147,231,2.077,245,2.16,321,2.556,371,3.189,493,4.41,496,2.677,532,2.249,585,1.63,665,3.505,693,3.313,1058,3.534,1106,5.622,1142,5.158,1143,4.134,1144,4.134,1274,3.313,1507,3.8,2078,6.059,2137,4.742,2138,3.534,2139,6.56,2140,5.715,2141,6.229,2142,5.258,2143,3.8,2144,3.8,2145,4.742,2146,4.807,2147,4.58,2148,4.58,2149,5.715,2150,4.58,2151,4.58,2152,4.58,2153,4.58,2154,4.134,2155,4.58,2156,4.58,2157,4.58]],["title/interfaces/TrackingStateModel.html",[47,0.359,2143,2.917]],["body/interfaces/TrackingStateModel.html",[7,0.014,13,0.154,14,0.193,15,0.154,16,0.116,27,0.87,28,0.429,29,1.161,33,0.386,36,0.361,40,2.727,41,2.604,46,0.271,47,0.477,53,2.735,54,1.318,56,1.759,59,0.903,62,1.487,63,2.604,74,2.388,76,2.641,78,0.098,81,0.009,82,0.011,83,0.009,84,1.697,85,0.453,86,0.924,93,1.161,321,2.604,371,2.604,493,4.462,496,2.727,532,2.291,585,1.331,665,3.547,693,3.376,1058,3.601,1106,5.219,1142,5.219,1143,4.212,1144,4.212,1274,3.376,1507,3.873,2078,6.292,2137,3.873,2138,3.601,2140,4.667,2141,5.782,2143,4.798,2144,3.873,2145,4.798,2146,4.848,2147,4.667,2148,4.667,2149,5.782,2150,4.667,2151,4.667,2152,4.667,2153,4.667,2154,4.212,2155,4.667,2156,4.667,2157,4.667]],["title/injectables/WorkerCCFDatabaseDataSourceService.html",[93,0.706,438,2.542]],["body/injectables/WorkerCCFDatabaseDataSourceService.html",[7,0.014,13,0.099,14,0.227,15,0.099,16,0.107,19,1.143,24,1.565,26,1.872,27,1.227,28,0.625,29,1.321,31,1.244,33,0.366,36,0.231,46,0.177,47,0.306,49,0.581,54,1.008,59,0.971,76,1.257,78,0.105,81,0.005,82,0.008,83,0.005,85,0.29,86,0.686,88,1.873,93,1.101,97,2.965,102,0.743,103,3.259,112,2.556,114,0.824,115,1.411,116,1.53,119,1.212,122,2.292,123,1.835,124,1.835,126,1.088,151,1.748,152,3.374,154,0.669,175,1.305,176,1.212,180,1.826,181,1.127,185,2.68,189,2.68,191,2.68,193,2.68,196,2.68,198,2.68,201,1.597,203,1.597,205,1.597,207,1.597,209,1.597,212,1.597,214,1.597,216,1.597,231,1.356,232,2.633,233,2.633,234,2.633,235,2.633,236,2.633,237,2.633,242,3.228,349,3.423,351,2.926,368,4.504,369,3.312,370,2.308,371,3.241,372,2.934,373,3.241,374,4.165,375,4.038,376,3.708,377,3.874,378,2.926,379,2.308,381,2.699,382,4.692,383,5.587,385,4.551,386,4.551,388,2.163,389,3.241,390,2.926,391,5.375,392,4.166,393,2.308,394,2.308,395,2.308,396,2.308,397,2.308,398,2.308,399,2.308,400,2.308,401,2.308,402,2.308,403,2.308,404,2.308,405,2.308,406,2.699,407,3.561,408,3.561,409,2.482,410,3.561,411,2.482,412,2.308,413,3.561,414,3.104,415,1.931,416,1.835,417,2.308,418,2.308,419,2.482,420,2.308,421,2.482,422,2.482,423,1.127,424,2.482,425,2.482,426,2.482,427,2.482,428,2.482,429,2.039,430,3.561,431,2.482,432,2.308,433,2.308,434,2.482,435,2.163,436,2.482,437,3.312,438,3.104,439,3.561,440,3.874,441,2.482,442,2.482,443,2.482,444,2.482,446,2.991,447,2.991,2158,4.927,2159,3.433,2160,3.433]],["title/components/XYZPositionComponent.html",[275,0.758,534,1.658]],["body/components/XYZPositionComponent.html",[7,0.014,13,0.178,14,0.141,15,0.113,16,0.161,24,1.411,27,1.176,28,0.58,33,0.201,36,0.264,46,0.141,49,0.638,62,1.623,69,2.63,78,0.132,81,0.006,82,0.009,83,0.006,85,0.332,86,0.753,102,1.773,150,1.334,165,2.22,181,1.176,245,1.611,262,1.08,274,1.748,275,1.317,277,1.677,280,2.539,290,1.549,292,2.066,300,1.287,301,1.436,305,2.66,306,1.981,308,1.981,310,2.411,311,2.411,312,1.549,313,2.664,314,2.314,315,2.649,358,1.611,366,1.611,423,2.378,448,1.491,449,2.411,450,1.906,451,1.611,452,1.906,453,1.824,455,1.549,465,1.748,466,2.057,504,1.906,505,2.137,506,1.611,507,3.246,508,1.906,509,1.906,510,1.906,511,1.611,512,1.906,513,1.491,514,1.906,515,1.611,516,1.906,517,1.436,518,1.906,519,1.611,520,1.748,521,1.906,522,1.611,523,1.549,524,1.906,525,1.549,526,1.906,527,1.611,528,1.824,529,1.906,530,1.906,531,1.611,532,1.677,533,1.906,534,2.743,535,3.681,536,3.342,537,1.824,538,1.549,539,1.824,540,1.906,561,3.213,566,3.042,593,2.095,595,1.677,615,3.637,616,2.834,622,3.042,625,2.205,651,2.636,1341,3.409,1402,3.083,1464,6.17,1832,3.416,2125,6.17,2161,5.836,2162,5.836,2163,3.416,2164,6.836,2165,6.194,2166,5.41,2167,6.103,2168,3.921,2169,3.921,2170,3.921,2171,5.41,2172,4.713,2173,4.713,2174,3.921,2175,7.243,2176,3.921,2177,3.921]],["title/modules/XYZPositionModule.html",[0,1.478,2178,2.917]],["body/modules/XYZPositionModule.html",[2,2.096,3,2.494,7,0.013,10,2.686,11,2.258,12,1.816,13,0.171,14,0.214,15,0.171,16,0.129,33,0.386,35,2.686,36,0.4,46,0.214,71,2.44,78,0.108,81,0.01,82,0.011,83,0.01,362,3.022,363,3.022,364,3.149,365,2.44,534,3.448,535,2.762,2161,4.669,2162,4.669,2178,5.908,2179,5.173,2180,5.173,2181,5.173,2182,5.938,2183,5.938]],["title/interfaces/XYZTriplet.html",[47,0.359,2184,3.172]],["body/interfaces/XYZTriplet.html",[7,0.014,10,2.378,13,0.097,14,0.122,15,0.097,16,0.073,27,0.549,28,0.458,33,0.292,36,0.228,46,0.122,47,0.301,49,0.674,53,1.72,54,1.159,59,1.228,62,1.595,68,2.619,74,1.508,78,0.104,81,0.005,82,0.008,83,0.005,84,1.072,85,0.286,86,0.678,100,3.184,102,1.237,114,0.812,134,3.451,154,1.386,162,2.173,165,2.5,178,1.035,180,2.442,181,1.156,268,1.902,275,1.074,276,4.002,277,1.447,280,2.821,281,4.002,305,1.111,306,1.239,308,1.239,313,1.286,314,1.447,315,1.447,340,1.573,349,2.009,351,2.009,358,1.39,359,2.66,360,2.66,366,3.048,414,2.131,423,2.473,433,2.274,585,1.647,623,1.573,626,1.902,649,2.009,744,2.131,815,2.009,825,2.895,1034,2.445,1062,2.445,1242,2.66,1266,2.274,1275,2.895,1294,2.131,1341,2.131,1464,5.212,1566,4.131,1668,4.246,1669,2.947,1683,3.524,1817,2.947,1987,2.66,2125,4.917,2164,5.774,2184,5.429,2185,2.947,2186,7.42,2187,3.383,2188,3.383,2189,5.595,2190,2.947,2191,3.383,2192,2.947,2193,3.383,2194,3.383,2195,4.978,2196,4.875,2197,3.383,2198,3.383,2199,4.875,2200,4.875,2201,3.383,2202,3.383,2203,3.383,2204,4.875,2205,3.383,2206,3.383,2207,4.875,2208,3.383,2209,3.383,2210,4.875,2211,4.875,2212,3.383,2213,3.383,2214,4.875,2215,3.383,2216,3.383,2217,4.875,2218,4.875,2219,3.383,2220,3.383,2221,3.383,2222,3.383,2223,3.383,2224,3.383,2225,3.383,2226,4.875,2227,4.875,2228,3.383,2229,4.875,2230,3.383,2231,3.383,2232,3.383,2233,3.383,2234,3.383,2235,3.383,2236,3.383,2237,3.383,2238,3.383,2239,3.383,2240,3.383,2241,3.383,2242,3.383,2243,3.383,2244,3.383,2245,3.383,2246,3.383,2247,2.947,2248,4.246,2249,3.383,2250,4.875,2251,3.383,2252,4.875,2253,3.383,2254,4.875,2255,5.715,2256,3.383,2257,3.383,2258,3.383,2259,3.383,2260,3.383,2261,3.383,2262,3.383,2263,3.383,2264,4.875,2265,3.383,2266,3.383,2267,4.875,2268,3.383,2269,4.875,2270,3.383,2271,3.383,2272,3.383,2273,3.383,2274,3.383,2275,3.383,2276,3.383,2277,3.383,2278,3.383,2279,3.383,2280,3.383,2281,3.383,2282,3.383,2283,4.875,2284,3.383,2285,3.383,2286,3.383,2287,3.383,2288,3.383,2289,3.383,2290,3.383,2291,3.383,2292,3.383,2293,3.383,2294,3.383,2295,3.383,2296,4.875,2297,3.383,2298,3.383,2299,3.383,2300,3.383]],["title/changelog.html",[2301,2.645,2302,2.432,2303,2.645]],["body/changelog.html",[3,1.503,7,0.01,13,0.157,18,0.997,24,0.327,28,0.135,29,0.294,30,1.584,40,0.855,41,0.816,47,0.51,68,1.503,81,0.003,82,0.005,83,0.01,84,0.532,86,0.234,97,1.559,102,1.656,103,2.114,117,0.997,126,2.352,132,1.058,139,1.893,141,1.129,145,1.673,146,1.774,149,1.129,150,1.449,152,0.816,154,1.197,159,1.058,165,0.532,176,0.593,182,3.346,183,0.944,265,2.036,268,0.944,271,3.234,273,1.505,275,0.8,292,0.479,299,3.234,301,2.496,305,0.925,316,1.129,326,2.667,329,1.768,331,2.214,332,1.774,334,1.32,346,1.214,366,2.444,414,2.682,432,1.893,449,1.255,451,0.69,453,0.781,458,1.893,459,1.673,460,1.058,462,2.16,463,1.214,465,1.897,481,1.555,487,2.667,495,1.463,505,0.663,520,0.748,523,2.95,536,0.69,570,5.28,571,5.483,575,4.984,579,1.463,584,1.129,593,0.897,595,2.028,596,2.445,600,0.997,602,1.058,613,3.077,620,1.058,623,0.781,635,2.453,640,3.168,642,1.463,646,1.214,683,2.629,689,1.214,694,1.893,696,4.3,700,1.673,701,4.036,708,5.276,710,1.214,739,1.058,888,1.129,904,1.505,912,1.058,934,1.058,944,1.214,953,1.32,959,2.036,968,2.036,972,0.997,974,1.214,975,5.997,977,1.774,985,2.292,989,1.214,1003,0.997,1020,1.893,1021,2.036,1022,1.129,1028,1.214,1030,1.673,1049,1.893,1052,2.887,1053,1.058,1054,1.214,1059,2.036,1066,1.058,1140,3.188,1176,1.214,1179,2.453,1180,4.132,1196,1.463,1198,1.32,1203,1.058,1227,3.666,1230,1.32,1234,1.463,1239,2.214,1243,2.036,1244,4.472,1245,2.036,1246,1.214,1247,1.463,1248,1.463,1256,1.774,1294,4.228,1306,3.451,1311,1.463,1341,1.058,1348,1.214,1357,1.32,1361,3.347,1362,1.32,1371,1.32,1396,1.32,1450,1.32,1459,1.463,1475,1.463,1477,1.214,1478,4.472,1487,1.774,1554,1.32,1571,1.463,1592,3.168,1606,1.129,1608,6.161,1622,2.453,1633,3.709,1639,1.463,1641,1.463,1660,1.32,1661,1.463,1663,1.463,1664,2.453,1665,5.359,1666,1.463,1703,2.859,1733,1.32,1747,1.32,1748,1.32,1780,2.453,1781,2.453,1795,3.168,1797,3.168,1850,4.751,1868,1.463,1925,1.32,1947,2.214,1979,1.463,1987,4.036,2016,1.463,2107,1.463,2154,1.32,2167,1.463,2172,4.984,2173,3.709,2189,4.964,2190,6.019,2192,3.709,2195,5.182,2247,3.168,2248,1.463,2302,2.629,2303,2.214,2304,1.463,2305,1.463,2306,3.637,2307,4.743,2308,2.816,2309,3.637,2310,3.637,2311,2.816,2312,1.679,2313,2.816,2314,2.816,2315,5.454,2316,5.133,2317,2.816,2318,1.679,2319,1.679,2320,4.257,2321,1.679,2322,1.679,2323,2.816,2324,3.637,2325,3.637,2326,4.984,2327,6.144,2328,1.679,2329,2.816,2330,2.816,2331,1.463,2332,1.679,2333,1.679,2334,1.679,2335,3.637,2336,3.168,2337,1.679,2338,1.679,2339,1.679,2340,6.314,2341,6.462,2342,2.816,2343,4.743,2344,1.463,2345,2.816,2346,5.133,2347,2.816,2348,1.679,2349,1.679,2350,1.679,2351,2.816,2352,4.751,2353,1.679,2354,5.454,2355,1.679,2356,2.816,2357,1.679,2358,4.257,2359,6.711,2360,2.816,2361,3.637,2362,1.679,2363,1.679,2364,1.679,2365,1.679,2366,1.679,2367,1.463,2368,1.463,2369,1.463,2370,1.679,2371,2.816,2372,1.463,2373,1.679,2374,2.816,2375,4.257,2376,4.257,2377,1.679,2378,3.637,2379,1.679,2380,1.679,2381,2.816,2382,1.679,2383,1.679,2384,4.132,2385,3.168,2386,1.679,2387,4.132,2388,2.816,2389,1.679,2390,3.637,2391,4.984,2392,6.594,2393,1.679,2394,1.679,2395,2.816,2396,6.314,2397,3.168,2398,1.679,2399,1.679,2400,1.679,2401,4.743,2402,1.679,2403,1.679,2404,1.679,2405,3.637,2406,1.679,2407,2.453,2408,2.453,2409,5.454,2410,1.679,2411,4.984,2412,1.679,2413,1.679,2414,1.679,2415,1.679,2416,1.679,2417,1.679,2418,4.132,2419,4.677,2420,4.132,2421,1.679,2422,2.816,2423,2.816,2424,2.816,2425,2.816,2426,2.816,2427,1.679,2428,1.679,2429,1.679,2430,1.679,2431,3.168,2432,2.816,2433,2.816,2434,2.816,2435,2.816,2436,2.816,2437,4.257,2438,2.453,2439,1.679,2440,1.679,2441,1.679,2442,2.816,2443,1.679,2444,1.679,2445,2.453,2446,1.679,2447,3.637,2448,2.816,2449,5.133,2450,2.453,2451,4.257,2452,1.679,2453,1.679,2454,4.257,2455,1.679,2456,1.679,2457,1.463,2458,2.816,2459,1.679,2460,1.679,2461,2.816,2462,1.679,2463,2.816,2464,1.679,2465,1.463,2466,1.679,2467,1.679,2468,1.679,2469,1.679,2470,1.679,2471,1.679,2472,1.679,2473,1.679,2474,1.679,2475,1.679,2476,1.679,2477,1.679,2478,1.679,2479,2.816,2480,1.679,2481,5.133,2482,1.679,2483,1.679,2484,3.637,2485,3.637,2486,2.453,2487,1.679,2488,1.679,2489,1.679,2490,2.816,2491,1.679,2492,1.679,2493,1.679,2494,2.816,2495,2.816,2496,3.637,2497,1.679,2498,1.679,2499,1.679,2500,1.679,2501,2.816,2502,1.679,2503,2.816,2504,4.257,2505,1.679,2506,1.679,2507,1.679,2508,5.133,2509,2.816,2510,1.679,2511,1.679,2512,3.637,2513,2.816,2514,2.816,2515,4.257,2516,1.679,2517,1.679,2518,1.679,2519,2.816,2520,1.679,2521,1.679,2522,1.679,2523,1.679,2524,1.679,2525,4.257,2526,1.679,2527,3.637,2528,4.257,2529,1.679,2530,3.637,2531,4.743,2532,2.816,2533,2.816,2534,2.816,2535,3.637,2536,4.257,2537,4.743,2538,3.637,2539,1.679,2540,1.679,2541,5.454,2542,1.679,2543,4.257,2544,4.257,2545,5.949,2546,1.679,2547,1.679,2548,1.679,2549,1.679,2550,1.679,2551,1.679,2552,2.816,2553,1.679,2554,1.679,2555,1.679,2556,1.679,2557,2.816,2558,1.679,2559,1.679,2560,2.816,2561,3.168,2562,2.816,2563,3.637,2564,1.679,2565,1.679,2566,1.679,2567,1.679,2568,1.679,2569,1.679,2570,1.679,2571,1.679,2572,5.133,2573,2.816,2574,3.637,2575,2.816,2576,1.679,2577,1.679,2578,1.679,2579,1.679,2580,3.637,2581,1.679,2582,1.679,2583,1.679,2584,2.816,2585,2.816,2586,2.816,2587,3.637,2588,1.679,2589,1.679,2590,1.679,2591,1.679,2592,1.679,2593,1.463,2594,1.679,2595,1.679,2596,1.679,2597,2.816,2598,1.679,2599,1.679,2600,2.816,2601,1.679,2602,1.679,2603,1.679,2604,1.679,2605,1.679,2606,1.679,2607,1.679,2608,1.679,2609,1.679,2610,1.679,2611,1.679,2612,3.168,2613,3.637,2614,4.257,2615,2.816,2616,3.637,2617,1.679,2618,2.816,2619,1.679,2620,1.679,2621,2.816,2622,2.816,2623,1.679,2624,1.679,2625,2.816,2626,1.679,2627,1.679,2628,1.679,2629,1.679,2630,1.679,2631,1.679,2632,1.679,2633,1.679,2634,1.679,2635,1.679,2636,1.679,2637,1.679,2638,1.679,2639,1.679,2640,1.679,2641,1.679,2642,1.679,2643,1.679,2644,1.679,2645,1.679,2646,1.679,2647,1.679,2648,1.679,2649,2.816,2650,1.679,2651,2.816,2652,1.679,2653,2.816,2654,2.816,2655,4.257,2656,4.257,2657,2.816,2658,2.816,2659,1.679,2660,1.679,2661,1.679,2662,1.679,2663,1.463,2664,1.679,2665,1.679,2666,1.679,2667,1.679,2668,1.679,2669,1.679,2670,2.816,2671,6.144,2672,3.637,2673,2.816,2674,1.679,2675,1.679,2676,1.679,2677,1.679,2678,1.679,2679,1.679,2680,1.679,2681,2.816,2682,4.751,2683,2.816,2684,1.679,2685,1.679,2686,1.679,2687,1.679,2688,1.679,2689,3.347,2690,1.679,2691,2.816,2692,1.679,2693,1.679,2694,1.679,2695,2.816,2696,1.679,2697,1.679,2698,1.679,2699,2.816,2700,2.453,2701,1.679,2702,1.679,2703,1.679,2704,1.679,2705,1.679,2706,1.679,2707,1.679,2708,1.679,2709,1.679,2710,1.463,2711,1.679,2712,2.453,2713,1.679,2714,1.679,2715,1.679,2716,1.679,2717,1.679,2718,1.679,2719,2.816,2720,1.679,2721,2.816,2722,1.679,2723,1.679,2724,1.679,2725,1.679,2726,1.679,2727,1.679,2728,1.679,2729,1.679,2730,1.679,2731,1.463,2732,2.816,2733,1.679,2734,1.679,2735,1.679,2736,1.679,2737,2.816,2738,1.679,2739,1.679,2740,1.679,2741,1.679,2742,1.679,2743,1.679,2744,1.679]],["title/coverage.html",[2689,4.338]],["body/coverage.html",[6,1.373,7,0.014,8,1.602,9,1.602,15,0.077,16,0.184,17,3.762,23,1.949,28,0.216,41,1.311,45,2.317,47,0.695,55,1.949,56,2.599,70,1.949,78,0.116,81,0.004,82,0.007,83,0.004,87,1.699,88,2.983,89,4.077,90,4.077,93,1.327,122,1.254,125,1.373,136,1.699,138,1.602,153,1.699,154,0.525,155,1.699,157,1.699,161,1.699,163,1.699,177,1.699,211,1.699,258,1.949,259,3.36,260,3.36,261,3.613,275,1.399,289,1.441,291,3.235,297,1.949,301,2.049,312,1.065,316,1.813,358,1.108,359,3.239,360,3.239,368,1.699,369,3.762,370,3.762,372,1.373,382,1.699,392,1.441,423,2.745,435,1.699,438,1.699,448,1.025,454,2.769,455,1.628,456,1.813,457,2.349,473,1.517,498,1.517,500,3.25,502,1.949,506,1.108,511,1.108,513,1.025,515,1.108,517,0.988,519,1.108,522,1.108,525,1.065,527,1.108,531,1.108,534,1.108,536,1.108,538,1.065,557,2.349,624,5.089,653,1.813,654,3.834,655,4.045,669,1.441,670,1.517,672,2.849,674,2.317,676,1.813,678,1.949,680,1.602,684,1.949,690,1.949,703,1.813,776,2.349,809,3.613,812,2.12,834,3.526,835,3.36,872,2.12,873,2.349,886,3.775,887,3.93,911,3.613,935,1.813,942,1.813,969,1.813,1047,3.396,1048,3.613,1052,1.517,1057,1.699,1104,2.349,1105,2.349,1146,2.12,1147,5.102,1162,2.12,1163,2.978,1165,1.949,1264,2.349,1265,3.613,1288,2.349,1340,3.239,1354,1.949,1407,6.612,1412,2.349,1424,2.12,1425,2.349,1426,2.349,1440,2.349,1441,2.349,1495,3.239,1504,2.12,1524,2.12,1525,2.12,1558,2.12,1559,2.12,1560,2.349,1587,2.12,1588,2.12,1589,2.349,1603,2.349,1636,2.349,1653,1.949,1654,4.045,1655,4.045,1656,4.4,1675,2.12,1777,2.12,1893,1.949,1894,5.24,1895,5.24,1896,5.493,1905,2.12,1922,2.978,1923,2.978,1924,3.239,1948,1.949,1976,1.949,1977,1.949,1978,2.12,2040,2.349,2070,2.12,2071,2.12,2072,2.349,2137,1.949,2138,4.052,2143,1.949,2144,1.949,2145,1.949,2146,1.813,2161,2.12,2162,2.12,2163,2.349,2184,2.12,2185,3.589,2344,2.349,2689,2.12,2731,2.349,2745,2.697,2746,2.697,2747,2.349,2748,8.005,2749,4.999,2750,2.697,2751,2.349,2752,2.349,2753,7.352,2754,2.349,2755,2.349,2756,2.349,2757,2.349,2758,2.349,2759,2.697,2760,2.349,2761,2.349,2762,2.349,2763,6.611,2764,2.697,2765,4.12,2766,2.697,2767,2.697,2768,2.697,2769,2.697,2770,2.349,2771,2.697,2772,5.596,2773,4.12,2774,4.12,2775,2.697,2776,4.12,2777,4.12,2778,2.697,2779,2.697,2780,2.697,2781,2.697,2782,2.697,2783,2.697,2784,2.697,2785,4.12,2786,2.697,2787,2.697,2788,4.12,2789,4.12,2790,2.697,2791,2.349,2792,4.12,2793,2.697,2794,4.12,2795,2.697,2796,2.697,2797,2.697,2798,2.697,2799,2.697,2800,2.697,2801,2.697]],["title/dependencies.html",[3,1.714,2372,2.931]],["body/dependencies.html",[3,1.625,7,0.014,15,0.132,36,0.31,39,3.39,40,2.344,41,2.239,81,0.007,82,0.01,83,0.007,95,3.095,114,1.106,120,3.095,121,3.095,151,3.068,172,2.735,283,3.328,284,3.62,285,4.357,365,1.892,366,1.892,412,3.095,493,4.052,494,4.011,496,2.344,505,2.381,589,2.735,686,3.095,1026,3.328,1140,3.095,1243,4.357,1363,3.328,1373,3.62,1422,4.011,1526,4.011,1590,4.011,1667,4.011,1671,4.011,1672,4.011,2331,4.011,2387,4.011,2407,4.011,2445,4.011,2450,4.011,2561,4.011,2612,5.25,2802,4.605,2803,4.605,2804,4.605,2805,8.065,2806,4.605,2807,4.605,2808,4.605,2809,4.605,2810,4.605,2811,6.027,2812,4.605,2813,4.605,2814,4.605,2815,4.605,2816,4.605,2817,6.719,2818,4.605,2819,6.027,2820,4.605,2821,4.605,2822,4.605,2823,4.605,2824,6.719,2825,4.605,2826,4.605,2827,4.605,2828,4.605,2829,4.605,2830,4.605,2831,4.605,2832,4.605,2833,4.605,2834,4.605,2835,4.605,2836,6.027,2837,6.027,2838,4.605,2839,4.605,2840,4.605,2841,4.605,2842,4.605,2843,4.605,2844,6.027,2845,4.605,2846,4.605,2847,4.605,2848,4.605,2849,4.605,2850,4.605,2851,4.605,2852,4.605,2853,4.605,2854,4.605,2855,4.605,2856,4.605,2857,4.605,2858,4.011,2859,4.605,2860,4.605,2861,4.605,2862,4.605,2863,4.605,2864,4.605,2865,6.027,2866,4.605,2867,4.605,2868,4.605,2869,4.605,2870,4.605,2871,4.605,2872,4.605,2873,4.605,2874,4.605,2875,4.605,2876,4.605,2877,4.605,2878,4.605,2879,4.605,2880,4.605,2881,4.605,2882,4.605,2883,4.605,2884,4.605,2885,4.605,2886,4.605,2887,4.605,2888,4.605,2889,4.605,2890,4.605,2891,4.605,2892,4.605,2893,4.605,2894,4.605,2895,4.605,2896,5.25,2897,4.605,2898,4.605,2899,4.605,2900,4.605,2901,4.605,2902,4.605,2903,4.605,2904,4.605,2905,4.605,2906,4.605,2907,4.605]],["title/miscellaneous/functions.html",[2908,2.12,2909,4.23]],["body/miscellaneous/functions.html",[7,0.014,16,0.164,17,2.457,26,1.944,27,1.315,29,1.416,30,2.897,31,1.283,37,2.874,53,1.29,57,2.874,58,1.861,62,0.819,63,1.777,66,2.874,69,2.9,70,3.724,76,2.666,81,0.006,82,0.008,83,0.006,85,0.616,86,0.509,88,1.39,89,2.056,90,3.84,97,1.339,100,1.861,106,2.457,112,2.052,134,1.7,138,2.171,154,1.003,161,3.759,163,3.246,164,3.32,165,1.158,166,3.463,167,3.463,170,2.171,211,3.246,219,2.457,242,3.386,262,1.785,263,2.642,280,1.39,287,2.303,289,1.953,291,1.861,415,2.056,423,1.691,462,2.171,505,1.444,536,2.117,639,3.847,693,2.303,717,3.724,886,2.171,887,4.69,889,2.874,893,3.184,897,3.184,898,2.457,899,3.184,900,2.623,901,4.826,902,3.184,903,3.184,904,1.953,905,3.184,906,3.184,912,2.303,934,2.303,946,2.642,969,4.01,1033,2.642,1051,3.463,1115,5.57,1117,6.022,1119,5.844,1146,4.69,1147,4.354,1149,2.874,1167,3.184,1203,2.303,1275,2.171,1524,2.874,1525,4.05,1529,3.184,1535,2.874,1683,2.642,1894,2.642,1895,5.537,1896,6.367,1897,5.642,1902,6.811,1906,3.184,1907,3.184,1908,3.184,1909,3.184,1910,5.197,1911,6.811,1912,6.172,1913,6.172,1914,5.642,1915,4.488,1916,5.197,2138,2.457,2146,4.01,2465,3.184,2712,3.184,2747,4.488,2751,3.184,2752,4.488,2754,3.184,2755,5.197,2756,3.184,2757,4.488,2758,4.488,2762,4.488,2770,4.488,2791,4.488,2896,3.184,2908,2.303,2909,3.184,2910,5.093,2911,3.655,2912,3.655,2913,3.184,2914,4.488,2915,3.655,2916,5.152,2917,6.583,2918,3.655,2919,3.655,2920,3.655,2921,3.655,2922,3.655,2923,3.655,2924,3.655,2925,3.655,2926,3.655,2927,3.655,2928,3.655,2929,3.655,2930,5.152,2931,3.655,2932,3.655]],["title/index.html",[85,0.285,2301,2.645,2302,2.432]],["body/index.html",[7,0.01,13,0.22,47,0.577,81,0.008,82,0.01,83,0.008,84,1.633,102,1.837,110,4.998,182,4.181,275,0.969,326,2.899,459,3.848,487,3.644,523,2.8,570,4.355,571,5.122,598,3.062,646,3.726,695,4.052,696,5.122,997,3.726,1140,3.465,1176,3.726,1239,5.094,1246,3.726,1256,3.248,1312,4.052,2105,4.49,2189,4.052,2303,4.052,2304,5.644,2305,5.644,2336,5.644,2352,4.49,2367,4.49,2368,4.49,2369,4.49,2384,6.673,2385,6.477,2391,5.644,2397,4.49,2408,5.644,2411,4.49,2419,5.845,2420,4.49,2431,4.49,2700,4.49,2710,4.49,2933,6.479,2934,5.154,2935,5.154,2936,5.154,2937,5.644,2938,5.154,2939,6.479,2940,6.479,2941,6.479,2942,7.086,2943,5.154,2944,5.154,2945,7.435,2946,7.086,2947,5.154,2948,5.154,2949,6.479,2950,5.154,2951,5.154,2952,5.154,2953,6.479,2954,5.154,2955,5.154,2956,5.154,2957,5.154,2958,5.154,2959,5.154,2960,5.154,2961,5.154,2962,5.154,2963,5.154,2964,5.154,2965,5.154,2966,5.154,2967,5.154,2968,5.154,2969,5.154,2970,5.154,2971,5.154,2972,5.154]],["title/license.html",[2301,2.645,2302,2.432,2973,2.931]],["body/license.html",[7,0.011,12,1.737,81,0.009,82,0.011,83,0.009,113,3.035,346,4.106,455,2.244,569,2.892,745,3.819,953,5.819,1022,3.819,1025,4.106,1052,3.195,1198,4.466,1218,4.466,1258,4.949,1431,4.949,2418,5.993,2419,4.466,2457,5.993,2593,5.993,2663,4.949,2682,4.949,2858,4.949,2937,7.171,2973,4.949,2974,5.681,2975,7.401,2976,5.681,2977,6.88,2978,5.681,2979,5.681,2980,5.681,2981,5.681,2982,5.681,2983,5.681,2984,6.88,2985,5.681,2986,5.681,2987,5.681,2988,5.681,2989,5.681,2990,5.681,2991,5.681,2992,5.681,2993,5.681,2994,5.681,2995,5.681,2996,6.88,2997,5.681,2998,5.681,2999,5.681,3000,5.681,3001,5.681,3002,6.88,3003,5.681,3004,5.681,3005,5.681,3006,5.681,3007,5.681,3008,5.681,3009,5.681,3010,5.681,3011,5.681,3012,5.681,3013,5.681,3014,5.681,3015,5.681,3016,5.681,3017,5.681,3018,5.681,3019,5.681,3020,5.681,3021,5.681,3022,5.681,3023,5.681,3024,5.681]],["title/modules.html",[2,1.947]],["body/modules.html",[1,3.897,2,2.046,7,0.011,81,0.009,82,0.011,83,0.009,354,4.191,541,4.191,546,3.897,985,3.653,1040,3.897,1243,6.099,1323,4.191,1328,3.897,1523,4.558,1581,4.191,1642,4.191,1658,7.35,1885,4.191,1964,4.191,2017,4.191,2050,4.191,2131,4.191,2178,4.191,2326,7.35,3025,8.454,3026,5.797]],["title/overview.html",[3027,4.806]],["body/overview.html",[1,5.189,2,1.51,3,2.026,4,3.726,5,3.726,6,3.298,7,0.014,8,3.848,9,3.848,10,2.182,11,1.626,12,1.308,81,0.007,82,0.009,83,0.007,84,1.355,231,1.69,312,3,354,5.219,355,3.726,356,3.726,357,3.726,358,3.12,448,2.887,449,1.906,506,1.757,511,3.12,513,2.887,515,3.12,517,2.781,519,3.12,522,3.12,525,3,527,3.12,531,3.12,534,3.12,538,3,541,5.489,542,3.726,543,3.726,544,3.726,545,3.726,546,4.997,700,2.541,770,3.726,771,3.726,772,3.726,775,2.079,1040,4.997,1041,3.726,1042,3.726,1043,3.726,1323,5.489,1324,3.726,1325,3.726,1326,3.726,1327,3.726,1328,4.997,1414,3.726,1415,3.726,1416,3.726,1581,5.219,1582,3.726,1583,3.726,1584,3.726,1642,5.219,1643,3.726,1644,3.726,1645,3.726,1885,5.219,1886,3.726,1887,3.726,1888,3.726,1964,5.219,1965,3.726,1966,3.726,1967,3.726,2017,5.219,2018,3.726,2019,3.726,2020,3.726,2050,5.651,2051,3.726,2053,3.726,2054,3.726,2055,6.031,2056,6.031,2131,5.219,2132,3.726,2133,3.726,2134,3.726,2178,5.219,2179,3.726,2180,3.726,2181,3.726,2438,3.726,2486,3.726,3027,3.726,3028,4.277,3029,4.277,3030,4.277]],["title/miscellaneous/typealiases.html",[2908,2.12,3031,4.856]],["body/miscellaneous/typealiases.html",[7,0.013,16,0.17,28,0.592,49,0.809,56,2.425,61,3.335,62,1.537,68,1.996,81,0.009,82,0.011,83,0.009,85,0.478,88,2.609,89,3.18,90,4.319,128,4.323,130,4.612,133,4.612,134,2.63,416,3.666,639,4.075,812,4.446,813,4.323,827,4.087,828,3.801,834,3.563,835,5.289,848,4.087,850,4.959,851,4.959,853,4.959,895,3.801,900,2.879,1163,4.087,1165,4.959,1181,5.394,1188,4.926,1189,5.976,1210,4.446,1211,4.926,1976,4.087,1977,4.087,1978,5.807,1997,4.926,1998,5.976,1999,4.926,2000,6.434,2908,3.563,2910,5.807,3032,5.654,3033,5.654,3034,7.68,3035,5.976,3036,6.86]],["title/miscellaneous/variables.html",[2908,2.12,3037,4.23]],["body/miscellaneous/variables.html",[6,1.312,7,0.014,8,1.531,9,1.531,16,0.153,17,1.733,27,1.337,28,0.538,30,2.238,45,2.238,49,0.573,53,0.91,55,2.876,59,0.434,61,1.253,62,1.67,72,1.624,74,3.673,76,0.944,81,0.004,82,0.006,83,0.004,85,0.218,88,0.98,89,1.45,90,3.073,113,1.377,128,2.507,137,1.45,145,4.183,147,4.234,148,2.507,153,3.443,154,0.947,155,2.507,156,2.675,157,2.507,158,1.733,159,1.624,165,1.54,172,3.246,175,1.513,176,1.404,259,1.733,260,1.733,261,2.876,265,1.863,266,3.128,268,4.629,273,2.126,279,1.863,292,2.165,293,3.128,294,2.027,295,2.027,296,2.027,297,2.876,298,2.876,299,1.624,316,2.675,321,3.424,500,1.199,523,3.252,574,2.027,600,4.628,602,4.437,643,6.471,654,1.45,655,3.513,681,1.863,682,2.027,683,1.863,684,2.876,685,2.027,686,1.733,687,2.027,688,2.027,689,1.863,690,2.876,691,2.027,813,1.624,1123,4.907,1147,2.675,1163,1.863,1165,2.876,1181,2.027,1265,2.876,1274,4.516,1495,2.027,1504,3.128,1505,2.245,1506,2.245,1507,2.876,1653,1.863,1654,1.863,1655,1.863,1656,3.821,1659,7.17,1660,6.055,1665,3.128,1673,2.245,1674,2.245,1675,3.128,1676,2.245,1677,3.466,1678,2.245,1679,2.245,1680,3.466,1681,2.245,1682,3.466,1683,2.876,1684,4.76,1685,2.245,1686,2.245,1687,4.234,1688,5.437,1689,6.338,1690,2.245,1691,2.245,1692,2.245,1693,4.234,1694,6.006,1695,5.437,1696,2.245,1697,2.245,1698,2.245,1699,2.245,1700,3.466,1701,2.245,1702,4.234,1703,4.907,1704,2.245,1705,2.245,1706,2.245,1707,4.234,1708,5.437,1709,2.245,1710,2.245,1711,2.245,1712,2.245,1713,3.466,1714,2.245,1715,3.466,1716,3.466,1717,3.466,1718,2.245,1719,2.245,1720,4.234,1721,5.437,1722,2.245,1723,2.245,1724,2.245,1725,2.245,1726,3.466,1727,2.245,1728,2.245,1729,2.245,1730,3.466,1731,2.245,1732,2.245,1733,3.128,1734,2.245,1735,3.466,1736,4.76,1737,2.245,1738,2.245,1739,2.245,1740,5.437,1741,3.466,1742,2.245,1743,2.245,1744,3.466,1745,2.245,1746,2.245,1747,3.821,1748,3.128,1749,2.245,1750,2.245,1751,3.466,1752,2.245,1753,2.245,1754,3.466,1755,2.245,1756,4.234,1757,5.437,1758,2.245,1759,2.245,1760,2.245,1761,2.245,1762,3.466,1763,3.466,1764,2.245,1765,2.245,1766,3.466,1767,2.245,1768,3.466,1769,3.466,1770,4.76,1771,4.76,1772,2.245,1773,2.245,1774,2.245,1775,2.245,1776,2.245,1777,3.128,1778,2.245,1779,2.245,1893,1.863,1894,1.863,1895,2.876,1905,3.128,2138,1.733,2144,2.876,2145,2.876,2146,1.733,2760,2.245,2761,3.466,2908,1.624,2910,3.821,2913,3.466,2914,2.245,2917,2.245,3035,2.245,3037,2.245,3038,3.979,3039,2.577,3040,2.577,3041,2.577,3042,3.979]]],"invertedIndex":[["",{"_index":7,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":423,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocalStorageService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["0.1.0",{"_index":2737,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":2907,"title":{},"body":{"dependencies.html":{}}}],["0.12",{"_index":2124,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.14",{"_index":2122,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.18.0",{"_index":2848,"title":{},"body":{"dependencies.html":{}}}],["0.1875rem",{"_index":1635,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["0.2",{"_index":2119,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.2.0",{"_index":2732,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":2866,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":607,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["0.5.0",{"_index":2721,"title":{},"body":{"changelog.html":{}}}],["0.5rem",{"_index":1401,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{}}}],["0.6.0",{"_index":2700,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0.60rem",{"_index":608,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["0.65rem",{"_index":1321,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["0.6s",{"_index":610,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{}}}],["0.7",{"_index":2112,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["0.875rem",{"_index":1398,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["0/1",{"_index":2748,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2788,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":2794,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":2796,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2795,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2789,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2793,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":2792,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2763,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2790,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2765,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2746,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2750,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2749,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2787,"title":{},"body":{"coverage.html":{}}}],["007cbe",{"_index":2129,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["01",{"_index":2308,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":2581,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":2531,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":2343,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":2504,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":2324,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":2307,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":2683,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":2437,"title":{},"body":{"changelog.html":{}}}],["0px",{"_index":1875,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{}}}],["1",{"_index":700,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/PluckUniqueOptions.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"changelog.html":{},"overview.html":{}}}],["1.0",{"_index":2172,"title":{},"body":{"components/XYZPositionComponent.html":{},"changelog.html":{}}}],["1.0.0",{"_index":2671,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":2843,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":2850,"title":{},"body":{"dependencies.html":{}}}],["1.0.6",{"_index":2902,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":2649,"title":{},"body":{"changelog.html":{}}}],["1.125rem",{"_index":1637,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["1.16.0",{"_index":2883,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":2845,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":2612,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.3",{"_index":2853,"title":{},"body":{"dependencies.html":{}}}],["1.2.6",{"_index":2885,"title":{},"body":{"dependencies.html":{}}}],["1.2rem",{"_index":617,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["1.3.5",{"_index":2580,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":2561,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":2868,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":2530,"title":{},"body":{"changelog.html":{}}}],["1.5rem",{"_index":1322,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["1.6.0",{"_index":2515,"title":{},"body":{"changelog.html":{}}}],["1.6rem",{"_index":601,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["1.7.0",{"_index":2503,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":2855,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2753,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2779,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2799,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":299,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":2864,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":2784,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":624,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{},"coverage.html":{}}}],["1014",{"_index":1476,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["10px",{"_index":2121,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["10rem",{"_index":1406,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["10x",{"_index":2661,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":2563,"title":{},"body":{"changelog.html":{}}}],["11.2.1",{"_index":2886,"title":{},"body":{"dependencies.html":{}}}],["11/11",{"_index":2768,"title":{},"body":{"coverage.html":{}}}],["11/14",{"_index":2781,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":2352,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["12.0.1",{"_index":2887,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":2805,"title":{},"body":{"dependencies.html":{}}}],["12.1.3",{"_index":2810,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":2438,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["13/13",{"_index":2771,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":2344,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["15",{"_index":3028,"title":{},"body":{"overview.html":{}}}],["15.126.1",{"_index":2803,"title":{},"body":{"dependencies.html":{}}}],["15/15",{"_index":2786,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":2486,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["16.0.0",{"_index":2857,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":2325,"title":{},"body":{"changelog.html":{}}}],["18px",{"_index":2123,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["19",{"_index":3030,"title":{},"body":{"overview.html":{}}}],["1px",{"_index":2117,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["1rem",{"_index":651,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["2",{"_index":2173,"title":{},"body":{"components/XYZPositionComponent.html":{},"changelog.html":{}}}],["2.0.0",{"_index":2485,"title":{},"body":{"changelog.html":{}}}],["2.0.5",{"_index":2861,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":2450,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.2.0",{"_index":2445,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.25rem",{"_index":1397,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["2.3.0",{"_index":2442,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":2436,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":2425,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":2407,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.6.7",{"_index":2888,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":2852,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":2759,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1603,"title":{},"body":{"components/OpacitySliderComponent.html":{},"coverage.html":{}}}],["200",{"_index":1847,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["2019",{"_index":2682,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":2614,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":2392,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":701,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"changelog.html":{}}}],["21",{"_index":2505,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":1475,"title":{},"body":{"injectables/LocalStorageService.html":{},"changelog.html":{}}}],["23/30",{"_index":2783,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":2722,"title":{},"body":{"changelog.html":{}}}],["24px",{"_index":2127,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["25",{"_index":2778,"title":{},"body":{"coverage.html":{}}}],["250",{"_index":1387,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["255",{"_index":2111,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["25rem",{"_index":605,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["26",{"_index":2532,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":2566,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":2388,"title":{},"body":{"changelog.html":{}}}],["2rem",{"_index":629,"title":{},"body":{"components/CallToActionComponent.html":{},"components/SpatialSearchListComponent.html":{}}}],["3",{"_index":2600,"title":{},"body":{"changelog.html":{}}}],["3.0.0",{"_index":2387,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.0.12",{"_index":2824,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":2356,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":2351,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":2342,"title":{},"body":{"changelog.html":{}}}],["3.3.0",{"_index":2323,"title":{},"body":{"changelog.html":{}}}],["3.4.0",{"_index":2306,"title":{},"body":{"changelog.html":{}}}],["3.4rem",{"_index":636,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["3.5.5",{"_index":2829,"title":{},"body":{"dependencies.html":{}}}],["3.5.7",{"_index":2831,"title":{},"body":{"dependencies.html":{}}}],["3.6",{"_index":2961,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":2897,"title":{},"body":{"dependencies.html":{}}}],["3.7.1",{"_index":2837,"title":{},"body":{"dependencies.html":{}}}],["3.7.3",{"_index":2839,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":2776,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2775,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":2767,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":635,"title":{},"body":{"components/CallToActionComponent.html":{},"changelog.html":{}}}],["30.75rem",{"_index":759,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["300",{"_index":1403,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["31",{"_index":2650,"title":{},"body":{"changelog.html":{}}}],["323232",{"_index":2113,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["36.688rem",{"_index":760,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["3d",{"_index":2190,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["3px",{"_index":2115,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["3rem",{"_index":1392,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/TextSearchComponent.html":{}}}],["4",{"_index":159,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["4.0",{"_index":2940,"title":{},"body":{"index.html":{}}}],["4.0.2",{"_index":2834,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":2859,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":2880,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":2849,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":2870,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":2772,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":2177,"title":{},"body":{"components/XYZPositionComponent.html":{}}}],["400px",{"_index":2109,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["42",{"_index":2766,"title":{},"body":{"coverage.html":{}}}],["444a65",{"_index":647,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["48",{"_index":2252,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["5.0.0",{"_index":2873,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":2878,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":2769,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1412,"title":{},"body":{"components/InfoDialogComponent.html":{},"coverage.html":{}}}],["50rem",{"_index":1405,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["5px",{"_index":2116,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["5rem",{"_index":637,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["6",{"_index":3029,"title":{},"body":{"overview.html":{}}}],["6.0.1",{"_index":2876,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":2890,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":2833,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":2901,"title":{},"body":{"dependencies.html":{}}}],["6.6.7",{"_index":2898,"title":{},"body":{"dependencies.html":{}}}],["6/12",{"_index":2797,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":2798,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1636,"title":{},"body":{"components/OpacitySliderComponent.html":{},"coverage.html":{}}}],["64",{"_index":1878,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["6px",{"_index":2120,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["6rem",{"_index":2128,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["6s",{"_index":614,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["7.0rem",{"_index":628,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["7/34",{"_index":2764,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":2785,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":2774,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":1809,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["72rem",{"_index":741,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{}}}],["73",{"_index":1409,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["75",{"_index":2269,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["75rem",{"_index":632,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["76",{"_index":2782,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":2773,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":2780,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":2509,"title":{},"body":{"changelog.html":{}}}],["8.3.2",{"_index":2905,"title":{},"body":{"dependencies.html":{}}}],["8.5.12",{"_index":2828,"title":{},"body":{"dependencies.html":{}}}],["8.5.7",{"_index":2817,"title":{},"body":{"dependencies.html":{}}}],["8.7.8",{"_index":2820,"title":{},"body":{"dependencies.html":{}}}],["85",{"_index":2731,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["875rem",{"_index":630,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["9.5",{"_index":2235,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["9/9",{"_index":2777,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2688,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":2347,"title":{},"body":{"changelog.html":{}}}],["9999",{"_index":2126,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["9]*/g",{"_index":1579,"title":{},"body":{"directives/NumberDirective.html":{}}}],["9rem",{"_index":627,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["9th",{"_index":2540,"title":{},"body":{"changelog.html":{}}}],["__storage_test__",{"_index":1465,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["_bounds",{"_index":2237,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_camera",{"_index":2239,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_ctx",{"_index":746,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["_ctxs",{"_index":766,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["_error",{"_index":1492,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["_ignored",{"_index":1262,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["_index",{"_index":1941,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{}}}],["_interactive",{"_index":2231,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_occurencedata",{"_index":1815,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["_rotation",{"_index":2232,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_rotationx",{"_index":2233,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_scene",{"_index":2238,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_target",{"_index":2236,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["_wont_",{"_index":2155,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["_zoom",{"_index":2234,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["a.name.localecompare(b.name",{"_index":1776,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["ability",{"_index":2461,"title":{},"body":{"changelog.html":{}}}],["about.wrapper",{"_index":1391,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["above",{"_index":1022,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"license.html":{}}}],["abstract",{"_index":376,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["access",{"_index":2101,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["accessors",{"_index":1113,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/LocalStorageService.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["according",{"_index":1883,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["accurate",{"_index":2529,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":455,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"license.html":{}}}],["action'},{'name",{"_index":512,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["action(closedialog",{"_index":767,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["action(learnmore",{"_index":747,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["action(opendialog",{"_index":756,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["action.actions",{"_index":501,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["action.actions.ts",{"_index":809,"title":{},"body":{"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{},"coverage.html":{}}}],["action.actions.ts:10",{"_index":810,"title":{},"body":{"classes/CloseDialog.html":{}}}],["action.actions.ts:2",{"_index":1439,"title":{},"body":{"classes/LearnMore.html":{}}}],["action.actions.ts:6",{"_index":1652,"title":{},"body":{"classes/OpenDialog.html":{}}}],["action.component",{"_index":774,"title":{},"body":{"modules/CallToActionModule.html":{}}}],["action.component.html",{"_index":559,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["action.component.scss",{"_index":558,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["action.component.ts",{"_index":557,"title":{},"body":{"components/CallToActionComponent.html":{},"coverage.html":{}}}],["action.component.ts:14",{"_index":581,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["action.component.ts:18",{"_index":572,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["action.component.ts:23",{"_index":568,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["action.component.ts:28",{"_index":573,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["action.component.ts:33",{"_index":567,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["action.component.ts:39",{"_index":576,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["action.component.ts:45",{"_index":580,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["action.component.ts:53",{"_index":582,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["action.component.ts:61",{"_index":586,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["action.module",{"_index":555,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{}}}],["action.module.ts",{"_index":773,"title":{},"body":{"modules/CallToActionModule.html":{}}}],["action.selectors",{"_index":503,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["action.selectors.ts",{"_index":776,"title":{},"body":{"classes/CallToActionSelectors.html":{},"coverage.html":{}}}],["action.selectors.ts:12",{"_index":785,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["action.selectors.ts:17",{"_index":779,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["action.selectors.ts:22",{"_index":783,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["action.selectors.ts:27",{"_index":781,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["action.selectors.ts:32",{"_index":787,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["action.selectors.ts:7",{"_index":789,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["action.state",{"_index":790,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["action.state.ts",{"_index":655,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["action.state.ts:103",{"_index":805,"title":{},"body":{"injectables/CallToActionState.html":{}}}],["action.state.ts:121",{"_index":806,"title":{},"body":{"injectables/CallToActionState.html":{}}}],["action.state.ts:135",{"_index":808,"title":{},"body":{"injectables/CallToActionState.html":{}}}],["action.state.ts:153",{"_index":802,"title":{},"body":{"injectables/CallToActionState.html":{}}}],["action.state.ts:65",{"_index":803,"title":{},"body":{"injectables/CallToActionState.html":{}}}],["action.state.ts:70",{"_index":801,"title":{},"body":{"injectables/CallToActionState.html":{}}}],["action.state.ts:81",{"_index":807,"title":{},"body":{"injectables/CallToActionState.html":{}}}],["action.state.ts:94",{"_index":804,"title":{},"body":{"injectables/CallToActionState.html":{}}}],["action/call",{"_index":500,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":2604,"title":{},"body":{"changelog.html":{}}}],["actual_component",{"_index":540,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["add",{"_index":891,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["added",{"_index":975,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["adding",{"_index":1909,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["additional",{"_index":912,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["addressed",{"_index":2644,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":2329,"title":{},"body":{"changelog.html":{}}}],["adjusting",{"_index":2639,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":2559,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":2488,"title":{},"body":{"changelog.html":{}}}],["afterviewinit",{"_index":1668,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["again",{"_index":2622,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":139,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{}}}],["agerange",{"_index":140,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["aggregateresult",{"_index":96,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["ala",{"_index":2440,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":3032,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":597,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["all_organs",{"_index":1777,"title":{},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["all_possible_organs",{"_index":1675,"title":{},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["all_possible_organs.filter(organ",{"_index":1778,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["allow_telemetry",{"_index":1507,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/variables.html":{}}}],["allowed",{"_index":895,"title":{},"body":{"interfaces/DecoratedRange.html":{},"injectables/GlobalsService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/typealiases.html":{}}}],["allows",{"_index":2546,"title":{},"body":{"changelog.html":{}}}],["allowtelemetry",{"_index":2078,"title":{},"body":{"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["allowtelemetry.tostring",{"_index":2151,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["alpha",{"_index":2711,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":2695,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":2691,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":2681,"title":{},"body":{"changelog.html":{}}}],["already",{"_index":1002,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["alt",{"_index":2944,"title":{},"body":{"index.html":{}}}],["always",{"_index":1235,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["analytics",{"_index":41,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{}}}],["analyticsmodule",{"_index":1,"title":{"modules/AnalyticsModule.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules.html":{},"overview.html":{}}}],["analyticsoptions",{"_index":23,"title":{"interfaces/AnalyticsOptions.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{}}}],["anatomical",{"_index":1592,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["and/or",{"_index":2994,"title":{},"body":{"license.html":{}}}],["angular",{"_index":1140,"title":{},"body":{"injectables/GlobalConfigState.html":{},"modules/MousePositionTrackerModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":2804,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2806,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":365,"title":{},"body":{"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":662,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DocumentationContent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["angular/compiler",{"_index":2807,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":36,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["angular/elements",{"_index":2808,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":283,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2809,"title":{},"body":{"dependencies.html":{}}}],["angular/material/autocomplete",{"_index":2061,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["angular/material/button",{"_index":1970,"title":{},"body":{"modules/SpatialSearchListModule.html":{},"modules/TrackingPopupModule.html":{}}}],["angular/material/card",{"_index":553,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{}}}],["angular/material/checkbox",{"_index":1972,"title":{},"body":{"modules/SpatialSearchListModule.html":{}}}],["angular/material/core",{"_index":1651,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["angular/material/dialog",{"_index":551,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{}}}],["angular/material/expansion",{"_index":1419,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["angular/material/form",{"_index":2063,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["angular/material/icon",{"_index":549,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{}}}],["angular/material/input",{"_index":2065,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["angular/material/list",{"_index":1974,"title":{},"body":{"modules/SpatialSearchListModule.html":{}}}],["angular/material/slider",{"_index":1649,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["angular/material/snack",{"_index":2094,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["angular/material/tooltip",{"_index":1892,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["angular/platform",{"_index":2811,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":2813,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":1422,"title":{},"body":{"modules/InfoDialogModule.html":{},"dependencies.html":{}}}],["animate",{"_index":1383,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["animated",{"_index":740,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{}}}],["animated')[0]?.classlist.add('modal",{"_index":1382,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["anyfunction",{"_index":866,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["anyfunction)(...args",{"_index":871,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["anything",{"_index":2156,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["api",{"_index":182,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{},"index.html":{}}}],["api.configuration.basepath",{"_index":225,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["api.hubmapconsortium.org",{"_index":2954,"title":{},"body":{"index.html":{}}}],["api.ts",{"_index":2761,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiendpointdatasourceoptions",{"_index":87,"title":{"interfaces/ApiEndpointDataSourceOptions.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{}}}],["apiendpointdatasourceservice",{"_index":177,"title":{"injectables/ApiEndpointDataSourceService.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{}}}],["app",{"_index":1674,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:bladder",{"_index":1761,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:brain",{"_index":1679,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:eye",{"_index":1687,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:fallopian",{"_index":1693,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:heart",{"_index":1699,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:kidney",{"_index":1702,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:knee",{"_index":1707,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:large",{"_index":1743,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:liver",{"_index":1712,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:lung",{"_index":1715,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:lymph",{"_index":1682,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:ovary",{"_index":1720,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:pancreas",{"_index":1725,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:pelvis",{"_index":1728,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:placenta",{"_index":1732,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:prostate",{"_index":1735,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:skin",{"_index":1676,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:small",{"_index":1739,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:spinal",{"_index":1746,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:spleen",{"_index":1750,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:thymus",{"_index":1753,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:ureter",{"_index":1756,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:uterus",{"_index":1765,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app:vasculature",{"_index":1768,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["app_initializer",{"_index":34,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["appear",{"_index":2402,"title":{},"body":{"changelog.html":{}}}],["appearance",{"_index":2046,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["application",{"_index":2550,"title":{},"body":{"changelog.html":{}}}],["applied",{"_index":888,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["applies",{"_index":963,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["apply",{"_index":926,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["appname",{"_index":50,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["appropriate",{"_index":2371,"title":{},"body":{"changelog.html":{}}}],["april",{"_index":2539,"title":{},"body":{"changelog.html":{}}}],["args",{"_index":390,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["arguments",{"_index":1568,"title":{},"body":{"directives/NumberDirective.html":{}}}],["arising",{"_index":3022,"title":{},"body":{"license.html":{}}}],["array",{"_index":900,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["array.length",{"_index":353,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["arrays",{"_index":2923,"title":{},"body":{"miscellaneous/functions.html":{}}}],["arrived",{"_index":697,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["asct+b",{"_index":2393,"title":{},"body":{"changelog.html":{}}}],["assets/docs/spatial_search_readme.md",{"_index":691,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"miscellaneous/variables.html":{}}}],["assets/images/spatial_search.gif",{"_index":698,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["assignment/selection",{"_index":2517,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":1198,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{},"license.html":{}}}],["async",{"_index":349,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["attempt",{"_index":1169,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["attempts",{"_index":2428,"title":{},"body":{"changelog.html":{}}}],["attrs",{"_index":65,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["attrs[key",{"_index":64,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["authors",{"_index":3014,"title":{},"body":{"license.html":{}}}],["auto",{"_index":1399,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["autocomplete",{"_index":266,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["autocompleteoption",{"_index":258,"title":{"interfaces/AutoCompleteOption.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"coverage.html":{}}}],["autocompleter",{"_index":327,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["autocompletion",{"_index":303,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["autofocus",{"_index":737,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{}}}],["automatic",{"_index":2630,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":2588,"title":{},"body":{"changelog.html":{}}}],["available",{"_index":985,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"modules.html":{}}}],["avoid",{"_index":2474,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":433,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["award",{"_index":2971,"title":{},"body":{"index.html":{}}}],["b",{"_index":1775,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["backend",{"_index":2414,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":646,"title":{},"body":{"components/CallToActionComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"index.html":{}}}],["bar",{"_index":302,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["base",{"_index":1947,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"changelog.html":{}}}],["based",{"_index":934,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["basic",{"_index":2487,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":2405,"title":{},"body":{"changelog.html":{}}}],["beginning",{"_index":1799,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["behavior",{"_index":467,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/OrganInfo.html":{}}}],["behavior'},{'name",{"_index":510,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["behavior.component",{"_index":554,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["behavior.component.html",{"_index":469,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["behavior.component.scss",{"_index":468,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["behavior.component.ts",{"_index":457,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"coverage.html":{}}}],["behavior.component.ts:19",{"_index":492,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["behavior.component.ts:22",{"_index":490,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["behavior.component.ts:25",{"_index":477,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["behavior.component.ts:28",{"_index":483,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["behavior.component.ts:36",{"_index":479,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["behavior.component.ts:43",{"_index":484,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["behavior.module.ts",{"_index":547,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{}}}],["behavior/call",{"_index":456,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"coverage.html":{}}}],["behaviorsubject",{"_index":1056,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["being",{"_index":1357,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["below",{"_index":645,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["beta",{"_index":2391,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":2451,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1396,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["bind",{"_index":284,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"dependencies.html":{}}}],["binding",{"_index":1408,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["bladder",{"_index":1763,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["block",{"_index":596,"title":{},"body":{"components/CallToActionComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["blocks",{"_index":2320,"title":{},"body":{"changelog.html":{}}}],["blood",{"_index":1770,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["bmi",{"_index":141,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{}}}],["bmirange",{"_index":142,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["board",{"_index":2693,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":366,"title":{},"body":{"modules/BodyUiModule.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"dependencies.html":{}}}],["bodycanvas",{"_index":2245,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bodyui",{"_index":2186,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bodyui.initialize",{"_index":2276,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bodyuicomponent",{"_index":358,"title":{},"body":{"modules/BodyUiModule.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"overview.html":{}}}],["bodyuimodule",{"_index":354,"title":{"modules/BodyUiModule.html":{}},"body":{"modules/BodyUiModule.html":{},"modules.html":{},"overview.html":{}}}],["bold",{"_index":1960,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["boolean",{"_index":53,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["border",{"_index":603,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["both",{"_index":146,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["bottom",{"_index":650,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoDialogComponent.html":{},"components/SpatialSearchListComponent.html":{}}}],["boundary",{"_index":1553,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["bounds",{"_index":1034,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"interfaces/XYZTriplet.html":{}}}],["bounds(value",{"_index":2215,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bounds.x",{"_index":2260,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["bounds.y",{"_index":2263,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["box",{"_index":694,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/OpacitySliderComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["boxes",{"_index":765,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["brain",{"_index":1680,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["breaking",{"_index":2498,"title":{},"body":{"changelog.html":{}}}],["bringing",{"_index":2510,"title":{},"body":{"changelog.html":{}}}],["browse",{"_index":3025,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1243,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{},"dependencies.html":{},"modules.html":{}}}],["browserify",{"_index":2899,"title":{},"body":{"dependencies.html":{}}}],["browsing",{"_index":2740,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":2340,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":997,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"index.html":{}}}],["building",{"_index":941,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["builds",{"_index":2386,"title":{},"body":{"changelog.html":{}}}],["buster",{"_index":153,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["button",{"_index":458,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["button'},{'name",{"_index":516,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["button.component",{"_index":1330,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["button.component.html",{"_index":1290,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.scss",{"_index":1289,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts",{"_index":1288,"title":{},"body":{"components/InfoButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:22",{"_index":1298,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:27",{"_index":1299,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:29",{"_index":1297,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:31",{"_index":1293,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:51",{"_index":1303,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:58",{"_index":1301,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.component.ts:76",{"_index":1305,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["button.module.ts",{"_index":1329,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["button.service",{"_index":673,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["button.service.ts",{"_index":1048,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"coverage.html":{}}}],["button.service.ts:31",{"_index":1336,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["button.service.ts:38",{"_index":1338,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["button.service.ts:52",{"_index":1337,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["button/info",{"_index":672,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/PanelData.html":{},"coverage.html":{}}}],["c",{"_index":1431,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"license.html":{}}}],["cache",{"_index":151,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"dependencies.html":{}}}],["cache_config_no_params",{"_index":155,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cache_config_params",{"_index":157,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["cacheable",{"_index":120,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"dependencies.html":{}}}],["cacheable(cache_config_no_params",{"_index":188,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["cacheable(cache_config_params",{"_index":200,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["cachebusterobserver",{"_index":156,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/variables.html":{}}}],["cached",{"_index":958,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["cacheresults",{"_index":430,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["call",{"_index":466,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["call_to_action",{"_index":751,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["callback",{"_index":2465,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["called",{"_index":2501,"title":{},"body":{"changelog.html":{}}}],["calltoaction",{"_index":470,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{}}}],["calltoaction(state",{"_index":777,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["calltoactionbehaviorcomponent",{"_index":448,"title":{"components/CallToActionBehaviorComponent.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["calltoactionbehaviormodule",{"_index":541,"title":{"modules/CallToActionBehaviorModule.html":{}},"body":{"modules/CallToActionBehaviorModule.html":{},"modules.html":{},"overview.html":{}}}],["calltoactionclicked",{"_index":564,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["calltoactioncomponent",{"_index":511,"title":{"components/CallToActionComponent.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"modules/CallToActionModule.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["calltoactionmodel",{"_index":653,"title":{"interfaces/CallToActionModel.html":{}},"body":{"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"coverage.html":{}}}],["calltoactionmodule",{"_index":546,"title":{"modules/CallToActionModule.html":{}},"body":{"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules.html":{},"overview.html":{}}}],["calltoactionpopupshown",{"_index":685,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"miscellaneous/variables.html":{}}}],["calltoactionselectors",{"_index":502,"title":{"classes/CallToActionSelectors.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"classes/CallToActionSelectors.html":{},"coverage.html":{}}}],["calltoactionstate",{"_index":703,"title":{"injectables/CallToActionState.html":{}},"body":{"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"coverage.html":{}}}],["calltoactionstate.ctadatepassed(expirationdate",{"_index":725,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["camera",{"_index":2217,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["camera(value",{"_index":2219,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["cancelregistration",{"_index":2464,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":2674,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":2846,"title":{},"body":{"dependencies.html":{}}}],["canvas",{"_index":2267,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["canvas.addeventlistener('contextmenu",{"_index":2273,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["card",{"_index":2491,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":1780,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["carouselcontainer",{"_index":1786,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["case",{"_index":1520,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["cases",{"_index":2648,"title":{},"body":{"changelog.html":{}}}],["cast",{"_index":161,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["catch",{"_index":1261,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["ccf",{"_index":102,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["ccf's",{"_index":2609,"title":{},"body":{"changelog.html":{}}}],["ccfdatabase",{"_index":408,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabase(config",{"_index":436,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice",{"_index":368,"title":{"injectables/CCFDatabaseDataSourceBaseService.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["ccfdatabasedatasourcebaseservice:20",{"_index":447,"title":{},"body":{"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice:39",{"_index":446,"title":{},"body":{"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice:53",{"_index":445,"title":{},"body":{"injectables/CCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourcebaseservice:65",{"_index":2159,"title":{},"body":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["ccfdatabasedatasourceservice",{"_index":435,"title":{"injectables/CCFDatabaseDataSourceService.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["ccfdatabasemanager",{"_index":382,"title":{"interfaces/CCFDatabaseManager.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["ccfdatabaseoptions",{"_index":383,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["cdr",{"_index":1984,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["cdr.markforcheck",{"_index":2011,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["cell",{"_index":2358,"title":{},"body":{"changelog.html":{}}}],["celltypeterms",{"_index":144,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["center",{"_index":598,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"index.html":{}}}],["change",{"_index":1176,"title":{},"body":{"injectables/GlobalsService.html":{},"components/StoreDebugComponent.html":{},"changelog.html":{},"index.html":{}}}],["changed",{"_index":959,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["changedetection",{"_index":310,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["changedetectionstrategy",{"_index":274,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":311,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["changedetectorref",{"_index":1985,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["changelog",{"_index":2303,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changeopacity",{"_index":1596,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["changeopacity(newopacity",{"_index":1614,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["changes",{"_index":329,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["charge",{"_index":2981,"title":{},"body":{"license.html":{}}}],["check",{"_index":1173,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["choose",{"_index":2627,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":2607,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":3017,"title":{},"body":{"license.html":{}}}],["class",{"_index":78,"title":{"classes/CallToActionSelectors.html":{},"classes/CloseDialog.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["classes",{"_index":775,"title":{},"body":{"classes/CallToActionSelectors.html":{},"classes/CloseDialog.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"overview.html":{}}}],["clean",{"_index":2339,"title":{},"body":{"changelog.html":{}}}],["cleans",{"_index":1992,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["cleanup",{"_index":2390,"title":{},"body":{"changelog.html":{}}}],["clear",{"_index":592,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoDialogComponent.html":{},"injectables/LocalStorageService.html":{}}}],["clearinterval(this.timeouthandler",{"_index":1858,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["clears",{"_index":1446,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["clearsubscriptions",{"_index":2298,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["click",{"_index":584,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{},"changelog.html":{}}}],["clicked",{"_index":464,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{}}}],["clicking",{"_index":2495,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":110,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"index.html":{}}}],["clientheight",{"_index":1534,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clientwidth",{"_index":1533,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clientx",{"_index":1536,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["clienty",{"_index":1537,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["close",{"_index":471,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{}}}],["close(_ctx",{"_index":768,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["closeclicked",{"_index":565,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["closedialog",{"_index":498,"title":{"classes/CloseDialog.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{},"coverage.html":{}}}],["closees",{"_index":480,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["closes",{"_index":764,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["clsname",{"_index":315,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["cluster_analyticsmodule",{"_index":4,"title":{},"body":{"modules/AnalyticsModule.html":{},"overview.html":{}}}],["cluster_analyticsmodule_providers",{"_index":5,"title":{},"body":{"modules/AnalyticsModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule",{"_index":355,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule_declarations",{"_index":356,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_bodyuimodule_exports",{"_index":357,"title":{},"body":{"modules/BodyUiModule.html":{},"overview.html":{}}}],["cluster_calltoactionbehaviormodule",{"_index":542,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{},"overview.html":{}}}],["cluster_calltoactionbehaviormodule_declarations",{"_index":543,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{},"overview.html":{}}}],["cluster_calltoactionbehaviormodule_exports",{"_index":545,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{},"overview.html":{}}}],["cluster_calltoactionbehaviormodule_imports",{"_index":544,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{},"overview.html":{}}}],["cluster_calltoactionmodule",{"_index":770,"title":{},"body":{"modules/CallToActionModule.html":{},"overview.html":{}}}],["cluster_calltoactionmodule_declarations",{"_index":771,"title":{},"body":{"modules/CallToActionModule.html":{},"overview.html":{}}}],["cluster_calltoactionmodule_exports",{"_index":772,"title":{},"body":{"modules/CallToActionModule.html":{},"overview.html":{}}}],["cluster_decoratedtextmodule",{"_index":1041,"title":{},"body":{"modules/DecoratedTextModule.html":{},"overview.html":{}}}],["cluster_decoratedtextmodule_declarations",{"_index":1042,"title":{},"body":{"modules/DecoratedTextModule.html":{},"overview.html":{}}}],["cluster_decoratedtextmodule_exports",{"_index":1043,"title":{},"body":{"modules/DecoratedTextModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule",{"_index":1324,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_declarations",{"_index":1326,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_exports",{"_index":1325,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infobuttonmodule_imports",{"_index":1327,"title":{},"body":{"modules/InfoButtonModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule",{"_index":1414,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule_declarations",{"_index":1416,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_infodialogmodule_exports",{"_index":1415,"title":{},"body":{"modules/InfoDialogModule.html":{},"overview.html":{}}}],["cluster_numbersonlymodule",{"_index":1582,"title":{},"body":{"modules/NumbersOnlyModule.html":{},"overview.html":{}}}],["cluster_numbersonlymodule_declarations",{"_index":1584,"title":{},"body":{"modules/NumbersOnlyModule.html":{},"overview.html":{}}}],["cluster_numbersonlymodule_exports",{"_index":1583,"title":{},"body":{"modules/NumbersOnlyModule.html":{},"overview.html":{}}}],["cluster_opacityslidermodule",{"_index":1643,"title":{},"body":{"modules/OpacitySliderModule.html":{},"overview.html":{}}}],["cluster_opacityslidermodule_declarations",{"_index":1644,"title":{},"body":{"modules/OpacitySliderModule.html":{},"overview.html":{}}}],["cluster_opacityslidermodule_exports",{"_index":1645,"title":{},"body":{"modules/OpacitySliderModule.html":{},"overview.html":{}}}],["cluster_organselectormodule",{"_index":1886,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_organselectormodule_declarations",{"_index":1887,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_organselectormodule_exports",{"_index":1888,"title":{},"body":{"modules/OrganSelectorModule.html":{},"overview.html":{}}}],["cluster_spatialsearchlistmodule",{"_index":1965,"title":{},"body":{"modules/SpatialSearchListModule.html":{},"overview.html":{}}}],["cluster_spatialsearchlistmodule_declarations",{"_index":1967,"title":{},"body":{"modules/SpatialSearchListModule.html":{},"overview.html":{}}}],["cluster_spatialsearchlistmodule_exports",{"_index":1966,"title":{},"body":{"modules/SpatialSearchListModule.html":{},"overview.html":{}}}],["cluster_storedebugmodule",{"_index":2018,"title":{},"body":{"modules/StoreDebugModule.html":{},"overview.html":{}}}],["cluster_storedebugmodule_declarations",{"_index":2020,"title":{},"body":{"modules/StoreDebugModule.html":{},"overview.html":{}}}],["cluster_storedebugmodule_exports",{"_index":2019,"title":{},"body":{"modules/StoreDebugModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule",{"_index":2051,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule_declarations",{"_index":2054,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule_exports",{"_index":2053,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["cluster_textsearchmodule_imports",{"_index":2052,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["cluster_trackingpopupmodule",{"_index":2132,"title":{},"body":{"modules/TrackingPopupModule.html":{},"overview.html":{}}}],["cluster_trackingpopupmodule_declarations",{"_index":2133,"title":{},"body":{"modules/TrackingPopupModule.html":{},"overview.html":{}}}],["cluster_trackingpopupmodule_exports",{"_index":2134,"title":{},"body":{"modules/TrackingPopupModule.html":{},"overview.html":{}}}],["cluster_xyzpositionmodule",{"_index":2179,"title":{},"body":{"modules/XYZPositionModule.html":{},"overview.html":{}}}],["cluster_xyzpositionmodule_declarations",{"_index":2180,"title":{},"body":{"modules/XYZPositionModule.html":{},"overview.html":{}}}],["cluster_xyzpositionmodule_exports",{"_index":2181,"title":{},"body":{"modules/XYZPositionModule.html":{},"overview.html":{}}}],["code",{"_index":1478,"title":{},"body":{"injectables/LocalStorageService.html":{},"changelog.html":{}}}],["codebase",{"_index":2617,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":2660,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":2705,"title":{},"body":{"changelog.html":{}}}],["collaboration",{"_index":2615,"title":{},"body":{"changelog.html":{}}}],["collisions",{"_index":2632,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":613,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["colorizing",{"_index":2668,"title":{},"body":{"changelog.html":{}}}],["column",{"_index":2176,"title":{},"body":{"components/XYZPositionComponent.html":{}}}],["combination",{"_index":2628,"title":{},"body":{"changelog.html":{}}}],["combinelatest",{"_index":111,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["combines",{"_index":1906,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["come",{"_index":2664,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":2657,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":412,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"dependencies.html":{}}}],["command",{"_index":67,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["common",{"_index":1239,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{},"index.html":{}}}],["commonmodule",{"_index":364,"title":{},"body":{"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{}}}],["compare",{"_index":1898,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["comparison",{"_index":1900,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["compiler",{"_index":1548,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["completely",{"_index":1175,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["complexity",{"_index":2524,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":2382,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":275,"title":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":508,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["components",{"_index":449,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{},"overview.html":{}}}],["components/call",{"_index":668,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["components/info/info",{"_index":671,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["computed",{"_index":967,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalConfigState.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["computes",{"_index":1940,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["comunica/query",{"_index":2814,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":1026,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"dependencies.html":{}}}],["concat(op.added",{"_index":1027,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["conditions",{"_index":3001,"title":{},"body":{"license.html":{}}}],["config",{"_index":152,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["config.state",{"_index":124,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["config.state.ts",{"_index":1105,"title":{},"body":{"injectables/GlobalConfigState.html":{},"coverage.html":{}}}],["config.state.ts:19",{"_index":1136,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:22",{"_index":1138,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:26",{"_index":1135,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:30",{"_index":1132,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:34",{"_index":1129,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:42",{"_index":1116,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:43",{"_index":1118,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:44",{"_index":1120,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:45",{"_index":1122,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:46",{"_index":1124,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config.state.ts:62",{"_index":1126,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["config/global",{"_index":123,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["configurable",{"_index":1216,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["configuration",{"_index":2454,"title":{},"body":{"changelog.html":{}}}],["configurations",{"_index":2460,"title":{},"body":{"changelog.html":{}}}],["confirmation",{"_index":2427,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":2469,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":2412,"title":{},"body":{"changelog.html":{}}}],["connectdatabase",{"_index":374,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["connectdatabase(manager",{"_index":381,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["connection",{"_index":3023,"title":{},"body":{"license.html":{}}}],["consent",{"_index":813,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["consent.service",{"_index":42,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["consentchange",{"_index":814,"title":{},"body":{"injectables/ConsentService.html":{}}}],["consentservice",{"_index":6,"title":{"injectables/ConsentService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["consentservice.consentchange.subscribe(consent",{"_index":1514,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["consentservice.setconsent(this.loadconsent",{"_index":1512,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["consortium",{"_index":2976,"title":{},"body":{"license.html":{}}}],["const",{"_index":54,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["constrained",{"_index":2932,"title":{},"body":{"miscellaneous/functions.html":{}}}],["constructor",{"_index":179,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["constructor(api",{"_index":238,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["constructor(consentservice",{"_index":1268,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{}}}],["constructor(defaultmaxoptions",{"_index":2026,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["constructor(dialog",{"_index":800,"title":{},"body":{"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{}}}],["constructor(dialogref",{"_index":1352,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["constructor(el",{"_index":1565,"title":{},"body":{"directives/NumberDirective.html":{}}}],["constructor(elementref",{"_index":2079,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["constructor(globalconfig",{"_index":379,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["constructor(http",{"_index":1335,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["constructor(private",{"_index":1061,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"directives/NumberDirective.html":{},"interfaces/PanelData.html":{}}}],["constructor(store",{"_index":1983,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["container",{"_index":972,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["containers",{"_index":2453,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":2936,"title":{},"body":{"index.html":{}}}],["contains",{"_index":1657,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["containting",{"_index":728,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["content",{"_index":594,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DocumentationContent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/PanelData.html":{},"components/SpatialSearchListComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["content.title",{"_index":1388,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["contents",{"_index":1369,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["continuously",{"_index":1842,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["contract",{"_index":3020,"title":{},"body":{"license.html":{}}}],["control",{"_index":2576,"title":{},"body":{"changelog.html":{}}}],["controller",{"_index":335,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["controls",{"_index":702,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["convert",{"_index":1073,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["coordinate",{"_index":2304,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["copies",{"_index":2996,"title":{},"body":{"license.html":{}}}],["copy",{"_index":2984,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":2975,"title":{},"body":{"license.html":{}}}],["cord",{"_index":1747,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["cors",{"_index":2851,"title":{},"body":{"dependencies.html":{}}}],["cover",{"_index":641,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["coverage",{"_index":2689,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["created",{"_index":1021,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["createdatabase",{"_index":377,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["createdatabase(config",{"_index":386,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["creates",{"_index":339,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{}}}],["createsegments",{"_index":918,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["createstackops",{"_index":919,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["createstackops(ranges",{"_index":936,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["createworker",{"_index":2158,"title":{},"body":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["createworker(config",{"_index":439,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["creation",{"_index":1295,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["credits",{"_index":2962,"title":{},"body":{"index.html":{}}}],["csp",{"_index":1251,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["css",{"_index":1671,"title":{},"body":{"interfaces/OrganInfo.html":{},"dependencies.html":{}}}],["cta",{"_index":633,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["ctadatepassed",{"_index":798,"title":{},"body":{"injectables/CallToActionState.html":{}}}],["ctadatepassed(expirationdate",{"_index":712,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["ctx",{"_index":755,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["ctx.dispatch(new",{"_index":727,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["ctx.getstate",{"_index":721,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["ctx.patchstate",{"_index":763,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["cuboid",{"_index":2687,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":2686,"title":{},"body":{"changelog.html":{}}}],["current",{"_index":965,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{}}}],["currently",{"_index":1795,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["cursor",{"_index":611,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["custom",{"_index":1899,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["cyberinfrastructure",{"_index":2964,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":2534,"title":{},"body":{"changelog.html":{}}}],["d",{"_index":1186,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageService.html":{}}}],["damages",{"_index":3018,"title":{},"body":{"license.html":{}}}],["dark/light",{"_index":2466,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":126,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/PanelData.html":{},"components/StoreDebugComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["data.content",{"_index":1316,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["data.content.length",{"_index":1308,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["data.infotitle",{"_index":1315,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["data.split",{"_index":1080,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["data.title",{"_index":1375,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["data.videoid",{"_index":1317,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dataaction",{"_index":2141,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["database",{"_index":103,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["database.service.ts",{"_index":370,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["database.service.ts:20",{"_index":380,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{}}}],["database.service.ts:37",{"_index":387,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{}}}],["database.service.ts:39",{"_index":384,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{}}}],["database.service.ts:63",{"_index":2160,"title":{},"body":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["database[releaseproxy",{"_index":443,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["databasestatus",{"_index":104,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["datareviver",{"_index":133,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/typealiases.html":{}}}],["datasets",{"_index":2544,"title":{},"body":{"changelog.html":{}}}],["datasource",{"_index":125,"title":{"interfaces/DataSource.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"coverage.html":{}}}],["datasource[k",{"_index":852,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["datasourcedatatype",{"_index":853,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["datasourcelike",{"_index":416,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/typealiases.html":{}}}],["datasourcelikemethod",{"_index":850,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["datasourcemethod",{"_index":851,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["datasourceservice",{"_index":872,"title":{"injectables/DataSourceService.html":{}},"body":{"injectables/DataSourceService.html":{},"coverage.html":{}}}],["date",{"_index":706,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["date(expirationdate",{"_index":716,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["date.now",{"_index":713,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["deal",{"_index":2986,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":3024,"title":{},"body":{"license.html":{}}}],["debug",{"_index":1980,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug'},{'name",{"_index":529,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["debug.component",{"_index":2022,"title":{},"body":{"modules/StoreDebugModule.html":{}}}],["debug.component.html",{"_index":1982,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.scss",{"_index":1981,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts",{"_index":1978,"title":{},"body":{"components/StoreDebugComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["debug.component.ts:21",{"_index":1990,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:26",{"_index":1996,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:34",{"_index":1993,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:37",{"_index":1986,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.component.ts:58",{"_index":1991,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["debug.module.ts",{"_index":2021,"title":{},"body":{"modules/StoreDebugModule.html":{}}}],["debug/store",{"_index":1977,"title":{},"body":{"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["dec",{"_index":699,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["december",{"_index":2623,"title":{},"body":{"changelog.html":{}}}],["decides",{"_index":1823,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["deck.gl/core",{"_index":2816,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/geo",{"_index":2818,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":2821,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":2822,"title":{},"body":{"dependencies.html":{}}}],["deckgl",{"_index":2241,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["declarations",{"_index":362,"title":{},"body":{"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{}}}],["declare",{"_index":1213,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["decorated",{"_index":290,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["decoratedrange",{"_index":289,"title":{"interfaces/DecoratedRange.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["decoratedtextcomponent",{"_index":513,"title":{"components/DecoratedTextComponent.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["decoratedtextmodule",{"_index":1040,"title":{"modules/DecoratedTextModule.html":{}},"body":{"modules/DecoratedTextModule.html":{},"modules/TextSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["decoration",{"_index":950,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["decorations",{"_index":267,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{}}}],["decorations.length",{"_index":984,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["decorations.reduce",{"_index":1038,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["decorator",{"_index":285,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/TextSearchComponent.html":{},"dependencies.html":{}}}],["decorators",{"_index":245,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"components/XYZPositionComponent.html":{}}}],["deep",{"_index":1390,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{}}}],["deeply",{"_index":2416,"title":{},"body":{"changelog.html":{}}}],["def",{"_index":1185,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["default",{"_index":292,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"classes/OpenDialog.html":{},"interfaces/PluckUniqueOptions.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_max_options",{"_index":297,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_options",{"_index":1905,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultmaxoptions",{"_index":342,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["defaultparams",{"_index":136,"title":{"interfaces/DefaultParams.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{}}}],["defaults",{"_index":693,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/functions.html":{}}}],["defaultservice",{"_index":105,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["defaultvalue",{"_index":1448,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["define",{"_index":1050,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["defined",{"_index":24,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"classes/OpenDialog.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{}}}],["defining",{"_index":709,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["delegate.service.ts",{"_index":1426,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"coverage.html":{}}}],["delegate.service.ts:11",{"_index":1429,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["delegate.service.ts:28",{"_index":1432,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["delegatedatasource",{"_index":372,"title":{"classes/DelegateDataSource.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["delegatedatasource:11",{"_index":1434,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["delegatedatasource:19",{"_index":406,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["delete",{"_index":1224,"title":{},"body":{"injectables/GlobalsService.html":{},"components/SpatialSearchListComponent.html":{}}}],["delete_outlined",{"_index":1959,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["demo",{"_index":2434,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{},"changelog.html":{},"dependencies.html":{},"overview.html":{}}}],["depending",{"_index":1248,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["depends",{"_index":1231,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["deps",{"_index":77,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["descrepancies",{"_index":2318,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":262,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/XYZPositionComponent.html":{},"miscellaneous/functions.html":{}}}],["destroyed",{"_index":1304,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["detaches",{"_index":1821,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["details",{"_index":463,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"changelog.html":{}}}],["detection",{"_index":1989,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["detects",{"_index":587,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"interfaces/OrganInfo.html":{}}}],["determines",{"_index":704,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/OrganInfo.html":{}}}],["determining",{"_index":681,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/variables.html":{}}}],["dev",{"_index":431,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["developed",{"_index":2963,"title":{},"body":{"index.html":{}}}],["developmentmode",{"_index":52,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["developments",{"_index":2710,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":481,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{},"interfaces/PanelData.html":{},"changelog.html":{}}}],["dialog's",{"_index":1356,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialog'},{'name",{"_index":518,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["dialog.component",{"_index":675,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{},"modules/InfoDialogModule.html":{}}}],["dialog.component.html",{"_index":1347,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialog.component.scss",{"_index":1346,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialog.component.ts",{"_index":1340,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"coverage.html":{}}}],["dialog.component.ts:26",{"_index":1368,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:30",{"_index":1370,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:34",{"_index":1355,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:42",{"_index":1367,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:43",{"_index":1366,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:53",{"_index":1360,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.component.ts:62",{"_index":1359,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["dialog.module",{"_index":1332,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["dialog.module.ts",{"_index":1417,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["dialog/info",{"_index":674,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"coverage.html":{}}}],["dialogref",{"_index":1349,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["dialogs",{"_index":1313,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["dialogue",{"_index":1302,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["different",{"_index":2452,"title":{},"body":{"changelog.html":{}}}],["digits",{"_index":2601,"title":{},"body":{"changelog.html":{}}}],["dir",{"_index":1831,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["direct",{"_index":2728,"title":{},"body":{"changelog.html":{}}}],["direction",{"_index":1832,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/XYZPositionComponent.html":{}}}],["directive",{"_index":506,"title":{"directives/NumberDirective.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":537,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["directly",{"_index":2658,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":1254,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{}}}],["disabled",{"_index":1274,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/variables.html":{}}}],["disables",{"_index":1870,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["dismiss",{"_index":2075,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["dispatch",{"_index":478,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["display",{"_index":595,"title":{},"body":{"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{}}}],["displayed",{"_index":273,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["displayerrors",{"_index":1793,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["displaying",{"_index":1341,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/StoreDebugComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["displays",{"_index":461,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["distance",{"_index":1804,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["distinct",{"_index":1901,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["distinctuntilchanged",{"_index":287,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["distinctuntilchanged(opts.compare",{"_index":1921,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["distribute",{"_index":2992,"title":{},"body":{"license.html":{}}}],["div",{"_index":2242,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["doc",{"_index":689,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["docs",{"_index":2338,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1526,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"dependencies.html":{}}}],["document).body",{"_index":1557,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["document.body.appendchild(tag",{"_index":1380,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["document.createelement('script",{"_index":1377,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["document.getelementsbyclassname('modal",{"_index":1381,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["documentation",{"_index":1052,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/PanelData.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["documentationcontent",{"_index":669,"title":{"interfaces/DocumentationContent.html":{}},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/PanelData.html":{},"coverage.html":{}}}],["documentationcontents",{"_index":1350,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["documentationurl",{"_index":1292,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["dom",{"_index":452,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["domexception",{"_index":1470,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["don't",{"_index":991,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["done",{"_index":1003,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["donor",{"_index":2490,"title":{},"body":{"changelog.html":{}}}],["donors",{"_index":2547,"title":{},"body":{"changelog.html":{}}}],["dorequest",{"_index":215,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["dorequest(method",{"_index":240,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["dotenv",{"_index":2856,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":2719,"title":{},"body":{"changelog.html":{}}}],["during",{"_index":1179,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["dynamic",{"_index":2812,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":2313,"title":{},"body":{"changelog.html":{}}}],["each",{"_index":1051,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"miscellaneous/functions.html":{}}}],["eagerly_loaded_services",{"_index":55,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["easier",{"_index":2364,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":974,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["efficiency",{"_index":2568,"title":{},"body":{"changelog.html":{}}}],["el",{"_index":1535,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"miscellaneous/functions.html":{}}}],["element",{"_index":505,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/functions.html":{}}}],["elementref",{"_index":1566,"title":{},"body":{"directives/NumberDirective.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["elementref.nativeelement",{"_index":2098,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["embedded",{"_index":2458,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":2449,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":2447,"title":{},"body":{"changelog.html":{}}}],["emitevent",{"_index":320,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["emits",{"_index":328,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{}}}],["emitted",{"_index":2926,"title":{},"body":{"miscellaneous/functions.html":{}}}],["emitter",{"_index":1610,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["emmitter",{"_index":577,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["empty",{"_index":980,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["end",{"_index":889,"title":{},"body":{"interfaces/DecoratedRange.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/functions.html":{}}}],["endpoint",{"_index":226,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["endpoint.service.ts",{"_index":90,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["endpoint.service.ts:104",{"_index":249,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:109",{"_index":253,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:114",{"_index":250,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:119",{"_index":252,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:127",{"_index":248,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:135",{"_index":254,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:143",{"_index":257,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:151",{"_index":246,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:159",{"_index":251,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:167",{"_index":247,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:175",{"_index":256,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:183",{"_index":255,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:190",{"_index":241,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:195",{"_index":243,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:201",{"_index":244,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["endpoint.service.ts:96",{"_index":239,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{}}}],["ensures",{"_index":2153,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["entry",{"_index":2088,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["entry[1",{"_index":1017,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["environment",{"_index":1232,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["error",{"_index":1468,"title":{},"body":{"injectables/LocalStorageService.html":{},"interfaces/OrganInfo.html":{}}}],["error.code",{"_index":1474,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["error.name",{"_index":1480,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["errors",{"_index":1263,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["es",{"_index":2847,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":1253,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{}}}],["eslint/explicit",{"_index":1552,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["eslint/no",{"_index":1257,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["especially",{"_index":1177,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["etc",{"_index":2473,"title":{},"body":{"changelog.html":{}}}],["eui",{"_index":571,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":2378,"title":{},"body":{"changelog.html":{}}}],["eval",{"_index":1259,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["even",{"_index":1197,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["event",{"_index":745,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"license.html":{}}}],["event.stoppropagation",{"_index":1580,"title":{},"body":{"directives/NumberDirective.html":{}}}],["eventemitter",{"_index":276,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["events",{"_index":1540,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/OpacitySliderComponent.html":{}}}],["events.subscribe(data",{"_index":1545,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["eventually",{"_index":1673,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["everything",{"_index":1471,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["evt",{"_index":2274,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["evt.preventdefault",{"_index":2275,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["except",{"_index":1472,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["exclusive",{"_index":892,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["exists",{"_index":1200,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["expanded",{"_index":1797,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["expiered",{"_index":711,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["expiration",{"_index":705,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["expirationdate",{"_index":659,"title":{},"body":{"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{}}}],["expirationdate(state",{"_index":780,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["expire",{"_index":715,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["explicit",{"_index":1551,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["exploration",{"_index":695,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"index.html":{}}}],["export",{"_index":46,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{}}}],["exported",{"_index":127,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["exports",{"_index":363,"title":{},"body":{"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{}}}],["express",{"_index":2858,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["ext/operators",{"_index":1148,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["ext/operators/src/lib/filter",{"_index":2751,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ext/operators/src/lib/flatten.ts",{"_index":2754,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ext/operators/src/lib/inner",{"_index":2756,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ext/operators/src/lib/pluck",{"_index":1894,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["ext/src/public",{"_index":2760,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["extends",{"_index":371,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["external",{"_index":2463,"title":{},"body":{"changelog.html":{}}}],["extra",{"_index":2863,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":2432,"title":{},"body":{"changelog.html":{}}}],["eye",{"_index":1688,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["f",{"_index":1729,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["factory",{"_index":298,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/LocalStorageSyncService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["fade",{"_index":1384,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["fail",{"_index":1247,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["fails",{"_index":1450,"title":{},"body":{"injectables/LocalStorageService.html":{},"modules/MousePositionTrackerModule.html":{},"changelog.html":{}}}],["fallopian",{"_index":1695,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["fallthrough",{"_index":1521,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["false",{"_index":321,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/variables.html":{}}}],["favor",{"_index":2611,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":2310,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":2535,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":2567,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":147,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["fetch",{"_index":1667,"title":{},"body":{"interfaces/OrganInfo.html":{},"dependencies.html":{}}}],["fetches",{"_index":345,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["field",{"_index":1477,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"changelog.html":{}}}],["fields",{"_index":981,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["file",{"_index":15,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":2985,"title":{},"body":{"license.html":{}}}],["filled",{"_index":947,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["filler",{"_index":1961,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["filter",{"_index":97,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["filter(config",{"_index":421,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["filter(item",{"_index":1018,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["filter(range",{"_index":1035,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["filternulls",{"_index":1146,"title":{},"body":{"injectables/GlobalConfigState.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["filterparams",{"_index":138,"title":{"interfaces/FilterParams.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["filters",{"_index":944,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["filtertoparams",{"_index":2791,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["filtertoparams(filter",{"_index":219,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["final",{"_index":2613,"title":{},"body":{"changelog.html":{}}}],["find",{"_index":347,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["findglobalobject",{"_index":1166,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["finishing",{"_index":2430,"title":{},"body":{"changelog.html":{}}}],["firefox",{"_index":1473,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["first",{"_index":620,"title":{},"body":{"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["fit",{"_index":640,"title":{},"body":{"components/CallToActionComponent.html":{},"changelog.html":{}}}],["fitness",{"_index":3010,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":2526,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":2341,"title":{},"body":{"changelog.html":{}}}],["fixes/performance",{"_index":2669,"title":{},"body":{"changelog.html":{}}}],["flatten",{"_index":2755,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["flattens",{"_index":2921,"title":{},"body":{"miscellaneous/functions.html":{}}}],["flex",{"_index":622,"title":{},"body":{"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["flexible",{"_index":2333,"title":{},"body":{"changelog.html":{}}}],["float",{"_index":1411,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["fly",{"_index":2736,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":3000,"title":{},"body":{"license.html":{}}}],["font",{"_index":615,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/XYZPositionComponent.html":{}}}],["form",{"_index":334,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["format",{"_index":2167,"title":{},"body":{"components/XYZPositionComponent.html":{},"changelog.html":{}}}],["formatdata",{"_index":1531,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["formcontrol",{"_index":282,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["formsmodule",{"_index":2058,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["forroot",{"_index":21,"title":{},"body":{"modules/AnalyticsModule.html":{}}}],["forroot(options",{"_index":22,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["forwardcall",{"_index":378,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardcall(method",{"_index":388,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource",{"_index":392,"title":{"classes/ForwardingDataSource.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["forwardingdatasource:36",{"_index":397,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:40",{"_index":401,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:44",{"_index":398,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:48",{"_index":400,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:52",{"_index":396,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:56",{"_index":402,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:60",{"_index":405,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:64",{"_index":394,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:68",{"_index":399,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:72",{"_index":395,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:76",{"_index":404,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:80",{"_index":403,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["forwardingdatasource:93",{"_index":393,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["found",{"_index":348,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GlobalsService.html":{},"components/TextSearchComponent.html":{}}}],["frame",{"_index":2548,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":2305,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["free",{"_index":2980,"title":{},"body":{"license.html":{}}}],["fromevent",{"_index":1527,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["fromevent(el",{"_index":1541,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["fs",{"_index":2862,"title":{},"body":{"dependencies.html":{}}}],["full",{"_index":1030,"title":{},"body":{"components/DecoratedTextComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["fullscreen",{"_index":2694,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":2536,"title":{},"body":{"changelog.html":{}}}],["func",{"_index":1255,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["function",{"_index":56,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DecoratedRange.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/InfoButtonService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["function('return",{"_index":1260,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["functionality",{"_index":304,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GlobalsService.html":{},"components/TextSearchComponent.html":{}}}],["functionaliy",{"_index":1907,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["functions",{"_index":2909,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funded",{"_index":2969,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":2999,"title":{},"body":{"license.html":{}}}],["further",{"_index":2690,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":2527,"title":{},"body":{"changelog.html":{}}}],["ga",{"_index":717,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["ga.event('webpage",{"_index":1546,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["gatoken",{"_index":48,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["generate",{"_index":2360,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":2383,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":2314,"title":{},"body":{"changelog.html":{}}}],["get(key",{"_index":1182,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["getaggregateresults",{"_index":232,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getaggregateresults(filter",{"_index":203,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getallowtelemetry",{"_index":2091,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["getcelltypetermoccurences",{"_index":233,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getcelltypetermoccurences(filter",{"_index":207,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getcelltypetreemodel",{"_index":196,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getconfig",{"_index":1137,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getdata",{"_index":1995,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["getdatabasestatus",{"_index":185,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getdatasettechnologynames",{"_index":191,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getdialogdata",{"_index":729,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["getitem",{"_index":1442,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getitem(key",{"_index":1447,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getlength",{"_index":1485,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getnormalizeddecorations",{"_index":920,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getobj",{"_index":1208,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["getontologytermoccurences",{"_index":234,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getontologytermoccurences(filter",{"_index":205,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getontologytreemodel",{"_index":193,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getop",{"_index":1006,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getop(range.end).removed.push(range",{"_index":1009,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getop(range.start).added.push(range",{"_index":1008,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["getoption",{"_index":1108,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getoption(...path",{"_index":1121,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getoption(k1",{"_index":1114,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getoptions",{"_index":2023,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["getoptions(search",{"_index":350,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["getpathkey",{"_index":1109,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getpathkey(path",{"_index":1125,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getproperty",{"_index":1110,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getproperty(path",{"_index":1127,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["getprovidernames",{"_index":189,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getreferenceorgans",{"_index":198,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getreferenceorganscene",{"_index":235,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getreferenceorganscene(organiri",{"_index":212,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["gets",{"_index":1184,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageService.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{}}}],["getscene",{"_index":236,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getscene(filter",{"_index":209,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["gettelemetrystoragesetting",{"_index":2146,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":2301,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["gettissueblockresults",{"_index":237,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["gettissueblockresults(filter",{"_index":201,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["getvalue",{"_index":2043,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["github",{"_index":2603,"title":{},"body":{"changelog.html":{}}}],["given",{"_index":827,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/typealiases.html":{}}}],["gizmo",{"_index":2477,"title":{},"body":{"changelog.html":{}}}],["global",{"_index":1165,"title":{},"body":{"injectables/GlobalsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["globalconfig",{"_index":183,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"changelog.html":{}}}],["globalconfig.config$.pipe",{"_index":420,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["globalconfig.getoption('hubmaptoken",{"_index":221,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["globalconfig.getoption('hubmaptoken').subscribe(buster",{"_index":184,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["globalconfig.getoption('remoteapiendpoint",{"_index":220,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["globalconfigstate",{"_index":122,"title":{"injectables/GlobalConfigState.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["globalkey",{"_index":1189,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{}}}],["globalsservice",{"_index":1162,"title":{"injectables/GlobalsService.html":{}},"body":{"injectables/GlobalsService.html":{},"coverage.html":{}}}],["globalthis",{"_index":1181,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["globalthis[k",{"_index":1219,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["good",{"_index":2643,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":40,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"changelog.html":{},"dependencies.html":{}}}],["googleanalyticsservice",{"_index":667,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"modules/MousePositionTrackerModule.html":{}}}],["googleanalyticssyncservice",{"_index":8,"title":{"injectables/GoogleAnalyticsSyncService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["granted",{"_index":2979,"title":{},"body":{"license.html":{}}}],["graph",{"_index":3026,"title":{},"body":{"modules.html":{}}}],["graphical",{"_index":2350,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":2865,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":2443,"title":{},"body":{"changelog.html":{}}}],["grow",{"_index":1962,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["gtex",{"_index":2361,"title":{},"body":{"changelog.html":{}}}],["guide",{"_index":2636,"title":{},"body":{"changelog.html":{}}}],["h1",{"_index":1064,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["hack",{"_index":1851,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["hand",{"_index":2640,"title":{},"body":{"changelog.html":{}}}],["handle",{"_index":583,"title":{},"body":{"components/CallToActionComponent.html":{},"injectables/LocalStorageService.html":{}}}],["handles",{"_index":744,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["happen",{"_index":2675,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":2621,"title":{},"body":{"changelog.html":{}}}],["happy",{"_index":1853,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["hard",{"_index":1229,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["has(key",{"_index":1193,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["hassex",{"_index":1659,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["header",{"_index":1393,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["headerandcontent",{"_index":1086,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["headerandcontent.splice(1).join(newline",{"_index":1090,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["headerandcontent[0",{"_index":1089,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["heart",{"_index":1700,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":626,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["helmet",{"_index":2869,"title":{},"body":{"dependencies.html":{}}}],["help",{"_index":1663,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["here",{"_index":2638,"title":{},"body":{"changelog.html":{}}}],["hereby",{"_index":2978,"title":{},"body":{"license.html":{}}}],["hex",{"_index":2871,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":1641,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["hide",{"_index":1825,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["hiding",{"_index":1342,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["high",{"_index":167,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["highlight",{"_index":2421,"title":{},"body":{"changelog.html":{}}}],["highlighted",{"_index":2321,"title":{},"body":{"changelog.html":{}}}],["highlights",{"_index":2422,"title":{},"body":{"changelog.html":{}}}],["hold",{"_index":656,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["holders",{"_index":3015,"title":{},"body":{"license.html":{}}}],["hooked",{"_index":2574,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":593,"title":{},"body":{"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{}}}],["hostbinding",{"_index":277,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["hostbinding('class",{"_index":314,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["hostbindings",{"_index":566,"title":{},"body":{"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["hostlistener",{"_index":1575,"title":{},"body":{"directives/NumberDirective.html":{}}}],["hostlistener('input",{"_index":1574,"title":{},"body":{"directives/NumberDirective.html":{}}}],["hostlisteners",{"_index":1564,"title":{},"body":{"directives/NumberDirective.html":{}}}],["hovering",{"_index":2492,"title":{},"body":{"changelog.html":{}}}],["html",{"_index":313,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["htmlelement",{"_index":1530,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["http",{"_index":719,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["http://purl.obolibrary.org/obo/fma_24977",{"_index":1711,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/fma_24978",{"_index":1710,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/fma_7213",{"_index":1724,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/fma_7214",{"_index":1723,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000029",{"_index":1685,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000056",{"_index":1758,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000059",{"_index":1745,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000079",{"_index":1738,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000948",{"_index":1701,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000955",{"_index":1681,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000970",{"_index":1690,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000992",{"_index":1722,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0000995",{"_index":1767,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001004",{"_index":1719,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001222",{"_index":1760,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001223",{"_index":1759,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001255",{"_index":1764,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001264",{"_index":1727,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001270",{"_index":1731,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001302",{"_index":1698,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001303",{"_index":1697,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001465",{"_index":1709,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0001987",{"_index":1734,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002048",{"_index":1718,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002049",{"_index":1773,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002097",{"_index":1678,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002106",{"_index":1752,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002107",{"_index":1714,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002108",{"_index":1742,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002113",{"_index":1704,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002240",{"_index":1749,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002367",{"_index":1737,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002370",{"_index":1755,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0002509",{"_index":1686,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0003889",{"_index":1696,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004537",{"_index":1772,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004538",{"_index":1705,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004539",{"_index":1706,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004548",{"_index":1691,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["http://purl.obolibrary.org/obo/uberon_0004549",{"_index":1692,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":661,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["httpclientmodule",{"_index":1331,"title":{},"body":{"modules/InfoButtonModule.html":{}}}],["https://beta",{"_index":2941,"title":{},"body":{"index.html":{}}}],["https://ccf",{"_index":2953,"title":{},"body":{"index.html":{}}}],["https://developer.mozilla.org/en",{"_index":1461,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["https://hubmap",{"_index":2946,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":2945,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":2948,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":2943,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":2730,"title":{},"body":{"changelog.html":{}}}],["https://www.youtube.com/iframe_api",{"_index":1379,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["hubmap",{"_index":2419,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["hubmaptoken",{"_index":91,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["i1[0",{"_index":1013,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["i2",{"_index":1012,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["i2[0",{"_index":1014,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["icon",{"_index":460,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["icons",{"_index":1639,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["id",{"_index":268,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["idb",{"_index":2874,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":2040,"title":{},"body":{"components/TextSearchComponent.html":{},"coverage.html":{}}}],["iec",{"_index":2616,"title":{},"body":{"changelog.html":{}}}],["iframe",{"_index":1413,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["ignore",{"_index":1226,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["ignored",{"_index":1511,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["igoogleanalyticscommand",{"_index":37,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["igoogleanalyticssettings",{"_index":1269,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["image",{"_index":575,"title":{},"body":{"components/CallToActionComponent.html":{},"changelog.html":{}}}],["images",{"_index":2656,"title":{},"body":{"changelog.html":{}}}],["imageurl",{"_index":472,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{}}}],["imageurl(state",{"_index":782,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["img",{"_index":1410,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["immutable",{"_index":1139,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["immutablepatchvalue",{"_index":1131,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["immutablestatevalue",{"_index":1134,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["impl",{"_index":373,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["impl[method",{"_index":870,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["implementation",{"_index":2410,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":2572,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":2697,"title":{},"body":{"changelog.html":{}}}],["implements",{"_index":178,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["implied",{"_index":1258,"title":{},"body":{"injectables/GlobalsService.html":{},"license.html":{}}}],["import",{"_index":33,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{}}}],["important",{"_index":1640,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{}}}],["imports",{"_index":71,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{}}}],["improve",{"_index":2107,"title":{},"body":{"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["improved",{"_index":2375,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":2346,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":2444,"title":{},"body":{"changelog.html":{}}}],["in\\'}}opt",{"_index":2130,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["include",{"_index":1571,"title":{},"body":{"directives/NumberDirective.html":{},"changelog.html":{}}}],["included",{"_index":3003,"title":{},"body":{"license.html":{}}}],["includes",{"_index":2311,"title":{},"body":{"changelog.html":{}}}],["including",{"_index":2418,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["inclusive",{"_index":896,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["increase",{"_index":2596,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":2692,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":85,"title":{"index.html":{}},"body":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexing",{"_index":899,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["indiana",{"_index":2967,"title":{},"body":{"index.html":{}}}],["indicating",{"_index":903,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["indices",{"_index":2930,"title":{},"body":{"miscellaneous/functions.html":{}}}],["indicies",{"_index":894,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["individual",{"_index":2578,"title":{},"body":{"changelog.html":{}}}],["infix",{"_index":2048,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["info",{"_index":13,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["infobuttoncomponent",{"_index":515,"title":{"components/InfoButtonComponent.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["infobuttonmodule",{"_index":1323,"title":{"modules/InfoButtonModule.html":{}},"body":{"modules/InfoButtonModule.html":{},"modules.html":{},"overview.html":{}}}],["infobuttonservice",{"_index":670,"title":{"injectables/InfoButtonService.html":{}},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"coverage.html":{}}}],["infodialogcomponent",{"_index":517,"title":{"components/InfoDialogComponent.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["infodialogdata",{"_index":1354,"title":{"interfaces/InfoDialogData.html":{}},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"coverage.html":{}}}],["infodialogmodule",{"_index":1328,"title":{"modules/InfoDialogModule.html":{}},"body":{"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules.html":{},"overview.html":{}}}],["information",{"_index":459,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{},"index.html":{}}}],["infoservice",{"_index":718,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["infotitle",{"_index":562,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/PanelData.html":{}}}],["infrastructure",{"_index":2659,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":2626,"title":{},"body":{"changelog.html":{}}}],["inherited",{"_index":391,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/DelegateDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["init",{"_index":1364,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["initalvalue",{"_index":1576,"title":{},"body":{"directives/NumberDirective.html":{}}}],["initalvalue.replace(/[^0",{"_index":1578,"title":{},"body":{"directives/NumberDirective.html":{}}}],["initcommands",{"_index":2747,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["initcommands(options",{"_index":66,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["initial",{"_index":2508,"title":{},"body":{"changelog.html":{}}}],["initial_telemetry_setting",{"_index":2145,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initialization",{"_index":2249,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["initialized",{"_index":2225,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["inject",{"_index":278,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["inject(default_max_options",{"_index":343,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["inject(document",{"_index":1555,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["inject(local_storage_consent_key",{"_index":1509,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["inject(mat_dialog_data",{"_index":1365,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["inject(mat_snack_bar_data",{"_index":2089,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["inject(ngx_google_analytics_settings_token",{"_index":1280,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["inject(ngx_window",{"_index":1279,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["injectable",{"_index":93,"title":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/PanelData.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["injectables",{"_index":231,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"injectables/DataSourceService.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"overview.html":{}}}],["injected",{"_index":1358,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["injectiontoken",{"_index":279,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/LocalStorageSyncService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('key",{"_index":1505,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["injector",{"_index":1428,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["injector.get(token",{"_index":1438,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["injectordelegatedatasourceservice",{"_index":1424,"title":{"injectables/InjectorDelegateDataSourceService.html":{}},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"coverage.html":{}}}],["innermap",{"_index":2758,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["innermap(project",{"_index":2924,"title":{},"body":{"miscellaneous/functions.html":{}}}],["input",{"_index":280,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["input[ccfnumbersonly",{"_index":539,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["inputs",{"_index":561,"title":{},"body":{"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{},"components/XYZPositionComponent.html":{}}}],["inside",{"_index":1055,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["instance",{"_index":340,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["instanceof",{"_index":1469,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["instead",{"_index":2502,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":2448,"title":{},"body":{"changelog.html":{}}}],["integer",{"_index":1562,"title":{},"body":{"directives/NumberDirective.html":{}}}],["integrated",{"_index":2537,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":2415,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":2625,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":2554,"title":{},"body":{"changelog.html":{}}}],["interact",{"_index":2521,"title":{},"body":{"changelog.html":{}}}],["interacting",{"_index":1164,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["interactions",{"_index":2678,"title":{},"body":{"changelog.html":{}}}],["interactive",{"_index":2226,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["interactive(value",{"_index":2228,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["interest",{"_index":1868,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["interface",{"_index":47,"title":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/CallToActionModel.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":84,"title":{},"body":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/CallToActionModel.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":2610,"title":{},"body":{"changelog.html":{}}}],["intestine",{"_index":1740,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["invoked",{"_index":2928,"title":{},"body":{"miscellaneous/functions.html":{}}}],["iobservablecacheconfig",{"_index":128,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["isdevmode",{"_index":407,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["isselected(organ",{"_index":1869,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["issue",{"_index":2592,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":2316,"title":{},"body":{"changelog.html":{}}}],["istanbul",{"_index":1225,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["it's",{"_index":2413,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":1606,"title":{},"body":{"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"changelog.html":{}}}],["item.description",{"_index":1949,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["item.selected",{"_index":1955,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["itemcontainer",{"_index":1790,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemcontainer.nativeelement.style.width",{"_index":1879,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemid",{"_index":1928,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["itemid(_index",{"_index":1938,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["itemlist",{"_index":1788,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemlist.nativeelement.offsetwidth",{"_index":1873,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemlist.nativeelement.style.left",{"_index":1840,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["itemremoved",{"_index":1930,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["items",{"_index":1634,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["iu",{"_index":2708,"title":{},"body":{"changelog.html":{}}}],["javascript",{"_index":2369,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["json",{"_index":2016,"title":{},"body":{"components/StoreDebugComponent.html":{},"changelog.html":{}}}],["jsonld",{"_index":2877,"title":{},"body":{"dependencies.html":{}}}],["july",{"_index":2677,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":2716,"title":{},"body":{"changelog.html":{}}}],["justify",{"_index":1394,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["k",{"_index":389,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["k1",{"_index":1115,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k2",{"_index":1117,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k3",{"_index":1119,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k4",{"_index":1913,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k5",{"_index":1914,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["k6",{"_index":1915,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["key",{"_index":61,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["key(index",{"_index":1451,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["keyboard",{"_index":2714,"title":{},"body":{"changelog.html":{}}}],["keyof",{"_index":849,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["keys",{"_index":1210,"title":{},"body":{"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/typealiases.html":{}}}],["keys.slice(0",{"_index":1918,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["keyval",{"_index":2875,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":1703,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["kind",{"_index":3007,"title":{},"body":{"license.html":{}}}],["knee",{"_index":1708,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["known",{"_index":2315,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":2619,"title":{},"body":{"changelog.html":{}}}],["kv[0",{"_index":2014,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["kv[1",{"_index":2015,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["kvlist",{"_index":1998,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["kvpair",{"_index":2000,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["l",{"_index":1689,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":269,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{}}}],["labs/data",{"_index":2832,"title":{},"body":{"dependencies.html":{}}}],["labs/data/decorators",{"_index":1143,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["labs/data/repositories",{"_index":1144,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["labs/data/typings",{"_index":1145,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["labs/dispatch",{"_index":494,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"dependencies.html":{}}}],["landmarks",{"_index":2330,"title":{},"body":{"changelog.html":{}}}],["large",{"_index":1744,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["larger",{"_index":2365,"title":{},"body":{"changelog.html":{}}}],["last",{"_index":1001,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["lastindex",{"_index":988,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["later",{"_index":928,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["latest",{"_index":326,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"index.html":{}}}],["launchinfodialog",{"_index":1291,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["launchinfodialog(data",{"_index":1300,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["launchlearnmore",{"_index":799,"title":{},"body":{"injectables/CallToActionState.html":{}}}],["launchlearnmore(content",{"_index":735,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["layers",{"_index":2819,"title":{},"body":{"dependencies.html":{}}}],["ld",{"_index":2634,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":2591,"title":{},"body":{"changelog.html":{}}}],["learn",{"_index":486,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{}}}],["learnmore",{"_index":473,"title":{"classes/LearnMore.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{},"coverage.html":{}}}],["learnmore(_ctx",{"_index":748,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["leave",{"_index":2429,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":600,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["left/right",{"_index":2441,"title":{},"body":{"changelog.html":{}}}],["legend",{"_index":504,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["length",{"_index":901,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["level",{"_index":2712,"title":{},"body":{"changelog.html":{},"miscellaneous/functions.html":{}}}],["levels",{"_index":2725,"title":{},"body":{"changelog.html":{}}}],["lhs",{"_index":1903,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["liability",{"_index":3019,"title":{},"body":{"license.html":{}}}],["liable",{"_index":3016,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":2367,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":2562,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":2973,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":2424,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":2988,"title":{},"body":{"license.html":{}}}],["limited",{"_index":2663,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":625,"title":{},"body":{"components/CallToActionComponent.html":{},"injectables/GlobalsService.html":{},"components/InfoDialogComponent.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["link",{"_index":2435,"title":{},"body":{"changelog.html":{}}}],["linkage",{"_index":2679,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":2335,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":2397,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":1487,"title":{},"body":{"injectables/LocalStorageService.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/StoreDebugComponent.html":{},"changelog.html":{}}}],["list'},{'name",{"_index":526,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["list.component",{"_index":1975,"title":{},"body":{"modules/SpatialSearchListModule.html":{}}}],["list.component.html",{"_index":1927,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["list.component.scss",{"_index":1926,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["list.component.ts",{"_index":1924,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"coverage.html":{}}}],["list.component.ts:27",{"_index":1937,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.component.ts:30",{"_index":1933,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.component.ts:33",{"_index":1932,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.component.ts:36",{"_index":1935,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.component.ts:39",{"_index":1934,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.component.ts:48",{"_index":1939,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.component.ts:58",{"_index":1946,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.component.ts:71",{"_index":1944,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["list.module.ts",{"_index":1968,"title":{},"body":{"modules/SpatialSearchListModule.html":{}}}],["list/spatial",{"_index":1923,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"coverage.html":{}}}],["listeners",{"_index":1988,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["listens",{"_index":1570,"title":{},"body":{"directives/NumberDirective.html":{}}}],["listlength",{"_index":1876,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["listlength}px",{"_index":1880,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["literal",{"_index":2892,"title":{},"body":{"dependencies.html":{}}}],["little",{"_index":2519,"title":{},"body":{"changelog.html":{}}}],["liver",{"_index":1713,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["load",{"_index":1361,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["loadconsent",{"_index":1496,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["loaded",{"_index":2680,"title":{},"body":{"changelog.html":{}}}],["loaders.gl/core",{"_index":2823,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/draco",{"_index":2825,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":2826,"title":{},"body":{"dependencies.html":{}}}],["local",{"_index":44,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/LocalStorageService.html":{}}}],["local_storage_allow_telemetry_key",{"_index":2144,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["local_storage_consent_key",{"_index":1504,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localstorage",{"_index":1508,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["localstorage.getitem(local_storage_allow_telemetry_key",{"_index":2147,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["localstorage.setitem(local_storage_allow_telemetry_key",{"_index":2150,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["localstorageservice",{"_index":676,"title":{"injectables/LocalStorageService.html":{}},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["localstorageservice.storage?.clear",{"_index":1494,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice.storage?.getitem(key",{"_index":1490,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice.storage?.key(index",{"_index":1489,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice.storage?.length",{"_index":1488,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice.storage?.removeitem(key",{"_index":1493,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice.storage?.setitem(key",{"_index":1491,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstoragesyncservice",{"_index":9,"title":{"injectables/LocalStorageSyncService.html":{}},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["locate",{"_index":1170,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["location",{"_index":2597,"title":{},"body":{"changelog.html":{}}}],["location.reload",{"_index":2157,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["locations",{"_index":1174,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["lodash",{"_index":2879,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":2105,"title":{},"body":{"components/TrackingPopupComponent.html":{},"index.html":{}}}],["logging",{"_index":2363,"title":{},"body":{"changelog.html":{}}}],["long",{"_index":1199,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["longer",{"_index":2500,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":1054,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"changelog.html":{}}}],["low",{"_index":166,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["lru",{"_index":2881,"title":{},"body":{"dependencies.html":{}}}],["luma.gl/core",{"_index":2827,"title":{},"body":{"dependencies.html":{}}}],["lung",{"_index":1716,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["lungs",{"_index":1717,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["lymph",{"_index":1684,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["made",{"_index":2618,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":2309,"title":{},"body":{"changelog.html":{}}}],["make",{"_index":1852,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["makedecoratedsegment",{"_index":921,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["makedecoratedsegment(text",{"_index":948,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["makes",{"_index":642,"title":{},"body":{"components/CallToActionComponent.html":{},"changelog.html":{}}}],["makeundecoratedsegment",{"_index":922,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["makeundecoratedsegment(text",{"_index":951,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["making",{"_index":2406,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":148,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["managed",{"_index":1994,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["manager",{"_index":385,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["manager.database",{"_index":428,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["manager.database.connect(config",{"_index":434,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["managers",{"_index":2373,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":115,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"modules/MousePositionTrackerModule.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["map(config",{"_index":1435,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["map(data",{"_index":229,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["map(entry",{"_index":1016,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["map(formatdata",{"_index":1544,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["map(manager",{"_index":427,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["map(range",{"_index":1032,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["map(token",{"_index":1437,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["map.ts",{"_index":2757,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["mapping",{"_index":2927,"title":{},"body":{"miscellaneous/functions.html":{}}}],["maps",{"_index":2925,"title":{},"body":{"miscellaneous/functions.html":{}}}],["march",{"_index":2565,"title":{},"body":{"changelog.html":{}}}],["margin",{"_index":649,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["margin.x",{"_index":2259,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["margin.y",{"_index":2262,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["markdown",{"_index":589,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"modules/InfoDialogModule.html":{},"interfaces/PanelData.html":{},"dependencies.html":{}}}],["markdowncontent",{"_index":1078,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["markdowncontent.push",{"_index":1088,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["markdownmodule",{"_index":1420,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["markdownmodule.forroot",{"_index":1423,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["markers",{"_index":2069,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["markup",{"_index":688,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"miscellaneous/variables.html":{}}}],["mat",{"_index":634,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["mat_dialog_data",{"_index":1372,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["mat_snack_bar_data",{"_index":2093,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["matautocompletemodule",{"_index":2060,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["matbuttonmodule",{"_index":1969,"title":{},"body":{"modules/SpatialSearchListModule.html":{},"modules/TrackingPopupModule.html":{}}}],["matcardmodule",{"_index":552,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{}}}],["match",{"_index":1664,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["matcheckboxmodule",{"_index":1971,"title":{},"body":{"modules/SpatialSearchListModule.html":{}}}],["matching",{"_index":82,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":663,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{}}}],["matdialogmodule",{"_index":550,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/InfoDialogModule.html":{}}}],["matdialogref",{"_index":1353,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["material",{"_index":1963,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["matexpansionmodule",{"_index":1418,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["matformfieldmodule",{"_index":2062,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["math.floor(carouselcontainer.nativeelement.offsetwidth",{"_index":1877,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["math.gl/core",{"_index":95,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"dependencies.html":{}}}],["math.gl/culling",{"_index":2830,"title":{},"body":{"dependencies.html":{}}}],["math.log2((height",{"_index":2261,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["math.log2((width",{"_index":2258,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["math.min",{"_index":2257,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["maticonmodule",{"_index":548,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{}}}],["matinputmodule",{"_index":2064,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["matlistmodule",{"_index":1973,"title":{},"body":{"modules/SpatialSearchListModule.html":{}}}],["matprefix",{"_index":2055,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["matripplemodule",{"_index":1650,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["matrix4",{"_index":94,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["matrix4(node.transformmatrix",{"_index":174,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["matslidermodule",{"_index":1648,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["matsuffix",{"_index":2056,"title":{},"body":{"modules/TextSearchModule.html":{},"overview.html":{}}}],["mattooltipmodule",{"_index":1891,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["max",{"_index":170,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["maxcachecount",{"_index":158,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":293,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["maxoptions",{"_index":323,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["maxrotationx",{"_index":2270,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["mc",{"_index":2707,"title":{},"body":{"changelog.html":{}}}],["member",{"_index":2100,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["memory",{"_index":2590,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":2641,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":3009,"title":{},"body":{"license.html":{}}}],["merge",{"_index":2990,"title":{},"body":{"license.html":{}}}],["message",{"_index":474,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"interfaces/OrganInfo.html":{}}}],["message(state",{"_index":784,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["metadata",{"_index":465,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{}}}],["method",{"_index":216,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["method(requestparams",{"_index":228,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["methods",{"_index":19,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"components/CallToActionComponent.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["min",{"_index":168,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/InfoDialogComponent.html":{},"components/TrackingPopupComponent.html":{}}}],["minmax",{"_index":106,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/functions.html":{}}}],["minor",{"_index":1850,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["minrotationx",{"_index":2268,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["miscellaneous",{"_index":2908,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":2974,"title":{},"body":{"license.html":{}}}],["mixed",{"_index":1854,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["mock",{"_index":2703,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":739,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["mode",{"_index":432,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{}}}],["model",{"_index":1373,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"dependencies.html":{}}}],["models",{"_index":2191,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["modified",{"_index":1460,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["modify",{"_index":1025,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"license.html":{}}}],["module",{"_index":0,"title":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{}},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":32,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["monorepo",{"_index":2934,"title":{},"body":{"index.html":{}}}],["more",{"_index":487,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{},"changelog.html":{},"index.html":{}}}],["mount",{"_index":2243,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["mouseevent",{"_index":1532,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mousemove",{"_index":1547,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mousemove').pipe",{"_index":1542,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["mousepositiontrackermodule",{"_index":1523,"title":{"modules/MousePositionTrackerModule.html":{}},"body":{"modules/MousePositionTrackerModule.html":{},"modules.html":{}}}],["moved",{"_index":2720,"title":{},"body":{"changelog.html":{}}}],["moves",{"_index":1805,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["much",{"_index":1234,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["multi",{"_index":73,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["multiple",{"_index":1312,"title":{},"body":{"components/InfoButtonComponent.html":{},"interfaces/OrganInfo.html":{},"index.html":{}}}],["multiselect",{"_index":1792,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["n3",{"_index":2882,"title":{},"body":{"dependencies.html":{}}}],["n\\n",{"_index":1084,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["name",{"_index":27,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":2470,"title":{},"body":{"changelog.html":{}}}],["navigation",{"_index":2715,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":657,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["needed",{"_index":2569,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":2573,"title":{},"body":{"changelog.html":{}}}],["negative",{"_index":893,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["nested",{"_index":2922,"title":{},"body":{"miscellaneous/functions.html":{}}}],["network",{"_index":2965,"title":{},"body":{"index.html":{}}}],["new",{"_index":154,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["newitems",{"_index":1950,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["newitems.filter(item",{"_index":1954,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["newitems.splice(index",{"_index":1957,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["newitems[index",{"_index":1952,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["newline",{"_index":1082,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["newopacity",{"_index":1616,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["next",{"_index":1227,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["ng",{"_index":1389,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{}}}],["ng5",{"_index":2884,"title":{},"body":{"dependencies.html":{}}}],["ngafterviewinit",{"_index":1817,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["ngmodule",{"_index":35,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{}}}],["ngonchanges",{"_index":923,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["ngonchanges(changes",{"_index":954,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["ngondestroy",{"_index":815,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["ngoninit",{"_index":1351,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{}}}],["ngx",{"_index":39,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"modules/InfoDialogModule.html":{},"modules/MousePositionTrackerModule.html":{},"dependencies.html":{}}}],["ngx_google_analytics_settings_token",{"_index":1277,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["ngx_window",{"_index":1278,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["ngxgoogleanalyticsmodule",{"_index":38,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["ngxgoogleanalyticsmodule.forroot",{"_index":79,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["ngxs",{"_index":493,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"dependencies.html":{}}}],["ngxs/logger",{"_index":2835,"title":{},"body":{"dependencies.html":{}}}],["ngxs/storage",{"_index":2838,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":496,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"injectables/GlobalConfigState.html":{},"components/StoreDebugComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"dependencies.html":{}}}],["ngxsimmutabledatarepository",{"_index":1106,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["ngxsmodule",{"_index":556,"title":{},"body":{"modules/CallToActionBehaviorModule.html":{}}}],["ngxsoninit",{"_index":664,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["ngxsoninit(ctx",{"_index":720,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["nih",{"_index":2970,"title":{},"body":{"index.html":{}}}],["node",{"_index":172,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":1241,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["nodeclick",{"_index":2222,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodeclickevent",{"_index":2187,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodedrag",{"_index":2221,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodedragevent",{"_index":2188,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodehoverstart",{"_index":2223,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodehoverstop",{"_index":2224,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["nodejs",{"_index":1855,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["nodes",{"_index":1683,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["none",{"_index":1638,"title":{},"body":{"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["noninfringement",{"_index":3013,"title":{},"body":{"license.html":{}}}],["nonnullable",{"_index":1188,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{}}}],["nonnullable[0",{"_index":129,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["normal",{"_index":1872,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["normalize",{"_index":969,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["normalize(range",{"_index":1033,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["normalized",{"_index":946,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["normalizes",{"_index":898,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"miscellaneous/functions.html":{}}}],["note",{"_index":1020,"title":{},"body":{"components/DecoratedTextComponent.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["notice",{"_index":2593,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":708,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"changelog.html":{}}}],["ns_error_dom_quota_reached",{"_index":1482,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["null",{"_index":63,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TextSearchComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"miscellaneous/functions.html":{}}}],["nulls.ts",{"_index":2752,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["number",{"_index":165,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/LocalStorageService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["number:format",{"_index":2175,"title":{},"body":{"components/XYZPositionComponent.html":{}}}],["numberdirective",{"_index":538,"title":{"directives/NumberDirective.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["numbers",{"_index":1572,"title":{},"body":{"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{}}}],["numbersonlymodule",{"_index":1581,"title":{"modules/NumbersOnlyModule.html":{}},"body":{"modules/NumbersOnlyModule.html":{},"modules.html":{},"overview.html":{}}}],["numeric",{"_index":2598,"title":{},"body":{"changelog.html":{}}}],["obj",{"_index":1167,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/functions.html":{}}}],["obj[key",{"_index":1220,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["object",{"_index":639,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/DecoratedRange.html":{},"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["object.defineproperties(this",{"_index":1215,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["object.entries(obj).reduce>((attrs",{"_index":60,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["object.entries(ops",{"_index":1010,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["object.entries(this.root",{"_index":2002,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["object.entries(values",{"_index":2005,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["object.keys(config).length",{"_index":422,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["objects",{"_index":1031,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["obs",{"_index":1158,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["observable",{"_index":112,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"components/InfoButtonComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["observable).pipe",{"_index":337,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["observableinput",{"_index":286,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"components/TextSearchComponent.html":{}}}],["observedvalueof",{"_index":848,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"miscellaneous/typealiases.html":{}}}],["obtaining",{"_index":2983,"title":{},"body":{"license.html":{}}}],["occured",{"_index":1824,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["occurencedata",{"_index":1814,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["occurencedata(value",{"_index":1812,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["off/on",{"_index":2571,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":2676,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":2947,"title":{},"body":{"index.html":{}}}],["oldvalue",{"_index":2149,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["onchanges",{"_index":914,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["ondestroy",{"_index":825,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["ondialogbuttonclick",{"_index":560,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{}}}],["one",{"_index":1246,"title":{},"body":{"injectables/GlobalsService.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{},"index.html":{}}}],["oninit",{"_index":1345,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{}}}],["oninputchange",{"_index":1563,"title":{},"body":{"directives/NumberDirective.html":{}}}],["oninputchange(event",{"_index":1573,"title":{},"body":{"directives/NumberDirective.html":{}}}],["onleft",{"_index":1800,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["online",{"_index":2685,"title":{},"body":{"changelog.html":{}}}],["only.directive",{"_index":1586,"title":{},"body":{"modules/NumbersOnlyModule.html":{}}}],["only.directive.ts",{"_index":1560,"title":{},"body":{"directives/NumberDirective.html":{},"coverage.html":{}}}],["only.directive.ts:23",{"_index":1569,"title":{},"body":{"directives/NumberDirective.html":{}}}],["only.directive.ts:9",{"_index":1567,"title":{},"body":{"directives/NumberDirective.html":{}}}],["only.module.ts",{"_index":1585,"title":{},"body":{"modules/NumbersOnlyModule.html":{}}}],["only/numbers",{"_index":1559,"title":{},"body":{"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"coverage.html":{}}}],["onright",{"_index":1801,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["ontological",{"_index":2735,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":2635,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":2327,"title":{},"body":{"changelog.html":{}}}],["ontologyterms",{"_index":143,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["ontologytreemodel",{"_index":98,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["op",{"_index":961,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["op.index",{"_index":1000,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["op.removed.includes(item",{"_index":1019,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["opacities",{"_index":2577,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":520,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{}}}],["opacitychange",{"_index":1600,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["opacityreset",{"_index":1601,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["opacityslidercomponent",{"_index":519,"title":{"components/OpacitySliderComponent.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["opacityslidermodule",{"_index":1642,"title":{"modules/OpacitySliderModule.html":{}},"body":{"modules/OpacitySliderModule.html":{},"modules.html":{},"overview.html":{}}}],["open",{"_index":488,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{}}}],["open(ctx",{"_index":757,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["openapi",{"_index":2408,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/angular",{"_index":109,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["openapi/js",{"_index":2958,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":2960,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":2959,"title":{},"body":{"index.html":{}}}],["opendialog",{"_index":680,"title":{"classes/OpenDialog.html":{}},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{},"coverage.html":{}}}],["opening",{"_index":1314,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["opens",{"_index":734,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{}}}],["operation",{"_index":964,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["operations",{"_index":940,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["operator",{"_index":1897,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["operatorfunction",{"_index":1902,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["ops",{"_index":1005,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["ops[index",{"_index":1007,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["opt",{"_index":2084,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["optimization",{"_index":2518,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":2670,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":2553,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":331,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["optional",{"_index":29,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["optioncache",{"_index":1107,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["optiondisplay",{"_index":2024,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["optiondisplay(option",{"_index":2036,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["optionid",{"_index":2025,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["optionid(_index",{"_index":2038,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["options",{"_index":30,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["options.gatoken",{"_index":80,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["optionselected",{"_index":333,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["opts",{"_index":1911,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["ordered",{"_index":938,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["organ",{"_index":523,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["organ(s",{"_index":1859,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["organ.disabled",{"_index":1779,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["organinfo",{"_index":1653,"title":{"interfaces/OrganInfo.html":{}},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["organiri",{"_index":214,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["organlist",{"_index":1794,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["organs",{"_index":1665,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["organs/anatomical",{"_index":2579,"title":{},"body":{"changelog.html":{}}}],["organschanged",{"_index":1798,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["organselectorcomponent",{"_index":522,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["organselectormodule",{"_index":1885,"title":{"modules/OrganSelectorModule.html":{}},"body":{"modules/OrganSelectorModule.html":{},"modules.html":{},"overview.html":{}}}],["orthographic",{"_index":2483,"title":{},"body":{"changelog.html":{}}}],["ot2od026671",{"_index":2972,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1218,"title":{},"body":{"injectables/GlobalsService.html":{},"interfaces/OrganInfo.html":{},"license.html":{}}}],["out",{"_index":12,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"interfaces/Segment.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{},"license.html":{},"overview.html":{}}}],["outdated",{"_index":1238,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["outline",{"_index":2047,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["output",{"_index":281,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["outputs",{"_index":563,"title":{},"body":{"components/CallToActionComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{}}}],["ovary",{"_index":1721,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["over",{"_index":2605,"title":{},"body":{"changelog.html":{}}}],["overall",{"_index":2322,"title":{},"body":{"changelog.html":{}}}],["overlapping",{"_index":927,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["overlay",{"_index":1344,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["overlays",{"_index":2726,"title":{},"body":{"changelog.html":{}}}],["overridden",{"_index":1171,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["overview",{"_index":3027,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":132,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["package",{"_index":2372,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["padding",{"_index":599,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{}}}],["pages",{"_index":2446,"title":{},"body":{"changelog.html":{}}}],["pair",{"_index":1999,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["paired",{"_index":1666,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["pairin",{"_index":1457,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["pairs",{"_index":1997,"title":{},"body":{"components/StoreDebugComponent.html":{},"miscellaneous/typealiases.html":{}}}],["pancreas",{"_index":1726,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["pane",{"_index":2542,"title":{},"body":{"changelog.html":{}}}],["panel",{"_index":1053,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/PanelData.html":{},"changelog.html":{}}}],["panelclass",{"_index":738,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{}}}],["panelcontent",{"_index":1060,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["paneldata",{"_index":1057,"title":{"interfaces/PanelData.html":{}},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"coverage.html":{}}}],["panels",{"_index":1074,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["param",{"_index":341,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{}}}],["parameters",{"_index":26,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":131,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["parent",{"_index":579,"title":{},"body":{"components/CallToActionComponent.html":{},"changelog.html":{}}}],["parse",{"_index":1072,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["parseint(itemlist.nativeelement.style.left",{"_index":1836,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["parseint(newopacity",{"_index":1628,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["parsemarkdown",{"_index":1333,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["parsemarkdown(data",{"_index":1077,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["parser",{"_index":2844,"title":{},"body":{"dependencies.html":{}}}],["partial",{"_index":270,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{}}}],["partials",{"_index":1029,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["particular",{"_index":3011,"title":{},"body":{"license.html":{}}}],["partly",{"_index":2564,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":2496,"title":{},"body":{"changelog.html":{}}}],["parts",{"_index":658,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["pass",{"_index":578,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["passed",{"_index":707,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["past",{"_index":1830,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["pastexpiration",{"_index":724,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["patchconfig",{"_index":1111,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["patchconfig(config",{"_index":1130,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["path",{"_index":686,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/GlobalConfigState.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["path.length}:${path.join",{"_index":1161,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["pelvis",{"_index":1730,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["performance",{"_index":2376,"title":{},"body":{"changelog.html":{}}}],["performs",{"_index":2246,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["permission",{"_index":2977,"title":{},"body":{"license.html":{}}}],["permit",{"_index":2997,"title":{},"body":{"license.html":{}}}],["person",{"_index":2982,"title":{},"body":{"license.html":{}}}],["persons",{"_index":2998,"title":{},"body":{"license.html":{}}}],["piece",{"_index":971,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["pipe",{"_index":222,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["pipe(map(data",{"_index":732,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["placeholder",{"_index":316,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["placement",{"_index":2637,"title":{},"body":{"changelog.html":{}}}],["placenta",{"_index":1733,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["places",{"_index":1240,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["player",{"_index":1363,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"dependencies.html":{}}}],["pluck",{"_index":1149,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["pluck(...(path",{"_index":1159,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["pluck(...keys",{"_index":1920,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["pluck(...path",{"_index":1154,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["pluckunique",{"_index":1896,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["pluckunique(...props",{"_index":1916,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["pluckunique(k1",{"_index":1912,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["pluckuniqueoptions",{"_index":1893,"title":{"interfaces/PluckUniqueOptions.html":{}},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["plugin",{"_index":2836,"title":{},"body":{"dependencies.html":{}}}],["plus",{"_index":2312,"title":{},"body":{"changelog.html":{}}}],["pointer",{"_index":612,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["points",{"_index":1538,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["points.join('_",{"_index":1539,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["policy",{"_index":1250,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["popup",{"_index":710,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["popup'},{'name",{"_index":533,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["popup.component",{"_index":2136,"title":{},"body":{"modules/TrackingPopupModule.html":{}}}],["popup.component.html",{"_index":2074,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.scss",{"_index":2073,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts",{"_index":2072,"title":{},"body":{"components/TrackingPopupComponent.html":{},"coverage.html":{}}}],["popup.component.ts:13",{"_index":2081,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:15",{"_index":2092,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:19",{"_index":2080,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:22",{"_index":2090,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:26",{"_index":2082,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:31",{"_index":2087,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.component.ts:36",{"_index":2085,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["popup.module.ts",{"_index":2135,"title":{},"body":{"modules/TrackingPopupModule.html":{}}}],["popup/tracking",{"_index":2071,"title":{},"body":{"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"coverage.html":{}}}],["popup_shown_storage_key",{"_index":684,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["popupshown",{"_index":660,"title":{},"body":{"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{}}}],["popupshown(state",{"_index":786,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["popupshownstr",{"_index":722,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["portal",{"_index":2420,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["portal's",{"_index":2662,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":3005,"title":{},"body":{"license.html":{}}}],["position",{"_index":536,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"modules/MousePositionTrackerModule.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["position.component",{"_index":2183,"title":{},"body":{"modules/XYZPositionModule.html":{}}}],["position.component.html",{"_index":2166,"title":{},"body":{"components/XYZPositionComponent.html":{}}}],["position.component.scss",{"_index":2165,"title":{},"body":{"components/XYZPositionComponent.html":{}}}],["position.component.ts",{"_index":2163,"title":{},"body":{"components/XYZPositionComponent.html":{},"coverage.html":{}}}],["position.component.ts:15",{"_index":2171,"title":{},"body":{"components/XYZPositionComponent.html":{}}}],["position.component.ts:18",{"_index":2168,"title":{},"body":{"components/XYZPositionComponent.html":{}}}],["position.component.ts:21",{"_index":2169,"title":{},"body":{"components/XYZPositionComponent.html":{}}}],["position.component.ts:24",{"_index":2170,"title":{},"body":{"components/XYZPositionComponent.html":{}}}],["position.component.ts:27",{"_index":2174,"title":{},"body":{"components/XYZPositionComponent.html":{}}}],["position.module.ts",{"_index":2182,"title":{},"body":{"modules/XYZPositionModule.html":{}}}],["position/xyz",{"_index":2162,"title":{},"body":{"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"coverage.html":{}}}],["positive",{"_index":905,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["possible",{"_index":2620,"title":{},"body":{"changelog.html":{}}}],["poup",{"_index":682,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"miscellaneous/variables.html":{}}}],["precedence",{"_index":930,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["preferences",{"_index":2468,"title":{},"body":{"changelog.html":{}}}],["prefix/suffix",{"_index":2068,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["preparation",{"_index":2709,"title":{},"body":{"changelog.html":{}}}],["present",{"_index":1479,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["presented",{"_index":2724,"title":{},"body":{"changelog.html":{}}}],["pretty",{"_index":1233,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["prevent",{"_index":1311,"title":{},"body":{"components/InfoButtonComponent.html":{},"changelog.html":{}}}],["prevents",{"_index":1829,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["preview",{"_index":2480,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":2584,"title":{},"body":{"changelog.html":{}}}],["previously",{"_index":2399,"title":{},"body":{"changelog.html":{}}}],["prevopacity",{"_index":1595,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["private",{"_index":180,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["process",{"_index":2696,"title":{},"body":{"changelog.html":{}}}],["processed",{"_index":2654,"title":{},"body":{"changelog.html":{}}}],["processing",{"_index":1059,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"changelog.html":{}}}],["produces",{"_index":2929,"title":{},"body":{"miscellaneous/functions.html":{}}}],["production",{"_index":2384,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":2366,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":462,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["projectname",{"_index":51,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["projects",{"_index":2935,"title":{},"body":{"index.html":{}}}],["projects/.../analytics.module.ts",{"_index":2914,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../api",{"_index":2910,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../call",{"_index":3042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../consent.service.ts",{"_index":3033,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../data",{"_index":3034,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../decorated",{"_index":2916,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../filter",{"_index":2911,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../flatten.ts",{"_index":2912,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../globals.service.ts",{"_index":3035,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../inner",{"_index":2915,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../local",{"_index":3040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../mouse",{"_index":2918,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../organ",{"_index":3038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../pluck",{"_index":2917,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/.../public",{"_index":3041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../store",{"_index":3036,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../text",{"_index":3039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../tracking.state.ts",{"_index":2913,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/ccf",{"_index":16,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":351,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{}}}],["properly",{"_index":1550,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["properties",{"_index":86,"title":{},"body":{"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalConfigState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["propertykey",{"_index":1128,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["props",{"_index":1910,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["props[props.length",{"_index":1917,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["prostate",{"_index":1736,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["protected",{"_index":375,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["provide",{"_index":72,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/GlobalsService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":346,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"license.html":{}}}],["providedin",{"_index":175,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/PanelData.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":18,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{}}}],["providertoken",{"_index":1433,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["providing",{"_index":324,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["public",{"_index":1348,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["publish",{"_index":2991,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":2370,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":3012,"title":{},"body":{"license.html":{}}}],["push",{"_index":992,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["pushed",{"_index":2533,"title":{},"body":{"changelog.html":{}}}],["px",{"_index":1807,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["pxratio",{"_index":2255,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["python",{"_index":2368,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["qs",{"_index":2889,"title":{},"body":{"dependencies.html":{}}}],["qualitative",{"_index":2666,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":2423,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":1672,"title":{},"body":{"interfaces/OrganInfo.html":{},"dependencies.html":{}}}],["query",{"_index":2733,"title":{},"body":{"changelog.html":{}}}],["querying",{"_index":2334,"title":{},"body":{"changelog.html":{}}}],["quickly",{"_index":2647,"title":{},"body":{"changelog.html":{}}}],["quotaexceedederror",{"_index":1481,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["r",{"_index":1123,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["r\\n\\r\\n",{"_index":1085,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["radius",{"_index":604,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["range",{"_index":164,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["range.classes",{"_index":909,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["range.start",{"_index":1036,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["range.styles",{"_index":910,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["range.ts",{"_index":887,"title":{},"body":{"interfaces/DecoratedRange.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["range[0",{"_index":169,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["range[1",{"_index":171,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["ranges",{"_index":913,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["rangetominmax",{"_index":163,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["rangetominmax(range",{"_index":2919,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rawspatialscenenode",{"_index":108,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["rawvalue",{"_index":1516,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["rawvalue.trim().tolowercase",{"_index":1518,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["rc.1",{"_index":2672,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":2891,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":2815,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":2840,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":2893,"title":{},"body":{"dependencies.html":{}}}],["reactiveformsmodule",{"_index":2059,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["read",{"_index":1062,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"interfaces/XYZTriplet.html":{}}}],["readable",{"_index":2895,"title":{},"body":{"dependencies.html":{}}}],["reading",{"_index":1076,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["readme",{"_index":687,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"miscellaneous/variables.html":{}}}],["readonly",{"_index":181,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["reads",{"_index":588,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["real",{"_index":2684,"title":{},"body":{"changelog.html":{}}}],["really",{"_index":1228,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["recalculate",{"_index":957,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["receives",{"_index":325,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["record",{"_index":58,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"miscellaneous/functions.html":{}}}],["recreatebodyui",{"_index":2295,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rectify",{"_index":2404,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":2523,"title":{},"body":{"changelog.html":{}}}],["reduction",{"_index":2348,"title":{},"body":{"changelog.html":{}}}],["reexport",{"_index":970,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"modules/TextSearchModule.html":{}}}],["reference",{"_index":1294,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["refernced",{"_index":2439,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":1633,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["regions",{"_index":2727,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":2854,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":2400,"title":{},"body":{"changelog.html":{}}}],["registration",{"_index":2431,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["registrations",{"_index":2512,"title":{},"body":{"changelog.html":{}}}],["regular",{"_index":1856,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["related",{"_index":2557,"title":{},"body":{"changelog.html":{}}}],["relative",{"_index":648,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoDialogComponent.html":{}}}],["release",{"_index":2396,"title":{},"body":{"changelog.html":{}}}],["releaseproxy",{"_index":409,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["reliability",{"_index":2595,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":2476,"title":{},"body":{"changelog.html":{}}}],["remote",{"_index":410,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["remoteapiendpoint",{"_index":92,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["removable",{"_index":1223,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["remove",{"_index":976,"title":{},"body":{"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{}}}],["remove(key",{"_index":1201,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["removed",{"_index":977,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["removeitem",{"_index":1443,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/SpatialSearchListComponent.html":{}}}],["removeitem(index",{"_index":1943,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["removeitem(key",{"_index":1453,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["removes",{"_index":1203,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageService.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["render",{"_index":2265,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rendering",{"_index":2240,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["replaced",{"_index":2931,"title":{},"body":{"miscellaneous/functions.html":{}}}],["replaysubject",{"_index":826,"title":{},"body":{"injectables/ConsentService.html":{}}}],["replaysubject(1",{"_index":824,"title":{},"body":{"injectables/ConsentService.html":{}}}],["repository",{"_index":2933,"title":{},"body":{"index.html":{}}}],["represents",{"_index":973,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["requestmethod",{"_index":130,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"miscellaneous/typealiases.html":{}}}],["requestparams",{"_index":218,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["requestparams['token",{"_index":227,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["required",{"_index":2248,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["rescinded",{"_index":828,"title":{},"body":{"injectables/ConsentService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"components/TrackingPopupComponent.html":{},"miscellaneous/typealiases.html":{}}}],["reset",{"_index":11,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{},"overview.html":{}}}],["resetopacity",{"_index":1597,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["resets",{"_index":2497,"title":{},"body":{"changelog.html":{}}}],["resetting",{"_index":1611,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["resize",{"_index":1816,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resizesensor",{"_index":1670,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resizesensor(carouselcontainer.nativeelement",{"_index":1819,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resizing",{"_index":1810,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["resolve",{"_index":902,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["resolved",{"_index":968,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["resolveindex",{"_index":2770,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["resolveindex(index",{"_index":906,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["resolveindex(range.end",{"_index":908,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["resolveindex(range.start",{"_index":907,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["resolves",{"_index":897,"title":{},"body":{"interfaces/DecoratedRange.html":{},"miscellaneous/functions.html":{}}}],["respond",{"_index":2494,"title":{},"body":{"changelog.html":{}}}],["responsetype",{"_index":731,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["responsively",{"_index":1881,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["rest",{"_index":867,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["restricting",{"_index":1561,"title":{},"body":{"directives/NumberDirective.html":{}}}],["restriction",{"_index":2987,"title":{},"body":{"license.html":{}}}],["result",{"_index":81,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.concat(range.classes",{"_index":1037,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["results",{"_index":83,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":59,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"interfaces/DataSource.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":31,"title":{},"body":{"modules/AnalyticsModule.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["reviver",{"_index":217,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["reviver(data",{"_index":230,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["rgb",{"_index":2872,"title":{},"body":{"dependencies.html":{}}}],["rgba(0",{"_index":2118,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["rgba(255",{"_index":2110,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["rhs",{"_index":1904,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["right",{"_index":602,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["rights",{"_index":2989,"title":{},"body":{"license.html":{}}}],["root",{"_index":176,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/InfoButtonService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/PanelData.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["rotates",{"_index":2478,"title":{},"body":{"changelog.html":{}}}],["rotation",{"_index":2199,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotation(value",{"_index":2201,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotationchange",{"_index":2220,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotationx",{"_index":2203,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["rotationx(value",{"_index":2205,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["round",{"_index":2582,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":2599,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":2332,"title":{},"body":{"changelog.html":{}}}],["row",{"_index":621,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["ru/common",{"_index":2802,"title":{},"body":{"dependencies.html":{}}}],["ru/common/typings",{"_index":1141,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["rui",{"_index":570,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"changelog.html":{},"index.html":{}}}],["rui_locations.jsonld",{"_index":2362,"title":{},"body":{"changelog.html":{}}}],["running",{"_index":1237,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["rxjs",{"_index":114,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"dependencies.html":{}}}],["rxjs/internal/observable",{"_index":497,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["rxjs/operators",{"_index":119,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["s.unsubscribe",{"_index":2300,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["safe",{"_index":1024,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["same",{"_index":295,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["sample",{"_index":2738,"title":{},"body":{"changelog.html":{}}}],["samples",{"_index":2525,"title":{},"body":{"changelog.html":{}}}],["saveconsent",{"_index":1497,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["saveconsent(value",{"_index":1501,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["saver",{"_index":2860,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":2699,"title":{},"body":{"changelog.html":{}}}],["scene",{"_index":2195,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["scene(nodes",{"_index":2197,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["scheduled",{"_index":2538,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":2701,"title":{},"body":{"changelog.html":{}}}],["schemes",{"_index":2667,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":2966,"title":{},"body":{"index.html":{}}}],["screen",{"_index":1343,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["scroll(dir",{"_index":1843,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["scrolled",{"_index":1833,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["scrolling",{"_index":1802,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["scrolls",{"_index":1828,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["search",{"_index":301,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{},"coverage.html":{}}}],["search'},{'name",{"_index":530,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["search.component",{"_index":2067,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["search.component.html",{"_index":307,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["search.component.scss",{"_index":309,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["search.component.ts",{"_index":261,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["search.component.ts:100",{"_index":2027,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:120",{"_index":2035,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:139",{"_index":2037,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:150",{"_index":2039,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:48",{"_index":2034,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:53",{"_index":2030,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:59",{"_index":2031,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:63",{"_index":2045,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:70",{"_index":2029,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:76",{"_index":2028,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:81",{"_index":2033,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:86",{"_index":2032,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:91",{"_index":2041,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.component.ts:96",{"_index":2042,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["search.module.ts",{"_index":2057,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["search/text",{"_index":260,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["searches",{"_index":1925,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"changelog.html":{}}}],["section",{"_index":2513,"title":{},"body":{"changelog.html":{}}}],["security",{"_index":1249,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["see",{"_index":2336,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["segment",{"_index":935,"title":{"interfaces/Segment.html":{}},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{}}}],["segment.text",{"_index":1039,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["segments",{"_index":917,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["segments.push(this.makedecoratedsegment",{"_index":998,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["select",{"_index":495,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"changelog.html":{}}}],["select(calltoactionselectors.calltoaction",{"_index":476,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["select(calltoactionselectors.imageurl",{"_index":482,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["select(calltoactionselectors.message",{"_index":489,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["select(calltoactionselectors.title",{"_index":491,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["selected",{"_index":332,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["selecteditems",{"_index":1953,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["selectedorgan",{"_index":1865,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selectedorgans",{"_index":1796,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selecting",{"_index":1781,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["selection",{"_index":1936,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["selectionchanged",{"_index":1931,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["selections",{"_index":1791,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selector",{"_index":305,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"classes/CallToActionSelectors.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["selector'},{'name",{"_index":524,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["selector(['calltoactionstate",{"_index":778,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["selector([calltoactionstate",{"_index":791,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["selector.component",{"_index":1890,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["selector.component.html",{"_index":1783,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selector.component.scss",{"_index":1784,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selector.component.ts",{"_index":1656,"title":{},"body":{"interfaces/OrganInfo.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector.module.ts",{"_index":1889,"title":{},"body":{"modules/OrganSelectorModule.html":{}}}],["selector/organ",{"_index":1655,"title":{},"body":{"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectorgan(organ",{"_index":1860,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["selects",{"_index":2717,"title":{},"body":{"changelog.html":{}}}],["selecttoken",{"_index":1427,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["selecttoken(config",{"_index":1430,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["self",{"_index":638,"title":{},"body":{"components/CallToActionComponent.html":{},"injectables/GlobalsService.html":{},"components/InfoDialogComponent.html":{}}}],["sell",{"_index":2995,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":2723,"title":{},"body":{"changelog.html":{}}}],["send",{"_index":1058,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["sends",{"_index":485,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["sennet",{"_index":2380,"title":{},"body":{"changelog.html":{}}}],["sensor",{"_index":1811,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["sent",{"_index":1075,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["server",{"_index":2704,"title":{},"body":{"changelog.html":{}}}],["service",{"_index":1296,"title":{},"body":{"components/InfoButtonComponent.html":{},"injectables/LocalStorageService.html":{},"components/TrackingPopupComponent.html":{}}}],["services/local",{"_index":677,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["set",{"_index":68,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/ConsentService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{}}}],["set(key",{"_index":1204,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["setallowtelemetry",{"_index":2139,"title":{},"body":{"injectables/TrackingState.html":{}}}],["setallowtelemetry(allowtelemetry",{"_index":2140,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["setconfig",{"_index":1112,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["setconfig(config",{"_index":1133,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["setconsent",{"_index":816,"title":{},"body":{"injectables/ConsentService.html":{}}}],["setconsent(value",{"_index":820,"title":{},"body":{"injectables/ConsentService.html":{}}}],["setinterval",{"_index":1845,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["setitem",{"_index":1444,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setitem(key",{"_index":1455,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setleftright(val",{"_index":1884,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["sets",{"_index":692,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/GlobalsService.html":{},"injectables/LocalStorageService.html":{},"interfaces/OrganInfo.html":{},"components/StoreDebugComponent.html":{}}}],["settimeout",{"_index":1385,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["setting",{"_index":1591,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["settings",{"_index":1252,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["setup",{"_index":2247,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["setupbodyui",{"_index":2266,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["setvalue(val",{"_index":2044,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["setwidth",{"_index":1882,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["sex",{"_index":145,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["sexes",{"_index":1661,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{}}}],["shadow",{"_index":2114,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["shall",{"_index":3002,"title":{},"body":{"license.html":{}}}],["shared",{"_index":2471,"title":{},"body":{"changelog.html":{}}}],["shared/analytics",{"_index":2095,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["shared/analytics/src/lib/analytics.module.ts",{"_index":17,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["shared/analytics/src/lib/analytics.module.ts:68",{"_index":25,"title":{},"body":{"modules/AnalyticsModule.html":{}}}],["shared/analytics/src/lib/consent.service.ts",{"_index":812,"title":{},"body":{"injectables/ConsentService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["shared/analytics/src/lib/consent.service.ts:10",{"_index":823,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:12",{"_index":818,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:18",{"_index":819,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:22",{"_index":821,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/consent.service.ts:29",{"_index":822,"title":{},"body":{"injectables/ConsentService.html":{}}}],["shared/analytics/src/lib/google",{"_index":1264,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"coverage.html":{}}}],["shared/analytics/src/lib/local",{"_index":1495,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/rxjs",{"_index":1147,"title":{},"body":{"injectables/GlobalConfigState.html":{},"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/analytics/mouse",{"_index":1524,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["shared/src/lib/analytics/tracking.state.ts",{"_index":2138,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/analytics/tracking.state.ts:29",{"_index":2142,"title":{},"body":{"injectables/TrackingState.html":{}}}],["shared/src/lib/components/body",{"_index":359,"title":{},"body":{"modules/BodyUiModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["shared/src/lib/components/call",{"_index":454,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"modules/CallToActionModule.html":{},"coverage.html":{}}}],["shared/src/lib/components/decorated",{"_index":886,"title":{},"body":{"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["shared/src/lib/components/info/info",{"_index":1047,"title":{},"body":{"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"interfaces/PanelData.html":{},"coverage.html":{}}}],["shared/src/lib/components/opacity",{"_index":1587,"title":{},"body":{"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"coverage.html":{}}}],["shared/src/lib/components/organ",{"_index":1654,"title":{},"body":{"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/components/spatial",{"_index":1922,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"coverage.html":{}}}],["shared/src/lib/components/store",{"_index":1976,"title":{},"body":{"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["shared/src/lib/components/text",{"_index":259,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/components/tracking",{"_index":2070,"title":{},"body":{"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"coverage.html":{}}}],["shared/src/lib/components/xyz",{"_index":2161,"title":{},"body":{"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"coverage.html":{}}}],["shared/src/lib/config/global",{"_index":1104,"title":{},"body":{"injectables/GlobalConfigState.html":{},"coverage.html":{}}}],["shared/src/lib/directives/numbers",{"_index":1558,"title":{},"body":{"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"coverage.html":{}}}],["shared/src/lib/services/data",{"_index":88,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/services/globals/globals.service.ts",{"_index":1163,"title":{},"body":{"injectables/GlobalsService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:109",{"_index":1168,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:22",{"_index":1209,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:45",{"_index":1194,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:58",{"_index":1183,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:59",{"_index":1187,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:60",{"_index":1190,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:61",{"_index":1191,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:63",{"_index":1192,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:76",{"_index":1205,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:77",{"_index":1206,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:79",{"_index":1207,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/globals/globals.service.ts:93",{"_index":1202,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["shared/src/lib/services/local",{"_index":1440,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["shared/src/lib/states/call",{"_index":654,"title":{},"body":{"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sharereplay",{"_index":415,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["sharereplay(1",{"_index":429,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/GlobalConfigState.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"interfaces/PluckUniqueOptions.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["shifing",{"_index":993,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["shift",{"_index":1806,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["shift(dir",{"_index":1834,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["shortest",{"_index":2867,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":265,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["showbutton",{"_index":2076,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["showbutton(button",{"_index":2083,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["showing",{"_index":2653,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":683,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["showpopup",{"_index":726,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["shows",{"_index":2426,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":1660,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["sides",{"_index":2629,"title":{},"body":{"changelog.html":{}}}],["signal",{"_index":1620,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["significant",{"_index":2499,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":1979,"title":{},"body":{"components/StoreDebugComponent.html":{},"changelog.html":{}}}],["simplechanges",{"_index":955,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["simplifies",{"_index":2507,"title":{},"body":{"changelog.html":{}}}],["simultaneously",{"_index":322,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["single",{"_index":263,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{},"miscellaneous/functions.html":{}}}],["sites",{"_index":2433,"title":{},"body":{"changelog.html":{}}}],["sizable",{"_index":2594,"title":{},"body":{"changelog.html":{}}}],["size",{"_index":616,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/XYZPositionComponent.html":{}}}],["skin",{"_index":1677,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["slider",{"_index":1590,"title":{},"body":{"components/OpacitySliderComponent.html":{},"dependencies.html":{}}}],["slider'},{'name",{"_index":521,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["slider.component",{"_index":1647,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["slider.component.html",{"_index":1594,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.scss",{"_index":1593,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts",{"_index":1589,"title":{},"body":{"components/OpacitySliderComponent.html":{},"coverage.html":{}}}],["slider.component.ts:17",{"_index":1613,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:22",{"_index":1604,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:27",{"_index":1605,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:32",{"_index":1607,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:37",{"_index":1612,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:42",{"_index":1609,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:44",{"_index":1624,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:46",{"_index":1617,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:54",{"_index":1618,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:63",{"_index":1615,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:71",{"_index":1621,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.component.ts:82",{"_index":1619,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["slider.module.ts",{"_index":1646,"title":{},"body":{"modules/OpacitySliderModule.html":{}}}],["slider/opacity",{"_index":1588,"title":{},"body":{"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"coverage.html":{}}}],["slightly",{"_index":1459,"title":{},"body":{"injectables/LocalStorageService.html":{},"changelog.html":{}}}],["slow",{"_index":2520,"title":{},"body":{"changelog.html":{}}}],["small",{"_index":1741,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["smaller",{"_index":1871,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["software",{"_index":2937,"title":{},"body":{"index.html":{},"license.html":{}}}],["solved",{"_index":2589,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":2645,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":2374,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":2516,"title":{},"body":{"changelog.html":{}}}],["sort",{"_index":1015,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["sort((a",{"_index":1774,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["sort((i1",{"_index":1011,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["source",{"_index":14,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"modules/BodyUiModule.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"modules/CallToActionBehaviorModule.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"modules/CallToActionModule.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"modules/InfoButtonModule.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"modules/InfoDialogModule.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"directives/NumberDirective.html":{},"modules/NumbersOnlyModule.html":{},"components/OpacitySliderComponent.html":{},"modules/OpacitySliderModule.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"modules/OrganSelectorModule.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{}}}],["source.pipe",{"_index":1919,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{}}}],["source.service.ts",{"_index":873,"title":{},"body":{"injectables/DataSourceService.html":{},"coverage.html":{}}}],["source.service.ts:12",{"_index":877,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:13",{"_index":881,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:14",{"_index":878,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:15",{"_index":880,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:16",{"_index":876,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:17",{"_index":882,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:19",{"_index":885,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:20",{"_index":874,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:21",{"_index":879,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:22",{"_index":875,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:23",{"_index":884,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.service.ts:24",{"_index":883,"title":{},"body":{"injectables/DataSourceService.html":{}}}],["source.ts",{"_index":835,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["source.ts:10",{"_index":843,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:11",{"_index":840,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:12",{"_index":842,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:13",{"_index":838,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:14",{"_index":844,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:16",{"_index":847,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:17",{"_index":836,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:18",{"_index":841,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:19",{"_index":837,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:20",{"_index":846,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:21",{"_index":845,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:36",{"_index":1095,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:40",{"_index":1099,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:44",{"_index":1096,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:48",{"_index":1098,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:52",{"_index":1094,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:56",{"_index":1100,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:60",{"_index":1103,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:64",{"_index":1092,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:68",{"_index":1097,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:72",{"_index":1093,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:76",{"_index":1102,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:80",{"_index":1101,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:84",{"_index":1091,"title":{},"body":{"classes/ForwardingDataSource.html":{}}}],["source.ts:9",{"_index":839,"title":{},"body":{"interfaces/DataSource.html":{}}}],["source.ts:91",{"_index":1046,"title":{},"body":{"classes/DelegateDataSource.html":{}}}],["source/api",{"_index":89,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["source/ccf",{"_index":369,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["source/data",{"_index":834,"title":{},"body":{"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["source/injector",{"_index":1425,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{},"coverage.html":{}}}],["sources",{"_index":2462,"title":{},"body":{"changelog.html":{}}}],["space",{"_index":1395,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["sparc",{"_index":2511,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":2331,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["spatial",{"_index":150,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{}}}],["spatial_search_readme",{"_index":690,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["spatialentity",{"_index":99,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["spatialscenenode",{"_index":100,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["spatialscenenodereviver",{"_index":211,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["spatialscenenodereviver(nodes",{"_index":2920,"title":{},"body":{"miscellaneous/functions.html":{}}}],["spatialsearch",{"_index":107,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["spatialsearchlistcomponent",{"_index":525,"title":{"components/SpatialSearchListComponent.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"modules/SpatialSearchListModule.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["spatialsearchlistitem",{"_index":1948,"title":{"interfaces/SpatialSearchListItem.html":{}},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"coverage.html":{}}}],["spatialsearchlistmodule",{"_index":1964,"title":{"modules/SpatialSearchListModule.html":{}},"body":{"modules/SpatialSearchListModule.html":{},"modules.html":{},"overview.html":{}}}],["spec",{"_index":2409,"title":{},"body":{"changelog.html":{}}}],["spec.yaml",{"_index":2957,"title":{},"body":{"index.html":{}}}],["specific",{"_index":1196,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["specification",{"_index":2956,"title":{},"body":{"index.html":{}}}],["specified",{"_index":644,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["speed",{"_index":2345,"title":{},"body":{"changelog.html":{}}}],["spinal",{"_index":1748,"title":{},"body":{"interfaces/OrganInfo.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["spinning",{"_index":2702,"title":{},"body":{"changelog.html":{}}}],["spleen",{"_index":1751,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["split",{"_index":1063,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["split.includes('\\n\\n",{"_index":1083,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["split.length",{"_index":1081,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["split.split(newline",{"_index":1087,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["splitbyheadertag",{"_index":1079,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["sprint",{"_index":2541,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":643,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":939,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stackop",{"_index":942,"title":{"interfaces/StackOp.html":{}},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{}}}],["stackops",{"_index":986,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stackops.shift",{"_index":996,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stackops[0].index",{"_index":994,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["stage",{"_index":2192,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["staging",{"_index":2385,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["staging.herokuapp.com",{"_index":2955,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":2585,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":2633,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":2706,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":2939,"title":{},"body":{"index.html":{}}}],["start",{"_index":890,"title":{},"body":{"interfaces/DecoratedRange.html":{}}}],["started",{"_index":2302,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["starts",{"_index":989,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["startup",{"_index":2506,"title":{},"body":{"changelog.html":{}}}],["startwith",{"_index":288,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["state",{"_index":665,"title":{},"body":{"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"injectables/GlobalConfigState.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/StoreDebugComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["state.calltoaction",{"_index":794,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["state.expirationdate",{"_index":796,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["state.imageurl",{"_index":795,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["state.message",{"_index":793,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["state.popupshown",{"_index":797,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["state.title",{"_index":792,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["state[0",{"_index":2013,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["statecontext",{"_index":666,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["statement",{"_index":1023,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["statements",{"_index":2745,"title":{},"body":{"coverage.html":{}}}],["staterepository",{"_index":1142,"title":{},"body":{"injectables/GlobalConfigState.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["states",{"_index":2001,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["states.map(([key",{"_index":2004,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["states/call",{"_index":499,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{}}}],["stateswithdata",{"_index":2006,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["statevalues",{"_index":2003,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["statevalues.filter(([_key",{"_index":2007,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["static",{"_index":20,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{}}}],["stay",{"_index":2742,"title":{},"body":{"changelog.html":{}}}],["step",{"_index":1808,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["still",{"_index":2528,"title":{},"body":{"changelog.html":{}}}],["stops",{"_index":1848,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["stopscroll",{"_index":1849,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["storage",{"_index":45,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage.length",{"_index":1483,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.removeitem(x",{"_index":1467,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service",{"_index":679,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["storage.service.ts",{"_index":1441,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:11",{"_index":1484,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:41",{"_index":1486,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:50",{"_index":1452,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:60",{"_index":1449,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:70",{"_index":1456,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:83",{"_index":1454,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:90",{"_index":1445,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.setitem(x",{"_index":1466,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage/local",{"_index":678,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["store",{"_index":528,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["store.subscribe(root",{"_index":2009,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["stored",{"_index":1506,"title":{},"body":{"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["storedebugcomponent",{"_index":527,"title":{"components/StoreDebugComponent.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"modules/StoreDebugModule.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["storedebugmodule",{"_index":2017,"title":{"modules/StoreDebugModule.html":{}},"body":{"modules/StoreDebugModule.html":{},"modules.html":{},"overview.html":{}}}],["stories",{"_index":2698,"title":{},"body":{"changelog.html":{}}}],["stream",{"_index":2896,"title":{},"body":{"dependencies.html":{},"miscellaneous/functions.html":{}}}],["streaming",{"_index":2894,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":49,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":1049,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/PanelData.html":{},"changelog.html":{}}}],["structures",{"_index":2543,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":451,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{}}}],["styleurls",{"_index":308,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["styling",{"_index":271,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["sub",{"_index":619,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/StoreDebugComponent.html":{}}}],["subclass",{"_index":1172,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["subject",{"_index":113,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["sublicense",{"_index":2993,"title":{},"body":{"license.html":{}}}],["submit",{"_index":2077,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["submit(entry",{"_index":2086,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["subscribe((data",{"_index":1069,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["subscription",{"_index":1275,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"modules/MousePositionTrackerModule.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{}}}],["subscriptions",{"_index":1266,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["substantial",{"_index":3004,"title":{},"body":{"license.html":{}}}],["subtitle",{"_index":1400,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["success/failure",{"_index":1458,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["suffix",{"_index":2049,"title":{},"body":{"components/TextSearchComponent.html":{}}}],["suggestion",{"_index":264,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["suggestions",{"_index":294,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["super",{"_index":417,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["support",{"_index":2326,"title":{},"body":{"changelog.html":{},"modules.html":{}}}],["svg",{"_index":1658,"title":{},"body":{"interfaces/OrganInfo.html":{},"modules.html":{}}}],["swiper",{"_index":2900,"title":{},"body":{"dependencies.html":{}}}],["switch",{"_index":1519,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["switched",{"_index":2602,"title":{},"body":{"changelog.html":{}}}],["switchmap",{"_index":116,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"components/TextSearchComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["switchmap(config",{"_index":424,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["switchmap(impl",{"_index":869,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["switchmap(this.getoptions",{"_index":338,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["symbol",{"_index":1211,"title":{},"body":{"injectables/GlobalsService.html":{},"miscellaneous/typealiases.html":{}}}],["sync",{"_index":2479,"title":{},"body":{"changelog.html":{}}}],["sync.service",{"_index":43,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["sync.service.ts",{"_index":1265,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageSyncService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sync.service.ts:10",{"_index":1276,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:11",{"_index":1270,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:15",{"_index":1503,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:16",{"_index":1498,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:25",{"_index":1271,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:29",{"_index":1273,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["sync.service.ts:32",{"_index":1500,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:36",{"_index":1499,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["sync.service.ts:52",{"_index":1502,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["t",{"_index":134,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"interfaces/PluckUniqueOptions.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["table",{"_index":2801,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":2394,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2800,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":1376,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["tag.src",{"_index":1378,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["tagging",{"_index":2631,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":1065,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["take",{"_index":117,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"components/TextSearchComponent.html":{},"changelog.html":{}}}],["take(1",{"_index":223,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["takes",{"_index":929,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["tap",{"_index":118,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["tap(([endpoint",{"_index":224,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["tap(data",{"_index":753,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["target",{"_index":2210,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["target(value",{"_index":2212,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["technologies",{"_index":149,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"changelog.html":{}}}],["technology",{"_index":2575,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":2154,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"changelog.html":{}}}],["temp",{"_index":1630,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["template",{"_index":450,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["templateurl",{"_index":306,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["test",{"_index":1230,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageService.html":{},"changelog.html":{}}}],["testing",{"_index":1180,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["tests",{"_index":1195,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["text",{"_index":300,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["text'},{'name",{"_index":514,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["text.component",{"_index":1045,"title":{},"body":{"modules/DecoratedTextModule.html":{}}}],["text.component.html",{"_index":916,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text.component.scss",{"_index":915,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text.component.ts",{"_index":911,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"coverage.html":{}}}],["text.component.ts:124",{"_index":937,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:145",{"_index":962,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:158",{"_index":943,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:173",{"_index":952,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:184",{"_index":949,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:41",{"_index":932,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:46",{"_index":931,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:52",{"_index":925,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:57",{"_index":966,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:64",{"_index":956,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.component.ts:76",{"_index":933,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["text.length",{"_index":1004,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text.module",{"_index":2066,"title":{},"body":{"modules/TextSearchModule.html":{}}}],["text.module.ts",{"_index":1044,"title":{},"body":{"modules/DecoratedTextModule.html":{}}}],["text.slice(lastindex",{"_index":999,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["text/decorated",{"_index":291,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"modules/DecoratedTextModule.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["textsearchcomponent",{"_index":312,"title":{"components/TextSearchComponent.html":{}},"body":{"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"modules/TextSearchModule.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["textsearchmodule",{"_index":2050,"title":{"modules/TextSearchModule.html":{}},"body":{"modules/TextSearchModule.html":{},"modules.html":{},"overview.html":{}}}],["theme",{"_index":2381,"title":{},"body":{"changelog.html":{}}}],["themes",{"_index":2379,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":2377,"title":{},"body":{"changelog.html":{}}}],["thick",{"_index":1769,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["this._bounds",{"_index":2214,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._camera",{"_index":2218,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._interactive",{"_index":2227,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._occurencedata",{"_index":1813,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this._rotation",{"_index":2200,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._rotationx",{"_index":2204,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._scene",{"_index":2196,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._target",{"_index":2211,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this._zoom",{"_index":2207,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.api.aggregateresults(params",{"_index":204,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.celltypetermoccurences(params",{"_index":208,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.celltypetreemodel(params",{"_index":197,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.dbstatus(params",{"_index":187,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.ontologytermoccurences(params",{"_index":206,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.ontologytreemodel(params",{"_index":195,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.providernames(params",{"_index":190,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.referenceorgans(params",{"_index":199,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.referenceorganscene(params",{"_index":213,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.scene(params",{"_index":210,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.technologynames(params",{"_index":192,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.api.tissueblocks(params",{"_index":202,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.bodycanvas",{"_index":2253,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodycanvas.nativeelement",{"_index":2254,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui",{"_index":2229,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.finalize",{"_index":2297,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodeclick$.subscribe((event",{"_index":2288,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodedrag$.subscribe((event",{"_index":2286,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodehoverstart$.subscribe((event",{"_index":2290,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.nodehoverstop$.subscribe((event",{"_index":2292,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.scenerotation$.subscribe((rotation",{"_index":2284,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.setscene(this.scene",{"_index":2278,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui.settarget(this.target",{"_index":2282,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setrotation(value",{"_index":2202,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setrotationx(value",{"_index":2206,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setscene(nodes",{"_index":2198,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.settarget(value",{"_index":2213,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bodyui?.setzoom(value",{"_index":2209,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.bounds",{"_index":2279,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.calltoactionclicked.emit",{"_index":591,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["this.camera",{"_index":2272,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.clearsubscriptions",{"_index":2296,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.closeclicked.emit",{"_index":590,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["this.config$.pipe",{"_index":1153,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.connectdatabase(manager",{"_index":426,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.consent",{"_index":831,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.complete",{"_index":830,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.next(this.consent",{"_index":829,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentchange.next(value",{"_index":832,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.consentservice.consent",{"_index":2096,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.consentservice.setconsent(entry",{"_index":2103,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.container",{"_index":2097,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.controller.setvalue(val",{"_index":319,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.controller.value",{"_index":317,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.controller.valuechanges",{"_index":336,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.createdatabase(config",{"_index":425,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.createsegments",{"_index":979,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.createstackops(decorations",{"_index":987,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.createworker(config",{"_index":441,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.ctx.patchstate",{"_index":2152,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["this.data.preclose",{"_index":2102,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.database",{"_index":419,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.defaultmaxoptions",{"_index":352,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.dialog.closeall",{"_index":749,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["this.dialog.open(calltoactionbehaviorcomponent",{"_index":758,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["this.dialog.open(infodialogcomponent",{"_index":736,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{}}}],["this.dialog.opendialogs.length",{"_index":1310,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.dialogref.close",{"_index":1386,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.dismiss",{"_index":2104,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["this.displayerrors",{"_index":1826,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.documentationcontents",{"_index":1374,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.dorequest",{"_index":194,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.dorequest(params",{"_index":186,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["this.el.nativeelement.value",{"_index":1577,"title":{},"body":{"directives/NumberDirective.html":{}}}],["this.findglobalobject",{"_index":1214,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["this.forwardcall('getaggregateresults",{"_index":861,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getcelltypetermoccurences",{"_index":863,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getcelltypetreemodel",{"_index":858,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getdatabasestatus",{"_index":854,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getdatasettechnologynames",{"_index":856,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getontologytermoccurences",{"_index":862,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getontologytreemodel",{"_index":857,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getprovidernames",{"_index":855,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getreferenceorgans",{"_index":859,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getreferenceorganscene",{"_index":865,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('getscene",{"_index":864,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.forwardcall('gettissueblockresults",{"_index":860,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.ga.event('close",{"_index":769,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["this.ga.event('open",{"_index":761,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["this.ga.event('open_learn_more",{"_index":750,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["this.getdialogdata().pipe",{"_index":752,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["this.getnormalizeddecorations",{"_index":983,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.getpathkey(path",{"_index":1155,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.http.get(spatial_search_readme",{"_index":730,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["this.http.get(url",{"_index":1068,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["this.impl",{"_index":418,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["this.impl$.pipe",{"_index":868,"title":{},"body":{"interfaces/DataSource.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{}}}],["this.infobuttonservice.updatedata(this.documentationurl",{"_index":1318,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.infoservice.parsemarkdown(data",{"_index":733,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["this.infotitle",{"_index":1320,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.initialized.emit",{"_index":2294,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.interactive",{"_index":2271,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.itemremoved.emit(item",{"_index":1958,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["this.items",{"_index":1951,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["this.launchinfodialog(data",{"_index":1309,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.launchlearnmore(data",{"_index":754,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["this.makeundecoratedsegment(text",{"_index":982,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.multiselect",{"_index":1861,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.nodeclick.emit(event",{"_index":2289,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.nodedrag.emit(event",{"_index":2287,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.nodehoverstart.emit(event",{"_index":2291,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.nodehoverstop.emit(event",{"_index":2293,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.onleft",{"_index":1837,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.onright",{"_index":1838,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.opacity",{"_index":1627,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.opacitychange.emit(this.opacity",{"_index":1629,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.opacityreset.emit",{"_index":1632,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.optioncache.get(key",{"_index":1157,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.optioncache.has(key",{"_index":1156,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.optioncache.set(key",{"_index":1160,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.organlist.length",{"_index":1874,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.organschanged.emit(this.selectedorgans",{"_index":1867,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.panelcontent.next(panelcontent",{"_index":1071,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["this.parsemarkdown(data",{"_index":1070,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["this.patchstate(config",{"_index":1152,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.prevopacity",{"_index":1626,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.recreatebodyui",{"_index":2230,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.root",{"_index":2010,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["this.rotationchange.next(rotation",{"_index":2285,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.saveconsent(consent",{"_index":1515,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.scene?.length",{"_index":2277,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.segments",{"_index":978,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.selectedorgans",{"_index":1862,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.concat([organ",{"_index":1866,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.filter((selectedorgan",{"_index":1864,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.includes(organ",{"_index":1863,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectedorgans.length",{"_index":1827,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.selectionchanged.emit(selecteditems",{"_index":1956,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["this.selecttoken(config",{"_index":1436,"title":{},"body":{"injectables/InjectorDelegateDataSourceService.html":{}}}],["this.sensor",{"_index":1818,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.sensor.detach",{"_index":1822,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.set",{"_index":1820,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.setconsent('not",{"_index":833,"title":{},"body":{"injectables/ConsentService.html":{}}}],["this.setleftright(val",{"_index":1841,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.setstate(config",{"_index":1151,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.setupbodyui",{"_index":2250,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.shift(dir",{"_index":1846,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.state$.pipe(filternulls",{"_index":1150,"title":{},"body":{"injectables/GlobalConfigState.html":{}}}],["this.step",{"_index":1839,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.storage",{"_index":1510,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.storage.getitem(popup_shown_storage_key",{"_index":723,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["this.storage.setitem(popup_shown_storage_key",{"_index":762,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["this.storage?.getitem?.(this.key",{"_index":1517,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.storage?.setitem?.(this.key",{"_index":1522,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.subscriptions",{"_index":2283,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.subscriptions.add",{"_index":1513,"title":{},"body":{"injectables/LocalStorageSyncService.html":{}}}],["this.subscriptions.add(consentservice.consentchange.subscribe",{"_index":1283,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.subscriptions.add(infobuttonservice.panelcontent.subscribe(data",{"_index":1307,"title":{},"body":{"components/InfoButtonComponent.html":{}}}],["this.subscriptions.add(sub",{"_index":2012,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["this.subscriptions.foreach(s",{"_index":2299,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.subscriptions.unsubscribe",{"_index":1285,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/LocalStorageSyncService.html":{},"components/StoreDebugComponent.html":{}}}],["this.target",{"_index":2281,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.timeouthandler",{"_index":1844,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["this.togglegoogleanalytics(consent",{"_index":1284,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.token",{"_index":1282,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.updatestack(stack",{"_index":995,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["this.valuechange",{"_index":344,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["this.videoid",{"_index":1319,"title":{},"body":{"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{}}}],["this.visibilitytoggle.emit",{"_index":1631,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.visible",{"_index":1625,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["this.window",{"_index":1286,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.window[`ga",{"_index":1287,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["this.zoom",{"_index":2264,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.zoomtobounds(this.bounds",{"_index":2280,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["this.zoomtobounds(value",{"_index":2216,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["throttletime",{"_index":1528,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["throttletime(1000",{"_index":1543,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["through",{"_index":2646,"title":{},"body":{"changelog.html":{}}}],["throws",{"_index":1221,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["thumbnails",{"_index":2552,"title":{},"body":{"changelog.html":{}}}],["thymus",{"_index":1754,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["tied",{"_index":2555,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":2655,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":296,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["timeouthandler",{"_index":1803,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["timeouts",{"_index":2355,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":2349,"title":{},"body":{"changelog.html":{}}}],["tissue",{"_index":2359,"title":{},"body":{"changelog.html":{}}}],["tissueblockresult",{"_index":101,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{}}}],["tissues",{"_index":2401,"title":{},"body":{"changelog.html":{}}}],["title",{"_index":475,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/PanelData.html":{}}}],["title(state",{"_index":788,"title":{},"body":{"classes/CallToActionSelectors.html":{}}}],["tmc",{"_index":2734,"title":{},"body":{"changelog.html":{}}}],["toattributes",{"_index":70,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["toattributes(obj",{"_index":57,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"miscellaneous/functions.html":{}}}],["today",{"_index":714,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["toggle",{"_index":1622,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["togglegoogleanalytics",{"_index":1267,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["togglegoogleanalytics(disabled",{"_index":1272,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["togglevisibility",{"_index":1598,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["token",{"_index":137,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/TextSearchComponent.html":{},"miscellaneous/variables.html":{}}}],["tool",{"_index":2586,"title":{},"body":{"changelog.html":{}}}],["top",{"_index":631,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["tort",{"_index":3021,"title":{},"body":{"license.html":{}}}],["tracker.module.ts",{"_index":1525,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["tracking",{"_index":532,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"components/XYZPositionComponent.html":{}}}],["tracking/telemetry",{"_index":2489,"title":{},"body":{"changelog.html":{}}}],["trackingcode",{"_index":1281,"title":{},"body":{"injectables/GoogleAnalyticsSyncService.html":{}}}],["trackingpopupcomponent",{"_index":531,"title":{"components/TrackingPopupComponent.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"modules/TrackingPopupModule.html":{},"components/XYZPositionComponent.html":{},"coverage.html":{},"overview.html":{}}}],["trackingpopupmodule",{"_index":2131,"title":{"modules/TrackingPopupModule.html":{}},"body":{"modules/TrackingPopupModule.html":{},"modules.html":{},"overview.html":{}}}],["trackingstate",{"_index":2137,"title":{"injectables/TrackingState.html":{}},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{}}}],["trackingstatemodel",{"_index":2143,"title":{"interfaces/TrackingStateModel.html":{}},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"coverage.html":{}}}],["trackmouseposition",{"_index":2762,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["trackmouseposition((document",{"_index":1556,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["trackmouseposition(el",{"_index":1529,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"miscellaneous/functions.html":{}}}],["transformmatrix",{"_index":173,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["transition",{"_index":609,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{}}}],["transparency",{"_index":2587,"title":{},"body":{"changelog.html":{}}}],["travisci",{"_index":2606,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":453,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"changelog.html":{}}}],["true",{"_index":74,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/GlobalsService.html":{},"injectables/LocalStorageService.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1245,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"changelog.html":{}}}],["ts",{"_index":121,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"dependencies.html":{}}}],["tslib",{"_index":2903,"title":{},"body":{"dependencies.html":{}}}],["tube",{"_index":1694,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["tuned",{"_index":2743,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":1028,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"changelog.html":{}}}],["turned",{"_index":2558,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":2556,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":2459,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":2665,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":28,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"classes/CallToActionSelectors.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/DocumentationContent.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type='[calltoaction",{"_index":811,"title":{},"body":{"classes/CloseDialog.html":{},"classes/LearnMore.html":{},"classes/OpenDialog.html":{}}}],["typealiases",{"_index":3031,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":1549,"title":{},"body":{"modules/MousePositionTrackerModule.html":{}}}],["typeerror",{"_index":1222,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["typeof",{"_index":1212,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/LocalStorageSyncService.html":{},"interfaces/PluckUniqueOptions.html":{}}}],["types",{"_index":1554,"title":{},"body":{"modules/MousePositionTrackerModule.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{}}}],["types/lru",{"_index":2841,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1256,"title":{},"body":{"injectables/GlobalsService.html":{},"modules/MousePositionTrackerModule.html":{},"interfaces/OrganInfo.html":{},"components/TrackingPopupComponent.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":2713,"title":{},"body":{"changelog.html":{}}}],["typings",{"_index":1857,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["u",{"_index":135,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["uberon",{"_index":1662,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["ufl",{"_index":2551,"title":{},"body":{"changelog.html":{}}}],["ufxmpzatowe",{"_index":743,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{}}}],["ui",{"_index":2189,"title":{},"body":{"interfaces/XYZTriplet.html":{},"changelog.html":{},"index.html":{}}}],["ui'},{'name",{"_index":509,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["ui.component",{"_index":367,"title":{},"body":{"modules/BodyUiModule.html":{}}}],["ui.component.html",{"_index":2193,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["ui.component.scss",{"_index":2194,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["ui.component.ts",{"_index":2185,"title":{},"body":{"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["ui.module.ts",{"_index":361,"title":{},"body":{"modules/BodyUiModule.html":{}}}],["ui.netlify.app",{"_index":2942,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":2952,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":2949,"title":{},"body":{"index.html":{}}}],["ui/body",{"_index":360,"title":{},"body":{"modules/BodyUiModule.html":{},"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["ui/organ",{"_index":2951,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":2950,"title":{},"body":{"index.html":{}}}],["ul",{"_index":1404,"title":{},"body":{"components/InfoDialogComponent.html":{}}}],["undefined",{"_index":76,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"injectables/LocalStorageService.html":{},"interfaces/OrganInfo.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["under",{"_index":574,"title":{},"body":{"components/CallToActionComponent.html":{},"injectables/LocalStorageSyncService.html":{},"miscellaneous/variables.html":{}}}],["understand",{"_index":2108,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["unique",{"_index":272,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{}}}],["unique.ts",{"_index":1895,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["university",{"_index":2968,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":162,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/AutoCompleteOption.html":{},"interfaces/DataSource.html":{},"interfaces/DefaultParams.html":{},"classes/DelegateDataSource.html":{},"interfaces/FilterParams.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"interfaces/OrganInfo.html":{},"interfaces/PluckUniqueOptions.html":{},"components/TextSearchComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["unless",{"_index":1236,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["unnecessary",{"_index":2475,"title":{},"body":{"changelog.html":{}}}],["unsafe",{"_index":2099,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["unselect",{"_index":2522,"title":{},"body":{"changelog.html":{}}}],["unsetconsent",{"_index":817,"title":{},"body":{"injectables/ConsentService.html":{}}}],["unsubscribable",{"_index":413,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["unsubscribe",{"_index":437,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"components/InfoButtonComponent.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["until",{"_index":2560,"title":{},"body":{"changelog.html":{}}}],["unused",{"_index":1942,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"components/TextSearchComponent.html":{}}}],["up",{"_index":1987,"title":{},"body":{"components/StoreDebugComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["update",{"_index":1066,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"changelog.html":{}}}],["updated",{"_index":1608,"title":{},"body":{"components/OpacitySliderComponent.html":{},"changelog.html":{}}}],["updatedata",{"_index":1334,"title":{},"body":{"injectables/InfoButtonService.html":{}}}],["updatedata(url",{"_index":1067,"title":{},"body":{"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"interfaces/PanelData.html":{}}}],["updateitemselection",{"_index":1929,"title":{},"body":{"components/SpatialSearchListComponent.html":{}}}],["updateitemselection(index",{"_index":1945,"title":{},"body":{"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{}}}],["updates",{"_index":1306,"title":{},"body":{"components/InfoButtonComponent.html":{},"directives/NumberDirective.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"changelog.html":{}}}],["updatestack",{"_index":924,"title":{},"body":{"components/DecoratedTextComponent.html":{}}}],["updatestack(stack",{"_index":960,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["upgraded",{"_index":2651,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":2718,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":2493,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":2583,"title":{},"body":{"changelog.html":{}}}],["ureter",{"_index":1757,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["urinary",{"_index":1762,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":1339,"title":{},"body":{"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{}}}],["us/docs/web/api/web_storage_api/using_the_web_storage_api",{"_index":1462,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["usage",{"_index":2106,"title":{},"body":{"components/TrackingPopupComponent.html":{}}}],["use",{"_index":2457,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["used",{"_index":904,"title":{},"body":{"interfaces/DecoratedRange.html":{},"interfaces/DocumentationContent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"changelog.html":{},"miscellaneous/functions.html":{}}}],["usefactory",{"_index":75,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{}}}],["useful",{"_index":1178,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["user",{"_index":696,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"changelog.html":{},"index.html":{}}}],["user/os",{"_index":2467,"title":{},"body":{"changelog.html":{}}}],["users",{"_index":2729,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":2482,"title":{},"body":{"changelog.html":{}}}],["using",{"_index":414,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["uterus",{"_index":1766,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["utilities",{"_index":2472,"title":{},"body":{"changelog.html":{}}}],["utility",{"_index":160,"title":{},"body":{"interfaces/ApiEndpointDataSourceOptions.html":{},"injectables/ApiEndpointDataSourceService.html":{},"interfaces/DefaultParams.html":{},"interfaces/FilterParams.html":{}}}],["uuid",{"_index":2904,"title":{},"body":{"dependencies.html":{}}}],["v1.1",{"_index":2395,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":2570,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":2398,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":2389,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":2357,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":2328,"title":{},"body":{"changelog.html":{}}}],["v1/sparql",{"_index":2337,"title":{},"body":{"changelog.html":{}}}],["val",{"_index":1835,"title":{},"body":{"interfaces/OrganInfo.html":{},"components/TextSearchComponent.html":{}}}],["valid",{"_index":945,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["value",{"_index":62,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"interfaces/AutoCompleteOption.html":{},"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"injectables/CallToActionState.html":{},"classes/CloseDialog.html":{},"injectables/ConsentService.html":{},"interfaces/DecoratedRange.html":{},"components/DecoratedTextComponent.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"classes/LearnMore.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"components/OpacitySliderComponent.html":{},"classes/OpenDialog.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["value(val",{"_index":318,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["value.tolowercase",{"_index":2148,"title":{},"body":{"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{}}}],["valuechange",{"_index":330,"title":{},"body":{"interfaces/AutoCompleteOption.html":{},"components/TextSearchComponent.html":{}}}],["values",{"_index":69,"title":{},"body":{"modules/AnalyticsModule.html":{},"interfaces/AnalyticsOptions.html":{},"components/DecoratedTextComponent.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/PluckUniqueOptions.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/XYZPositionComponent.html":{},"miscellaneous/functions.html":{}}}],["values.length",{"_index":2008,"title":{},"body":{"components/StoreDebugComponent.html":{}}}],["var",{"_index":507,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{}}}],["variable",{"_index":1407,"title":{},"body":{"components/InfoDialogComponent.html":{},"coverage.html":{}}}],["variables",{"_index":3037,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["vasculature",{"_index":1771,"title":{},"body":{"interfaces/OrganInfo.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":2411,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["vertical",{"_index":618,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{}}}],["very",{"_index":2642,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":2354,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":1371,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["videoid",{"_index":742,"title":{},"body":{"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"interfaces/DocumentationContent.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"interfaces/PanelData.html":{}}}],["view",{"_index":2481,"title":{},"body":{"changelog.html":{}}}],["viewchild",{"_index":1669,"title":{},"body":{"interfaces/OrganInfo.html":{},"interfaces/XYZTriplet.html":{}}}],["viewchild('bodycanvas",{"_index":2244,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["viewchild('carouselcontainer",{"_index":1785,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewchild('itemcontainer",{"_index":1789,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewchild('itemlist",{"_index":1787,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewed",{"_index":1782,"title":{},"body":{"interfaces/OrganInfo.html":{}}}],["viewer",{"_index":2545,"title":{},"body":{"changelog.html":{}}}],["viewing",{"_index":2319,"title":{},"body":{"changelog.html":{}}}],["views",{"_index":2484,"title":{},"body":{"changelog.html":{}}}],["visibility",{"_index":1623,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["visibilitytoggle",{"_index":1602,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["visible",{"_index":1599,"title":{},"body":{"components/OpacitySliderComponent.html":{}}}],["visual",{"_index":2317,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":2514,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":2652,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":585,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/ConsentService.html":{},"components/DecoratedTextComponent.html":{},"interfaces/DocumentationContent.html":{},"injectables/GlobalConfigState.html":{},"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"components/InfoButtonComponent.html":{},"injectables/InfoButtonService.html":{},"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"injectables/LocalStorageService.html":{},"injectables/LocalStorageSyncService.html":{},"directives/NumberDirective.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"interfaces/PanelData.html":{},"interfaces/Segment.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"interfaces/StackOp.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"injectables/TrackingState.html":{},"interfaces/TrackingStateModel.html":{},"interfaces/XYZTriplet.html":{}}}],["vs",{"_index":2456,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":2739,"title":{},"body":{"changelog.html":{}}}],["warming",{"_index":2353,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":2673,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":3008,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":3006,"title":{},"body":{"license.html":{}}}],["web",{"_index":1244,"title":{},"body":{"injectables/GlobalsService.html":{},"changelog.html":{}}}],["webcomponent",{"_index":2455,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":2842,"title":{},"body":{"dependencies.html":{}}}],["webpages",{"_index":2417,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":2938,"title":{},"body":{"index.html":{}}}],["week",{"_index":2744,"title":{},"body":{"changelog.html":{}}}],["weight",{"_index":1402,"title":{},"body":{"components/InfoDialogComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/XYZPositionComponent.html":{}}}],["well",{"_index":1908,"title":{},"body":{"interfaces/PluckUniqueOptions.html":{},"miscellaneous/functions.html":{}}}],["whether",{"_index":569,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"injectables/GlobalsService.html":{},"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"interfaces/SpatialSearchListItem.html":{},"license.html":{}}}],["white",{"_index":652,"title":{},"body":{"components/CallToActionComponent.html":{}}}],["whole",{"_index":2741,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":623,"title":{},"body":{"components/CallToActionComponent.html":{},"interfaces/CallToActionModel.html":{},"injectables/CallToActionState.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"interfaces/OrganInfo.html":{},"components/SpatialSearchListComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"interfaces/XYZTriplet.html":{},"changelog.html":{}}}],["window",{"_index":1242,"title":{},"body":{"injectables/GlobalsService.html":{},"injectables/GoogleAnalyticsSyncService.html":{},"interfaces/XYZTriplet.html":{}}}],["window.devicepixelratio",{"_index":2256,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["window.localstorage",{"_index":1463,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["within",{"_index":2549,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":953,"title":{},"body":{"components/DecoratedTextComponent.html":{},"changelog.html":{},"license.html":{}}}],["worker",{"_index":440,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/GlobalsService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["worker.terminate",{"_index":444,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["workerccfdatabasedatasourceservice",{"_index":438,"title":{"injectables/WorkerCCFDatabaseDataSourceService.html":{}},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"coverage.html":{}}}],["workflows",{"_index":2608,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":2403,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":2624,"title":{},"body":{"changelog.html":{}}}],["wrap",{"_index":411,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["wrap(worker",{"_index":442,"title":{},"body":{"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/CCFDatabaseManager.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{}}}],["wrapper",{"_index":606,"title":{},"body":{"components/CallToActionComponent.html":{},"components/InfoButtonComponent.html":{},"components/OpacitySliderComponent.html":{},"components/TextSearchComponent.html":{}}}],["writable",{"_index":1217,"title":{},"body":{"injectables/GlobalsService.html":{}}}],["x",{"_index":1464,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["xyz",{"_index":535,"title":{},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{}}}],["xyzpositioncomponent",{"_index":534,"title":{"components/XYZPositionComponent.html":{}},"body":{"components/CallToActionBehaviorComponent.html":{},"components/CallToActionComponent.html":{},"components/DecoratedTextComponent.html":{},"components/InfoButtonComponent.html":{},"components/InfoDialogComponent.html":{},"components/OpacitySliderComponent.html":{},"components/SpatialSearchListComponent.html":{},"components/StoreDebugComponent.html":{},"components/TextSearchComponent.html":{},"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"modules/XYZPositionModule.html":{},"coverage.html":{},"overview.html":{}}}],["xyzpositionmodule",{"_index":2178,"title":{"modules/XYZPositionModule.html":{}},"body":{"modules/XYZPositionModule.html":{},"modules.html":{},"overview.html":{}}}],["xyztriplet",{"_index":2184,"title":{"interfaces/XYZTriplet.html":{}},"body":{"interfaces/XYZTriplet.html":{},"coverage.html":{}}}],["y",{"_index":2164,"title":{},"body":{"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["yes",{"_index":242,"title":{},"body":{"injectables/ApiEndpointDataSourceService.html":{},"injectables/CCFDatabaseDataSourceBaseService.html":{},"injectables/CCFDatabaseDataSourceService.html":{},"interfaces/DataSource.html":{},"injectables/DataSourceService.html":{},"classes/DelegateDataSource.html":{},"classes/ForwardingDataSource.html":{},"injectables/GlobalsService.html":{},"injectables/InjectorDelegateDataSourceService.html":{},"injectables/LocalStorageService.html":{},"injectables/WorkerCCFDatabaseDataSourceService.html":{},"miscellaneous/functions.html":{}}}],["youtube",{"_index":1362,"title":{},"body":{"components/InfoDialogComponent.html":{},"interfaces/InfoDialogData.html":{},"changelog.html":{}}}],["youtubeplayermodule",{"_index":1421,"title":{},"body":{"modules/InfoDialogModule.html":{}}}],["z",{"_index":2125,"title":{},"body":{"components/TrackingPopupComponent.html":{},"components/XYZPositionComponent.html":{},"interfaces/XYZTriplet.html":{}}}],["zero",{"_index":990,"title":{},"body":{"components/DecoratedTextComponent.html":{},"interfaces/Segment.html":{},"interfaces/StackOp.html":{}}}],["zone.js",{"_index":2906,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":10,"title":{},"body":{"modules/AnalyticsModule.html":{},"modules/BodyUiModule.html":{},"modules/CallToActionBehaviorModule.html":{},"modules/CallToActionModule.html":{},"modules/DecoratedTextModule.html":{},"modules/InfoButtonModule.html":{},"modules/InfoDialogModule.html":{},"modules/NumbersOnlyModule.html":{},"modules/OpacitySliderModule.html":{},"modules/OrganSelectorModule.html":{},"modules/SpatialSearchListModule.html":{},"modules/StoreDebugModule.html":{},"modules/TextSearchModule.html":{},"modules/TrackingPopupModule.html":{},"modules/XYZPositionModule.html":{},"interfaces/XYZTriplet.html":{},"overview.html":{}}}],["zoom(value",{"_index":2208,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}],["zoomtobounds(bounds",{"_index":2251,"title":{},"body":{"interfaces/XYZTriplet.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AnalyticsModule.html":{"url":"modules/AnalyticsModule.html","title":"module - AnalyticsModule","body":"\n                   \n\n\n\n\n    Modules\n    AnalyticsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AnalyticsModule\n\n\n\ncluster_AnalyticsModule_providers\n\n\n\n\nConsentService\n\nConsentService\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAnalyticsModule -->\n\nConsentService->AnalyticsModule\n\n\n\n\n\nGoogleAnalyticsSyncService\n\nGoogleAnalyticsSyncService\n\nAnalyticsModule -->\n\nGoogleAnalyticsSyncService->AnalyticsModule\n\n\n\n\n\nLocalStorageSyncService\n\nLocalStorageSyncService\n\nAnalyticsModule -->\n\nLocalStorageSyncService->AnalyticsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/analytics.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConsentService\n                        \n                        \n                            GoogleAnalyticsSyncService\n                        \n                        \n                            LocalStorageSyncService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(options: AnalyticsOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/analytics.module.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                AnalyticsOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { IGoogleAnalyticsCommand, NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\nimport { ConsentService } from './consent.service';\nimport { GoogleAnalyticsSyncService } from './google-analytics-sync.service';\nimport { LocalStorageSyncService } from './local-storage-sync.service';\n\n\nexport interface AnalyticsOptions {\n  gaToken: string;\n\n  appName?: string;\n  projectName?: string;\n\n  developmentMode?: boolean;\n}\n\n\nconst EAGERLY_LOADED_SERVICES = [\n  ConsentService,\n  GoogleAnalyticsSyncService,\n  LocalStorageSyncService,\n];\n\n\nfunction toAttributes(obj: Record): Record {\n  return Object.entries(obj).reduce>((attrs, [key, value]) => {\n    if (value != null) {\n      attrs[key] = `${value}`;\n    }\n\n    return attrs;\n  }, {});\n}\n\nfunction initCommands(options: AnalyticsOptions): IGoogleAnalyticsCommand[] {\n  const { appName, projectName, developmentMode } = options;\n\n  return [\n    {\n      command: 'set',\n      values: [toAttributes({\n        appName,\n        projectName,\n        developmentMode\n      })]\n    }\n  ];\n}\n\n\n@NgModule({\n  imports: [\n    NgxGoogleAnalyticsModule\n  ],\n  providers: [\n    ...EAGERLY_LOADED_SERVICES,\n\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: () => () => undefined,\n      deps: EAGERLY_LOADED_SERVICES\n    }\n  ]\n})\nexport class AnalyticsModule {\n  static forRoot(options: AnalyticsOptions): ModuleWithProviders {\n    const { providers = [] } = NgxGoogleAnalyticsModule.forRoot(\n      options.gaToken,\n      initCommands(options)\n    );\n\n    return { ngModule: AnalyticsModule, providers };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AnalyticsOptions.html":{"url":"interfaces/AnalyticsOptions.html","title":"interface - AnalyticsOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AnalyticsOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/analytics.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            appName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            developmentMode\n                                        \n                                \n                                \n                                        \n                                            gaToken\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            projectName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        appName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        appName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        developmentMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        developmentMode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gaToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gaToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        projectName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        projectName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { APP_INITIALIZER, ModuleWithProviders, NgModule } from '@angular/core';\nimport { IGoogleAnalyticsCommand, NgxGoogleAnalyticsModule } from 'ngx-google-analytics';\n\nimport { ConsentService } from './consent.service';\nimport { GoogleAnalyticsSyncService } from './google-analytics-sync.service';\nimport { LocalStorageSyncService } from './local-storage-sync.service';\n\n\nexport interface AnalyticsOptions {\n  gaToken: string;\n\n  appName?: string;\n  projectName?: string;\n\n  developmentMode?: boolean;\n}\n\n\nconst EAGERLY_LOADED_SERVICES = [\n  ConsentService,\n  GoogleAnalyticsSyncService,\n  LocalStorageSyncService,\n];\n\n\nfunction toAttributes(obj: Record): Record {\n  return Object.entries(obj).reduce>((attrs, [key, value]) => {\n    if (value != null) {\n      attrs[key] = `${value}`;\n    }\n\n    return attrs;\n  }, {});\n}\n\nfunction initCommands(options: AnalyticsOptions): IGoogleAnalyticsCommand[] {\n  const { appName, projectName, developmentMode } = options;\n\n  return [\n    {\n      command: 'set',\n      values: [toAttributes({\n        appName,\n        projectName,\n        developmentMode\n      })]\n    }\n  ];\n}\n\n\n@NgModule({\n  imports: [\n    NgxGoogleAnalyticsModule\n  ],\n  providers: [\n    ...EAGERLY_LOADED_SERVICES,\n\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: () => () => undefined,\n      deps: EAGERLY_LOADED_SERVICES\n    }\n  ]\n})\nexport class AnalyticsModule {\n  static forRoot(options: AnalyticsOptions): ModuleWithProviders {\n    const { providers = [] } = NgxGoogleAnalyticsModule.forRoot(\n      options.gaToken,\n      initCommands(options)\n    );\n\n    return { ngModule: AnalyticsModule, providers };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ApiEndpointDataSourceOptions.html":{"url":"interfaces/ApiEndpointDataSourceOptions.html","title":"interface - ApiEndpointDataSourceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ApiEndpointDataSourceOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hubmapToken\n                                        \n                                \n                                \n                                        \n                                            remoteApiEndpoint\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hubmapToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hubmapToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        remoteApiEndpoint\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        remoteApiEndpoint:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSearch, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n  spatial?: SpatialSearch[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return combineLatest([\n      globalConfig.getOption('remoteApiEndpoint'),\n      globalConfig.getOption('hubmapToken')\n    ]).pipe(\n      take(1),\n      tap(([endpoint, token]) => {\n        api.configuration.basePath = endpoint;\n        if (token) {\n          requestParams['token'] = token;\n        }\n      }),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiEndpointDataSourceService.html":{"url":"injectables/ApiEndpointDataSourceService.html","title":"injectable - ApiEndpointDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ApiEndpointDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                doRequest\n                            \n                            \n                                    Private\n                                doRequest\n                            \n                            \n                                    Private\n                                doRequest\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(api: DefaultService, globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:96\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                    DefaultService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        doRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    doRequest(method: RequestMethod, filter?: Filter | undefined, params?: P)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:190\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                RequestMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter | undefined\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            P\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        doRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    doRequest(method: RequestMethod, filter: Filter | undefined, params: P | undefined, reviver: DataReviver)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:195\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        P\n                        U\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                RequestMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            P | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviver\n                                    \n                                                DataReviver\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        doRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    doRequest(method: RequestMethod, filter: Filter | undefined, params?: P, reviver?: DataReviver)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:201\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        P\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                RequestMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            P\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    reviver\n                                    \n                                                DataReviver\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:167\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:159\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_NO_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:175\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Cacheable(CACHE_CONFIG_PARAMS)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSearch, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n  spatial?: SpatialSearch[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return combineLatest([\n      globalConfig.getOption('remoteApiEndpoint'),\n      globalConfig.getOption('hubmapToken')\n    ]).pipe(\n      take(1),\n      tap(([endpoint, token]) => {\n        api.configuration.basePath = endpoint;\n        if (token) {\n          requestParams['token'] = token;\n        }\n      }),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AutoCompleteOption.html":{"url":"interfaces/AutoCompleteOption.html","title":"interface - AutoCompleteOption","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AutoCompleteOption\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n        \n\n\n            \n                Description\n            \n            \n                A single suggestion to show in autocomplete\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            decorations\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        decorations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decorations:         Partial[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Partial[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional styling of the label\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                            \n                                \n                                    A unique id\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The displayed label\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Inject, InjectionToken, Input, Output,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { bind as Bind } from 'bind-decorator';\nimport { from, Observable, ObservableInput } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, switchMap, take } from 'rxjs/operators';\n\nimport { DecoratedRange } from '../decorated-text/decorated-range';\n\n\n/** A single suggestion to show in autocomplete  */\nexport interface AutoCompleteOption {\n  /** A unique id */\n  id: unknown;\n  /** The displayed label */\n  label: string;\n  /** Optional styling of the label */\n  decorations?: Partial[];\n}\n\n/**\n * Token to provide a default for the maximum number of\n * autocomplete suggestions to show at the same time.\n */\nexport const DEFAULT_MAX_OPTIONS = new InjectionToken(\n  'Maximum number of autocomplete options displayed',\n  {\n    providedIn: 'root',\n    factory(): number {\n      return 10;\n    }\n  }\n);\n\n\n/**\n * A text search bar with optional autocompletion functionality.\n */\n@Component({\n  selector: 'ccf-text-search',\n  templateUrl: './text-search.component.html',\n  styleUrls: ['./text-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TextSearchComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-text-search';\n\n  /**\n   * Placeholder text for the search bar\n   */\n  @Input() placeholder = 'Search...';\n\n  /**\n   * The text to show on the search bar\n   */\n  @Input()\n  get value(): string {\n    return this.controller.value as string;\n  }\n\n  set value(val: string) {\n    this.controller.setValue(val, { emitEvent: false });\n  }\n\n  /**\n   * Maximum number of autocomplete suggestions to show simultaneously\n   */\n  @Input() maxOptions?: number;\n\n  /**\n   * Function providing the autocomplete suggestions.\n   * Receives the latest search bar text and the maximum of suggestions to provide.\n   */\n  @Input() autoCompleter?: (search: string, max: number) => ObservableInput;\n\n  /**\n   * Emits when the search bar text changes\n   */\n  @Output() readonly valueChange: Observable;\n\n  /**\n   * Emits when an autocomplete option has been selected\n   */\n  @Output() readonly optionSelected = new EventEmitter();\n\n  /**\n   * Form controller for search bar\n   */\n  readonly controller = new FormControl();\n\n  /**\n   * Emits the latest autocomplete suggestions\n   */\n  readonly options = (this.controller.valueChanges as Observable).pipe(\n    startWith(''),\n    distinctUntilChanged(),\n    switchMap(this.getOptions)\n  );\n\n  /**\n   * Creates an instance of text search component.\n   *\n   * @param defaultMaxOptions The default value for `maxOptions`\n   */\n  constructor(\n    @Inject(DEFAULT_MAX_OPTIONS) private readonly defaultMaxOptions: number\n  ) {\n    this.valueChange = this.controller.valueChanges;\n  }\n\n  /**\n   * Fetches the latest autocomplete suggestions for the provided search text.\n   *\n   * @param search The search text to find suggestions for\n   * @returns The found suggestions\n   */\n  @Bind\n  private async getOptions(search: string): Promise {\n    const { autoCompleter, maxOptions = this.defaultMaxOptions } = this;\n    if (!autoCompleter || maxOptions  array.length \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BodyUiModule.html":{"url":"modules/BodyUiModule.html","title":"module - BodyUiModule","body":"\n                   \n\n\n\n\n    Modules\n    BodyUiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BodyUiModule\n\n\n\ncluster_BodyUiModule_declarations\n\n\n\ncluster_BodyUiModule_exports\n\n\n\n\nBodyUiComponent\n\nBodyUiComponent\n\n\n\nBodyUiModule\n\nBodyUiModule\n\nBodyUiModule -->\n\nBodyUiComponent->BodyUiModule\n\n\n\n\n\nBodyUiComponent \n\nBodyUiComponent \n\nBodyUiComponent  -->\n\nBodyUiModule->BodyUiComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/body-ui/body-ui.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BodyUiComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BodyUiComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BodyUiComponent } from './body-ui.component';\n\n@NgModule({\n  declarations: [BodyUiComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [BodyUiComponent]\n})\nexport class BodyUiModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CCFDatabaseDataSourceBaseService.html":{"url":"injectables/CCFDatabaseDataSourceBaseService.html","title":"injectable - CCFDatabaseDataSourceBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CCFDatabaseDataSourceBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DelegateDataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                database$\n                            \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                connectDatabase\n                            \n                            \n                                    Protected\n                                    Abstract\n                                createDatabase\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globalConfig: GlobalConfigState)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        connectDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectDatabase(manager: CCFDatabaseManager, config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    manager\n                                    \n                                                CCFDatabaseManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        createDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDatabase(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CCFDatabaseManager\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        database$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CCFDatabaseDataSourceService.html":{"url":"injectables/CCFDatabaseDataSourceService.html","title":"injectable - CCFDatabaseDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CCFDatabaseDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CCFDatabaseDataSourceBaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                database$\n                            \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createDatabase\n                            \n                            \n                                    Private\n                                    Async\n                                connectDatabase\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDatabase(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:53\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CCFDatabaseManager\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        connectDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectDatabase(manager: CCFDatabaseManager, config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    manager\n                                    \n                                                CCFDatabaseManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        database$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         CCFDatabaseDataSourceBaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         CCFDatabaseDataSourceBaseService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CCFDatabaseManager.html":{"url":"interfaces/CCFDatabaseManager.html","title":"interface - CCFDatabaseManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CCFDatabaseManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Unsubscribable\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            database\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        database:     CCFDatabase | Remote\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CCFDatabase | Remote\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CallToActionBehaviorComponent.html":{"url":"components/CallToActionBehaviorComponent.html","title":"component - CallToActionBehaviorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CallToActionBehaviorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.component.ts\n\n\n\n    \n        Description\n    \n    \n        Info button component: Information icon displays project details when clicked.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-call-to-action-behavior\n            \n\n            \n                styleUrls\n                ./call-to-action-behavior.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./call-to-action-behavior.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                callToAction$\n                            \n                            \n                                    Readonly\n                                close\n                            \n                            \n                                    Readonly\n                                imageUrl$\n                            \n                            \n                                    Readonly\n                                learnMore\n                            \n                            \n                                    Readonly\n                                message$\n                            \n                            \n                                    Readonly\n                                title$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        callToAction$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(CallToActionSelectors.callToAction)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        close\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Dispatch()\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.component.ts:36\n                        \n                    \n\n            \n                \n                    Closees dialog\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        imageUrl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(CallToActionSelectors.imageUrl)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        learnMore\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Dispatch()\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.component.ts:43\n                        \n                    \n\n            \n                \n                    Sends learn more open action\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        message$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(CallToActionSelectors.message)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        title$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Select(CallToActionSelectors.title)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Dispatch } from '@ngxs-labs/dispatch-decorator';\nimport { Select } from '@ngxs/store';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { CloseDialog, LearnMore } from '../../states/call-to-action/call-to-action.actions';\nimport { CallToActionSelectors } from '../../states/call-to-action/call-to-action.selectors';\n\n/**\n * Info button component: Information icon displays project details when clicked.\n */\n@Component({\n  selector: 'ccf-call-to-action-behavior',\n  templateUrl: './call-to-action-behavior.component.html',\n  styleUrls: ['./call-to-action-behavior.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CallToActionBehaviorComponent {\n  @Select(CallToActionSelectors.title)\n  readonly title$: Observable;\n\n  @Select(CallToActionSelectors.message)\n  readonly message$: Observable;\n\n  @Select(CallToActionSelectors.callToAction)\n  readonly callToAction$: Observable;\n\n  @Select(CallToActionSelectors.imageUrl)\n  readonly imageUrl$: Observable;\n\n\n\n  /**\n   * Closees dialog\n   */\n  @Dispatch()\n  readonly close = (): CloseDialog => new CloseDialog();\n\n  /**\n   * Sends learn more open action\n   * @returns LearnMore action\n   */\n  @Dispatch()\n  readonly learnMore = (): LearnMore => new LearnMore();\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./call-to-action-behavior.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CallToActionBehaviorComponent', 'selector': 'ccf-call-to-action-behavior'},{'name': 'CallToActionComponent', 'selector': 'ccf-call-to-action'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'},{'name': 'XYZPositionComponent', 'selector': 'ccf-xyz-position'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'CallToActionBehaviorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CallToActionBehaviorModule.html":{"url":"modules/CallToActionBehaviorModule.html","title":"module - CallToActionBehaviorModule","body":"\n                   \n\n\n\n\n    Modules\n    CallToActionBehaviorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CallToActionBehaviorModule\n\n\n\ncluster_CallToActionBehaviorModule_declarations\n\n\n\ncluster_CallToActionBehaviorModule_imports\n\n\n\ncluster_CallToActionBehaviorModule_exports\n\n\n\n\nCallToActionBehaviorComponent\n\nCallToActionBehaviorComponent\n\n\n\nCallToActionBehaviorModule\n\nCallToActionBehaviorModule\n\nCallToActionBehaviorModule -->\n\nCallToActionBehaviorComponent->CallToActionBehaviorModule\n\n\n\n\n\nCallToActionBehaviorComponent \n\nCallToActionBehaviorComponent \n\nCallToActionBehaviorComponent  -->\n\nCallToActionBehaviorModule->CallToActionBehaviorComponent \n\n\n\n\n\nCallToActionModule\n\nCallToActionModule\n\nCallToActionBehaviorModule -->\n\nCallToActionModule->CallToActionBehaviorModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CallToActionBehaviorComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CallToActionModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CallToActionBehaviorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatCardModule } from '@angular/material/card';\nimport { CallToActionBehaviorComponent } from './call-to-action-behavior.component';\nimport { CallToActionModule } from '../call-to-action/call-to-action.module';\nimport { NgxsModule } from '@ngxs/store';\n\n@NgModule({\n  declarations: [CallToActionBehaviorComponent],\n  imports: [CommonModule, NgxsModule, MatIconModule, MatDialogModule, MatCardModule, CallToActionModule],\n  exports: [CallToActionBehaviorComponent]\n})\nexport class CallToActionBehaviorModule {}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CallToActionComponent.html":{"url":"components/CallToActionComponent.html","title":"component - CallToActionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CallToActionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts\n\n\n\n    \n        Description\n    \n    \n        Info button component: Information icon displays project details when clicked.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-call-to-action\n            \n\n            \n                styleUrls\n                ./call-to-action.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./call-to-action.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                onDialogButtonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                callToAction\n                            \n                            \n                                imageUrl\n                            \n                            \n                                infoTitle\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                callToActionClicked\n                            \n                            \n                                closeClicked\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        callToAction\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts:33\n                            \n                        \n                \n                    \n                        Label for the button\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        imageUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts:23\n                            \n                        \n                \n                    \n                        Whether the information is for the RUI or EUI\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        infoTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts:18\n                            \n                        \n                \n                    \n                        Title of the info dialog\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        message\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts:28\n                            \n                        \n                \n                    \n                        Message to be displayed under image\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        callToActionClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts:39\n                            \n                        \n                \n                    \n                         Emmitter for component to pass info to parent\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        closeClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts:45\n                            \n                        \n                \n                    \n                         Emmitter for component to pass info to parent\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-call-to-action\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-call-to-action'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts:14\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts:53\n                \n            \n\n\n            \n                \n                    Function to handle the close button click action\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDialogButtonClick\n                        \n                    \n                \n            \n            \n                \nonDialogButtonClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts:61\n                \n            \n\n\n            \n                \n                    Detects button click and reads markdown function\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-call-to-action'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts:14\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, HostBinding } from '@angular/core';\n\n/**\n * Info button component: Information icon displays project details when clicked.\n */\n@Component({\n  selector: 'ccf-call-to-action',\n  templateUrl: './call-to-action.component.html',\n  styleUrls: ['./call-to-action.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CallToActionComponent {\n  /**HTML class */\n  @HostBinding('class') readonly clsName = 'ccf-call-to-action';\n  /**\n   * Title of the info dialog\n   */\n  @Input() infoTitle: string;\n\n  /**\n   * Whether the information is for the RUI or EUI\n   */\n  @Input() imageUrl: string;\n\n  /**\n   * Message to be displayed under image\n   */\n  @Input() message: string;\n\n  /**\n   * Label for the button\n   */\n  @Input() callToAction: string;\n\n\n  /**\n  *  Emmitter for component to pass info to parent\n  * */\n  @Output() readonly callToActionClicked = new EventEmitter();\n\n\n  /**\n  *  Emmitter for component to pass info to parent\n  * */\n  @Output() readonly closeClicked = new EventEmitter();\n\n\n\n\n  /**\n   * Function to handle the close button click action\n   */\n  close(): void {\n    this.closeClicked.emit();\n  }\n\n\n  /**\n   * Detects button click and reads markdown function\n   */\n  onDialogButtonClick(): void {\n    this.callToActionClicked.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{infoTitle}}\n        clear\n      \n      \n      \n      \n         {{message}}\n         \n      \n    \n  \n\n    \n\n    \n                \n                    ./call-to-action.component.scss\n                \n                :host{\n  .content{\n    display: block;\n    align-content: center;\n    padding-left: 1.6rem;\n    padding-right: 1.6rem;\n    border-radius: .25rem;\n  }\n\n  .info-button-wrapper {\n    border-radius: 0.25rem;\n    padding: 0.60rem;\n    transition: 0.6s;\n\n    .ccf-info-button {\n      cursor: pointer;\n      transition: color .6s;\n      font-size: 1.2rem;\n      vertical-align: sub;\n    }\n  }\n\n  .first-row {\n    display: flex;\n    width: 100%;\n    line-height: .9rem;\n    .title {\n      padding-right: 7.0rem;\n      padding-left: .2rem;\n      font-size: .875rem;\n      padding-top: .75rem;\n    }\n\n    .cta-mat-icon {\n      height: 30%;\n      line-height: 3.4rem;\n    }\n\n  }\n\n  .message{\n    padding: .5rem;\n  }\n\n  .cta-image {\n    align-self: center;\n    object-fit: cover; /*this makes the image in src fit to the size specified below*/\n    width: 100%;\n    border-radius: .25rem;\n  }\n\n  .mat-button {\n    background-color: #444A65;\n    font-size: .75rem;\n    position: relative;\n    margin-bottom: 1rem;\n    width: 100%;\n    height: 2rem;\n  \n    color: white;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{infoTitle}}        clear                                 {{message}}                     '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CallToActionBehaviorComponent', 'selector': 'ccf-call-to-action-behavior'},{'name': 'CallToActionComponent', 'selector': 'ccf-call-to-action'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'},{'name': 'XYZPositionComponent', 'selector': 'ccf-xyz-position'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'CallToActionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CallToActionModel.html":{"url":"interfaces/CallToActionModel.html","title":"interface - CallToActionModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CallToActionModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Interface to hold the necessary parts of the CTA dialog\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callToAction\n                                        \n                                \n                                \n                                        \n                                            expirationDate\n                                        \n                                \n                                \n                                        \n                                            imageUrl\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            popupShown\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callToAction\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callToAction:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expirationDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        expirationDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        imageUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        imageUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        popupShown\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        popupShown:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Action, NgxsOnInit, State, StateContext } from '@ngxs/store';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { CallToActionBehaviorComponent } from '../../components/call-to-action-behavior/call-to-action-behavior.component';\nimport { DocumentationContent, InfoButtonService } from '../../components/info/info-button/info-button.service';\nimport { InfoDialogComponent } from '../../components/info/info-dialog/info-dialog.component';\nimport { LocalStorageService } from '../../services/local-storage/local-storage.service';\nimport { CloseDialog, LearnMore, OpenDialog } from './call-to-action.actions';\n\n/**\n * Interface to hold the necessary parts of the CTA dialog\n */\nexport interface CallToActionModel {\n  title: string;\n  message: string;\n  callToAction: string;\n  imageUrl: string;\n  expirationDate: string;\n  popupShown: boolean;\n\n}\n\n/**\n * Key for boolean determining if poup has been shown\n */\nconst POPUP_SHOWN_STORAGE_KEY = 'callToActionPopupShown';\n\n/**\n * Path to readme markup doc\n */\nconst SPATIAL_SEARCH_README = 'assets/docs/SPATIAL_SEARCH_README.md';\n\n/**\n * Sets the necessary defaults for the dialog box\n */\n@State({\n  name: 'callToAction',\n  defaults: {\n    title: 'New to the Exploration User Interface',\n    message: 'Spatial Search has arrived!',\n    callToAction: 'Learn More',\n    imageUrl: 'assets/images/spatial_search.gif',\n    expirationDate: 'Dec 1, 2022',\n    popupShown: false\n  }\n})\n\n\n/**\n * State that controls the data and behavior for the CallToAction Component\n */\n@Injectable()\nexport class CallToActionState implements NgxsOnInit {\n  /**\n   * Function that determines if expiration date has passed\n   * @param expirationDate\n   * @param now\n   * @returns boolean defining whether or not info popup has expiered\n   */\n  static ctaDatePassed(expirationDate: string, now = Date.now): boolean {\n    const today = now();\n    const expire = new Date(expirationDate);\n\n    return +today > +expire;\n  }\n\n  constructor(\n    private readonly dialog: MatDialog,\n    private readonly ga: GoogleAnalyticsService,\n    private readonly storage: LocalStorageService,\n    private readonly infoService: InfoButtonService,\n    private readonly http: HttpClient\n  ) { }\n\n\n  ngxsOnInit(ctx: StateContext): void {\n    const { expirationDate, popupShown } = ctx.getState();\n    const popupShownStr = this.storage.getItem(POPUP_SHOWN_STORAGE_KEY, `${popupShown}`);\n    const pastExpiration = CallToActionState.ctaDatePassed(expirationDate);\n    const showPopup = popupShownStr !== 'true' && !pastExpiration;\n    if (showPopup) {\n      ctx.dispatch(new OpenDialog());\n    }\n  }\n\n  /**\n   * Returns observable containting info from the markup\n   */\n  private getDialogData(): Observable{\n    return this.http.get(SPATIAL_SEARCH_README, { responseType: 'text' }).pipe(map(data =>\n      this.infoService.parseMarkdown(data)\n    ));\n  }\n\n  /**\n   * Opens Learn more dialog\n   */\n  launchLearnMore(content: DocumentationContent[]): void{\n    this.dialog.open(InfoDialogComponent, {\n      autoFocus: false,\n      panelClass: 'modal-animated',\n      width: '72rem',\n      data: {\n        title: 'Spatial Search',\n        content: content,\n        videoID: 'UfxMpzatowE'\n      }\n    });\n  }\n\n  /**\n   * Handles click event box\n   * @param _ctx\n   */\n  @Action(LearnMore)\n  learnMore(_ctx: StateContext): Observable {\n    this.dialog.closeAll();\n    this.ga.event('open_learn_more', 'call_to_action');\n\n    return this.getDialogData().pipe(\n      tap(data => this.launchLearnMore(data))\n    );\n  }\n\n  /**\n   * Opens dialog box\n   * @param ctx\n   */\n  @Action(OpenDialog)\n  open(ctx: StateContext): void {\n    this.dialog.open(CallToActionBehaviorComponent, {\n      autoFocus: false,\n      panelClass: 'modal-animated',\n      width: '30.75rem',\n      height: '36.688rem'\n    });\n\n    this.ga.event('open', 'call_to_action');\n    this.storage.setItem(POPUP_SHOWN_STORAGE_KEY, 'true');\n    ctx.patchState({ popupShown: true });\n  }\n\n  /**\n   * closes all dialog boxes\n   * @param _ctxs;\n   */\n  @Action(CloseDialog)\n  close(_ctx: StateContext): void {\n    this.dialog.closeAll();\n    this.ga.event('close', 'call_to_action');\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CallToActionModule.html":{"url":"modules/CallToActionModule.html","title":"module - CallToActionModule","body":"\n                   \n\n\n\n\n    Modules\n    CallToActionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CallToActionModule\n\n\n\ncluster_CallToActionModule_declarations\n\n\n\ncluster_CallToActionModule_exports\n\n\n\n\nCallToActionComponent\n\nCallToActionComponent\n\n\n\nCallToActionModule\n\nCallToActionModule\n\nCallToActionModule -->\n\nCallToActionComponent->CallToActionModule\n\n\n\n\n\nCallToActionComponent \n\nCallToActionComponent \n\nCallToActionComponent  -->\n\nCallToActionModule->CallToActionComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/call-to-action/call-to-action.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CallToActionComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CallToActionComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { CallToActionComponent } from './call-to-action.component';\n\n@NgModule({\n  declarations: [CallToActionComponent],\n  imports: [CommonModule, MatIconModule, MatDialogModule, MatCardModule],\n  exports: [CallToActionComponent]\n})\nexport class CallToActionModule {}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CallToActionSelectors.html":{"url":"classes/CallToActionSelectors.html","title":"class - CallToActionSelectors","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CallToActionSelectors\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/states/call-to-action/call-to-action.selectors.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                callToAction\n                            \n                            \n                                    Static\n                                expirationDate\n                            \n                            \n                                    Static\n                                imageUrl\n                            \n                            \n                                    Static\n                                message\n                            \n                            \n                                    Static\n                                popupShown\n                            \n                            \n                                    Static\n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        callToAction\n                        \n                    \n                \n            \n            \n                \n                    \n                    callToAction(state: CallToActionModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CallToActionState'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.selectors.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CallToActionModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        expirationDate\n                        \n                    \n                \n            \n            \n                \n                    \n                    expirationDate(state: CallToActionModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CallToActionState'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.selectors.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CallToActionModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        imageUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    imageUrl(state: CallToActionModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CallToActionState'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.selectors.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CallToActionModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        message\n                        \n                    \n                \n            \n            \n                \n                    \n                    message(state: CallToActionModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CallToActionState'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.selectors.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CallToActionModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        popupShown\n                        \n                    \n                \n            \n            \n                \n                    \n                    popupShown(state: CallToActionModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CallToActionState'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.selectors.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CallToActionModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        title\n                        \n                    \n                \n            \n            \n                \n                    \n                    title(state: CallToActionModel)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Selector(['CallToActionState'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.selectors.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                CallToActionModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Selector } from '@ngxs/store';\n\nimport { CallToActionModel, CallToActionState } from './call-to-action.state';\n\nexport class CallToActionSelectors {\n  @Selector([CallToActionState])\n  static title(state: CallToActionModel): string {\n    return state.title;\n  }\n\n  @Selector([CallToActionState])\n  static message(state: CallToActionModel): string {\n    return state.message;\n  }\n\n  @Selector([CallToActionState])\n  static callToAction(state: CallToActionModel): string {\n    return state.callToAction;\n  }\n\n  @Selector([CallToActionState])\n  static imageUrl(state: CallToActionModel): string {\n    return state.imageUrl;\n  }\n\n  @Selector([CallToActionState])\n  static expirationDate(state: CallToActionModel): string {\n    return state.expirationDate;\n  }\n\n  @Selector([CallToActionState])\n  static popupShown(state: CallToActionModel): boolean {\n    return state.popupShown;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CallToActionState.html":{"url":"injectables/CallToActionState.html","title":"injectable - CallToActionState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CallToActionState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts\n        \n\n\n            \n                Description\n            \n            \n                Sets the necessary defaults for the dialog box\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                    Static\n                                ctaDatePassed\n                            \n                            \n                                    Private\n                                getDialogData\n                            \n                            \n                                launchLearnMore\n                            \n                            \n                                learnMore\n                            \n                            \n                                ngxsOnInit\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, ga: GoogleAnalyticsService, storage: LocalStorageService, infoService: InfoButtonService, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts:70\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ga\n                                                  \n                                                        \n                                                                    GoogleAnalyticsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        infoService\n                                                  \n                                                        \n                                                                        InfoButtonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose(_ctx: StateContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(CloseDialog)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts:153\n                \n            \n\n\n            \n                \n                    closes all dialog boxes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        ctaDatePassed\n                        \n                    \n                \n            \n            \n                \n                    \n                    ctaDatePassed(expirationDate: string, now)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts:65\n                \n            \n\n\n            \n                \n                    Function that determines if expiration date has passed\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    expirationDate\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    now\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        Date.now\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        boolean defining whether or not info popup has expiered\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDialogData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDialogData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts:94\n                \n            \n\n\n            \n                \n                    Returns observable containting info from the markup\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        launchLearnMore\n                        \n                    \n                \n            \n            \n                \nlaunchLearnMore(content: DocumentationContent[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts:103\n                \n            \n\n\n            \n                \n                    Opens Learn more dialog\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                                DocumentationContent[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        learnMore\n                        \n                    \n                \n            \n            \n                \nlearnMore(_ctx: StateContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(LearnMore)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts:121\n                \n            \n\n\n            \n                \n                    Handles click event box\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngxsOnInit\n                        \n                    \n                \n            \n            \n                \nngxsOnInit(ctx: StateContext)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen(ctx: StateContext)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Action(OpenDialog)\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts:135\n                \n            \n\n\n            \n                \n                    Opens dialog box\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ctx\n                                    \n                                                StateContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Action, NgxsOnInit, State, StateContext } from '@ngxs/store';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\nimport { CallToActionBehaviorComponent } from '../../components/call-to-action-behavior/call-to-action-behavior.component';\nimport { DocumentationContent, InfoButtonService } from '../../components/info/info-button/info-button.service';\nimport { InfoDialogComponent } from '../../components/info/info-dialog/info-dialog.component';\nimport { LocalStorageService } from '../../services/local-storage/local-storage.service';\nimport { CloseDialog, LearnMore, OpenDialog } from './call-to-action.actions';\n\n/**\n * Interface to hold the necessary parts of the CTA dialog\n */\nexport interface CallToActionModel {\n  title: string;\n  message: string;\n  callToAction: string;\n  imageUrl: string;\n  expirationDate: string;\n  popupShown: boolean;\n\n}\n\n/**\n * Key for boolean determining if poup has been shown\n */\nconst POPUP_SHOWN_STORAGE_KEY = 'callToActionPopupShown';\n\n/**\n * Path to readme markup doc\n */\nconst SPATIAL_SEARCH_README = 'assets/docs/SPATIAL_SEARCH_README.md';\n\n/**\n * Sets the necessary defaults for the dialog box\n */\n@State({\n  name: 'callToAction',\n  defaults: {\n    title: 'New to the Exploration User Interface',\n    message: 'Spatial Search has arrived!',\n    callToAction: 'Learn More',\n    imageUrl: 'assets/images/spatial_search.gif',\n    expirationDate: 'Dec 1, 2022',\n    popupShown: false\n  }\n})\n\n\n/**\n * State that controls the data and behavior for the CallToAction Component\n */\n@Injectable()\nexport class CallToActionState implements NgxsOnInit {\n  /**\n   * Function that determines if expiration date has passed\n   * @param expirationDate\n   * @param now\n   * @returns boolean defining whether or not info popup has expiered\n   */\n  static ctaDatePassed(expirationDate: string, now = Date.now): boolean {\n    const today = now();\n    const expire = new Date(expirationDate);\n\n    return +today > +expire;\n  }\n\n  constructor(\n    private readonly dialog: MatDialog,\n    private readonly ga: GoogleAnalyticsService,\n    private readonly storage: LocalStorageService,\n    private readonly infoService: InfoButtonService,\n    private readonly http: HttpClient\n  ) { }\n\n\n  ngxsOnInit(ctx: StateContext): void {\n    const { expirationDate, popupShown } = ctx.getState();\n    const popupShownStr = this.storage.getItem(POPUP_SHOWN_STORAGE_KEY, `${popupShown}`);\n    const pastExpiration = CallToActionState.ctaDatePassed(expirationDate);\n    const showPopup = popupShownStr !== 'true' && !pastExpiration;\n    if (showPopup) {\n      ctx.dispatch(new OpenDialog());\n    }\n  }\n\n  /**\n   * Returns observable containting info from the markup\n   */\n  private getDialogData(): Observable{\n    return this.http.get(SPATIAL_SEARCH_README, { responseType: 'text' }).pipe(map(data =>\n      this.infoService.parseMarkdown(data)\n    ));\n  }\n\n  /**\n   * Opens Learn more dialog\n   */\n  launchLearnMore(content: DocumentationContent[]): void{\n    this.dialog.open(InfoDialogComponent, {\n      autoFocus: false,\n      panelClass: 'modal-animated',\n      width: '72rem',\n      data: {\n        title: 'Spatial Search',\n        content: content,\n        videoID: 'UfxMpzatowE'\n      }\n    });\n  }\n\n  /**\n   * Handles click event box\n   * @param _ctx\n   */\n  @Action(LearnMore)\n  learnMore(_ctx: StateContext): Observable {\n    this.dialog.closeAll();\n    this.ga.event('open_learn_more', 'call_to_action');\n\n    return this.getDialogData().pipe(\n      tap(data => this.launchLearnMore(data))\n    );\n  }\n\n  /**\n   * Opens dialog box\n   * @param ctx\n   */\n  @Action(OpenDialog)\n  open(ctx: StateContext): void {\n    this.dialog.open(CallToActionBehaviorComponent, {\n      autoFocus: false,\n      panelClass: 'modal-animated',\n      width: '30.75rem',\n      height: '36.688rem'\n    });\n\n    this.ga.event('open', 'call_to_action');\n    this.storage.setItem(POPUP_SHOWN_STORAGE_KEY, 'true');\n    ctx.patchState({ popupShown: true });\n  }\n\n  /**\n   * closes all dialog boxes\n   * @param _ctxs;\n   */\n  @Action(CloseDialog)\n  close(_ctx: StateContext): void {\n    this.dialog.closeAll();\n    this.ga.event('close', 'call_to_action');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CloseDialog.html":{"url":"classes/CloseDialog.html","title":"class - CloseDialog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CloseDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/states/call-to-action/call-to-action.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[CallToAction] Close Dialog'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.actions.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LearnMore {\n  static readonly type='[CallToAction] Learn More';\n}\n\nexport class OpenDialog {\n  static readonly type='[CallToAction] Open Dialog';\n}\n\nexport class CloseDialog {\n  static readonly type='[CallToAction] Close Dialog';\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsentService.html":{"url":"injectables/ConsentService.html","title":"injectable - ConsentService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/consent.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                consent\n                            \n                            \n                                    Readonly\n                                consentChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                setConsent\n                            \n                            \n                                unsetConsent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConsent\n                        \n                    \n                \n            \n            \n                \nsetConsent(value: Consent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsetConsent\n                        \n                    \n                \n            \n            \n                \nunsetConsent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        consent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Consent\n\n                    \n                \n                \n                    \n                        Default value : 'not-set'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        consentChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new ReplaySubject(1)\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/consent.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnDestroy } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\n\nexport type Consent = 'not-set' | 'given' | 'rescinded';\n\n\n@Injectable()\nexport class ConsentService implements OnDestroy {\n  consent: Consent = 'not-set';\n\n  readonly consentChange = new ReplaySubject(1);\n\n  constructor() {\n    this.consentChange.next(this.consent);\n  }\n\n  ngOnDestroy(): void {\n    this.consentChange.complete();\n  }\n\n  setConsent(value: Consent): void {\n    if (this.consent !== value) {\n      this.consent = value;\n      this.consentChange.next(value);\n    }\n  }\n\n  unsetConsent(): void {\n    this.setConsent('not-set');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DataSource.html":{"url":"interfaces/DataSource.html","title":"interface - DataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getAggregateResults\n                                    \n                                \n                                \n                                    \n                                        getCellTypeTermOccurences\n                                    \n                                \n                                \n                                    \n                                        getCellTypeTreeModel\n                                    \n                                \n                                \n                                    \n                                        getDatabaseStatus\n                                    \n                                \n                                \n                                    \n                                        getDatasetTechnologyNames\n                                    \n                                \n                                \n                                    \n                                        getOntologyTermOccurences\n                                    \n                                \n                                \n                                    \n                                        getOntologyTreeModel\n                                    \n                                \n                                \n                                    \n                                        getProviderNames\n                                    \n                                \n                                \n                                    \n                                        getReferenceOrgans\n                                    \n                                \n                                \n                                    \n                                        getReferenceOrganScene\n                                    \n                                \n                                \n                                    \n                                        getScene\n                                    \n                                \n                                \n                                    \n                                        getTissueBlockResults\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult\n} from 'ccf-database';\nimport { Observable, ObservableInput, ObservedValueOf } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n\nexport interface DataSource {\n  getDatabaseStatus(): Observable;\n  getProviderNames(): Observable;\n  getDatasetTechnologyNames(): Observable;\n  getOntologyTreeModel(): Observable;\n  getCellTypeTreeModel(): Observable;\n  getReferenceOrgans(): Observable;\n\n  getTissueBlockResults(filter?: Filter): Observable;\n  getAggregateResults(filter?: Filter): Observable;\n  getOntologyTermOccurences(filter?: Filter): Observable>;\n  getCellTypeTermOccurences(filter?: Filter): Observable>;\n  getScene(filter?: Filter): Observable;\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\nexport type DataSourceLike = {\n  [K in keyof DataSource]: DataSourceLikeMethod;\n};\n\nexport type DataSourceMethod = DataSource[K];\nexport type DataSourceLikeMethod =\n  (...args: Parameters>) => ObservableInput>;\nexport type DataSourceDataType =\n  ObservedValueOf>>;\n\n\nexport abstract class ForwardingDataSource implements DataSource {\n  getDatabaseStatus(): Observable {\n    return this.forwardCall('getDatabaseStatus');\n  }\n\n  getProviderNames(): Observable {\n    return this.forwardCall('getProviderNames');\n  }\n\n  getDatasetTechnologyNames(): Observable {\n    return this.forwardCall('getDatasetTechnologyNames');\n  }\n\n  getOntologyTreeModel(): Observable {\n    return this.forwardCall('getOntologyTreeModel');\n  }\n\n  getCellTypeTreeModel(): Observable {\n    return this.forwardCall('getCellTypeTreeModel');\n  }\n\n  getReferenceOrgans(): Observable {\n    return this.forwardCall('getReferenceOrgans');\n  }\n\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.forwardCall('getTissueBlockResults', filter);\n  }\n\n  getAggregateResults(filter?: Filter): Observable {\n    return this.forwardCall('getAggregateResults', filter);\n  }\n\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getOntologyTermOccurences', filter);\n  }\n\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getCellTypeTermOccurences', filter);\n  }\n\n  getScene(filter?: Filter): Observable {\n    return this.forwardCall('getScene', filter);\n  }\n\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.forwardCall('getReferenceOrganScene', organIri, filter);\n  }\n\n  protected abstract forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable>;\n}\n\n\nexport abstract class DelegateDataSource extends ForwardingDataSource {\n  abstract readonly impl$: Observable;\n\n  protected forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable> {\n    type AnyFunction = (...rest: unknown[]) => ObservableInput;\n\n    return this.impl$.pipe(\n      switchMap(impl => (impl[method] as AnyFunction)(...args))\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DataSourceService.html":{"url":"injectables/DataSourceService.html","title":"injectable - DataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getAggregateResults\n                            \n                            \n                                    Abstract\n                                getCellTypeTermOccurences\n                            \n                            \n                                    Abstract\n                                getCellTypeTreeModel\n                            \n                            \n                                    Abstract\n                                getDatabaseStatus\n                            \n                            \n                                    Abstract\n                                getDatasetTechnologyNames\n                            \n                            \n                                    Abstract\n                                getOntologyTermOccurences\n                            \n                            \n                                    Abstract\n                                getOntologyTreeModel\n                            \n                            \n                                    Abstract\n                                getProviderNames\n                            \n                            \n                                    Abstract\n                                getReferenceOrgans\n                            \n                            \n                                    Abstract\n                                getReferenceOrganScene\n                            \n                            \n                                    Abstract\n                                getScene\n                            \n                            \n                                    Abstract\n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    getCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProviderNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getScene\n                        \n                    \n                \n            \n            \n                \n                    \n                    getScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Abstract\n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { Observable } from 'rxjs';\n\nimport { DataSource } from './data-source';\n\n\n@Injectable()\nexport abstract class DataSourceService implements DataSource {\n  abstract getDatabaseStatus(): Observable;\n  abstract getProviderNames(): Observable;\n  abstract getDatasetTechnologyNames(): Observable;\n  abstract getOntologyTreeModel(): Observable;\n  abstract getCellTypeTreeModel(): Observable;\n  abstract getReferenceOrgans(): Observable;\n\n  abstract getTissueBlockResults(filter?: Filter): Observable;\n  abstract getAggregateResults(filter?: Filter): Observable;\n  abstract getOntologyTermOccurences(filter?: Filter): Observable>;\n  abstract getCellTypeTermOccurences(filter?: Filter): Observable>;\n  abstract getScene(filter?: Filter): Observable;\n  abstract getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DecoratedRange.html":{"url":"interfaces/DecoratedRange.html","title":"interface - DecoratedRange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DecoratedRange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n        \n\n\n            \n                Description\n            \n            \n                A range which should have the specified classes and styles applied\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            end\n                                        \n                                \n                                \n                                        \n                                            start\n                                        \n                                \n                                \n                                        \n                                            styles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Classes to add\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        end\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        end:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    End index of range (exclusive). Negative indicies are allowed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Start index of range (inclusive). Negative indicies are allowed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        styles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        styles:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Styles to set\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface DecoratedRange {\n  /** Start index of range (inclusive). Negative indicies are allowed. */\n  start: number;\n  /** End index of range (exclusive). Negative indicies are allowed. */\n  end: number;\n  /** Classes to add */\n  classes: string[];\n  /** Styles to set */\n  styles: Record;\n}\n\n/**\n * Resolves and normalizes an index for indexing into an array of length `length`.\n *\n * @param index The index value to resolve. May be negative indicating an index from end.\n * @param length The length of the object on which this index will be used.\n * @returns A positive index in range [0, length]\n */\nfunction resolveIndex(index: number, length: number): number {\n  if (index >= 0 && index = length) {\n    return length;\n  } else if (index + length , length: number): DecoratedRange {\n  const start = resolveIndex(range.start ?? 0, length);\n  const end = resolveIndex(range.end ?? length, length);\n  const classes = range.classes ?? [];\n  const styles = range.styles ?? {};\n  return { start, end, classes, styles };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DecoratedTextComponent.html":{"url":"components/DecoratedTextComponent.html","title":"component - DecoratedTextComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DecoratedTextComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n\n\n\n    \n        Description\n    \n    \n        Class to display text with additional styling on ranges of the text.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-decorated-text\n            \n\n            \n                styleUrls\n                ./decorated-text.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./decorated-text.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                segments\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createSegments\n                            \n                            \n                                    Private\n                                createStackOps\n                            \n                            \n                                    Private\n                                getNormalizedDecorations\n                            \n                            \n                                    Private\n                                makeDecoratedSegment\n                            \n                            \n                                    Private\n                                makeUndecoratedSegment\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Private\n                                updateStack\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                decorations\n                            \n                            \n                                text\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        decorations\n                    \n                \n                \n                    \n                        Type :         Partial[]\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:52\n                            \n                        \n                \n                    \n                        Classes and styles to apply to ranges of the text.\nFor overlapping ranges later values takes precedence.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        text\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:46\n                            \n                        \n                \n                    \n                        Text to display\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-decorated-text\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-decorated-text'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:41\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createSegments\n                        \n                    \n                \n            \n            \n                \n                    \n                    createSegments()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:76\n                \n            \n\n\n            \n                \n                    Creates an array of decorated text segments based on\nthe latest text and decorations.\n\n\n                    \n                    \n                    \n                        Returns :         Segment[]\n\n                    \n                    \n                        The new segments\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        createStackOps\n                        \n                    \n                \n            \n            \n                \n                    \n                    createStackOps(ranges: DecoratedRange[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:124\n                \n            \n\n\n            \n                \n                    Creates an ordered array of stack operations to apply when building segments.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    ranges\n                                    \n                                                DecoratedRange[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The decorated ranges to apply\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         StackOp[]\n\n                    \n                    \n                        The array of operations\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getNormalizedDecorations\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNormalizedDecorations()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:158\n                \n            \n\n\n            \n                \n                    Normalizes and filters valid decorated ranges.\n\n\n                    \n                    \n                    \n                        Returns :         DecoratedRange[]\n\n                    \n                    \n                        The normalized ranges with properties filled\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeDecoratedSegment\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeDecoratedSegment(text: string, decorations: DecoratedRange[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:184\n                \n            \n\n\n            \n                \n                    Creates a segment with decoration\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text for the segment\n\n                                    \n                                \n                                \n                                    decorations\n                                    \n                                                DecoratedRange[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Decorations for this segment\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Segment\n\n                    \n                    \n                        A decorated segment\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        makeUndecoratedSegment\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeUndecoratedSegment(text: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:173\n                \n            \n\n\n            \n                \n                    Creates a segment without any decoration\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text for the segment\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Segment\n\n                    \n                    \n                        A segment without any decoration\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:64\n                \n            \n\n\n            \n                \n                    Apply changes and recalculate cached values.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Instance properties that have changed\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateStack\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStack(stack: DecoratedRange[], op: StackOp)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:145\n                \n            \n\n\n            \n                \n                    Applies the stack changes specified by the stack operation.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    stack\n                                    \n                                                DecoratedRange[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The current stack\n\n                                    \n                                \n                                \n                                    op\n                                    \n                                                StackOp\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The operation\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DecoratedRange[]\n\n                    \n                    \n                        The new stack\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-decorated-text'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:41\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        segments\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Segment[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts:57\n                        \n                    \n\n            \n                \n                    Computed segments of text with decorations resolved.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { DecoratedRange, normalize } from './decorated-range';\n\n\n// Reexport DecoratedRange\nexport { DecoratedRange };\n\n/** A segment of text with additional classes and styles */\ninterface Segment {\n  /** The piece of text to display */\n  text: string;\n  /** Classes to add to the text container */\n  classes: string[];\n  /** Styles to set on the text container */\n  styles: Record;\n}\n\n/** Represents an operation to apply to the stack when building segments */\ninterface StackOp {\n  /** Text index at which the changes takes effect */\n  index: number;\n  /** Decorations to add */\n  added: DecoratedRange[];\n  /** Decorations to remove */\n  removed: DecoratedRange[];\n}\n\n\n/**\n * Class to display text with additional styling on ranges of the text.\n */\n@Component({\n  selector: 'ccf-decorated-text',\n  templateUrl: './decorated-text.component.html',\n  styleUrls: ['./decorated-text.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DecoratedTextComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-decorated-text';\n\n  /**\n   * Text to display\n   */\n  @Input() text: string;\n\n  /**\n   * Classes and styles to apply to ranges of the text.\n   * For overlapping ranges later values takes precedence.\n   */\n  @Input() decorations?: Partial[];\n\n  /**\n   * Computed segments of text with decorations resolved.\n   */\n  segments: Segment[] = [];\n\n  /**\n   * Apply changes and recalculate cached values.\n   *\n   * @param changes Instance properties that have changed\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('text' in changes || 'decorations' in changes) {\n      this.segments = this.createSegments();\n    }\n  }\n\n  /**\n   * Creates an array of decorated text segments based on\n   * the latest text and decorations.\n   *\n   * @returns The new segments\n   */\n  private createSegments(): Segment[] {\n    const { text } = this;\n    if (!text) { // No styling can be applied to empty text fields\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const decorations = this.getNormalizedDecorations();\n    if (decorations.length === 0) { // No styling available\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const stackOps = this.createStackOps(decorations);\n    const segments: Segment[] = [];\n    let stack: DecoratedRange[] = [];\n    let lastIndex = 0;\n\n    // If the first op starts at index zero apply stack changes\n    // but don't push a segment by shifing out the first op\n    if (stackOps[0].index === 0) {\n      stack = this.updateStack(stack, stackOps.shift() as StackOp);\n    }\n\n    // Build segments based on the stack operations\n    for (const op of stackOps) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex, op.index), stack\n      ));\n\n      lastIndex = op.index;\n      stack = this.updateStack(stack, op);\n    }\n\n    // Push the last segment if not already done\n    if (lastIndex !== text.length) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex), stack\n      ));\n    }\n\n    return segments;\n  }\n\n  /**\n   * Creates an ordered array of stack operations to apply when building segments.\n   *\n   * @param ranges The decorated ranges to apply\n   * @returns The array of operations\n   */\n  private createStackOps(ranges: DecoratedRange[]): StackOp[] {\n    const ops: Record = {};\n    const getOp = (index: number) => (ops[index] ??= { index, added: [], removed: [] });\n\n    for (const range of ranges) {\n      getOp(range.start).added.push(range);\n      getOp(range.end).removed.push(range);\n    }\n\n    return Object.entries(ops)\n      .sort((i1, i2) => +i1[0] - +i2[0]) // Sort by index\n      .map(entry => entry[1]);\n  }\n\n  /**\n   * Applies the stack changes specified by the stack operation.\n   *\n   * @param stack The current stack\n   * @param op The operation\n   * @returns The new stack\n   */\n  private updateStack(stack: DecoratedRange[], op: StackOp): DecoratedRange[] {\n    return stack\n      .filter(item => !op.removed.includes(item))\n      // Note - A new array is created by the above filter statement\n      // so it is safe to modify it with concat\n      .concat(op.added);\n  }\n\n  /**\n   * Normalizes and filters valid decorated ranges.\n   *\n   * @returns The normalized ranges with properties filled\n   */\n  private getNormalizedDecorations(): DecoratedRange[] {\n    const { decorations = [], text: { length } } = this;\n    return decorations\n      // Turn partials into full objects\n      .map(range => normalize(range, length))\n      // Remove empty and out of bounds ranges\n      .filter(range => range.start (\n      (result, range) => result.concat(range.classes),\n      []\n    );\n    const styles = decorations.reduce(\n      (result, range) => ({ ...result, ...range.styles }),\n      {}\n    );\n\n    return { text, classes, styles };\n  }\n}\n\n    \n\n    \n        \n  {{ segment.text }}\n\n\n    \n\n    \n                \n                    ./decorated-text.component.scss\n                \n                :host {\n  display: flex;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ segment.text }}'\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CallToActionBehaviorComponent', 'selector': 'ccf-call-to-action-behavior'},{'name': 'CallToActionComponent', 'selector': 'ccf-call-to-action'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'},{'name': 'XYZPositionComponent', 'selector': 'ccf-xyz-position'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'DecoratedTextComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DecoratedTextModule.html":{"url":"modules/DecoratedTextModule.html","title":"module - DecoratedTextModule","body":"\n                   \n\n\n\n\n    Modules\n    DecoratedTextModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DecoratedTextModule\n\n\n\ncluster_DecoratedTextModule_declarations\n\n\n\ncluster_DecoratedTextModule_exports\n\n\n\n\nDecoratedTextComponent\n\nDecoratedTextComponent\n\n\n\nDecoratedTextModule\n\nDecoratedTextModule\n\nDecoratedTextModule -->\n\nDecoratedTextComponent->DecoratedTextModule\n\n\n\n\n\nDecoratedTextComponent \n\nDecoratedTextComponent \n\nDecoratedTextComponent  -->\n\nDecoratedTextModule->DecoratedTextComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-text.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DecoratedTextComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DecoratedTextComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { DecoratedTextComponent } from './decorated-text.component';\n\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [DecoratedTextComponent],\n  exports: [DecoratedTextComponent]\n})\nexport class DecoratedTextModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DefaultParams.html":{"url":"interfaces/DefaultParams.html","title":"interface - DefaultParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DefaultParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            token\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSearch, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n  spatial?: SpatialSearch[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return combineLatest([\n      globalConfig.getOption('remoteApiEndpoint'),\n      globalConfig.getOption('hubmapToken')\n    ]).pipe(\n      take(1),\n      tap(([endpoint, token]) => {\n        api.configuration.basePath = endpoint;\n        if (token) {\n          requestParams['token'] = token;\n        }\n      }),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DelegateDataSource.html":{"url":"classes/DelegateDataSource.html","title":"class - DelegateDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DelegateDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ForwardingDataSource\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:91\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult\n} from 'ccf-database';\nimport { Observable, ObservableInput, ObservedValueOf } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n\nexport interface DataSource {\n  getDatabaseStatus(): Observable;\n  getProviderNames(): Observable;\n  getDatasetTechnologyNames(): Observable;\n  getOntologyTreeModel(): Observable;\n  getCellTypeTreeModel(): Observable;\n  getReferenceOrgans(): Observable;\n\n  getTissueBlockResults(filter?: Filter): Observable;\n  getAggregateResults(filter?: Filter): Observable;\n  getOntologyTermOccurences(filter?: Filter): Observable>;\n  getCellTypeTermOccurences(filter?: Filter): Observable>;\n  getScene(filter?: Filter): Observable;\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\nexport type DataSourceLike = {\n  [K in keyof DataSource]: DataSourceLikeMethod;\n};\n\nexport type DataSourceMethod = DataSource[K];\nexport type DataSourceLikeMethod =\n  (...args: Parameters>) => ObservableInput>;\nexport type DataSourceDataType =\n  ObservedValueOf>>;\n\n\nexport abstract class ForwardingDataSource implements DataSource {\n  getDatabaseStatus(): Observable {\n    return this.forwardCall('getDatabaseStatus');\n  }\n\n  getProviderNames(): Observable {\n    return this.forwardCall('getProviderNames');\n  }\n\n  getDatasetTechnologyNames(): Observable {\n    return this.forwardCall('getDatasetTechnologyNames');\n  }\n\n  getOntologyTreeModel(): Observable {\n    return this.forwardCall('getOntologyTreeModel');\n  }\n\n  getCellTypeTreeModel(): Observable {\n    return this.forwardCall('getCellTypeTreeModel');\n  }\n\n  getReferenceOrgans(): Observable {\n    return this.forwardCall('getReferenceOrgans');\n  }\n\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.forwardCall('getTissueBlockResults', filter);\n  }\n\n  getAggregateResults(filter?: Filter): Observable {\n    return this.forwardCall('getAggregateResults', filter);\n  }\n\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getOntologyTermOccurences', filter);\n  }\n\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getCellTypeTermOccurences', filter);\n  }\n\n  getScene(filter?: Filter): Observable {\n    return this.forwardCall('getScene', filter);\n  }\n\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.forwardCall('getReferenceOrganScene', organIri, filter);\n  }\n\n  protected abstract forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable>;\n}\n\n\nexport abstract class DelegateDataSource extends ForwardingDataSource {\n  abstract readonly impl$: Observable;\n\n  protected forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable> {\n    type AnyFunction = (...rest: unknown[]) => ObservableInput;\n\n    return this.impl$.pipe(\n      switchMap(impl => (impl[method] as AnyFunction)(...args))\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DocumentationContent.html":{"url":"interfaces/DocumentationContent.html","title":"interface - DocumentationContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DocumentationContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n        \n\n\n            \n                Description\n            \n            \n                The structure to define how each documentation panel\nshould look like in the info dialog\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Content inside the panel\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Title of the panel\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * The structure to define how each documentation panel\n * should look like in the info dialog\n */\n\nexport interface DocumentationContent {\n  /** Title of the panel */\n  title: string;\n\n  /** Content inside the panel */\n  content: string;\n}\n\nexport interface PanelData {\n  content: DocumentationContent[];\n  infoTitle: string;\n  videoID: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfoButtonService {\n\n  /** Subject to send the documentation data to the component when its done processing */\n  panelContent: BehaviorSubject = new BehaviorSubject({ content: [], infoTitle: '', videoID: '' });\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Read the markdown file to split it by h1 tags and update the panel title and videoID.\n   */\n  updateData(url: string, videoID: string, infoTitle: string): void {\n    this.http.get(url, { responseType: 'text' }).subscribe((data: string) => {\n      const panelContent: PanelData = { content: this.parseMarkdown(data), infoTitle: infoTitle, videoID: videoID };\n      this.panelContent.next(panelContent);\n    });\n  }\n\n  /**\n   * Function to parse the markdown file and convert to\n   * documentation content used by the info-dialog panels\n   *\n   * @param data Markdown file sent as a string after reading it\n   * @returns array of DocumentationContent\n   */\n  parseMarkdown(data: string): DocumentationContent[] {\n    const markdownContent: DocumentationContent[] = [];\n    const splitByHeaderTag: string[] = data.split('# ');\n    for (const split of splitByHeaderTag) {\n      if (split.length) {\n        const newLine = split.includes('\\n\\n') ? '\\n\\n' : '\\r\\n\\r\\n';\n        const headerAndContent: string[] = split.split(newLine);\n        markdownContent.push({\n          title: headerAndContent[0],\n          content: headerAndContent.splice(1).join(newLine)\n        });\n      }\n    }\n    return markdownContent;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FilterParams.html":{"url":"interfaces/FilterParams.html","title":"interface - FilterParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FilterParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            age\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ageRange\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bmi\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            bmiRange\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cellTypeTerms\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            ontologyTerms\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            providers\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            spatial\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            technologies\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:     MinMax\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MinMax\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ageRange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ageRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bmi\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bmi:     MinMax\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     MinMax\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bmiRange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bmiRange:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cellTypeTerms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cellTypeTerms:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ontologyTerms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ontologyTerms:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        providers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"both\" | \"female\" | \"male\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"both\" | \"female\" | \"male\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spatial\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spatial:     SpatialSearch[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     SpatialSearch[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        technologies\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        technologies:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Matrix4 } from '@math.gl/core';\nimport {\n  AggregateResult, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult,\n} from 'ccf-database';\nimport { DatabaseStatus, DefaultService, MinMax, SpatialSearch, SpatialSceneNode as RawSpatialSceneNode } from 'ccf-openapi/angular-client';\nimport { combineLatest, Observable, Subject } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { Cacheable } from 'ts-cacheable';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSource } from './data-source';\n\n\nexport interface ApiEndpointDataSourceOptions {\n  remoteApiEndpoint: string;\n  hubmapToken?: string;\n}\n\n// Not exported from ts-cacheable!?\ntype IObservableCacheConfig = NonNullable[0]>;\n\ntype RequestMethod = (params: P) => Observable;\ntype DataReviver = (data: T) => U;\n\ninterface DefaultParams {\n  token?: string;\n}\n\ninterface FilterParams {\n  age?: MinMax;\n  ageRange?: string;\n  bmi?: MinMax;\n  bmiRange?: string;\n  ontologyTerms?: string[];\n  cellTypeTerms?: string[];\n  providers?: string[];\n  sex?: 'both' | 'female' | 'male';\n  technologies?: string[];\n  spatial?: SpatialSearch[];\n}\n\n\n// Cache config\nconst buster$ = new Subject();\n\nconst CACHE_CONFIG_NO_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$\n};\n\nconst CACHE_CONFIG_PARAMS: IObservableCacheConfig = {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n};\n\n\n// Utility\nfunction cast(): (data: unknown) => T {\n  return data => data as T;\n}\n\nfunction rangeToMinMax(\n  range: [number, number] | undefined,\n  low: number, high: number\n): MinMax | undefined {\n  return range ? {\n    min: range[0] > low ? range[0] : undefined,\n    max: range[1]  ({\n    ...(node as SpatialSceneNode),\n    transformMatrix: new Matrix4(node.transformMatrix ?? [])\n  }));\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiEndpointDataSourceService implements DataSource {\n  constructor(\n    private readonly api: DefaultService,\n    private readonly globalConfig: GlobalConfigState\n  ) {\n    globalConfig.getOption('hubmapToken').subscribe(buster$);\n  }\n\n  getDatabaseStatus(): Observable {\n    return this.doRequest(params => this.api.dbStatus(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getProviderNames(): Observable {\n    return this.doRequest(params => this.api.providerNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getDatasetTechnologyNames(): Observable {\n    return this.doRequest(params => this.api.technologyNames(params));\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getOntologyTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.ontologyTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getCellTypeTreeModel(): Observable {\n    return this.doRequest(\n      params => this.api.cellTypeTreeModel(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_NO_PARAMS)\n  getReferenceOrgans(): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrgans(params),\n      undefined, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.tissueBlocks(params),\n      filter, {}, cast()\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getAggregateResults(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.aggregateResults(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.ontologyTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.doRequest(\n      params => this.api.cellTypeTermOccurences(params),\n      filter\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getScene(filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.scene(params),\n      filter, {}, spatialSceneNodeReviver\n    );\n  }\n\n  @Cacheable(CACHE_CONFIG_PARAMS)\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.doRequest(\n      params => this.api.referenceOrganScene(params),\n      filter, { organIri }, spatialSceneNodeReviver\n    );\n  }\n\n  private doRequest(\n    method: RequestMethod,\n    filter?: Filter | undefined,\n    params?: P\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params: P | undefined,\n    reviver: DataReviver\n  ): Observable;\n  private doRequest(\n    method: RequestMethod,\n    filter: Filter | undefined,\n    params?: P,\n    reviver?: DataReviver\n  ): Observable {\n    const { api, globalConfig } = this;\n    const requestParams = { ...filterToParams(filter), ...params };\n\n    return combineLatest([\n      globalConfig.getOption('remoteApiEndpoint'),\n      globalConfig.getOption('hubmapToken')\n    ]).pipe(\n      take(1),\n      tap(([endpoint, token]) => {\n        api.configuration.basePath = endpoint;\n        if (token) {\n          requestParams['token'] = token;\n        }\n      }),\n      switchMap(() => method(requestParams)),\n      map(data => reviver ? reviver(data) : data)\n    );\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ForwardingDataSource.html":{"url":"classes/ForwardingDataSource.html","title":"class - ForwardingDataSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ForwardingDataSource\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/data-source.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            DataSource\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:84\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/data-source.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  AggregateResult, DatabaseStatus, Filter, OntologyTreeModel, SpatialEntity, SpatialSceneNode, TissueBlockResult\n} from 'ccf-database';\nimport { Observable, ObservableInput, ObservedValueOf } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n\nexport interface DataSource {\n  getDatabaseStatus(): Observable;\n  getProviderNames(): Observable;\n  getDatasetTechnologyNames(): Observable;\n  getOntologyTreeModel(): Observable;\n  getCellTypeTreeModel(): Observable;\n  getReferenceOrgans(): Observable;\n\n  getTissueBlockResults(filter?: Filter): Observable;\n  getAggregateResults(filter?: Filter): Observable;\n  getOntologyTermOccurences(filter?: Filter): Observable>;\n  getCellTypeTermOccurences(filter?: Filter): Observable>;\n  getScene(filter?: Filter): Observable;\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable;\n}\n\nexport type DataSourceLike = {\n  [K in keyof DataSource]: DataSourceLikeMethod;\n};\n\nexport type DataSourceMethod = DataSource[K];\nexport type DataSourceLikeMethod =\n  (...args: Parameters>) => ObservableInput>;\nexport type DataSourceDataType =\n  ObservedValueOf>>;\n\n\nexport abstract class ForwardingDataSource implements DataSource {\n  getDatabaseStatus(): Observable {\n    return this.forwardCall('getDatabaseStatus');\n  }\n\n  getProviderNames(): Observable {\n    return this.forwardCall('getProviderNames');\n  }\n\n  getDatasetTechnologyNames(): Observable {\n    return this.forwardCall('getDatasetTechnologyNames');\n  }\n\n  getOntologyTreeModel(): Observable {\n    return this.forwardCall('getOntologyTreeModel');\n  }\n\n  getCellTypeTreeModel(): Observable {\n    return this.forwardCall('getCellTypeTreeModel');\n  }\n\n  getReferenceOrgans(): Observable {\n    return this.forwardCall('getReferenceOrgans');\n  }\n\n  getTissueBlockResults(filter?: Filter): Observable {\n    return this.forwardCall('getTissueBlockResults', filter);\n  }\n\n  getAggregateResults(filter?: Filter): Observable {\n    return this.forwardCall('getAggregateResults', filter);\n  }\n\n  getOntologyTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getOntologyTermOccurences', filter);\n  }\n\n  getCellTypeTermOccurences(filter?: Filter): Observable> {\n    return this.forwardCall('getCellTypeTermOccurences', filter);\n  }\n\n  getScene(filter?: Filter): Observable {\n    return this.forwardCall('getScene', filter);\n  }\n\n  getReferenceOrganScene(organIri: string, filter?: Filter): Observable {\n    return this.forwardCall('getReferenceOrganScene', organIri, filter);\n  }\n\n  protected abstract forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable>;\n}\n\n\nexport abstract class DelegateDataSource extends ForwardingDataSource {\n  abstract readonly impl$: Observable;\n\n  protected forwardCall(\n    method: K, ...args: Parameters>\n  ): Observable> {\n    type AnyFunction = (...rest: unknown[]) => ObservableInput;\n\n    return this.impl$.pipe(\n      switchMap(impl => (impl[method] as AnyFunction)(...args))\n    ) as Observable>;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalConfigState.html":{"url":"injectables/GlobalConfigState.html","title":"injectable - GlobalConfigState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GlobalConfigState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/config/global-config.state.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                optionCache\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                getOption\n                            \n                            \n                                    Private\n                                getPathKey\n                            \n                            \n                                getProperty\n                            \n                            \n                                patchConfig\n                            \n                            \n                                setConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    config$\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(k1: K1)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:42\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K1\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(k1: K1, k2: K2)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:43\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K1\n                        K2\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n                                    \n                                            K2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(k1: K1, k2: K2, k3: K3)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:44\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K1\n                        K2\n                        K3\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n                                    \n                                            K1\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n                                    \n                                            K2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n                                    \n                                            K3\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(...path: (string | number)[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:45\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            (string | number)[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOption\n                        \n                    \n                \n            \n            \n                \ngetOption(...path: (string | number)[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            (string | number)[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable<>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getPathKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPathKey(path: (string | number)[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            (string | number)[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProperty\n                        \n                    \n                \n            \n            \n                \ngetProperty(path: PropertyKey[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:34\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        R\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                            PropertyKey[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        patchConfig\n                        \n                    \n                \n            \n            \n                \npatchConfig(config: ImmutablePatchValue)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            ImmutablePatchValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConfig\n                        \n                    \n                \n            \n            \n                \nsetConfig(config: ImmutableStateValue)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            ImmutableStateValue\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        optionCache\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map>()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:19\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config$\n                    \n                \n\n                \n                    \n                        getconfig$()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/config/global-config.state.ts:22\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Immutable } from '@angular-ru/common/typings';\nimport { Injectable } from '@angular/core';\nimport { Computed, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { ImmutablePatchValue, ImmutableStateValue } from '@ngxs-labs/data/typings';\nimport { State } from '@ngxs/store';\nimport { filterNulls } from 'ccf-shared/rxjs-ext/operators';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, pluck, shareReplay } from 'rxjs/operators';\n\n\n@StateRepository()\n@State({\n  name: 'globalConfig',\n  defaults: null\n})\n@Injectable()\nexport class GlobalConfigState extends NgxsImmutableDataRepository {\n  private readonly optionCache = new Map>();\n\n  @Computed()\n  get config$(): Observable> {\n    return this.state$.pipe(filterNulls(), shareReplay(1));\n  }\n\n  setConfig(config: ImmutableStateValue): void {\n    this.setState(config);\n  }\n\n  patchConfig(config: ImmutablePatchValue): void {\n    this.patchState(config);\n  }\n\n  getProperty(path: PropertyKey[]): Observable {\n    return this.config$.pipe(\n      pluck(...path as string[]),\n      distinctUntilChanged(),\n      shareReplay(1)\n    );\n  }\n\n  getOption(k1: K1): Observable;\n  getOption(k1: K1, k2: K2): Observable;\n  getOption(k1: K1, k2: K2, k3: K3): Observable;\n  getOption(...path: (string | number)[]): Observable;\n  getOption(...path: (string | number)[]): Observable {\n    const key = this.getPathKey(path);\n    if (this.optionCache.has(key)) {\n      return this.optionCache.get(key)!;\n    }\n\n    const obs = this.config$.pipe(\n      pluck(...(path as string[])),\n      distinctUntilChanged(),\n      shareReplay(1)\n    );\n\n    this.optionCache.set(key, obs);\n    return obs;\n  }\n\n  private getPathKey(path: (string | number)[]): string {\n    return `${path.length}:${path.join('.')}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GlobalsService.html":{"url":"injectables/GlobalsService.html","title":"injectable - GlobalsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GlobalsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/globals/globals.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Provide functionality for interacting with the global object.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                findGlobalObject\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                get\n                            \n                            \n                                has\n                            \n                            \n                                remove\n                            \n                            \n                                set\n                            \n                            \n                                set\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    obj\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        findGlobalObject\n                        \n                    \n                \n            \n            \n                \n                    \n                    findGlobalObject()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:109\n                \n            \n\n\n            \n                \n                    Attempt to locate the global object.\nCan be overridden in a subclass to check other locations\nor completely change the object. This is especially useful\nduring testing.\n\n\n                    \n                    \n                    \n                        Returns :         GlobalThis | undefined\n\n                    \n                    \n                        The global object if found\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: K)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:58\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n                    Gets a value from the global object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key for the value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: K, def: D)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:59\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                        D\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                            D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     NonNullable | D\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: GlobalKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:60\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | null | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: GlobalKey, def: D)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:61\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                        D\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                            D\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T | D\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: GlobalKey, def?)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    def\n                                    \n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        has\n                        \n                    \n                \n            \n            \n                \nhas(key: GlobalKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:45\n                \n            \n\n\n            \n                \n                    Tests whether the global object has the specific key.\nThis method returns true even when the associated value\nis undefined or null as long as the key exists.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the key exists in the global object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(key: GlobalKey)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:93\n                \n            \n\n\n            \n                \n                    Removes a key from the global object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: K, value)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:76\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n                    Sets a value on the global object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The key to set the value on\n\n                                    \n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The new value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: GlobalKey, value: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:77\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: GlobalKey, value)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                GlobalKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        obj\n                    \n                \n\n                \n                    \n                        getobj()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/services/globals/globals.service.ts:22\n                                \n                            \n                    \n                        \n                                The found global object\n\n\n                                \n                                    Returns :         GlobalThis | undefined\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n\n/** Type of keys allowed in the global object */\nexport type GlobalKey = string | symbol;\n\n/** Type of the global object */\nexport type GlobalThis = typeof globalThis;\n\ndeclare let global: GlobalThis;\n\n/**\n * Provide functionality for interacting with the global object.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalsService {\n  /**\n   * The found global object\n   */\n  get obj(): GlobalThis | undefined {\n    const obj = this.findGlobalObject();\n    // Cache value on the instance\n    Object.defineProperties(this, {\n      obj: {\n        configurable: false,\n        writable: false,\n        value: obj\n      }\n    });\n\n    return obj;\n  }\n\n  /**\n   * Tests whether the global object has the specific key.\n   * This method returns true even when the associated value\n   * is undefined or null as long as the key exists.\n   *\n   * @param key The key\n   *\n   * @returns true if the key exists in the global object\n   */\n  has(key: GlobalKey): boolean {\n    const { obj } = this;\n    return obj != null && key in obj;\n  }\n\n  /**\n   * Gets a value from the global object.\n   *\n   * @param key The key for the value\n   * @param def An optional default value\n   *\n   * @returns The value if it exists otherwise the default value\n   */\n  get(key: K): GlobalThis[K];\n  get(key: K, def: D): NonNullable | D;\n  get(key: GlobalKey): T | null | undefined;\n  get(key: GlobalKey, def: D): T | D;\n\n  get(key: GlobalKey, def?: unknown): unknown {\n    const { obj } = this;\n    return (obj && obj[key] as unknown) ?? def;\n  }\n\n  /**\n   * Sets a value on the global object.\n   *\n   * @param key The key to set the value on\n   * @param value The new value\n   *\n   * @throws TypeError if the value is readonly\n   */\n  set(key: K, value: GlobalThis[K]): void;\n  set(key: GlobalKey, value: T): void;\n\n  set(key: GlobalKey, value: unknown): void {\n    const { obj } = this;\n    if (obj) {\n      obj[key] = value;\n    }\n  }\n\n  /**\n   * Removes a key from the global object.\n   *\n   * @param key The key to remove\n   *\n   * @throws TypeError if the key is not removable\n   */\n  remove(key: GlobalKey): void {\n    const { obj } = this;\n    if (obj) {\n      delete obj[key];\n    }\n  }\n\n  /**\n   * Attempt to locate the global object.\n   * Can be overridden in a subclass to check other locations\n   * or completely change the object. This is especially useful\n   * during testing.\n   *\n   * @returns The global object if found\n   */\n  /* istanbul ignore next This is really hard to test as it depends on the global environment */\n  protected findGlobalObject(): GlobalThis | undefined {\n    // This should pretty much always be available unless\n    // we are running in some outdated environment\n    if (typeof globalThis !== 'undefined') {\n      return globalThis;\n    }\n\n    // Check the common places for a global object\n    if (typeof global !== 'undefined') { // Node.js environment\n      return global;\n    } else if (typeof window !== 'undefined') { // Browser environment\n      return window;\n    } else if (typeof self !== 'undefined') { // Web worker environment\n      return self;\n    }\n\n    try {\n      // One last try - may fail depending on content security policy (CSP) settings\n      // eslint-disable-next-line no-new-func, @typescript-eslint/no-implied-eval\n      return (new Function('return this;'))() as GlobalThis | undefined;\n    } catch (_ignored) { /* Ignore errors */ }\n\n    return undefined;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleAnalyticsSyncService.html":{"url":"injectables/GoogleAnalyticsSyncService.html","title":"injectable - GoogleAnalyticsSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GoogleAnalyticsSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                            \n                                    Private\n                                    Readonly\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                toggleGoogleAnalytics\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consentService: ConsentService, window: Record | null, undefined: IGoogleAnalyticsSettings)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        window\n                                                  \n                                                        \n                                                                    Record | null\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                  \n                                                        \n                                                                    IGoogleAnalyticsSettings\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        toggleGoogleAnalytics\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleGoogleAnalytics(disabled: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    disabled\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, OnDestroy } from '@angular/core';\nimport { IGoogleAnalyticsSettings, NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN, NGX_WINDOW } from 'ngx-google-analytics';\nimport { Subscription } from 'rxjs';\n\nimport { ConsentService } from './consent.service';\n\n\n@Injectable()\nexport class GoogleAnalyticsSyncService implements OnDestroy {\n  private readonly token: string;\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    consentService: ConsentService,\n    @Inject(NGX_WINDOW) private readonly window: Record | null,\n    @Inject(NGX_GOOGLE_ANALYTICS_SETTINGS_TOKEN) { trackingCode }: IGoogleAnalyticsSettings\n  ) {\n    this.token = trackingCode;\n\n    this.subscriptions.add(consentService.consentChange.subscribe(\n      consent => this.toggleGoogleAnalytics(consent === 'rescinded')\n    ));\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  private toggleGoogleAnalytics(disabled: boolean): void {\n    if (this.window) {\n      this.window[`ga-disable-${this.token}`] = disabled;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoButtonComponent.html":{"url":"components/InfoButtonComponent.html","title":"component - InfoButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts\n\n\n\n    \n        Description\n    \n    \n        Info button component: Information icon displays project details when clicked.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-button\n            \n\n            \n                styleUrls\n                ./info-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                launchInfoDialog\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                onDialogButtonClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                documentationUrl\n                            \n                            \n                                infoTitle\n                            \n                            \n                                videoID\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, infoButtonService: InfoButtonService)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:31\n                            \n                        \n\n                \n                    \n                            Creates an instance of info button component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the dialog creation service.\n\n                                                        \n                                                \n                                                \n                                                        infoButtonService\n                                                  \n                                                        \n                                                                        InfoButtonService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to the info button service\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        documentationUrl\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        infoTitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:22\n                            \n                        \n                \n                    \n                        Title of the info dialog\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        videoID\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:27\n                            \n                        \n                \n                    \n                        Whether the information is for the RUI or EUI\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        launchInfoDialog\n                        \n                    \n                \n            \n            \n                \nlaunchInfoDialog(data: PanelData)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:58\n                \n            \n\n\n            \n                \n                    Opens the info dialogue with the project details\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                PanelData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:51\n                \n            \n\n\n            \n                \n                    Unsubscribe to the observable when the component\nis destroyed\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDialogButtonClick\n                        \n                    \n                \n            \n            \n                \nonDialogButtonClick()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:76\n                \n            \n\n\n            \n                \n                    Detects button click and updates panel data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Subscription } from 'rxjs';\n\nimport { PanelData } from '../info-button/info-button.service';\nimport { InfoDialogComponent } from '../info-dialog/info-dialog.component';\nimport { InfoButtonService } from './info-button.service';\n\n\n/**\n * Info button component: Information icon displays project details when clicked.\n */\n@Component({\n  selector: 'ccf-info-button',\n  templateUrl: './info-button.component.html',\n  styleUrls: ['./info-button.component.scss']\n})\nexport class InfoButtonComponent implements OnDestroy {\n  /**\n   * Title of the info dialog\n   */\n  @Input() infoTitle = '';\n\n  /**\n   * Whether the information is for the RUI or EUI\n   */\n  @Input() videoID: string;\n\n  @Input() documentationUrl: string;\n\n  private readonly subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of info button component.\n   *\n   * @param dialog Reference to the dialog creation service.\n   * @param infoButtonService Reference to the info button service\n   */\n  constructor(private readonly dialog: MatDialog, private readonly infoButtonService: InfoButtonService) {\n    this.subscriptions.add(infoButtonService.panelContent.subscribe(data => {\n      if (data.content.length) {\n        this.launchInfoDialog(data);\n      }\n    }));\n  }\n\n  /**\n    * Unsubscribe to the observable when the component\n    * is destroyed\n    */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Opens the info dialogue with the project details\n   */\n  launchInfoDialog(data: PanelData): void {\n    if (this.dialog.openDialogs.length == 0) { //Prevent multiple dialogs from opening\n      this.dialog.open(InfoDialogComponent, {\n        autoFocus: false,\n        panelClass: 'modal-animated',\n        width: '72rem',\n        data: {\n          title: data.infoTitle,\n          content: data.content,\n          videoID: data.videoID\n        }\n      });\n    }\n  }\n\n  /**\n   * Detects button click and updates panel data\n   */\n  onDialogButtonClick(): void {\n    this.infoButtonService.updateData(this.documentationUrl, this.videoID, this.infoTitle);\n  }\n}\n\n    \n\n    \n        \n  \n    info\n  \n\n    \n\n    \n                \n                    ./info-button.component.scss\n                \n                .info-button-wrapper {\n  border-radius: 0.25rem;\n  padding: 0.65rem;\n  transition: 0.6s;\n\n  .ccf-info-button {\n    cursor: pointer;\n    transition: color .6s;\n    font-size: 1.5rem;\n    vertical-align: sub;\n  }\n  \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      info  '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CallToActionBehaviorComponent', 'selector': 'ccf-call-to-action-behavior'},{'name': 'CallToActionComponent', 'selector': 'ccf-call-to-action'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'},{'name': 'XYZPositionComponent', 'selector': 'ccf-xyz-position'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoButtonModule.html":{"url":"modules/InfoButtonModule.html","title":"module - InfoButtonModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoButtonModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InfoButtonModule\n\n\n\ncluster_InfoButtonModule_exports\n\n\n\ncluster_InfoButtonModule_declarations\n\n\n\ncluster_InfoButtonModule_imports\n\n\n\n\nInfoButtonComponent\n\nInfoButtonComponent\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nInfoButtonModule -->\n\nInfoButtonComponent->InfoButtonModule\n\n\n\n\n\nInfoButtonComponent \n\nInfoButtonComponent \n\nInfoButtonComponent  -->\n\nInfoButtonModule->InfoButtonComponent \n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoButtonModule -->\n\nInfoDialogModule->InfoButtonModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-button/info-button.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoButtonComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            InfoDialogModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoButtonComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatIconModule } from '@angular/material/icon';\nimport { InfoButtonComponent } from './info-button.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { InfoDialogModule } from '../info-dialog/info-dialog.module';\n\n@NgModule({\n  declarations: [InfoButtonComponent],\n  imports: [CommonModule, InfoDialogModule, MatIconModule, HttpClientModule],\n  exports: [InfoButtonComponent]\n})\nexport class InfoButtonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InfoButtonService.html":{"url":"injectables/InfoButtonService.html","title":"injectable - InfoButtonService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InfoButtonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                panelContent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                parseMarkdown\n                            \n                            \n                                updateData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        parseMarkdown\n                        \n                    \n                \n            \n            \n                \nparseMarkdown(data: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:52\n                \n            \n\n\n            \n                \n                    Function to parse the markdown file and convert to\ndocumentation content used by the info-dialog panels\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Markdown file sent as a string after reading it\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DocumentationContent[]\n\n                    \n                    \n                        array of DocumentationContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateData\n                        \n                    \n                \n            \n            \n                \nupdateData(url: string, videoID: string, infoTitle: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:38\n                \n            \n\n\n            \n                \n                    Read the markdown file to split it by h1 tags and update the panel title and videoID.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    videoID\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    infoTitle\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        panelContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject({ content: [], infoTitle: '', videoID: '' })\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts:31\n                        \n                    \n\n            \n                \n                    Subject to send the documentation data to the component when its done processing\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * The structure to define how each documentation panel\n * should look like in the info dialog\n */\n\nexport interface DocumentationContent {\n  /** Title of the panel */\n  title: string;\n\n  /** Content inside the panel */\n  content: string;\n}\n\nexport interface PanelData {\n  content: DocumentationContent[];\n  infoTitle: string;\n  videoID: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfoButtonService {\n\n  /** Subject to send the documentation data to the component when its done processing */\n  panelContent: BehaviorSubject = new BehaviorSubject({ content: [], infoTitle: '', videoID: '' });\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Read the markdown file to split it by h1 tags and update the panel title and videoID.\n   */\n  updateData(url: string, videoID: string, infoTitle: string): void {\n    this.http.get(url, { responseType: 'text' }).subscribe((data: string) => {\n      const panelContent: PanelData = { content: this.parseMarkdown(data), infoTitle: infoTitle, videoID: videoID };\n      this.panelContent.next(panelContent);\n    });\n  }\n\n  /**\n   * Function to parse the markdown file and convert to\n   * documentation content used by the info-dialog panels\n   *\n   * @param data Markdown file sent as a string after reading it\n   * @returns array of DocumentationContent\n   */\n  parseMarkdown(data: string): DocumentationContent[] {\n    const markdownContent: DocumentationContent[] = [];\n    const splitByHeaderTag: string[] = data.split('# ');\n    for (const split of splitByHeaderTag) {\n      if (split.length) {\n        const newLine = split.includes('\\n\\n') ? '\\n\\n' : '\\r\\n\\r\\n';\n        const headerAndContent: string[] = split.split(newLine);\n        markdownContent.push({\n          title: headerAndContent[0],\n          content: headerAndContent.splice(1).join(newLine)\n        });\n      }\n    }\n    return markdownContent;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InfoDialogComponent.html":{"url":"components/InfoDialogComponent.html","title":"component - InfoDialogComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InfoDialogComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-info-dialog\n            \n\n            \n                styleUrls\n                ./info-dialog.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./info-dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                documentationContents\n                            \n                            \n                                infoTitle\n                            \n                            \n                                videoID\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: InfoDialogData)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:34\n                            \n                        \n\n                \n                    \n                            Creates an instance of info dialog component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                A reference to the dialog that this component creates, used to call the dialog's methods\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        InfoDialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Data being injected into the dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:62\n                \n            \n\n\n            \n                \n                    Closes info dialog component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:53\n                \n            \n\n\n            \n                \n                    load the youtube player api in on init\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         InfoDialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:43\n                        \n                    \n\n            \n                \n                    Data being injected into the dialog\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:42\n                        \n                    \n\n            \n                \n                    A reference to the dialog that this component creates, used to call the dialog's methods\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        documentationContents\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DocumentationContent[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:26\n                        \n                    \n\n            \n                \n                    Documentation contents\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        infoTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:30\n                        \n                    \n\n            \n                \n                    Title of the dialog\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        videoID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts:34\n                        \n                    \n\n            \n                \n                    URL for video\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DocumentationContent } from '../info-button/info-button.service';\n\n/**\n * Data model for the dialog input\n */\nexport interface InfoDialogData {\n  content: DocumentationContent[];\n  title: string;\n  videoID: string;\n}\n\n/**\n * This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n */\n@Component({\n  selector: 'ccf-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss']\n})\nexport class InfoDialogComponent implements OnInit {\n  /**\n   * Documentation contents\n   */\n  documentationContents: DocumentationContent[];\n  /**\n   * Title of the dialog\n   */\n  infoTitle: string;\n  /**\n   * URL for video\n   */\n  videoID: string;\n  /**\n   * Creates an instance of info dialog component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: InfoDialogData,\n  ) {\n    this.documentationContents = data.content || [];\n    this.infoTitle = data.title || '';\n    this.videoID = data.videoID;\n  }\n\n  /**\n   * load the youtube player api in on init\n   */\n  ngOnInit(): void {\n    const tag = document.createElement('script');\n    tag.src = 'https://www.youtube.com/iframe_api';\n    document.body.appendChild(tag);\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(() => {\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{infoTitle}}\n        \n          clear\n        \n      \n      \n      \n        \n          \n            \n              {{content.title}}\n            \n              \n                \n                \n                   \n                \n              \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./info-dialog.component.scss\n                \n                ::ng-deep .mat-dialog-container {\n  padding: 0;\n}\n\n.rui-about.wrapper {\n  .container {\n    .content {\n      padding: 3rem;\n      text-align: left;\n\n      .header {\n        display: flex;\n        justify-content: space-between;\n        height: 3rem;\n        margin-bottom: 2.25rem;\n        position: relative;\n      }\n    }\n\n    .description {\n      font-size: 0.875rem;\n      line-height: 1.5rem;\n      margin-bottom: 1rem;\n    }\n\n    .close {\n      .close-icon {\n        cursor: pointer;\n        height: 3rem;\n        width: 3rem;\n        line-height: 3rem;\n        text-align: center;\n        transition: .6s;\n      }\n    }\n\n    .title {\n      font-size: 1.5rem;\n      margin: 0 auto;\n      line-height: 3rem;\n      height: 3rem;\n      justify-self: center;\n      display: flex;\n    }\n\n    .subtitle {\n      font-size: 1rem;\n      margin-top: 0;\n      margin-bottom: 0.5rem;\n    }\n\n    .panel {\n      margin-bottom: 1.5rem;\n\n      .no-header-margin {\n        font-weight: 300;\n        margin-bottom: 0;\n      }\n\n      .top-padding {\n        display: flex;\n\n        markdown ::ng-deep ul {\n          margin-top: 0;\n          padding-left: 1.5rem;\n        }\n      }\n    }\n\n    .dialog-content {\n      height: 50rem;\n      min-height: 10rem;\n\n      .variable-binding {\n        font-weight: 300;\n        display: flex;\n\n        &.first {\n          padding-right: 1rem;\n          width: 73%;\n        }\n\n        ::ng-deep ul {\n          margin: 0;\n        }\n\n        ::ng-deep img {\n          margin-left: 1rem;\n          float: right;\n        }\n      }\n\n      .video-player {\n        position: relative;\n        width: 50%;\n\n        ::ng-deep iframe {\n          width: 100%;\n          height: 100%;\n        }\n      }\n    }\n\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{infoTitle}}                  clear                                                                      {{content.title}}                                                                                                                                         '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CallToActionBehaviorComponent', 'selector': 'ccf-call-to-action-behavior'},{'name': 'CallToActionComponent', 'selector': 'ccf-call-to-action'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'},{'name': 'XYZPositionComponent', 'selector': 'ccf-xyz-position'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'InfoDialogComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InfoDialogData.html":{"url":"interfaces/InfoDialogData.html","title":"interface - InfoDialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  InfoDialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Data model for the dialog input\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            videoID\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         DocumentationContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DocumentationContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videoID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        videoID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { DocumentationContent } from '../info-button/info-button.service';\n\n/**\n * Data model for the dialog input\n */\nexport interface InfoDialogData {\n  content: DocumentationContent[];\n  title: string;\n  videoID: string;\n}\n\n/**\n * This component handles displaying and hiding a full screen modal / overlay that displays information about the project.\n */\n@Component({\n  selector: 'ccf-info-dialog',\n  templateUrl: './info-dialog.component.html',\n  styleUrls: ['./info-dialog.component.scss']\n})\nexport class InfoDialogComponent implements OnInit {\n  /**\n   * Documentation contents\n   */\n  documentationContents: DocumentationContent[];\n  /**\n   * Title of the dialog\n   */\n  infoTitle: string;\n  /**\n   * URL for video\n   */\n  videoID: string;\n  /**\n   * Creates an instance of info dialog component.\n   *\n   * @param dialogRef A reference to the dialog that this component creates, used to call the dialog's methods\n   * @param data Data being injected into the dialog\n   */\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: InfoDialogData,\n  ) {\n    this.documentationContents = data.content || [];\n    this.infoTitle = data.title || '';\n    this.videoID = data.videoID;\n  }\n\n  /**\n   * load the youtube player api in on init\n   */\n  ngOnInit(): void {\n    const tag = document.createElement('script');\n    tag.src = 'https://www.youtube.com/iframe_api';\n    document.body.appendChild(tag);\n  }\n\n  /**\n   * Closes info dialog component\n   */\n  close(): void {\n    document.getElementsByClassName('modal-animated')[0]?.classList.add('modal-animate-fade-out');\n\n    setTimeout(() => {\n      this.dialogRef.close();\n    }, 250);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/InfoDialogModule.html":{"url":"modules/InfoDialogModule.html","title":"module - InfoDialogModule","body":"\n                   \n\n\n\n\n    Modules\n    InfoDialogModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_InfoDialogModule\n\n\n\ncluster_InfoDialogModule_exports\n\n\n\ncluster_InfoDialogModule_declarations\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoDialogModule -->\n\nInfoDialogComponent->InfoDialogModule\n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nInfoDialogModule->InfoDialogComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            InfoDialogComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            InfoDialogComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { InfoDialogComponent } from './info-dialog.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MarkdownModule } from 'ngx-markdown';\nimport { YouTubePlayerModule } from '@angular/youtube-player';\n\n\n@NgModule({\n  declarations: [InfoDialogComponent],\n  imports: [CommonModule, MatDialogModule, MatIconModule, MatExpansionModule, YouTubePlayerModule, MarkdownModule.forRoot({})],\n  exports: [InfoDialogComponent]\n})\nexport class InfoDialogModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/InjectorDelegateDataSourceService.html":{"url":"injectables/InjectorDelegateDataSourceService.html","title":"injectable - InjectorDelegateDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  InjectorDelegateDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DelegateDataSource\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Abstract\n                                selectToken\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(globalConfig: GlobalConfigState, injector: Injector)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        globalConfig\n                                                  \n                                                        \n                                                                        GlobalConfigState\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                        Injector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        selectToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    selectToken(config: C)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            C\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ProviderToken\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:11\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Injector, ProviderToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, map, shareReplay } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n@Injectable()\nexport abstract class InjectorDelegateDataSourceService extends DelegateDataSource {\n  readonly impl$: Observable;\n\n  constructor(\n    globalConfig: GlobalConfigState,\n    injector: Injector\n  ) {\n    super();\n\n    this.impl$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      map(config => this.selectToken(config)),\n      distinctUntilChanged(),\n      map(token => injector.get(token)),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract selectToken(config: C): ProviderToken;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LearnMore.html":{"url":"classes/LearnMore.html","title":"class - LearnMore","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LearnMore\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/states/call-to-action/call-to-action.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[CallToAction] Learn More'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.actions.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LearnMore {\n  static readonly type='[CallToAction] Learn More';\n}\n\nexport class OpenDialog {\n  static readonly type='[CallToAction] Open Dialog';\n}\n\nexport class CloseDialog {\n  static readonly type='[CallToAction] Close Dialog';\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/local-storage/local-storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to handle local storage\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/local-storage/local-storage.service.ts:90\n                \n            \n\n\n            \n                \n                    Clears all storage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key: string, defaultValue?: D)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/local-storage/local-storage.service.ts:60\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        D\n                    \n                \n            \n\n            \n                \n                    Gets value based on key, also returns default if it fails\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    defaultValue\n                                    \n                                            D\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | D\n\n                    \n                    \n                        the value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/local-storage/local-storage.service.ts:50\n                \n            \n\n\n            \n                \n                    Gets value based on key index\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/local-storage/local-storage.service.ts:83\n                \n            \n\n\n            \n                \n                    removes value based on key\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/local-storage/local-storage.service.ts:70\n                \n            \n\n\n            \n                \n                    sets a key-value pairin local storage\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true or false based on success/failure\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (() => {\n    // Slightly modified from https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\n    let storage: Storage | undefined;\n    try {\n      storage = window.localStorage;\n      const x = '__storage_test__';\n      storage.setItem(x, x);\n      storage.removeItem(x);\n\n      return storage;\n    } catch (error) {\n      const full = error instanceof DOMException && (\n        // everything except Firefox\n        error.code === 22 ||\n        // Firefox\n        error.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        error.name === 'QuotaExceededError' ||\n        // Firefox\n        error.name === 'NS_ERROR_DOM_QUOTA_REACHED'\n      ) && (storage && storage.length !== 0);\n\n      return full ? storage : undefined;\n    }\n  })()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/services/local-storage/local-storage.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/services/local-storage/local-storage.service.ts:41\n                                \n                            \n                    \n                        \n                                gets length of storage list\n\n\n                                \n                                    Returns :         number\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n\n/**\n * Service to handle local storage\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n  static storage = (() => {\n    // Slightly modified from https://developer.mozilla.org/en-US/docs/Web/API/Web_Storage_API/Using_the_Web_Storage_API\n    let storage: Storage | undefined;\n    try {\n      storage = window.localStorage;\n      const x = '__storage_test__';\n      storage.setItem(x, x);\n      storage.removeItem(x);\n\n      return storage;\n    } catch (error) {\n      const full = error instanceof DOMException && (\n        // everything except Firefox\n        error.code === 22 ||\n        // Firefox\n        error.code === 1014 ||\n        // test name field too, because code might not be present\n        // everything except Firefox\n        error.name === 'QuotaExceededError' ||\n        // Firefox\n        error.name === 'NS_ERROR_DOM_QUOTA_REACHED'\n      ) && (storage && storage.length !== 0);\n\n      return full ? storage : undefined;\n    }\n  })();\n\n  /**\n   * gets length of storage list\n   */\n  get length(): number {\n    return LocalStorageService.storage?.length ?? 0;\n  }\n\n  /**\n   * Gets value based on key index\n   * @param index\n   * @returns\n   */\n  key(index: number): string | null {\n    return LocalStorageService.storage?.key(index) ?? null;\n  }\n\n  /**\n   * Gets value based on key, also returns default if it fails\n   * @param key\n   * @param defaultValue\n   * @returns the value\n   */\n  getItem(key: string, defaultValue?: D): string | D {\n    return LocalStorageService.storage?.getItem(key) ?? defaultValue ?? null as D;\n  }\n\n  /**\n   * sets a key-value pairin local storage\n   * @param key\n   * @param value\n   * @returns true or false based on success/failure\n   */\n  setItem(key: string, value: string): boolean {\n    try {\n      LocalStorageService.storage?.setItem(key, value);\n      return true;\n    } catch (_error) {\n      return false;\n    }\n  }\n\n  /**\n   * removes value based on key\n   * @param key\n   */\n  removeItem(key: string): void {\n    LocalStorageService.storage?.removeItem(key);\n  }\n\n  /**\n   * Clears all storage\n   */\n  clear(): void {\n    LocalStorageService.storage?.clear();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageSyncService.html":{"url":"injectables/LocalStorageSyncService.html","title":"injectable - LocalStorageSyncService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageSyncService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                    Optional\n                                storage\n                            \n                            \n                                    Private\n                                    Readonly\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadConsent\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Private\n                                saveConsent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(consentService: ConsentService, key: string)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        key\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        loadConsent\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadConsent()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Consent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        saveConsent\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveConsent(value: Consent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                            Optional\n                        storage\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs';\n\nimport { Consent, ConsentService } from './consent.service';\n\n\nexport const LOCAL_STORAGE_CONSENT_KEY = new InjectionToken('Key under which consent is stored', {\n  providedIn: 'root',\n  factory: () => 'ALLOW_TELEMETRY'\n});\n\n\n@Injectable()\nexport class LocalStorageSyncService implements OnDestroy {\n  private readonly storage?: typeof localStorage;\n  private readonly subscriptions = new Subscription();\n\n  constructor(\n    consentService: ConsentService,\n    @Inject(LOCAL_STORAGE_CONSENT_KEY) private readonly key: string\n  ) {\n    try {\n      this.storage = localStorage;\n    } catch (_error) { /* Ignored */ }\n\n    consentService.setConsent(this.loadConsent());\n    this.subscriptions.add(\n      consentService.consentChange.subscribe(consent => this.saveConsent(consent))\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  private loadConsent(): Consent {\n    const rawValue = this.storage?.getItem?.(this.key);\n    if (rawValue == null) {\n      return 'not-set';\n    }\n\n    const value = rawValue.trim().toLowerCase();\n    switch (value) {\n      case 'given': /* fallthrough */\n      case 'rescinded':\n        return value;\n      default:\n        return 'not-set';\n    }\n  }\n\n  private saveConsent(value: Consent): void {\n    this.storage?.setItem?.(this.key, value);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MousePositionTrackerModule.html":{"url":"modules/MousePositionTrackerModule.html","title":"module - MousePositionTrackerModule","body":"\n                   \n\n\n\n\n    Modules\n    MousePositionTrackerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/analytics/mouse-position-tracker.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { DOCUMENT } from '@angular/common';\nimport { Inject, NgModule } from '@angular/core';\nimport { GoogleAnalyticsService } from 'ngx-google-analytics';\nimport { fromEvent, Subscription } from 'rxjs';\nimport { map, throttleTime } from 'rxjs/operators';\n\n\nexport function trackMousePosition(el: HTMLElement, ga: GoogleAnalyticsService): Subscription {\n  const formatData = (event: MouseEvent) => {\n    const { clientWidth, clientHeight } = el;\n    const { clientX, clientY } = event;\n    const points = [clientX, clientY, clientWidth, clientHeight];\n    return points.join('_');\n  };\n\n  const events = fromEvent(el, 'mousemove').pipe(\n    throttleTime(1000),\n    map(formatData)\n  );\n\n  return events.subscribe(data => ga.event('webpage', 'mousemove', data));\n}\n\n\n@NgModule()\nexport class MousePositionTrackerModule {\n  constructor(\n  // NOTE: Angular compiler fails when document is typed properly?!\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  @Inject(DOCUMENT) document: any,\n                    ga: GoogleAnalyticsService\n  ) {\n    if (document) {\n      trackMousePosition((document as Document).body, ga);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/NumberDirective.html":{"url":"directives/NumberDirective.html","title":"directive - NumberDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  NumberDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Directive for restricting an input element to integer only values.\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        input[ccfNumbersOnly]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onInputChange\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                input\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts:9\n                            \n                        \n\n                \n                    \n                            Creates an instance of number directive.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Reference to input element\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            input\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts:23\n                \n            \n\n\n            \n                \n                    Listens to input changes and updates the text to only include numbers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The input event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onInputChange\n                        \n                    \n                \n            \n            \n                \nonInputChange(event: Event)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('input', ['$event'])\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts:23\n                \n            \n\n\n            \n                \n                    Listens to input changes and updates the text to only include numbers.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                Event\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The input event\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, HostListener } from '@angular/core';\n\n/**\n * Directive for restricting an input element to integer only values.\n */\n@Directive({\n  selector: 'input[ccfNumbersOnly]'\n})\nexport class NumberDirective {\n  /**\n   * Creates an instance of number directive.\n   *\n   * @param el Reference to input element\n   */\n  constructor(private el: ElementRef) { }\n\n  /**\n   * Listens to input changes and updates the text to only include numbers.\n   *\n   * @param event The input event\n   */\n  @HostListener('input', ['$event'])\n  onInputChange(event: Event): void {\n    const initalValue = this.el.nativeElement.value;\n    this.el.nativeElement.value = initalValue.replace(/[^0-9]*/g, '');\n    if (initalValue !== this.el.nativeElement.value) {\n      event.stopPropagation();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NumbersOnlyModule.html":{"url":"modules/NumbersOnlyModule.html","title":"module - NumbersOnlyModule","body":"\n                   \n\n\n\n\n    Modules\n    NumbersOnlyModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NumbersOnlyModule\n\n\n\ncluster_NumbersOnlyModule_exports\n\n\n\ncluster_NumbersOnlyModule_declarations\n\n\n\n\nNumberDirective\n\nNumberDirective\n\n\n\nNumbersOnlyModule\n\nNumbersOnlyModule\n\nNumbersOnlyModule -->\n\nNumberDirective->NumbersOnlyModule\n\n\n\n\n\nNumberDirective \n\nNumberDirective \n\nNumberDirective  -->\n\nNumbersOnlyModule->NumberDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NumberDirective\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NumberDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\n\nimport { NumberDirective } from './numbers-only.directive';\n\n\n@NgModule({\n  declarations: [NumberDirective],\n  exports: [NumberDirective]\n})\nexport class NumbersOnlyModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OpacitySliderComponent.html":{"url":"components/OpacitySliderComponent.html","title":"component - OpacitySliderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OpacitySliderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts\n\n\n\n    \n        Description\n    \n    \n        Slider for setting opacity on an anatomical structure\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-opacity-slider\n            \n\n            \n                styleUrls\n                ./opacity-slider.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./opacity-slider.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                prevOpacity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeOpacity\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reset\n                            \n                            \n                                resetOpacity\n                            \n                            \n                                toggleVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                opacity\n                            \n                            \n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                opacityChange\n                            \n                            \n                                opacityReset\n                            \n                            \n                                visibilityToggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        opacity\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:22\n                            \n                        \n                \n                    \n                        The value displayed in the slider\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visible\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:27\n                            \n                        \n                \n                    \n                        Whether the item is set to visible\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        opacityChange\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:32\n                            \n                        \n                \n                    \n                        Emits the updated opacity when the opacity changes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        opacityReset\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:42\n                            \n                        \n                \n                    \n                        Emitter for resetting all opacity values to default\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        visibilityToggle\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:37\n                            \n                        \n                \n                    \n                        Output  of opacity slider component\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-opacity-slider\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-opacity-slider'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeOpacity\n                        \n                    \n                \n            \n            \n                \nchangeOpacity(newOpacity: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:63\n                \n            \n\n\n            \n                \n                    Emits opacityChange with the new opacity value\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    newOpacity\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The updated opacity value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        reset\n                        \n                    \n                \n            \n            \n                \nreset()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetOpacity\n                        \n                    \n                \n            \n            \n                \nresetOpacity()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:82\n                \n            \n\n\n            \n                \n                    Emits signal to reset the opacity of the item\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleVisibility\n                        \n                    \n                \n            \n            \n                \ntoggleVisibility()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:71\n                \n            \n\n\n            \n                \n                    Emits signal to toggle the visibility of the item\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-opacity-slider'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:17\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prevOpacity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, HostBinding, Input, Output, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\n/**\n * Slider for setting opacity on an anatomical structure\n */\n@Component({\n  selector: 'ccf-opacity-slider',\n  templateUrl: './opacity-slider.component.html',\n  styleUrls: ['./opacity-slider.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class OpacitySliderComponent implements OnInit {\n\n  /**\n   * HTML class name\n   */\n  @HostBinding('class') readonly clsName = 'ccf-opacity-slider';\n\n  /**\n   * The value displayed in the slider\n   */\n  @Input() opacity = 20;\n\n  /**\n   * Whether the item is set to visible\n   */\n  @Input() visible = true;\n\n  /**\n   * Emits the updated opacity when the opacity changes\n   */\n  @Output() readonly opacityChange = new EventEmitter();\n\n  /**\n   * Output  of opacity slider component\n   */\n  @Output() readonly visibilityToggle = new EventEmitter();\n\n  /**\n   * Emitter for resetting all opacity values to default\n   */\n  @Output() readonly opacityReset = new EventEmitter();\n\n  prevOpacity: number;\n\n  ngOnInit(): void {\n    if (this.visible) {\n      this.prevOpacity = 0;\n    } else {\n      this.prevOpacity = 20;\n    }\n  }\n\n  reset(): void {\n    this.prevOpacity = 20;\n  }\n\n  /**\n   * Emits opacityChange with the new opacity value\n   *\n   * @param newOpacity The updated opacity value\n   */\n  changeOpacity(newOpacity: string): void {\n    this.opacity = parseInt(newOpacity, 10);\n    this.opacityChange.emit(this.opacity);\n  }\n\n  /**\n   * Emits signal to toggle the visibility of the item\n   */\n  toggleVisibility(): void {\n    const temp = this.opacity;\n    this.opacity = this.prevOpacity;\n    this.prevOpacity = temp;\n    this.visibilityToggle.emit();\n    this.opacityChange.emit(this.opacity);\n  }\n\n  /**\n   * Emits signal to reset the opacity of the item\n   */\n  resetOpacity(): void {\n    this.prevOpacity = 0;\n    this.opacityReset.emit();\n  }\n}\n\n    \n\n    \n        \n  \n    \n    {{opacity}}%\n  \n  \n    \n    \n    refresh\n  \n\n    \n\n    \n                \n                    ./opacity-slider.component.scss\n                \n                :host {\n  height: 2.25rem;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-radius: 0.1875rem;\n  \n\n  .slider-box {\n    display: flex;\n    width: 100%;\n    align-items: center;\n    justify-content: space-between;\n    height: 100%;\n\n    .slider-and-label {\n      width: 60%;\n      display: flex;\n      align-items: center;\n      height: 100%;\n\n      .slider {\n        width: 100%;\n        height: 100%;\n\n        ::ng-deep .mat-slider-wrapper {\n          top: 1.125rem;\n        }\n        \n        &.disabled {\n          pointer-events: none;\n          cursor: not-allowed;\n        }\n      }\n\n      .opacity-value {\n        width: 1.5rem;\n        margin-left: 0.5rem;\n      }\n    }\n\n    .icons {\n      display: flex;\n      cursor: pointer !important;\n\n      .reset {\n        margin-right: 1rem;\n        padding: 0.25rem;\n        cursor: pointer;\n        transition: .6s;\n        border-radius: 0.25rem;\n      }\n    \n      .visibility {\n        transition: .6s;\n        cursor: pointer;\n        padding: 0.25rem;\n        border-radius: 0.25rem;\n    \n        &.hidden {\n          display: none;\n        }\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          {{opacity}}%                refresh  '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CallToActionBehaviorComponent', 'selector': 'ccf-call-to-action-behavior'},{'name': 'CallToActionComponent', 'selector': 'ccf-call-to-action'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'},{'name': 'XYZPositionComponent', 'selector': 'ccf-xyz-position'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'OpacitySliderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OpacitySliderModule.html":{"url":"modules/OpacitySliderModule.html","title":"module - OpacitySliderModule","body":"\n                   \n\n\n\n\n    Modules\n    OpacitySliderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OpacitySliderModule\n\n\n\ncluster_OpacitySliderModule_declarations\n\n\n\ncluster_OpacitySliderModule_exports\n\n\n\n\nOpacitySliderComponent\n\nOpacitySliderComponent\n\n\n\nOpacitySliderModule\n\nOpacitySliderModule\n\nOpacitySliderModule -->\n\nOpacitySliderComponent->OpacitySliderModule\n\n\n\n\n\nOpacitySliderComponent \n\nOpacitySliderComponent \n\nOpacitySliderComponent  -->\n\nOpacitySliderModule->OpacitySliderComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OpacitySliderComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OpacitySliderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OpacitySliderComponent } from './opacity-slider.component';\nimport { MatSliderModule } from '@angular/material/slider';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatRippleModule } from '@angular/material/core';\n\n@NgModule({\n  declarations: [OpacitySliderComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatSliderModule,\n    MatRippleModule\n  ],\n  exports: [OpacitySliderComponent]\n})\nexport class OpacitySliderModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OpenDialog.html":{"url":"classes/OpenDialog.html","title":"class - OpenDialog","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OpenDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/states/call-to-action/call-to-action.actions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                            Readonly\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '[CallToAction] Open Dialog'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/states/call-to-action/call-to-action.actions.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LearnMore {\n  static readonly type='[CallToAction] Learn More';\n}\n\nexport class OpenDialog {\n  static readonly type='[CallToAction] Open Dialog';\n}\n\nexport class CloseDialog {\n  static readonly type='[CallToAction] Close Dialog';\n}\n\n\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrganInfo.html":{"url":"interfaces/OrganInfo.html","title":"interface - OrganInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OrganInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Contains the organ name and url of the icon svg\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            disabled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hasSex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            organ\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            sex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            side\n                                        \n                                \n                                \n                                        \n                                            src\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disabled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        disabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    True if the icon is disabled\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasSex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasSex:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    True if applies to both sexes\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    UBERON id for the organ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Label to display for the organ\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        organ\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        organ:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Name of the organ (to help match organs with left / right)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sex:     \"male\" | \"female\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"male\" | \"female\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used for single sex only organs\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        side\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        side:     \"left\" | \"right\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"left\" | \"right\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Used for paired organs\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        src\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        src:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Used to fetch the url of the organ icon\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit, Component, ElementRef, EventEmitter, HostBinding, Input,\n  OnChanges, OnDestroy, Output, SimpleChanges, ViewChild\n} from '@angular/core';\nimport { ResizeSensor } from 'css-element-queries';\n\n/**\n * All organs that will eventually be displayed in the app\n */\nexport const ALL_POSSIBLE_ORGANS = [\n  {\n    src: 'app:skin',\n    organ: 'Skin',\n    name: 'Skin',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002097'\n  },\n  {\n    src: 'app:brain',\n    organ: 'Brain',\n    name: 'Brain',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000955'\n  },\n  {\n    disabled: true,\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000029'\n  },\n  {\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002509'\n  },\n  {\n    disabled: true,\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000970'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004548'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004549'\n  },\n  {\n    disabled: true,\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0003889'\n  },\n  {\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001303'\n  },\n  {\n    src: 'app:fallopian-tube-right',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001302'\n  },\n  {\n    src: 'app:heart',\n    organ: 'Heart',\n    name: 'Heart',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000948'\n  },\n  {\n    disabled: true,\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002113'\n  },\n  {\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004538'\n  },\n  {\n    src: 'app:kidney-right',\n    organ: 'Kidney',\n    name: 'Kidney, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004539'\n  },\n  {\n    disabled: true,\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001465'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/FMA_24978'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/FMA_24977'\n  },\n  {\n    src: 'app:liver',\n    organ: 'Liver',\n    name: 'Liver',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002107'\n  },\n  {\n    disabled: true,\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002048'\n  },\n  {\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001004'\n  },\n  {\n    disabled: true,\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000992'\n  },\n  {\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/FMA_7214'\n  },\n  {\n    src: 'app:ovary-right',\n    organ: 'Ovary',\n    name: 'Ovary, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/FMA_7213'\n  },\n  {\n    src: 'app:pancreas',\n    organ: 'Pancreas',\n    name: 'Pancreas',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001264'\n  },\n  {\n    src: 'app:pelvis-f',\n    organ: 'Pelvis',\n    name: 'Pelvis',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001270'\n  },\n  {\n    src: 'app:placenta',\n    organ: 'Placenta',\n    name: 'Placenta',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001987'\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002367',\n    disabled: true\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000079'\n  },\n  {\n    src: 'app:small-intestine',\n    organ: 'Small Intestine',\n    name: 'Small Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002108'\n  },\n  {\n    src: 'app:large-intestine',\n    organ: 'Large Intestine',\n    name: 'Large Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000059'\n  },\n  {\n    src: 'app:spinal-cord',\n    organ: 'Spinal Cord',\n    name: 'Spinal Cord',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002240'\n  },\n  {\n    src: 'app:spleen',\n    organ: 'Spleen',\n    name: 'Spleen',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002106'\n  },\n  {\n    src: 'app:thymus',\n    organ: 'Thymus',\n    name: 'Thymus',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002370'\n  },\n  {\n    disabled: true,\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000056'\n  },\n  {\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001223'\n  },\n  {\n    src: 'app:ureter-right',\n    organ: 'Ureter',\n    name: 'Ureter, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001222'\n  },\n  {\n    src: 'app:bladder',\n    organ: 'Urinary Bladder',\n    name: 'Urinary Bladder',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001255'\n  },\n  {\n    src: 'app:uterus',\n    organ: 'Uterus',\n    name: 'Uterus',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000995'\n  },\n  {\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004537'\n  },\n  {\n    disabled: true,\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002049'\n  }\n].sort((a, b) => a.name.localeCompare(b.name)) as OrganInfo[];\n\n/**\n * All organs which have not been disabled\n */\nexport const ALL_ORGANS = ALL_POSSIBLE_ORGANS.filter(organ => organ.disabled !== true);\n\n/**\n * Contains the organ name and url of the icon svg\n */\nexport interface OrganInfo {\n\n  /**\n   * Used to fetch the url of the organ icon\n   */\n  src: string;\n\n  /**\n   * Label to display for the organ\n   */\n  name: string;\n\n  /**\n   * Name of the organ (to help match organs with left / right)\n   */\n  organ: string;\n\n  /**\n   * True if the icon is disabled\n   */\n  disabled?: boolean;\n\n  /**\n   * Used for paired organs\n   */\n  side?: 'left' | 'right';\n\n  /**\n   * True if applies to both sexes\n   */\n  hasSex?: boolean;\n\n  /**\n   * Used for single sex only organs\n   */\n  sex?: 'male' | 'female';\n\n  /**\n   * UBERON id for the organ\n   */\n  id?: string;\n}\n\n/**\n * Organ carousel for selecting the organ to be viewed\n */\n@Component({\n  selector: 'ccf-organ-selector',\n  templateUrl: './organ-selector.component.html',\n  styleUrls: ['./organ-selector.component.scss']\n})\nexport class OrganSelectorComponent implements AfterViewInit, OnChanges, OnDestroy {\n  /** HTML class */\n  @HostBinding('class') readonly clsName = 'ccf-organ-selector';\n\n  @ViewChild('carouselContainer', { static: true }) carouselContainer: ElementRef;\n  @ViewChild('itemlist', { static: true }) itemList: ElementRef;\n  @ViewChild('itemcontainer', { static: true }) itemContainer: ElementRef;\n\n  /**\n   * If multiple selections should be allowed\n   */\n  @Input() multiselect = false;\n\n  @Input() displayErrors = false;\n\n  /**\n   * List of organs in the carousel\n   */\n  @Input() organList: OrganInfo[] = ALL_ORGANS;\n\n  /**\n   * Currently selected organ\n   */\n  @Input() selectedOrgans: OrganInfo[] = [];\n\n  /**\n   * If the organ selector is expanded\n   */\n  @Input() expanded = false;\n\n  /**\n   * Emits the name of the organ when selected\n   */\n  @Output() readonly organsChanged = new EventEmitter();\n\n  /**\n   * Determines whether the carousel is at the beginning\n   */\n  onLeft = true;\n\n  /**\n   * Determines whether the carousel is at the end\n   */\n  onRight = false;\n\n  /**\n   * Handles scrolling behavior\n   */\n  timeoutHandler?: unknown;\n\n  /**\n   * Distance the carousel moves in each shift (px)\n   */\n  step = 72;\n\n  /**\n   * Detects resizing of carousel\n   */\n  private sensor: ResizeSensor;\n\n  // eslint-disable-next-line\n  @Input()\n  set occurenceData(value: Record) {\n    // eslint-disable-next-line\n    this._occurenceData = value;\n  }\n\n  get occurenceData(): Record {\n    // eslint-disable-next-line\n    return this._occurenceData;\n  }\n\n  private _occurenceData: Record;\n\n  /**\n   * Set resize sensor on carousel\n   */\n  ngAfterViewInit(): void {\n    const { carouselContainer } = this;\n    this.sensor = new ResizeSensor(carouselContainer.nativeElement, () => {\n      this.set();\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('organList' in changes) {\n      this.set();\n    }\n  }\n\n  /**\n   * Detaches resize sensor\n   */\n  ngOnDestroy(): void {\n    this.sensor.detach();\n  }\n\n  /**\n   * Decides whether or not an error has occured,\n   * used to display or hide error message.\n   */\n  get error(): boolean {\n    if (!this.displayErrors || this.selectedOrgans.length === 0) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Scrolls the carousel left or right by one step.\n   * Prevents scrolling past the beginning or end of the carousel.\n   *\n   * @param dir Direction to be scrolled\n   */\n  shift(dir: string): void {\n    const { itemList } = this;\n    let val = parseInt(itemList.nativeElement.style.left, 10) || 0;\n    if (this.onLeft && dir === 'left' || this.onRight && dir === 'right') {\n      return;\n    }\n    val = dir === 'right' ? val - this.step : val + this.step;\n    itemList.nativeElement.style.left = val + 'px';\n    this.setLeftRight(val);\n  }\n\n  /**\n   * Scrolls carousel continuously\n   *\n   * @param dir Direction to be scrolled\n   */\n  scroll(dir: string): void {\n    this.timeoutHandler = setInterval(() => {\n      this.shift(dir);\n    }, 200);\n  }\n\n  /**\n   * Stops carousel scrolling\n   */\n  stopScroll(): void {\n    if (this.timeoutHandler) {\n      // Minor hack to make typescript happy when there are mixed NodeJS and regular typings\n      clearInterval(this.timeoutHandler as undefined);\n      this.timeoutHandler = undefined;\n    }\n  }\n\n  /**\n   * Sets and emits currently selected organ(s)\n   *\n   * @param organ The organ selected\n   */\n  selectOrgan(organ: OrganInfo): void {\n    if (!this.multiselect) {\n      this.selectedOrgans = [organ];\n    } else {\n      if (this.selectedOrgans.includes(organ)) {\n        this.selectedOrgans = this.selectedOrgans.filter((selectedOrgan) => organ !== selectedOrgan);\n      } else {\n        this.selectedOrgans = this.selectedOrgans.concat([organ]);\n      }\n    }\n    this.organsChanged.emit(this.selectedOrgans);\n  }\n\n  /**\n   * Determines whether an icon represents a currently selected organ\n   *\n   * @param icon The icon of interest\n   * @returns true if selected\n   */\n  isSelected(organ: OrganInfo): boolean {\n    return this.selectedOrgans.includes(organ) ? true : false;\n  }\n\n  /**\n   * Disables scrolling if the list of organs is smaller than the container, otherwise sets onLeft and onRight as normal\n   */\n  set(): void {\n    const { itemList, itemContainer, carouselContainer } = this;\n    const val = parseInt(itemList.nativeElement.style.left, 10) || 0;\n    if (itemList.nativeElement.offsetWidth >= this.organList.length * this.step) {\n      itemList.nativeElement.style.left = '0px';\n      this.onLeft = true;\n      this.onRight = true;\n    } else {\n      this.setLeftRight(val);\n      const listLength = this.step * Math.floor(carouselContainer.nativeElement.offsetWidth / this.step) - 64;\n      itemContainer.nativeElement.style.width = `${listLength}px`;\n    }\n  }\n\n  /**\n   * Responsively sets width of the item container\n   */\n  setWidth(): void {\n    const { itemContainer, carouselContainer } = this;\n    const listLength = this.step * Math.floor(carouselContainer.nativeElement.offsetWidth / this.step) - 64;\n    itemContainer.nativeElement.style.width = `${listLength}px`;\n  }\n\n  /**\n   * Sets onLeft and onRight according to where the item list is scrolled\n   */\n  setLeftRight(val: number): void {\n    const { itemContainer } = this;\n    this.onLeft = val === 0 ? true : false;\n    this.onRight = val \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrganSelectorModule.html":{"url":"modules/OrganSelectorModule.html","title":"module - OrganSelectorModule","body":"\n                   \n\n\n\n\n    Modules\n    OrganSelectorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_OrganSelectorModule\n\n\n\ncluster_OrganSelectorModule_declarations\n\n\n\ncluster_OrganSelectorModule_exports\n\n\n\n\nOrganSelectorComponent\n\nOrganSelectorComponent\n\n\n\nOrganSelectorModule\n\nOrganSelectorModule\n\nOrganSelectorModule -->\n\nOrganSelectorComponent->OrganSelectorModule\n\n\n\n\n\nOrganSelectorComponent \n\nOrganSelectorComponent \n\nOrganSelectorComponent  -->\n\nOrganSelectorModule->OrganSelectorComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/organ-selector/organ-selector.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            OrganSelectorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            OrganSelectorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { OrganSelectorComponent } from './organ-selector.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  declarations: [OrganSelectorComponent],\n  imports: [\n    CommonModule,\n    MatIconModule,\n    MatTooltipModule\n  ],\n  exports: [OrganSelectorComponent]\n})\nexport class OrganSelectorModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PanelData.html":{"url":"interfaces/PanelData.html","title":"interface - PanelData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PanelData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            content\n                                        \n                                \n                                \n                                        \n                                            infoTitle\n                                        \n                                \n                                \n                                        \n                                            videoID\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        content:         DocumentationContent[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DocumentationContent[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        infoTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        infoTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        videoID\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        videoID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n\n/**\n * The structure to define how each documentation panel\n * should look like in the info dialog\n */\n\nexport interface DocumentationContent {\n  /** Title of the panel */\n  title: string;\n\n  /** Content inside the panel */\n  content: string;\n}\n\nexport interface PanelData {\n  content: DocumentationContent[];\n  infoTitle: string;\n  videoID: string;\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InfoButtonService {\n\n  /** Subject to send the documentation data to the component when its done processing */\n  panelContent: BehaviorSubject = new BehaviorSubject({ content: [], infoTitle: '', videoID: '' });\n\n  constructor(private readonly http: HttpClient) { }\n\n  /**\n   * Read the markdown file to split it by h1 tags and update the panel title and videoID.\n   */\n  updateData(url: string, videoID: string, infoTitle: string): void {\n    this.http.get(url, { responseType: 'text' }).subscribe((data: string) => {\n      const panelContent: PanelData = { content: this.parseMarkdown(data), infoTitle: infoTitle, videoID: videoID };\n      this.panelContent.next(panelContent);\n    });\n  }\n\n  /**\n   * Function to parse the markdown file and convert to\n   * documentation content used by the info-dialog panels\n   *\n   * @param data Markdown file sent as a string after reading it\n   * @returns array of DocumentationContent\n   */\n  parseMarkdown(data: string): DocumentationContent[] {\n    const markdownContent: DocumentationContent[] = [];\n    const splitByHeaderTag: string[] = data.split('# ');\n    for (const split of splitByHeaderTag) {\n      if (split.length) {\n        const newLine = split.includes('\\n\\n') ? '\\n\\n' : '\\r\\n\\r\\n';\n        const headerAndContent: string[] = split.split(newLine);\n        markdownContent.push({\n          title: headerAndContent[0],\n          content: headerAndContent.splice(1).join(newLine)\n        });\n      }\n    }\n    return markdownContent;\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluckUniqueOptions.html":{"url":"interfaces/PluckUniqueOptions.html","title":"interface - PluckUniqueOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PluckUniqueOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n        \n\n\n            \n                Description\n            \n            \n                Options for pluckUnique operator\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            compare\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        compare\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        compare:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom comparison for determining distinct values\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { OperatorFunction } from 'rxjs';\nimport { distinctUntilChanged, pluck, shareReplay } from 'rxjs/operators';\n\n\n/**\n * Options for `pluckUnique` operator\n */\nexport interface PluckUniqueOptions {\n  /**\n   * Custom comparison for determining distinct values\n   */\n  compare?: (lhs: T, rhs: T) => boolean;\n}\n\n\n/**\n * Default options\n */\nconst DEFAULT_OPTIONS: PluckUniqueOptions = {};\n\n\n/**\n * Combines the functionaliy of `pluck` and `distinctUntilChanged`\n * as well as adding a `shareReplay`.\n *\n * @param {...string} props Properties to pluck\n * @param [opts] Additional options\n * @returns An `Observable` operator\n */\nexport function pluckUnique(k1: K1, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, k4: K4, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6, opts?: PluckUniqueOptions): OperatorFunction;\nexport function pluckUnique(...props: [string, ...string[]]): OperatorFunction;\nexport function pluckUnique(...props: [string, ...string[], PluckUniqueOptions]): OperatorFunction;\nexport function pluckUnique(...props: unknown[]): OperatorFunction {\n  const last = props[props.length - 1];\n  let keys = props as string[];\n  let opts = DEFAULT_OPTIONS;\n\n  if (typeof last === 'object') {\n    opts = last as PluckUniqueOptions;\n    keys = keys.slice(0, -1);\n  }\n\n  return source => source.pipe(\n    pluck(...keys),\n    distinctUntilChanged(opts.compare),\n    shareReplay(1)\n  );\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Segment.html":{"url":"interfaces/Segment.html","title":"interface - Segment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Segment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n        \n\n\n            \n                Description\n            \n            \n                A segment of text with additional classes and styles\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            classes\n                                        \n                                \n                                \n                                        \n                                            styles\n                                        \n                                \n                                \n                                        \n                                            text\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        classes:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Classes to add to the text container\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        styles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        styles:     Record\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Record\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Styles to set on the text container\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The piece of text to display\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { DecoratedRange, normalize } from './decorated-range';\n\n\n// Reexport DecoratedRange\nexport { DecoratedRange };\n\n/** A segment of text with additional classes and styles */\ninterface Segment {\n  /** The piece of text to display */\n  text: string;\n  /** Classes to add to the text container */\n  classes: string[];\n  /** Styles to set on the text container */\n  styles: Record;\n}\n\n/** Represents an operation to apply to the stack when building segments */\ninterface StackOp {\n  /** Text index at which the changes takes effect */\n  index: number;\n  /** Decorations to add */\n  added: DecoratedRange[];\n  /** Decorations to remove */\n  removed: DecoratedRange[];\n}\n\n\n/**\n * Class to display text with additional styling on ranges of the text.\n */\n@Component({\n  selector: 'ccf-decorated-text',\n  templateUrl: './decorated-text.component.html',\n  styleUrls: ['./decorated-text.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DecoratedTextComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-decorated-text';\n\n  /**\n   * Text to display\n   */\n  @Input() text: string;\n\n  /**\n   * Classes and styles to apply to ranges of the text.\n   * For overlapping ranges later values takes precedence.\n   */\n  @Input() decorations?: Partial[];\n\n  /**\n   * Computed segments of text with decorations resolved.\n   */\n  segments: Segment[] = [];\n\n  /**\n   * Apply changes and recalculate cached values.\n   *\n   * @param changes Instance properties that have changed\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('text' in changes || 'decorations' in changes) {\n      this.segments = this.createSegments();\n    }\n  }\n\n  /**\n   * Creates an array of decorated text segments based on\n   * the latest text and decorations.\n   *\n   * @returns The new segments\n   */\n  private createSegments(): Segment[] {\n    const { text } = this;\n    if (!text) { // No styling can be applied to empty text fields\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const decorations = this.getNormalizedDecorations();\n    if (decorations.length === 0) { // No styling available\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const stackOps = this.createStackOps(decorations);\n    const segments: Segment[] = [];\n    let stack: DecoratedRange[] = [];\n    let lastIndex = 0;\n\n    // If the first op starts at index zero apply stack changes\n    // but don't push a segment by shifing out the first op\n    if (stackOps[0].index === 0) {\n      stack = this.updateStack(stack, stackOps.shift() as StackOp);\n    }\n\n    // Build segments based on the stack operations\n    for (const op of stackOps) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex, op.index), stack\n      ));\n\n      lastIndex = op.index;\n      stack = this.updateStack(stack, op);\n    }\n\n    // Push the last segment if not already done\n    if (lastIndex !== text.length) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex), stack\n      ));\n    }\n\n    return segments;\n  }\n\n  /**\n   * Creates an ordered array of stack operations to apply when building segments.\n   *\n   * @param ranges The decorated ranges to apply\n   * @returns The array of operations\n   */\n  private createStackOps(ranges: DecoratedRange[]): StackOp[] {\n    const ops: Record = {};\n    const getOp = (index: number) => (ops[index] ??= { index, added: [], removed: [] });\n\n    for (const range of ranges) {\n      getOp(range.start).added.push(range);\n      getOp(range.end).removed.push(range);\n    }\n\n    return Object.entries(ops)\n      .sort((i1, i2) => +i1[0] - +i2[0]) // Sort by index\n      .map(entry => entry[1]);\n  }\n\n  /**\n   * Applies the stack changes specified by the stack operation.\n   *\n   * @param stack The current stack\n   * @param op The operation\n   * @returns The new stack\n   */\n  private updateStack(stack: DecoratedRange[], op: StackOp): DecoratedRange[] {\n    return stack\n      .filter(item => !op.removed.includes(item))\n      // Note - A new array is created by the above filter statement\n      // so it is safe to modify it with concat\n      .concat(op.added);\n  }\n\n  /**\n   * Normalizes and filters valid decorated ranges.\n   *\n   * @returns The normalized ranges with properties filled\n   */\n  private getNormalizedDecorations(): DecoratedRange[] {\n    const { decorations = [], text: { length } } = this;\n    return decorations\n      // Turn partials into full objects\n      .map(range => normalize(range, length))\n      // Remove empty and out of bounds ranges\n      .filter(range => range.start (\n      (result, range) => result.concat(range.classes),\n      []\n    );\n    const styles = decorations.reduce(\n      (result, range) => ({ ...result, ...range.styles }),\n      {}\n    );\n\n    return { text, classes, styles };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpatialSearchListComponent.html":{"url":"components/SpatialSearchListComponent.html","title":"component - SpatialSearchListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpatialSearchListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts\n\n\n\n    \n        Description\n    \n    \n        Displays a list of spatial searches\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-spatial-search-list\n            \n\n            \n                styleUrls\n                ./spatial-search-list.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./spatial-search-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                itemId\n                            \n                            \n                                removeItem\n                            \n                            \n                                updateItemSelection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                items\n                            \n                            \n                                label\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                itemRemoved\n                            \n                            \n                                selectionChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:33\n                            \n                        \n                \n                    \n                        Items to display\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:30\n                            \n                        \n                \n                    \n                        Label for the list\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        itemRemoved\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:39\n                            \n                        \n                \n                    \n                        Emits the item that has been removed from the list\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selectionChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:36\n                            \n                        \n                \n                    \n                        Emits the new items when a selection changes\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-spatial-search-list\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-spatial-search-list'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:27\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        itemId\n                        \n                    \n                \n            \n            \n                \nitemId(_index: number, item: T)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:48\n                \n            \n\n\n            \n                \n                    Computes a unique id for an item\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Unused\n\n                                    \n                                \n                                \n                                    item\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        An item\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A unique id\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(index: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:71\n                \n            \n\n\n            \n                \n                    Removes an item from the list\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Index of the item to remove\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateItemSelection\n                        \n                    \n                \n            \n            \n                \nupdateItemSelection(index: number, selected: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:58\n                \n            \n\n\n            \n                \n                    Updates the selected state for an item\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Index of item to update\n\n                                    \n                                \n                                \n                                    selected\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        What to set the selected state to\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-spatial-search-list'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts:27\n                        \n                    \n\n            \n                \n                    HTML class\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\n\n/**\n * Base interface of items in the spatial search list\n */\nexport interface SpatialSearchListItem {\n  /** Whether the item is selected */\n  selected: boolean;\n\n  /** Description displayed for the item */\n  description: string;\n}\n\n\n/**\n * Displays a list of spatial searches\n */\n@Component({\n  selector: 'ccf-spatial-search-list',\n  templateUrl: './spatial-search-list.component.html',\n  styleUrls: ['./spatial-search-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpatialSearchListComponent {\n  /** HTML class */\n  @HostBinding('class') readonly clsName = 'ccf-spatial-search-list';\n\n  /** Label for the list */\n  @Input() label = '';\n\n  /** Items to display */\n  @Input() items: T[] = [];\n\n  /** Emits the new items when a selection changes */\n  @Output() readonly selectionChanged = new EventEmitter();\n\n  /** Emits the item that has been removed from the list */\n  @Output() readonly itemRemoved = new EventEmitter();\n\n  /**\n   * Computes a unique id for an item\n   *\n   * @param _index Unused\n   * @param item An item\n   * @returns A unique id\n   */\n  itemId(_index: number, item: T): string {\n    return item.description;\n  }\n\n  /**\n   * Updates the selected state for an item\n   *\n   * @param index Index of item to update\n   * @param selected What to set the selected state to\n   */\n  updateItemSelection(index: number, selected: boolean): void {\n    const newItems = this.items = [...this.items];\n    newItems[index] = { ...newItems[index], selected };\n\n    const selectedItems = newItems.filter(item => item.selected);\n    this.selectionChanged.emit(selectedItems);\n  }\n\n  /**\n   * Removes an item from the list\n   *\n   * @param index Index of the item to remove\n   */\n  removeItem(index: number): void {\n    const newItems = this.items = [...this.items];\n    const [item] = newItems.splice(index, 1);\n    this.itemRemoved.emit(item);\n  }\n}\n\n    \n\n    \n        \n  {{ label }}\n\n\n\n  \n    \n      \n        {{ item.description }}\n      \n\n      \n\n      \n        delete_outlined\n      \n    \n  \n\n    \n\n    \n                \n                    ./spatial-search-list.component.scss\n                \n                :host {\n  display: block;\n\n  .label {\n    margin-bottom: 0.5rem;\n    font-weight: bold;\n  }\n\n  .item {\n    height: 2rem;\n\n    .item-content {\n      display: flex;\n      align-items: center;\n      width: 100%;\n      height: 2rem;\n\n      .delete {\n        width: 2rem;\n        height: 2rem;\n        line-height: 2rem;\n      }\n\n      .filler {\n        flex-grow: 1;\n      }\n    }\n\n    // Remove default padding from material list item\n    & > ::ng-deep * {\n      padding: 0 !important;\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ label }}                    {{ item.description }}                          delete_outlined            '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CallToActionBehaviorComponent', 'selector': 'ccf-call-to-action-behavior'},{'name': 'CallToActionComponent', 'selector': 'ccf-call-to-action'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'},{'name': 'XYZPositionComponent', 'selector': 'ccf-xyz-position'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'SpatialSearchListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpatialSearchListItem.html":{"url":"interfaces/SpatialSearchListItem.html","title":"interface - SpatialSearchListItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SpatialSearchListItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Base interface of items in the spatial search list\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            selected\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Description displayed for the item\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selected\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        selected:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Whether the item is selected\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Input, Output } from '@angular/core';\n\n\n/**\n * Base interface of items in the spatial search list\n */\nexport interface SpatialSearchListItem {\n  /** Whether the item is selected */\n  selected: boolean;\n\n  /** Description displayed for the item */\n  description: string;\n}\n\n\n/**\n * Displays a list of spatial searches\n */\n@Component({\n  selector: 'ccf-spatial-search-list',\n  templateUrl: './spatial-search-list.component.html',\n  styleUrls: ['./spatial-search-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SpatialSearchListComponent {\n  /** HTML class */\n  @HostBinding('class') readonly clsName = 'ccf-spatial-search-list';\n\n  /** Label for the list */\n  @Input() label = '';\n\n  /** Items to display */\n  @Input() items: T[] = [];\n\n  /** Emits the new items when a selection changes */\n  @Output() readonly selectionChanged = new EventEmitter();\n\n  /** Emits the item that has been removed from the list */\n  @Output() readonly itemRemoved = new EventEmitter();\n\n  /**\n   * Computes a unique id for an item\n   *\n   * @param _index Unused\n   * @param item An item\n   * @returns A unique id\n   */\n  itemId(_index: number, item: T): string {\n    return item.description;\n  }\n\n  /**\n   * Updates the selected state for an item\n   *\n   * @param index Index of item to update\n   * @param selected What to set the selected state to\n   */\n  updateItemSelection(index: number, selected: boolean): void {\n    const newItems = this.items = [...this.items];\n    newItems[index] = { ...newItems[index], selected };\n\n    const selectedItems = newItems.filter(item => item.selected);\n    this.selectionChanged.emit(selectedItems);\n  }\n\n  /**\n   * Removes an item from the list\n   *\n   * @param index Index of the item to remove\n   */\n  removeItem(index: number): void {\n    const newItems = this.items = [...this.items];\n    const [item] = newItems.splice(index, 1);\n    this.itemRemoved.emit(item);\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpatialSearchListModule.html":{"url":"modules/SpatialSearchListModule.html","title":"module - SpatialSearchListModule","body":"\n                   \n\n\n\n\n    Modules\n    SpatialSearchListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SpatialSearchListModule\n\n\n\ncluster_SpatialSearchListModule_exports\n\n\n\ncluster_SpatialSearchListModule_declarations\n\n\n\n\nSpatialSearchListComponent\n\nSpatialSearchListComponent\n\n\n\nSpatialSearchListModule\n\nSpatialSearchListModule\n\nSpatialSearchListModule -->\n\nSpatialSearchListComponent->SpatialSearchListModule\n\n\n\n\n\nSpatialSearchListComponent \n\nSpatialSearchListComponent \n\nSpatialSearchListComponent  -->\n\nSpatialSearchListModule->SpatialSearchListComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpatialSearchListComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SpatialSearchListComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\n\nimport { SpatialSearchListComponent } from './spatial-search-list.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n\n    MatButtonModule,\n    MatCheckboxModule,\n    MatIconModule,\n    MatListModule\n  ],\n  declarations: [SpatialSearchListComponent],\n  exports: [SpatialSearchListComponent]\n})\nexport class SpatialSearchListModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StackOp.html":{"url":"interfaces/StackOp.html","title":"interface - StackOp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StackOp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an operation to apply to the stack when building segments\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            added\n                                        \n                                \n                                \n                                        \n                                            index\n                                        \n                                \n                                \n                                        \n                                            removed\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        added\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        added:         DecoratedRange[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DecoratedRange[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Decorations to add\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Text index at which the changes takes effect\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removed:         DecoratedRange[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DecoratedRange[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Decorations to remove\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { DecoratedRange, normalize } from './decorated-range';\n\n\n// Reexport DecoratedRange\nexport { DecoratedRange };\n\n/** A segment of text with additional classes and styles */\ninterface Segment {\n  /** The piece of text to display */\n  text: string;\n  /** Classes to add to the text container */\n  classes: string[];\n  /** Styles to set on the text container */\n  styles: Record;\n}\n\n/** Represents an operation to apply to the stack when building segments */\ninterface StackOp {\n  /** Text index at which the changes takes effect */\n  index: number;\n  /** Decorations to add */\n  added: DecoratedRange[];\n  /** Decorations to remove */\n  removed: DecoratedRange[];\n}\n\n\n/**\n * Class to display text with additional styling on ranges of the text.\n */\n@Component({\n  selector: 'ccf-decorated-text',\n  templateUrl: './decorated-text.component.html',\n  styleUrls: ['./decorated-text.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class DecoratedTextComponent implements OnChanges {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-decorated-text';\n\n  /**\n   * Text to display\n   */\n  @Input() text: string;\n\n  /**\n   * Classes and styles to apply to ranges of the text.\n   * For overlapping ranges later values takes precedence.\n   */\n  @Input() decorations?: Partial[];\n\n  /**\n   * Computed segments of text with decorations resolved.\n   */\n  segments: Segment[] = [];\n\n  /**\n   * Apply changes and recalculate cached values.\n   *\n   * @param changes Instance properties that have changed\n   */\n  ngOnChanges(changes: SimpleChanges): void {\n    if ('text' in changes || 'decorations' in changes) {\n      this.segments = this.createSegments();\n    }\n  }\n\n  /**\n   * Creates an array of decorated text segments based on\n   * the latest text and decorations.\n   *\n   * @returns The new segments\n   */\n  private createSegments(): Segment[] {\n    const { text } = this;\n    if (!text) { // No styling can be applied to empty text fields\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const decorations = this.getNormalizedDecorations();\n    if (decorations.length === 0) { // No styling available\n      return [this.makeUndecoratedSegment(text)];\n    }\n\n    const stackOps = this.createStackOps(decorations);\n    const segments: Segment[] = [];\n    let stack: DecoratedRange[] = [];\n    let lastIndex = 0;\n\n    // If the first op starts at index zero apply stack changes\n    // but don't push a segment by shifing out the first op\n    if (stackOps[0].index === 0) {\n      stack = this.updateStack(stack, stackOps.shift() as StackOp);\n    }\n\n    // Build segments based on the stack operations\n    for (const op of stackOps) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex, op.index), stack\n      ));\n\n      lastIndex = op.index;\n      stack = this.updateStack(stack, op);\n    }\n\n    // Push the last segment if not already done\n    if (lastIndex !== text.length) {\n      segments.push(this.makeDecoratedSegment(\n        text.slice(lastIndex), stack\n      ));\n    }\n\n    return segments;\n  }\n\n  /**\n   * Creates an ordered array of stack operations to apply when building segments.\n   *\n   * @param ranges The decorated ranges to apply\n   * @returns The array of operations\n   */\n  private createStackOps(ranges: DecoratedRange[]): StackOp[] {\n    const ops: Record = {};\n    const getOp = (index: number) => (ops[index] ??= { index, added: [], removed: [] });\n\n    for (const range of ranges) {\n      getOp(range.start).added.push(range);\n      getOp(range.end).removed.push(range);\n    }\n\n    return Object.entries(ops)\n      .sort((i1, i2) => +i1[0] - +i2[0]) // Sort by index\n      .map(entry => entry[1]);\n  }\n\n  /**\n   * Applies the stack changes specified by the stack operation.\n   *\n   * @param stack The current stack\n   * @param op The operation\n   * @returns The new stack\n   */\n  private updateStack(stack: DecoratedRange[], op: StackOp): DecoratedRange[] {\n    return stack\n      .filter(item => !op.removed.includes(item))\n      // Note - A new array is created by the above filter statement\n      // so it is safe to modify it with concat\n      .concat(op.added);\n  }\n\n  /**\n   * Normalizes and filters valid decorated ranges.\n   *\n   * @returns The normalized ranges with properties filled\n   */\n  private getNormalizedDecorations(): DecoratedRange[] {\n    const { decorations = [], text: { length } } = this;\n    return decorations\n      // Turn partials into full objects\n      .map(range => normalize(range, length))\n      // Remove empty and out of bounds ranges\n      .filter(range => range.start (\n      (result, range) => result.concat(range.classes),\n      []\n    );\n    const styles = decorations.reduce(\n      (result, range) => ({ ...result, ...range.styles }),\n      {}\n    );\n\n    return { text, classes, styles };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StoreDebugComponent.html":{"url":"components/StoreDebugComponent.html","title":"component - StoreDebugComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StoreDebugComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts\n\n\n\n    \n        Description\n    \n    \n        Simple component for displaying the current values in the data store.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-store-debug\n            \n\n            \n                styleUrls\n                ./store-debug.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./store-debug.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Private\n                                root\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:37\n                            \n                        \n\n                \n                    \n                            Creates an instance of store debug component.\nSets up the store data listeners.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The data store.\n\n                                                        \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Change detection for this component.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-store-debug\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-store-debug'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:58\n                \n            \n\n\n            \n                \n                    Cleans up subscriptions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-store-debug'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:21\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        root\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record>\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:34\n                        \n                    \n\n            \n                \n                    Latest store data\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:37\n                        \n                    \n\n            \n                \n                    Subscriptions managed by this component\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n                \n                    \n                        getdata()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts:26\n                                \n                            \n                    \n                        \n                                Gets the store data as a list of state name to key-value pairs\n\n\n                                \n                                    Returns :         KVList\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnDestroy, ChangeDetectorRef, HostBinding } from '@angular/core';\nimport { Store } from '@ngxs/store';\nimport { Subscription } from 'rxjs';\n\n/** Key-Value pair */\nexport type KVPair = [string, T];\n/** Array of Key-Value pairs */\nexport type KVList = KVPair[];\n\n/**\n * Simple component for displaying the current values in the data store.\n */\n@Component({\n  selector: 'ccf-store-debug',\n  templateUrl: './store-debug.component.html',\n  styleUrls: ['./store-debug.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StoreDebugComponent implements OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-store-debug';\n\n  /**\n   * Gets the store data as a list of state name to key-value pairs\n   */\n  get data(): KVList {\n    const states: KVList> = Object.entries(this.root);\n    const stateValues: KVList = states.map(([key, values]) => [key, Object.entries(values)]);\n    const statesWithData = stateValues.filter(([_key, values]) => values.length > 0);\n    return statesWithData;\n  }\n\n  /** Latest store data */\n  private root: Record> = {};\n\n  /** Subscriptions managed by this component */\n  private subscriptions = new Subscription();\n\n  /**\n   * Creates an instance of store debug component.\n   * Sets up the store data listeners.\n   *\n   * @param store The data store.\n   * @param cdr Change detection for this component.\n   */\n  constructor(store: Store, cdr: ChangeDetectorRef) {\n    const sub = store.subscribe(root => {\n      this.root = root as Record>;\n      cdr.markForCheck();\n    });\n\n    this.subscriptions.add(sub);\n  }\n\n  /**\n   * Cleans up subscriptions\n   */\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n\n    \n\n    \n        \n  {{ state[0] }}\n  \n    \n      {{ kv[0] }}: {{ kv[1] | json }}\n    \n  \n\n\n    \n\n    \n                \n                    ./store-debug.component.scss\n                \n                :host {\n  display: block;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ state[0] }}            {{ kv[0] }}: {{ kv[1] | json }}      '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CallToActionBehaviorComponent', 'selector': 'ccf-call-to-action-behavior'},{'name': 'CallToActionComponent', 'selector': 'ccf-call-to-action'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'},{'name': 'XYZPositionComponent', 'selector': 'ccf-xyz-position'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'StoreDebugComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StoreDebugModule.html":{"url":"modules/StoreDebugModule.html","title":"module - StoreDebugModule","body":"\n                   \n\n\n\n\n    Modules\n    StoreDebugModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StoreDebugModule\n\n\n\ncluster_StoreDebugModule_exports\n\n\n\ncluster_StoreDebugModule_declarations\n\n\n\n\nStoreDebugComponent\n\nStoreDebugComponent\n\n\n\nStoreDebugModule\n\nStoreDebugModule\n\nStoreDebugModule -->\n\nStoreDebugComponent->StoreDebugModule\n\n\n\n\n\nStoreDebugComponent \n\nStoreDebugComponent \n\nStoreDebugComponent  -->\n\nStoreDebugModule->StoreDebugComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/store-debug/store-debug.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StoreDebugComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StoreDebugComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { StoreDebugComponent } from './store-debug.component';\n\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [StoreDebugComponent],\n  exports: [StoreDebugComponent]\n})\nexport class StoreDebugModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextSearchComponent.html":{"url":"components/TextSearchComponent.html","title":"component - TextSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TextSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n\n\n\n    \n        Description\n    \n    \n        A text search bar with optional autocompletion functionality.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-text-search\n            \n\n            \n                styleUrls\n                ./text-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./text-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Readonly\n                                controller\n                            \n                            \n                                    Readonly\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                getOptions\n                            \n                            \n                                optionDisplay\n                            \n                            \n                                optionId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoCompleter\n                            \n                            \n                                maxOptions\n                            \n                            \n                                placeholder\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                optionSelected\n                            \n                            \n                                valueChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(defaultMaxOptions: number)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:100\n                            \n                        \n\n                \n                    \n                            Creates an instance of text search component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        defaultMaxOptions\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The default value for maxOptions\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoCompleter\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:76\n                            \n                        \n                \n                    \n                        Function providing the autocomplete suggestions.\nReceives the latest search bar text and the maximum of suggestions to provide.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        maxOptions\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:70\n                            \n                        \n                \n                    \n                        Maximum number of autocomplete suggestions to show simultaneously\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Search...'\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:53\n                            \n                        \n                \n                    \n                        Placeholder text for the search bar\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:59\n                            \n                        \n                \n                    \n                        The text to show on the search bar\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        optionSelected\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:86\n                            \n                        \n                \n                    \n                        Emits when an autocomplete option has been selected\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        valueChange\n                    \n                \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:81\n                            \n                        \n                \n                    \n                        Emits when the search bar text changes\n\n                    \n                \n            \n        \n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-text-search\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-text-search'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:48\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        getOptions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getOptions(search: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Bind()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:120\n                \n            \n\n\n            \n                \n                    Fetches the latest autocomplete suggestions for the provided search text.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    search\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The search text to find suggestions for\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        The found suggestions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionDisplay\n                        \n                    \n                \n            \n            \n                \noptionDisplay(option: AutoCompleteOption | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:139\n                \n            \n\n\n            \n                \n                    Text to show in search bar when an autocomplete option is selected.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    option\n                                    \n                                                AutoCompleteOption | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The autocomplete option\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The displayed text\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        optionId\n                        \n                    \n                \n            \n            \n                \noptionId(_index: number, option: AutoCompleteOption)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:150\n                \n            \n\n\n            \n                \n                    Gets an unique identifier for an autocomplete option object.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    _index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Unused\n\n                                    \n                                \n                                \n                                    option\n                                    \n                                                AutoCompleteOption\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The option object\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-text-search'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:48\n                        \n                    \n\n            \n                \n                    HTML class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        controller\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:91\n                        \n                    \n\n            \n                \n                    Form controller for search bar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (this.controller.valueChanges as Observable).pipe(\n    startWith(''),\n    distinctUntilChanged(),\n    switchMap(this.getOptions)\n  )\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:96\n                        \n                    \n\n            \n                \n                    Emits the latest autocomplete suggestions\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n                \n                    \n                        getvalue()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:59\n                                \n                            \n                    \n                        \n                                The text to show on the search bar\n\n\n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setvalue(val: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/text-search/text-search.component.ts:63\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            val\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy, Component, EventEmitter, HostBinding, Inject, InjectionToken, Input, Output,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { bind as Bind } from 'bind-decorator';\nimport { from, Observable, ObservableInput } from 'rxjs';\nimport { distinctUntilChanged, map, startWith, switchMap, take } from 'rxjs/operators';\n\nimport { DecoratedRange } from '../decorated-text/decorated-range';\n\n\n/** A single suggestion to show in autocomplete  */\nexport interface AutoCompleteOption {\n  /** A unique id */\n  id: unknown;\n  /** The displayed label */\n  label: string;\n  /** Optional styling of the label */\n  decorations?: Partial[];\n}\n\n/**\n * Token to provide a default for the maximum number of\n * autocomplete suggestions to show at the same time.\n */\nexport const DEFAULT_MAX_OPTIONS = new InjectionToken(\n  'Maximum number of autocomplete options displayed',\n  {\n    providedIn: 'root',\n    factory(): number {\n      return 10;\n    }\n  }\n);\n\n\n/**\n * A text search bar with optional autocompletion functionality.\n */\n@Component({\n  selector: 'ccf-text-search',\n  templateUrl: './text-search.component.html',\n  styleUrls: ['./text-search.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TextSearchComponent {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-text-search';\n\n  /**\n   * Placeholder text for the search bar\n   */\n  @Input() placeholder = 'Search...';\n\n  /**\n   * The text to show on the search bar\n   */\n  @Input()\n  get value(): string {\n    return this.controller.value as string;\n  }\n\n  set value(val: string) {\n    this.controller.setValue(val, { emitEvent: false });\n  }\n\n  /**\n   * Maximum number of autocomplete suggestions to show simultaneously\n   */\n  @Input() maxOptions?: number;\n\n  /**\n   * Function providing the autocomplete suggestions.\n   * Receives the latest search bar text and the maximum of suggestions to provide.\n   */\n  @Input() autoCompleter?: (search: string, max: number) => ObservableInput;\n\n  /**\n   * Emits when the search bar text changes\n   */\n  @Output() readonly valueChange: Observable;\n\n  /**\n   * Emits when an autocomplete option has been selected\n   */\n  @Output() readonly optionSelected = new EventEmitter();\n\n  /**\n   * Form controller for search bar\n   */\n  readonly controller = new FormControl();\n\n  /**\n   * Emits the latest autocomplete suggestions\n   */\n  readonly options = (this.controller.valueChanges as Observable).pipe(\n    startWith(''),\n    distinctUntilChanged(),\n    switchMap(this.getOptions)\n  );\n\n  /**\n   * Creates an instance of text search component.\n   *\n   * @param defaultMaxOptions The default value for `maxOptions`\n   */\n  constructor(\n    @Inject(DEFAULT_MAX_OPTIONS) private readonly defaultMaxOptions: number\n  ) {\n    this.valueChange = this.controller.valueChanges;\n  }\n\n  /**\n   * Fetches the latest autocomplete suggestions for the provided search text.\n   *\n   * @param search The search text to find suggestions for\n   * @returns The found suggestions\n   */\n  @Bind\n  private async getOptions(search: string): Promise {\n    const { autoCompleter, maxOptions = this.defaultMaxOptions } = this;\n    if (!autoCompleter || maxOptions  array.length \n    \n\n    \n        \n  \n    \n      \n    \n\n    \n\n    \n      \n        \n        \n      \n    \n\n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./text-search.component.scss\n                \n                :host {\n  display: block;\n\n  .form .form-field {\n    width: 100%;\n\n    .input {\n      margin-left: 0.5rem;\n    }\n  }\n\n  ::ng-deep .mat-form-field-appearance-outline {\n    .mat-form-field-wrapper {\n      margin: 0;\n\n      .mat-form-field-flex {\n        align-items: center;\n\n        .mat-form-field-infix {\n          height: 3rem;\n          border: none;\n        }\n\n        .mat-form-field-suffix {\n          top: 0;\n          border: none;\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        '\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CallToActionBehaviorComponent', 'selector': 'ccf-call-to-action-behavior'},{'name': 'CallToActionComponent', 'selector': 'ccf-call-to-action'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'},{'name': 'XYZPositionComponent', 'selector': 'ccf-xyz-position'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TextSearchModule.html":{"url":"modules/TextSearchModule.html","title":"module - TextSearchModule","body":"\n                   \n\n\n\n\n    Modules\n    TextSearchModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TextSearchModule\n\n\n\ncluster_TextSearchModule_imports\n\n\n\ncluster_TextSearchModule_exports\n\n\n\ncluster_TextSearchModule_declarations\n\n\n\n\nTextSearchComponent\n\nTextSearchComponent\n\n\n\nTextSearchModule\n\nTextSearchModule\n\nTextSearchModule -->\n\nTextSearchComponent->TextSearchModule\n\n\n\n\n\nMatPrefix \n\nMatPrefix \n\nMatPrefix  -->\n\nTextSearchModule->MatPrefix \n\n\n\n\n\nMatSuffix \n\nMatSuffix \n\nMatSuffix  -->\n\nTextSearchModule->MatSuffix \n\n\n\n\n\nTextSearchComponent \n\nTextSearchComponent \n\nTextSearchComponent  -->\n\nTextSearchModule->TextSearchComponent \n\n\n\n\n\nDecoratedTextModule\n\nDecoratedTextModule\n\nTextSearchModule -->\n\nDecoratedTextModule->TextSearchModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/text-search/text-search.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TextSearchComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DecoratedTextModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MatPrefix\n                        \n                        \n                            MatSuffix\n                        \n                        \n                            TextSearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatFormFieldModule, MatPrefix, MatSuffix } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\n\nimport { DecoratedTextModule } from '../decorated-text/decorated-text.module';\nimport { TextSearchComponent } from './text-search.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n\n    MatAutocompleteModule,\n    MatFormFieldModule,\n    MatInputModule,\n\n    DecoratedTextModule\n  ],\n  declarations: [TextSearchComponent],\n  exports: [\n    TextSearchComponent,\n\n    // Reexport prefix/suffix markers\n    MatPrefix,\n    MatSuffix\n  ]\n})\nexport class TextSearchModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TrackingPopupComponent.html":{"url":"components/TrackingPopupComponent.html","title":"component - TrackingPopupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TrackingPopupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-tracking-popup\n            \n\n            \n                styleUrls\n                ./tracking-popup.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tracking-popup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                container\n                            \n                            \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                            \n                                showButton\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    allowTelemetry\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, consentService: ConsentService, data: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        consentService\n                                                  \n                                                        \n                                                                        ConsentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-tracking-popup\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tracking-popup'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showButton\n                        \n                    \n                \n            \n            \n                \nshowButton(button: \"opt-in\" | \"opt-out\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    button\n                                    \n                                            \"opt-in\" | \"opt-out\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        submit\n                        \n                    \n                \n            \n            \n                \nsubmit(entry: boolean)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    entry\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-tracking-popup'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        container\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLElement\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_SNACK_BAR_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        allowTelemetry\n                    \n                \n\n                \n                    \n                        getallowTelemetry()\n                    \n                \n                            \n                                \n                                    Defined in projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts:15\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, ElementRef, HostBinding, Inject } from '@angular/core';\nimport { MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\nimport { ConsentService, Consent } from 'ccf-shared/analytics';\n\n\n@Component({\n  selector: 'ccf-tracking-popup',\n  templateUrl: './tracking-popup.component.html',\n  styleUrls: ['./tracking-popup.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TrackingPopupComponent {\n  @HostBinding('class') readonly clsName = 'ccf-tracking-popup';\n\n  get allowTelemetry(): Consent {\n    return this.consentService.consent;\n  }\n\n  container: HTMLElement;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n  constructor(elementRef: ElementRef, readonly consentService: ConsentService, @Inject(MAT_SNACK_BAR_DATA) public data: any) {\n    this.container = elementRef.nativeElement;\n  }\n\n  dismiss(): void {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n    this.data.preClose();\n  }\n\n  submit(entry: boolean): void {\n    this.consentService.setConsent(entry ? 'given' : 'rescinded');\n    this.dismiss();\n  }\n\n  showButton(button: 'opt-in' | 'opt-out'): boolean {\n    const { allowTelemetry } = this;\n    if (allowTelemetry === 'not-set') {\n      return true;\n    } else {\n      return button === 'opt-in' ? allowTelemetry === 'rescinded' : allowTelemetry === 'given';\n    }\n  }\n}\n\n    \n\n    \n        We log usage to improve this service.\n\n  {{allowTelemetry === 'not-set' ? 'I understand' : 'Opt in'}}\n\nOpt out\n    \n\n    \n                \n                    ./tracking-popup.component.scss\n                \n                :host {\n  display: flex;\n  align-items: center;\n  min-width: 400px;\n  color: rgba(255, 255, 255, 0.7);\n  background: #323232;\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 6px 10px 0px rgba(0, 0, 0, 0.14), 0px 1px 18px 0px rgba(0, 0, 0, 0.12);\n  z-index: 9999;\n\n  p {\n    margin: 24px;\n  }\n\n  button {\n    margin: 1rem;\n    min-width: 6rem;\n    background-color: #007cbe;\n    display: flex;\n    justify-content: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'We log usage to improve this service.  {{allowTelemetry === \\'not-set\\' ? \\'I understand\\' : \\'Opt in\\'}}Opt out'\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CallToActionBehaviorComponent', 'selector': 'ccf-call-to-action-behavior'},{'name': 'CallToActionComponent', 'selector': 'ccf-call-to-action'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'},{'name': 'XYZPositionComponent', 'selector': 'ccf-xyz-position'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'TrackingPopupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TrackingPopupModule.html":{"url":"modules/TrackingPopupModule.html","title":"module - TrackingPopupModule","body":"\n                   \n\n\n\n\n    Modules\n    TrackingPopupModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TrackingPopupModule\n\n\n\ncluster_TrackingPopupModule_declarations\n\n\n\ncluster_TrackingPopupModule_exports\n\n\n\n\nTrackingPopupComponent\n\nTrackingPopupComponent\n\n\n\nTrackingPopupModule\n\nTrackingPopupModule\n\nTrackingPopupModule -->\n\nTrackingPopupComponent->TrackingPopupModule\n\n\n\n\n\nTrackingPopupComponent \n\nTrackingPopupComponent \n\nTrackingPopupComponent  -->\n\nTrackingPopupModule->TrackingPopupComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TrackingPopupComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TrackingPopupComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\n\nimport { TrackingPopupComponent } from './tracking-popup.component';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule\n  ],\n  declarations: [TrackingPopupComponent],\n  exports: [TrackingPopupComponent]\n})\nexport class TrackingPopupModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TrackingState.html":{"url":"injectables/TrackingState.html","title":"injectable - TrackingState","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TrackingState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/analytics/tracking.state.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    NgxsImmutableDataRepository\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setAllowTelemetry\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setAllowTelemetry\n                        \n                    \n                \n            \n            \n                \nsetAllowTelemetry(allowTelemetry: boolean)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @DataAction()\n                \n            \n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/analytics/tracking.state.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    allowTelemetry\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\n\nexport interface TrackingStateModel {\n  allowTelemetry?: boolean;\n}\n\nexport const LOCAL_STORAGE_ALLOW_TELEMETRY_KEY = 'ALLOW_TELEMETRY';\nexport const INITIAL_TELEMETRY_SETTING = getTelemetryStorageSetting();\n\nfunction getTelemetryStorageSetting(): boolean | undefined {\n  const value = localStorage.getItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY);\n  return value === null ? undefined : value.toLowerCase() === 'true';\n}\n\n@StateRepository()\n@State({\n  name: 'tracking',\n  defaults: {\n    allowTelemetry: INITIAL_TELEMETRY_SETTING\n  }\n})\n@Injectable()\nexport class TrackingState extends NgxsImmutableDataRepository {\n  @DataAction()\n  setAllowTelemetry(allowTelemetry: boolean): void {\n    const oldValue = getTelemetryStorageSetting();\n    localStorage.setItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY, allowTelemetry.toString());\n    this.ctx.patchState({ allowTelemetry });\n\n    if (oldValue !== undefined || allowTelemetry === false) {\n      // This ensures that if telemetry is disabled that it _WONT_ send anything to Google Analytics\n      location.reload();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrackingStateModel.html":{"url":"interfaces/TrackingStateModel.html","title":"interface - TrackingStateModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TrackingStateModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/analytics/tracking.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            allowTelemetry\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowTelemetry\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        allowTelemetry:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { DataAction, StateRepository } from '@ngxs-labs/data/decorators';\nimport { NgxsImmutableDataRepository } from '@ngxs-labs/data/repositories';\nimport { State } from '@ngxs/store';\n\n\nexport interface TrackingStateModel {\n  allowTelemetry?: boolean;\n}\n\nexport const LOCAL_STORAGE_ALLOW_TELEMETRY_KEY = 'ALLOW_TELEMETRY';\nexport const INITIAL_TELEMETRY_SETTING = getTelemetryStorageSetting();\n\nfunction getTelemetryStorageSetting(): boolean | undefined {\n  const value = localStorage.getItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY);\n  return value === null ? undefined : value.toLowerCase() === 'true';\n}\n\n@StateRepository()\n@State({\n  name: 'tracking',\n  defaults: {\n    allowTelemetry: INITIAL_TELEMETRY_SETTING\n  }\n})\n@Injectable()\nexport class TrackingState extends NgxsImmutableDataRepository {\n  @DataAction()\n  setAllowTelemetry(allowTelemetry: boolean): void {\n    const oldValue = getTelemetryStorageSetting();\n    localStorage.setItem(LOCAL_STORAGE_ALLOW_TELEMETRY_KEY, allowTelemetry.toString());\n    this.ctx.patchState({ allowTelemetry });\n\n    if (oldValue !== undefined || allowTelemetry === false) {\n      // This ensures that if telemetry is disabled that it _WONT_ send anything to Google Analytics\n      location.reload();\n    }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WorkerCCFDatabaseDataSourceService.html":{"url":"injectables/WorkerCCFDatabaseDataSourceService.html","title":"injectable - WorkerCCFDatabaseDataSourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WorkerCCFDatabaseDataSourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CCFDatabaseDataSourceBaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                database$\n                            \n                            \n                                    Readonly\n                                impl$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createDatabase\n                            \n                            \n                                    Protected\n                                    Abstract\n                                createWorker\n                            \n                            \n                                    Private\n                                    Async\n                                connectDatabase\n                            \n                            \n                                    Protected\n                                forwardCall\n                            \n                            \n                                getAggregateResults\n                            \n                            \n                                getCellTypeTermOccurences\n                            \n                            \n                                getCellTypeTreeModel\n                            \n                            \n                                getDatabaseStatus\n                            \n                            \n                                getDatasetTechnologyNames\n                            \n                            \n                                getOntologyTermOccurences\n                            \n                            \n                                getOntologyTreeModel\n                            \n                            \n                                getProviderNames\n                            \n                            \n                                getReferenceOrgans\n                            \n                            \n                                getReferenceOrganScene\n                            \n                            \n                                getScene\n                            \n                            \n                                getTissueBlockResults\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        createDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    createDatabase(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:65\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         CCFDatabaseManager\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Abstract\n                        createWorker\n                        \n                    \n                \n            \n            \n                \n                    \n                    createWorker(config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Worker\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        connectDatabase\n                        \n                    \n                \n            \n            \n                \n                    \n                    connectDatabase(manager: CCFDatabaseManager, config: CCFDatabaseOptions)\n                \n            \n\n\n            \n                \n                    Inherited from         CCFDatabaseDataSourceBaseService\n\n                \n            \n            \n                \n                        Defined in         CCFDatabaseDataSourceBaseService:39\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    manager\n                                    \n                                                CCFDatabaseManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    config\n                                    \n                                            CCFDatabaseOptions\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        forwardCall\n                        \n                    \n                \n            \n            \n                \n                    \n                    forwardCall(method: K, args: Parameters>)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:93\n\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        K\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                                Parameters>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAggregateResults\n                        \n                    \n                \n            \n            \n                \ngetAggregateResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:64\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCellTypeTreeModel\n                        \n                    \n                \n            \n            \n                \ngetCellTypeTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:52\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatabaseStatus\n                        \n                    \n                \n            \n            \n                \ngetDatabaseStatus()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDatasetTechnologyNames\n                        \n                    \n                \n            \n            \n                \ngetDatasetTechnologyNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:44\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTermOccurences\n                        \n                    \n                \n            \n            \n                \ngetOntologyTermOccurences(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:68\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOntologyTreeModel\n                        \n                    \n                \n            \n            \n                \ngetOntologyTreeModel()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:48\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProviderNames\n                        \n                    \n                \n            \n            \n                \ngetProviderNames()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:40\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrgans\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrgans()\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:56\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getReferenceOrganScene\n                        \n                    \n                \n            \n            \n                \ngetReferenceOrganScene(organIri: string, filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:80\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    organIri\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getScene\n                        \n                    \n                \n            \n            \n                \ngetScene(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:76\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTissueBlockResults\n                        \n                    \n                \n            \n            \n                \ngetTissueBlockResults(filter?: Filter)\n                \n            \n\n\n            \n                \n                    Inherited from         ForwardingDataSource\n\n                \n            \n            \n                \n                        Defined in         ForwardingDataSource:60\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n                                    \n                                            Filter\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        database$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         CCFDatabaseDataSourceBaseService\n\n                            \n                        \n                    \n                        \n                                Defined in         CCFDatabaseDataSourceBaseService:20\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        impl$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                        \n                            \n                                Inherited from         DelegateDataSource\n\n                            \n                        \n                    \n                        \n                                Defined in         DelegateDataSource:19\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, isDevMode } from '@angular/core';\nimport { CCFDatabase, CCFDatabaseOptions } from 'ccf-database';\nimport { releaseProxy, Remote, wrap } from 'comlink';\nimport { Observable, Unsubscribable, using } from 'rxjs';\nimport { filter, map, shareReplay, switchMap } from 'rxjs/operators';\n\nimport { GlobalConfigState } from '../../config/global-config.state';\nimport { DataSourceLike, DelegateDataSource } from './data-source';\n\n\n\ninterface CCFDatabaseManager extends Unsubscribable {\n  database: CCFDatabase | Remote;\n}\n\n\n@Injectable()\nabstract class CCFDatabaseDataSourceBaseService extends DelegateDataSource {\n  readonly impl$: Observable;\n  readonly database$: Observable>;\n\n  constructor(globalConfig: GlobalConfigState) {\n    super();\n\n    this.impl$ = this.database$ = globalConfig.config$.pipe(\n      source => source as Observable,\n      filter(config => Object.keys(config).length > 0),\n      switchMap(config => using(\n        () => this.createDatabase(config),\n        (manager: CCFDatabaseManager) => this.connectDatabase(manager, config)\n      )),\n      map(manager => manager.database),\n      shareReplay(1)\n    );\n  }\n\n  protected abstract createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager;\n\n  private async connectDatabase(\n    manager: CCFDatabaseManager, config: CCFDatabaseOptions\n  ): Promise {\n    const cacheResults = !isDevMode(); // Do not cache while in dev mode\n    await manager.database.connect(config, cacheResults);\n    return manager;\n  }\n}\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    return {\n      database: new CCFDatabase(config),\n      unsubscribe: () => undefined\n    };\n  }\n}\n\n@Injectable()\nexport abstract class WorkerCCFDatabaseDataSourceService extends CCFDatabaseDataSourceBaseService {\n  protected abstract createWorker(config: CCFDatabaseOptions): Worker;\n\n  protected createDatabase(config: CCFDatabaseOptions): CCFDatabaseManager {\n    const worker = this.createWorker(config);\n    const database = wrap(worker);\n\n    return {\n      database,\n      unsubscribe: () => {\n        database[releaseProxy]();\n        worker.terminate();\n      }\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/XYZPositionComponent.html":{"url":"components/XYZPositionComponent.html","title":"component - XYZPositionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  XYZPositionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ccf-shared/src/lib/components/xyz-position/xyz-position.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component displaying a x, y, and z position\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ccf-xyz-position\n            \n\n            \n                styleUrls\n                ./xyz-position.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./xyz-position.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                clsName\n                            \n                            \n                                    Readonly\n                                format\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                x\n                            \n                            \n                                y\n                            \n                            \n                                z\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        x\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/xyz-position/xyz-position.component.ts:18\n                            \n                        \n                \n                    \n                        X position\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        y\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/xyz-position/xyz-position.component.ts:21\n                            \n                        \n                \n                    \n                        Y position\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        z\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in projects/ccf-shared/src/lib/components/xyz-position/xyz-position.component.ts:24\n                            \n                        \n                \n                    \n                        Z position\n\n                    \n                \n            \n        \n\n\n    \n    HostBindings    \n        \n            \n                \n                    \n                    \n                        class\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"ccf-xyz-position\"\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-xyz-position'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/xyz-position/xyz-position.component.ts:15\n                        \n                    \n\n            \n                \n                    Html class name\n\n                \n            \n\n        \n    \n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        clsName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ccf-xyz-position'\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @HostBinding('class')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/xyz-position/xyz-position.component.ts:15\n                        \n                    \n\n            \n                \n                    Html class name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        format\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '1.0-2'\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-shared/src/lib/components/xyz-position/xyz-position.component.ts:27\n                        \n                    \n\n            \n                \n                    Number format for position values\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\n\n\n/**\n * Component displaying a x, y, and z position\n */\n@Component({\n  selector: 'ccf-xyz-position',\n  templateUrl: './xyz-position.component.html',\n  styleUrls: ['./xyz-position.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class XYZPositionComponent {\n  /** Html class name */\n  @HostBinding('class') readonly clsName = 'ccf-xyz-position';\n\n  /** X position */\n  @Input() x = 0;\n\n  /** Y position */\n  @Input() y = 0;\n\n  /** Z position */\n  @Input() z = 0;\n\n  /** Number format for position values */\n  readonly format = '1.0-2';\n}\n\n    \n\n    \n        X: {{ x | number:format }}\nY: {{ y | number:format }}\nZ: {{ z | number:format }}\n\n    \n\n    \n                \n                    ./xyz-position.component.scss\n                \n                :host {\n  display: flex;\n  flex-direction: column;\n\n  .line {\n    font-size: 1rem;\n    font-weight: 400;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'X: {{ x | number:format }}Y: {{ y | number:format }}Z: {{ z | number:format }}'\n    var COMPONENTS = [{'name': 'BodyUiComponent', 'selector': 'ccf-body-ui'},{'name': 'CallToActionBehaviorComponent', 'selector': 'ccf-call-to-action-behavior'},{'name': 'CallToActionComponent', 'selector': 'ccf-call-to-action'},{'name': 'DecoratedTextComponent', 'selector': 'ccf-decorated-text'},{'name': 'InfoButtonComponent', 'selector': 'ccf-info-button'},{'name': 'InfoDialogComponent', 'selector': 'ccf-info-dialog'},{'name': 'OpacitySliderComponent', 'selector': 'ccf-opacity-slider'},{'name': 'OrganSelectorComponent', 'selector': 'ccf-organ-selector'},{'name': 'SpatialSearchListComponent', 'selector': 'ccf-spatial-search-list'},{'name': 'StoreDebugComponent', 'selector': 'ccf-store-debug'},{'name': 'TextSearchComponent', 'selector': 'ccf-text-search'},{'name': 'TrackingPopupComponent', 'selector': 'ccf-tracking-popup'},{'name': 'XYZPositionComponent', 'selector': 'ccf-xyz-position'}];\n    var DIRECTIVES = [{'name': 'NumberDirective', 'selector': 'input[ccfNumbersOnly]'}];\n    var ACTUAL_COMPONENT = {'name': 'XYZPositionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/XYZPositionModule.html":{"url":"modules/XYZPositionModule.html","title":"module - XYZPositionModule","body":"\n                   \n\n\n\n\n    Modules\n    XYZPositionModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_XYZPositionModule\n\n\n\ncluster_XYZPositionModule_declarations\n\n\n\ncluster_XYZPositionModule_exports\n\n\n\n\nXYZPositionComponent\n\nXYZPositionComponent\n\n\n\nXYZPositionModule\n\nXYZPositionModule\n\nXYZPositionModule -->\n\nXYZPositionComponent->XYZPositionModule\n\n\n\n\n\nXYZPositionComponent \n\nXYZPositionComponent \n\nXYZPositionComponent  -->\n\nXYZPositionModule->XYZPositionComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/xyz-position/xyz-position.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            XYZPositionComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            XYZPositionComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\n\nimport { XYZPositionComponent } from './xyz-position.component';\n\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [XYZPositionComponent],\n  exports: [XYZPositionComponent]\n})\nexport class XYZPositionModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/XYZTriplet.html":{"url":"interfaces/XYZTriplet.html","title":"interface - XYZTriplet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  XYZTriplet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-shared/src/lib/components/body-ui/body-ui.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                                \n                                        \n                                            z\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        z\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        z:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  AfterViewInit, Component, ElementRef, EventEmitter, HostBinding, Input, OnDestroy, Output, ViewChild,\n} from '@angular/core';\nimport { BodyUI, NodeClickEvent, NodeDragEvent, SpatialSceneNode } from 'ccf-body-ui';\nimport { Subscription } from 'rxjs';\n\n\ninterface XYZTriplet {\n  x: T;\n  y: T;\n  z: T;\n}\n\n/**\n * Component that handles displaying the 3D models in the stage\n */\n@Component({\n  selector: 'ccf-body-ui',\n  templateUrl: './body-ui.component.html',\n  styleUrls: ['./body-ui.component.scss']\n})\nexport class BodyUiComponent implements AfterViewInit, OnDestroy {\n  /** HTML class name */\n  @HostBinding('class') readonly clsName = 'ccf-body-ui';\n\n  @Input()\n  get scene(): SpatialSceneNode[] {\n    return this._scene;\n  }\n\n  set scene(nodes: SpatialSceneNode[]) {\n    this._scene = nodes;\n    this.bodyUI?.setScene(nodes);\n  }\n\n  @Input()\n  get rotation(): number {\n    return this._rotation;\n  }\n\n  set rotation(value: number) {\n    this._rotation = value;\n    this.bodyUI?.setRotation(value);\n  }\n\n  @Input()\n  get rotationX(): number {\n    return this._rotationX;\n  }\n\n  set rotationX(value: number) {\n    this._rotationX = value;\n    this.bodyUI?.setRotationX(value);\n  }\n\n  @Input()\n  get zoom(): number {\n    return this._zoom;\n  }\n\n  set zoom(value: number) {\n    this._zoom = value;\n    this.bodyUI?.setZoom(value);\n  }\n\n  @Input()\n  get target(): [number, number, number] {\n    return this._target;\n  }\n\n  set target(value: [number, number, number]) {\n    this._target = value;\n    this.bodyUI?.setTarget(value);\n  }\n\n  @Input()\n  get bounds(): XYZTriplet {\n    return this._bounds;\n  }\n\n  set bounds(value: XYZTriplet) {\n    this._bounds = value;\n    this.zoomToBounds(value);\n  }\n\n  @Input()\n  get camera(): string {\n    return this._camera;\n  }\n\n  set camera(value: string) {\n    this._camera = value;\n  }\n\n  @Output()\n  readonly rotationChange = new EventEmitter();\n\n  @Output()\n  readonly nodeDrag = new EventEmitter();\n\n  @Output()\n  readonly nodeClick = new EventEmitter();\n\n  @Output()\n  readonly nodeHoverStart = new EventEmitter();\n\n  @Output()\n  readonly nodeHoverStop = new EventEmitter();\n\n  @Output()\n  readonly initialized = new EventEmitter();\n\n  @Input()\n  get interactive(): boolean {\n    return this._interactive;\n  }\n\n  set interactive(value: boolean) {\n    this._interactive = value;\n    if (this.bodyUI) {\n      this.recreateBodyUI();\n    }\n  }\n\n  private _interactive = true;\n  private _rotation = 0;\n  private _rotationX = 0;\n  private _zoom = 9.5;\n  private _target: [number, number, number] = [0, 0, 0];\n  private _bounds: XYZTriplet;\n  private _scene: SpatialSceneNode[] = [];\n  private subscriptions: Subscription[] = [];\n  private _camera: string;\n\n  /**\n   * Instance of the body UI class for rendering the deckGL scene\n   */\n  bodyUI: BodyUI;\n\n  /**\n   * Reference to the div we are using to mount the body UI to.\n   */\n  @ViewChild('bodyCanvas', { read: ElementRef }) bodyCanvas: ElementRef;\n\n  /**\n   * Performs setup required after initialization\n   */\n  ngAfterViewInit(): void {\n    this.setupBodyUI();\n  }\n\n  zoomToBounds(bounds: XYZTriplet, margin = { x: 48, y: 48 }): void {\n    if (this.bodyCanvas) {\n      const { width, height } = this.bodyCanvas.nativeElement;\n      const pxRatio = window.devicePixelRatio;\n      const zoom = Math.min(\n        Math.log2((width - margin.x) / pxRatio / bounds.x),\n        Math.log2((height - margin.y) / pxRatio / bounds.y)\n      );\n      this.zoom = zoom;\n    }\n  }\n\n  /**\n   * Set up required to render the body UI with the scene nodes.\n   */\n  private async setupBodyUI(): Promise {\n    const canvas = this.bodyCanvas.nativeElement;\n    const bodyUI = new BodyUI({\n      id: 'body-ui',\n      canvas,\n      zoom: this.zoom,\n      target: [0, 0, 0],\n      rotation: 0,\n      minRotationX: -75,\n      maxRotationX: 75,\n      interactive: this.interactive,\n      camera: this.camera\n    });\n    canvas.addEventListener('contextmenu', evt => evt.preventDefault());\n    await bodyUI.initialize();\n    this.bodyUI = bodyUI;\n    (window as unknown as { bodyUI: unknown }).bodyUI = bodyUI;\n    if (this.scene?.length > 0) {\n      this.bodyUI.setScene(this.scene);\n    }\n    if (this.bounds) {\n      this.zoomToBounds(this.bounds);\n    }\n    if (this.target) {\n      this.bodyUI.setTarget(this.target);\n    }\n    this.subscriptions = [\n      this.bodyUI.sceneRotation$.subscribe((rotation) => this.rotationChange.next(rotation)),\n      this.bodyUI.nodeDrag$.subscribe((event) => this.nodeDrag.emit(event)),\n      this.bodyUI.nodeClick$.subscribe((event) => this.nodeClick.emit(event)),\n      this.bodyUI.nodeHoverStart$.subscribe((event) => this.nodeHoverStart.emit(event)),\n      this.bodyUI.nodeHoverStop$.subscribe((event) => this.nodeHoverStop.emit(event))\n    ];\n    this.initialized.emit();\n  }\n\n  private recreateBodyUI(): void {\n    this.clearSubscriptions();\n    this.bodyUI.finalize();\n    this.setupBodyUI();\n  }\n\n  private clearSubscriptions(): void {\n    this.subscriptions.forEach(s => s.unsubscribe());\n    this.subscriptions = [];\n  }\n\n  ngOnDestroy(): void {\n    this.clearSubscriptions();\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Common Coordinate Framework (CCF) User Interfaces\n3.4.0 - 2022-07-01\nAdded in 3.4.0\n\nMajor feature added: Spatial Search! This includes an expanded API plus a user interface for dynamically generating spatial searches.\n\nKnown Issues in 3.4.0\n\nThere are some minor visual descrepancies when viewing the spatial search 3D scene and the results. However, blocks which are highlighted will be selected if the spatial search is added to your overall search filters.\n\n3.3.0 - 2022-06-17\nAdded in 3.3.0\n\nAdded support for the latest CCF Ontology v1.9.0 which adds Placenta, Spinal Cord, new Landmarks for reference organs, and a host of data updates.\nAdded a SPARQL route to the CCF-API for flexible querying of the Ontology and linked data. See the /v1/sparql docs for more information.\nClean up and bug fixes\n\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            interface\n            AnalyticsOptions\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            function\n            initCommands\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            function\n            toAttributes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/analytics.module.ts\n            \n            variable\n            EAGERLY_LOADED_SERVICES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/consent.service.ts\n            \n            injectable\n            ConsentService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/google-analytics-sync.service.ts\n            \n            injectable\n            GoogleAnalyticsSyncService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n            \n            injectable\n            LocalStorageSyncService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n            \n            variable\n            LOCAL_STORAGE_CONSENT_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/filter-nulls.ts\n            \n            function\n            filterNulls\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/flatten.ts\n            \n            function\n            flatten\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/inner-map.ts\n            \n            function\n            innerMap\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            interface\n            PluckUniqueOptions\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            function\n            pluckUnique\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n            \n            variable\n            DEFAULT_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/rxjs-ext/src/public-api.ts\n            \n            variable\n            placeholder\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/mouse-position-tracker.module.ts\n            \n            function\n            trackMousePosition\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            injectable\n            TrackingState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            interface\n            TrackingStateModel\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            function\n            getTelemetryStorageSetting\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            variable\n            INITIAL_TELEMETRY_SETTING\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/analytics/tracking.state.ts\n            \n            variable\n            LOCAL_STORAGE_ALLOW_TELEMETRY_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/body-ui/body-ui.component.ts\n            \n            component\n            BodyUiComponent\n            \n                20 %\n                (7/34)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/body-ui/body-ui.component.ts\n            \n            interface\n            XYZTriplet\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/call-to-action-behavior/call-to-action-behavior.component.ts\n            \n            component\n            CallToActionBehaviorComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/call-to-action/call-to-action.component.ts\n            \n            component\n            CallToActionComponent\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n            \n            interface\n            DecoratedRange\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n            \n            function\n            normalize\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n            \n            function\n            resolveIndex\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n            \n            component\n            DecoratedTextComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n            \n            interface\n            Segment\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/decorated-text/decorated-text.component.ts\n            \n            interface\n            StackOp\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.component.ts\n            \n            component\n            InfoButtonComponent\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n            \n            injectable\n            InfoButtonService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n            \n            interface\n            DocumentationContent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-button/info-button.service.ts\n            \n            interface\n            PanelData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n            \n            component\n            InfoDialogComponent\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/info/info-dialog/info-dialog.component.ts\n            \n            interface\n            InfoDialogData\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/opacity-slider/opacity-slider.component.ts\n            \n            component\n            OpacitySliderComponent\n            \n                78 %\n                (11/14)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            component\n            OrganSelectorComponent\n            \n                76 %\n                (23/30)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            interface\n            OrganInfo\n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            variable\n            ALL_ORGANS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n            \n            variable\n            ALL_POSSIBLE_ORGANS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts\n            \n            component\n            SpatialSearchListComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/spatial-search-list/spatial-search-list.component.ts\n            \n            interface\n            SpatialSearchListItem\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts\n            \n            component\n            StoreDebugComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n            \n            component\n            TextSearchComponent\n            \n                100 %\n                (15/15)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n            \n            interface\n            AutoCompleteOption\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n            \n            variable\n            DEFAULT_MAX_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/tracking-popup/tracking-popup.component.ts\n            \n            component\n            TrackingPopupComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/components/xyz-position/xyz-position.component.ts\n            \n            component\n            XYZPositionComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/config/global-config.state.ts\n            \n            injectable\n            GlobalConfigState\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/directives/numbers-only/numbers-only.directive.ts\n            \n            directive\n            NumberDirective\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            injectable\n            ApiEndpointDataSourceService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            interface\n            ApiEndpointDataSourceOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            interface\n            DefaultParams\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            interface\n            FilterParams\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            cast\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            filterToParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            rangeToMinMax\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            function\n            spatialSceneNodeReviver\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            variable\n            buster$\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            variable\n            CACHE_CONFIG_NO_PARAMS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n            \n            variable\n            CACHE_CONFIG_PARAMS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            injectable\n            CCFDatabaseDataSourceBaseService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            injectable\n            CCFDatabaseDataSourceService\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            injectable\n            WorkerCCFDatabaseDataSourceService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/ccf-database.service.ts\n            \n            interface\n            CCFDatabaseManager\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.service.ts\n            \n            injectable\n            DataSourceService\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.ts\n            \n            class\n            DelegateDataSource\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.ts\n            \n            class\n            ForwardingDataSource\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/data-source.ts\n            \n            interface\n            DataSource\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/data-source/injector-delegate.service.ts\n            \n            injectable\n            InjectorDelegateDataSourceService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/globals/globals.service.ts\n            \n            injectable\n            GlobalsService\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/globals/globals.service.ts\n            \n            variable\n            global\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/services/local-storage/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/states/call-to-action/call-to-action.actions.ts\n            \n            class\n            CloseDialog\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/states/call-to-action/call-to-action.actions.ts\n            \n            class\n            LearnMore\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/states/call-to-action/call-to-action.actions.ts\n            \n            class\n            OpenDialog\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/states/call-to-action/call-to-action.selectors.ts\n            \n            class\n            CallToActionSelectors\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts\n            \n            injectable\n            CallToActionState\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts\n            \n            interface\n            CallToActionModel\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts\n            \n            variable\n            POPUP_SHOWN_STORAGE_KEY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts\n            \n            variable\n            SPATIAL_SEARCH_README\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/common : ^15.126.1\n        \n            @angular/animations : ^12.1.1\n        \n            @angular/cdk : ^12.1.1\n        \n            @angular/common : ^12.1.1\n        \n            @angular/compiler : ^12.1.1\n        \n            @angular/core : ^12.1.1\n        \n            @angular/elements : ^12.1.1\n        \n            @angular/forms : ^12.1.1\n        \n            @angular/material : ^12.1.3\n        \n            @angular/platform-browser : ^12.1.1\n        \n            @angular/platform-browser-dynamic : ^12.1.1\n        \n            @angular/router : ^12.1.1\n        \n            @angular/youtube-player : ^12.1.1\n        \n            @comunica/query-sparql-rdfjs : ^2.2.0\n        \n            @deck.gl/core : ^8.5.7\n        \n            @deck.gl/geo-layers : ^8.7.8\n        \n            @deck.gl/layers : ^8.5.7\n        \n            @deck.gl/mesh-layers : ^8.5.7\n        \n            @loaders.gl/core : ^3.0.12\n        \n            @loaders.gl/draco : ^3.0.12\n        \n            @loaders.gl/gltf : ^3.0.12\n        \n            @luma.gl/core : ^8.5.12\n        \n            @math.gl/core : ^3.5.5\n        \n            @math.gl/culling : ^3.5.7\n        \n            @ngxs-labs/data : ^6.2.0\n        \n            @ngxs-labs/dispatch-decorator : ^4.0.2\n        \n            @ngxs/logger-plugin : ^3.7.1\n        \n            @ngxs/storage-plugin : ^3.7.1\n        \n            @ngxs/store : ^3.7.3\n        \n            @rdfjs/data-model : ^1.2.0\n        \n            @types/lru-cache : \n        \n            @webcomponents/webcomponentsjs : ^2.5.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.19.0\n        \n            cannon-es : ^0.18.0\n        \n            comlink : ^4.3.0\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.7.2\n        \n            dotenv : ^16.0.0\n        \n            express : ^4.17.1\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^10.0.0\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^4.6.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.0.1\n        \n            jsonld : ^5.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : \n        \n            n3 : ^1.16.0\n        \n            ng5-slider : ^1.2.6\n        \n            ngx-google-analytics : ^11.2.1\n        \n            ngx-markdown : ^12.0.1\n        \n            node-fetch : ^2.6.7\n        \n            qs : ^6.10.2\n        \n            rdf-literal : ^1.2.0\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^3.6.0\n        \n            rxjs : ^6.6.7\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^6.5.1\n        \n            ts-cacheable : ^1.0.6\n        \n            tslib : ^2.1.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cast   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            filterNulls   (projects/.../filter-nulls.ts)\n                        \n                        \n                            filterToParams   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            flatten   (projects/.../flatten.ts)\n                        \n                        \n                            getTelemetryStorageSetting   (projects/.../tracking.state.ts)\n                        \n                        \n                            initCommands   (projects/.../analytics.module.ts)\n                        \n                        \n                            innerMap   (projects/.../inner-map.ts)\n                        \n                        \n                            normalize   (projects/.../decorated-range.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            pluckUnique   (projects/.../pluck-unique.ts)\n                        \n                        \n                            rangeToMinMax   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            resolveIndex   (projects/.../decorated-range.ts)\n                        \n                        \n                            spatialSceneNodeReviver   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            toAttributes   (projects/.../analytics.module.ts)\n                        \n                        \n                            trackMousePosition   (projects/.../mouse-position-tracker.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        cast\n                        \n                    \n                \n            \n            \n                \ncast()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     T\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filterToParams\n                        \n                    \n                \n            \n            \n                \nfilterToParams(filter?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filter\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FilterParams\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rangeToMinMax\n                        \n                    \n                \n            \n            \n                \nrangeToMinMax(range, low, high)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    range\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    low\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    high\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     MinMax | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        spatialSceneNodeReviver\n                        \n                    \n                \n            \n            \n                \nspatialSceneNodeReviver(nodes)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nodes\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     SpatialSceneNode[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/filter-nulls.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        filterNulls\n                        \n                    \n                \n            \n            \n                \nfilterNulls()\n                \n            \n\n\n\n\n            \n                \n                    Removes all null and undefined values from a stream.\n\n\n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/flatten.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        flatten\n                        \n                    \n                \n            \n            \n                \nflatten()\n                \n            \n\n\n\n\n            \n                \n                    Flattens a single level of nested arrays.\n\n\n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/src/lib/analytics/tracking.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getTelemetryStorageSetting\n                        \n                    \n                \n            \n            \n                \ngetTelemetryStorageSetting()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     boolean | undefined\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/analytics/src/lib/analytics.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        initCommands\n                        \n                    \n                \n            \n            \n                \ninitCommands(options)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     IGoogleAnalyticsCommand[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toAttributes\n                        \n                    \n                \n            \n            \n                \ntoAttributes(obj)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    obj\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Record\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/inner-map.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        innerMap\n                        \n                    \n                \n            \n            \n                \ninnerMap(project)\n                \n            \n\n\n\n\n            \n                \n                    Maps the values of each emitted array.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    project\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Mapping callback invoked for each element\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/src/lib/components/decorated-text/decorated-range.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        normalize\n                        \n                    \n                \n            \n            \n                \nnormalize(range, length)\n                \n            \n\n\n\n\n            \n                \n                    Produces a new range object based on the input where all properties have been normalized.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    range\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The object to normalize.\n\n                                    \n                                \n                                \n                                    length\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Max length for indices.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DecoratedRange\n\n                    \n                    \n                        A new object where all undefined values have been replaced with defaults and\nwhere all indices have been constrained to the range [0, length].\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resolveIndex\n                        \n                    \n                \n            \n            \n                \nresolveIndex(index, length)\n                \n            \n\n\n\n\n            \n                \n                    Resolves and normalizes an index for indexing into an array of length length.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The index value to resolve. May be negative indicating an index from end.\n\n                                    \n                                \n                                \n                                    length\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The length of the object on which this index will be used.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        A positive index in range [0, length]\n\n                    \n                \n            \n        \n    \n    projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, opts?)\n                \n            \n\n\n\n\n            \n                \n                    Combines the functionaliy of pluck and distinctUntilChanged\nas well as adding a shareReplay.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        Additional options\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        An Observable operator\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, k3, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, k3, k4, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k4\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, k3, k4, k5, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k4\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k5\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(k1, k2, k3, k4, k5, k6, opts?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    k1\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k2\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k3\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k4\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k5\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    k6\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    opts\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(...props: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(...props: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pluckUnique\n                        \n                    \n                \n            \n            \n                \npluckUnique(...props: undefined)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    props\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     OperatorFunction\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    projects/ccf-shared/src/lib/analytics/mouse-position-tracker.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        trackMousePosition\n                        \n                    \n                \n            \n            \n                \ntrackMousePosition(el, ga)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    el\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ga\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCommon Coordinate Framework (CCF) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the CCF-EUI, CCF-RUI, and CCF-Organ-Info.\nWebsite Links\n\nCCF Exploration User Interface (CCF-EUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nCCF Registration User Interface (CCF-RUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nCCF Organ Info Component (CCF-Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nCCF API\nProduction: https://ccf-api.hubmapconsortium.org\nStaging: https://ccf-api--staging.herokuapp.com\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nCCF API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\n\nBackground and More Information\nFor more information about the Common Coordinate Framework (CCF), see the HuBMAP CCF Portal at https://hubmapconsortium.github.io/ccf/.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AnalyticsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BodyUiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CallToActionBehaviorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CallToActionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DecoratedTextModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoButtonModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        InfoDialogModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MousePositionTrackerModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NumbersOnlyModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OpacitySliderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrganSelectorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpatialSearchListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StoreDebugModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TextSearchModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TrackingPopupModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        XYZPositionModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AnalyticsModule\n\n\n\ncluster_AnalyticsModule_providers\n\n\n\ncluster_BodyUiModule\n\n\n\ncluster_BodyUiModule_declarations\n\n\n\ncluster_BodyUiModule_exports\n\n\n\ncluster_CallToActionBehaviorModule\n\n\n\ncluster_CallToActionBehaviorModule_declarations\n\n\n\ncluster_CallToActionBehaviorModule_imports\n\n\n\ncluster_CallToActionBehaviorModule_exports\n\n\n\ncluster_CallToActionModule\n\n\n\ncluster_CallToActionModule_declarations\n\n\n\ncluster_CallToActionModule_exports\n\n\n\ncluster_DecoratedTextModule\n\n\n\ncluster_DecoratedTextModule_declarations\n\n\n\ncluster_DecoratedTextModule_exports\n\n\n\ncluster_InfoButtonModule\n\n\n\ncluster_InfoButtonModule_declarations\n\n\n\ncluster_InfoButtonModule_imports\n\n\n\ncluster_InfoButtonModule_exports\n\n\n\ncluster_InfoDialogModule\n\n\n\ncluster_InfoDialogModule_declarations\n\n\n\ncluster_InfoDialogModule_exports\n\n\n\ncluster_NumbersOnlyModule\n\n\n\ncluster_NumbersOnlyModule_declarations\n\n\n\ncluster_NumbersOnlyModule_exports\n\n\n\ncluster_OpacitySliderModule\n\n\n\ncluster_OpacitySliderModule_declarations\n\n\n\ncluster_OpacitySliderModule_exports\n\n\n\ncluster_OrganSelectorModule\n\n\n\ncluster_OrganSelectorModule_declarations\n\n\n\ncluster_OrganSelectorModule_exports\n\n\n\ncluster_SpatialSearchListModule\n\n\n\ncluster_SpatialSearchListModule_declarations\n\n\n\ncluster_SpatialSearchListModule_exports\n\n\n\ncluster_StoreDebugModule\n\n\n\ncluster_StoreDebugModule_declarations\n\n\n\ncluster_StoreDebugModule_exports\n\n\n\ncluster_TextSearchModule\n\n\n\ncluster_TextSearchModule_declarations\n\n\n\ncluster_TextSearchModule_exports\n\n\n\ncluster_TrackingPopupModule\n\n\n\ncluster_TrackingPopupModule_declarations\n\n\n\ncluster_TrackingPopupModule_exports\n\n\n\ncluster_XYZPositionModule\n\n\n\ncluster_XYZPositionModule_declarations\n\n\n\ncluster_XYZPositionModule_exports\n\n\n\n\nConsentService\n\nConsentService\n\n\n\nAnalyticsModule\n\nAnalyticsModule\n\nAnalyticsModule -->\n\nConsentService->AnalyticsModule\n\n\n\n\n\nGoogleAnalyticsSyncService\n\nGoogleAnalyticsSyncService\n\nAnalyticsModule -->\n\nGoogleAnalyticsSyncService->AnalyticsModule\n\n\n\n\n\nLocalStorageSyncService\n\nLocalStorageSyncService\n\nAnalyticsModule -->\n\nLocalStorageSyncService->AnalyticsModule\n\n\n\n\n\nBodyUiComponent\n\nBodyUiComponent\n\n\n\nBodyUiModule\n\nBodyUiModule\n\nBodyUiModule -->\n\nBodyUiComponent->BodyUiModule\n\n\n\n\n\nBodyUiComponent \n\nBodyUiComponent \n\nBodyUiComponent  -->\n\nBodyUiModule->BodyUiComponent \n\n\n\n\n\nCallToActionBehaviorComponent\n\nCallToActionBehaviorComponent\n\n\n\nCallToActionBehaviorModule\n\nCallToActionBehaviorModule\n\nCallToActionBehaviorModule -->\n\nCallToActionBehaviorComponent->CallToActionBehaviorModule\n\n\n\n\n\nCallToActionBehaviorComponent \n\nCallToActionBehaviorComponent \n\nCallToActionBehaviorComponent  -->\n\nCallToActionBehaviorModule->CallToActionBehaviorComponent \n\n\n\n\n\nCallToActionModule\n\nCallToActionModule\n\nCallToActionBehaviorModule -->\n\nCallToActionModule->CallToActionBehaviorModule\n\n\n\n\n\nCallToActionComponent \n\nCallToActionComponent \n\nCallToActionComponent  -->\n\nCallToActionModule->CallToActionComponent \n\n\n\n\n\nCallToActionComponent\n\nCallToActionComponent\n\nCallToActionModule -->\n\nCallToActionComponent->CallToActionModule\n\n\n\n\n\nDecoratedTextComponent\n\nDecoratedTextComponent\n\n\n\nDecoratedTextModule\n\nDecoratedTextModule\n\nDecoratedTextModule -->\n\nDecoratedTextComponent->DecoratedTextModule\n\n\n\n\n\nDecoratedTextComponent \n\nDecoratedTextComponent \n\nDecoratedTextComponent  -->\n\nDecoratedTextModule->DecoratedTextComponent \n\n\n\n\n\nTextSearchModule\n\nTextSearchModule\n\nTextSearchModule -->\n\nDecoratedTextModule->TextSearchModule\n\n\n\n\n\nInfoButtonComponent\n\nInfoButtonComponent\n\n\n\nInfoButtonModule\n\nInfoButtonModule\n\nInfoButtonModule -->\n\nInfoButtonComponent->InfoButtonModule\n\n\n\n\n\nInfoButtonComponent \n\nInfoButtonComponent \n\nInfoButtonComponent  -->\n\nInfoButtonModule->InfoButtonComponent \n\n\n\n\n\nInfoDialogModule\n\nInfoDialogModule\n\nInfoButtonModule -->\n\nInfoDialogModule->InfoButtonModule\n\n\n\n\n\nInfoDialogComponent \n\nInfoDialogComponent \n\nInfoDialogComponent  -->\n\nInfoDialogModule->InfoDialogComponent \n\n\n\n\n\nInfoDialogComponent\n\nInfoDialogComponent\n\nInfoDialogModule -->\n\nInfoDialogComponent->InfoDialogModule\n\n\n\n\n\nNumberDirective\n\nNumberDirective\n\n\n\nNumbersOnlyModule\n\nNumbersOnlyModule\n\nNumbersOnlyModule -->\n\nNumberDirective->NumbersOnlyModule\n\n\n\n\n\nNumberDirective \n\nNumberDirective \n\nNumberDirective  -->\n\nNumbersOnlyModule->NumberDirective \n\n\n\n\n\nOpacitySliderComponent\n\nOpacitySliderComponent\n\n\n\nOpacitySliderModule\n\nOpacitySliderModule\n\nOpacitySliderModule -->\n\nOpacitySliderComponent->OpacitySliderModule\n\n\n\n\n\nOpacitySliderComponent \n\nOpacitySliderComponent \n\nOpacitySliderComponent  -->\n\nOpacitySliderModule->OpacitySliderComponent \n\n\n\n\n\nOrganSelectorComponent\n\nOrganSelectorComponent\n\n\n\nOrganSelectorModule\n\nOrganSelectorModule\n\nOrganSelectorModule -->\n\nOrganSelectorComponent->OrganSelectorModule\n\n\n\n\n\nOrganSelectorComponent \n\nOrganSelectorComponent \n\nOrganSelectorComponent  -->\n\nOrganSelectorModule->OrganSelectorComponent \n\n\n\n\n\nSpatialSearchListComponent\n\nSpatialSearchListComponent\n\n\n\nSpatialSearchListModule\n\nSpatialSearchListModule\n\nSpatialSearchListModule -->\n\nSpatialSearchListComponent->SpatialSearchListModule\n\n\n\n\n\nSpatialSearchListComponent \n\nSpatialSearchListComponent \n\nSpatialSearchListComponent  -->\n\nSpatialSearchListModule->SpatialSearchListComponent \n\n\n\n\n\nStoreDebugComponent\n\nStoreDebugComponent\n\n\n\nStoreDebugModule\n\nStoreDebugModule\n\nStoreDebugModule -->\n\nStoreDebugComponent->StoreDebugModule\n\n\n\n\n\nStoreDebugComponent \n\nStoreDebugComponent \n\nStoreDebugComponent  -->\n\nStoreDebugModule->StoreDebugComponent \n\n\n\n\n\nTextSearchComponent\n\nTextSearchComponent\n\nTextSearchModule -->\n\nTextSearchComponent->TextSearchModule\n\n\n\n\n\nMatPrefix \n\nMatPrefix \n\nMatPrefix  -->\n\nTextSearchModule->MatPrefix \n\n\n\n\n\nMatSuffix \n\nMatSuffix \n\nMatSuffix  -->\n\nTextSearchModule->MatSuffix \n\n\n\n\n\nTextSearchComponent \n\nTextSearchComponent \n\nTextSearchComponent  -->\n\nTextSearchModule->TextSearchComponent \n\n\n\n\n\nTrackingPopupComponent\n\nTrackingPopupComponent\n\n\n\nTrackingPopupModule\n\nTrackingPopupModule\n\nTrackingPopupModule -->\n\nTrackingPopupComponent->TrackingPopupModule\n\n\n\n\n\nTrackingPopupComponent \n\nTrackingPopupComponent \n\nTrackingPopupComponent  -->\n\nTrackingPopupModule->TrackingPopupComponent \n\n\n\n\n\nXYZPositionComponent\n\nXYZPositionComponent\n\n\n\nXYZPositionModule\n\nXYZPositionModule\n\nXYZPositionModule -->\n\nXYZPositionComponent->XYZPositionModule\n\n\n\n\n\nXYZPositionComponent \n\nXYZPositionComponent \n\nXYZPositionComponent  -->\n\nXYZPositionModule->XYZPositionComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        16 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    13 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    15 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    19 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Consent   (projects/.../consent.service.ts)\n                        \n                        \n                            DataReviver   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            DataSourceDataType   (projects/.../data-source.ts)\n                        \n                        \n                            DataSourceLike   (projects/.../data-source.ts)\n                        \n                        \n                            DataSourceLikeMethod   (projects/.../data-source.ts)\n                        \n                        \n                            DataSourceMethod   (projects/.../data-source.ts)\n                        \n                        \n                            GlobalKey   (projects/.../globals.service.ts)\n                        \n                        \n                            GlobalThis   (projects/.../globals.service.ts)\n                        \n                        \n                            IObservableCacheConfig   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            KVList   (projects/.../store-debug.component.ts)\n                        \n                        \n                            KVPair   (projects/.../store-debug.component.ts)\n                        \n                        \n                            RequestMethod   (projects/.../api-endpoint.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-shared/analytics/src/lib/consent.service.ts\n    \n    \n        \n            \n                \n                    \n                    Consent\n                \n            \n            \n                \n                        \"not-set\" | \"given\" | \"rescinded\"\n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n    \n    \n        \n            \n                \n                    \n                    DataReviver\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    IObservableCacheConfig\n                \n            \n            \n                \n                        NonNullable<>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RequestMethod\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/services/data-source/data-source.ts\n    \n    \n        \n            \n                \n                    \n                    DataSourceDataType\n                \n            \n            \n                \n                            ObservedValueOf>>\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataSourceLike\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataSourceLikeMethod\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DataSourceMethod\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/services/globals/globals.service.ts\n    \n    \n        \n            \n                \n                    \n                    GlobalKey\n                \n            \n            \n                \n                    Type of keys allowed in the global object\n\n                \n            \n            \n                \n                        string | symbol\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GlobalThis\n                \n            \n            \n                \n                    Type of the global object\n\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/ccf-shared/src/lib/components/store-debug/store-debug.component.ts\n    \n    \n        \n            \n                \n                    \n                    KVList\n                \n            \n            \n                \n                    Array of Key-Value pairs\n\n                \n            \n            \n                \n                            KVPair[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    KVPair\n                \n            \n            \n                \n                    Key-Value pair\n\n                \n            \n            \n                \n                        [string, T]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ALL_ORGANS   (projects/.../organ-selector.component.ts)\n                        \n                        \n                            ALL_POSSIBLE_ORGANS   (projects/.../organ-selector.component.ts)\n                        \n                        \n                            buster$   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            CACHE_CONFIG_NO_PARAMS   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            CACHE_CONFIG_PARAMS   (projects/.../api-endpoint.service.ts)\n                        \n                        \n                            DEFAULT_MAX_OPTIONS   (projects/.../text-search.component.ts)\n                        \n                        \n                            DEFAULT_OPTIONS   (projects/.../pluck-unique.ts)\n                        \n                        \n                            EAGERLY_LOADED_SERVICES   (projects/.../analytics.module.ts)\n                        \n                        \n                            global   (projects/.../globals.service.ts)\n                        \n                        \n                            INITIAL_TELEMETRY_SETTING   (projects/.../tracking.state.ts)\n                        \n                        \n                            LOCAL_STORAGE_ALLOW_TELEMETRY_KEY   (projects/.../tracking.state.ts)\n                        \n                        \n                            LOCAL_STORAGE_CONSENT_KEY   (projects/.../local-storage-sync.service.ts)\n                        \n                        \n                            placeholder   (projects/.../public-api.ts)\n                        \n                        \n                            POPUP_SHOWN_STORAGE_KEY   (projects/.../call-to-action.state.ts)\n                        \n                        \n                            SPATIAL_SEARCH_README   (projects/.../call-to-action.state.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-shared/src/lib/components/organ-selector/organ-selector.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ALL_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ALL_POSSIBLE_ORGANS.filter(organ => organ.disabled !== true)\n                    \n                \n\n            \n                \n                    All organs which have not been disabled\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ALL_POSSIBLE_ORGANS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : [\n  {\n    src: 'app:skin',\n    organ: 'Skin',\n    name: 'Skin',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002097'\n  },\n  {\n    src: 'app:brain',\n    organ: 'Brain',\n    name: 'Brain',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000955'\n  },\n  {\n    disabled: true,\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000029'\n  },\n  {\n    src: 'app:lymph-nodes',\n    organ: 'Lymph Node',\n    name: 'Lymph Node',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002509'\n  },\n  {\n    disabled: true,\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000970'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004548'\n  },\n  {\n    src: 'app:eye',\n    organ: 'Eye',\n    name: 'Eye, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004549'\n  },\n  {\n    disabled: true,\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0003889'\n  },\n  {\n    src: 'app:fallopian-tube-left',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001303'\n  },\n  {\n    src: 'app:fallopian-tube-right',\n    organ: 'Fallopian Tube',\n    name: 'Fallopian Tube, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001302'\n  },\n  {\n    src: 'app:heart',\n    organ: 'Heart',\n    name: 'Heart',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000948'\n  },\n  {\n    disabled: true,\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002113'\n  },\n  {\n    src: 'app:kidney-left',\n    organ: 'Kidney',\n    name: 'Kidney, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004538'\n  },\n  {\n    src: 'app:kidney-right',\n    organ: 'Kidney',\n    name: 'Kidney, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004539'\n  },\n  {\n    disabled: true,\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001465'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/FMA_24978'\n  },\n  {\n    src: 'app:knee',\n    organ: 'Knee',\n    name: 'Knee, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/FMA_24977'\n  },\n  {\n    src: 'app:liver',\n    organ: 'Liver',\n    name: 'Liver',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002107'\n  },\n  {\n    disabled: true,\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002048'\n  },\n  {\n    src: 'app:lung',\n    organ: 'Lung',\n    name: 'Lungs',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001004'\n  },\n  {\n    disabled: true,\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000992'\n  },\n  {\n    src: 'app:ovary-left',\n    organ: 'Ovary',\n    name: 'Ovary, L',\n    side: 'left',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/FMA_7214'\n  },\n  {\n    src: 'app:ovary-right',\n    organ: 'Ovary',\n    name: 'Ovary, R',\n    side: 'right',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/FMA_7213'\n  },\n  {\n    src: 'app:pancreas',\n    organ: 'Pancreas',\n    name: 'Pancreas',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001264'\n  },\n  {\n    src: 'app:pelvis-f',\n    organ: 'Pelvis',\n    name: 'Pelvis',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001270'\n  },\n  {\n    src: 'app:placenta',\n    organ: 'Placenta',\n    name: 'Placenta',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001987'\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002367',\n    disabled: true\n  },\n  {\n    src: 'app:prostate',\n    organ: 'Prostate',\n    name: 'Prostate',\n    hasSex: false,\n    sex: 'male',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000079'\n  },\n  {\n    src: 'app:small-intestine',\n    organ: 'Small Intestine',\n    name: 'Small Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002108'\n  },\n  {\n    src: 'app:large-intestine',\n    organ: 'Large Intestine',\n    name: 'Large Intestine',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000059'\n  },\n  {\n    src: 'app:spinal-cord',\n    organ: 'Spinal Cord',\n    name: 'Spinal Cord',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002240'\n  },\n  {\n    src: 'app:spleen',\n    organ: 'Spleen',\n    name: 'Spleen',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002106'\n  },\n  {\n    src: 'app:thymus',\n    organ: 'Thymus',\n    name: 'Thymus',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002370'\n  },\n  {\n    disabled: true,\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000056'\n  },\n  {\n    src: 'app:ureter-left',\n    organ: 'Ureter',\n    name: 'Ureter, L',\n    side: 'left',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001223'\n  },\n  {\n    src: 'app:ureter-right',\n    organ: 'Ureter',\n    name: 'Ureter, R',\n    side: 'right',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001222'\n  },\n  {\n    src: 'app:bladder',\n    organ: 'Urinary Bladder',\n    name: 'Urinary Bladder',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0001255'\n  },\n  {\n    src: 'app:uterus',\n    organ: 'Uterus',\n    name: 'Uterus',\n    hasSex: false,\n    sex: 'female',\n    id: 'http://purl.obolibrary.org/obo/UBERON_0000995'\n  },\n  {\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0004537'\n  },\n  {\n    disabled: true,\n    src: 'app:vasculature-thick',\n    organ: 'Blood Vasculature',\n    name: 'Blood Vasculature',\n    hasSex: true,\n    id: 'http://purl.obolibrary.org/obo/UBERON_0002049'\n  }\n].sort((a, b) => a.name.localeCompare(b.name)) as OrganInfo[]\n                    \n                \n\n            \n                \n                    All organs that will eventually be displayed in the app\n\n                \n            \n\n        \n    \n\n    projects/ccf-shared/src/lib/services/data-source/api-endpoint.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        buster$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CACHE_CONFIG_NO_PARAMS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IObservableCacheConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  cacheBusterObserver: buster$\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CACHE_CONFIG_PARAMS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         IObservableCacheConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  cacheBusterObserver: buster$,\n  maxCacheCount: 4\n}\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/src/lib/components/text-search/text-search.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_MAX_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'Maximum number of autocomplete options displayed',\n  {\n    providedIn: 'root',\n    factory(): number {\n      return 10;\n    }\n  }\n)\n                    \n                \n\n            \n                \n                    Token to provide a default for the maximum number of\nautocomplete suggestions to show at the same time.\n\n                \n            \n\n        \n    \n\n    projects/ccf-shared/rxjs-ext/operators/src/lib/pluck-unique.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         PluckUniqueOptions<>\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n\n            \n                \n                    Default options\n\n                \n            \n\n        \n    \n\n    projects/ccf-shared/analytics/src/lib/analytics.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        EAGERLY_LOADED_SERVICES\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  ConsentService,\n  GoogleAnalyticsSyncService,\n  LocalStorageSyncService,\n]\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/src/lib/services/globals/globals.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        global\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GlobalThis\n\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/src/lib/analytics/tracking.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        INITIAL_TELEMETRY_SETTING\n                        \n                    \n                \n            \n                \n                    \n                        Default value : getTelemetryStorageSetting()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LOCAL_STORAGE_ALLOW_TELEMETRY_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ALLOW_TELEMETRY'\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/analytics/src/lib/local-storage-sync.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LOCAL_STORAGE_CONSENT_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Key under which consent is stored', {\n  providedIn: 'root',\n  factory: () => 'ALLOW_TELEMETRY'\n})\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/rxjs-ext/src/public-api.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        placeholder\n                        \n                    \n                \n            \n                \n                    \n                        Default value : undefined\n                    \n                \n\n\n        \n    \n\n    projects/ccf-shared/src/lib/states/call-to-action/call-to-action.state.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        POPUP_SHOWN_STORAGE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'callToActionPopupShown'\n                    \n                \n\n            \n                \n                    Key for boolean determining if poup has been shown\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SPATIAL_SEARCH_README\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'assets/docs/SPATIAL_SEARCH_README.md'\n                    \n                \n\n            \n                \n                    Path to readme markup doc\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
