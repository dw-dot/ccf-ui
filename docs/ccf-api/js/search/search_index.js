var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AppOptions.html",[0,0.246,1,1.69]],["body/interfaces/AppOptions.html",[0,0.293,1,2.798,2,0.882,3,0.741,4,1.041,5,0.741,6,0.613,7,2.44,8,3.915,9,1.997,10,0.613,11,1.32,12,1.32,13,3.567,14,4.297,15,0.497,16,0.064,17,1.65,18,2.44,19,3.09,20,1.692,21,3.091,22,3.091,23,1.571,24,3.091,25,3.091,26,3.915,27,2.44,28,3.09,29,3.09,30,2.549,31,3.915,32,3.09,33,3.915,34,3.09,35,1.32,36,0.938,37,3.09,38,0.882,39,3.915,40,3.09,41,1.041,42,2.011,43,3.09,44,3.09,45,1.224,46,1.118,47,3.09,48,3.09,49,2.549,50,3.09,51,3.09,52,3.09,53,3.09,54,3.09,55,3.09,56,3.09,57,3.09,58,3.915,59,3.09,60,3.09,61,3.09,62,3.09,63,2.44,64,3.09,65,3.09,66,3.09,67,3.09,68,3.09,69,3.09,70,0.038,71,0.048,72,0.038]],["title/classes/CCFDatabaseInstance.html",[73,1.206,74,1.206]],["body/classes/CCFDatabaseInstance.html",[3,0.683,4,0.96,5,0.683,6,0.925,10,0.565,11,1.253,12,0.96,15,0.732,16,0.064,17,1.477,35,1.394,36,0.991,38,1.061,41,0.96,45,1.472,46,0.813,70,0.035,71,0.046,72,0.035,73,1.324,74,1.922,75,1.855,76,3.035,77,1.668,78,1.855,79,3.802,80,2.959,81,4.546,82,3.265,83,3.265,84,2.25,85,2.849,86,4.662,87,3.589,88,1.855,89,2.959,90,3.716,91,2.25,92,2.25,93,4.135,94,1.855,95,1.855,96,1.477,97,3.716,98,2.034,99,2.849,100,0.96,101,2.849,102,2.849,103,2.25,104,2.849,105,2.849,106,2.849,107,2.419,108,2.849,109,1.855,110,2.849,111,1.922,112,2.849,113,1.727,114,2.849,115,2.849,116,2.25,117,2.849,118,2.849,119,2.849,120,2.849,121,2.849,122,1.855,123,2.849,124,2.849,125,1.324,126,2.849]],["title/interfaces/CacheOptions.html",[0,0.246,127,1.69]],["body/interfaces/CacheOptions.html",[0,0.284,2,0.855,3,0.718,4,1.009,5,0.718,6,0.594,10,0.594,11,1.294,12,1.505,15,0.618,16,0.065,17,1.294,20,2.319,23,1.009,35,1.294,36,0.92,38,1.349,41,1.009,46,1.275,49,2.498,70,0.037,71,0.047,72,0.037,95,1.95,96,1.009,109,1.95,122,1.95,127,2.757,128,2.365,129,1.392,130,2.146,131,2.146,132,2.196,133,1.784,134,1.52,135,1.64,136,1.009,137,0.718,138,1.294,139,2.995,140,3.838,141,1.95,142,2.365,143,1.784,144,2.995,145,2.995,146,2.995,147,2.101,148,1.64,149,2.101,150,1.95,151,1.969,152,3.838,153,3.03,154,3.838,155,2.995,156,2.365,157,2.995,158,3.838,159,2.365,160,2.995,161,2.995,162,3.838,163,2.365,164,2.995]],["title/interfaces/DatabaseCacheOptions.html",[0,0.246,165,1.421]],["body/interfaces/DatabaseCacheOptions.html",[0,0.327,2,0.725,3,0.609,4,0.856,5,0.609,6,0.504,9,1.6,10,0.504,11,1.161,12,1.411,15,0.629,16,0.065,17,1.475,23,0.856,35,1.411,36,1.004,38,1.249,41,1.161,42,1.654,45,1.859,46,1.288,70,0.031,71,0.042,72,0.031,74,1.181,77,1.316,80,1.654,96,1.161,98,2.138,100,0.856,107,1.654,111,1.815,113,1.181,125,1.6,130,2.034,131,2.034,132,2.097,133,1.6,134,1.363,135,1.391,136,0.856,137,0.609,138,1.411,141,1.654,143,1.815,147,1.885,148,1.391,149,2.138,151,1.815,165,2.138,166,1.391,167,1.391,168,2.543,169,2.241,170,2.006,171,1.363,172,1.654,173,2.241,174,3.004,175,2.006,176,2.719,177,2.006,178,2.719,179,2.719,180,2.006,181,2.006,182,2.006,183,2.006,184,3.306,185,1.654,186,2.241,187,2.719,188,2.006,189,2.006,190,2.006,191,1.391,192,2.006,193,2.006,194,2.006,195,2.719,196,2.006,197,2.006,198,1.181,199,2.006,200,1.654,201,1.181,202,1.391,203,2.006,204,2.006,205,2.006,206,2.719,207,2.006,208,2.006,209,2.006,210,1.391,211,2.006,212,2.006,213,2.006,214,2.006,215,2.006,216,1.654,217,2.006]],["title/interfaces/DatabaseLoaderOptions.html",[0,0.246,9,1.206]],["body/interfaces/DatabaseLoaderOptions.html",[0,0.328,2,0.727,3,0.611,4,0.859,5,0.611,6,0.506,9,1.818,10,0.506,11,1.163,12,1.163,15,0.63,16,0.065,17,1.477,23,0.859,35,1.413,36,1.005,38,1.251,41,1.163,42,1.659,45,1.86,46,1.289,70,0.031,71,0.042,72,0.031,74,1.184,77,1.522,80,1.659,96,1.163,98,2.398,100,0.859,107,1.659,111,1.818,113,1.184,125,1.604,130,1.604,131,1.604,132,1.604,133,1.604,134,1.366,135,1.395,136,0.859,137,0.611,138,1.556,141,1.659,143,1.818,147,1.889,148,1.395,149,2.141,151,1.818,165,2.295,166,1.395,167,1.395,168,2.546,169,2.246,170,2.012,171,1.366,172,1.659,173,2.246,174,3.006,175,2.012,176,2.724,177,2.012,178,2.724,179,2.724,180,2.012,181,2.012,182,2.012,183,2.012,184,3.31,185,1.659,186,2.246,187,2.724,188,2.012,189,2.012,190,2.012,191,1.395,192,2.012,193,2.012,194,2.012,195,2.724,196,2.012,197,2.012,198,1.184,199,2.012,200,1.659,201,1.184,202,1.395,203,2.012,204,2.012,205,2.012,206,2.724,207,2.012,208,2.012,209,2.012,210,1.395,211,2.012,212,2.012,213,2.012,214,2.012,215,2.012,216,1.659,217,2.012]],["title/interfaces/GtexTissue.html",[0,0.246,218,1.69]],["body/interfaces/GtexTissue.html",[0,0.22,2,0.66,3,0.554,4,1.253,5,0.774,6,0.641,10,0.641,11,1.088,15,0.681,16,0.065,17,1.547,23,0.78,35,1.253,36,0.891,38,1.416,41,1.253,45,1.594,46,1.062,70,0.046,71,0.04,72,0.04,77,0.78,88,1.506,96,1.088,98,1.767,100,0.78,111,1.075,113,1.5,125,1.5,130,1.075,131,1.075,132,2.167,133,1.5,134,1.278,135,1.266,136,0.78,137,0.554,138,1.253,142,2.936,143,1.075,147,1.767,148,1.266,149,1.266,150,1.506,153,1.826,171,1.278,172,1.506,174,1.506,185,1.506,186,1.506,198,1.075,202,1.266,210,1.266,218,2.62,219,1.506,220,1.506,221,4.024,222,4.024,223,4.024,224,2.549,225,2.313,226,1.826,227,2.549,228,1.826,229,4.024,230,2.313,231,1.826,232,2.313,233,1.506,234,1.266,235,3.228,236,1.826,237,1.506,238,2.313,239,2.313,240,2.313,241,2.313,242,1.826,243,2.313,244,3.718,245,3.228,246,3.228,247,3.228,248,3.228,249,4.024,250,2.101,251,1.826,252,1.506,253,1.826,254,2.549,255,1.506,256,2.313,257,2.313,258,1.506,259,2.313,260,2.313,261,2.313,262,2.313,263,1.826,264,2.549,265,2.313,266,2.313,267,2.313,268,2.313,269,3.228,270,2.313,271,2.313,272,2.936,273,3.228,274,1.826,275,1.826,276,2.313,277,2.313,278,2.421,279,3.228,280,2.313,281,2.313,282,2.313,283,2.313,284,2.313,285,2.313,286,2.313,287,2.313,288,2.313,289,2.313,290,2.313,291,2.313,292,1.826,293,2.313,294,2.313,295,2.313,296,2.313,297,2.313,298,1.506,299,1.826,300,2.313,301,3.718,302,2.313,303,2.313,304,2.313]],["title/classes/RequestCache.html",[73,1.206,171,1.028]],["body/classes/RequestCache.html",[3,0.665,4,0.935,5,0.665,6,0.894,10,0.55,12,1.462,15,0.698,16,0.064,17,0.935,35,0.935,36,0.665,38,1.042,46,1.042,70,0.058,71,0.045,72,0.034,73,1.289,75,1.805,82,2.882,84,2.882,88,1.805,89,2.823,91,3.424,92,3.424,111,2.272,113,2.151,122,2.657,125,1.289,129,1.289,137,0.665,138,1.519,156,3.558,159,2.882,163,2.189,168,2.934,171,1.446,255,1.805,274,2.189,275,2.189,305,3.558,306,2.376,307,4.627,308,3.65,309,3.65,310,2.773,311,4.337,312,4.081,313,2.773,314,2.773,315,3.65,316,4.888,317,4.843,318,2.773,319,4.081,320,3.65,321,2.773,322,3.65,323,2.773,324,2.773,325,2.773,326,2.773,327,2.773,328,2.773]],["title/changelog.html",[329,1.427,330,1.2,331,1.427]],["body/changelog.html",[0,0.292,2,0.248,3,0.738,11,0.293,12,0.293,13,0.686,15,0.14,16,0.045,18,0.686,20,1.86,41,0.504,63,0.686,70,0.011,71,0.018,72,0.04,77,0.887,79,0.686,89,0.565,94,0.565,96,1.188,100,1.537,109,0.565,132,0.404,151,1.43,191,0.818,198,0.404,200,0.565,201,1.579,202,2.408,210,1.574,231,2.43,233,0.973,234,1.779,236,0.686,237,1.713,242,0.686,255,0.973,258,1.52,263,1.18,272,3.083,278,0.973,292,1.18,330,1.077,331,0.973,332,1.18,333,0.686,334,0.686,335,2.566,336,0.869,337,2.631,338,1.966,339,1.966,340,5.01,341,3.25,342,2.078,343,3.526,344,0.869,345,1.494,346,0.869,347,0.869,348,0.869,349,1.494,350,3.905,351,3.14,352,0.869,353,2.874,354,0.476,355,0.869,356,0.869,357,0.869,358,1.966,359,1.553,360,0.869,361,0.869,362,1.18,363,0.869,364,2.874,365,3.638,366,3.737,367,1.494,368,2.631,369,0.869,370,1.494,371,1.494,372,2.874,373,1.494,374,0.869,375,0.869,376,2.874,377,0.869,378,1.494,379,2.43,380,1.494,381,3.714,382,2.874,383,1.844,384,0.869,385,3.077,386,3.562,387,0.869,388,0.869,389,1.494,390,2.335,391,0.869,392,2.335,393,0.869,394,1.494,395,3.638,396,1.553,397,0.869,398,1.494,399,1.966,400,0.869,401,0.869,402,2.425,403,1.966,404,0.869,405,1.966,406,1.494,407,0.869,408,1.494,409,0.869,410,0.869,411,0.869,412,3.905,413,0.869,414,0.869,415,0.686,416,0.686,417,1.713,418,0.686,419,0.869,420,1.494,421,0.686,422,0.869,423,1.494,424,2.335,425,2.335,426,0.869,427,1.494,428,1.966,429,0.869,430,0.869,431,1.494,432,0.869,433,0.869,434,2.874,435,1.871,436,2.078,437,1.553,438,0.869,439,2.078,440,0.869,441,1.494,442,0.869,443,1.966,444,2.566,445,3.826,446,0.869,447,0.869,448,1.494,449,3.638,450,1.553,451,0.869,452,2.874,453,2.631,454,0.869,455,0.869,456,2.631,457,0.869,458,0.869,459,0.869,460,0.869,461,1.966,462,0.869,463,1.18,464,1.18,465,0.869,466,2.566,467,0.869,468,0.869,469,2.873,470,0.869,471,3.976,472,2.566,473,0.869,474,0.869,475,2.078,476,2.078,477,0.869,478,1.494,479,0.869,480,0.869,481,1.966,482,1.494,483,0.869,484,0.869,485,1.494,486,1.494,487,1.494,488,1.494,489,0.869,490,1.966,491,0.869,492,0.869,493,0.686,494,0.869,495,1.553,496,1.494,497,1.494,498,0.869,499,0.869,500,4.153,501,0.869,502,1.494,503,1.494,504,1.494,505,2.335,506,1.494,507,0.869,508,0.869,509,0.869,510,0.869,511,1.966,512,0.869,513,1.494,514,0.869,515,0.869,516,1.18,517,2.874,518,1.18,519,0.869,520,0.686,521,0.869,522,0.869,523,2.631,524,2.335,525,0.869,526,1.966,527,1.494,528,2.874,529,1.18,530,1.494,531,2.335,532,0.869,533,0.869,534,2.335,535,0.869,536,0.869,537,0.869,538,0.869,539,0.869,540,1.494,541,1.494,542,0.869,543,1.494,544,0.869,545,0.686,546,1.494,547,0.869,548,1.494,549,0.869,550,0.869,551,1.844,552,0.869,553,0.869,554,0.869,555,0.869,556,0.869,557,1.494,558,0.869,559,0.869,560,0.686,561,0.869,562,0.869,563,0.869,564,0.869,565,1.494,566,0.869,567,0.869,568,0.869,569,0.869,570,0.869,571,1.494,572,0.869,573,2.874,574,0.869,575,0.869,576,1.966,577,1.966,578,1.494,579,0.869,580,1.494,581,0.869,582,0.686,583,0.686,584,0.869,585,1.494,586,0.869,587,0.869,588,1.52,589,0.869,590,0.869,591,1.494,592,1.494,593,0.869,594,0.869,595,1.494,596,1.494,597,0.869,598,1.494,599,2.335,600,1.966,601,0.869,602,0.869,603,0.869,604,0.869,605,0.686,606,0.686,607,0.869,608,1.494,609,0.869,610,0.869,611,0.869,612,0.869,613,1.494,614,2.335,615,0.869,616,0.869,617,0.869,618,0.869,619,2.874,620,1.966,621,0.869,622,0.869,623,1.966,624,1.494,625,1.494,626,1.494,627,2.335,628,0.869,629,2.335,630,0.869,631,0.869,632,1.494,633,0.869,634,0.869,635,0.869,636,0.869,637,0.869,638,2.335,639,0.869,640,1.966,641,2.335,642,0.869,643,1.966,644,2.631,645,1.494,646,1.494,647,1.494,648,1.494,649,1.966,650,2.335,651,2.631,652,1.494,653,1.966,654,0.869,655,0.869,656,3.077,657,1.966,658,0.869,659,2.335,660,2.335,661,3.397,662,0.869,663,0.869,664,0.869,665,0.869,666,0.869,667,0.869,668,1.494,669,0.869,670,1.494,671,0.869,672,0.869,673,0.869,674,0.869,675,1.494,676,0.869,677,1.966,678,0.869,679,0.869,680,1.494,681,1.553,682,1.494,683,1.966,684,0.869,685,0.869,686,0.869,687,1.494,688,0.869,689,0.869,690,0.869,691,0.869,692,0.869,693,0.869,694,0.869,695,1.494,696,0.869,697,0.869,698,2.335,699,2.874,700,1.494,701,1.966,702,1.494,703,2.335,704,0.869,705,0.869,706,0.869,707,0.869,708,1.966,709,0.869,710,0.869,711,0.869,712,1.494,713,1.494,714,1.494,715,1.494,716,1.966,717,0.869,718,0.869,719,0.869,720,0.869,721,0.869,722,0.869,723,0.686,724,0.869,725,0.869,726,0.869,727,1.494,728,0.869,729,0.869,730,1.494,731,0.869,732,0.869,733,0.869,734,0.869,735,0.869,736,0.869,737,0.869,738,0.869,739,0.869,740,3.25,741,0.869,742,1.553,743,3.25,744,1.966,745,2.335,746,1.494,747,1.966,748,0.869,749,1.494,750,0.869,751,0.869,752,0.869,753,1.494,754,1.494,755,0.869,756,0.869,757,0.869,758,0.869,759,1.494,760,0.869,761,1.966,762,0.869,763,0.869,764,0.869,765,1.844,766,0.869,767,0.686,768,0.869,769,0.869,770,0.869,771,0.869,772,0.869,773,0.869,774,0.869,775,0.869,776,0.869,777,0.869,778,0.686,779,2.631,780,0.869,781,0.869,782,0.869,783,0.869,784,0.869,785,0.869,786,0.869,787,0.869,788,0.869,789,0.869,790,0.869,791,0.869,792,0.869,793,0.869,794,0.869,795,1.494,796,0.869,797,1.494,798,0.869,799,1.494,800,1.494,801,2.335,802,2.335,803,1.494,804,1.494,805,0.869,806,0.869,807,0.869,808,1.966,809,0.869,810,0.686,811,0.869,812,0.869,813,0.869,814,0.869,815,0.869,816,0.869,817,1.494,818,3.526,819,1.966,820,0.869,821,1.494,822,0.869,823,0.869,824,0.869,825,0.869,826,1.494,827,0.869,828,0.869,829,0.869,830,0.869,831,1.494,832,2.43,833,1.494,834,0.869,835,0.869,836,0.973,837,0.869,838,0.869,839,2.335,840,0.869,841,1.494,842,0.869,843,0.869,844,0.869,845,1.52,846,0.869,847,1.494,848,0.869,849,0.869,850,0.869,851,1.494,852,1.494,853,0.869,854,0.869,855,0.869,856,0.869,857,1.494,858,1.966,859,1.494,860,0.869,861,0.686,862,1.18,863,0.869,864,0.869,865,0.869,866,0.869,867,0.869,868,0.869,869,0.869,870,0.869,871,0.869,872,0.686,873,0.869,874,0.869,875,1.494,876,0.869,877,0.869,878,0.869,879,0.869,880,0.869,881,0.869,882,0.869,883,1.494,884,1.494,885,0.869,886,0.686,887,0.869,888,0.686,889,0.686,890,0.869,891,0.869,892,0.869,893,1.494,894,0.869,895,0.869,896,0.869,897,0.869,898,0.869,899,0.869,900,0.869,901,0.869,902,0.869,903,0.869,904,0.869,905,1.494,906,0.686,907,0.869,908,0.869,909,1.494,910,0.869,911,0.686,912,0.869,913,0.869,914,0.869,915,0.869,916,0.869,917,0.869,918,0.869,919,0.869]],["title/coverage.html",[845,2.274]],["body/coverage.html",[0,0.356,1,1.114,5,0.41,6,1.031,7,2.047,9,0.795,15,0.276,16,0.064,27,1.351,30,2.272,36,1.23,70,0.021,71,0.032,72,0.021,73,1.205,74,0.795,76,1.687,77,1.055,78,1.687,96,0.577,127,1.114,128,2.471,129,1.905,136,1.055,137,0.75,165,0.937,166,2.16,167,2.16,169,1.114,171,0.678,218,1.114,219,2.569,220,2.748,250,1.114,252,1.114,254,2.047,298,1.687,305,1.351,306,1.114,354,0.937,402,1.419,435,1.114,845,1.114,920,1.711,921,1.711,922,5.196,923,1.711,924,1.711,925,5.182,926,3.02,927,1.711,928,3.129,929,1.711,930,2.592,931,1.711,932,4.749,933,1.351,934,1.351,935,3.129,936,1.711,937,1.711,938,1.711,939,1.711,940,1.351,941,1.711,942,2.471,943,1.351,944,1.351,945,2.047,946,2.047,947,1.351,948,3.49,949,2.592,950,2.047,951,2.592,952,1.351,953,2.047,954,2.047,955,1.711,956,1.711,957,2.047,958,2.592,959,1.351,960,2.592,961,2.592,962,1.351,963,2.592,964,1.351,965,1.351,966,1.711,967,3.479,968,3.479,969,1.711,970,1.711,971,1.711,972,1.711,973,1.711,974,1.711,975,1.711,976,1.711,977,1.711,978,1.351,979,2.047,980,2.047,981,2.047,982,1.711,983,1.351,984,3.237,985,1.711,986,1.711,987,1.711,988,1.711,989,1.711,990,1.711,991,1.711,992,2.037,993,1.351,994,1.351,995,1.711,996,1.711,997,1.711,998,1.711]],["title/dependencies.html",[421,1.731,588,2.023]],["body/dependencies.html",[5,0.621,16,0.065,20,1.419,21,2.756,22,2.047,23,0.874,24,2.047,25,2.047,70,0.032,71,0.043,72,0.032,103,2.047,137,0.621,138,1.177,224,2.047,226,2.047,227,2.047,228,2.047,264,2.047,354,1.419,417,1.688,439,2.047,463,2.047,518,2.047,529,2.047,582,2.047,583,2.047,588,1.688,606,2.756,681,2.047,742,2.756,836,2.273,999,2.593,1000,2.593,1001,2.593,1002,4.872,1003,2.593,1004,2.593,1005,2.593,1006,2.593,1007,2.593,1008,2.593,1009,2.593,1010,2.593,1011,3.491,1012,2.593,1013,2.593,1014,2.593,1015,2.593,1016,2.593,1017,2.593,1018,2.593,1019,3.947,1020,2.593,1021,3.491,1022,2.593,1023,2.593,1024,2.593,1025,2.593,1026,3.947,1027,2.593,1028,2.593,1029,2.593,1030,2.593,1031,2.593,1032,2.593,1033,2.593,1034,2.593,1035,3.491,1036,2.593,1037,2.593,1038,2.593,1039,3.491,1040,2.593,1041,2.593,1042,3.491,1043,3.491,1044,2.593,1045,2.593,1046,2.593,1047,2.593,1048,2.047,1049,2.593,1050,2.593,1051,2.593,1052,2.593,1053,2.593,1054,2.593,1055,2.593,1056,2.593,1057,2.593,1058,2.593,1059,2.593,1060,2.593,1061,2.593,1062,2.593,1063,2.593,1064,2.593,1065,2.593,1066,2.593,1067,2.593,1068,2.593,1069,2.593,1070,2.593,1071,2.593,1072,2.593,1073,2.593,1074,3.491,1075,2.593,1076,2.593,1077,2.593,1078,2.593,1079,2.593,1080,2.593,1081,2.593,1082,2.593,1083,2.593,1084,2.593,1085,2.593,1086,2.593,1087,2.593,1088,2.593,1089,2.593,1090,2.593,1091,2.593,1092,2.593,1093,2.593,1094,3.491,1095,2.593,1096,2.593,1097,2.593,1098,2.593,1099,2.593,1100,2.593,1101,2.593,1102,2.593,1103,2.593,1104,3.491,1105,2.593,1106,2.593,1107,2.593,1108,2.593,1109,2.593,1110,2.593,1111,2.593,1112,2.593,1113,2.593,1114,2.593,1115,2.593,1116,2.593,1117,2.593,1118,2.593]],["title/index.html",[10,0.435,329,1.427,330,1.2]],["body/index.html",[0,0.362,2,0.846,3,1.103,16,0.047,70,0.036,71,0.047,72,0.036,100,1.744,191,1.623,201,2.068,234,2.436,237,2.482,331,1.93,332,3.011,333,3.011,334,3.011,335,3.328,342,2.341,359,3.011,362,3.011,379,2.341,381,3.011,383,2.341,386,3.328,402,2.308,415,2.341,416,2.341,417,1.93,418,2.341,436,3.635,437,3.513,444,3.011,450,2.341,464,3.011,466,2.341,469,2.341,476,2.341,495,2.341,605,2.341,767,2.341,862,2.341,872,2.341,886,2.341,1119,3.813,1120,2.965,1121,2.965,1122,2.965,1123,2.965,1124,3.011,1125,2.965,1126,2.965,1127,2.965,1128,3.813,1129,3.813,1130,3.813,1131,4.215,1132,2.965,1133,2.965,1134,4.449,1135,4.215,1136,2.965,1137,2.965,1138,3.813,1139,2.965,1140,2.965,1141,2.965,1142,3.813,1143,2.965,1144,2.965,1145,2.965,1146,2.341,1147,4.449,1148,2.965,1149,2.965,1150,2.965,1151,2.965,1152,2.965,1153,2.965,1154,2.965,1155,2.965,1156,2.965,1157,2.965,1158,2.965,1159,2.965,1160,2.965,1161,2.965,1162,2.965,1163,2.965,1164,2.965]],["title/license.html",[329,1.427,330,1.2,1165,1.731]],["body/license.html",[16,0.051,23,1.125,70,0.041,71,0.051,72,0.041,198,1.909,201,1.551,435,2.172,475,3.243,493,3.513,520,2.634,723,3.243,810,2.634,832,2.634,889,2.634,911,2.634,1124,3.953,1165,2.634,1166,3.336,1167,4.45,1168,3.336,1169,3.336,1170,4.107,1171,3.336,1172,3.336,1173,3.336,1174,3.336,1175,3.336,1176,3.336,1177,4.107,1178,3.336,1179,3.336,1180,3.336,1181,3.336,1182,3.336,1183,3.336,1184,3.336,1185,3.336,1186,3.336,1187,3.336,1188,3.336,1189,3.336,1190,4.107,1191,3.336,1192,3.336,1193,3.336,1194,3.336,1195,3.336,1196,3.336,1197,4.107,1198,3.336,1199,3.336,1200,3.336,1201,3.336,1202,3.336,1203,3.336,1204,3.336,1205,3.336,1206,3.336,1207,3.336,1208,3.336,1209,3.336,1210,3.336,1211,3.336,1212,3.336,1213,3.336,1214,3.336,1215,3.336,1216,3.336,1217,3.336,1218,3.336,1219,3.336,1220,3.336,1221,3.336,1222,3.336,1223,3.336,1224,3.336,1225,3.336]],["title/modules.html",[1226,2.758]],["body/modules.html",[16,0.057,70,0.05,71,0.057,72,0.05,1226,3.192]],["title/overview.html",[1227,2.758]],["body/overview.html",[2,1.144,16,0.056,70,0.049,71,0.056,72,0.049,75,2.608,765,3.163,1227,3.163,1228,4.005]],["title/miscellaneous/typealiases.html",[1229,1.2,1230,3.108]],["body/miscellaneous/typealiases.html",[6,0.993,10,0.687,15,0.557,16,0.052,36,1.084,70,0.043,71,0.052,72,0.043,76,2.253,77,1.624,78,2.734,87,3.316,129,1.952,134,1.371,136,1.416,137,1.007,166,1.895,167,2.3,173,3.061,926,2.253,940,2.733,945,2.733,946,3.316,964,2.733,965,3.571,984,2.733,992,2.253,1229,1.895,1231,3.461,1232,4.2,1233,2.733,1234,4.2,1235,4.2,1236,4.2,1237,4.2,1238,4.2,1239,4.2,1240,4.2,1241,3.461,1242,4.2,1243,3.461,1244,4.2,1245,2.733]],["title/miscellaneous/variables.html",[1229,1.2,1246,2.454]],["body/miscellaneous/variables.html",[6,0.937,10,0.433,15,0.774,16,0.064,30,2.944,38,1.028,45,1.226,46,0.623,49,2.016,70,0.027,71,0.038,72,0.038,83,1.722,94,3.204,95,3.204,100,0.735,116,1.722,129,1.822,130,1.014,131,1.014,133,1.822,134,0.864,136,1.396,137,0.94,138,0.735,143,1.44,150,2.016,151,1.822,216,2.016,219,1.42,220,2.345,233,1.42,234,1.972,250,2.016,251,1.722,252,2.016,253,1.722,258,1.42,278,1.42,298,2.016,299,2.445,306,2.016,351,1.722,354,1.194,396,1.722,402,1.194,472,1.722,516,1.722,545,1.722,551,1.722,560,2.445,778,1.722,836,1.42,861,3.096,888,1.722,906,1.722,926,1.42,933,2.445,934,2.445,942,1.722,943,2.844,944,2.844,947,1.722,950,1.722,952,1.722,953,1.722,954,3.096,957,1.722,959,1.722,962,1.722,967,1.722,968,2.445,978,2.445,979,1.722,980,2.445,981,2.445,983,2.445,992,1.42,993,2.445,994,2.445,1048,2.445,1146,2.445,1229,1.194,1233,2.844,1245,2.445,1246,1.722,1247,3.601,1248,2.181,1249,4.141,1250,3.097,1251,2.181,1252,3.921,1253,2.181,1254,2.181,1255,2.181,1256,2.181,1257,3.921,1258,2.181,1259,2.181,1260,3.921,1261,2.181,1262,3.097,1263,3.097,1264,3.097,1265,2.181,1266,2.181,1267,2.181,1268,2.181,1269,2.181,1270,2.181,1271,2.181,1272,2.181,1273,2.181,1274,2.181,1275,2.181,1276,2.181,1277,2.181,1278,2.181,1279,2.181,1280,2.181,1281,2.181,1282,2.181,1283,2.181,1284,2.181,1285,2.181,1286,2.181,1287,2.181,1288,2.181,1289,2.181,1290,2.181,1291,2.181,1292,2.181,1293,2.181,1294,2.181,1295,2.181,1296,2.181,1297,2.181,1298,2.181,1299,2.181,1300,2.181,1301,2.181,1302,2.181,1303,2.181,1304,2.181,1305,2.181,1306,3.097,1307,3.097,1308,3.097,1309,2.181,1310,3.097,1311,2.181,1312,2.181,1313,3.097,1314,2.181,1315,2.181,1316,2.181,1317,3.097,1318,2.181,1319,2.181,1320,2.181,1321,2.181,1322,2.181]]],"invertedIndex":[["",{"_index":16,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":922,"title":{},"body":{"coverage.html":{}}}],["0.1.0",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["0.11.4",{"_index":1118,"title":{},"body":{"dependencies.html":{}}}],["0.18.0",{"_index":1056,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["0.20.0",{"_index":1075,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":862,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["0/1",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":923,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":935,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":955,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":996,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":995,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":709,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":644,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":368,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":614,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":338,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":390,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":505,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["1.0",{"_index":743,"title":{},"body":{"changelog.html":{}}}],["1.0.0",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["1.0.11",{"_index":1052,"title":{},"body":{"dependencies.html":{}}}],["1.0.3",{"_index":1059,"title":{},"body":{"dependencies.html":{}}}],["1.0.6",{"_index":1113,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["1.16.0",{"_index":1090,"title":{},"body":{"dependencies.html":{}}}],["1.19.0",{"_index":1053,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":742,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.2.3",{"_index":1063,"title":{},"body":{"dependencies.html":{}}}],["1.2.6",{"_index":1093,"title":{},"body":{"dependencies.html":{}}}],["1.3.5",{"_index":708,"title":{},"body":{"changelog.html":{}}}],["1.4.0",{"_index":681,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.4.1",{"_index":1078,"title":{},"body":{"dependencies.html":{}}}],["1.5.0",{"_index":643,"title":{},"body":{"changelog.html":{}}}],["1.6.0",{"_index":627,"title":{},"body":{"changelog.html":{}}}],["1.7.0",{"_index":613,"title":{},"body":{"changelog.html":{}}}],["1.7.2",{"_index":1066,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":210,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["10.0.0",{"_index":1073,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":146,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["1000",{"_index":148,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["10x",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["11",{"_index":683,"title":{},"body":{"changelog.html":{}}}],["11.2.1",{"_index":1095,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":379,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["12.0.1",{"_index":1097,"title":{},"body":{"dependencies.html":{}}}],["12.1.1",{"_index":1002,"title":{},"body":{"dependencies.html":{}}}],["12.1.3",{"_index":1010,"title":{},"body":{"dependencies.html":{}}}],["13",{"_index":506,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":369,"title":{},"body":{"changelog.html":{}}}],["15.126.1",{"_index":1000,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":578,"title":{},"body":{"changelog.html":{}}}],["16.0.0",{"_index":1068,"title":{},"body":{"dependencies.html":{}}}],["17",{"_index":339,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":765,"title":{},"body":{"changelog.html":{},"overview.html":{}}}],["2.0.0",{"_index":577,"title":{},"body":{"changelog.html":{}}}],["2.0.5",{"_index":1071,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":529,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.2.0",{"_index":518,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.3.0",{"_index":513,"title":{},"body":{"changelog.html":{}}}],["2.3.1",{"_index":504,"title":{},"body":{"changelog.html":{}}}],["2.4.0",{"_index":487,"title":{},"body":{"changelog.html":{}}}],["2.5.0",{"_index":463,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.6.7",{"_index":1098,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":1060,"title":{},"body":{"dependencies.html":{}}}],["2019",{"_index":832,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2020",{"_index":745,"title":{},"body":{"changelog.html":{}}}],["2021",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":337,"title":{},"body":{"changelog.html":{}}}],["21",{"_index":615,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["24",{"_index":894,"title":{},"body":{"changelog.html":{}}}],["26",{"_index":645,"title":{},"body":{"changelog.html":{}}}],["26th",{"_index":686,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["3",{"_index":730,"title":{},"body":{"changelog.html":{}}}],["3.0.0",{"_index":439,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["3.0.12",{"_index":1026,"title":{},"body":{"dependencies.html":{}}}],["3.1.0",{"_index":389,"title":{},"body":{"changelog.html":{}}}],["3.1.1",{"_index":378,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":367,"title":{},"body":{"changelog.html":{}}}],["3.3.0",{"_index":336,"title":{},"body":{"changelog.html":{}}}],["3.5.5",{"_index":1032,"title":{},"body":{"dependencies.html":{}}}],["3.5.7",{"_index":1034,"title":{},"body":{"dependencies.html":{}}}],["3.6",{"_index":1151,"title":{},"body":{"index.html":{}}}],["3.6.0",{"_index":1105,"title":{},"body":{"dependencies.html":{}}}],["3.7.1",{"_index":1043,"title":{},"body":{"dependencies.html":{}}}],["3.7.3",{"_index":1046,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":530,"title":{},"body":{"changelog.html":{}}}],["31",{"_index":796,"title":{},"body":{"changelog.html":{}}}],["3d",{"_index":471,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":764,"title":{},"body":{"changelog.html":{}}}],["4.0",{"_index":1129,"title":{},"body":{"index.html":{}}}],["4.0.2",{"_index":1040,"title":{},"body":{"dependencies.html":{}}}],["4.17.1",{"_index":1069,"title":{},"body":{"dependencies.html":{}}}],["4.17.21",{"_index":1088,"title":{},"body":{"dependencies.html":{}}}],["4.3.0",{"_index":1057,"title":{},"body":{"dependencies.html":{}}}],["4.6.0",{"_index":1079,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":1228,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":1082,"title":{},"body":{"dependencies.html":{}}}],["5.2.0",{"_index":1086,"title":{},"body":{"dependencies.html":{}}}],["6.0.1",{"_index":1085,"title":{},"body":{"dependencies.html":{}}}],["6.10.2",{"_index":1099,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":1037,"title":{},"body":{"dependencies.html":{}}}],["6.5.1",{"_index":1110,"title":{},"body":{"dependencies.html":{}}}],["6.6.7",{"_index":1107,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":147,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["8",{"_index":263,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["8.3.2",{"_index":1116,"title":{},"body":{"dependencies.html":{}}}],["8.5.12",{"_index":1030,"title":{},"body":{"dependencies.html":{}}}],["8.5.7",{"_index":1019,"title":{},"body":{"dependencies.html":{}}}],["8.7.8",{"_index":1022,"title":{},"body":{"dependencies.html":{}}}],["85",{"_index":904,"title":{},"body":{"changelog.html":{}}}],["90",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["95",{"_index":373,"title":{},"body":{"changelog.html":{}}}],["9th",{"_index":655,"title":{},"body":{"changelog.html":{}}}],["__",{"_index":157,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["_error",{"_index":275,"title":{},"body":{"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["_key",{"_index":211,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["_next",{"_index":299,"title":{},"body":{"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["_req",{"_index":1252,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_res",{"_index":216,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"miscellaneous/variables.html":{}}}],["ability",{"_index":546,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":889,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["accurate",{"_index":642,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":1218,"title":{},"body":{"license.html":{}}}],["actions",{"_index":734,"title":{},"body":{"changelog.html":{}}}],["actually",{"_index":241,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["adapter",{"_index":106,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["added",{"_index":340,"title":{},"body":{"changelog.html":{}}}],["additional",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["addressed",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["adds",{"_index":345,"title":{},"body":{"changelog.html":{}}}],["adjusting",{"_index":781,"title":{},"body":{"changelog.html":{}}}],["adjustment",{"_index":679,"title":{},"body":{"changelog.html":{}}}],["advanced",{"_index":581,"title":{},"body":{"changelog.html":{}}}],["again",{"_index":754,"title":{},"body":{"changelog.html":{}}}],["age",{"_index":292,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["agemax",{"_index":245,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["agemean",{"_index":247,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["agemin",{"_index":246,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["agerange",{"_index":1271,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ala",{"_index":510,"title":{},"body":{"changelog.html":{}}}],["aliases",{"_index":1231,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowdots",{"_index":48,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["allows",{"_index":662,"title":{},"body":{"changelog.html":{}}}],["allowstale",{"_index":1287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alpha",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["alpha.1",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["alpha.2",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["alpha.3",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["alt",{"_index":1133,"title":{},"body":{"index.html":{}}}],["analytics",{"_index":583,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["anatomical",{"_index":677,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":1188,"title":{},"body":{"license.html":{}}}],["angular",{"_index":417,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["angular/animations",{"_index":1001,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":1003,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":1004,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":1005,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":1006,"title":{},"body":{"dependencies.html":{}}}],["angular/elements",{"_index":1007,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":1008,"title":{},"body":{"dependencies.html":{}}}],["angular/material",{"_index":1009,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":1011,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":1013,"title":{},"body":{"dependencies.html":{}}}],["angular/youtube",{"_index":1014,"title":{},"body":{"dependencies.html":{}}}],["anyautoprunelrucache",{"_index":1232,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["api",{"_index":234,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["api.hubmapconsortium.org",{"_index":1143,"title":{},"body":{"index.html":{}}}],["api/ccf",{"_index":116,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/app.ts",{"_index":7,"title":{},"body":{"interfaces/AppOptions.html":{},"coverage.html":{}}}],["api/src/lib/environment.ts",{"_index":926,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/middleware/database",{"_index":166,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["api/src/lib/middleware/response",{"_index":128,"title":{},"body":{"interfaces/CacheOptions.html":{},"coverage.html":{}}}],["api/src/lib/polyfills.ts",{"_index":940,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["api/src/lib/routes/browser.ts",{"_index":942,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/routes/v1/database",{"_index":945,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["api/src/lib/routes/v1/get",{"_index":949,"title":{},"body":{"coverage.html":{}}}],["api/src/lib/routes/v1/gtex/index.ts",{"_index":953,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/routes/v1/gtex/rui",{"_index":219,"title":{},"body":{"interfaces/GtexTissue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/routes/v1/hubmap/index.ts",{"_index":957,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/routes/v1/hubmap/rui",{"_index":958,"title":{},"body":{"coverage.html":{}}}],["api/src/lib/routes/v1/index.ts",{"_index":959,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/routes/v1/reference",{"_index":960,"title":{},"body":{"coverage.html":{}}}],["api/src/lib/routes/v1/sparql.ts",{"_index":963,"title":{},"body":{"coverage.html":{}}}],["api/src/lib/routes/v1/utils/forward",{"_index":964,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["api/src/lib/routes/v1/utils/parse",{"_index":967,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/routes/v1/utils/use",{"_index":979,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/server.ts",{"_index":984,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["api/src/lib/utils/auto",{"_index":992,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["api/src/lib/utils/ccf",{"_index":76,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["api/src/lib/utils/request",{"_index":305,"title":{},"body":{"classes/RequestCache.html":{},"coverage.html":{}}}],["apifile",{"_index":1254,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":39,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.set('database",{"_index":40,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.set('query",{"_index":43,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.use",{"_index":68,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.use('/v1",{"_index":69,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.use(cors",{"_index":64,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.use(databaseloader(options",{"_index":67,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.use(helmet",{"_index":53,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.use(json",{"_index":66,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["app.use(urlencoded",{"_index":65,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["appear",{"_index":457,"title":{},"body":{"changelog.html":{}}}],["application",{"_index":666,"title":{},"body":{"changelog.html":{}}}],["applied",{"_index":717,"title":{},"body":{"changelog.html":{}}}],["appoptions",{"_index":1,"title":{"interfaces/AppOptions.html":{}},"body":{"interfaces/AppOptions.html":{},"coverage.html":{}}}],["appropriate",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["april",{"_index":654,"title":{},"body":{"changelog.html":{}}}],["args",{"_index":317,"title":{},"body":{"classes/RequestCache.html":{}}}],["arising",{"_index":1222,"title":{},"body":{"license.html":{}}}],["asct+b",{"_index":446,"title":{},"body":{"changelog.html":{}}}],["assignment/selection",{"_index":630,"title":{},"body":{"changelog.html":{}}}],["associated",{"_index":520,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["async",{"_index":113,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["attempt",{"_index":257,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["attempts",{"_index":491,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":1211,"title":{},"body":{"license.html":{}}}],["automatic",{"_index":769,"title":{},"body":{"changelog.html":{}}}],["automatically",{"_index":718,"title":{},"body":{"changelog.html":{}}}],["autoprunelrucache",{"_index":134,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":761,"title":{},"body":{"changelog.html":{}}}],["avoid",{"_index":566,"title":{},"body":{"changelog.html":{}}}],["await",{"_index":125,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["award",{"_index":1163,"title":{},"body":{"index.html":{}}}],["backend",{"_index":468,"title":{},"body":{"changelog.html":{}}}],["background",{"_index":886,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["base",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":553,"title":{},"body":{"changelog.html":{}}}],["basic",{"_index":579,"title":{},"body":{"changelog.html":{}}}],["before",{"_index":461,"title":{},"body":{"changelog.html":{}}}],["being",{"_index":612,"title":{},"body":{"changelog.html":{}}}],["beta",{"_index":444,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["better",{"_index":531,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["bind",{"_index":1051,"title":{},"body":{"dependencies.html":{}}}],["block",{"_index":403,"title":{},"body":{"changelog.html":{}}}],["blocks",{"_index":396,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["bmi",{"_index":484,"title":{},"body":{"changelog.html":{}}}],["bmirange",{"_index":1272,"title":{},"body":{"miscellaneous/variables.html":{}}}],["board",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":20,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/CacheOptions.html":{},"changelog.html":{},"dependencies.html":{}}}],["boolean",{"_index":142,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/GtexTissue.html":{}}}],["both",{"_index":516,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["box",{"_index":565,"title":{},"body":{"changelog.html":{}}}],["breaking",{"_index":602,"title":{},"body":{"changelog.html":{}}}],["bringing",{"_index":621,"title":{},"body":{"changelog.html":{}}}],["browser",{"_index":836,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["browserify",{"_index":1108,"title":{},"body":{"dependencies.html":{}}}],["browserroute",{"_index":943,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["browserroutes",{"_index":31,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["browsing",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["bug",{"_index":365,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":1125,"title":{},"body":{"index.html":{}}}],["builds",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["button",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["c",{"_index":1168,"title":{},"body":{"license.html":{}}}],["cache",{"_index":138,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["cache.del(key",{"_index":328,"title":{},"body":{"classes/RequestCache.html":{}}}],["cache.get(key",{"_index":159,"title":{},"body":{"interfaces/CacheOptions.html":{},"classes/RequestCache.html":{}}}],["cache.get(selecttoken(token",{"_index":217,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["cache.get(token",{"_index":302,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["cache.set(key",{"_index":163,"title":{},"body":{"interfaces/CacheOptions.html":{},"classes/RequestCache.html":{}}}],["cache.ts",{"_index":129,"title":{},"body":{"interfaces/CacheOptions.html":{},"classes/RequestCache.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["cache.ts:10",{"_index":318,"title":{},"body":{"classes/RequestCache.html":{}}}],["cache.ts:23",{"_index":323,"title":{},"body":{"classes/RequestCache.html":{}}}],["cache.ts:27",{"_index":321,"title":{},"body":{"classes/RequestCache.html":{}}}],["cache.ts:4",{"_index":314,"title":{},"body":{"classes/RequestCache.html":{}}}],["cache_dir",{"_index":983,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cacheable",{"_index":1112,"title":{},"body":{"dependencies.html":{}}}],["cached",{"_index":980,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["cachedresponse",{"_index":158,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["cacheoptions",{"_index":127,"title":{"interfaces/CacheOptions.html":{}},"body":{"interfaces/CacheOptions.html":{},"coverage.html":{}}}],["cacheresponses",{"_index":939,"title":{},"body":{"coverage.html":{}}}],["cacheresponses(options",{"_index":145,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["callback",{"_index":550,"title":{},"body":{"changelog.html":{}}}],["called",{"_index":608,"title":{},"body":{"changelog.html":{}}}],["cancelregistration",{"_index":549,"title":{},"body":{"changelog.html":{}}}],["candidate",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["cannon",{"_index":1054,"title":{},"body":{"dependencies.html":{}}}],["card",{"_index":586,"title":{},"body":{"changelog.html":{}}}],["carousel",{"_index":591,"title":{},"body":{"changelog.html":{}}}],["cases",{"_index":794,"title":{},"body":{"changelog.html":{}}}],["catch",{"_index":274,"title":{},"body":{"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["ccf",{"_index":100,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ccf's",{"_index":739,"title":{},"body":{"changelog.html":{}}}],["ccfdatabase",{"_index":86,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["ccfdatabaseinstance",{"_index":74,"title":{"classes/CCFDatabaseInstance.html":{}},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"coverage.html":{}}}],["ccfdatabaseoptions",{"_index":98,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["ccfdatabasestatustracker",{"_index":99,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["ccfdatabasestatustracker(this.database",{"_index":97,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["cdn.jsdelivr.net",{"_index":62,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["cell",{"_index":392,"title":{},"body":{"changelog.html":{}}}],["celltypeterms",{"_index":1274,"title":{},"body":{"miscellaneous/variables.html":{}}}],["center",{"_index":1158,"title":{},"body":{"index.html":{}}}],["change",{"_index":605,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["changed",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":331,"title":{"changelog.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["changes",{"_index":405,"title":{},"body":{"changelog.html":{}}}],["charge",{"_index":1174,"title":{},"body":{"license.html":{}}}],["checkroutesenabled",{"_index":954,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["choose",{"_index":762,"title":{},"body":{"changelog.html":{}}}],["ci/cd",{"_index":737,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":1214,"title":{},"body":{"license.html":{}}}],["clamp",{"_index":969,"title":{},"body":{"coverage.html":{}}}],["class",{"_index":73,"title":{"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{}},"body":{"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{},"coverage.html":{}}}],["classes",{"_index":75,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{},"overview.html":{}}}],["clean",{"_index":363,"title":{},"body":{"changelog.html":{}}}],["cleanup",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["click",{"_index":499,"title":{},"body":{"changelog.html":{}}}],["clicking",{"_index":598,"title":{},"body":{"changelog.html":{}}}],["client",{"_index":1147,"title":{},"body":{"index.html":{}}}],["coalescing",{"_index":194,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["code",{"_index":434,"title":{},"body":{"changelog.html":{}}}],["codebase",{"_index":748,"title":{},"body":{"changelog.html":{}}}],["codex",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["codifies",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["collaboration",{"_index":746,"title":{},"body":{"changelog.html":{}}}],["collisions",{"_index":771,"title":{},"body":{"changelog.html":{}}}],["color",{"_index":629,"title":{},"body":{"changelog.html":{}}}],["colorizing",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["combination",{"_index":763,"title":{},"body":{"changelog.html":{}}}],["come",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["coming",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["comlink",{"_index":103,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"dependencies.html":{}}}],["comlink/dist/umd/node",{"_index":105,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["common",{"_index":332,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["complexity",{"_index":637,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":432,"title":{},"body":{"changelog.html":{}}}],["component",{"_index":383,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["components",{"_index":580,"title":{},"body":{"changelog.html":{}}}],["comunica/query",{"_index":1016,"title":{},"body":{"dependencies.html":{}}}],["concat",{"_index":1058,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":1196,"title":{},"body":{"license.html":{}}}],["config",{"_index":545,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["configuration",{"_index":534,"title":{},"body":{"changelog.html":{}}}],["configurations",{"_index":544,"title":{},"body":{"changelog.html":{}}}],["confirmation",{"_index":489,"title":{},"body":{"changelog.html":{}}}],["conform",{"_index":558,"title":{},"body":{"changelog.html":{}}}],["connect",{"_index":63,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["connection",{"_index":1224,"title":{},"body":{"license.html":{}}}],["console.log(err",{"_index":182,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["consortium",{"_index":1169,"title":{},"body":{"license.html":{}}}],["const",{"_index":38,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":84,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{}}}],["constructor(cache",{"_index":310,"title":{},"body":{"classes/RequestCache.html":{}}}],["constructor(database",{"_index":85,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["constructor(public",{"_index":112,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["container",{"_index":593,"title":{},"body":{"changelog.html":{}}}],["containers",{"_index":533,"title":{},"body":{"changelog.html":{}}}],["containing",{"_index":1123,"title":{},"body":{"index.html":{}}}],["contentsecuritypolicy",{"_index":54,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["contract",{"_index":1219,"title":{},"body":{"license.html":{}}}],["control",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["coordinate",{"_index":333,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["copies",{"_index":1190,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1177,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1167,"title":{},"body":{"license.html":{}}}],["cord",{"_index":348,"title":{},"body":{"changelog.html":{}}}],["cors",{"_index":22,"title":{},"body":{"interfaces/AppOptions.html":{},"dependencies.html":{}}}],["count",{"_index":248,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["coverage",{"_index":845,"title":{"coverage.html":{}},"body":{"changelog.html":{},"coverage.html":{}}}],["createapp",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["createapp(options",{"_index":37,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["createccfdatabaseworker",{"_index":169,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"coverage.html":{}}}],["createccfdatabaseworker(options",{"_index":114,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["created",{"_index":713,"title":{},"body":{"changelog.html":{}}}],["createdatabase",{"_index":936,"title":{},"body":{"coverage.html":{}}}],["createdatabase(token",{"_index":187,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["credits",{"_index":1153,"title":{},"body":{"index.html":{}}}],["css",{"_index":1061,"title":{},"body":{"dependencies.html":{}}}],["cuboid",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["cuboids",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["currently",{"_index":481,"title":{},"body":{"changelog.html":{}}}],["cyberinfrastructure",{"_index":1155,"title":{},"body":{"index.html":{}}}],["cycle",{"_index":648,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":1215,"title":{},"body":{"license.html":{}}}],["dark/light",{"_index":552,"title":{},"body":{"changelog.html":{}}}],["data",{"_index":202,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["database",{"_index":77,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["database.worker.js",{"_index":117,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["databasecacheoptions",{"_index":165,"title":{"interfaces/DatabaseCacheOptions.html":{}},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"coverage.html":{}}}],["databasegetter",{"_index":173,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"miscellaneous/typealiases.html":{}}}],["databaseloader",{"_index":27,"title":{},"body":{"interfaces/AppOptions.html":{},"coverage.html":{}}}],["databaseloader(options",{"_index":209,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["databaseloaderoptions",{"_index":9,"title":{"interfaces/DatabaseLoaderOptions.html":{}},"body":{"interfaces/AppOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"coverage.html":{}}}],["databasequerymethods",{"_index":1235,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["databasesource",{"_index":1237,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["databasesources",{"_index":1239,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["datasets",{"_index":660,"title":{},"body":{"changelog.html":{}}}],["datasources",{"_index":204,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["dbinstance",{"_index":179,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["dbinstance.database.connect().catch((err",{"_index":181,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["dbworker",{"_index":119,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["dbworker.database",{"_index":121,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["dbworker.sparqlquery",{"_index":123,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["dbworker[releaseproxy",{"_index":124,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["deal",{"_index":1179,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":1225,"title":{},"body":{"license.html":{}}}],["december",{"_index":755,"title":{},"body":{"changelog.html":{}}}],["deck.gl/core",{"_index":1018,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/geo",{"_index":1020,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/layers",{"_index":1023,"title":{},"body":{"dependencies.html":{}}}],["deck.gl/mesh",{"_index":1024,"title":{},"body":{"dependencies.html":{}}}],["decorator",{"_index":1039,"title":{},"body":{"dependencies.html":{}}}],["deeply",{"_index":473,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":94,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["default_gtex_rui_locations",{"_index":250,"title":{},"body":{"interfaces/GtexTissue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defaultvalue",{"_index":140,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["defined",{"_index":89,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{},"changelog.html":{}}}],["del",{"_index":1278,"title":{},"body":{"miscellaneous/variables.html":{}}}],["demo",{"_index":502,"title":{},"body":{"changelog.html":{}}}],["dependencies",{"_index":588,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{}}}],["depending",{"_index":611,"title":{},"body":{"changelog.html":{}}}],["deprecated",{"_index":199,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["details",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["developed",{"_index":1154,"title":{},"body":{"index.html":{}}}],["developments",{"_index":872,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dialog",{"_index":490,"title":{},"body":{"changelog.html":{}}}],["different",{"_index":532,"title":{},"body":{"changelog.html":{}}}],["digits",{"_index":731,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["directives",{"_index":56,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["directly",{"_index":804,"title":{},"body":{"changelog.html":{}}}],["disable",{"_index":189,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["display",{"_index":523,"title":{},"body":{"changelog.html":{}}}],["displayed",{"_index":841,"title":{},"body":{"changelog.html":{}}}],["displaying",{"_index":519,"title":{},"body":{"changelog.html":{}}}],["dispose",{"_index":80,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["distribute",{"_index":1186,"title":{},"body":{"license.html":{}}}],["doc",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["doconnect",{"_index":176,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["docs",{"_index":361,"title":{},"body":{"changelog.html":{}}}],["document",{"_index":1064,"title":{},"body":{"dependencies.html":{}}}],["documentation",{"_index":435,"title":{},"body":{"changelog.html":{},"coverage.html":{},"license.html":{}}}],["done",{"_index":603,"title":{},"body":{"changelog.html":{}}}],["donor",{"_index":585,"title":{},"body":{"changelog.html":{}}}],["donors",{"_index":663,"title":{},"body":{"changelog.html":{}}}],["dorequest",{"_index":312,"title":{},"body":{"classes/RequestCache.html":{}}}],["dotenv",{"_index":1067,"title":{},"body":{"dependencies.html":{}}}],["download",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["dump",{"_index":1285,"title":{},"body":{"miscellaneous/variables.html":{}}}],["during",{"_index":647,"title":{},"body":{"changelog.html":{}}}],["dynamic",{"_index":1012,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":397,"title":{},"body":{"changelog.html":{}}}],["easier",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["effect",{"_index":785,"title":{},"body":{"changelog.html":{}}}],["efficiency",{"_index":691,"title":{},"body":{"changelog.html":{}}}],["element",{"_index":606,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["embedded",{"_index":541,"title":{},"body":{"changelog.html":{}}}],["embedding",{"_index":528,"title":{},"body":{"changelog.html":{}}}],["embedding.md",{"_index":526,"title":{},"body":{"changelog.html":{}}}],["enabled",{"_index":1260,"title":{},"body":{"miscellaneous/variables.html":{}}}],["encoding",{"_index":261,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["entry.label",{"_index":282,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["entry.mappedinhubmap",{"_index":271,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["entry['@id']?.includes(tissueinfo.tissuesitedetailid",{"_index":281,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["env",{"_index":933,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["env.gtex_routes",{"_index":1261,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env.hubmap_routes",{"_index":1265,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environment",{"_index":232,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["error",{"_index":1268,"title":{},"body":{"miscellaneous/variables.html":{}}}],["es",{"_index":1055,"title":{},"body":{"dependencies.html":{}}}],["eslint",{"_index":188,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["eslint/prefer",{"_index":192,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["etc",{"_index":563,"title":{},"body":{"changelog.html":{}}}],["eui",{"_index":386,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["eui/rui",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["eui/src/assets/gtex/data/rui_locations.jsonld",{"_index":251,"title":{},"body":{"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["eval",{"_index":61,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["event",{"_index":1210,"title":{},"body":{"license.html":{}}}],["expanded",{"_index":380,"title":{},"body":{"changelog.html":{}}}],["exploration",{"_index":1127,"title":{},"body":{"index.html":{}}}],["export",{"_index":35,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["express",{"_index":23,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"dependencies.html":{},"license.html":{}}}],["extends",{"_index":8,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["external",{"_index":548,"title":{},"body":{"changelog.html":{}}}],["extra",{"_index":1072,"title":{},"body":{"dependencies.html":{}}}],["extraction",{"_index":496,"title":{},"body":{"changelog.html":{}}}],["fail",{"_index":752,"title":{},"body":{"changelog.html":{}}}],["fails",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["false",{"_index":141,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["favor",{"_index":741,"title":{},"body":{"changelog.html":{}}}],["feature",{"_index":394,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":649,"title":{},"body":{"changelog.html":{}}}],["feel",{"_index":689,"title":{},"body":{"changelog.html":{}}}],["female",{"_index":244,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["fetch",{"_index":227,"title":{},"body":{"interfaces/GtexTissue.html":{},"dependencies.html":{}}}],["fetch(gtex_api_url).then(r",{"_index":267,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["field",{"_index":559,"title":{},"body":{"changelog.html":{}}}],["fields",{"_index":238,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":1178,"title":{},"body":{"license.html":{}}}],["filter",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["filter.ts",{"_index":968,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["filter_defaults",{"_index":978,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["final",{"_index":744,"title":{},"body":{"changelog.html":{}}}],["finishing",{"_index":494,"title":{},"body":{"changelog.html":{}}}],["first",{"_index":756,"title":{},"body":{"changelog.html":{}}}],["fit",{"_index":657,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":1206,"title":{},"body":{"license.html":{}}}],["fixed",{"_index":639,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":366,"title":{},"body":{"changelog.html":{}}}],["fixes/performance",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["flexible",{"_index":356,"title":{},"body":{"changelog.html":{}}}],["fly",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":1195,"title":{},"body":{"license.html":{}}}],["foreach",{"_index":1282,"title":{},"body":{"miscellaneous/variables.html":{}}}],["form",{"_index":692,"title":{},"body":{"changelog.html":{}}}],["format",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["forwarddatabasequery",{"_index":966,"title":{},"body":{"coverage.html":{}}}],["forwarddatabasequery('getaggregateresults",{"_index":1305,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getcelltypetermoccurences",{"_index":1311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getcelltypetreemodel",{"_index":1316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getdatasettechnologynames",{"_index":1301,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getontologytermoccurences",{"_index":1309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getontologytreemodel",{"_index":1314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getprovidernames",{"_index":1303,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getreferenceorgans",{"_index":1320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('getscene",{"_index":1322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forwarddatabasequery('gettissueblockresults",{"_index":1299,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frame",{"_index":664,"title":{},"body":{"changelog.html":{}}}],["framework",{"_index":334,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["free",{"_index":1173,"title":{},"body":{"license.html":{}}}],["fs",{"_index":226,"title":{},"body":{"interfaces/GtexTissue.html":{},"dependencies.html":{}}}],["full",{"_index":596,"title":{},"body":{"changelog.html":{}}}],["fullscreen",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["fully",{"_index":650,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":36,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["funded",{"_index":1161,"title":{},"body":{"index.html":{}}}],["furnished",{"_index":1193,"title":{},"body":{"license.html":{}}}],["further",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["future",{"_index":640,"title":{},"body":{"changelog.html":{}}}],["generate",{"_index":398,"title":{},"body":{"changelog.html":{}}}],["generated",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["generating",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["get('/aggregate",{"_index":1304,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/ccf",{"_index":1258,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/cell",{"_index":1310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/ontology",{"_index":1306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/provider",{"_index":1302,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/reference",{"_index":1317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/rui_locations.jsonld",{"_index":1264,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/scene",{"_index":1321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/technology",{"_index":1300,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('/tissue",{"_index":1298,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('ccf_api_cache",{"_index":1259,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get('gtex_rui_locations",{"_index":256,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["get(key",{"_index":315,"title":{},"body":{"classes/RequestCache.html":{}}}],["getboolean",{"_index":927,"title":{},"body":{"coverage.html":{}}}],["getcacheoptions",{"_index":985,"title":{},"body":{"coverage.html":{}}}],["getdatabaseinstance",{"_index":937,"title":{},"body":{"coverage.html":{}}}],["getdatabaseinstance(req",{"_index":175,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["getdatabaseoptions",{"_index":986,"title":{},"body":{"coverage.html":{}}}],["getdatabasestatus",{"_index":947,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getdbinstance",{"_index":177,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["getdbinstance(token",{"_index":180,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["getlocations",{"_index":254,"title":{},"body":{"interfaces/GtexTissue.html":{},"coverage.html":{}}}],["getnumber",{"_index":928,"title":{},"body":{"coverage.html":{}}}],["getport",{"_index":987,"title":{},"body":{"coverage.html":{}}}],["getreferenceorganscenehandler",{"_index":962,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getspatialplacement",{"_index":952,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":329,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["github",{"_index":733,"title":{},"body":{"changelog.html":{}}}],["gizmo",{"_index":569,"title":{},"body":{"changelog.html":{}}}],["globalconfig",{"_index":537,"title":{},"body":{"changelog.html":{}}}],["globalthis",{"_index":1240,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["good",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["google",{"_index":582,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["granted",{"_index":1172,"title":{},"body":{"license.html":{}}}],["graphical",{"_index":377,"title":{},"body":{"changelog.html":{}}}],["graphology",{"_index":1074,"title":{},"body":{"dependencies.html":{}}}],["greatly",{"_index":514,"title":{},"body":{"changelog.html":{}}}],["gtex",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["gtex_api_url",{"_index":252,"title":{},"body":{"interfaces/GtexTissue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gtexroutes",{"_index":1297,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gtextissue",{"_index":218,"title":{"interfaces/GtexTissue.html":{}},"body":{"interfaces/GtexTissue.html":{},"coverage.html":{}}}],["guide",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["hand",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["handleerrors",{"_index":308,"title":{},"body":{"classes/RequestCache.html":{}}}],["handleerrors(key",{"_index":320,"title":{},"body":{"classes/RequestCache.html":{}}}],["happen",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["happens",{"_index":753,"title":{},"body":{"changelog.html":{}}}],["helmet",{"_index":24,"title":{},"body":{"interfaces/AppOptions.html":{},"dependencies.html":{}}}],["help",{"_index":776,"title":{},"body":{"changelog.html":{}}}],["here",{"_index":242,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["hereby",{"_index":1171,"title":{},"body":{"license.html":{}}}],["hex",{"_index":1080,"title":{},"body":{"dependencies.html":{}}}],["hidden",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":479,"title":{},"body":{"changelog.html":{}}}],["highlights",{"_index":482,"title":{},"body":{"changelog.html":{}}}],["holders",{"_index":1212,"title":{},"body":{"license.html":{}}}],["hooked",{"_index":701,"title":{},"body":{"changelog.html":{}}}],["host",{"_index":352,"title":{},"body":{"changelog.html":{}}}],["hovering",{"_index":587,"title":{},"body":{"changelog.html":{}}}],["http://expressjs.com/en/advanced/best",{"_index":50,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["https://beta",{"_index":1130,"title":{},"body":{"index.html":{}}}],["https://ccf",{"_index":1142,"title":{},"body":{"index.html":{}}}],["https://gtexportal.org/api/v2/tissuesitedetail",{"_index":253,"title":{},"body":{"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["https://hubmap",{"_index":1135,"title":{},"body":{"index.html":{}}}],["https://hubmapconsortium.github.io/ccf",{"_index":1134,"title":{},"body":{"index.html":{}}}],["https://old",{"_index":1137,"title":{},"body":{"index.html":{}}}],["https://portal.hubmapconsortium.org/ccf",{"_index":1132,"title":{},"body":{"index.html":{}}}],["https://sampledata.hubmapconsortium.org",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["hubmap",{"_index":201,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["hubmapdataurl",{"_index":197,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["hubmaproutes",{"_index":1295,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hubmaptoken",{"_index":195,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["icon",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["icons",{"_index":597,"title":{},"body":{"changelog.html":{}}}],["id",{"_index":538,"title":{},"body":{"changelog.html":{}}}],["idb",{"_index":1083,"title":{},"body":{"dependencies.html":{}}}],["identifier",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["iec",{"_index":747,"title":{},"body":{"changelog.html":{}}}],["image",{"_index":740,"title":{},"body":{"changelog.html":{}}}],["images",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["implementation",{"_index":465,"title":{},"body":{"changelog.html":{}}}],["implemented",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["implementing",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["implied",{"_index":1203,"title":{},"body":{"license.html":{}}}],["import",{"_index":17,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["improve",{"_index":690,"title":{},"body":{"changelog.html":{}}}],["improved",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["improvements",{"_index":372,"title":{},"body":{"changelog.html":{}}}],["improves",{"_index":515,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":758,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":1198,"title":{},"body":{"license.html":{}}}],["includes",{"_index":236,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["including",{"_index":475,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["increase",{"_index":726,"title":{},"body":{"changelog.html":{}}}],["increased",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indiana",{"_index":1159,"title":{},"body":{"index.html":{}}}],["individual",{"_index":706,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"changelog.html":{},"index.html":{}}}],["information",{"_index":362,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["infrastructure",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["ingestion",{"_index":760,"title":{},"body":{"changelog.html":{}}}],["initial",{"_index":619,"title":{},"body":{"changelog.html":{}}}],["instance",{"_index":212,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["instance.then((r",{"_index":213,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["instead",{"_index":610,"title":{},"body":{"changelog.html":{}}}],["instructions",{"_index":527,"title":{},"body":{"changelog.html":{}}}],["integrated",{"_index":651,"title":{},"body":{"changelog.html":{}}}],["integrating",{"_index":470,"title":{},"body":{"changelog.html":{}}}],["integration",{"_index":759,"title":{},"body":{"changelog.html":{}}}],["integrations",{"_index":671,"title":{},"body":{"changelog.html":{}}}],["interact",{"_index":634,"title":{},"body":{"changelog.html":{}}}],["interactions",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["interest",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AppOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}},"body":{"interfaces/AppOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["internal",{"_index":200,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"changelog.html":{}}}],["isdebug",{"_index":929,"title":{},"body":{"coverage.html":{}}}],["issue",{"_index":722,"title":{},"body":{"changelog.html":{}}}],["issues",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["it's",{"_index":467,"title":{},"body":{"changelog.html":{}}}],["item",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["itemcount",{"_index":1289,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iu",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["javascript",{"_index":418,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["json",{"_index":18,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["json.parse(data",{"_index":265,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["jsonld",{"_index":264,"title":{},"body":{"interfaces/GtexTissue.html":{},"dependencies.html":{}}}],["jsonld/jsonld",{"_index":230,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["jsonld['@graph",{"_index":266,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["jsonldobj",{"_index":229,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["july",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["jump",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["k",{"_index":316,"title":{},"body":{"classes/RequestCache.html":{}}}],["k,args",{"_index":313,"title":{},"body":{"classes/RequestCache.html":{}}}],["key",{"_index":156,"title":{},"body":{"interfaces/CacheOptions.html":{},"classes/RequestCache.html":{}}}],["keyboard",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["keys",{"_index":1280,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keyval",{"_index":1084,"title":{},"body":{"dependencies.html":{}}}],["kidney",{"_index":511,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":1202,"title":{},"body":{"license.html":{}}}],["known",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["kpmp",{"_index":750,"title":{},"body":{"changelog.html":{}}}],["labs/data",{"_index":1036,"title":{},"body":{"dependencies.html":{}}}],["labs/dispatch",{"_index":1038,"title":{},"body":{"dependencies.html":{}}}],["landmarks",{"_index":349,"title":{},"body":{"changelog.html":{}}}],["larger",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["latest",{"_index":342,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["layers",{"_index":1021,"title":{},"body":{"dependencies.html":{}}}],["ld",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["leak",{"_index":721,"title":{},"body":{"changelog.html":{}}}],["leave",{"_index":492,"title":{},"body":{"changelog.html":{}}}],["left",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["left/right",{"_index":512,"title":{},"body":{"changelog.html":{}}}],["length",{"_index":1288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lengthcalculator",{"_index":1286,"title":{},"body":{"miscellaneous/variables.html":{}}}],["level",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["levels",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["liability",{"_index":1216,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1213,"title":{},"body":{"license.html":{}}}],["libraries",{"_index":415,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["library",{"_index":682,"title":{},"body":{"changelog.html":{}}}],["license",{"_index":1165,"title":{"license.html":{}},"body":{"license.html":{}}}],["life",{"_index":486,"title":{},"body":{"changelog.html":{}}}],["limitation",{"_index":1181,"title":{},"body":{"license.html":{}}}],["limited",{"_index":810,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["line",{"_index":190,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["link",{"_index":503,"title":{},"body":{"changelog.html":{}}}],["linkage",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["linked",{"_index":358,"title":{},"body":{"changelog.html":{}}}],["links",{"_index":450,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["list",{"_index":626,"title":{},"body":{"changelog.html":{}}}],["literal",{"_index":224,"title":{},"body":{"interfaces/GtexTissue.html":{},"dependencies.html":{}}}],["little",{"_index":632,"title":{},"body":{"changelog.html":{}}}],["load",{"_index":258,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["loaddatabasesource",{"_index":988,"title":{},"body":{"coverage.html":{}}}],["loaded",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["loader",{"_index":29,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["loader.ts",{"_index":167,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["loaders.gl/core",{"_index":1025,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/draco",{"_index":1027,"title":{},"body":{"dependencies.html":{}}}],["loaders.gl/gltf",{"_index":1028,"title":{},"body":{"dependencies.html":{}}}],["loading",{"_index":203,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["local",{"_index":259,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["location",{"_index":727,"title":{},"body":{"changelog.html":{}}}],["locations.ts",{"_index":220,"title":{},"body":{"interfaces/GtexTissue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lodash",{"_index":1087,"title":{},"body":{"dependencies.html":{}}}],["log",{"_index":1152,"title":{},"body":{"index.html":{}}}],["logging",{"_index":401,"title":{},"body":{"changelog.html":{}}}],["longer",{"_index":607,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":688,"title":{},"body":{"changelog.html":{}}}],["lru",{"_index":137,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lrucache",{"_index":311,"title":{},"body":{"classes/RequestCache.html":{}}}],["luma.gl/core",{"_index":1029,"title":{},"body":{"dependencies.html":{}}}],["made",{"_index":749,"title":{},"body":{"changelog.html":{}}}],["major",{"_index":370,"title":{},"body":{"changelog.html":{}}}],["makes",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["making",{"_index":462,"title":{},"body":{"changelog.html":{}}}],["male",{"_index":249,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["managers",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["map",{"_index":239,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["mappedentries",{"_index":269,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["mappedinhubmap",{"_index":221,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["march",{"_index":685,"title":{},"body":{"changelog.html":{}}}],["markdown",{"_index":1096,"title":{},"body":{"dependencies.html":{}}}],["match",{"_index":687,"title":{},"body":{"changelog.html":{}}}],["matching",{"_index":71,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["matchingentry",{"_index":279,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["math.gl/core",{"_index":1031,"title":{},"body":{"dependencies.html":{}}}],["math.gl/culling",{"_index":1033,"title":{},"body":{"dependencies.html":{}}}],["max",{"_index":130,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["maxage",{"_index":131,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["mc",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["mean",{"_index":291,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["memory",{"_index":720,"title":{},"body":{"changelog.html":{}}}],["menu",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["merchantability",{"_index":1205,"title":{},"body":{"license.html":{}}}],["merge",{"_index":1184,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":839,"title":{},"body":{"changelog.html":{}}}],["method",{"_index":1276,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":306,"title":{},"body":{"classes/RequestCache.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["middleware/database",{"_index":28,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["mimetype",{"_index":110,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["minor",{"_index":376,"title":{},"body":{"changelog.html":{}}}],["miscellaneous",{"_index":1229,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1166,"title":{},"body":{"license.html":{}}}],["mock",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":617,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":543,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":1048,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["model.json",{"_index":1313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modify",{"_index":1183,"title":{},"body":{"license.html":{}}}],["modules",{"_index":1226,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monorepo",{"_index":1120,"title":{},"body":{"index.html":{}}}],["more",{"_index":237,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{},"index.html":{}}}],["moved",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["much",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["multiple",{"_index":1121,"title":{},"body":{"index.html":{}}}],["mutableproperties",{"_index":993,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["n3",{"_index":1089,"title":{},"body":{"dependencies.html":{}}}],["n=${sexstats.count",{"_index":290,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["name",{"_index":92,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{}}}],["names",{"_index":560,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["navigation",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["needed",{"_index":693,"title":{},"body":{"changelog.html":{}}}],["needs",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["network",{"_index":1156,"title":{},"body":{"index.html":{}}}],["never",{"_index":14,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["new",{"_index":96,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{},"coverage.html":{}}}],["next",{"_index":151,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["next('router",{"_index":1262,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng5",{"_index":1091,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":1094,"title":{},"body":{"dependencies.html":{}}}],["ngxs",{"_index":1035,"title":{},"body":{"dependencies.html":{}}}],["ngxs/logger",{"_index":1041,"title":{},"body":{"dependencies.html":{}}}],["ngxs/storage",{"_index":1044,"title":{},"body":{"dependencies.html":{}}}],["ngxs/store",{"_index":1045,"title":{},"body":{"dependencies.html":{}}}],["nih",{"_index":1162,"title":{},"body":{"index.html":{}}}],["node",{"_index":228,"title":{},"body":{"interfaces/GtexTissue.html":{},"dependencies.html":{}}}],["nodeendpoint",{"_index":104,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["noninfringement",{"_index":1209,"title":{},"body":{"license.html":{}}}],["note",{"_index":233,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["notice",{"_index":723,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["now",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["nullish",{"_index":193,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["number",{"_index":132,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["numeric",{"_index":728,"title":{},"body":{"changelog.html":{}}}],["obtaining",{"_index":1176,"title":{},"body":{"license.html":{}}}],["occurences",{"_index":1308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["off/on",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["official",{"_index":825,"title":{},"body":{"changelog.html":{}}}],["old",{"_index":1136,"title":{},"body":{"index.html":{}}}],["one",{"_index":767,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ones",{"_index":240,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["online",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["ontological",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["ontologies",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["ontology",{"_index":343,"title":{},"body":{"changelog.html":{}}}],["ontologyterms",{"_index":1273,"title":{},"body":{"miscellaneous/variables.html":{}}}],["opacities",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["opacity",{"_index":678,"title":{},"body":{"changelog.html":{}}}],["openapi",{"_index":464,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["openapi/js",{"_index":1148,"title":{},"body":{"index.html":{}}}],["openapi/ng",{"_index":1150,"title":{},"body":{"index.html":{}}}],["openapi/ts",{"_index":1149,"title":{},"body":{"index.html":{}}}],["openapiroute",{"_index":944,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["optimization",{"_index":631,"title":{},"body":{"changelog.html":{}}}],["optimizations",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["optimized",{"_index":669,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":478,"title":{},"body":{"changelog.html":{}}}],["optional",{"_index":12,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"classes/RequestCache.html":{},"changelog.html":{}}}],["options",{"_index":41,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["options.cache",{"_index":215,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["options.database",{"_index":42,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["options.datasources.map(s",{"_index":205,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["options.hubmaptoken",{"_index":196,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["organ",{"_index":402,"title":{},"body":{"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["organs",{"_index":351,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["organs.json",{"_index":1319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["organs/anatomical",{"_index":707,"title":{},"body":{"changelog.html":{}}}],["originalsend",{"_index":161,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["originalsend.call(res",{"_index":164,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["originalurl",{"_index":152,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["orthographic",{"_index":575,"title":{},"body":{"changelog.html":{}}}],["ot2od026671",{"_index":1164,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":1221,"title":{},"body":{"license.html":{}}}],["out",{"_index":1223,"title":{},"body":{"license.html":{}}}],["over",{"_index":735,"title":{},"body":{"changelog.html":{}}}],["overlays",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1227,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwritten",{"_index":1277,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["package",{"_index":421,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["pages",{"_index":525,"title":{},"body":{"changelog.html":{}}}],["paired",{"_index":507,"title":{},"body":{"changelog.html":{}}}],["pane",{"_index":658,"title":{},"body":{"changelog.html":{}}}],["panel",{"_index":522,"title":{},"body":{"changelog.html":{}}}],["parameters",{"_index":91,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{}}}],["parent",{"_index":509,"title":{},"body":{"changelog.html":{}}}],["parsearray",{"_index":970,"title":{},"body":{"coverage.html":{}}}],["parseboolean",{"_index":930,"title":{},"body":{"coverage.html":{}}}],["parseboolean(query.cache",{"_index":155,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["parseboolean(value",{"_index":139,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["parsedatabasesources",{"_index":989,"title":{},"body":{"coverage.html":{}}}],["parsedqs",{"_index":26,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["parseminmaxrange",{"_index":971,"title":{},"body":{"coverage.html":{}}}],["parsenumber",{"_index":931,"title":{},"body":{"coverage.html":{}}}],["parser",{"_index":21,"title":{},"body":{"interfaces/AppOptions.html":{},"dependencies.html":{}}}],["parserange",{"_index":972,"title":{},"body":{"coverage.html":{}}}],["parsesex",{"_index":973,"title":{},"body":{"coverage.html":{}}}],["parsespatial",{"_index":974,"title":{},"body":{"coverage.html":{}}}],["parsestring",{"_index":948,"title":{},"body":{"coverage.html":{}}}],["partial",{"_index":1270,"title":{},"body":{"miscellaneous/variables.html":{}}}],["particular",{"_index":1207,"title":{},"body":{"license.html":{}}}],["partly",{"_index":684,"title":{},"body":{"changelog.html":{}}}],["partonomy",{"_index":600,"title":{},"body":{"changelog.html":{}}}],["patchglobal",{"_index":941,"title":{},"body":{"coverage.html":{}}}],["path",{"_index":1077,"title":{},"body":{"dependencies.html":{}}}],["peek",{"_index":1279,"title":{},"body":{"miscellaneous/variables.html":{}}}],["performance",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":1170,"title":{},"body":{"license.html":{}}}],["permit",{"_index":1191,"title":{},"body":{"license.html":{}}}],["person",{"_index":1175,"title":{},"body":{"license.html":{}}}],["persons",{"_index":1192,"title":{},"body":{"license.html":{}}}],["pickbytype",{"_index":1242,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["placeholder",{"_index":13,"title":{},"body":{"interfaces/AppOptions.html":{},"changelog.html":{}}}],["placement",{"_index":778,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["placement.ts",{"_index":951,"title":{},"body":{"coverage.html":{}}}],["placenta",{"_index":346,"title":{},"body":{"changelog.html":{}}}],["player",{"_index":1015,"title":{},"body":{"dependencies.html":{}}}],["plugin",{"_index":1042,"title":{},"body":{"dependencies.html":{}}}],["popup",{"_index":838,"title":{},"body":{"changelog.html":{}}}],["portal",{"_index":476,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["portal's",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1200,"title":{},"body":{"license.html":{}}}],["position",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["possible",{"_index":751,"title":{},"body":{"changelog.html":{}}}],["post('/get",{"_index":1291,"title":{},"body":{"miscellaneous/variables.html":{}}}],["practice",{"_index":51,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["preferences",{"_index":555,"title":{},"body":{"changelog.html":{}}}],["preparation",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["presented",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["prevent",{"_index":387,"title":{},"body":{"changelog.html":{}}}],["preview",{"_index":572,"title":{},"body":{"changelog.html":{}}}],["previous",{"_index":712,"title":{},"body":{"changelog.html":{}}}],["previously",{"_index":454,"title":{},"body":{"changelog.html":{}}}],["private",{"_index":307,"title":{},"body":{"classes/RequestCache.html":{}}}],["process",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["process.env",{"_index":1266,"title":{},"body":{"miscellaneous/variables.html":{}}}],["processed",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["processing",{"_index":557,"title":{},"body":{"changelog.html":{}}}],["processparameter",{"_index":975,"title":{},"body":{"coverage.html":{}}}],["production",{"_index":436,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["programming",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["projects",{"_index":1122,"title":{},"body":{"index.html":{}}}],["projects/.../auto",{"_index":1233,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../browser.ts",{"_index":1247,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../ccf",{"_index":1243,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../database",{"_index":1234,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../environment.ts",{"_index":1245,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["projects/.../forward",{"_index":1236,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../index.ts",{"_index":1249,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../parse",{"_index":1251,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../polyfills.ts",{"_index":1241,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../rui",{"_index":1250,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../server.ts",{"_index":1238,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../use",{"_index":1248,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/ccf",{"_index":6,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":111,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["promisifieddorequest",{"_index":309,"title":{},"body":{"classes/RequestCache.html":{}}}],["promisifieddorequest(key",{"_index":322,"title":{},"body":{"classes/RequestCache.html":{}}}],["properties",{"_index":11,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["provided",{"_index":911,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["providers",{"_index":483,"title":{},"body":{"changelog.html":{}}}],["prune",{"_index":136,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":79,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"changelog.html":{}}}],["publish",{"_index":1185,"title":{},"body":{"license.html":{}}}],["publishing",{"_index":419,"title":{},"body":{"changelog.html":{}}}],["purpose",{"_index":1208,"title":{},"body":{"license.html":{}}}],["pushed",{"_index":646,"title":{},"body":{"changelog.html":{}}}],["python",{"_index":416,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["qs",{"_index":25,"title":{},"body":{"interfaces/AppOptions.html":{},"dependencies.html":{}}}],["qs.parse(str",{"_index":47,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["qtoken",{"_index":184,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["qualitative",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["quality",{"_index":485,"title":{},"body":{"changelog.html":{}}}],["queries",{"_index":1062,"title":{},"body":{"dependencies.html":{}}}],["query",{"_index":109,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"changelog.html":{}}}],["query.ts",{"_index":965,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["querying",{"_index":357,"title":{},"body":{"changelog.html":{}}}],["queryparameterstofilter",{"_index":976,"title":{},"body":{"coverage.html":{}}}],["quickly",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["r.dispose",{"_index":214,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["r.json",{"_index":268,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["range",{"_index":294,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["rawtoken",{"_index":301,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["rc.1",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["rdf",{"_index":1100,"title":{},"body":{"dependencies.html":{}}}],["rdfjs",{"_index":1017,"title":{},"body":{"dependencies.html":{}}}],["rdfjs/data",{"_index":1047,"title":{},"body":{"dependencies.html":{}}}],["rdfxml",{"_index":1101,"title":{},"body":{"dependencies.html":{}}}],["readable",{"_index":1103,"title":{},"body":{"dependencies.html":{}}}],["readfilesync",{"_index":225,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["readfilesync(source",{"_index":260,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["readonly",{"_index":82,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"classes/RequestCache.html":{}}}],["readonlyproperties",{"_index":994,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["real",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["rectify",{"_index":460,"title":{},"body":{"changelog.html":{}}}],["reduce",{"_index":636,"title":{},"body":{"changelog.html":{}}}],["reduction",{"_index":374,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":350,"title":{},"body":{"changelog.html":{}}}],["refernced",{"_index":508,"title":{},"body":{"changelog.html":{}}}],["refresh",{"_index":599,"title":{},"body":{"changelog.html":{}}}],["regions",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["register",{"_index":1065,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":455,"title":{},"body":{"changelog.html":{}}}],["registration",{"_index":495,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["registrations",{"_index":623,"title":{},"body":{"changelog.html":{}}}],["related",{"_index":675,"title":{},"body":{"changelog.html":{}}}],["release",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["releaseproxy",{"_index":101,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["reliability",{"_index":725,"title":{},"body":{"changelog.html":{}}}],["reloads",{"_index":568,"title":{},"body":{"changelog.html":{}}}],["removed",{"_index":540,"title":{},"body":{"changelog.html":{}}}],["removes",{"_index":674,"title":{},"body":{"changelog.html":{}}}],["repository",{"_index":1119,"title":{},"body":{"index.html":{}}}],["req",{"_index":149,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["req.app.get('database",{"_index":300,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["req.query.token",{"_index":185,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["req['getdatabase",{"_index":178,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["request",{"_index":168,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"classes/RequestCache.html":{}}}],["requestcache",{"_index":171,"title":{"classes/RequestCache.html":{}},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"coverage.html":{}}}],["requesthandler",{"_index":133,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["res",{"_index":150,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["res.json",{"_index":162,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["res.json(cachedresponse",{"_index":160,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["res.json(result",{"_index":303,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["res.send",{"_index":1253,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.sendfile(apifile",{"_index":1256,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res.status(500).json",{"_index":304,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["reset",{"_index":1284,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resets",{"_index":601,"title":{},"body":{"changelog.html":{}}}],["resolve('ccf",{"_index":1255,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolved",{"_index":652,"title":{},"body":{"changelog.html":{}}}],["respond",{"_index":592,"title":{},"body":{"changelog.html":{}}}],["response",{"_index":235,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["response.filter(entry",{"_index":270,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["restriction",{"_index":1180,"title":{},"body":{"license.html":{}}}],["result",{"_index":70,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.ts",{"_index":981,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":72,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["resultslist.find(entry",{"_index":280,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["resultslist.indexof(matchingentry",{"_index":284,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["resultslist[index].label",{"_index":288,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["resultslist[index].sex",{"_index":297,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["return",{"_index":46,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":319,"title":{},"body":{"classes/RequestCache.html":{}}}],["rforeach",{"_index":1283,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rgb",{"_index":1081,"title":{},"body":{"dependencies.html":{}}}],["right",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["rights",{"_index":1182,"title":{},"body":{"license.html":{}}}],["rnaseqsamplesummary",{"_index":222,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["root",{"_index":609,"title":{},"body":{"changelog.html":{}}}],["rotates",{"_index":570,"title":{},"body":{"changelog.html":{}}}],["round",{"_index":710,"title":{},"body":{"changelog.html":{}}}],["rounded",{"_index":729,"title":{},"body":{"changelog.html":{}}}],["route",{"_index":355,"title":{},"body":{"changelog.html":{}}}],["router",{"_index":1257,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routes",{"_index":30,"title":{},"body":{"interfaces/AppOptions.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routes/browser",{"_index":32,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["routes/v1",{"_index":34,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["ru/common",{"_index":999,"title":{},"body":{"dependencies.html":{}}}],["rui",{"_index":381,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rui_locations.jsonld",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["ruilocations",{"_index":298,"title":{},"body":{"interfaces/GtexTissue.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["rxjs",{"_index":1106,"title":{},"body":{"dependencies.html":{}}}],["s",{"_index":206,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["s.endswith('hubmap/rui_locations.jsonld",{"_index":207,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["sample",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["samples",{"_index":638,"title":{},"body":{"changelog.html":{}}}],["saver",{"_index":1070,"title":{},"body":{"dependencies.html":{}}}],["scaffolding",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["scene",{"_index":472,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["scene.ts",{"_index":961,"title":{},"body":{"coverage.html":{}}}],["scheduled",{"_index":653,"title":{},"body":{"changelog.html":{}}}],["schema",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["schemes",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["science",{"_index":1157,"title":{},"body":{"index.html":{}}}],["script",{"_index":57,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["search",{"_index":395,"title":{},"body":{"changelog.html":{}}}],["section",{"_index":624,"title":{},"body":{"changelog.html":{}}}],["security.html",{"_index":52,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["see",{"_index":359,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["select",{"_index":539,"title":{},"body":{"changelog.html":{}}}],["selected",{"_index":498,"title":{},"body":{"changelog.html":{}}}],["selecting",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["selector",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["selects",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["selecttoken",{"_index":938,"title":{},"body":{"coverage.html":{}}}],["selecttoken(token",{"_index":183,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["self",{"_index":59,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["sell",{"_index":1189,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["sennet",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["set",{"_index":551,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["setifdefined",{"_index":977,"title":{},"body":{"coverage.html":{}}}],["setup",{"_index":620,"title":{},"body":{"changelog.html":{}}}],["sex",{"_index":278,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["sexes",{"_index":766,"title":{},"body":{"changelog.html":{}}}],["sexstats",{"_index":285,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["sexstats.agemax",{"_index":296,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["sexstats.agemean",{"_index":293,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["sexstats.agemin",{"_index":295,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["sex}s",{"_index":289,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["shall",{"_index":1197,"title":{},"body":{"license.html":{}}}],["shared",{"_index":561,"title":{},"body":{"changelog.html":{}}}],["shortest",{"_index":1076,"title":{},"body":{"dependencies.html":{}}}],["show",{"_index":595,"title":{},"body":{"changelog.html":{}}}],["showing",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["shown",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["shows",{"_index":488,"title":{},"body":{"changelog.html":{}}}],["side",{"_index":793,"title":{},"body":{"changelog.html":{}}}],["sides",{"_index":768,"title":{},"body":{"changelog.html":{}}}],["significant",{"_index":604,"title":{},"body":{"changelog.html":{}}}],["simple",{"_index":521,"title":{},"body":{"changelog.html":{}}}],["simplifies",{"_index":618,"title":{},"body":{"changelog.html":{}}}],["sites",{"_index":497,"title":{},"body":{"changelog.html":{}}}],["sizable",{"_index":724,"title":{},"body":{"changelog.html":{}}}],["slider",{"_index":1092,"title":{},"body":{"dependencies.html":{}}}],["slightly",{"_index":458,"title":{},"body":{"changelog.html":{}}}],["slow",{"_index":633,"title":{},"body":{"changelog.html":{}}}],["software",{"_index":1124,"title":{},"body":{"index.html":{},"license.html":{}}}],["solved",{"_index":719,"title":{},"body":{"changelog.html":{}}}],["sometimes",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["soon",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["sop",{"_index":628,"title":{},"body":{"changelog.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["sources",{"_index":547,"title":{},"body":{"changelog.html":{}}}],["sparc",{"_index":622,"title":{},"body":{"changelog.html":{}}}],["sparql",{"_index":354,"title":{},"body":{"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["sparqlquery",{"_index":81,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["sparqlqueryfunction",{"_index":87,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"miscellaneous/typealiases.html":{}}}],["spatial",{"_index":950,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["spatialsearches",{"_index":1275,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spec",{"_index":231,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["spec.yaml",{"_index":1146,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["specific",{"_index":480,"title":{},"body":{"changelog.html":{}}}],["specification",{"_index":1145,"title":{},"body":{"index.html":{}}}],["speed",{"_index":371,"title":{},"body":{"changelog.html":{}}}],["spinal",{"_index":347,"title":{},"body":{"changelog.html":{}}}],["spinning",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["sprint",{"_index":656,"title":{},"body":{"changelog.html":{}}}],["src",{"_index":58,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["stage",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["staging",{"_index":437,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["staging.herokuapp.com",{"_index":1144,"title":{},"body":{"index.html":{}}}],["standalone",{"_index":714,"title":{},"body":{"changelog.html":{}}}],["standard",{"_index":772,"title":{},"body":{"changelog.html":{}}}],["standards",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["star2",{"_index":1128,"title":{},"body":{"index.html":{}}}],["started",{"_index":330,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"changelog.html":{}}}],["starts",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["startserver",{"_index":990,"title":{},"body":{"coverage.html":{}}}],["startup",{"_index":616,"title":{},"body":{"changelog.html":{}}}],["statements",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":83,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"miscellaneous/variables.html":{}}}],["status.ts",{"_index":946,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["stay",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["still",{"_index":641,"title":{},"body":{"changelog.html":{}}}],["stories",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["str",{"_index":44,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["stream",{"_index":1104,"title":{},"body":{"dependencies.html":{}}}],["streaming",{"_index":1102,"title":{},"body":{"dependencies.html":{}}}],["string",{"_index":45,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["string).includes(sex",{"_index":283,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["structure",{"_index":670,"title":{},"body":{"changelog.html":{}}}],["structures",{"_index":659,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["styling",{"_index":517,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":1194,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1187,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":1199,"title":{},"body":{"license.html":{}}}],["support",{"_index":341,"title":{},"body":{"changelog.html":{}}}],["swiper",{"_index":1109,"title":{},"body":{"dependencies.html":{}}}],["switched",{"_index":732,"title":{},"body":{"changelog.html":{}}}],["symbol('indicator",{"_index":1267,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sync",{"_index":571,"title":{},"body":{"changelog.html":{}}}],["s}?token=${hubmaptoken",{"_index":208,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["table",{"_index":998,"title":{},"body":{"coverage.html":{}}}],["tables",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":997,"title":{},"body":{"coverage.html":{}}}],["tagging",{"_index":770,"title":{},"body":{"changelog.html":{}}}],["take",{"_index":477,"title":{},"body":{"changelog.html":{}}}],["technologies",{"_index":888,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["technology",{"_index":702,"title":{},"body":{"changelog.html":{}}}],["telemetry",{"_index":564,"title":{},"body":{"changelog.html":{}}}],["term",{"_index":1307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["testing",{"_index":779,"title":{},"body":{"changelog.html":{}}}],["theme",{"_index":431,"title":{},"body":{"changelog.html":{}}}],["themes",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["theming",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["this.dorequest(key",{"_index":327,"title":{},"body":{"classes/RequestCache.html":{}}}],["this.handleerrors(key",{"_index":326,"title":{},"body":{"classes/RequestCache.html":{}}}],["this.promisifieddorequest(key",{"_index":325,"title":{},"body":{"classes/RequestCache.html":{}}}],["through",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["throw_if_not_found",{"_index":934,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["throwindicator",{"_index":1244,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["thrown",{"_index":1269,"title":{},"body":{"miscellaneous/variables.html":{}}}],["thumbnails",{"_index":668,"title":{},"body":{"changelog.html":{}}}],["tied",{"_index":672,"title":{},"body":{"changelog.html":{}}}],["tiff",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["timeouts",{"_index":388,"title":{},"body":{"changelog.html":{}}}],["times",{"_index":375,"title":{},"body":{"changelog.html":{}}}],["tissue",{"_index":272,"title":{},"body":{"interfaces/GtexTissue.html":{},"changelog.html":{}}}],["tissueinfo",{"_index":277,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["tissueinfo.rnaseqsamplesummary.female",{"_index":287,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["tissueinfo.rnaseqsamplesummary.male",{"_index":286,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["tissues",{"_index":456,"title":{},"body":{"changelog.html":{}}}],["tissuesitedetailid",{"_index":223,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["tmc",{"_index":906,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["toggle",{"_index":427,"title":{},"body":{"changelog.html":{}}}],["token",{"_index":174,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["tool",{"_index":715,"title":{},"body":{"changelog.html":{}}}],["tort",{"_index":1220,"title":{},"body":{"license.html":{}}}],["totalcount",{"_index":243,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["tracking/telemetry",{"_index":584,"title":{},"body":{"changelog.html":{}}}],["transparency",{"_index":716,"title":{},"body":{"changelog.html":{}}}],["travisci",{"_index":736,"title":{},"body":{"changelog.html":{}}}],["tree",{"_index":861,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":49,"title":{},"body":{"interfaces/AppOptions.html":{},"interfaces/CacheOptions.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":255,"title":{},"body":{"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"changelog.html":{}}}],["tryjsonparse",{"_index":991,"title":{},"body":{"coverage.html":{}}}],["ts",{"_index":1111,"title":{},"body":{"dependencies.html":{}}}],["tslib",{"_index":1114,"title":{},"body":{"dependencies.html":{}}}],["tuned",{"_index":917,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":696,"title":{},"body":{"changelog.html":{}}}],["turned",{"_index":676,"title":{},"body":{"changelog.html":{}}}],["turning",{"_index":673,"title":{},"body":{"changelog.html":{}}}],["tutorial",{"_index":542,"title":{},"body":{"changelog.html":{}}}],["two",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":15,"title":{},"body":{"interfaces/AppOptions.html":{},"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1230,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":186,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["types",{"_index":393,"title":{},"body":{"changelog.html":{}}}],["types/lru",{"_index":1049,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":191,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"changelog.html":{},"index.html":{}}}],["typing",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["ufl",{"_index":667,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":469,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["ui.netlify.app",{"_index":1131,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/organ",{"_index":1141,"title":{},"body":{"index.html":{}}}],["ui.netlify.app/rui",{"_index":1138,"title":{},"body":{"index.html":{}}}],["ui/organ",{"_index":1140,"title":{},"body":{"index.html":{}}}],["ui/rui",{"_index":1139,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":143,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"miscellaneous/variables.html":{}}}],["university",{"_index":1160,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":122,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"classes/RequestCache.html":{}}}],["unnecessary",{"_index":567,"title":{},"body":{"changelog.html":{}}}],["unsafe",{"_index":60,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["unselect",{"_index":635,"title":{},"body":{"changelog.html":{}}}],["until",{"_index":680,"title":{},"body":{"changelog.html":{}}}],["up",{"_index":364,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":556,"title":{},"body":{"changelog.html":{}}}],["updated",{"_index":500,"title":{},"body":{"changelog.html":{}}}],["updateentry",{"_index":956,"title":{},"body":{"coverage.html":{}}}],["updateentry(results",{"_index":273,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["updateentry(resultslist",{"_index":276,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["updates",{"_index":353,"title":{},"body":{"changelog.html":{}}}],["upgraded",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["upgrades",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["upgrading",{"_index":589,"title":{},"body":{"changelog.html":{}}}],["upload",{"_index":711,"title":{},"body":{"changelog.html":{}}}],["url",{"_index":153,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/GtexTissue.html":{}}}],["urlencoded",{"_index":19,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["use",{"_index":198,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{},"changelog.html":{},"license.html":{}}}],["use('/db",{"_index":1290,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use('/gtex",{"_index":1296,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use('/hubmap",{"_index":1294,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use('/sparql",{"_index":1292,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use(cacheresponses",{"_index":1293,"title":{},"body":{"miscellaneous/variables.html":{}}}],["use(checkroutesenabled",{"_index":1263,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usecache",{"_index":154,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["usecachedresult",{"_index":982,"title":{},"body":{"coverage.html":{}}}],["usecachedresult('cell",{"_index":1315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usecachedresult('ontology",{"_index":1312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["usecachedresult('reference",{"_index":1318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["used",{"_index":695,"title":{},"body":{"changelog.html":{}}}],["usedefaults",{"_index":55,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["user",{"_index":335,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["user/os",{"_index":554,"title":{},"body":{"changelog.html":{}}}],["users",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["uses",{"_index":574,"title":{},"body":{"changelog.html":{}}}],["using",{"_index":524,"title":{},"body":{"changelog.html":{}}}],["utf",{"_index":262,"title":{},"body":{"interfaces/GtexTissue.html":{}}}],["utilities",{"_index":562,"title":{},"body":{"changelog.html":{}}}],["utils/auto",{"_index":135,"title":{},"body":{"interfaces/CacheOptions.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["utils/ccf",{"_index":170,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["utils/request",{"_index":172,"title":{},"body":{"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{},"interfaces/GtexTissue.html":{}}}],["uuid",{"_index":1115,"title":{},"body":{"dependencies.html":{}}}],["v",{"_index":324,"title":{},"body":{"classes/RequestCache.html":{}}}],["v1.1",{"_index":448,"title":{},"body":{"changelog.html":{}}}],["v1.5.0",{"_index":694,"title":{},"body":{"changelog.html":{}}}],["v1.7",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["v1.7.0",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["v1.8.0",{"_index":391,"title":{},"body":{"changelog.html":{}}}],["v1.9.0",{"_index":344,"title":{},"body":{"changelog.html":{}}}],["v1/sparql",{"_index":360,"title":{},"body":{"changelog.html":{}}}],["v1routes",{"_index":33,"title":{},"body":{"interfaces/AppOptions.html":{}}}],["value",{"_index":95,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/CacheOptions.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":1281,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value}`.tolowercase",{"_index":144,"title":{},"body":{"interfaces/CacheOptions.html":{}}}],["variable",{"_index":932,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1246,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":466,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["very",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":385,"title":{},"body":{"changelog.html":{}}}],["video",{"_index":590,"title":{},"body":{"changelog.html":{}}}],["view",{"_index":573,"title":{},"body":{"changelog.html":{}}}],["viewer",{"_index":661,"title":{},"body":{"changelog.html":{}}}],["views",{"_index":576,"title":{},"body":{"changelog.html":{}}}],["visual",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["visualization",{"_index":625,"title":{},"body":{"changelog.html":{}}}],["vitessce",{"_index":798,"title":{},"body":{"changelog.html":{}}}],["void",{"_index":88,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/GtexTissue.html":{},"classes/RequestCache.html":{}}}],["vs",{"_index":536,"title":{},"body":{"changelog.html":{}}}],["vu",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["warming",{"_index":384,"title":{},"body":{"changelog.html":{}}}],["warning",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["warranties",{"_index":1204,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1201,"title":{},"body":{"license.html":{}}}],["web",{"_index":382,"title":{},"body":{"changelog.html":{}}}],["webcomponent",{"_index":535,"title":{},"body":{"changelog.html":{}}}],["webcomponents/webcomponentsjs",{"_index":1050,"title":{},"body":{"dependencies.html":{}}}],["webpages",{"_index":474,"title":{},"body":{"changelog.html":{}}}],["website",{"_index":1126,"title":{},"body":{"index.html":{}}}],["week",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["whether",{"_index":1217,"title":{},"body":{"license.html":{}}}],["whole",{"_index":915,"title":{},"body":{"changelog.html":{}}}],["width",{"_index":594,"title":{},"body":{"changelog.html":{}}}],["within",{"_index":665,"title":{},"body":{"changelog.html":{}}}],["without",{"_index":493,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["worker",{"_index":107,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"interfaces/DatabaseCacheOptions.html":{},"interfaces/DatabaseLoaderOptions.html":{}}}],["worker('./projects/ccf",{"_index":115,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["worker.terminate",{"_index":126,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["worker.ts",{"_index":78,"title":{},"body":{"classes/CCFDatabaseInstance.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["worker.ts:10",{"_index":90,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["worker.ts:12",{"_index":93,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["worker_threads",{"_index":108,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["workerdata",{"_index":118,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["workflows",{"_index":738,"title":{},"body":{"changelog.html":{}}}],["working",{"_index":459,"title":{},"body":{"changelog.html":{}}}],["works",{"_index":757,"title":{},"body":{"changelog.html":{}}}],["wrap",{"_index":102,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["wrap(nodeendpoint(worker",{"_index":120,"title":{},"body":{"classes/CCFDatabaseInstance.html":{}}}],["youtube",{"_index":501,"title":{},"body":{"changelog.html":{}}}],["zone.js",{"_index":1117,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AppOptions.html":{"url":"interfaces/AppOptions.html","title":"interface - AppOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-api/src/lib/app.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        DatabaseLoaderOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            placeholder\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:     never\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     never\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { json, urlencoded } from 'body-parser';\nimport cors from 'cors';\nimport express, { Express } from 'express';\nimport helmet from 'helmet';\nimport qs, { ParsedQs } from 'qs';\n\nimport { databaseLoader, DatabaseLoaderOptions } from './middleware/database-loader';\nimport { routes as browserRoutes } from './routes/browser';\nimport { routes as v1Routes } from './routes/v1';\n\n\nexport interface AppOptions extends DatabaseLoaderOptions {\n  placeholder?: never;\n}\n\n\nexport function createApp(options: AppOptions): Express {\n  const app = express();\n\n  app.set('database-options', options.database);\n\n  app.set('query parser', function (str: string): ParsedQs {\n    return qs.parse(str, { allowDots: true });\n  });\n\n  // http://expressjs.com/en/advanced/best-practice-security.html\n  app.use(helmet({\n    contentSecurityPolicy: {\n      useDefaults: true,\n      directives: {\n        'script-src': ['\\'self\\'', '\\'unsafe-eval\\'', 'cdn.jsdelivr.net'],\n        'connect-src': ['*'],\n      }\n    }\n  }));\n  app.use(cors());\n\n  app.use(urlencoded());\n  app.use(json());\n\n  app.use(databaseLoader(options));\n\n  app.use('/', browserRoutes);\n  app.use('/v1', v1Routes);\n\n  return app;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CCFDatabaseInstance.html":{"url":"classes/CCFDatabaseInstance.html","title":"class - CCFDatabaseInstance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CCFDatabaseInstance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-api/src/lib/utils/ccf-database-worker.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                database\n                            \n                            \n                                    Public\n                                dispose\n                            \n                            \n                                    Public\n                                sparqlQuery\n                            \n                            \n                                    Readonly\n                                status\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(database: CCFDatabase, sparqlQuery: SparqlQueryFunction, dispose: () => void)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-api/src/lib/utils/ccf-database-worker.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        database\n                                                  \n                                                        \n                                                                    CCFDatabase\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sparqlQuery\n                                                  \n                                                        \n                                                                        SparqlQueryFunction\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dispose\n                                                  \n                                                        \n                                                                        function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        database\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CCFDatabase\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-api/src/lib/utils/ccf-database-worker.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dispose\n                        \n                    \n                \n            \n                \n                    \n                        Type :         function\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-api/src/lib/utils/ccf-database-worker.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sparqlQuery\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SparqlQueryFunction\n\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-api/src/lib/utils/ccf-database-worker.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new CCFDatabaseStatusTracker(this.database)\n                    \n                \n                    \n                        \n                                Defined in projects/ccf-api/src/lib/utils/ccf-database-worker.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CCFDatabase, CCFDatabaseOptions, CCFDatabaseStatusTracker } from 'ccf-database';\nimport { releaseProxy, wrap } from 'comlink';\nimport nodeEndpoint from 'comlink/dist/umd/node-adapter';\nimport { Worker } from 'worker_threads';\n\n\nexport type SparqlQueryFunction = (query: string, mimetype: string) => Promise;\n\nexport class CCFDatabaseInstance {\n  readonly status = new CCFDatabaseStatusTracker(this.database);\n\n  constructor(public database: CCFDatabase, public sparqlQuery: SparqlQueryFunction, public dispose: () => Promise) { }\n}\n\nexport async function createCCFDatabaseWorker(options: CCFDatabaseOptions): Promise {\n  const worker = new Worker('./projects/ccf-api/ccf-database.worker.js', { workerData: { options } });\n  const dbWorker = wrap(nodeEndpoint(worker));\n  return new CCFDatabaseInstance(\n    dbWorker.database as unknown as CCFDatabase,\n    dbWorker.sparqlQuery,\n    async () => {\n      dbWorker[releaseProxy]();\n      await worker.terminate();\n    });\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CacheOptions.html":{"url":"interfaces/CacheOptions.html","title":"interface - CacheOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CacheOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-api/src/lib/middleware/response-cache.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            max\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxAge\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxAge:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestHandler } from 'express';\nimport { AutoPruneLRUCache } from '../utils/auto-prune-lru-cache';\n\n\nexport interface CacheOptions {\n  max?: number;\n  maxAge?: number;\n}\n\n\nfunction parseBoolean(value: unknown, defaultValue = false): boolean {\n  if (value === undefined) {\n    return defaultValue;\n  }\n\n  return `${value}`.toLowerCase() === 'true';\n}\n\n\nexport function cacheResponses(options?: CacheOptions): RequestHandler {\n  const cache = new AutoPruneLRUCache({\n    max: 100,\n    maxAge: 60 * 60 * 1000,\n    ...options\n  });\n\n  return (req, res, next) => {\n    const { query, originalUrl, url } = req;\n    const useCache = parseBoolean(query.cache, true);\n    const key = `__${ originalUrl || url }`;\n    const cachedResponse = cache.get(key);\n\n    if (!useCache) {\n      next();\n    } else if (cachedResponse !== undefined) {\n      res.json(cachedResponse);\n    } else {\n      const originalSend = res.json;\n      res.json = body => {\n        cache.set(key, body);\n        return originalSend.call(res, body);\n      };\n\n      next();\n    }\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatabaseCacheOptions.html":{"url":"interfaces/DatabaseCacheOptions.html","title":"interface - DatabaseCacheOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DatabaseCacheOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-api/src/lib/middleware/database-loader.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            max\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            maxAge\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        max\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxAge\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxAge:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CCFDatabaseOptions } from 'ccf-database';\nimport { Request, RequestHandler } from 'express';\n\nimport { AutoPruneLRUCache } from '../utils/auto-prune-lru-cache';\nimport { CCFDatabaseInstance, createCCFDatabaseWorker } from '../utils/ccf-database-worker';\nimport { RequestCache } from '../utils/request-cache';\n\n\nexport interface DatabaseCacheOptions {\n  max?: number;\n  maxAge?: number;\n}\n\nexport interface DatabaseLoaderOptions {\n  database: CCFDatabaseOptions;\n  cache?: DatabaseCacheOptions;\n}\n\ntype DatabaseGetter = (token?: string) => Promise;\n\nexport async function getDatabaseInstance(req: Request, token: string | undefined, doConnect = false): Promise {\n  const getDBInstance = req['getDatabase'] as DatabaseGetter;\n  const dbInstance = await getDBInstance(token);\n  if (doConnect) {\n    await dbInstance.database.connect().catch((err) => console.log(err));\n  }\n  return dbInstance;\n}\n\nfunction selectToken(token: string | undefined, req: Request): string {\n  const qtoken = req.query.token;\n\n  if (token) {\n    return token;\n  } else if (typeof qtoken === 'string' && qtoken) {\n    return qtoken;\n  }\n\n  return '';\n}\n\nfunction createDatabase(token: string, options: CCFDatabaseOptions): Promise {\n  // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n  const hubmapToken = token || options.hubmapToken || undefined;\n\n  return createCCFDatabaseWorker({\n    ...options,\n    hubmapDataUrl: '', // Do not use deprecated internal hubmap data loading\n    dataSources: options.dataSources.map(s =>\n      hubmapToken && typeof s === 'string' && s.endsWith('hubmap/rui_locations.jsonld') ? `${s}?token=${hubmapToken}` : s\n    )\n  });\n}\n\nexport function databaseLoader(options: DatabaseLoaderOptions): RequestHandler {\n  const cache = new RequestCache(\n    new AutoPruneLRUCache({\n      max: 10,\n      maxAge: 60 * 60 * 1000,\n      dispose: (_key, instance) => instance.then((r) => r.dispose()),\n      ...options.cache\n    }),\n    token => createDatabase(token, options.database)\n  );\n\n  return (req, _res, next) => {\n    req['getDatabase'] = (token?: string) => cache.get(selectToken(token, req));\n    next();\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatabaseLoaderOptions.html":{"url":"interfaces/DatabaseLoaderOptions.html","title":"interface - DatabaseLoaderOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DatabaseLoaderOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-api/src/lib/middleware/database-loader.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            cache\n                                        \n                                \n                                \n                                        \n                                            database\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cache\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cache:         DatabaseCacheOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DatabaseCacheOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        database:     CCFDatabaseOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CCFDatabaseOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CCFDatabaseOptions } from 'ccf-database';\nimport { Request, RequestHandler } from 'express';\n\nimport { AutoPruneLRUCache } from '../utils/auto-prune-lru-cache';\nimport { CCFDatabaseInstance, createCCFDatabaseWorker } from '../utils/ccf-database-worker';\nimport { RequestCache } from '../utils/request-cache';\n\n\nexport interface DatabaseCacheOptions {\n  max?: number;\n  maxAge?: number;\n}\n\nexport interface DatabaseLoaderOptions {\n  database: CCFDatabaseOptions;\n  cache?: DatabaseCacheOptions;\n}\n\ntype DatabaseGetter = (token?: string) => Promise;\n\nexport async function getDatabaseInstance(req: Request, token: string | undefined, doConnect = false): Promise {\n  const getDBInstance = req['getDatabase'] as DatabaseGetter;\n  const dbInstance = await getDBInstance(token);\n  if (doConnect) {\n    await dbInstance.database.connect().catch((err) => console.log(err));\n  }\n  return dbInstance;\n}\n\nfunction selectToken(token: string | undefined, req: Request): string {\n  const qtoken = req.query.token;\n\n  if (token) {\n    return token;\n  } else if (typeof qtoken === 'string' && qtoken) {\n    return qtoken;\n  }\n\n  return '';\n}\n\nfunction createDatabase(token: string, options: CCFDatabaseOptions): Promise {\n  // eslint-disable-next-line @typescript-eslint/prefer-nullish-coalescing\n  const hubmapToken = token || options.hubmapToken || undefined;\n\n  return createCCFDatabaseWorker({\n    ...options,\n    hubmapDataUrl: '', // Do not use deprecated internal hubmap data loading\n    dataSources: options.dataSources.map(s =>\n      hubmapToken && typeof s === 'string' && s.endsWith('hubmap/rui_locations.jsonld') ? `${s}?token=${hubmapToken}` : s\n    )\n  });\n}\n\nexport function databaseLoader(options: DatabaseLoaderOptions): RequestHandler {\n  const cache = new RequestCache(\n    new AutoPruneLRUCache({\n      max: 10,\n      maxAge: 60 * 60 * 1000,\n      dispose: (_key, instance) => instance.then((r) => r.dispose()),\n      ...options.cache\n    }),\n    token => createDatabase(token, options.database)\n  );\n\n  return (req, _res, next) => {\n    req['getDatabase'] = (token?: string) => cache.get(selectToken(token, req));\n    next();\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GtexTissue.html":{"url":"interfaces/GtexTissue.html","title":"interface - GtexTissue","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GtexTissue\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            mappedInHubmap\n                                        \n                                \n                                \n                                        \n                                            rnaSeqSampleSummary\n                                        \n                                \n                                \n                                        \n                                            tissueSiteDetailId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mappedInHubmap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mappedInHubmap:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rnaSeqSampleSummary\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rnaSeqSampleSummary:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tissueSiteDetailId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tissueSiteDetailId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CCFDatabaseOptions } from 'ccf-database';\nimport { RequestHandler } from 'express';\nimport { readFileSync } from 'fs';\nimport fetch from 'node-fetch';\n\nimport { AutoPruneLRUCache } from '../../../utils/auto-prune-lru-cache';\nimport { RequestCache } from '../../../utils/request-cache';\nimport { JsonLdObj } from 'jsonld/jsonld-spec';\nimport { get } from '../../../environment';\n\nexport interface GtexTissue {\n  // NOTE: The API response includes more fields, but we only map the ones we actually use here\n  tissueSiteDetailId: string;\n  mappedInHubmap: boolean;\n  rnaSeqSampleSummary: {\n    totalCount: number;\n    female: {\n      ageMax: number;\n      ageMin: number;\n      ageMean: number;\n      count: number;\n    };\n    male: {\n      ageMax: number;\n      ageMin: number;\n      ageMean: number;\n      count: number;\n    };\n  };\n}\n\nconst DEFAULT_GTEX_RUI_LOCATIONS = 'projects/ccf-eui/src/assets/gtex/data/rui_locations.jsonld';\nconst GTEX_API_URL = 'https://gtexportal.org/api/v2/tissueSiteDetail';\n\nasync function getLocations(): Promise {\n  try {\n    const source = get('GTEX_RUI_LOCATIONS', DEFAULT_GTEX_RUI_LOCATIONS);\n    // Attempt to load the source url as a local file\n    const data = readFileSync(source, { encoding: 'utf-8' });\n    const jsonld: JsonLdObj = JSON.parse(data);\n    const results = jsonld['@graph'] as JsonLdObj[];\n\n    const response: GtexTissue[] = await fetch(GTEX_API_URL).then(r => r.json());\n    const mappedEntries = response.filter(entry => entry.mappedInHubmap);\n    for (const tissue of mappedEntries) {\n      updateEntry(results, tissue, 'Female');\n      updateEntry(results, tissue, 'Male');\n    }\n\n    return jsonld;\n  } catch (_error) {\n    return undefined;\n  }\n}\n\nexport function updateEntry(resultsList: JsonLdObj[], tissueInfo: GtexTissue, sex: 'Male' | 'Female'): void {\n  const matchingEntry = resultsList.find(entry => entry['@id']?.includes(tissueInfo.tissueSiteDetailId) && (entry.label as string).includes(sex));\n  if (matchingEntry) {\n    const index = resultsList.indexOf(matchingEntry);\n    const sexStats = sex === 'Male' ? tissueInfo.rnaSeqSampleSummary.male : tissueInfo.rnaSeqSampleSummary.female;\n    resultsList[index].label = `${sex}s (n=${sexStats.count}) Mean Age ${sexStats.ageMean} (range ${sexStats.ageMin} - ${sexStats.ageMax})`;\n    resultsList[index].sex = sex;\n  }\n}\n\nexport function ruiLocations(): RequestHandler {\n  const cache = new RequestCache(\n    new AutoPruneLRUCache({\n      max: 10,\n      maxAge: 60 * 60 * 1000\n    }),\n    getLocations\n  );\n\n  return async (req, res, _next) => {\n    const options: CCFDatabaseOptions = req.app.get('database-options');\n    const rawToken = req.query.token;\n    const token = typeof rawToken === 'string' ? rawToken : '';\n    const result = await cache.get(token, options);\n\n    if (result) {\n      res.json(result);\n    } else {\n      res.status(500).json([]);\n    }\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestCache.html":{"url":"classes/RequestCache.html","title":"class - RequestCache","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestCache\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ccf-api/src/lib/utils/request-cache.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                    Private\n                                    Async\n                                handleErrors\n                            \n                            \n                                    Private\n                                    Async\n                                promisifiedDoRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cache: LRUCache>, doRequest: (key: K,args: []) => void)\n                    \n                \n                        \n                            \n                                Defined in projects/ccf-api/src/lib/utils/request-cache.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                    LRUCache>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        doRequest\n                                                  \n                                                        \n                                                                        function\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: K, ...args: [])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-api/src/lib/utils/request-cache.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        handleErrors\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleErrors(key: K, request: Promise)\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-api/src/lib/utils/request-cache.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            Promise\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        promisifiedDoRequest\n                        \n                    \n                \n            \n            \n                \n                    \n                    promisifiedDoRequest(key: K, ...args: [])\n                \n            \n\n\n            \n                \n                    Defined in projects/ccf-api/src/lib/utils/request-cache.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                            K\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            []\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import LRUCache from 'lru-cache';\n\n\nexport class RequestCache {\n  constructor(\n    readonly cache: LRUCache>,\n    readonly doRequest: (key: K, ...args: unknown[]) => V | Promise\n  ) { }\n\n  get(key: K, ...args: unknown[]): Promise {\n    const { cache } = this;\n    let result = cache.get(key);\n\n    if (!result) {\n      result = this.promisifiedDoRequest(key, ...args);\n      cache.set(key, result);\n      this.handleErrors(key, result);\n    }\n\n    return result;\n  }\n\n  private async promisifiedDoRequest(key: K, ...args: unknown[]): Promise {\n    return this.doRequest(key, ...args);\n  }\n\n  private async handleErrors(key: K, request: Promise): Promise {\n    const { cache } = this;\n\n    try {\n      await request;\n    } catch (_error) {\n      if (cache.get(key) === request) {\n        cache.del(key);\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nChangelog for the Common Coordinate Framework (CCF) User Interfaces\n3.3.0 - 2022-06-17\n\nAdded support for the latest CCF Ontology v1.9.0 which adds Placenta, Spinal Cord, new Landmarks for reference organs, and a host of data updates.\nAdded a SPARQL route to the CCF-API for flexible querying of the Ontology and linked data. See the /v1/sparql docs for more information.\nClean up and bug fixes\n\n3.2.0 - 2022-04-14\nAdded in 3.2.0\n\nMajor CCF Database speed improvements! 95% reduction in load times!\nMinor graphical fixes\n\n3.1.1 - 2022-04-12\nAdded in 3.1.1\n\nExpanded RUI web component options\nAdded support for warming up the CCF database via the CCF-API so that the EUI can prevent timeouts\n\n3.1.0 - 2022-04-07\nAdded in 3.1.0\n\nAdded support for the latest CCF Ontology v1.8.0 which adds cell types\nAdded feature to search for tissue blocks by cell type\nAdded API feature to dynamically generate GTEx rui_locations.jsonld\nAdded logging of organ and block position changes to the RUI\nAdded an expanded organ selector that makes selecting organs much easier with the larger number of reference organs we have now\nNow generating programming libraries for the CCF-API in Python, TypeScript, TypeScript (Angular), and JavaScript. We will be publishing them to appropriate package managers soon.\nImproved performance of the CCF-API\nNew theming options and toggle for the CCF EUI/RUI\nAdded new themes for SenNet, GTEx, and a default theme\nAdded compodoc generated code documentation to production and staging builds\nBug fixes and minor improvements\n\n3.0.0 - 2022-01-27\nAdded in 3.0.0\n\nAdded support for the latest CCF Ontology v1.7.0\nBug fixes and code cleanup\n\n3.0.0 BETA - 2021-12-17\nAdded in 3.0.0 BETA\n\nAdded reference organs and ASCT+B tables from the v1.1 CCF Release\nLinks: CCF Ontology v1.7 BETA, CCF Release v1.1\n\n\n\nKnown issues in 3.0.0 BETA\n\nPreviously registered tissues may appear slightly off. We are working to rectify this before making it a production release.\n\n2.5.0 - 2021-12-17\nAdded in 2.5.0\n\nCCF-API OpenAPI Spec and implementation. Next version will connect the EUI to this as it's backend.\nAdded the CCF Body UI Web Component for integrating the 3D scene deeply in webpages (including the HuBMAP data portal).\nThe organ-info Web Component can now take an option to highlight specific blocks in the scene. Currently only highlights by providers, but age, sex, and BMI will be added in the next version.\nBug fixes and Quality of Life improvements\n\n2.4.0 - 2021-12-10\nAdded in 2.4.0\n\nRUI shows a confirmation dialog when a user attempts to leave without finishing registration\nAdded GTEx data to EUI\nRUI Common Extraction Sites are now known as Landmarks\nOrgan info now highlights the block selected on click\nUpdated RUI YouTube Demo link\nBug fixes and Quality of Life improvements\n\n2.3.1 - 2021-09-13\nAdded in 2.3.1\n\nAdded support for paired organs to be refernced by their parent (ala Kidney + Left/Right Kidney)\n\n2.3.0 - 2021-09-10\nAdded in 2.3.0\n\nGreatly improved CCF Database performance. This improves the performance in both organ-info and EUI.\nImproved styling of organ-info\n\n2.2.0 - 2021-09-10\nAdded in 2.2.0\n\nAdded an organ-info web component for displaying reference organs and associated data in a simple panel display. The hubmap portal will be using this soon for organ pages.\nEMBEDDING.md instructions have been updated for organ-info embedding.\n\n2.1.0 - 2021-07-30\nAdded in EUI / RUI 2.1.0\n\nBetter support for embedding EUI/RUI in different containers, see EMBEDDING.md for updated instructions.\nConfiguration updates:\nConfiguration of EUI/RUI via webcomponent properties (vs globalConfig)\nOptional use of ontology id to select reference organs in the RUI\nRemoved embedded and tutorial mode configurations from the RUI config\nAbility to load data sources in the eui via external configuration\nAdded cancelRegistration callback to rui external configuration\n\n\nSet dark/light theme based on user/OS preferences\nUpdate HuBMAP search processing to conform to new field names\nCode cleanup, shared utilities, etc.\nTelemetry dialog box fixes to avoid unnecessary reloads\nRUI gizmo rotates in sync with the reference organ in 3D preview view\nRUI now uses an orthographic view when in registration views\n\n2.0.0 - 2021-07-16\nAdded in EUI / RUI 2.0.0\n\nRUI and EUI are now basic web-components, see EMBEDDING.md\nAdded advanced google analytics tracking/telemetry\nLinked donor card and tissue block hovering\nUpdated dependencies, including upgrading to Angular 12\nMinor UI and Bug fixes\nUpdated demo video links\nOrgan carousel will respond to container width and show only full icons\nEUI: clicking refresh and selecting body on partonomy resets the body view\n\nBreaking changes in EUI / RUI 2.0.0\n\nEmbedding the EUI and RUI must now be done via web-components. The most significant change is the element is no longer called ccf-root but is instead called ccf-eui or ccf-rui depending on the UI being embedded.\n\n1.7.0 - 2021-05-21\nAdded in EUI / RUI 1.7.0\n\nAdded a startup modal to the RUI which simplifies the initial setup for a new registration\nAdded 8 new reference organs, bringing us to 13 Reference Organs!\nAdded SPARC Registrations to the EUI\nAdded a tissue section visualization to the results list in the EUI\n\n1.6.0 - 2021-04-09\nAdded in RUI 1.6.0\n\nAdded SOP information to the About section\n\nAdded in EUI 1.6.0\n\nAdded color assignment/selection to both 3d scene and list results\nBug fixes, code cleanup, and optimization\n\nKnown issues in 1.6.0\n\nThe 3d scene is a little slow. To be able to interact, unselect reference organs to reduce scene complexity.\nTissue samples may be a little off in the 3D scene. This will be fixed in a future release. Data is still accurate.\n\n1.5.0 - 2021-03-26\nAdded in RUI 1.5.0\n\nMinor styling updates\n\nAdded in EUI 1.5.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features not fully integrated. This should be resolved in the next release scheduled for April 9th. You can view the results of this sprint on staging.\n\nUpdated styling to better fit the user interface spec\nAdded a new results pane which structures data into Donor->Tissue Blocks (+Datasets)->Tissue Samples (+Datasets)\nAdded a link viewer that allows us to display donors, samples, and datasets in a frame within the application\nAdded UFL thumbnails\nUpdated and optimized the ccf-database for the new results structure and future integrations\nTied organ carousel to the 3D scene. Turning off an organ removes the organ and related tissues from the 3D scene.\nTurned off anatomical structure opacity adjustment until it can be fully integrated\n\n1.4.0 - 2021-03-12\nAdded in RUI 1.4.0\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec\n\nAdded in EUI 1.4.0\nNOTE: EUI will not be pushed to production during this cycle as there are some features partly integrated. This should be resolved in the next release scheduled for March 26th. You can view the results of this sprint on staging.\n\nUpdated library dependencies, including to Angular 11\nUpdated styling to better fit the user interface spec and match RUI styling\nUpdated the Info Dialog to match the RUI look and feel\nUpdated the data processing to improve efficiency and generate data in the form needed for the v1.5.0 spec\nAdded a reference organ selector, also used in the RUI, to turn off/on reference organs on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\nAdded a technology filter\nAdded a control to set Opacities of individual organs/anatomical structures on the stage. UI is implemented, but still needs hooked up to the 3d Stage.\n\n1.3.5 - 2021-02-26\nAdded in RUI 1.3.5\n\nUpdated with a new round of User Interface improvements\nAdded the ability to upload previous registrations created using the standalone version of the RUI tool\nOrgans now have transparency applied automatically\nSolved a major memory leak and performance issue with the 3D reference organ interface. You should notice a sizable speed and reliability increase.\nRUI location numeric data is now rounded to 3 digits\nSwitched to using GitHub Actions over TravisCI for our CI/CD workflows\n\nAdded in EUI 1.3.5\n\nRemoved CCF's internal image-viewer in favor of the image-viewer on the HuBMAP Data Portal\n\nEUI 1.2.0 / RUI 1.0 FINAL - 2020-10-30\nAdded in EUI 1.2.0 / RUI 1.0 FINAL\n\nBug fixes and improvements\nUpdated embedding API in collaboration with the IEC\nUpdated EUI codebase to be in sync with code changes made for the RUI\nAdded KPMP data to the EUI\n\nKnown Issues in EUI 1.2.0 / RUI 1.0 FINAL\n\nIt is still possible that a 3d organ may fail to load. If this happens, just refresh and try again.\nEUI has not been updated with the latest organ set. This will be added in December with its scheduled refresh.\n\nRUI 1.0 BETA - 2020-10-16\nAdded in RUI 1.0 BETA\n\nCreated the first version of the RUI 1.0. This version is a BETA and works in standalone mode only. The next version will include full support and integration into the HuBMAP Ingestion Portal.\n10 Reference Organs are available to choose from (a combination of 4 organs, 2 sexes, and one organ with 2 sides [kidney])\nImplemented automatic tagging of data via collisions with anatomical structures\nRUI Location data is in standard JSON-LD format linked via the CCF Ontology and related ontologies\nImplemented extraction sites display to help guide placement of tissues\n\nKnown Issues in RUI 1.0 BETA\n\nWhile support for embedding is implemented, more testing and collaboration with IEC is required before it is made fully available. Initial embedding documentation is available here.\nWhen adjusting transparency via the left-hand Anatomical Structures menu or Show Previous Registrations option, the transparency effect is not very good. This will be addressed before the RUI 1.0 production release.\nSometimes the 3d organ fails to load when clicking through reference organs quickly (and other side cases). If this happens, just refresh and try again.\n\n1.1.0 - 2020-07-31\nAdded in 1.1.0\n\nUpgraded to latest Vitessce Image Viewer and started showing processed TIFF images coming directly from the HuBMAP infrastructure\nProcessed CODEX and 10x datasets are shown in the HuBMAP Portal's visualization tool\nAdded a limited set of TIFF image thumbnails, with more to come\nAdded two qualitative color schemes for colorizing images in the image viewer\nBug fixes/performance optimizations\n\n1.0.0-rc.1 - 2020-06-22\n\n:warning: WARNING: This version is a release candidate. Some minor updates will likely happen between now and the official HuBMAP Data Release 1 in July.\n\nAdded in 1.0.0-rc.1\n\nBody UI interactions\nImage Viewer Integration\nPartonomy linkage to search / Body UI\nNow fully integrated into the HuBMAP Portal\n\nKnown Issues in 1.0.0-rc.1\n\nImage Viewer is using a placeholder .tiff until more .tiff images can be loaded from the IEC\n\n1.0.0-alpha.3 - 2019-05-08\nAdded in 1.0.0-alpha.3\n\nHooked up the interface to real data (not shown online as the data is not public yet)\nAdded the Tissue Browser on the right\nAdded the initial (Tissue) Image Viewer popup. Currently shows metadata, but no images yet.\nAdded an initial 3D Body. Tissues cuboids currently not displayed, but a test cuboid is shown.\nDocumentation (>90%) and testing coverage improved further\n\n1.0.0-alpha.2 - 2019-03-27\nAdded in 1.0.0-alpha.2\n\nIncreased documentation and testing coverage across the board\nAdded fullscreen button\nBug fixes and optimizations\n\n1.0.0-alpha.1 - 2019-03-06\nAdded in 1.0.0-alpha.1\n\nStarted the process of implementing the 1.0.0 UI spec\nSpec Doc\nUser Stories\n\n\nSetup the base project scaffolding for the new version\nAdded CCF Partonomy (CCF-P) search and tree display\nAdded a filter for filter tissues\n\n0.6.0 - 2019-11-08\nAdded in 0.6.0\n\nThe CCF API project was started with an initial OpenAPI Schema, documentation, and code for spinning up a mock data server. This codifies the CCF data and metadata standards defined by MC-IU and will be used by the CCF EUI and RUI.\nIn preparation for future developments, we added a hidden, alpha-level 3d organ viewer. You can toggle this on and off in the organ view, by typing 3d with your keyboard.\nUpdated navigation to directly jump to the tissue browser when a user selects an item from the search box\nUpgraded dependencies, including upgrades to Angular 8\nTesting and bug fixes\nMinor UI updates\nChanged download icon color\nChanged the background color for the search\nMoved the Technologies filter above ontology\nAdditional styles for details button\n\n\n\n0.5.0 - 2019-05-24\nAdded in 0.5.0\n\nDisplay of the CCF ontology, integrated with search\nSemantic search by ontology, results are presented at all levels\nTissue overlays showing regions of interest\nData download links to direct users to https://sampledata.hubmapconsortium.org\nData documentation (95% coverage) and testing (85% coverage)\n\n0.2.0 - 2019-05-03\nAdded in 0.2.0\n\nSprint 2 release of the CCF-UI!\nA search interface was added to query data by age, sex, technology and TMC. Ontological search will be implemented in the next sprint.\nBody, Organ, and Tissue views now respond to updates to the search on the fly\nAppropriate metadata is now displayed in the Body, Organ, Tissue, and Cell views\n\n0.1.0 - 2019-04-12\nAdded in 0.1.0\n\nSprint 1 release of the CCF-UI!\nSetup the base project scaffolding\nAdded a sample database that includes initial data provided by VU\nAdded Visual browsing of tissue samples and metadata at the whole body, organ, tissue, and cell level\nStay tuned! More features coming in Sprint 2 (starts next week!) and Sprint 3\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ccf-api/src/lib/app.ts\n            \n            interface\n            AppOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/app.ts\n            \n            function\n            createApp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            get\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            get\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            get\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            get\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            getBoolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            getNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            getNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            getNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            has\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            isDebug\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            parseBoolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            function\n            parseNumber\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            variable\n            env\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/environment.ts\n            \n            variable\n            THROW_IF_NOT_FOUND\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/database-loader.ts\n            \n            interface\n            DatabaseCacheOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/database-loader.ts\n            \n            interface\n            DatabaseLoaderOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/database-loader.ts\n            \n            function\n            createDatabase\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/database-loader.ts\n            \n            function\n            databaseLoader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/database-loader.ts\n            \n            function\n            getDatabaseInstance\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/database-loader.ts\n            \n            function\n            selectToken\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/response-cache.ts\n            \n            interface\n            CacheOptions\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/response-cache.ts\n            \n            function\n            cacheResponses\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/middleware/response-cache.ts\n            \n            function\n            parseBoolean\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/polyfills.ts\n            \n            function\n            patchGlobal\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/browser.ts\n            \n            variable\n            browserRoute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/browser.ts\n            \n            variable\n            openApiRoute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/browser.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/database-status.ts\n            \n            function\n            getDatabaseStatus\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/database-status.ts\n            \n            function\n            parseString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/get-spatial-placement.ts\n            \n            function\n            getSpatialPlacement\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/get-spatial-placement.ts\n            \n            function\n            parseString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/index.ts\n            \n            variable\n            checkRoutesEnabled\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/index.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n            \n            interface\n            GtexTissue\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n            \n            function\n            getLocations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n            \n            function\n            ruiLocations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n            \n            function\n            updateEntry\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n            \n            variable\n            DEFAULT_GTEX_RUI_LOCATIONS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n            \n            variable\n            GTEX_API_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/hubmap/index.ts\n            \n            variable\n            checkRoutesEnabled\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/hubmap/index.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/hubmap/rui-locations.ts\n            \n            function\n            getLocations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/hubmap/rui-locations.ts\n            \n            function\n            ruiLocations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/index.ts\n            \n            variable\n            routes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/reference-organ-scene.ts\n            \n            function\n            getReferenceOrganSceneHandler\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/reference-organ-scene.ts\n            \n            function\n            parseString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/sparql.ts\n            \n            function\n            parseString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/sparql.ts\n            \n            function\n            sparql\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/forward-database-query.ts\n            \n            function\n            forwardDatabaseQuery\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            clamp\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            parseArray\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            parseMinMaxRange\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            parseRange\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            parseSex\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            parseSpatial\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            processParameter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            queryParametersToFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            function\n            setIfDefined\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n            \n            variable\n            FILTER_DEFAULTS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/use-cached-result.ts\n            \n            function\n            useCachedResult\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/routes/v1/utils/use-cached-result.ts\n            \n            variable\n            CACHE_DIR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/server.ts\n            \n            function\n            getCacheOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/server.ts\n            \n            function\n            getDatabaseOptions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/server.ts\n            \n            function\n            getPort\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/server.ts\n            \n            function\n            loadDatabaseSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/server.ts\n            \n            function\n            parseDatabaseSources\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/server.ts\n            \n            function\n            startServer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/server.ts\n            \n            function\n            tryJsonParse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/utils/auto-prune-lru-cache.ts\n            \n            variable\n            methods\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/utils/auto-prune-lru-cache.ts\n            \n            variable\n            mutableProperties\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/utils/auto-prune-lru-cache.ts\n            \n            variable\n            readonlyProperties\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/utils/ccf-database-worker.ts\n            \n            class\n            CCFDatabaseInstance\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/utils/ccf-database-worker.ts\n            \n            function\n            createCCFDatabaseWorker\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ccf-api/src/lib/utils/request-cache.ts\n            \n            class\n            RequestCache\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular-ru/common : ^15.126.1\n        \n            @angular/animations : ^12.1.1\n        \n            @angular/cdk : ^12.1.1\n        \n            @angular/common : ^12.1.1\n        \n            @angular/compiler : ^12.1.1\n        \n            @angular/core : ^12.1.1\n        \n            @angular/elements : ^12.1.1\n        \n            @angular/forms : ^12.1.1\n        \n            @angular/material : ^12.1.3\n        \n            @angular/platform-browser : ^12.1.1\n        \n            @angular/platform-browser-dynamic : ^12.1.1\n        \n            @angular/router : ^12.1.1\n        \n            @angular/youtube-player : ^12.1.1\n        \n            @comunica/query-sparql-rdfjs : ^2.2.0\n        \n            @deck.gl/core : ^8.5.7\n        \n            @deck.gl/geo-layers : ^8.7.8\n        \n            @deck.gl/layers : ^8.5.7\n        \n            @deck.gl/mesh-layers : ^8.5.7\n        \n            @loaders.gl/core : ^3.0.12\n        \n            @loaders.gl/draco : ^3.0.12\n        \n            @loaders.gl/gltf : ^3.0.12\n        \n            @luma.gl/core : ^8.5.12\n        \n            @math.gl/core : ^3.5.5\n        \n            @math.gl/culling : ^3.5.7\n        \n            @ngxs-labs/data : ^6.2.0\n        \n            @ngxs-labs/dispatch-decorator : ^4.0.2\n        \n            @ngxs/logger-plugin : ^3.7.1\n        \n            @ngxs/storage-plugin : ^3.7.1\n        \n            @ngxs/store : ^3.7.3\n        \n            @rdfjs/data-model : ^1.2.0\n        \n            @types/lru-cache : \n        \n            @webcomponents/webcomponentsjs : ^2.5.0\n        \n            bind-decorator : ^1.0.11\n        \n            body-parser : ^1.19.0\n        \n            cannon-es : ^0.18.0\n        \n            comlink : ^4.3.0\n        \n            concat : ^1.0.3\n        \n            cors : ^2.8.5\n        \n            css-element-queries : ^1.2.3\n        \n            document-register-element : ^1.7.2\n        \n            dotenv : ^16.0.0\n        \n            express : ^4.17.1\n        \n            file-saver : ^2.0.5\n        \n            fs-extra : ^10.0.0\n        \n            graphology : ^0.20.0\n        \n            graphology-shortest-path : ^1.4.1\n        \n            helmet : ^4.6.0\n        \n            hex-rgb : ^5.0.0\n        \n            idb-keyval : ^6.0.1\n        \n            jsonld : ^5.2.0\n        \n            lodash : ^4.17.21\n        \n            lru-cache : \n        \n            n3 : ^1.16.0\n        \n            ng5-slider : ^1.2.6\n        \n            ngx-google-analytics : ^11.2.1\n        \n            ngx-markdown : ^12.0.1\n        \n            node-fetch : ^2.6.7\n        \n            qs : ^6.10.2\n        \n            rdf-literal : ^1.2.0\n        \n            rdfxml-streaming-parser : ^1.4.0\n        \n            readable-stream : ^3.6.0\n        \n            rxjs : ^6.6.7\n        \n            stream-browserify : ^3.0.0\n        \n            swiper : ^6.5.1\n        \n            ts-cacheable : ^1.0.6\n        \n            tslib : ^2.1.0\n        \n            uuid : ^8.3.2\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nCommon Coordinate Framework (CCF) - User Interfaces\n\n\n\n\n\n\n\nThis repository is a monorepo (multiple projects in one repository) containing the software to build the CCF-EUI, CCF-RUI, and CCF-Organ-Info.\nWebsite Links\n\nCCF Exploration User Interface (CCF-EUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app\nProduction: https://portal.hubmapconsortium.org/ccf-eui\nProduction (alt): https://hubmapconsortium.github.io/ccf-ui/\nStaging: https://hubmap-ccf-ui.netlify.app/\nOld Version 0.6.0: https://old--hubmap-ccf-ui.netlify.app\n\n\nCCF Registration User Interface (CCF-RUI)\n:star2: 4.0 BETA: https://beta--hubmap-ccf-ui.netlify.app/rui/\nProduction: https://hubmapconsortium.github.io/ccf-ui/rui/\nStaging: https://hubmap-ccf-ui.netlify.app/rui/\n\n\nCCF Organ Info Component (CCF-Organ-Info)\nProduction: https://hubmapconsortium.github.io/ccf-ui/organ-info/\nStaging: https://hubmap-ccf-ui.netlify.app/organ-info/\n\n\nCCF API\nProduction: https://ccf-api.hubmapconsortium.org\nStaging: https://ccf-api--staging.herokuapp.com\nOpenAPI Specification: ccf-api-spec.yaml\n\n\nCCF API Client Libraries:\nJavaScript:   @ccf-openapi/js-client\nTypeScript:   @ccf-openapi/ts-client\nAngular 12+:  @ccf-openapi/ng-client\nPython 3.6+:  ccf-openapi\n\n\n\nBackground and More Information\nFor more information about the Common Coordinate Framework (CCF), see the HuBMAP CCF Portal at https://hubmapconsortium.github.io/ccf/.\nChange Log\nSee the ChangeLog for the latest developments.\nCredits\nThis software is developed by the Cyberinfrastructure for Network Science Center at Indiana University. It is funded by NIH Award OT2OD026671.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2019 HuBMAP Consortium\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AnyAutoPruneLRUCache   (projects/.../auto-prune-lru-cache.ts)\n                        \n                        \n                            DatabaseGetter   (projects/.../database-loader.ts)\n                        \n                        \n                            DatabaseGetter   (projects/.../database-status.ts)\n                        \n                        \n                            DatabaseQueryMethods   (projects/.../forward-database-query.ts)\n                        \n                        \n                            DatabaseSource   (projects/.../server.ts)\n                        \n                        \n                            DatabaseSources   (projects/.../server.ts)\n                        \n                        \n                            GlobalThis   (projects/.../polyfills.ts)\n                        \n                        \n                            PickByType   (projects/.../forward-database-query.ts)\n                        \n                        \n                            SparqlQueryFunction   (projects/.../ccf-database-worker.ts)\n                        \n                        \n                            ThrowIndicator   (projects/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-api/src/lib/utils/auto-prune-lru-cache.ts\n    \n    \n        \n            \n                \n                    \n                    AnyAutoPruneLRUCache\n                \n            \n            \n                \n                        AutoPruneLRUCache\n\n                \n            \n        \n    \n    projects/ccf-api/src/lib/middleware/database-loader.ts\n    \n    \n        \n            \n                \n                    \n                    DatabaseGetter\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-api/src/lib/routes/v1/database-status.ts\n    \n    \n        \n            \n                \n                    \n                    DatabaseGetter\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-api/src/lib/routes/v1/utils/forward-database-query.ts\n    \n    \n        \n            \n                \n                    \n                    DatabaseQueryMethods\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PickByType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/ccf-api/src/lib/server.ts\n    \n    \n        \n            \n                \n                    \n                    DatabaseSource\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DatabaseSources\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/ccf-api/src/lib/polyfills.ts\n    \n    \n        \n            \n                \n                    \n                    GlobalThis\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    projects/ccf-api/src/lib/utils/ccf-database-worker.ts\n    \n    \n        \n            \n                \n                    \n                    SparqlQueryFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    projects/ccf-api/src/lib/environment.ts\n    \n    \n        \n            \n                \n                    \n                    ThrowIndicator\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            browserRoute   (projects/.../browser.ts)\n                        \n                        \n                            CACHE_DIR   (projects/.../use-cached-result.ts)\n                        \n                        \n                            checkRoutesEnabled   (projects/.../index.ts)\n                        \n                        \n                            checkRoutesEnabled   (projects/.../index.ts)\n                        \n                        \n                            DEFAULT_GTEX_RUI_LOCATIONS   (projects/.../rui-locations.ts)\n                        \n                        \n                            env   (projects/.../environment.ts)\n                        \n                        \n                            FILTER_DEFAULTS   (projects/.../parse-filter.ts)\n                        \n                        \n                            GTEX_API_URL   (projects/.../rui-locations.ts)\n                        \n                        \n                            methods   (projects/.../auto-prune-lru-cache.ts)\n                        \n                        \n                            mutableProperties   (projects/.../auto-prune-lru-cache.ts)\n                        \n                        \n                            openApiRoute   (projects/.../browser.ts)\n                        \n                        \n                            readonlyProperties   (projects/.../auto-prune-lru-cache.ts)\n                        \n                        \n                            routes   (projects/.../browser.ts)\n                        \n                        \n                            routes   (projects/.../index.ts)\n                        \n                        \n                            routes   (projects/.../index.ts)\n                        \n                        \n                            routes   (projects/.../index.ts)\n                        \n                        \n                            THROW_IF_NOT_FOUND   (projects/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ccf-api/src/lib/routes/browser.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        browserRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RequestHandler\n\n                    \n                \n                \n                    \n                        Default value : (_req, res, _next) => {\n\n  res.send(`\n\n  \n    \n    \n    CCF-API Browser\n\n    \n    \n  \n  \n    \n  \n`);\n\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openApiRoute\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RequestHandler\n\n                    \n                \n                \n                    \n                        Default value : (_req, res, _next) => {\n  const apiFile = resolve('ccf-api-spec.yaml');\n  res.sendFile(apiFile);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Router()\n  .get('/', browserRoute)\n  .get('/ccf-api-spec.yaml', openApiRoute)\n                    \n                \n\n\n        \n    \n\n    projects/ccf-api/src/lib/routes/v1/utils/use-cached-result.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CACHE_DIR\n                        \n                    \n                \n            \n                \n                    \n                        Default value : get('CCF_API_CACHE', 'projects/ccf-api/ccf-cache')\n                    \n                \n\n\n        \n    \n\n    projects/ccf-api/src/lib/routes/v1/gtex/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        checkRoutesEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RequestHandler\n\n                    \n                \n                \n                    \n                        Default value : (_req, _res, next) => {\n  const enabled = env.GTEX_ROUTES === 'true';\n  enabled ? next() : next('router');\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Router()\n  .use(checkRoutesEnabled)\n  .get('/rui_locations.jsonld', ruiLocations())\n                    \n                \n\n\n        \n    \n\n    projects/ccf-api/src/lib/routes/v1/hubmap/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        checkRoutesEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :     RequestHandler\n\n                    \n                \n                \n                    \n                        Default value : (_req, _res, next) => {\n  const enabled = env.HUBMAP_ROUTES === 'true';\n  enabled ? next() : next('router');\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Router()\n  .use(checkRoutesEnabled)\n  .get('/rui_locations.jsonld', ruiLocations())\n                    \n                \n\n\n        \n    \n\n    projects/ccf-api/src/lib/routes/v1/gtex/rui-locations.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DEFAULT_GTEX_RUI_LOCATIONS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'projects/ccf-eui/src/assets/gtex/data/rui_locations.jsonld'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GTEX_API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://gtexportal.org/api/v2/tissueSiteDetail'\n                    \n                \n\n\n        \n    \n\n    projects/ccf-api/src/lib/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        env\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (() => {\n  config();\n  return process.env;\n})()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        THROW_IF_NOT_FOUND\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Symbol('Indicator that an error should be thrown')\n                    \n                \n\n\n        \n    \n\n    projects/ccf-api/src/lib/routes/v1/utils/parse-filter.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        FILTER_DEFAULTS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Partial\n\n                    \n                \n                \n                    \n                        Default value : {\n  sex: 'Both',\n  ageRange: undefined,\n  bmiRange: undefined,\n  tmc: [],\n  technologies: [],\n  ontologyTerms: [],\n  cellTypeTerms: [],\n  spatialSearches: []\n}\n                    \n                \n\n\n        \n    \n\n    projects/ccf-api/src/lib/utils/auto-prune-lru-cache.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        methods\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  // NOTE: No set method as it is overwritten by AutoPruneLRUCache\n  'has', 'get', 'del', 'peek',\n  'keys', 'values',\n  'forEach', 'rforEach',\n  'prune', 'reset',\n  'dump', 'load'\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mutableProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'lengthCalculator', 'allowStale', 'max', 'maxAge'\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readonlyProperties\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  'length', 'itemCount'\n]\n                    \n                \n\n\n        \n    \n\n    projects/ccf-api/src/lib/routes/v1/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        routes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Router()\n  .use('/db-status', getDatabaseStatus())\n  .post('/get-spatial-placement', getSpatialPlacement())\n  .use('/sparql', sparql())\n  .use(cacheResponses())\n  .use('/hubmap', hubmapRoutes)\n  .use('/gtex', gtexRoutes)\n  .get('/tissue-blocks', forwardDatabaseQuery('getTissueBlockResults'))\n  .get('/technology-names', forwardDatabaseQuery('getDatasetTechnologyNames'))\n  .get('/provider-names', forwardDatabaseQuery('getProviderNames'))\n  .get('/aggregate-results', forwardDatabaseQuery('getAggregateResults'))\n  .get('/ontology-term-occurences', forwardDatabaseQuery('getOntologyTermOccurences'))\n  .get('/cell-type-term-occurences', forwardDatabaseQuery('getCellTypeTermOccurences'))\n  .get('/ontology-tree-model', useCachedResult('ontology-tree-model.json'), forwardDatabaseQuery('getOntologyTreeModel'))\n  .get('/cell-type-tree-model', useCachedResult('cell-type-tree-model.json'), forwardDatabaseQuery('getCellTypeTreeModel'))\n  .get('/reference-organs', useCachedResult('reference-organs.json'), forwardDatabaseQuery('getReferenceOrgans'))\n  .get('/scene', forwardDatabaseQuery('getScene'))\n  .get('/reference-organ-scene', getReferenceOrganSceneHandler())\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
